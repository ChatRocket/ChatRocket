"use strict";(self.webpackChunk_rocket_chat_meteor=self.webpackChunk_rocket_chat_meteor||[]).push([[9096,5768],{"./client/components/connectionStatus/ConnectionStatusBar.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:function(){return connectionStatus_ConnectionStatusBar}});var index_module=__webpack_require__("./node_modules/@rocket.chat/css-in-js/dist/index.module.js"),fuselage=__webpack_require__("./node_modules/@rocket.chat/fuselage/index.js"),dist=__webpack_require__("../../packages/ui-contexts/dist/index.js"),react=__webpack_require__("./node_modules/react/index.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}var _templateObject,getReconnectCountdown=function getReconnectCountdown(retryTime){var timeDiff=retryTime-Date.now();return timeDiff>0&&Math.round(timeDiff/1e3)||0};var connectionStatusBarStyle=(0,index_module.css)(_templateObject||(_templateObject=function _taggedTemplateLiteral(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n\tcolor: ",";\n\tbackground-color: ",";\n\tborder-color: ",";\n\n\tposition: fixed;\n\tz-index: 1000000;\n\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\n\t.rcx-connection-status-bar--wrapper {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tcolumn-gap: 8px;\n\t}\n\t.rcx-connection-status-bar--content {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tcolumn-gap: 8px;\n\t}\n\t.rcx-connection-status-bar--info {\n\t\tcolor: ",";\n\t}\n"])),fuselage.Palette.statusColor["status-font-on-warning"],fuselage.Palette.surface["surface-tint"],fuselage.Palette.statusColor["status-font-on-warning"],fuselage.Palette.text["font-default"]);function ConnectionStatusBar(){var _useConnectionStatus=(0,dist.useConnectionStatus)(),connected=_useConnectionStatus.connected,retryTime=_useConnectionStatus.retryTime,status=_useConnectionStatus.status,reconnect=_useConnectionStatus.reconnect,reconnectCountdown=function useReconnectCountdown(retryTime,status){var reconnectionTimerRef=(0,react.useRef)(),_useState2=_slicedToArray((0,react.useState)((function(){return retryTime?getReconnectCountdown(retryTime):0})),2),reconnectCountdown=_useState2[0],setReconnectCountdown=_useState2[1];return(0,react.useEffect)((function(){if("waiting"!==status)reconnectionTimerRef.current&&clearInterval(reconnectionTimerRef.current),reconnectionTimerRef.current=void 0;else{if(reconnectionTimerRef.current)return;reconnectionTimerRef.current=setInterval((function(){retryTime&&setReconnectCountdown(getReconnectCountdown(retryTime))}),500)}}),[retryTime,status]),(0,react.useEffect)((function(){return function(){reconnectionTimerRef.current&&clearInterval(reconnectionTimerRef.current)}}),[]),reconnectCountdown}(retryTime,status),t=(0,es.Bd)().t;return connected?null:react.createElement(fuselage.Box,{className:connectionStatusBarStyle,"rcx-connection-status-bar":!0,insetBlockStart:0,pb:4,pi:12,width:"100%",borderBlockEndWidth:2,role:"alert",fontScale:"p2"},react.createElement("span",{className:"rcx-connection-status-bar--wrapper"},react.createElement(fuselage.Icon,{name:"warning"}),react.createElement("span",{className:"rcx-connection-status-bar--content"},react.createElement("strong",null,t("meteor_status",{context:status})),["waiting","failed","offline"].includes(status)&&react.createElement("span",{className:"rcx-connection-status-bar--info"},"waiting"===status?t("meteor_status_reconnect_in",{count:reconnectCountdown}):t("meteor_status_try_again_later")))),react.createElement(fuselage.Button,{primary:!0,onClick:reconnect,small:!0,disabled:["connected","connecting"].includes(status)},t("Connect")))}var connectionStatus_ConnectionStatusBar=ConnectionStatusBar;ConnectionStatusBar.__docgenInfo={description:"",methods:[],displayName:"ConnectionStatusBar"}},"./client/components/connectionStatus/ConnectionStatusBar.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Connected:function(){return Connected},Connecting:function(){return Connecting},Failed:function(){return Failed},Offline:function(){return Offline},Waiting:function(){return Waiting},__namedExportsOrder:function(){return __namedExportsOrder}});var _rocket_chat_ui_contexts__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../packages/ui-contexts/dist/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_ConnectionStatusBar__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./client/components/connectionStatus/ConnectionStatusBar.tsx");__webpack_exports__.default={title:"Components/ConnectionStatusBar",component:_ConnectionStatusBar__WEBPACK_IMPORTED_MODULE_3__.default,parameters:{layout:"fullscreen"}};const stateDecorator=value=>fn=>react__WEBPACK_IMPORTED_MODULE_2__.createElement(_rocket_chat_ui_contexts__WEBPACK_IMPORTED_MODULE_0__.ConnectionStatusContext.Provider,{value:value},fn()),Template=()=>react__WEBPACK_IMPORTED_MODULE_2__.createElement(_ConnectionStatusBar__WEBPACK_IMPORTED_MODULE_3__.default,null),Connected=Template.bind({});Connected.decorators=[stateDecorator({connected:!0,status:"connected",retryTime:void 0,reconnect:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("reconnect")})];const Connecting=Template.bind({});Connecting.decorators=[stateDecorator({connected:!1,status:"connecting",retryTime:void 0,reconnect:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("reconnect")})];const Failed=Template.bind({});Failed.decorators=[stateDecorator({connected:!1,status:"failed",retryTime:void 0,reconnect:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("reconnect")})];const Waiting=Template.bind({});Waiting.decorators=[stateDecorator({connected:!1,status:"waiting",retryTime:Date.now()+3e5,reconnect:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("reconnect")})];const Offline=Template.bind({});Offline.decorators=[stateDecorator({connected:!1,status:"offline",retryTime:void 0,reconnect:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.XI)("reconnect")})];const __namedExportsOrder=["Connected","Connecting","Failed","Waiting","Offline"];Connected.parameters={...Connected.parameters,docs:{...Connected.parameters?.docs,source:{originalSource:"() => <ConnectionStatusBar />",...Connected.parameters?.docs?.source}}},Connecting.parameters={...Connecting.parameters,docs:{...Connecting.parameters?.docs,source:{originalSource:"() => <ConnectionStatusBar />",...Connecting.parameters?.docs?.source}}},Failed.parameters={...Failed.parameters,docs:{...Failed.parameters?.docs,source:{originalSource:"() => <ConnectionStatusBar />",...Failed.parameters?.docs?.source}}},Waiting.parameters={...Waiting.parameters,docs:{...Waiting.parameters?.docs,source:{originalSource:"() => <ConnectionStatusBar />",...Waiting.parameters?.docs?.source}}},Offline.parameters={...Offline.parameters,docs:{...Offline.parameters?.docs,source:{originalSource:"() => <ConnectionStatusBar />",...Offline.parameters?.docs?.source}}}}}]);