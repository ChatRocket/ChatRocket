"use strict";(self.webpackChunk_rocket_chat_meteor=self.webpackChunk_rocket_chat_meteor||[]).push([[9885],{"./client/components/ListItem.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ListWithIcon:function(){return ListWithIcon},MixedWithGap:function(){return MixedWithGap},MixedWithoutGap:function(){return MixedWithoutGap},NoIcon:function(){return NoIcon},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return ListItem_stories}});var fuselage=__webpack_require__("./node_modules/@rocket.chat/fuselage/index.js"),react=__webpack_require__("./node_modules/react/index.js"),_excluded=["icon","text","input","children","gap"];var ListItem=function ListItem(_ref){var icon=_ref.icon,text=_ref.text,input=_ref.input,children=_ref.children,gap=_ref.gap,props=function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}(_ref,_excluded);return react.createElement(fuselage.Option,props,icon&&react.createElement(fuselage.OptionIcon,{name:icon}),gap&&react.createElement(fuselage.OptionColumn,null),react.createElement(fuselage.OptionContent,null,text),input&&react.createElement(fuselage.OptionInput,null,input),children&&react.createElement(fuselage.OptionColumn,null,children))},Sidebar_ListItem=ListItem;ListItem.__docgenInfo={description:"",methods:[],displayName:"ListItem",props:{text:{required:!0,tsType:{name:"ReactNode"},description:""},input:{required:!1,tsType:{name:"ReactNode"},description:""},loading:{required:!1,tsType:{name:"boolean"},description:""},children:{required:!1,tsType:{name:"ReactNode"},description:""}}};var ListItem_stories={title:"Components/ListItem",component:fuselage.Tile,parameters:{docs:{description:{component:"`ListItem` can be used on DropDown lists, to render an item with icon and text."}}}};const ListWithIcon=()=>react.createElement(fuselage.Tile,{elevation:"2",p:"0",display:"flex",flexDirection:"column",overflow:"auto",w:"x240"},react.createElement(fuselage.Box,{flexShrink:1,pb:12},react.createElement(fuselage.OptionTitle,null,"Title"),react.createElement(Sidebar_ListItem,{text:"Item 1",icon:"info"}),react.createElement(Sidebar_ListItem,{text:"Item 2",icon:"star"}),react.createElement(Sidebar_ListItem,{text:"Item 3",icon:"hashtag"}),react.createElement(Sidebar_ListItem,{text:"Item 4",icon:"team"}))),NoIcon=()=>react.createElement(fuselage.Tile,{elevation:"2",p:"0",display:"flex",flexDirection:"column",overflow:"auto",w:"x240"},react.createElement(fuselage.Box,{flexShrink:1,pb:12},react.createElement(fuselage.OptionTitle,null,"Title"),react.createElement(Sidebar_ListItem,{text:"Item 1"}),react.createElement(Sidebar_ListItem,{text:"Item 2"}),react.createElement(Sidebar_ListItem,{text:"Item 3"}),react.createElement(Sidebar_ListItem,{text:"Item 4"}))),MixedWithGap=()=>react.createElement(fuselage.Tile,{elevation:"2",p:"0",display:"flex",flexDirection:"column",overflow:"auto",w:"x240"},react.createElement(fuselage.Box,{flexShrink:1,pb:12},react.createElement(fuselage.OptionTitle,null,"Title"),react.createElement(Sidebar_ListItem,{text:"Item 1",icon:"hashtag"}),react.createElement(Sidebar_ListItem,{text:"Item 2",icon:"team"}),react.createElement(Sidebar_ListItem,{text:"Item 3",gap:!0}),react.createElement(Sidebar_ListItem,{text:"Item 4",icon:"airplane"})));MixedWithGap.parameters={docs:{description:{story:" When using `ListItem`, you can also use the `gap` prop to add spacing to the left. If the list is mixed with items **with and without** icons, it's recommended to add the gap."}}};const MixedWithoutGap=()=>react.createElement(fuselage.Tile,{elevation:"2",p:"0",display:"flex",flexDirection:"column",overflow:"auto",w:"x240"},react.createElement(fuselage.Box,{flexShrink:1,pb:12},react.createElement(fuselage.OptionTitle,null,"Title"),react.createElement(Sidebar_ListItem,{text:"Item 1",icon:"hashtag"}),react.createElement(Sidebar_ListItem,{text:"Item 2",icon:"team"}),react.createElement(Sidebar_ListItem,{text:"Item 3"}),react.createElement(Sidebar_ListItem,{text:"Item 4",icon:"airplane"})));MixedWithoutGap.parameters={docs:{description:{story:"Not recommended. Prefer adding the `gap` prop to the items without icons."}}};const __namedExportsOrder=["ListWithIcon","NoIcon","MixedWithGap","MixedWithoutGap"];ListWithIcon.parameters={...ListWithIcon.parameters,docs:{...ListWithIcon.parameters?.docs,source:{originalSource:"() => {\n  return <Tile elevation='2' p='0' display='flex' flexDirection='column' overflow='auto' w='x240'>\n            <Box flexShrink={1} pb={12}>\n                <OptionTitle>Title</OptionTitle>\n                <ListItem text='Item 1' icon='info' />\n                <ListItem text='Item 2' icon='star' />\n                <ListItem text='Item 3' icon='hashtag' />\n                <ListItem text='Item 4' icon='team' />\n            </Box>\n        </Tile>;\n}",...ListWithIcon.parameters?.docs?.source}}},NoIcon.parameters={...NoIcon.parameters,docs:{...NoIcon.parameters?.docs,source:{originalSource:"() => {\n  return <Tile elevation='2' p='0' display='flex' flexDirection='column' overflow='auto' w='x240'>\n            <Box flexShrink={1} pb={12}>\n                <OptionTitle>Title</OptionTitle>\n                <ListItem text='Item 1' />\n                <ListItem text='Item 2' />\n                <ListItem text='Item 3' />\n                <ListItem text='Item 4' />\n            </Box>\n        </Tile>;\n}",...NoIcon.parameters?.docs?.source}}},MixedWithGap.parameters={...MixedWithGap.parameters,docs:{...MixedWithGap.parameters?.docs,source:{originalSource:"() => {\n  return <Tile elevation='2' p='0' display='flex' flexDirection='column' overflow='auto' w='x240'>\n            <Box flexShrink={1} pb={12}>\n                <OptionTitle>Title</OptionTitle>\n                <ListItem text='Item 1' icon='hashtag' />\n                <ListItem text='Item 2' icon='team' />\n                <ListItem text='Item 3' gap />\n                <ListItem text='Item 4' icon='airplane' />\n            </Box>\n        </Tile>;\n}",...MixedWithGap.parameters?.docs?.source}}},MixedWithoutGap.parameters={...MixedWithoutGap.parameters,docs:{...MixedWithoutGap.parameters?.docs,source:{originalSource:"() => {\n  return <Tile elevation='2' p='0' display='flex' flexDirection='column' overflow='auto' w='x240'>\n            <Box flexShrink={1} pb={12}>\n                <OptionTitle>Title</OptionTitle>\n                <ListItem text='Item 1' icon='hashtag' />\n                <ListItem text='Item 2' icon='team' />\n                <ListItem text='Item 3' />\n                <ListItem text='Item 4' icon='airplane' />\n            </Box>\n        </Tile>;\n}",...MixedWithoutGap.parameters?.docs?.source}}}}}]);