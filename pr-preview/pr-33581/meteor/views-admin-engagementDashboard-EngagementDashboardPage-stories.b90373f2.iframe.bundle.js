"use strict";(self.webpackChunk_rocket_chat_meteor=self.webpackChunk_rocket_chat_meteor||[]).push([[3392],{"./client/views/admin/engagementDashboard/EngagementDashboardPage.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return EngagementDashboardPage_stories}});var react=__webpack_require__("./node_modules/react/index.js"),fuselage=__webpack_require__("./node_modules/@rocket.chat/fuselage/index.js"),dist=__webpack_require__("../../packages/ui-contexts/dist/index.js"),Page=__webpack_require__("./client/components/Page/index.ts"),EngagementDashboardCard=__webpack_require__("./client/views/admin/engagementDashboard/EngagementDashboardCard.tsx"),ChannelsOverview=__webpack_require__("./client/views/admin/engagementDashboard/channels/ChannelsOverview.tsx"),ChannelsTab=function ChannelsTab(){return react.createElement(EngagementDashboardCard.A,null,react.createElement(ChannelsOverview.A,null))},channels_ChannelsTab=ChannelsTab;ChannelsTab.__docgenInfo={description:"",methods:[],displayName:"ChannelsTab"};var MessagesTab=__webpack_require__("./client/views/admin/engagementDashboard/messages/MessagesTab.tsx"),UsersTab=__webpack_require__("./client/views/admin/engagementDashboard/users/UsersTab.tsx");function _slicedToArray(r,e){return function _arrayWithHoles(r){if(Array.isArray(r))return r}(r)||function _iterableToArrayLimit(r,l){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,n,i,u,a=[],f=!0,o=!1;try{if(i=(t=t.call(r)).next,0===l){if(Object(t)!==t)return;f=!1}else for(;!(f=(e=i.call(t)).done)&&(a.push(e.value),a.length!==l);f=!0);}catch(r){o=!0,n=r}finally{try{if(!f&&null!=t.return&&(u=t.return(),Object(u)!==u))return}finally{if(o)throw n}}return a}}(r,e)||function _unsupportedIterableToArray(r,a){if(r){if("string"==typeof r)return _arrayLikeToArray(r,a);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a):void 0}}(r,e)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(r,a){(null==a||a>r.length)&&(a=r.length);for(var e=0,n=Array(a);e<a;e++)n[e]=r[e];return n}var EngagementDashboardPage=function EngagementDashboardPage(_ref){var _ref$tab=_ref.tab,tab=void 0===_ref$tab?"users":_ref$tab,onSelectTab=_ref.onSelectTab,t=(0,dist.useTranslation)(),timezoneOptions=(0,react.useMemo)((function(){return[["utc",t("UTC_Timezone")],["local",t("Local_Timezone")]]}),[t]),_useState2=_slicedToArray((0,react.useState)("utc"),2),timezoneId=_useState2[0],setTimezoneId=_useState2[1],handleTabClick=(0,react.useCallback)((function(tab){return onSelectTab?function(){return onSelectTab(tab)}:void 0}),[onSelectTab]);return react.createElement(Page.YW,{background:"tint"},react.createElement(Page.zY,{title:t("Engagement")},react.createElement(fuselage.Select,{options:timezoneOptions,value:timezoneId,onChange:function onChange(value){return function handleTimezoneChange(timezoneId){return setTimezoneId(timezoneId)}(String(value))},"aria-label":t("Default_Timezone_For_Reporting")})),react.createElement(fuselage.Tabs,null,react.createElement(fuselage.Tabs.Item,{selected:"users"===tab,onClick:handleTabClick("users")},t("Users")),react.createElement(fuselage.Tabs.Item,{selected:"messages"===tab,onClick:handleTabClick("messages")},t("Messages")),react.createElement(fuselage.Tabs.Item,{selected:"channels"===tab,onClick:handleTabClick("channels")},t("Channels"))),react.createElement(Page.YV,{padding:0},react.createElement(fuselage.Box,{m:24},"users"===tab&&react.createElement(UsersTab.A,{timezone:timezoneId})||"messages"===tab&&react.createElement(MessagesTab.A,null)||"channels"===tab&&react.createElement(channels_ChannelsTab,null))))},engagementDashboard_EngagementDashboardPage=EngagementDashboardPage;EngagementDashboardPage.__docgenInfo={description:"",methods:[],displayName:"EngagementDashboardPage",props:{tab:{required:!1,tsType:{name:"union",raw:"'users' | 'messages' | 'channels'",elements:[{name:"literal",value:"'users'"},{name:"literal",value:"'messages'"},{name:"literal",value:"'channels'"}]},description:"",defaultValue:{value:"'users'",computed:!1}},onSelectTab:{required:!1,tsType:{name:"signature",type:"function",raw:"(tab: 'users' | 'messages' | 'channels') => void",signature:{arguments:[{type:{name:"union",raw:"'users' | 'messages' | 'channels'",elements:[{name:"literal",value:"'users'"},{name:"literal",value:"'messages'"},{name:"literal",value:"'channels'"}]},name:"tab"}],return:{name:"void"}}},description:""}}};var EngagementDashboardPage_stories={title:"Enterprise/Admin/Engagement Dashboard/EngagementDashboardPage",component:engagementDashboard_EngagementDashboardPage,decorators:[fn=>react.createElement("div",{children:fn(),style:{height:"100vh"}})]};const Default=()=>react.createElement(engagementDashboard_EngagementDashboardPage,{tab:"users"});Default.storyName="EngagementDashboardPage";const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"() => <EngagementDashboardPage tab='users' />",...Default.parameters?.docs?.source}}}}}]);