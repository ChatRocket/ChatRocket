export class HttpExtend {
  headers;
  params;
  requests;
  responses;
  constructor(){
    this.headers = new Map();
    this.params = new Map();
    this.requests = [];
    this.responses = [];
  }
  provideDefaultHeader(key, value) {
    this.headers.set(key, value);
  }
  provideDefaultHeaders(headers) {
    Object.keys(headers).forEach((key)=>this.headers.set(key, headers[key]));
  }
  provideDefaultParam(key, value) {
    this.params.set(key, value);
  }
  provideDefaultParams(params) {
    Object.keys(params).forEach((key)=>this.params.set(key, params[key]));
  }
  providePreRequestHandler(handler) {
    this.requests.push(handler);
  }
  providePreResponseHandler(handler) {
    this.responses.push(handler);
  }
  getDefaultHeaders() {
    return new Map(this.headers);
  }
  getDefaultParams() {
    return new Map(this.params);
  }
  getPreRequestHandlers() {
    return Array.from(this.requests);
  }
  getPreResponseHandlers() {
    return Array.from(this.responses);
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvZ3VpbGhlcm1lZ2F6em8vZGV2L1JvY2tldC5DaGF0L3BhY2thZ2VzL2FwcHMtZW5naW5lL2Rlbm8tcnVudGltZS9saWIvYWNjZXNzb3JzL2V4dGVuZGVycy9IdHRwRXh0ZW5kZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUge1xuICAgIElIdHRwRXh0ZW5kLFxuICAgIElIdHRwUHJlUmVxdWVzdEhhbmRsZXIsXG4gICAgSUh0dHBQcmVSZXNwb25zZUhhbmRsZXJcbn0gZnJvbSBcIkByb2NrZXQuY2hhdC9hcHBzLWVuZ2luZS9kZWZpbml0aW9uL2FjY2Vzc29ycy9JSHR0cC50c1wiO1xuXG5leHBvcnQgY2xhc3MgSHR0cEV4dGVuZCBpbXBsZW1lbnRzIElIdHRwRXh0ZW5kIHtcbiAgICBwcml2YXRlIGhlYWRlcnM6IE1hcDxzdHJpbmcsIHN0cmluZz47XG5cbiAgICBwcml2YXRlIHBhcmFtczogTWFwPHN0cmluZywgc3RyaW5nPjtcblxuICAgIHByaXZhdGUgcmVxdWVzdHM6IEFycmF5PElIdHRwUHJlUmVxdWVzdEhhbmRsZXI+O1xuXG4gICAgcHJpdmF0ZSByZXNwb25zZXM6IEFycmF5PElIdHRwUHJlUmVzcG9uc2VIYW5kbGVyPjtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSBuZXcgTWFwPHN0cmluZywgc3RyaW5nPigpO1xuICAgICAgICB0aGlzLnBhcmFtcyA9IG5ldyBNYXA8c3RyaW5nLCBzdHJpbmc+KCk7XG4gICAgICAgIHRoaXMucmVxdWVzdHMgPSBbXTtcbiAgICAgICAgdGhpcy5yZXNwb25zZXMgPSBbXTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcHJvdmlkZURlZmF1bHRIZWFkZXIoa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5oZWFkZXJzLnNldChrZXksIHZhbHVlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcHJvdmlkZURlZmF1bHRIZWFkZXJzKGhlYWRlcnM6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH0pOiB2b2lkIHtcbiAgICAgICAgT2JqZWN0LmtleXMoaGVhZGVycykuZm9yRWFjaCgoa2V5KSA9PiB0aGlzLmhlYWRlcnMuc2V0KGtleSwgaGVhZGVyc1trZXldKSk7XG4gICAgfVxuXG4gICAgcHVibGljIHByb3ZpZGVEZWZhdWx0UGFyYW0oa2V5OiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5wYXJhbXMuc2V0KGtleSwgdmFsdWUpO1xuICAgIH1cblxuICAgIHB1YmxpYyBwcm92aWRlRGVmYXVsdFBhcmFtcyhwYXJhbXM6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH0pOiB2b2lkIHtcbiAgICAgICAgT2JqZWN0LmtleXMocGFyYW1zKS5mb3JFYWNoKChrZXkpID0+IHRoaXMucGFyYW1zLnNldChrZXksIHBhcmFtc1trZXldKSk7XG4gICAgfVxuXG4gICAgcHVibGljIHByb3ZpZGVQcmVSZXF1ZXN0SGFuZGxlcihoYW5kbGVyOiBJSHR0cFByZVJlcXVlc3RIYW5kbGVyKTogdm9pZCB7XG4gICAgICAgIHRoaXMucmVxdWVzdHMucHVzaChoYW5kbGVyKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcHJvdmlkZVByZVJlc3BvbnNlSGFuZGxlcihoYW5kbGVyOiBJSHR0cFByZVJlc3BvbnNlSGFuZGxlcik6IHZvaWQge1xuICAgICAgICB0aGlzLnJlc3BvbnNlcy5wdXNoKGhhbmRsZXIpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXREZWZhdWx0SGVhZGVycygpOiBNYXA8c3RyaW5nLCBzdHJpbmc+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBNYXA8c3RyaW5nLCBzdHJpbmc+KHRoaXMuaGVhZGVycyk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldERlZmF1bHRQYXJhbXMoKTogTWFwPHN0cmluZywgc3RyaW5nPiB7XG4gICAgICAgIHJldHVybiBuZXcgTWFwPHN0cmluZywgc3RyaW5nPih0aGlzLnBhcmFtcyk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFByZVJlcXVlc3RIYW5kbGVycygpOiBBcnJheTxJSHR0cFByZVJlcXVlc3RIYW5kbGVyPiB7XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMucmVxdWVzdHMpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRQcmVSZXNwb25zZUhhbmRsZXJzKCk6IEFycmF5PElIdHRwUHJlUmVzcG9uc2VIYW5kbGVyPiB7XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMucmVzcG9uc2VzKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUEsT0FBTyxNQUFNO0VBQ0QsUUFBNkI7RUFFN0IsT0FBNEI7RUFFNUIsU0FBd0M7RUFFeEMsVUFBMEM7RUFFbEQsYUFBYztJQUNWLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSTtJQUNuQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUk7SUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFO0lBQ2xCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRTtFQUN2QjtFQUVPLHFCQUFxQixHQUFXLEVBQUUsS0FBYSxFQUFRO0lBQzFELElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUs7RUFDMUI7RUFFTyxzQkFBc0IsT0FBa0MsRUFBUTtJQUNuRSxPQUFPLElBQUksQ0FBQyxTQUFTLE9BQU8sQ0FBQyxDQUFDLE1BQVEsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxPQUFPLENBQUMsSUFBSTtFQUM1RTtFQUVPLG9CQUFvQixHQUFXLEVBQUUsS0FBYSxFQUFRO0lBQ3pELElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUs7RUFDekI7RUFFTyxxQkFBcUIsTUFBaUMsRUFBUTtJQUNqRSxPQUFPLElBQUksQ0FBQyxRQUFRLE9BQU8sQ0FBQyxDQUFDLE1BQVEsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxNQUFNLENBQUMsSUFBSTtFQUN6RTtFQUVPLHlCQUF5QixPQUErQixFQUFRO0lBQ25FLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDO0VBQ3ZCO0VBRU8sMEJBQTBCLE9BQWdDLEVBQVE7SUFDckUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUM7RUFDeEI7RUFFTyxvQkFBeUM7SUFDNUMsT0FBTyxJQUFJLElBQW9CLElBQUksQ0FBQyxPQUFPO0VBQy9DO0VBRU8sbUJBQXdDO0lBQzNDLE9BQU8sSUFBSSxJQUFvQixJQUFJLENBQUMsTUFBTTtFQUM5QztFQUVPLHdCQUF1RDtJQUMxRCxPQUFPLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRO0VBQ25DO0VBRU8seUJBQXlEO0lBQzVELE9BQU8sTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVM7RUFDcEM7QUFDSiJ9