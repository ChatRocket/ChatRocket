import { require } from '../../../lib/require.ts';
const { RocketChatAssociationModel } = require('@rocket.chat/apps-engine/definition/metadata/RocketChatAssociations.js');
export class VideoConferenceBuilder {
  kind = RocketChatAssociationModel.VIDEO_CONFERENCE;
  call;
  constructor(data){
    this.call = data || {};
  }
  setData(data) {
    this.call = {
      rid: data.rid,
      createdBy: data.createdBy,
      providerName: data.providerName,
      title: data.title,
      discussionRid: data.discussionRid
    };
    return this;
  }
  setRoomId(rid) {
    this.call.rid = rid;
    return this;
  }
  getRoomId() {
    return this.call.rid;
  }
  setCreatedBy(userId) {
    this.call.createdBy = userId;
    return this;
  }
  getCreatedBy() {
    return this.call.createdBy;
  }
  setProviderName(userId) {
    this.call.providerName = userId;
    return this;
  }
  getProviderName() {
    return this.call.providerName;
  }
  setProviderData(data) {
    this.call.providerData = data;
    return this;
  }
  getProviderData() {
    return this.call.providerData;
  }
  setTitle(userId) {
    this.call.title = userId;
    return this;
  }
  getTitle() {
    return this.call.title;
  }
  setDiscussionRid(rid) {
    this.call.discussionRid = rid;
    return this;
  }
  getDiscussionRid() {
    return this.call.discussionRid;
  }
  getVideoConference() {
    return this.call;
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vVXNlcnMvZ3VpbGhlcm1lZ2F6em8vZGV2L1JvY2tldC5DaGF0L3BhY2thZ2VzL2FwcHMtZW5naW5lL2Rlbm8tcnVudGltZS9saWIvYWNjZXNzb3JzL2J1aWxkZXJzL1ZpZGVvQ29uZmVyZW5jZUJ1aWxkZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBJVmlkZW9Db25mZXJlbmNlQnVpbGRlciB9IGZyb20gJ0Byb2NrZXQuY2hhdC9hcHBzLWVuZ2luZS9kZWZpbml0aW9uL2FjY2Vzc29ycy9JVmlkZW9Db25mZXJlbmNlQnVpbGRlci50cyc7XG5pbXBvcnQgdHlwZSB7IElHcm91cFZpZGVvQ29uZmVyZW5jZSB9IGZyb20gJ0Byb2NrZXQuY2hhdC9hcHBzLWVuZ2luZS9kZWZpbml0aW9uL3ZpZGVvQ29uZmVyZW5jZXMvSVZpZGVvQ29uZmVyZW5jZS50cyc7XG5cbmltcG9ydCB0eXBlIHsgUm9ja2V0Q2hhdEFzc29jaWF0aW9uTW9kZWwgYXMgX1JvY2tldENoYXRBc3NvY2lhdGlvbk1vZGVsIH0gZnJvbSAnQHJvY2tldC5jaGF0L2FwcHMtZW5naW5lL2RlZmluaXRpb24vbWV0YWRhdGEvUm9ja2V0Q2hhdEFzc29jaWF0aW9ucy50cyc7XG5cbmltcG9ydCB7IHJlcXVpcmUgfSBmcm9tICcuLi8uLi8uLi9saWIvcmVxdWlyZS50cyc7XG5cbmNvbnN0IHsgUm9ja2V0Q2hhdEFzc29jaWF0aW9uTW9kZWwgfSA9IHJlcXVpcmUoJ0Byb2NrZXQuY2hhdC9hcHBzLWVuZ2luZS9kZWZpbml0aW9uL21ldGFkYXRhL1JvY2tldENoYXRBc3NvY2lhdGlvbnMuanMnKSBhcyB7XG4gICAgUm9ja2V0Q2hhdEFzc29jaWF0aW9uTW9kZWw6IHR5cGVvZiBfUm9ja2V0Q2hhdEFzc29jaWF0aW9uTW9kZWw7XG59O1xuXG5leHBvcnQgdHlwZSBBcHBWaWRlb0NvbmZlcmVuY2UgPSBQaWNrPElHcm91cFZpZGVvQ29uZmVyZW5jZSwgJ3JpZCcgfCAncHJvdmlkZXJOYW1lJyB8ICdwcm92aWRlckRhdGEnIHwgJ3RpdGxlJyB8ICdkaXNjdXNzaW9uUmlkJz4gJiB7XG4gICAgY3JlYXRlZEJ5OiBJR3JvdXBWaWRlb0NvbmZlcmVuY2VbJ2NyZWF0ZWRCeSddWydfaWQnXTtcbn07XG5cbmV4cG9ydCBjbGFzcyBWaWRlb0NvbmZlcmVuY2VCdWlsZGVyIGltcGxlbWVudHMgSVZpZGVvQ29uZmVyZW5jZUJ1aWxkZXIge1xuICAgIHB1YmxpYyBraW5kOiBfUm9ja2V0Q2hhdEFzc29jaWF0aW9uTW9kZWwuVklERU9fQ09ORkVSRU5DRSA9IFJvY2tldENoYXRBc3NvY2lhdGlvbk1vZGVsLlZJREVPX0NPTkZFUkVOQ0U7XG5cbiAgICBwcm90ZWN0ZWQgY2FsbDogQXBwVmlkZW9Db25mZXJlbmNlO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT86IFBhcnRpYWw8QXBwVmlkZW9Db25mZXJlbmNlPikge1xuICAgICAgICB0aGlzLmNhbGwgPSAoZGF0YSB8fCB7fSkgYXMgQXBwVmlkZW9Db25mZXJlbmNlO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXREYXRhKGRhdGE6IFBhcnRpYWw8QXBwVmlkZW9Db25mZXJlbmNlPik6IElWaWRlb0NvbmZlcmVuY2VCdWlsZGVyIHtcbiAgICAgICAgdGhpcy5jYWxsID0ge1xuICAgICAgICAgICAgcmlkOiBkYXRhLnJpZCEsXG4gICAgICAgICAgICBjcmVhdGVkQnk6IGRhdGEuY3JlYXRlZEJ5LFxuICAgICAgICAgICAgcHJvdmlkZXJOYW1lOiBkYXRhLnByb3ZpZGVyTmFtZSEsXG4gICAgICAgICAgICB0aXRsZTogZGF0YS50aXRsZSEsXG4gICAgICAgICAgICBkaXNjdXNzaW9uUmlkOiBkYXRhLmRpc2N1c3Npb25SaWQsXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIHNldFJvb21JZChyaWQ6IHN0cmluZyk6IElWaWRlb0NvbmZlcmVuY2VCdWlsZGVyIHtcbiAgICAgICAgdGhpcy5jYWxsLnJpZCA9IHJpZDtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFJvb21JZCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5jYWxsLnJpZDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0Q3JlYXRlZEJ5KHVzZXJJZDogc3RyaW5nKTogSVZpZGVvQ29uZmVyZW5jZUJ1aWxkZXIge1xuICAgICAgICB0aGlzLmNhbGwuY3JlYXRlZEJ5ID0gdXNlcklkO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0Q3JlYXRlZEJ5KCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhbGwuY3JlYXRlZEJ5O1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXRQcm92aWRlck5hbWUodXNlcklkOiBzdHJpbmcpOiBJVmlkZW9Db25mZXJlbmNlQnVpbGRlciB7XG4gICAgICAgIHRoaXMuY2FsbC5wcm92aWRlck5hbWUgPSB1c2VySWQ7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRQcm92aWRlck5hbWUoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FsbC5wcm92aWRlck5hbWU7XG4gICAgfVxuXG4gICAgcHVibGljIHNldFByb3ZpZGVyRGF0YShkYXRhOiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPiB8IHVuZGVmaW5lZCk6IElWaWRlb0NvbmZlcmVuY2VCdWlsZGVyIHtcbiAgICAgICAgdGhpcy5jYWxsLnByb3ZpZGVyRGF0YSA9IGRhdGE7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRQcm92aWRlckRhdGEoKTogUmVjb3JkPHN0cmluZywgdW5rbm93bj4ge1xuICAgICAgICByZXR1cm4gdGhpcy5jYWxsLnByb3ZpZGVyRGF0YSE7XG4gICAgfVxuXG4gICAgcHVibGljIHNldFRpdGxlKHVzZXJJZDogc3RyaW5nKTogSVZpZGVvQ29uZmVyZW5jZUJ1aWxkZXIge1xuICAgICAgICB0aGlzLmNhbGwudGl0bGUgPSB1c2VySWQ7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRUaXRsZSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5jYWxsLnRpdGxlO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXREaXNjdXNzaW9uUmlkKHJpZDogQXBwVmlkZW9Db25mZXJlbmNlWydkaXNjdXNzaW9uUmlkJ10pOiBJVmlkZW9Db25mZXJlbmNlQnVpbGRlciB7XG4gICAgICAgIHRoaXMuY2FsbC5kaXNjdXNzaW9uUmlkID0gcmlkO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0RGlzY3Vzc2lvblJpZCgpOiBBcHBWaWRlb0NvbmZlcmVuY2VbJ2Rpc2N1c3Npb25SaWQnXSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhbGwuZGlzY3Vzc2lvblJpZDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0VmlkZW9Db25mZXJlbmNlKCk6IEFwcFZpZGVvQ29uZmVyZW5jZSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNhbGw7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBLFNBQVMsT0FBTyxRQUFRLDBCQUEwQjtBQUVsRCxNQUFNLEVBQUUsMEJBQTBCLEVBQUUsR0FBRyxRQUFRO0FBUS9DLE9BQU8sTUFBTTtFQUNGLE9BQXFELDJCQUEyQixnQkFBZ0IsQ0FBQztFQUU5RixLQUF5QjtFQUVuQyxZQUFZLElBQWtDLENBQUU7SUFDNUMsSUFBSSxDQUFDLElBQUksR0FBSSxRQUFRLENBQUM7RUFDMUI7RUFFTyxRQUFRLElBQWlDLEVBQTJCO0lBQ3ZFLElBQUksQ0FBQyxJQUFJLEdBQUc7TUFDUixLQUFLLEtBQUssR0FBRztNQUNiLFdBQVcsS0FBSyxTQUFTO01BQ3pCLGNBQWMsS0FBSyxZQUFZO01BQy9CLE9BQU8sS0FBSyxLQUFLO01BQ2pCLGVBQWUsS0FBSyxhQUFhO0lBQ3JDO0lBRUEsT0FBTyxJQUFJO0VBQ2Y7RUFFTyxVQUFVLEdBQVcsRUFBMkI7SUFDbkQsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUc7SUFDaEIsT0FBTyxJQUFJO0VBQ2Y7RUFFTyxZQUFvQjtJQUN2QixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRztFQUN4QjtFQUVPLGFBQWEsTUFBYyxFQUEyQjtJQUN6RCxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRztJQUN0QixPQUFPLElBQUk7RUFDZjtFQUVPLGVBQXVCO0lBQzFCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTO0VBQzlCO0VBRU8sZ0JBQWdCLE1BQWMsRUFBMkI7SUFDNUQsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEdBQUc7SUFDekIsT0FBTyxJQUFJO0VBQ2Y7RUFFTyxrQkFBMEI7SUFDN0IsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVk7RUFDakM7RUFFTyxnQkFBZ0IsSUFBeUMsRUFBMkI7SUFDdkYsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEdBQUc7SUFDekIsT0FBTyxJQUFJO0VBQ2Y7RUFFTyxrQkFBMkM7SUFDOUMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVk7RUFDakM7RUFFTyxTQUFTLE1BQWMsRUFBMkI7SUFDckQsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUc7SUFDbEIsT0FBTyxJQUFJO0VBQ2Y7RUFFTyxXQUFtQjtJQUN0QixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSztFQUMxQjtFQUVPLGlCQUFpQixHQUF3QyxFQUEyQjtJQUN2RixJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRztJQUMxQixPQUFPLElBQUk7RUFDZjtFQUVPLG1CQUF3RDtJQUMzRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYTtFQUNsQztFQUVPLHFCQUF5QztJQUM1QyxPQUFPLElBQUksQ0FBQyxJQUFJO0VBQ3BCO0FBQ0oifQ==