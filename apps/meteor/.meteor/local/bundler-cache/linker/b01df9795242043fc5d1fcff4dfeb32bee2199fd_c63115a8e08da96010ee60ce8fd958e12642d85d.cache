[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\nPackage[\"core-runtime\"].queue(\"meteor-developer-oauth\",function () {/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar OAuth = Package.oauth.OAuth;\nvar ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nvar Random = Package.random.Random;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar MeteorDeveloperAccounts;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"meteor-developer-oauth\":{\"meteor_developer_common.js\":function module(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/meteor-developer-oauth/meteor_developer_common.js                                                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nMeteorDeveloperAccounts = {};\nMeteorDeveloperAccounts._server = \"https://www.meteor.com\";\n\n// Options are:\n//  - developerAccountsServer: defaults to \"https://www.meteor.com\"\nMeteorDeveloperAccounts._config = options => {\n  if (options.developerAccountsServer) {\n    MeteorDeveloperAccounts._server = options.developerAccountsServer;\n  }\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"meteor_developer_client.js\":function module(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/meteor-developer-oauth/meteor_developer_client.js                                                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n// Request Meteor developer account credentials for the user\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nconst requestCredential = (options, credentialRequestCompleteCallback) => {\n  // support a callback without options\n  if (!credentialRequestCompleteCallback && typeof options === \"function\") {\n    credentialRequestCompleteCallback = options;\n    options = null;\n  }\n  const config = ServiceConfiguration.configurations.findOne({\n    service: 'meteor-developer'\n  });\n  if (!config) {\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(new ServiceConfiguration.ConfigError());\n    return;\n  }\n  const credentialToken = Random.secret();\n  const loginStyle = OAuth._loginStyle('meteor-developer', config, options);\n  let loginUrl = MeteorDeveloperAccounts._server + \"/oauth2/authorize?\" + \"state=\".concat(OAuth._stateParam(loginStyle, credentialToken, options && options.redirectUrl)) + \"&response_type=code&\" + \"client_id=\".concat(config.clientId).concat(options && options.details ? \"&details=\".concat(options && options.details) : '');\n\n  /**\n   * @deprecated in 1.3.0\n   */\n  if (options && options.userEmail && !options.loginHint) {\n    options.loginHint = options.userEmail;\n    delete options.userEmail;\n  }\n  if (options && options.loginHint) {\n    loginUrl += \"&user_email=\".concat(encodeURIComponent(options.loginHint));\n  }\n  loginUrl += \"&redirect_uri=\".concat(OAuth._redirectUri('meteor-developer', config));\n  OAuth.launchLogin({\n    loginService: \"meteor-developer\",\n    loginStyle,\n    loginUrl,\n    credentialRequestCompleteCallback,\n    credentialToken,\n    popupOptions: {\n      width: 497,\n      height: 749\n    }\n  });\n};\nMeteorDeveloperAccounts.requestCredential = requestCredential;\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\n\n/* Exports */\nreturn {\n  export: function () { return {\n      MeteorDeveloperAccounts: MeteorDeveloperAccounts\n    };},\n  require: require,\n  eagerModulePaths: [\n    \"/node_modules/meteor/meteor-developer-oauth/meteor_developer_common.js\",\n    \"/node_modules/meteor/meteor-developer-oauth/meteor_developer_client.js\"\n  ]\n}});\n","servePath":"/packages/meteor-developer-oauth.js","sourceMap":{"version":3,"sources":["packages/meteor-developer-oauth/meteor_developer_common.js","packages/meteor-developer-oauth/meteor_developer_client.js"],"names":["MeteorDeveloperAccounts","_server","_config","options","developerAccountsServer","requestCredential","credentialRequestCompleteCallback","config","ServiceConfiguration","configurations","findOne","service","ConfigError","credentialToken","Random","secret","loginStyle","OAuth","_loginStyle","loginUrl","concat","_stateParam","redirectUrl","clientId","details","userEmail","loginHint","encodeURIComponent","_redirectUri","launchLogin","loginService","popupOptions","width","height"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,uBAAuB,GAAG,CAAC,CAAC;AAE5BA,uBAAuB,CAACC,OAAO,GAAG,wBAAwB;;AAE1D;AACA;AACAD,uBAAuB,CAACE,OAAO,GAAGC,OAAO,IAAI;EAC3C,IAAIA,OAAO,CAACC,uBAAuB,EAAE;IACnCJ,uBAAuB,CAACC,OAAO,GAAGE,OAAO,CAACC,uBAAuB;EACnE;AACF,CAAC,C;;;;;;;;;;;ACVD;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,GAAGA,CAACF,OAAO,EAAEG,iCAAiC,KAAK;EACxE;EACA,IAAI,CAAEA,iCAAiC,IAAI,OAAOH,OAAO,KAAK,UAAU,EAAE;IACxEG,iCAAiC,GAAGH,OAAO;IAC3CA,OAAO,GAAG,IAAI;EAChB;EAEA,MAAMI,MAAM,GAAGC,oBAAoB,CAACC,cAAc,CAACC,OAAO,CAAC;IACzDC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,IAAI,CAACJ,MAAM,EAAE;IACXD,iCAAiC,IAC/BA,iCAAiC,CAAC,IAAIE,oBAAoB,CAACI,WAAW,CAAC,CAAC,CAAC;IAC3E;EACF;EAEA,MAAMC,eAAe,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC;EAEvC,MAAMC,UAAU,GAAGC,KAAK,CAACC,WAAW,CAAC,kBAAkB,EAAEX,MAAM,EAAEJ,OAAO,CAAC;EAEzE,IAAIgB,QAAQ,GACNnB,uBAAuB,CAACC,OAAO,GAC/B,oBAAoB,YAAAmB,MAAA,CACXH,KAAK,CAACI,WAAW,CAACL,UAAU,EAAEH,eAAe,EAAEV,OAAO,IAAIA,OAAO,CAACmB,WAAW,CAAC,CAAE,GACzF,sBAAsB,gBAAAF,MAAA,CACTb,MAAM,CAACgB,QAAQ,EAAAH,MAAA,CAAGjB,OAAO,IAAIA,OAAO,CAACqB,OAAO,eAAAJ,MAAA,CAAejB,OAAO,IAAIA,OAAO,CAACqB,OAAO,IAAK,EAAE,CAAE;;EAEjH;AACF;AACA;EACE,IAAIrB,OAAO,IAAIA,OAAO,CAACsB,SAAS,IAAI,CAACtB,OAAO,CAACuB,SAAS,EAAE;IACtDvB,OAAO,CAACuB,SAAS,GAAGvB,OAAO,CAACsB,SAAS;IACrC,OAAOtB,OAAO,CAACsB,SAAS;EAC1B;EAEA,IAAItB,OAAO,IAAIA,OAAO,CAACuB,SAAS,EAAE;IAChCP,QAAQ,mBAAAC,MAAA,CAAmBO,kBAAkB,CAACxB,OAAO,CAACuB,SAAS,CAAC,CAAE;EACpE;EAEAP,QAAQ,qBAAAC,MAAA,CAAqBH,KAAK,CAACW,YAAY,CAAC,kBAAkB,EAAErB,MAAM,CAAC,CAAE;EAE7EU,KAAK,CAACY,WAAW,CAAC;IAChBC,YAAY,EAAE,kBAAkB;IAChCd,UAAU;IACVG,QAAQ;IACRb,iCAAiC;IACjCO,eAAe;IACfkB,YAAY,EAAE;MAACC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE;IAAG;EACxC,CAAC,CAAC;AACJ,CAAC;AAEDjC,uBAAuB,CAACK,iBAAiB,GAAGA,iBAAiB,C","file":"/packages/meteor-developer-oauth.js","sourcesContent":["MeteorDeveloperAccounts = {};\n\nMeteorDeveloperAccounts._server = \"https://www.meteor.com\";\n\n// Options are:\n//  - developerAccountsServer: defaults to \"https://www.meteor.com\"\nMeteorDeveloperAccounts._config = options => {\n  if (options.developerAccountsServer) {\n    MeteorDeveloperAccounts._server = options.developerAccountsServer;\n  }\n};\n","// Request Meteor developer account credentials for the user\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nconst requestCredential = (options, credentialRequestCompleteCallback) => {\n  // support a callback without options\n  if (! credentialRequestCompleteCallback && typeof options === \"function\") {\n    credentialRequestCompleteCallback = options;\n    options = null;\n  }\n\n  const config = ServiceConfiguration.configurations.findOne({\n    service: 'meteor-developer'\n  });\n  if (!config) {\n    credentialRequestCompleteCallback &&\n      credentialRequestCompleteCallback(new ServiceConfiguration.ConfigError());\n    return;\n  }\n\n  const credentialToken = Random.secret();\n\n  const loginStyle = OAuth._loginStyle('meteor-developer', config, options);\n\n  let loginUrl =\n        MeteorDeveloperAccounts._server +\n        \"/oauth2/authorize?\" +\n        `state=${OAuth._stateParam(loginStyle, credentialToken, options && options.redirectUrl)}` +\n        \"&response_type=code&\" +\n        `client_id=${config.clientId}${options && options.details ? `&details=${options && options.details}` : ''}`;\n\n  /**\n   * @deprecated in 1.3.0\n   */\n  if (options && options.userEmail && !options.loginHint) {\n    options.loginHint = options.userEmail;\n    delete options.userEmail;\n  }\n\n  if (options && options.loginHint) {\n    loginUrl += `&user_email=${encodeURIComponent(options.loginHint)}`;\n  }\n\n  loginUrl += `&redirect_uri=${OAuth._redirectUri('meteor-developer', config)}`;\n\n  OAuth.launchLogin({\n    loginService: \"meteor-developer\",\n    loginStyle,\n    loginUrl,\n    credentialRequestCompleteCallback,\n    credentialToken,\n    popupOptions: {width: 497, height: 749}\n  });\n};\n\nMeteorDeveloperAccounts.requestCredential = requestCredential;\n"]}}]