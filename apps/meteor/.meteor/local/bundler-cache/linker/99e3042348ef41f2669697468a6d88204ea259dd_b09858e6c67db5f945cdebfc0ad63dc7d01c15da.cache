[{"type":"js","data":"Package[\"core-runtime\"].queue(\"rocketchat:restivus\",function () {/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar EmitterPromise = Package.meteor.EmitterPromise;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar WebApp = Package.webapp.WebApp;\nvar WebAppInternals = Package.webapp.WebAppInternals;\nvar main = Package.webapp.main;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\nvar Accounts = Package['accounts-base'].Accounts;\n\n/* Package-scope variables */\nvar path, statusCode, headers, body;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"rocketchat:restivus\":{\"lib\":{\"restivus.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/rocketchat_restivus/lib/restivus.js                                                                     //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      Restivus: () => Restivus\n    });\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 0);\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let Auth;\n    module.link(\"./auth\", {\n      Auth(v) {\n        Auth = v;\n      }\n    }, 2);\n    let Route;\n    module.link(\"./route\", {\n      Route(v) {\n        Route = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class Restivus {\n      constructor(options) {\n        this._routes = [];\n        this._config = _objectSpread({\n          paths: [],\n          useDefaultAuth: false,\n          apiPath: 'api/',\n          version: null,\n          prettyJson: false,\n          auth: {\n            token: 'services.resume.loginTokens.hashedToken',\n            user() {\n              let token;\n              if (this.request.headers['x-auth-token']) {\n                token = Accounts._hashLoginToken(this.request.headers['x-auth-token']);\n              }\n              return {\n                userId: this.request.headers['x-user-id'],\n                token\n              };\n            }\n          },\n          defaultHeaders: {\n            'Content-Type': 'application/json'\n          },\n          enableCors: true\n        }, options);\n        if (this._config.enableCors) {\n          const corsHeaders = {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n          };\n          if (this._config.useDefaultAuth) {\n            corsHeaders['Access-Control-Allow-Headers'] += ', X-User-Id, X-Auth-Token';\n          }\n          this._config.defaultHeaders = _objectSpread(_objectSpread({}, this._config.defaultHeaders), corsHeaders);\n          if (!this._config.defaultOptionsEndpoint) {\n            this._config.defaultOptionsEndpoint = function () {\n              this.response.writeHead(200, corsHeaders);\n              return this.done();\n            };\n          }\n        }\n        if (this._config.apiPath.startsWith('/')) {\n          this._config.apiPath = this._config.apiPath.slice(1);\n        }\n        if (!this._config.apiPath.endsWith('/')) {\n          this._config.apiPath = \"\".concat(this._config.apiPath, \"/\");\n        }\n        if (this._config.version) {\n          this._config.apiPath += \"\".concat(this._config.version, \"/\");\n        }\n        if (this._config.useDefaultAuth) {\n          this._initAuth();\n        } else if (this._config.useAuth) {\n          this._initAuth();\n          console.warn('Warning: useAuth API config option will be removed in Restivus v1.0 \\n    Use the useDefaultAuth option instead');\n        }\n      }\n\n      /**\n       \tAdd endpoints for the given HTTP methods at the given path\n      \t\t@param path {String} The extended URL path (will be appended to base path of the API)\n      \t@param options {Object} Route configuration options\n      \t@param options.authRequired {Boolean} The default auth requirement for each endpoint on the route\n      \t@param options.roleRequired {String or String[]} The default role required for each endpoint on the route\n      \t@param endpoints {Object} A set of endpoints available on the new route (get, post, put, patch, delete, options)\n      \t@param endpoints.<method> {Function or Object} If a function is provided, all default route\n      \t\tconfiguration options will be applied to the endpoint. Otherwise an object with an `action`\n      \t\tand all other route config options available. An `action` must be provided with the object.\n      */\n\n      addRoute(path, options, endpoints) {\n        const route = new Route(this, path, options, endpoints);\n        this._routes.push(route);\n        route.addToApi();\n        return this;\n      }\n\n      /*\n      \tAdd /login and /logout endpoints to the API\n      */\n\n      _initAuth() {\n        const self = this;\n\n        /*\n        \tAdd a login endpoint to the API\n        \t\tAfter the user is logged in, the onLoggedIn hook is called (see Restfully.configure() for\n        \tadding hook).\n        */\n        this.addRoute('login', {\n          authRequired: false\n        }, {\n          async post() {\n            var _self$_config$onLogge;\n            const user = {};\n            if (this.bodyParams.user) {\n              if (this.bodyParams.user.indexOf('@') === -1) {\n                user.username = this.bodyParams.user;\n              } else {\n                user.email = this.bodyParams.user;\n              }\n            } else if (this.bodyParams.username) {\n              user.username = this.bodyParams.username;\n            } else if (this.bodyParams.email) {\n              user.email = this.bodyParams.email;\n            }\n            let {\n              password\n            } = this.bodyParams;\n            if (this.bodyParams.hashed) {\n              password = {\n                digest: password,\n                algorithm: 'sha-256'\n              };\n            }\n            let auth;\n            try {\n              auth = await Auth.loginWithPassword(user, password);\n            } catch (e) {\n              return {\n                statusCode: e.error\n              };\n            }\n            if (auth.userId && auth.authToken) {\n              var _this$user;\n              const searchQuery = {};\n              searchQuery[self._config.auth.token] = Accounts._hashLoginToken(auth.authToken);\n              this.user = await Users.findOne({\n                _id: auth.userId\n              }, searchQuery);\n              this.userId = (_this$user = this.user) === null || _this$user === void 0 ? void 0 : _this$user._id;\n            }\n            const response = {\n              status: 'success',\n              data: auth\n            };\n            const extraData = (_self$_config$onLogge = self._config.onLoggedIn) === null || _self$_config$onLogge === void 0 ? void 0 : _self$_config$onLogge.call(this);\n            if (extraData != null) {\n              Object.assign(response.data, {\n                extra: extraData\n              });\n            }\n            return response;\n          }\n        });\n        const logout = async function () {\n          var _self$_config$onLogge2;\n          const authToken = this.request.headers['x-auth-token'];\n          const hashedToken = Accounts._hashLoginToken(authToken);\n          const tokenLocation = self._config.auth.token;\n          const index = tokenLocation.lastIndexOf('.');\n          const tokenPath = tokenLocation.substring(0, index);\n          const tokenFieldName = tokenLocation.substring(index + 1);\n          const tokenToRemove = {};\n          tokenToRemove[tokenFieldName] = hashedToken;\n          const tokenRemovalQuery = {};\n          tokenRemovalQuery[tokenPath] = tokenToRemove;\n          await Users.updateOne({\n            _id: this.user._id\n          }, {\n            $pull: tokenRemovalQuery\n          });\n          const response = {\n            status: 'success',\n            data: {\n              message: \"You've been logged out!\"\n            }\n          };\n          const extraData = (_self$_config$onLogge2 = self._config.onLoggedOut) === null || _self$_config$onLogge2 === void 0 ? void 0 : _self$_config$onLogge2.call(this);\n          if (extraData != null) {\n            Object.assign(response.data, {\n              extra: extraData\n            });\n          }\n          return response;\n        };\n\n        /*\n        \tAdd a logout endpoint to the API\n        \t\tAfter the user is logged out, the onLoggedOut hook is called (see Restfully.configure() for\n        \tadding hook).\n        */\n        return this.addRoute('logout', {\n          authRequired: true\n        }, {\n          async get() {\n            console.warn('Warning: Default logout via GET will be removed in Restivus v1.0. Use POST instead.');\n            console.warn('    See https://github.com/kahmali/meteor-restivus/issues/100');\n            return logout.call(this);\n          },\n          post: logout\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"auth.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/rocketchat_restivus/lib/auth.js                                                                         //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      Auth: () => Auth\n    });\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 0);\n    let check, Match;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      },\n      Match(v) {\n        Match = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    /*\n      A valid user will have exactly one of the following identification fields: id, username, or email\n    */\n    const userValidator = Match.Where(function (user) {\n      check(user, {\n        id: Match.Optional(String),\n        username: Match.Optional(String),\n        email: Match.Optional(String)\n      });\n      if (Object.keys(user).length !== 1) {\n        throw new Match.Error('User must have exactly one identifier field');\n      }\n      return true;\n    });\n\n    /*\n      A password can be either in plain text or hashed\n    */\n    const passwordValidator = Match.OneOf(String, {\n      digest: String,\n      algorithm: String\n    });\n\n    /*\n      Return a MongoDB query selector for finding the given user\n    */\n    const getUserQuerySelector = function (user) {\n      if (user.id) {\n        return {\n          _id: user.id\n        };\n      }\n      if (user.username) {\n        return {\n          username: user.username\n        };\n      }\n      if (user.email) {\n        return {\n          'emails.address': user.email\n        };\n      }\n\n      // We shouldn't be here if the user object was properly validated\n      throw new Error('Cannot create selector from invalid user');\n    };\n\n    /*\n      Log a user in with their password\n    */\n    class Auth {\n      async loginWithPassword(user, password) {\n        if (!user || !password) {\n          throw new Meteor.Error(401, 'Unauthorized');\n        }\n\n        // Validate the login input types\n        check(user, userValidator);\n        check(password, passwordValidator);\n\n        // Retrieve the user from the database\n        const authenticatingUserSelector = getUserQuerySelector(user);\n        const authenticatingUser = await Users.findOne(authenticatingUserSelector);\n        if (!authenticatingUser) {\n          throw new Meteor.Error(401, 'Unauthorized');\n        }\n        if (!(authenticatingUser.services != null ? authenticatingUser.services.password : undefined)) {\n          throw new Meteor.Error(401, 'Unauthorized');\n        }\n\n        // Authenticate the user's password\n        const passwordVerification = await Accounts._checkPasswordAsync(authenticatingUser, password);\n        if (passwordVerification.error) {\n          throw new Meteor.Error(401, 'Unauthorized');\n        }\n\n        // Add a new auth token to the user's account\n        const authToken = Accounts._generateStampedLoginToken();\n        const hashedToken = Accounts._hashLoginToken(authToken.token);\n        Accounts._insertHashedLoginToken(authenticatingUser._id, {\n          hashedToken\n        });\n        return {\n          authToken: authToken.token,\n          userId: authenticatingUser._id\n        };\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"iron-router-error-to-response.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/rocketchat_restivus/lib/iron-router-error-to-response.js                                                //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nmodule.export({\n  ironRouterSendErrorToResponse: () => ironRouterSendErrorToResponse\n});\n// We need a function that treats thrown errors exactly like Iron Router would.\n// This file is written in JavaScript to enable copy-pasting Iron Router code.\n\n// Taken from: https://github.com/iron-meteor/iron-router/blob/9c369499c98af9fd12ef9e68338dee3b1b1276aa/lib/router_server.js#L3\nconst env = process.env.NODE_ENV || 'development';\n\n// Taken from: https://github.com/iron-meteor/iron-router/blob/9c369499c98af9fd12ef9e68338dee3b1b1276aa/lib/router_server.js#L47\nfunction ironRouterSendErrorToResponse(err, req, res) {\n  if (res.statusCode < 400) res.statusCode = 500;\n  if (err.status) res.statusCode = err.status;\n  let msg;\n  if (env === 'development') msg = \"\".concat(err.stack || err.toString(), \"\\n\");\n  // XXX get this from standard dict of error messages?\n  else msg = 'Server error.';\n  console.error(err.stack || err.toString());\n  if (res.headersSent) return req.socket.destroy();\n  res.setHeader('Content-Type', 'text/html');\n  res.setHeader('Content-Length', Buffer.byteLength(msg));\n  if (req.method === 'HEAD') return res.end();\n  res.end(msg);\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"json-routes.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/rocketchat_restivus/lib/json-routes.js                                                                  //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      JsonRoutes: () => JsonRoutes\n    });\n    let WebApp;\n    module.link(\"meteor/webapp\", {\n      WebApp(v) {\n        WebApp = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const connect = Npm.require('connect');\n    const connectRoute = Npm.require('connect-route');\n    WebApp.connectHandlers.use(connect.urlencoded({\n      limit: '50mb'\n    })); // Override default request size\n    WebApp.connectHandlers.use(connect.json({\n      limit: '50mb'\n    })); // Override default request size\n    WebApp.connectHandlers.use(connect.query());\n\n    // Save reference to router for later\n    let connectRouter;\n    const responseHeaders = {\n      'Cache-Control': 'no-store',\n      'Pragma': 'no-cache'\n    };\n\n    // Register as a middleware\n    WebApp.connectHandlers.use(connectRoute(function (router) {\n      connectRouter = router;\n    }));\n    function setHeaders(res, headers) {\n      Object.entries(headers).forEach(_ref => {\n        let [key, value] = _ref;\n        res.setHeader(key, value);\n      });\n    }\n    const JsonRoutes = {\n      add(method, path, handler) {\n        // Make sure path starts with a slash\n        if (path[0] !== '/') {\n          path = \"/\".concat(path);\n        }\n        connectRouter[method.toLowerCase()](path, async (req, res, next) => {\n          // Set headers on response\n          setHeaders(res, responseHeaders);\n          try {\n            await handler(req, res, next);\n          } catch (error) {\n            next(error);\n          }\n        });\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"route.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/rocketchat_restivus/lib/route.js                                                                        //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      Route: () => Route\n    });\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let ironRouterSendErrorToResponse;\n    module.link(\"./iron-router-error-to-response\", {\n      ironRouterSendErrorToResponse(v) {\n        ironRouterSendErrorToResponse = v;\n      }\n    }, 1);\n    let JsonRoutes;\n    module.link(\"./json-routes\", {\n      JsonRoutes(v) {\n        JsonRoutes = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const availableMethods = ['get', 'post', 'put', 'patch', 'delete', 'options'];\n    class Route {\n      constructor(api, path, options, endpoints1) {\n        this.api = api;\n        this.path = path;\n        this.options = options;\n        this.endpoints = endpoints1;\n        if (!this.endpoints) {\n          this.endpoints = this.options;\n          this.options = {};\n        }\n      }\n      addToApi() {\n        const self = this;\n        if (this.api._config.paths.includes(this.path)) {\n          throw new Error(\"Cannot add a route at an existing path: \".concat(this.path));\n        }\n        this.endpoints = _objectSpread({\n          options: this.api._config.defaultOptionsEndpoint\n        }, this.endpoints);\n        this._resolveEndpoints();\n        this._configureEndpoints();\n        this.api._config.paths.push(this.path);\n        const allowedMethods = availableMethods.filter(function (method) {\n          return Object.keys(self.endpoints).includes(method);\n        });\n        const rejectedMethods = availableMethods.filter(function (method) {\n          return !Object.keys(self.endpoints).includes(method);\n        });\n        const fullPath = this.api._config.apiPath + this.path;\n        allowedMethods.forEach(function (method) {\n          const endpoint = self.endpoints[method];\n          return JsonRoutes.add(method, fullPath, async function (req, res) {\n            let responseInitiated = false;\n            const doneFunc = function () {\n              responseInitiated = true;\n            };\n            const endpointContext = _objectSpread({\n              urlParams: req.params,\n              queryParams: req.query,\n              bodyParams: req.body,\n              request: req,\n              response: res,\n              done: doneFunc\n            }, endpoint);\n            let responseData = null;\n            try {\n              responseData = await self._callEndpoint(endpointContext, endpoint);\n            } catch (e) {\n              ironRouterSendErrorToResponse(e, req, res);\n              return;\n            }\n            if (responseInitiated) {\n              res.end();\n              return;\n            }\n            if (res.headersSent) {\n              throw new Error(\"Must call this.done() after handling endpoint response manually: \".concat(method, \" \").concat(fullPath));\n            } else if (responseData === null || responseData === void 0) {\n              throw new Error(\"Cannot return null or undefined from an endpoint: \".concat(method, \" \").concat(fullPath));\n            }\n            if (responseData.body && (responseData.statusCode || responseData.headers)) {\n              return self._respond(res, responseData.body, responseData.statusCode, responseData.headers);\n            }\n            return self._respond(res, responseData);\n          });\n        });\n        return rejectedMethods.forEach(function (method) {\n          return JsonRoutes.add(method, fullPath, function (req, res) {\n            const responseData = {\n              status: 'error',\n              message: 'API endpoint does not exist'\n            };\n            const headers = {\n              Allow: allowedMethods.join(', ').toUpperCase()\n            };\n            return self._respond(res, responseData, 405, headers);\n          });\n        });\n      }\n\n      /*\n      \tConvert all endpoints on the given route into our expected endpoint object if it is a bare\n      \tfunction\n      \t\t@param {Route} route The route the endpoints belong to\n      \t*/\n\n      _resolveEndpoints() {\n        Object.entries(this.endpoints).forEach(_ref => {\n          let [method, endpoint] = _ref;\n          if (typeof endpoint === 'function') {\n            this.endpoints[method] = {\n              action: endpoint\n            };\n          }\n        });\n      }\n\n      /*\n      \tConfigure the authentication and role requirement on all endpoints (except OPTIONS, which must\n      \tbe configured directly on the endpoint)\n      \t\tAuthentication can be required on an entire route or individual endpoints. If required on an\n      \tentire route, that serves as the default. If required in any individual endpoints, that will\n      \toverride the default.\n      \t\tAfter the endpoint is configured, all authentication and role requirements of an endpoint can be\n      \taccessed at <code>endpoint.authRequired</code> and <code>endpoint.roleRequired</code>,\n      \trespectively.\n      \t\t@param {Route} route The route the endpoints belong to\n      \t@param {Endpoint} endpoint The endpoint to configure\n      \t*/\n\n      _configureEndpoints() {\n        Object.entries(this.endpoints).forEach(_ref2 => {\n          let [method, endpoint] = _ref2;\n          if (method !== 'options') {\n            var _this$options;\n            if (!((_this$options = this.options) !== null && _this$options !== void 0 && _this$options.roleRequired)) {\n              this.options.roleRequired = [];\n            }\n            if (!endpoint.roleRequired) {\n              endpoint.roleRequired = [];\n            }\n            endpoint.roleRequired = [...endpoint.roleRequired, ...this.options.roleRequired];\n            if (endpoint.roleRequired.length === 0) {\n              endpoint.roleRequired = false;\n            }\n            if (endpoint.authRequired === void 0) {\n              var _this$options2;\n              if ((_this$options2 = this.options) !== null && _this$options2 !== void 0 && _this$options2.authRequired || endpoint.roleRequired) {\n                endpoint.authRequired = true;\n              } else {\n                endpoint.authRequired = false;\n              }\n            }\n          }\n        });\n      }\n\n      /*\n      \tAuthenticate an endpoint if required, and return the result of calling it\n      \t\t@returns The endpoint response or a 401 if authentication fails\n      \t*/\n\n      async _callEndpoint(endpointContext, endpoint) {\n        const auth = await this._authAccepted(endpointContext, endpoint);\n        if (auth.success) {\n          if (this._roleAccepted(endpointContext, endpoint)) {\n            return endpoint.action.call(endpointContext);\n          }\n          return {\n            statusCode: 403,\n            body: {\n              status: 'error',\n              message: 'You do not have permission to do this.'\n            }\n          };\n        }\n        if (auth.data) {\n          return auth.data;\n        }\n        return {\n          statusCode: 401,\n          body: {\n            status: 'error',\n            message: 'You must be logged in to do this.'\n          }\n        };\n      }\n\n      /*\n      \tAuthenticate the given endpoint if required\n      \t\tOnce it's globally configured in the API, authentication can be required on an entire route or\n      \tindividual endpoints. If required on an entire endpoint, that serves as the default. If required\n      \tin any individual endpoints, that will override the default.\n      \t\t@returns An object of the following format:\n      \t\t\t\t{\n      \t\t\t\tsuccess: Boolean\n      \t\t\t\tdata: String or Object\n      \t\t\t}\n      \t\t\twhere `success` is `true` if all required authentication checks pass and the optional `data`\n      \t\twill contain the auth data when successful and an optional error response when auth fails.\n      \t*/\n\n      async _authAccepted(endpointContext, endpoint) {\n        if (endpoint.authRequired) {\n          return this._authenticate(endpointContext);\n        }\n        return {\n          success: true\n        };\n      }\n\n      /*\n      \tVerify the request is being made by an actively logged in user\n      \t\tIf verified, attach the authenticated user to the context.\n      \t\t@returns An object of the following format:\n      \t\t\t\t{\n      \t\t\t\tsuccess: Boolean\n      \t\t\t\tdata: String or Object\n      \t\t\t}\n      \t\t\twhere `success` is `true` if all required authentication checks pass and the optional `data`\n      \t\twill contain the auth data when successful and an optional error response when auth fails.\n      \t*/\n\n      async _authenticate(endpointContext) {\n        const auth = await this.api._config.auth.user.call(endpointContext);\n        if (!auth) {\n          return {\n            success: false\n          };\n        }\n        if (auth.userId && auth.token && !auth.user) {\n          const userSelector = {};\n          userSelector._id = auth.userId;\n          userSelector[this.api._config.auth.token] = auth.token;\n          auth.user = await Users.findOne(userSelector);\n        }\n        if (auth.error) {\n          return {\n            success: false,\n            data: auth.error\n          };\n        }\n        if (auth.user) {\n          endpointContext.user = auth.user;\n          endpointContext.userId = auth.user._id;\n          return {\n            success: true,\n            data: auth\n          };\n        }\n        return {\n          success: false\n        };\n      }\n\n      /*\n      \tAuthenticate the user role if required\n      \t\tMust be called after _authAccepted().\n      \t\t@returns True if the authenticated user belongs to <i>any</i> of the acceptable roles on the\n      \t\t\t\t\t\tendpoint\n      \t*/\n\n      _roleAccepted(endpointContext, endpoint) {\n        if (endpoint.roleRequired) {\n          const intersection = [endpoint.roleRequired, endpointContext.user.roles].reduce((a, b) => a.filter(c => b.includes(c)));\n          if (intersection.length === 0) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      /*\n      \tRespond to an HTTP request\n      \t*/\n\n      _respond(response, body, statusCode, headers) {\n        let delayInMilliseconds;\n        let minimumDelayInMilliseconds;\n        let randomMultiplierBetweenOneAndTwo;\n        if (statusCode == null) {\n          statusCode = 200;\n        }\n        if (headers == null) {\n          headers = {};\n        }\n        const defaultHeaders = this._lowerCaseKeys(this.api._config.defaultHeaders);\n        headers = this._lowerCaseKeys(headers);\n        headers = _objectSpread(_objectSpread({}, defaultHeaders), headers);\n        if (headers['content-type'].match(/json|javascript/) !== null) {\n          if (this.api._config.prettyJson) {\n            body = JSON.stringify(body, void 0, 2);\n          } else {\n            body = JSON.stringify(body);\n          }\n        }\n        const sendResponse = function () {\n          response.writeHead(statusCode, headers);\n          response.write(body);\n          return response.end();\n        };\n        if (statusCode === 401 || statusCode === 403) {\n          minimumDelayInMilliseconds = 500;\n          randomMultiplierBetweenOneAndTwo = 1 + Math.random();\n          delayInMilliseconds = minimumDelayInMilliseconds * randomMultiplierBetweenOneAndTwo;\n          return setTimeout(sendResponse, delayInMilliseconds);\n        }\n        return sendResponse();\n      }\n\n      /*\n      \tReturn the object with all of the keys converted to lowercase\n      \t*/\n\n      _lowerCaseKeys(object) {\n        return Object.keys(object).reduce((accumulator, key) => {\n          accumulator[key.toLowerCase()] = object[key];\n          return accumulator;\n        }, {});\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\n\n/* Exports */\nreturn {\n  require: require,\n  eagerModulePaths: [\n    \"/node_modules/meteor/rocketchat:restivus/lib/restivus.js\"\n  ],\n  mainModulePath: \"/node_modules/meteor/rocketchat:restivus/lib/restivus.js\"\n}});\n","servePath":"/packages/rocketchat_restivus.js","sourceMap":{"version":3,"sources":["packages/rocketchat:restivus/lib/restivus.js","packages/rocketchat:restivus/lib/auth.js","packages/rocketchat:restivus/lib/iron-router-error-to-response.js","packages/rocketchat:restivus/lib/json-routes.js","packages/rocketchat:restivus/lib/route.js"],"names":["_objectSpread","module","link","default","v","export","Restivus","Accounts","Users","Auth","Route","__reifyWaitForDeps__","constructor","options","_routes","_config","paths","useDefaultAuth","apiPath","version","prettyJson","auth","token","user","request","headers","_hashLoginToken","userId","defaultHeaders","enableCors","corsHeaders","defaultOptionsEndpoint","response","writeHead","done","startsWith","slice","endsWith","concat","_initAuth","useAuth","console","warn","addRoute","path","endpoints","route","push","addToApi","self","authRequired","post","_self$_config$onLogge","bodyParams","indexOf","username","email","password","hashed","digest","algorithm","loginWithPassword","e","statusCode","error","authToken","_this$user","searchQuery","findOne","_id","status","data","extraData","onLoggedIn","call","Object","assign","extra","logout","_self$_config$onLogge2","hashedToken","tokenLocation","index","lastIndexOf","tokenPath","substring","tokenFieldName","tokenToRemove","tokenRemovalQuery","updateOne","$pull","message","onLoggedOut","get","__reify_async_result__","_reifyError","async","check","Match","Meteor","userValidator","Where","id","Optional","String","keys","length","Error","passwordValidator","OneOf","getUserQuerySelector","authenticatingUserSelector","authenticatingUser","services","undefined","passwordVerification","_checkPasswordAsync","_generateStampedLoginToken","_insertHashedLoginToken","ironRouterSendErrorToResponse","env","process","NODE_ENV","err","req","res","msg","stack","toString","headersSent","socket","destroy","setHeader","Buffer","byteLength","method","end","JsonRoutes","WebApp","connect","Npm","require","connectRoute","connectHandlers","use","urlencoded","limit","json","query","connectRouter","responseHeaders","router","setHeaders","entries","forEach","_ref","key","value","add","handler","toLowerCase","next","availableMethods","api","endpoints1","includes","_resolveEndpoints","_configureEndpoints","allowedMethods","filter","rejectedMethods","fullPath","endpoint","responseInitiated","doneFunc","endpointContext","urlParams","params","queryParams","body","responseData","_callEndpoint","_respond","Allow","join","toUpperCase","action","_ref2","_this$options","roleRequired","_this$options2","_authAccepted","success","_roleAccepted","_authenticate","userSelector","intersection","roles","reduce","a","b","c","delayInMilliseconds","minimumDelayInMilliseconds","randomMultiplierBetweenOneAndTwo","_lowerCaseKeys","match","JSON","stringify","sendResponse","write","Math","random","setTimeout","object","accumulator"],"mappings":"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","file":"/packages/rocketchat_restivus.js","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\nimport { Users } from '@rocket.chat/models';\n\nimport { Auth } from './auth';\nimport { Route } from './route';\n\nexport class Restivus {\n\tconstructor(options) {\n\t\tthis._routes = [];\n\t\tthis._config = {\n\t\t\tpaths: [],\n\t\t\tuseDefaultAuth: false,\n\t\t\tapiPath: 'api/',\n\t\t\tversion: null,\n\t\t\tprettyJson: false,\n\t\t\tauth: {\n\t\t\t\ttoken: 'services.resume.loginTokens.hashedToken',\n\t\t\t\tuser() {\n\t\t\t\t\tlet token;\n\t\t\t\t\tif (this.request.headers['x-auth-token']) {\n\t\t\t\t\t\ttoken = Accounts._hashLoginToken(this.request.headers['x-auth-token']);\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tuserId: this.request.headers['x-user-id'],\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefaultHeaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tenableCors: true,\n\t\t\t...options,\n\t\t};\n\n\t\tif (this._config.enableCors) {\n\t\t\tconst corsHeaders = {\n\t\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t\t'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n\t\t\t};\n\t\t\tif (this._config.useDefaultAuth) {\n\t\t\t\tcorsHeaders['Access-Control-Allow-Headers'] += ', X-User-Id, X-Auth-Token';\n\t\t\t}\n\t\t\tthis._config.defaultHeaders = {\n\t\t\t\t...this._config.defaultHeaders,\n\t\t\t\t...corsHeaders,\n\t\t\t};\n\t\t\tif (!this._config.defaultOptionsEndpoint) {\n\t\t\t\tthis._config.defaultOptionsEndpoint = function () {\n\t\t\t\t\tthis.response.writeHead(200, corsHeaders);\n\t\t\t\t\treturn this.done();\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tif (this._config.apiPath.startsWith('/')) {\n\t\t\tthis._config.apiPath = this._config.apiPath.slice(1);\n\t\t}\n\t\tif (!this._config.apiPath.endsWith('/')) {\n\t\t\tthis._config.apiPath = `${this._config.apiPath}/`;\n\t\t}\n\t\tif (this._config.version) {\n\t\t\tthis._config.apiPath += `${this._config.version}/`;\n\t\t}\n\t\tif (this._config.useDefaultAuth) {\n\t\t\tthis._initAuth();\n\t\t} else if (this._config.useAuth) {\n\t\t\tthis._initAuth();\n\t\t\tconsole.warn('Warning: useAuth API config option will be removed in Restivus v1.0 \\n    Use the useDefaultAuth option instead');\n\t\t}\n\t}\n\n\t/**\n\t \tAdd endpoints for the given HTTP methods at the given path\n\n\t\t@param path {String} The extended URL path (will be appended to base path of the API)\n\t\t@param options {Object} Route configuration options\n\t\t@param options.authRequired {Boolean} The default auth requirement for each endpoint on the route\n\t\t@param options.roleRequired {String or String[]} The default role required for each endpoint on the route\n\t\t@param endpoints {Object} A set of endpoints available on the new route (get, post, put, patch, delete, options)\n\t\t@param endpoints.<method> {Function or Object} If a function is provided, all default route\n\t\t\tconfiguration options will be applied to the endpoint. Otherwise an object with an `action`\n\t\t\tand all other route config options available. An `action` must be provided with the object.\n\t*/\n\n\taddRoute(path, options, endpoints) {\n\t\tconst route = new Route(this, path, options, endpoints);\n\t\tthis._routes.push(route);\n\t\troute.addToApi();\n\t\treturn this;\n\t}\n\n\t/*\n\t\tAdd /login and /logout endpoints to the API\n\t*/\n\n\t_initAuth() {\n\t\tconst self = this;\n\n\t\t/*\n\t\t\tAdd a login endpoint to the API\n\n\t\t\tAfter the user is logged in, the onLoggedIn hook is called (see Restfully.configure() for\n\t\t\tadding hook).\n\t\t*/\n\t\tthis.addRoute(\n\t\t\t'login',\n\t\t\t{ authRequired: false },\n\t\t\t{\n\t\t\t\tasync post() {\n\t\t\t\t\tconst user = {};\n\t\t\t\t\tif (this.bodyParams.user) {\n\t\t\t\t\t\tif (this.bodyParams.user.indexOf('@') === -1) {\n\t\t\t\t\t\t\tuser.username = this.bodyParams.user;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuser.email = this.bodyParams.user;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this.bodyParams.username) {\n\t\t\t\t\t\tuser.username = this.bodyParams.username;\n\t\t\t\t\t} else if (this.bodyParams.email) {\n\t\t\t\t\t\tuser.email = this.bodyParams.email;\n\t\t\t\t\t}\n\t\t\t\t\tlet { password } = this.bodyParams;\n\t\t\t\t\tif (this.bodyParams.hashed) {\n\t\t\t\t\t\tpassword = {\n\t\t\t\t\t\t\tdigest: password,\n\t\t\t\t\t\t\talgorithm: 'sha-256',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tlet auth;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tauth = await Auth.loginWithPassword(user, password);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstatusCode: e.error,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tif (auth.userId && auth.authToken) {\n\t\t\t\t\t\tconst searchQuery = {};\n\t\t\t\t\t\tsearchQuery[self._config.auth.token] = Accounts._hashLoginToken(auth.authToken);\n\t\t\t\t\t\tthis.user = await Users.findOne(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t_id: auth.userId,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsearchQuery,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.userId = this.user?._id;\n\t\t\t\t\t}\n\t\t\t\t\tconst response = {\n\t\t\t\t\t\tstatus: 'success',\n\t\t\t\t\t\tdata: auth,\n\t\t\t\t\t};\n\t\t\t\t\tconst extraData = self._config.onLoggedIn?.call(this);\n\t\t\t\t\tif (extraData != null) {\n\t\t\t\t\t\tObject.assign(response.data, {\n\t\t\t\t\t\t\textra: extraData,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn response;\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t\tconst logout = async function () {\n\t\t\tconst authToken = this.request.headers['x-auth-token'];\n\t\t\tconst hashedToken = Accounts._hashLoginToken(authToken);\n\t\t\tconst tokenLocation = self._config.auth.token;\n\t\t\tconst index = tokenLocation.lastIndexOf('.');\n\t\t\tconst tokenPath = tokenLocation.substring(0, index);\n\t\t\tconst tokenFieldName = tokenLocation.substring(index + 1);\n\t\t\tconst tokenToRemove = {};\n\t\t\ttokenToRemove[tokenFieldName] = hashedToken;\n\t\t\tconst tokenRemovalQuery = {};\n\t\t\ttokenRemovalQuery[tokenPath] = tokenToRemove;\n\t\t\tawait Users.updateOne(\n\t\t\t\t{ _id: this.user._id },\n\t\t\t\t{\n\t\t\t\t\t$pull: tokenRemovalQuery,\n\t\t\t\t},\n\t\t\t);\n\t\t\tconst response = {\n\t\t\t\tstatus: 'success',\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: \"You've been logged out!\",\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst extraData = self._config.onLoggedOut?.call(this);\n\t\t\tif (extraData != null) {\n\t\t\t\tObject.assign(response.data, {\n\t\t\t\t\textra: extraData,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn response;\n\t\t};\n\n\t\t/*\n\t\t\tAdd a logout endpoint to the API\n\n\t\t\tAfter the user is logged out, the onLoggedOut hook is called (see Restfully.configure() for\n\t\t\tadding hook).\n\t\t*/\n\t\treturn this.addRoute(\n\t\t\t'logout',\n\t\t\t{ authRequired: true },\n\t\t\t{\n\t\t\t\tasync get() {\n\t\t\t\t\tconsole.warn('Warning: Default logout via GET will be removed in Restivus v1.0. Use POST instead.');\n\t\t\t\t\tconsole.warn('    See https://github.com/kahmali/meteor-restivus/issues/100');\n\t\t\t\t\treturn logout.call(this);\n\t\t\t\t},\n\t\t\t\tpost: logout,\n\t\t\t},\n\t\t);\n\t}\n}\n","/*\n * decaffeinate suggestions:\n * DS207: Consider shorter variations of null checks\n * DS208: Avoid top-level this\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/main/docs/suggestions.md\n */\n\nimport { Accounts } from 'meteor/accounts-base';\nimport { check, Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { Users } from '@rocket.chat/models';\n\n/*\n  A valid user will have exactly one of the following identification fields: id, username, or email\n*/\nconst userValidator = Match.Where(function (user) {\n\tcheck(user, {\n\t\tid: Match.Optional(String),\n\t\tusername: Match.Optional(String),\n\t\temail: Match.Optional(String),\n\t});\n\n\tif (Object.keys(user).length !== 1) {\n\t\tthrow new Match.Error('User must have exactly one identifier field');\n\t}\n\n\treturn true;\n});\n\n/*\n  A password can be either in plain text or hashed\n*/\nconst passwordValidator = Match.OneOf(String, {\n\tdigest: String,\n\talgorithm: String,\n});\n\n/*\n  Return a MongoDB query selector for finding the given user\n*/\nconst getUserQuerySelector = function (user) {\n\tif (user.id) {\n\t\treturn { _id: user.id };\n\t}\n\tif (user.username) {\n\t\treturn { username: user.username };\n\t}\n\tif (user.email) {\n\t\treturn { 'emails.address': user.email };\n\t}\n\n\t// We shouldn't be here if the user object was properly validated\n\tthrow new Error('Cannot create selector from invalid user');\n};\n\n/*\n  Log a user in with their password\n*/\nexport class Auth {\n\tasync loginWithPassword(user, password) {\n\t\tif (!user || !password) {\n\t\t\tthrow new Meteor.Error(401, 'Unauthorized');\n\t\t}\n\n\t\t// Validate the login input types\n\t\tcheck(user, userValidator);\n\t\tcheck(password, passwordValidator);\n\n\t\t// Retrieve the user from the database\n\t\tconst authenticatingUserSelector = getUserQuerySelector(user);\n\t\tconst authenticatingUser = await Users.findOne(authenticatingUserSelector);\n\n\t\tif (!authenticatingUser) {\n\t\t\tthrow new Meteor.Error(401, 'Unauthorized');\n\t\t}\n\t\tif (!(authenticatingUser.services != null ? authenticatingUser.services.password : undefined)) {\n\t\t\tthrow new Meteor.Error(401, 'Unauthorized');\n\t\t}\n\n\t\t// Authenticate the user's password\n\t\tconst passwordVerification = await Accounts._checkPasswordAsync(authenticatingUser, password);\n\t\tif (passwordVerification.error) {\n\t\t\tthrow new Meteor.Error(401, 'Unauthorized');\n\t\t}\n\n\t\t// Add a new auth token to the user's account\n\t\tconst authToken = Accounts._generateStampedLoginToken();\n\t\tconst hashedToken = Accounts._hashLoginToken(authToken.token);\n\t\tAccounts._insertHashedLoginToken(authenticatingUser._id, { hashedToken });\n\n\t\treturn { authToken: authToken.token, userId: authenticatingUser._id };\n\t}\n}\n","// We need a function that treats thrown errors exactly like Iron Router would.\n// This file is written in JavaScript to enable copy-pasting Iron Router code.\n\n// Taken from: https://github.com/iron-meteor/iron-router/blob/9c369499c98af9fd12ef9e68338dee3b1b1276aa/lib/router_server.js#L3\nconst env = process.env.NODE_ENV || 'development';\n\n// Taken from: https://github.com/iron-meteor/iron-router/blob/9c369499c98af9fd12ef9e68338dee3b1b1276aa/lib/router_server.js#L47\nexport function ironRouterSendErrorToResponse(err, req, res) {\n\tif (res.statusCode < 400) res.statusCode = 500;\n\n\tif (err.status) res.statusCode = err.status;\n\n\tlet msg;\n\tif (env === 'development') msg = `${err.stack || err.toString()}\\n`;\n\t// XXX get this from standard dict of error messages?\n\telse msg = 'Server error.';\n\n\tconsole.error(err.stack || err.toString());\n\n\tif (res.headersSent) return req.socket.destroy();\n\n\tres.setHeader('Content-Type', 'text/html');\n\tres.setHeader('Content-Length', Buffer.byteLength(msg));\n\tif (req.method === 'HEAD') return res.end();\n\tres.end(msg);\n}\n","import { WebApp } from 'meteor/webapp';\n\nconst connect = Npm.require('connect');\nconst connectRoute = Npm.require('connect-route');\n\nWebApp.connectHandlers.use(connect.urlencoded({ limit: '50mb' })); // Override default request size\nWebApp.connectHandlers.use(connect.json({ limit: '50mb' })); // Override default request size\nWebApp.connectHandlers.use(connect.query());\n\n// Save reference to router for later\nlet connectRouter;\n\nconst responseHeaders = {\n\t'Cache-Control': 'no-store',\n\t'Pragma': 'no-cache',\n};\n\n// Register as a middleware\nWebApp.connectHandlers.use(\n\tconnectRoute(function (router) {\n\t\tconnectRouter = router;\n\t}),\n);\n\nfunction setHeaders(res, headers) {\n\tObject.entries(headers).forEach(([key, value]) => {\n\t\tres.setHeader(key, value);\n\t});\n}\n\nexport const JsonRoutes = {\n\tadd(method, path, handler) {\n\t\t// Make sure path starts with a slash\n\t\tif (path[0] !== '/') {\n\t\t\tpath = `/${path}`;\n\t\t}\n\n\t\tconnectRouter[method.toLowerCase()](path, async (req, res, next) => {\n\t\t\t// Set headers on response\n\t\t\tsetHeaders(res, responseHeaders);\n\n\t\t\ttry {\n\t\t\t\tawait handler(req, res, next);\n\t\t\t} catch (error) {\n\t\t\t\tnext(error);\n\t\t\t}\n\t\t});\n\t},\n};\n","import { Users } from '@rocket.chat/models';\n\nimport { ironRouterSendErrorToResponse } from './iron-router-error-to-response';\nimport { JsonRoutes } from './json-routes';\n\nconst availableMethods = ['get', 'post', 'put', 'patch', 'delete', 'options'];\n\nexport class Route {\n\tconstructor(api, path, options, endpoints1) {\n\t\tthis.api = api;\n\t\tthis.path = path;\n\t\tthis.options = options;\n\t\tthis.endpoints = endpoints1;\n\t\tif (!this.endpoints) {\n\t\t\tthis.endpoints = this.options;\n\t\t\tthis.options = {};\n\t\t}\n\t}\n\n\taddToApi() {\n\t\tconst self = this;\n\t\tif (this.api._config.paths.includes(this.path)) {\n\t\t\tthrow new Error(`Cannot add a route at an existing path: ${this.path}`);\n\t\t}\n\t\tthis.endpoints = {\n\t\t\toptions: this.api._config.defaultOptionsEndpoint,\n\t\t\t...this.endpoints,\n\t\t};\n\t\tthis._resolveEndpoints();\n\t\tthis._configureEndpoints();\n\t\tthis.api._config.paths.push(this.path);\n\t\tconst allowedMethods = availableMethods.filter(function (method) {\n\t\t\treturn Object.keys(self.endpoints).includes(method);\n\t\t});\n\t\tconst rejectedMethods = availableMethods.filter(function (method) {\n\t\t\treturn !Object.keys(self.endpoints).includes(method);\n\t\t});\n\t\tconst fullPath = this.api._config.apiPath + this.path;\n\t\tallowedMethods.forEach(function (method) {\n\t\t\tconst endpoint = self.endpoints[method];\n\t\t\treturn JsonRoutes.add(method, fullPath, async function (req, res) {\n\t\t\t\tlet responseInitiated = false;\n\t\t\t\tconst doneFunc = function () {\n\t\t\t\t\tresponseInitiated = true;\n\t\t\t\t};\n\t\t\t\tconst endpointContext = {\n\t\t\t\t\turlParams: req.params,\n\t\t\t\t\tqueryParams: req.query,\n\t\t\t\t\tbodyParams: req.body,\n\t\t\t\t\trequest: req,\n\t\t\t\t\tresponse: res,\n\t\t\t\t\tdone: doneFunc,\n\t\t\t\t\t...endpoint,\n\t\t\t\t};\n\t\t\t\tlet responseData = null;\n\t\t\t\ttry {\n\t\t\t\t\tresponseData = await self._callEndpoint(endpointContext, endpoint);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tironRouterSendErrorToResponse(e, req, res);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (responseInitiated) {\n\t\t\t\t\tres.end();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (res.headersSent) {\n\t\t\t\t\tthrow new Error(`Must call this.done() after handling endpoint response manually: ${method} ${fullPath}`);\n\t\t\t\t} else if (responseData === null || responseData === void 0) {\n\t\t\t\t\tthrow new Error(`Cannot return null or undefined from an endpoint: ${method} ${fullPath}`);\n\t\t\t\t}\n\t\t\t\tif (responseData.body && (responseData.statusCode || responseData.headers)) {\n\t\t\t\t\treturn self._respond(res, responseData.body, responseData.statusCode, responseData.headers);\n\t\t\t\t}\n\t\t\t\treturn self._respond(res, responseData);\n\t\t\t});\n\t\t});\n\t\treturn rejectedMethods.forEach(function (method) {\n\t\t\treturn JsonRoutes.add(method, fullPath, function (req, res) {\n\t\t\t\tconst responseData = {\n\t\t\t\t\tstatus: 'error',\n\t\t\t\t\tmessage: 'API endpoint does not exist',\n\t\t\t\t};\n\t\t\t\tconst headers = {\n\t\t\t\t\tAllow: allowedMethods.join(', ').toUpperCase(),\n\t\t\t\t};\n\t\t\t\treturn self._respond(res, responseData, 405, headers);\n\t\t\t});\n\t\t});\n\t}\n\n\t/*\n\t\tConvert all endpoints on the given route into our expected endpoint object if it is a bare\n\t\tfunction\n\n\t\t@param {Route} route The route the endpoints belong to\n\t\t*/\n\n\t_resolveEndpoints() {\n\t\tObject.entries(this.endpoints).forEach(([method, endpoint]) => {\n\t\t\tif (typeof endpoint === 'function') {\n\t\t\t\tthis.endpoints[method] = {\n\t\t\t\t\taction: endpoint,\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n\t\tConfigure the authentication and role requirement on all endpoints (except OPTIONS, which must\n\t\tbe configured directly on the endpoint)\n\n\t\tAuthentication can be required on an entire route or individual endpoints. If required on an\n\t\tentire route, that serves as the default. If required in any individual endpoints, that will\n\t\toverride the default.\n\n\t\tAfter the endpoint is configured, all authentication and role requirements of an endpoint can be\n\t\taccessed at <code>endpoint.authRequired</code> and <code>endpoint.roleRequired</code>,\n\t\trespectively.\n\n\t\t@param {Route} route The route the endpoints belong to\n\t\t@param {Endpoint} endpoint The endpoint to configure\n\t\t*/\n\n\t_configureEndpoints() {\n\t\tObject.entries(this.endpoints).forEach(([method, endpoint]) => {\n\t\t\tif (method !== 'options') {\n\t\t\t\tif (!this.options?.roleRequired) {\n\t\t\t\t\tthis.options.roleRequired = [];\n\t\t\t\t}\n\t\t\t\tif (!endpoint.roleRequired) {\n\t\t\t\t\tendpoint.roleRequired = [];\n\t\t\t\t}\n\t\t\t\tendpoint.roleRequired = [...endpoint.roleRequired, ...this.options.roleRequired];\n\t\t\t\tif (endpoint.roleRequired.length === 0) {\n\t\t\t\t\tendpoint.roleRequired = false;\n\t\t\t\t}\n\t\t\t\tif (endpoint.authRequired === void 0) {\n\t\t\t\t\tif (this.options?.authRequired || endpoint.roleRequired) {\n\t\t\t\t\t\tendpoint.authRequired = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tendpoint.authRequired = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n\t\tAuthenticate an endpoint if required, and return the result of calling it\n\n\t\t@returns The endpoint response or a 401 if authentication fails\n\t\t*/\n\n\tasync _callEndpoint(endpointContext, endpoint) {\n\t\tconst auth = await this._authAccepted(endpointContext, endpoint);\n\t\tif (auth.success) {\n\t\t\tif (this._roleAccepted(endpointContext, endpoint)) {\n\t\t\t\treturn endpoint.action.call(endpointContext);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tstatusCode: 403,\n\t\t\t\tbody: {\n\t\t\t\t\tstatus: 'error',\n\t\t\t\t\tmessage: 'You do not have permission to do this.',\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t\tif (auth.data) {\n\t\t\treturn auth.data;\n\t\t}\n\t\treturn {\n\t\t\tstatusCode: 401,\n\t\t\tbody: {\n\t\t\t\tstatus: 'error',\n\t\t\t\tmessage: 'You must be logged in to do this.',\n\t\t\t},\n\t\t};\n\t}\n\n\t/*\n\t\tAuthenticate the given endpoint if required\n\n\t\tOnce it's globally configured in the API, authentication can be required on an entire route or\n\t\tindividual endpoints. If required on an entire endpoint, that serves as the default. If required\n\t\tin any individual endpoints, that will override the default.\n\n\t\t@returns An object of the following format:\n\n\t\t\t\t{\n\t\t\t\t\tsuccess: Boolean\n\t\t\t\t\tdata: String or Object\n\t\t\t\t}\n\n\t\t\twhere `success` is `true` if all required authentication checks pass and the optional `data`\n\t\t\twill contain the auth data when successful and an optional error response when auth fails.\n\t\t*/\n\n\tasync _authAccepted(endpointContext, endpoint) {\n\t\tif (endpoint.authRequired) {\n\t\t\treturn this._authenticate(endpointContext);\n\t\t}\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t};\n\t}\n\n\t/*\n\t\tVerify the request is being made by an actively logged in user\n\n\t\tIf verified, attach the authenticated user to the context.\n\n\t\t@returns An object of the following format:\n\n\t\t\t\t{\n\t\t\t\t\tsuccess: Boolean\n\t\t\t\t\tdata: String or Object\n\t\t\t\t}\n\n\t\t\twhere `success` is `true` if all required authentication checks pass and the optional `data`\n\t\t\twill contain the auth data when successful and an optional error response when auth fails.\n\t\t*/\n\n\tasync _authenticate(endpointContext) {\n\t\tconst auth = await this.api._config.auth.user.call(endpointContext);\n\t\tif (!auth) {\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t};\n\t\t}\n\t\tif (auth.userId && auth.token && !auth.user) {\n\t\t\tconst userSelector = {};\n\t\t\tuserSelector._id = auth.userId;\n\t\t\tuserSelector[this.api._config.auth.token] = auth.token;\n\t\t\tauth.user = await Users.findOne(userSelector);\n\t\t}\n\t\tif (auth.error) {\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\tdata: auth.error,\n\t\t\t};\n\t\t}\n\t\tif (auth.user) {\n\t\t\tendpointContext.user = auth.user;\n\t\t\tendpointContext.userId = auth.user._id;\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\tdata: auth,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tsuccess: false,\n\t\t};\n\t}\n\n\t/*\n\t\tAuthenticate the user role if required\n\n\t\tMust be called after _authAccepted().\n\n\t\t@returns True if the authenticated user belongs to <i>any</i> of the acceptable roles on the\n\t\t\t\t\t\t\tendpoint\n\t\t*/\n\n\t_roleAccepted(endpointContext, endpoint) {\n\t\tif (endpoint.roleRequired) {\n\t\t\tconst intersection = [endpoint.roleRequired, endpointContext.user.roles].reduce((a, b) => a.filter((c) => b.includes(c)));\n\t\t\tif (intersection.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/*\n\t\tRespond to an HTTP request\n\t\t*/\n\n\t_respond(response, body, statusCode, headers) {\n\t\tlet delayInMilliseconds;\n\t\tlet minimumDelayInMilliseconds;\n\t\tlet randomMultiplierBetweenOneAndTwo;\n\t\tif (statusCode == null) {\n\t\t\tstatusCode = 200;\n\t\t}\n\t\tif (headers == null) {\n\t\t\theaders = {};\n\t\t}\n\t\tconst defaultHeaders = this._lowerCaseKeys(this.api._config.defaultHeaders);\n\t\theaders = this._lowerCaseKeys(headers);\n\t\theaders = { ...defaultHeaders, ...headers };\n\t\tif (headers['content-type'].match(/json|javascript/) !== null) {\n\t\t\tif (this.api._config.prettyJson) {\n\t\t\t\tbody = JSON.stringify(body, void 0, 2);\n\t\t\t} else {\n\t\t\t\tbody = JSON.stringify(body);\n\t\t\t}\n\t\t}\n\t\tconst sendResponse = function () {\n\t\t\tresponse.writeHead(statusCode, headers);\n\t\t\tresponse.write(body);\n\t\t\treturn response.end();\n\t\t};\n\t\tif (statusCode === 401 || statusCode === 403) {\n\t\t\tminimumDelayInMilliseconds = 500;\n\t\t\trandomMultiplierBetweenOneAndTwo = 1 + Math.random();\n\t\t\tdelayInMilliseconds = minimumDelayInMilliseconds * randomMultiplierBetweenOneAndTwo;\n\t\t\treturn setTimeout(sendResponse, delayInMilliseconds);\n\t\t}\n\t\treturn sendResponse();\n\t}\n\n\t/*\n\t\tReturn the object with all of the keys converted to lowercase\n\t\t*/\n\n\t_lowerCaseKeys(object) {\n\t\treturn Object.keys(object).reduce((accumulator, key) => {\n\t\t\taccumulator[key.toLowerCase()] = object[key];\n\t\t\treturn accumulator;\n\t\t}, {});\n\t}\n}\n"]}}]