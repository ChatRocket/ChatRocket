[{"type":"js","data":"Package[\"core-runtime\"].queue(\"accounts-facebook\",function () {/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar EmitterPromise = Package.meteor.EmitterPromise;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar Accounts = Package['accounts-base'].Accounts;\nvar Facebook = Package['facebook-oauth'].Facebook;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"accounts-facebook\":{\"notice.js\":function module(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// packages/accounts-facebook/notice.js                                                                  //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nif (Package['accounts-ui'] && !Package['service-configuration'] && !Object.prototype.hasOwnProperty.call(Package, 'facebook-config-ui')) {\n  console.warn(\"Note: You're using accounts-ui and accounts-facebook,\\n\" + \"but didn't install the configuration UI for the Facebook\\n\" + \"OAuth. You can install it with:\\n\" + \"\\n\" + \"    meteor add facebook-config-ui\" + \"\\n\");\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"facebook.js\":function module(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// packages/accounts-facebook/facebook.js                                                                //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nAccounts.oauth.registerService('facebook');\nif (Meteor.isClient) {\n  const loginWithFacebook = (options, callback) => {\n    // support a callback without options\n    if (!callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n    const credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Facebook.requestCredential(options, credentialRequestCompleteCallback);\n  };\n  Accounts.registerClientLoginFunction('facebook', loginWithFacebook);\n  Meteor.loginWithFacebook = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return Accounts.applyLoginFunction('facebook', args);\n  };\n} else {\n  Accounts.addAutopublishFields({\n    // publish all fields including access token, which can legitimately\n    // be used from the client (if transmitted over ssl or on\n    // localhost). https://developers.facebook.com/docs/concepts/login/access-tokens-and-types/,\n    // \"Sharing of Access Tokens\"\n    forLoggedInUser: ['services.facebook'],\n    forOtherUsers: [\n    // https://www.facebook.com/help/167709519956542\n    'services.facebook.id', 'services.facebook.username', 'services.facebook.gender']\n  });\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\n\n/* Exports */\nreturn {\n  require: require,\n  eagerModulePaths: [\n    \"/node_modules/meteor/accounts-facebook/notice.js\",\n    \"/node_modules/meteor/accounts-facebook/facebook.js\"\n  ]\n}});\n","servePath":"/packages/accounts-facebook.js","sourceMap":{"version":3,"sources":["packages/accounts-facebook/notice.js","packages/accounts-facebook/facebook.js"],"names":["Package","Object","prototype","hasOwnProperty","call","console","warn","Accounts","oauth","registerService","Meteor","isClient","loginWithFacebook","options","callback","credentialRequestCompleteCallback","credentialRequestCompleteHandler","Facebook","requestCredential","registerClientLoginFunction","_len","arguments","length","args","Array","_key","applyLoginFunction","addAutopublishFields","forLoggedInUser","forOtherUsers"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAO,CAAC,aAAa,CAAC,IACnB,CAACA,OAAO,CAAC,uBAAuB,CAAC,IACjC,CAACC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,OAAO,EAAE,oBAAoB,CAAC,EAAE;EAC3EK,OAAO,CAACC,IAAI,CACV,yDAAyD,GACzD,4DAA4D,GAC5D,mCAAmC,GACnC,IAAI,GACJ,mCAAmC,GACnC,IACF,CAAC;AACH,C;;;;;;;;;;;ACXAC,QAAQ,CAACC,KAAK,CAACC,eAAe,CAAC,UAAU,CAAC;AAE1C,IAAIC,MAAM,CAACC,QAAQ,EAAE;EACnB,MAAMC,iBAAiB,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;IAC/C;IACA,IAAI,CAAEA,QAAQ,IAAI,OAAOD,OAAO,KAAK,UAAU,EAAE;MAC/CC,QAAQ,GAAGD,OAAO;MAClBA,OAAO,GAAG,IAAI;IAChB;IAEA,MAAME,iCAAiC,GAAGR,QAAQ,CAACC,KAAK,CAACQ,gCAAgC,CAACF,QAAQ,CAAC;IACnGG,QAAQ,CAACC,iBAAiB,CAACL,OAAO,EAAEE,iCAAiC,CAAC;EACxE,CAAC;EACDR,QAAQ,CAACY,2BAA2B,CAAC,UAAU,EAAEP,iBAAiB,CAAC;EACnEF,MAAM,CAACE,iBAAiB,GACtB;IAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAIC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAA,OAAKlB,QAAQ,CAACmB,kBAAkB,CAAC,UAAU,EAAEH,IAAI,CAAC;EAAA;AAC9D,CAAC,MAAM;EACLhB,QAAQ,CAACoB,oBAAoB,CAAC;IAC5B;IACA;IACA;IACA;IACAC,eAAe,EAAE,CAAC,mBAAmB,CAAC;IACtCC,aAAa,EAAE;IACb;IACA,sBAAsB,EAAE,4BAA4B,EAAE,0BAA0B;EAEpF,CAAC,CAAC;AACJ,C","file":"/packages/accounts-facebook.js","sourcesContent":["if (Package['accounts-ui']\n    && !Package['service-configuration']\n    && !Object.prototype.hasOwnProperty.call(Package, 'facebook-config-ui')) {\n  console.warn(\n    \"Note: You're using accounts-ui and accounts-facebook,\\n\" +\n    \"but didn't install the configuration UI for the Facebook\\n\" +\n    \"OAuth. You can install it with:\\n\" +\n    \"\\n\" +\n    \"    meteor add facebook-config-ui\" +\n    \"\\n\"\n  );\n}\n","Accounts.oauth.registerService('facebook');\n\nif (Meteor.isClient) {\n  const loginWithFacebook = (options, callback) => {\n    // support a callback without options\n    if (! callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    const credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Facebook.requestCredential(options, credentialRequestCompleteCallback);\n  };\n  Accounts.registerClientLoginFunction('facebook', loginWithFacebook);\n  Meteor.loginWithFacebook = \n    (...args) => Accounts.applyLoginFunction('facebook', args);\n} else {\n  Accounts.addAutopublishFields({\n    // publish all fields including access token, which can legitimately\n    // be used from the client (if transmitted over ssl or on\n    // localhost). https://developers.facebook.com/docs/concepts/login/access-tokens-and-types/,\n    // \"Sharing of Access Tokens\"\n    forLoggedInUser: ['services.facebook'],\n    forOtherUsers: [\n      // https://www.facebook.com/help/167709519956542\n      'services.facebook.id', 'services.facebook.username', 'services.facebook.gender'\n    ]\n  });\n}\n"]}}]