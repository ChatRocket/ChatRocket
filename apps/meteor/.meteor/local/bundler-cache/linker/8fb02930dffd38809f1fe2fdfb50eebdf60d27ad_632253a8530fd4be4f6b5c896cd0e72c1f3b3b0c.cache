[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\nPackage[\"core-runtime\"].queue(\"facebook-oauth\",function () {/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar OAuth = Package.oauth.OAuth;\nvar Random = Package.random.Random;\nvar ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package.modules.meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\n/* Package-scope variables */\nvar Facebook;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"facebook-oauth\":{\"facebook_client.js\":function module(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/facebook-oauth/facebook_client.js                                                                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nFacebook = {};\n\n// Request Facebook credentials for the user\n//\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nFacebook.requestCredential = function (options, credentialRequestCompleteCallback) {\n  var _Meteor$settings, _Meteor$settings$publ, _Meteor$settings$publ2, _Meteor$settings$publ3;\n  // support both (options, callback) and (callback).\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {\n    credentialRequestCompleteCallback = options;\n    options = {};\n  }\n  var config = ServiceConfiguration.configurations.findOne({\n    service: 'facebook'\n  });\n  if (!config) {\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(new ServiceConfiguration.ConfigError());\n    return;\n  }\n  var credentialToken = Random.secret();\n  var mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/i.test(navigator.userAgent);\n  var display = mobile ? 'touch' : 'popup';\n  var scope = \"email\";\n  if (options && options.requestPermissions) scope = options.requestPermissions.join(',');\n  var loginStyle = OAuth._loginStyle('facebook', config, options);\n  var API_VERSION = ((_Meteor$settings = Meteor.settings) === null || _Meteor$settings === void 0 ? void 0 : (_Meteor$settings$publ = _Meteor$settings.public) === null || _Meteor$settings$publ === void 0 ? void 0 : (_Meteor$settings$publ2 = _Meteor$settings$publ.packages) === null || _Meteor$settings$publ2 === void 0 ? void 0 : (_Meteor$settings$publ3 = _Meteor$settings$publ2['facebook-oauth']) === null || _Meteor$settings$publ3 === void 0 ? void 0 : _Meteor$settings$publ3.apiVersion) || '17.0';\n  var loginUrl = \"https://www.facebook.com/v\" + API_VERSION + \"/dialog/oauth?client_id=\" + config.appId + (\"&redirect_uri=\" + OAuth._redirectUri('facebook', config, options.params, options.absoluteUrlOptions)) + (\"&display=\" + display + \"&scope=\" + scope) + (\"&state=\" + OAuth._stateParam(loginStyle, credentialToken, options && options.redirectUrl));\n\n  // Handle authentication type (e.g. for force login you need auth_type: \"reauthenticate\")\n  if (options && options.auth_type) {\n    loginUrl += \"&auth_type=\" + encodeURIComponent(options.auth_type);\n  }\n  OAuth.launchLogin({\n    loginService: \"facebook\",\n    loginStyle: loginStyle,\n    loginUrl: loginUrl,\n    credentialRequestCompleteCallback: credentialRequestCompleteCallback,\n    credentialToken: credentialToken\n  });\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\n\n/* Exports */\nreturn {\n  export: function () { return {\n      Facebook: Facebook\n    };},\n  require: require,\n  eagerModulePaths: [\n    \"/node_modules/meteor/facebook-oauth/facebook_client.js\"\n  ]\n}});\n","servePath":"/packages/facebook-oauth.js","sourceMap":{"version":3,"sources":["packages/facebook-oauth/facebook_client.js"],"names":["Facebook","requestCredential","options","credentialRequestCompleteCallback","_Meteor$settings","_Meteor$settings$publ","_Meteor$settings$publ2","_Meteor$settings$publ3","config","ServiceConfiguration","configurations","findOne","service","ConfigError","credentialToken","Random","secret","mobile","test","navigator","userAgent","display","scope","requestPermissions","join","loginStyle","OAuth","_loginStyle","API_VERSION","Meteor","settings","public","packages","apiVersion","loginUrl","appId","_redirectUri","params","absoluteUrlOptions","_stateParam","redirectUrl","auth_type","encodeURIComponent","launchLogin","loginService"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,QAAQ,GAAG,CAAC,CAAC;;AAEb;AACA;AACA;AACA;AACA;AACA;AACAA,QAAQ,CAACC,iBAAiB,GAAG,UAACC,OAAO,EAAEC,iCAAiC,EAAK;EAAA,IAAAC,gBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAC3E;EACA,IAAI,CAACJ,iCAAiC,IAAI,OAAOD,OAAO,KAAK,UAAU,EAAE;IACvEC,iCAAiC,GAAGD,OAAO;IAC3CA,OAAO,GAAG,CAAC,CAAC;EACd;EAEA,IAAMM,MAAM,GAAGC,oBAAoB,CAACC,cAAc,CAACC,OAAO,CAAC;IAACC,OAAO,EAAE;EAAU,CAAC,CAAC;EACjF,IAAI,CAACJ,MAAM,EAAE;IACXL,iCAAiC,IAAIA,iCAAiC,CACpE,IAAIM,oBAAoB,CAACI,WAAW,CAAC,CAAC,CAAC;IACzC;EACF;EAEA,IAAMC,eAAe,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC;EACvC,IAAMC,MAAM,GAAG,0DAA0D,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;EACnG,IAAMC,OAAO,GAAGJ,MAAM,GAAG,OAAO,GAAG,OAAO;EAE1C,IAAIK,KAAK,GAAG,OAAO;EACnB,IAAIpB,OAAO,IAAIA,OAAO,CAACqB,kBAAkB,EACvCD,KAAK,GAAGpB,OAAO,CAACqB,kBAAkB,CAACC,IAAI,CAAC,GAAG,CAAC;EAE9C,IAAMC,UAAU,GAAGC,KAAK,CAACC,WAAW,CAAC,UAAU,EAAEnB,MAAM,EAAEN,OAAO,CAAC;EAEjE,IAAM0B,WAAW,GAAG,EAAAxB,gBAAA,GAAAyB,MAAM,CAACC,QAAQ,cAAA1B,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiB2B,MAAM,cAAA1B,qBAAA,wBAAAC,sBAAA,GAAvBD,qBAAA,CAAyB2B,QAAQ,cAAA1B,sBAAA,wBAAAC,sBAAA,GAAjCD,sBAAA,CAAoC,gBAAgB,CAAC,cAAAC,sBAAA,uBAArDA,sBAAA,CAAuD0B,UAAU,KAAI,MAAM;EAE/F,IAAIC,QAAQ,GACR,+BAA6BN,WAAW,gCAA2BpB,MAAM,CAAC2B,KAAK,uBAC9DT,KAAK,CAACU,YAAY,CAAC,UAAU,EAAE5B,MAAM,EAAEN,OAAO,CAACmC,MAAM,EAAEnC,OAAO,CAACoC,kBAAkB,CAAC,CAAE,kBACzFjB,OAAO,eAAUC,KAAK,CAAE,gBAC1BI,KAAK,CAACa,WAAW,CAACd,UAAU,EAAEX,eAAe,EAAEZ,OAAO,IAAIA,OAAO,CAACsC,WAAW,CAAC,CAAE;;EAE9F;EACA,IAAItC,OAAO,IAAIA,OAAO,CAACuC,SAAS,EAAE;IAChCP,QAAQ,oBAAkBQ,kBAAkB,CAACxC,OAAO,CAACuC,SAAS,CAAG;EACnE;EAEAf,KAAK,CAACiB,WAAW,CAAC;IAChBC,YAAY,EAAE,UAAU;IACxBnB,UAAU,EAAVA,UAAU;IACVS,QAAQ,EAARA,QAAQ;IACR/B,iCAAiC,EAAjCA,iCAAiC;IACjCW,eAAe,EAAfA;EACF,CAAC,CAAC;AACJ,CAAC,C","file":"/packages/facebook-oauth.js","sourcesContent":["Facebook = {};\n\n// Request Facebook credentials for the user\n//\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nFacebook.requestCredential = (options, credentialRequestCompleteCallback) => {\n  // support both (options, callback) and (callback).\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {\n    credentialRequestCompleteCallback = options;\n    options = {};\n  }\n\n  const config = ServiceConfiguration.configurations.findOne({service: 'facebook'});\n  if (!config) {\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(\n      new ServiceConfiguration.ConfigError());\n    return;\n  }\n\n  const credentialToken = Random.secret();\n  const mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/i.test(navigator.userAgent);\n  const display = mobile ? 'touch' : 'popup';\n\n  let scope = \"email\";\n  if (options && options.requestPermissions)\n    scope = options.requestPermissions.join(',');\n\n  const loginStyle = OAuth._loginStyle('facebook', config, options);\n\n  const API_VERSION = Meteor.settings?.public?.packages?.['facebook-oauth']?.apiVersion || '17.0';\n\n  let loginUrl =\n      `https://www.facebook.com/v${API_VERSION}/dialog/oauth?client_id=${config.appId}` +\n      `&redirect_uri=${OAuth._redirectUri('facebook', config, options.params, options.absoluteUrlOptions)}` +\n      `&display=${display}&scope=${scope}` +\n      `&state=${OAuth._stateParam(loginStyle, credentialToken, options && options.redirectUrl)}`;\n\n  // Handle authentication type (e.g. for force login you need auth_type: \"reauthenticate\")\n  if (options && options.auth_type) {\n    loginUrl += `&auth_type=${encodeURIComponent(options.auth_type)}`;\n  }\n\n  OAuth.launchLogin({\n    loginService: \"facebook\",\n    loginStyle,\n    loginUrl,\n    credentialRequestCompleteCallback,\n    credentialToken,\n  });\n};\n"]}}]