[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\nPackage[\"core-runtime\"].queue(\"accounts-github\",function () {/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Accounts = Package['accounts-base'].Accounts;\nvar Github = Package['github-oauth'].Github;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"accounts-github\":{\"notice.js\":function module(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// packages/accounts-github/notice.js                                                                    //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nif (Package['accounts-ui'] && !Package['service-configuration'] && !Object.prototype.hasOwnProperty.call(Package, 'github-config-ui')) {\n  console.warn(\"Note: You're using accounts-ui and accounts-github,\\n\" + \"but didn't install the configuration UI for the GitHub\\n\" + \"OAuth. You can install it with:\\n\" + \"\\n\" + \"    meteor add github-config-ui\" + \"\\n\");\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"github.js\":function module(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// packages/accounts-github/github.js                                                                    //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\nAccounts.oauth.registerService('github');\nif (Meteor.isClient) {\n  const loginWithGithub = (options, callback) => {\n    // support a callback without options\n    if (!callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n    const credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Github.requestCredential(options, credentialRequestCompleteCallback);\n  };\n  Accounts.registerClientLoginFunction('github', loginWithGithub);\n  Meteor.loginWithGithub = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return Accounts.applyLoginFunction('github', args);\n  };\n} else {\n  Accounts.addAutopublishFields({\n    // not sure whether the github api can be used from the browser,\n    // thus not sure if we should be sending access tokens; but we do it\n    // for all other oauth2 providers, and it may come in handy.\n    forLoggedInUser: ['services.github'],\n    forOtherUsers: ['services.github.username']\n  });\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\n\n/* Exports */\nreturn {\n  require: require,\n  eagerModulePaths: [\n    \"/node_modules/meteor/accounts-github/notice.js\",\n    \"/node_modules/meteor/accounts-github/github.js\"\n  ]\n}});\n","servePath":"/packages/accounts-github.js","sourceMap":{"version":3,"sources":["packages/accounts-github/notice.js","packages/accounts-github/github.js"],"names":["Package","Object","prototype","hasOwnProperty","call","console","warn","Accounts","oauth","registerService","Meteor","isClient","loginWithGithub","options","callback","credentialRequestCompleteCallback","credentialRequestCompleteHandler","Github","requestCredential","registerClientLoginFunction","_len","arguments","length","args","Array","_key","applyLoginFunction","addAutopublishFields","forLoggedInUser","forOtherUsers"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAO,CAAC,aAAa,CAAC,IACnB,CAACA,OAAO,CAAC,uBAAuB,CAAC,IACjC,CAACC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,OAAO,EAAE,kBAAkB,CAAC,EAAE;EACzEK,OAAO,CAACC,IAAI,CACV,uDAAuD,GACvD,0DAA0D,GAC1D,mCAAmC,GACnC,IAAI,GACJ,iCAAiC,GACjC,IACF,CAAC;AACH,C;;;;;;;;;;;ACXAC,QAAQ,CAACC,KAAK,CAACC,eAAe,CAAC,QAAQ,CAAC;AAExC,IAAIC,MAAM,CAACC,QAAQ,EAAE;EACnB,MAAMC,eAAe,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;IAC7C;IACA,IAAI,CAAEA,QAAQ,IAAI,OAAOD,OAAO,KAAK,UAAU,EAAE;MAC/CC,QAAQ,GAAGD,OAAO;MAClBA,OAAO,GAAG,IAAI;IAChB;IAEA,MAAME,iCAAiC,GAAGR,QAAQ,CAACC,KAAK,CAACQ,gCAAgC,CAACF,QAAQ,CAAC;IACnGG,MAAM,CAACC,iBAAiB,CAACL,OAAO,EAAEE,iCAAiC,CAAC;EACtE,CAAC;EACDR,QAAQ,CAACY,2BAA2B,CAAC,QAAQ,EAAEP,eAAe,CAAC;EAC/DF,MAAM,CAACE,eAAe,GACpB;IAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAIC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAA,OAAKlB,QAAQ,CAACmB,kBAAkB,CAAC,QAAQ,EAAEH,IAAI,CAAC;EAAA;AAC5D,CAAC,MAAM;EACLhB,QAAQ,CAACoB,oBAAoB,CAAC;IAC5B;IACA;IACA;IACAC,eAAe,EAAE,CAAC,iBAAiB,CAAC;IACpCC,aAAa,EAAE,CAAC,0BAA0B;EAC5C,CAAC,CAAC;AACJ,C","file":"/packages/accounts-github.js","sourcesContent":["if (Package['accounts-ui']\n    && !Package['service-configuration']\n    && !Object.prototype.hasOwnProperty.call(Package, 'github-config-ui')) {\n  console.warn(\n    \"Note: You're using accounts-ui and accounts-github,\\n\" +\n    \"but didn't install the configuration UI for the GitHub\\n\" +\n    \"OAuth. You can install it with:\\n\" +\n    \"\\n\" +\n    \"    meteor add github-config-ui\" +\n    \"\\n\"\n  );\n}\n","Accounts.oauth.registerService('github');\n\nif (Meteor.isClient) {\n  const loginWithGithub = (options, callback) => {\n    // support a callback without options\n    if (! callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    const credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Github.requestCredential(options, credentialRequestCompleteCallback);\n  };\n  Accounts.registerClientLoginFunction('github', loginWithGithub);\n  Meteor.loginWithGithub = \n    (...args) => Accounts.applyLoginFunction('github', args);\n} else {\n  Accounts.addAutopublishFields({\n    // not sure whether the github api can be used from the browser,\n    // thus not sure if we should be sending access tokens; but we do it\n    // for all other oauth2 providers, and it may come in handy.\n    forLoggedInUser: ['services.github'],\n    forOtherUsers: ['services.github.username']\n  });\n}\n"]}}]