[{"type":"js","data":"Package[\"core-runtime\"].queue(\"rocketchat:mongo-config\",function () {/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar EmitterPromise = Package.meteor.EmitterPromise;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar Email = Package.email.Email;\nvar EmailInternals = Package.email.EmailInternals;\nvar HTTP = Package.http.HTTP;\nvar HTTPInternals = Package.http.HTTPInternals;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"rocketchat:mongo-config\":{\"server\":{\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/rocketchat_mongo-config/server/index.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let tls;\n    module.link(\"tls\", {\n      default(v) {\n        tls = v;\n      }\n    }, 0);\n    let PassThrough;\n    module.link(\"stream\", {\n      PassThrough(v) {\n        PassThrough = v;\n      }\n    }, 1);\n    let Email;\n    module.link(\"meteor/email\", {\n      Email(v) {\n        Email = v;\n      }\n    }, 2);\n    let Mongo;\n    module.link(\"meteor/mongo\", {\n      Mongo(v) {\n        Mongo = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const shouldUseNativeOplog = ['yes', 'true'].includes(String(process.env.USE_NATIVE_OPLOG).toLowerCase());\n    if (!shouldUseNativeOplog) {\n      Package['disable-oplog'] = {};\n    }\n\n    // FIX For TLS error see more here https://github.com/RocketChat/Rocket.Chat/issues/9316\n    // TODO: Remove after NodeJS fix it, more information\n    // https://github.com/nodejs/node/issues/16196\n    // https://github.com/nodejs/node/pull/16853\n    // This is fixed in Node 10, but this supports LTS versions\n    tls.DEFAULT_ECDH_CURVE = 'auto';\n    const mongoConnectionOptions = _objectSpread(_objectSpread({}, !process.env.MONGO_URL.includes('retryWrites') && {\n      retryWrites: false\n    }), {}, {\n      // ignoreUndefined: false, // TODO evaluate adding this config\n\n      // TODO ideally we should call isTracingEnabled(), but since this is a Meteor package we can't :/\n      monitorCommands: ['yes', 'true'].includes(String(process.env.TRACING_ENABLED).toLowerCase())\n    });\n    const mongoOptionStr = process.env.MONGO_OPTIONS;\n    if (typeof mongoOptionStr !== 'undefined') {\n      const mongoOptions = JSON.parse(mongoOptionStr);\n      Object.assign(mongoConnectionOptions, mongoOptions);\n    }\n    if (Object.keys(mongoConnectionOptions).length > 0) {\n      Mongo.setConnectionOptions(mongoConnectionOptions);\n    }\n    process.env.HTTP_FORWARDED_COUNT = process.env.HTTP_FORWARDED_COUNT || '1';\n\n    // Just print to logs if in TEST_MODE due to a bug in Meteor 2.5: TypeError: Cannot read property '_syncSendMail' of null\n    if (process.env.TEST_MODE === 'true') {\n      Email.sendAsync = async function _sendAsync(options) {\n        console.log('Email.sendAsync', options);\n      };\n    } else if (process.env.NODE_ENV !== 'development') {\n      // Send emails to a \"fake\" stream instead of print them in console in case MAIL_URL or SMTP is not configured\n      const stream = new PassThrough();\n      stream.on('data', () => {});\n      stream.on('end', () => {});\n      const {\n        sendAsync\n      } = Email;\n      Email.sendAsync = function _sendAsync(options) {\n        return sendAsync.call(this, _objectSpread({\n          stream\n        }, options));\n      };\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\n\n/* Exports */\nreturn {\n  require: require,\n  eagerModulePaths: [\n    \"/node_modules/meteor/rocketchat:mongo-config/server/index.js\"\n  ],\n  mainModulePath: \"/node_modules/meteor/rocketchat:mongo-config/server/index.js\"\n}});\n","servePath":"/packages/rocketchat_mongo-config.js","sourceMap":{"version":3,"sources":["packages/rocketchat:mongo-config/server/index.js"],"names":["_objectSpread","module","link","default","v","tls","PassThrough","Email","Mongo","__reifyWaitForDeps__","shouldUseNativeOplog","includes","String","process","env","USE_NATIVE_OPLOG","toLowerCase","Package","DEFAULT_ECDH_CURVE","mongoConnectionOptions","MONGO_URL","retryWrites","monitorCommands","TRACING_ENABLED","mongoOptionStr","MONGO_OPTIONS","mongoOptions","JSON","parse","Object","assign","keys","length","setConnectionOptions","HTTP_FORWARDED_COUNT","TEST_MODE","sendAsync","_sendAsync","options","console","log","NODE_ENV","stream","on","call","__reify_async_result__","_reifyError","self","async"],"mappings":"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","file":"/packages/rocketchat_mongo-config.js","sourcesContent":["import tls from 'tls';\nimport { PassThrough } from 'stream';\n\nimport { Email } from 'meteor/email';\nimport { Mongo } from 'meteor/mongo';\n\nconst shouldUseNativeOplog = ['yes', 'true'].includes(String(process.env.USE_NATIVE_OPLOG).toLowerCase());\nif (!shouldUseNativeOplog) {\n\tPackage['disable-oplog'] = {};\n}\n\n// FIX For TLS error see more here https://github.com/RocketChat/Rocket.Chat/issues/9316\n// TODO: Remove after NodeJS fix it, more information\n// https://github.com/nodejs/node/issues/16196\n// https://github.com/nodejs/node/pull/16853\n// This is fixed in Node 10, but this supports LTS versions\ntls.DEFAULT_ECDH_CURVE = 'auto';\n\nconst mongoConnectionOptions = {\n\t// add retryWrites=false if not present in MONGO_URL\n\t...(!process.env.MONGO_URL.includes('retryWrites') && { retryWrites: false }),\n\t// ignoreUndefined: false, // TODO evaluate adding this config\n\n\t// TODO ideally we should call isTracingEnabled(), but since this is a Meteor package we can't :/\n\tmonitorCommands: ['yes', 'true'].includes(String(process.env.TRACING_ENABLED).toLowerCase()),\n};\n\nconst mongoOptionStr = process.env.MONGO_OPTIONS;\nif (typeof mongoOptionStr !== 'undefined') {\n\tconst mongoOptions = JSON.parse(mongoOptionStr);\n\tObject.assign(mongoConnectionOptions, mongoOptions);\n}\n\nif (Object.keys(mongoConnectionOptions).length > 0) {\n\tMongo.setConnectionOptions(mongoConnectionOptions);\n}\n\nprocess.env.HTTP_FORWARDED_COUNT = process.env.HTTP_FORWARDED_COUNT || '1';\n\n// Just print to logs if in TEST_MODE due to a bug in Meteor 2.5: TypeError: Cannot read property '_syncSendMail' of null\nif (process.env.TEST_MODE === 'true') {\n\tEmail.sendAsync = async function _sendAsync(options) {\n\t\tconsole.log('Email.sendAsync', options);\n\t};\n} else if (process.env.NODE_ENV !== 'development') {\n\t// Send emails to a \"fake\" stream instead of print them in console in case MAIL_URL or SMTP is not configured\n\tconst stream = new PassThrough();\n\tstream.on('data', () => {});\n\tstream.on('end', () => {});\n\n\tconst { sendAsync } = Email;\n\tEmail.sendAsync = function _sendAsync(options) {\n\t\treturn sendAsync.call(this, { stream, ...options });\n\t};\n}\n"]}}]