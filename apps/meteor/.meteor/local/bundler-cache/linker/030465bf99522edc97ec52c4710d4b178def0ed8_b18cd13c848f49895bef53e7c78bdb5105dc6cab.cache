[{"type":"js","data":"Package[\"core-runtime\"].queue(\"bundle-visualizer\",function () {/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar EmitterPromise = Package.meteor.EmitterPromise;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar fetch = Package.fetch.fetch;\nvar WebApp = Package.webapp.WebApp;\nvar WebAppInternals = Package.webapp.WebAppInternals;\nvar main = Package.webapp.main;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"bundle-visualizer\":{\"server.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/bundle-visualizer/server.js                                                                          //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n!module.wrapAsync(async function (module1, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let assert;\n    module1.link(\"assert\", {\n      default(v) {\n        assert = v;\n      }\n    }, 0);\n    let fsReadFileSync;\n    module1.link(\"fs\", {\n      readFileSync(v) {\n        fsReadFileSync = v;\n      }\n    }, 1);\n    let Meteor;\n    module1.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let WebAppInternals;\n    module1.link(\"meteor/webapp\", {\n      WebAppInternals(v) {\n        WebAppInternals = v;\n      }\n    }, 3);\n    let methodNameStats, packageName, typeBundle, typeNodeModules, typePackage;\n    module1.link(\"./common.js\", {\n      methodNameStats(v) {\n        methodNameStats = v;\n      },\n      packageName(v) {\n        packageName = v;\n      },\n      typeBundle(v) {\n        typeBundle = v;\n      },\n      typeNodeModules(v) {\n        typeNodeModules = v;\n      },\n      typePackage(v) {\n        typePackage = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    if (Meteor.isProduction) {\n      console.warn([\"=> The \\\"\".concat(packageName, \"\\\" package is currently enabled. Visit your\"), \"application in a web browser to view the client bundle analysis and\", \"'meteor remove' the package before building/deploying the final bundle.\"].join(\" \"));\n    } else {\n      console.warn([\"=> In order to provide accurate measurements using minified bundles,\", \"the \\\"\".concat(packageName, \"\\\" package requires running 'meteor --production'\"), \"to simulate production bundling.\"].join(\" \"));\n    }\n    function getStatBundles() {\n      const statFileFilter = f => f.type === \"json\" && f.absolutePath && f.absolutePath.endsWith(\".stats.json\");\n\n      // Read the stat file, but if it's in any way unusable just return null.\n      function readOrNull(file) {\n        try {\n          return JSON.parse(fsReadFileSync(file, \"utf8\"));\n        } catch (err) {\n          return null;\n        }\n      }\n      const {\n        staticFiles,\n        staticFilesByArch\n      } = WebAppInternals;\n      const files = [];\n      if (staticFilesByArch) {\n        Object.keys(staticFilesByArch).forEach(arch => {\n          const staticFiles = staticFilesByArch[arch];\n          Object.keys(staticFiles).forEach(path => {\n            files.push(_objectSpread(_objectSpread({}, staticFiles[path]), {}, {\n              arch\n            }));\n          });\n        });\n      } else if (staticFiles) {\n        Object.keys(staticFiles).forEach(path => {\n          files.push(_objectSpread(_objectSpread({}, staticFiles[path]), {}, {\n            arch: 'bundle'\n          }));\n        });\n      }\n      return files.filter(statFileFilter).map(file => ({\n        name: file.hash,\n        arch: file.arch,\n        stats: readOrNull(file.absolutePath)\n      }));\n    }\n    function _childModules(node) {\n      return Object.keys(node).map(module => {\n        const result = {\n          name: module,\n          type: typeNodeModules\n        };\n        if (typeof node[module] === \"object\") {\n          result.children = _childModules(node[module]);\n        } else {\n          result.size = node[module];\n        }\n        return result;\n      });\n    }\n    function d3TreeFromStats(stats) {\n      assert.strictEqual(typeof stats, \"object\", \"Must pass a stats object\");\n      assert.strictEqual(typeof stats.minifiedBytesByPackage, \"object\", \"Stats object must contain a `minifiedBytesByPackage` object\");\n      const sizeOrDetail = (name, node) => {\n        const result = {\n          name,\n          type: typePackage\n        };\n\n        // A non-leaf is: [size (Number), limb (Object)]\n        // A leaf is size (Number)\n        if (Array.isArray(node)) {\n          const [, detail] = node;\n          result.children = _childModules(detail);\n        } else {\n          result.size = node;\n        }\n        return result;\n      };\n\n      // Main entry into the stats is the `minifiedBytesByPackage` attribute.\n      return Object.keys(stats.minifiedBytesByPackage).map(name => sizeOrDetail(name\n      // Change the \"packages/bundle.js\" name to \"(bundle)\"\n      .replace(/^[^\\/]+\\/(.*)\\.js$/, \"($1)\"), stats.minifiedBytesByPackage[name]));\n    }\n    Meteor.startup(() => {\n      if (!Package.webapp) {\n        return;\n      }\n      Package.webapp.WebAppInternals.meteorInternalHandlers.use(methodNameStats, statsMiddleware);\n    });\n    function statsMiddleware(request, response) {\n      const statBundles = getStatBundles();\n      function sendJSON(data) {\n        response.setHeader(\"Content-Type\", \"application/json\");\n        response.end(JSON.stringify(data, null, 2));\n      }\n\n      // Silently return no data if not simulating production.\n      if (!Meteor.isProduction) {\n        return sendJSON(null);\n      }\n      if (!(statBundles && statBundles.length)) {\n        throw new Meteor.Error(\"no-stats-bundles\", \"Unable to retrieve stats\");\n      }\n      sendJSON({\n        name: \"main\",\n        children: statBundles.map((statBundle, index, array) => ({\n          name: statBundle.arch,\n          type: typeBundle,\n          children: d3TreeFromStats(statBundle.stats)\n        }))\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"common.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/bundle-visualizer/common.js                                                                          //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\nmodule.export({\n  packageName: () => packageName,\n  classPrefix: () => classPrefix,\n  methodNameStats: () => methodNameStats,\n  typeBundle: () => typeBundle,\n  typePackage: () => typePackage,\n  typeNodeModules: () => typeNodeModules,\n  prefixedClass: () => prefixedClass\n});\nconst packageName = \"bundle-visualizer\";\nconst classPrefix = \"meteorBundleVisualizer\";\nconst methodNameStats = \"/__meteor__/\".concat(packageName, \"/stats\");\nconst typeBundle = \"bundle\";\nconst typePackage = \"package\";\nconst typeNodeModules = \"node_modules\";\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction prefixedClass(className) {\n  return \"\".concat(classPrefix).concat(capitalizeFirstLetter(className));\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\n\n/* Exports */\nreturn {\n  require: require,\n  eagerModulePaths: [\n    \"/node_modules/meteor/bundle-visualizer/server.js\"\n  ],\n  mainModulePath: \"/node_modules/meteor/bundle-visualizer/server.js\"\n}});\n","servePath":"/packages/bundle-visualizer.js","sourceMap":{"version":3,"sources":["packages/bundle-visualizer/server.js","packages/bundle-visualizer/common.js"],"names":["_objectSpread","module1","link","default","v","assert","fsReadFileSync","readFileSync","Meteor","WebAppInternals","methodNameStats","packageName","typeBundle","typeNodeModules","typePackage","__reifyWaitForDeps__","isProduction","console","warn","concat","join","getStatBundles","statFileFilter","f","type","absolutePath","endsWith","readOrNull","file","JSON","parse","err","staticFiles","staticFilesByArch","files","Object","keys","forEach","arch","path","push","filter","map","name","hash","stats","_childModules","node","module","result","children","size","d3TreeFromStats","strictEqual","minifiedBytesByPackage","sizeOrDetail","Array","isArray","detail","replace","startup","Package","webapp","meteorInternalHandlers","use","statsMiddleware","request","response","statBundles","sendJSON","data","setHeader","end","stringify","length","Error","statBundle","index","array","__reify_async_result__","_reifyError","self","async","export","classPrefix","prefixedClass","capitalizeFirstLetter","str","charAt","toUpperCase","slice","className"],"mappings":"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","file":"/packages/bundle-visualizer.js","sourcesContent":["import assert from \"assert\";\nimport { readFileSync as fsReadFileSync } from \"fs\";\n\nimport { Meteor } from \"meteor/meteor\";\nimport { WebAppInternals } from \"meteor/webapp\";\n\nimport {\n  methodNameStats,\n  packageName,\n  typeBundle,\n  typeNodeModules,\n  typePackage,\n} from \"./common.js\";\n\nif (Meteor.isProduction) {\n  console.warn([\n    `=> The \"${packageName}\" package is currently enabled. Visit your`,\n    \"application in a web browser to view the client bundle analysis and\",\n    \"'meteor remove' the package before building/deploying the final bundle.\",\n  ].join(\" \"));\n} else {\n  console.warn([\n    \"=> In order to provide accurate measurements using minified bundles,\",\n    `the \"${packageName}\" package requires running 'meteor --production'`,\n    \"to simulate production bundling.\"\n  ].join(\" \"));\n}\n\nfunction getStatBundles() {\n  const statFileFilter = f =>\n    f.type === \"json\" &&\n    f.absolutePath &&\n    f.absolutePath.endsWith(\".stats.json\");\n\n  // Read the stat file, but if it's in any way unusable just return null.\n  function readOrNull(file) {\n    try {\n      return JSON.parse(fsReadFileSync(file, \"utf8\"));\n    } catch (err) {\n      return null;\n    }\n  }\n\n  const {\n    staticFiles,\n    staticFilesByArch,\n  } = WebAppInternals;\n\n  const files = [];\n\n  if (staticFilesByArch) {\n    Object.keys(staticFilesByArch).forEach(arch => {\n      const staticFiles = staticFilesByArch[arch];\n      Object.keys(staticFiles).forEach(path => {\n        files.push({ ...staticFiles[path], arch });\n      });\n    });\n  } else if (staticFiles) {\n    Object.keys(staticFiles).forEach(path => {\n      files.push({ ...staticFiles[path], arch: 'bundle' });\n    });\n  }\n\n  return files.filter(statFileFilter).map(file => ({\n    name: file.hash,\n    arch: file.arch,\n    stats: readOrNull(file.absolutePath),\n  }));\n}\n\nfunction _childModules(node) {\n  return Object.keys(node)\n    .map(module => {\n      const result = {\n        name: module,\n        type: typeNodeModules,\n      };\n\n      if (typeof node[module] === \"object\") {\n        result.children = _childModules(node[module]);\n      } else {\n        result.size = node[module];\n      }\n\n      return result;\n    });\n}\n\nfunction d3TreeFromStats(stats) {\n  assert.strictEqual(typeof stats, \"object\",\n    \"Must pass a stats object\");\n  assert.strictEqual(typeof stats.minifiedBytesByPackage, \"object\",\n    \"Stats object must contain a `minifiedBytesByPackage` object\");\n\n  const sizeOrDetail = (name, node) => {\n    const result = {\n      name,\n      type: typePackage,\n    };\n\n    // A non-leaf is: [size (Number), limb (Object)]\n    // A leaf is size (Number)\n    if (Array.isArray(node)) {\n      const [, detail] = node;\n      result.children = _childModules(detail);\n    } else {\n      result.size = node;\n    }\n\n    return result;\n  };\n\n  // Main entry into the stats is the `minifiedBytesByPackage` attribute.\n  return Object.keys(stats.minifiedBytesByPackage)\n    .map(name =>\n      sizeOrDetail(name\n        // Change the \"packages/bundle.js\" name to \"(bundle)\"\n        .replace(/^[^\\/]+\\/(.*)\\.js$/, \"($1)\"),\n          stats.minifiedBytesByPackage[name]));\n}\n\nMeteor.startup(() => {\n  if (! Package.webapp) {\n    return;\n  }\n\n  Package.webapp.WebAppInternals.meteorInternalHandlers.use(\n    methodNameStats,\n    statsMiddleware\n  );\n});\n\nfunction statsMiddleware(request, response) {\n  const statBundles = getStatBundles();\n\n  function sendJSON(data) {\n    response.setHeader(\"Content-Type\", \"application/json\");\n    response.end(JSON.stringify(data, null, 2));\n  }\n\n  // Silently return no data if not simulating production.\n  if (! Meteor.isProduction) {\n    return sendJSON(null);\n  }\n\n  if (! (statBundles && statBundles.length)) {\n    throw new Meteor.Error(\n      \"no-stats-bundles\",\n      \"Unable to retrieve stats\"\n    );\n  }\n\n  sendJSON({\n    name: \"main\",\n    children: statBundles.map((statBundle, index, array) => ({\n      name: statBundle.arch,\n      type: typeBundle,\n      children: d3TreeFromStats(statBundle.stats),\n    }))\n  });\n}\n","export const packageName = \"bundle-visualizer\";\nexport const classPrefix = \"meteorBundleVisualizer\";\nexport const methodNameStats = `/__meteor__/${packageName}/stats`;\nexport const typeBundle = \"bundle\";\nexport const typePackage = \"package\";\nexport const typeNodeModules = \"node_modules\";\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function prefixedClass(className) {\n  return `${classPrefix}${capitalizeFirstLetter(className)}`;\n}\n"]}}]