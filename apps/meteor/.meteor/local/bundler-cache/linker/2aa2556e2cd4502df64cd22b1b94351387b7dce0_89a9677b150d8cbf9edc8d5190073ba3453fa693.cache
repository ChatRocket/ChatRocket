[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\nPackage[\"core-runtime\"].queue(\"accounts-meteor-developer\",function () {/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Accounts = Package['accounts-base'].Accounts;\nvar MeteorDeveloperAccounts = Package['meteor-developer-oauth'].MeteorDeveloperAccounts;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package.modules.meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"accounts-meteor-developer\":{\"notice.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// packages/accounts-meteor-developer/notice.js                                                        //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nif (Package['accounts-ui'] && !Package['service-configuration'] && !Object.prototype.hasOwnProperty.call(Package, 'meteor-developer-config-ui')) {\n  console.warn(\"Note: You're using accounts-ui and accounts-meteor-developer,\\n\" + \"but didn't install the configuration UI for the Meteor Developer\\n\" + \"Accounts OAuth. You can install it with:\\n\" + \"\\n\" + \"    meteor add meteor-developer-config-ui\" + \"\\n\");\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"meteor-developer.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// packages/accounts-meteor-developer/meteor-developer.js                                              //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nAccounts.oauth.registerService(\"meteor-developer\");\nif (Meteor.isClient) {\n  var loginWithMeteorDeveloperAccount = function (options, callback) {\n    // support a callback without options\n    if (!callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n    var credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    MeteorDeveloperAccounts.requestCredential(options, credentialRequestCompleteCallback);\n  };\n  Accounts.registerClientLoginFunction('meteor-developer', loginWithMeteorDeveloperAccount);\n  Meteor.loginWithMeteorDeveloperAccount = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return Accounts.applyLoginFunction('meteor-developer', args);\n  };\n} else {\n  Accounts.addAutopublishFields({\n    // publish all fields including access token, which can legitimately be used\n    // from the client (if transmitted over ssl or on localhost).\n    forLoggedInUser: ['services.meteor-developer'],\n    forOtherUsers: ['services.meteor-developer.username', 'services.meteor-developer.profile', 'services.meteor-developer.id']\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\n\n/* Exports */\nreturn {\n  require: require,\n  eagerModulePaths: [\n    \"/node_modules/meteor/accounts-meteor-developer/notice.js\",\n    \"/node_modules/meteor/accounts-meteor-developer/meteor-developer.js\"\n  ]\n}});\n","servePath":"/packages/accounts-meteor-developer.js","sourceMap":{"version":3,"sources":["packages/accounts-meteor-developer/notice.js","packages/accounts-meteor-developer/meteor-developer.js"],"names":["Package","Object","prototype","hasOwnProperty","call","console","warn","Accounts","oauth","registerService","Meteor","isClient","loginWithMeteorDeveloperAccount","options","callback","credentialRequestCompleteCallback","credentialRequestCompleteHandler","MeteorDeveloperAccounts","requestCredential","registerClientLoginFunction","_len","arguments","length","args","Array","_key","applyLoginFunction","addAutopublishFields","forLoggedInUser","forOtherUsers"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAO,CAAC,aAAa,CAAC,IACnB,CAACA,OAAO,CAAC,uBAAuB,CAAC,IACjC,CAACC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,OAAO,EAAE,4BAA4B,CAAC,EAAE;EACnFK,OAAO,CAACC,IAAI,CACV,iEAAiE,GACjE,oEAAoE,GACpE,4CAA4C,GAC5C,IAAI,GACJ,2CAA2C,GAC3C,IACF,CAAC;AACH,C;;;;;;;;;;;ACXAC,QAAQ,CAACC,KAAK,CAACC,eAAe,CAAC,kBAAkB,CAAC;AAElD,IAAIC,MAAM,CAACC,QAAQ,EAAE;EACnB,IAAMC,+BAA+B,GAAG,SAAAA,CAACC,OAAO,EAAEC,QAAQ,EAAK;IAC7D;IACA,IAAI,CAAEA,QAAQ,IAAI,OAAOD,OAAO,KAAK,UAAU,EAAE;MAC/CC,QAAQ,GAAGD,OAAO;MAClBA,OAAO,GAAG,IAAI;IAChB;IAEA,IAAME,iCAAiC,GACjCR,QAAQ,CAACC,KAAK,CAACQ,gCAAgC,CAACF,QAAQ,CAAC;IAC/DG,uBAAuB,CAACC,iBAAiB,CAACL,OAAO,EAAEE,iCAAiC,CAAC;EACvF,CAAC;EACDR,QAAQ,CAACY,2BAA2B,CAAC,kBAAkB,EAAEP,+BAA+B,CAAC;EACzFF,MAAM,CAACE,+BAA+B,GAAG;IAAA,SAAAQ,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAIC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAA,OAC/ClB,QAAQ,CAACmB,kBAAkB,CAAC,kBAAkB,EAAEH,IAAI,CAAC;EAAA;AACzD,CAAC,MAAM;EACLhB,QAAQ,CAACoB,oBAAoB,CAAC;IAC5B;IACA;IACAC,eAAe,EAAE,CAAC,2BAA2B,CAAC;IAC9CC,aAAa,EAAE,CACb,oCAAoC,EACpC,mCAAmC,EACnC,8BAA8B;EAElC,CAAC,CAAC;AACJ,C","file":"/packages/accounts-meteor-developer.js","sourcesContent":["if (Package['accounts-ui']\n    && !Package['service-configuration']\n    && !Object.prototype.hasOwnProperty.call(Package, 'meteor-developer-config-ui')) {\n  console.warn(\n    \"Note: You're using accounts-ui and accounts-meteor-developer,\\n\" +\n    \"but didn't install the configuration UI for the Meteor Developer\\n\" +\n    \"Accounts OAuth. You can install it with:\\n\" +\n    \"\\n\" +\n    \"    meteor add meteor-developer-config-ui\" +\n    \"\\n\"\n  );\n}\n","Accounts.oauth.registerService(\"meteor-developer\");\n\nif (Meteor.isClient) {\n  const loginWithMeteorDeveloperAccount = (options, callback) => {\n    // support a callback without options\n    if (! callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    const credentialRequestCompleteCallback =\n          Accounts.oauth.credentialRequestCompleteHandler(callback);\n    MeteorDeveloperAccounts.requestCredential(options, credentialRequestCompleteCallback);\n  };\n  Accounts.registerClientLoginFunction('meteor-developer', loginWithMeteorDeveloperAccount);\n  Meteor.loginWithMeteorDeveloperAccount = (...args) =>\n    Accounts.applyLoginFunction('meteor-developer', args);\n} else {\n  Accounts.addAutopublishFields({\n    // publish all fields including access token, which can legitimately be used\n    // from the client (if transmitted over ssl or on localhost).\n    forLoggedInUser: ['services.meteor-developer'],\n    forOtherUsers: [\n      'services.meteor-developer.username',\n      'services.meteor-developer.profile',\n      'services.meteor-developer.id'\n    ]\n  });\n}\n"]}}]