{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/video-conference/service.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/video-conference/service.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/video-conference/service.ts","inputSourceMap":{"version":3,"file":"server/services/video-conference/service.ts","sourceRoot":"","sources":["server/services/video-conference/service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAIzC,OAAO,EAAE,GAAG,EAAE,oBAAoB,EAAE,IAAI,EAAE,MAAM,4BAA4B,CAAC;AAoB7E,OAAO,EACN,qBAAqB,EACrB,uBAAuB,EACvB,sBAAsB,EACtB,yBAAyB,GACzB,MAAM,2BAA2B,CAAC;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,KAAK,EAAE,eAAe,IAAI,oBAAoB,EAAE,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACrH,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAE7C,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AAEpD,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAE9C,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;AAC9D,OAAO,EAAE,oBAAoB,EAAE,MAAM,2DAA2D,CAAC;AACjG,OAAO,EAAE,UAAU,EAAE,MAAM,8CAA8C,CAAC;AAC1E,OAAO,EAAE,WAAW,EAAE,MAAM,+CAA+C,CAAC;AAC5E,OAAO,EAAE,qBAAqB,EAAE,MAAM,4CAA4C,CAAC;AACnF,OAAO,EAAE,OAAO,EAAE,MAAM,yCAAyC,CAAC;AAClE,OAAO,EAAE,IAAI,EAAE,MAAM,+BAA+B,CAAC;AACrD,OAAO,gBAAgB,MAAM,6DAA6D,CAAC;AAC3F,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,6DAA6D,CAAC;AAC5F,OAAO,EAAE,gBAAgB,EAAE,MAAM,4CAA4C,CAAC;AAC9E,OAAO,EAAE,iBAAiB,EAAE,MAAM,iDAAiD,CAAC;AACpF,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AACnD,OAAO,EAAE,kBAAkB,EAAE,MAAM,wCAAwC,CAAC;AAC5E,OAAO,EAAE,sBAAsB,EAAE,MAAM,uCAAuC,CAAC;AAC/E,OAAO,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AACtC,OAAO,EAAE,oCAAoC,EAAE,MAAM,gDAAgD,CAAC;AACtG,OAAO,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAClE,OAAO,EAAE,kBAAkB,EAAE,MAAM,8BAA8B,CAAC;AAClE,OAAO,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAE1D,MAAM,EAAE,EAAE,EAAE,GAAG,cAAc,CAAC,6BAA6B,EAAE,CAAC,KAAK,CAAC;AAEpE,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAE7C,MAAM,OAAO,gBAAiB,SAAQ,oBAAoB;IAC/C,IAAI,GAAG,kBAAkB,CAAC;IAEpC,sGAAsG;IAC/F,KAAK,CAAC,MAAM,CAClB,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,IAAI,EAA6B,EAC1E,UAAU,GAAG,IAAI;QAEjB,OAAO,cAAc,CAAC,KAAK,IAAI,EAAE;YAChC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAuD,GAAG,EAAE;gBAC/F,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;aAChD,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;YACjC,CAAC;YAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAQ,SAAS,CAAC,CAAC;YACvD,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC5C,CAAC;YAED,IAAI,IAAI,KAAK,QAAQ,EAAE,CAAC;gBACvB,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC9D,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;gBACjD,CAAC;gBAED,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACzD,CAAC;YAED,IAAI,IAAI,KAAK,UAAU,EAAE,CAAC;gBACzB,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;YACpD,CAAC;YAED,MAAM,KAAK,GAAI,IAAuC,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;YAC9F,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACd,MAAM,CAAC,KAAK,CAAC;gBACZ,IAAI,EAAE,2BAA2B;gBACjC,KAAK,EAAE,CAAC;aACR,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,uGAAuG;IAChG,KAAK,CAAC,KAAK,CACjB,MAAoB,EACpB,GAAW,EACX,EAAE,KAAK,EAAE,YAAY,EAA8C;QAEnE,OAAO,cAAc,CAAC,KAAK,IAAI,EAAE;YAChC,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;YACvD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,4BAA4B,CAAC,GAAG,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAExF,MAAM,IAAI,GAAG;gBACZ,GAAG,WAAW;gBACd,SAAS,EAAE,MAAM;gBACjB,GAAG;gBACH,YAAY;aACiB,CAAC;YAE/B,IAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,EAAE,CAAC;gBACrC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACpB,CAAC;YAED,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACd,MAAM,CAAC,KAAK,CAAC;gBACZ,IAAI,EAAE,0BAA0B;gBAChC,KAAK,EAAE,CAAC;aACR,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,GAA6B,EAAE,MAA8B,EAAE,OAAmC;QACnH,OAAO,cAAc,CAAC,KAAK,IAAI,EAAE;YAChC,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC5D,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;gBAC3B,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;YACjC,CAAC;YAED,IAAI,IAAI,GAAmE,IAAI,CAAC;YAEhF,IAAI,GAAG,EAAE,CAAC;gBACT,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAA0D,GAAG,EAAE;oBAC5F,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;iBACnD,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,EAAE,CAAC;oBACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;gBAC5C,CAAC;YACF,CAAC;YAED,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,EAAE,CAAC;gBACnC,aAAa,CAAC,EAAE,UAAU,EAAE,2BAA2B,EAAE,CAAC,CAAC;YAC5D,CAAC;YAED,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,IAAI,SAAS,EAAE,OAAO,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACd,MAAM,CAAC,KAAK,CAAC;gBACZ,IAAI,EAAE,yBAAyB;gBAC/B,KAAK,EAAE,CAAC;aACR,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,OAAO,CAAC,MAA8B,EAAE,GAA6B;QACjF,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QAED,IAAI,IAAI,GAA6E,IAAI,CAAC;QAE1F,IAAI,GAAG,EAAE,CAAC;YACT,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAoE,GAAG,EAAE;gBACtG,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;aACnD,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC5C,CAAC;QACF,CAAC;QAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,sBAAsB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,IAAI,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACrI,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAI,MAAM,EAAE,MAAM,EAAE,CAAC;YACpB,OAAO,MAA6B,CAAC;QACtC,CAAC;QAED,OAAO;YACN;gBACC,OAAO,EAAE,gBAAgB;gBACzB,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE;oBACL,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,sBAAsB,CAAC,OAAO,IAAI,CAAC,GAAG,EAAE;iBAC1D;aACD;SACD,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,GAAiB,EAAE,MAA8B;QACpE,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,CAAC;YAC7C,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,qBAAqB,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACnF,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC5C,CAAC;QAED,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,EAAE;YAC9C,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,qBAAqB,CAAC,QAAQ;YACtC,OAAO,EAAE,IAAI,IAAI,EAAE;YACnB,OAAO,EAAE;gBACR,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,IAAc;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAkB;aACjC;SACD,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC,CAAC;QAClD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAE/C,MAAM,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,MAA8B;QAC9C,OAAO,oBAAoB,CAAC,WAAW,CAAwC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC7H,CAAC;IAEM,KAAK,CAAC,aAAa,CAAC,MAA8B;QACxD,OAAO,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IAEM,KAAK,CAAC,IAAI,CAChB,MAAoB,EACpB,aAAkD,EAAE;QAEpD,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,oBAAoB,CAAC,qBAAqB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAE9F,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;QAExE,OAAO;YACN,IAAI;YACJ,MAAM,EAAE,UAAU,CAAC,MAAM,IAAI,CAAC;YAC9B,KAAK,EAAE,IAAI,CAAC,MAAM;YAClB,KAAK;SACL,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,eAAe,CAAC,MAA8B,EAAE,IAAiD;QAC7G,MAAM,oBAAoB,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;IAEM,KAAK,CAAC,UAAU,CAAC,MAA8B,EAAE,OAAqB;QAC5E,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAqD,OAAO,EAAE;YACjG,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;SACpC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,oBAAoB,CAAC,YAAY,CAAC,MAAM,EAAE;YAC/C,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;SACf,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,UAAU,CAAC,MAA8B,EAAE,OAAa;QACpE,MAAM,oBAAoB,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IACrE,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,MAA8B,EAAE,MAAiC;QACvF,QAAQ,MAAM,EAAE,CAAC;YAChB,KAAK,qBAAqB,CAAC,KAAK;gBAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC7B,KAAK,qBAAqB,CAAC,OAAO;gBACjC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,oBAAoB,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC1D,CAAC;IAEM,KAAK,CAAC,OAAO,CAAC,MAA8B,EAAE,MAAqB,EAAE,EAAS;QACpF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC7C,CAAC;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,IAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,EAAE,CAAC;gBACrC,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAmD,CAAC,CAAC;YACnF,CAAC;YAED,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAoE,MAAM,EAAE;YAC/G,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;SACnD,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YAC9B,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,EAAE,EAAE,EAAE,IAAI,IAAI,IAAI,EAAE;SACpB,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,aAAa;QACzB,OAAO,kBAAkB,CAAC,eAAe,EAAE,CAAC;IAC7C,CAAC;IAEM,KAAK,CAAC,wBAAwB,CAAC,YAAoB;QACzD,OAAO,kBAAkB,CAAC,uBAAuB,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IACvE,CAAC;IAEM,KAAK,CAAC,gBAAgB;QAC5B,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAEvD,OAAO;YACN,YAAY;YACZ,YAAY,EAAE,kBAAkB,CAAC,uBAAuB,CAAC,YAAY,CAAC,IAAI,EAAE;SAC5E,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,mBAAmB,CAAC,MAA8B;QAC9D,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAE9C,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,CAAC;YACtC,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YAC3B,MAAM,IAAI,GACT,CAAC,QAAQ,CAAC,GAAG,CAAU,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,EAAE,CAAC;YAC9H,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,uBAAuB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YACjE,MAAM,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEpF,MAAM,qBAAqB,CAAC;gBAC3B,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;aACzB,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE;YAChD,MAAM,EAAE,qBAAqB,CAAC,QAAQ;YACtC,OAAO,EAAE,IAAI,IAAI,EAAE;SACnB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAAC,GAAW,EAAE,GAAW,EAAE,YAAqB;QAC5E,IAAI,CAAC;YACJ,IAAI,YAAY,EAAE,CAAC;gBAClB,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;YAC3C,CAAC;iBAAM,CAAC;gBACP,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;YACnC,CAAC;QACF,CAAC;QAAC,OAAO,KAAc,EAAE,CAAC;YACzB,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;gBAC5B,MAAM,IAAI,CAAC,sBAAsB,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC3D,OAAO,KAAK,CAAC,OAAO,CAAC;YACtB,CAAC;QACF,CAAC;IACF,CAAC;IAEM,KAAK,CAAC,aAAa;QACzB,MAAM,OAAO,GAAG;YACf,cAAc,EAAE,sBAAsB,CAAC,EAAE,CAAC;SAC1C,CAAC;QAEF,OAAO;YACN,eAAe,EAAE;gBAChB,OAAO,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,OAAO,EAAE,OAAO,CAAC;gBACnH,KAAK,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,KAAK,EAAE,OAAO,CAAC;aAC/G;YACD,MAAM,EAAE;gBACP,OAAO,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,qBAAqB,CAAC,OAAO,EAAE,OAAO,CAAC;gBAC1G,OAAO,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,qBAAqB,CAAC,OAAO,EAAE,OAAO,CAAC;gBAC1G,KAAK,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,qBAAqB,CAAC,KAAK,EAAE,OAAO,CAAC;aACtG;YACD,QAAQ,EAAE;gBACT,OAAO,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,UAAU,EAAE,qBAAqB,CAAC,OAAO,EAAE,OAAO,CAAC;gBAC5G,KAAK,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,UAAU,EAAE,qBAAqB,CAAC,KAAK,EAAE,OAAO,CAAC;aACxG;YACD,QAAQ,EAAE;gBACT,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAS,4BAA4B,CAAC;gBAC5D,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAU,sBAAsB,CAAC;gBAClD,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAU,2BAA2B,CAAC;gBAC5D,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAU,yBAAyB,CAAC;gBACxD,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAU,wBAAwB,CAAC;aACtD;SACD,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,cAAc,CAC1B,MAAc,EACd,MAAoB,EACpB,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAA4E;QAE9F,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC7B,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,CAAC,CAAC,MAAM,oBAAoB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,MAAM,oBAAoB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/G,OAAO,KAAK,CAAC;QACd,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAoE,MAAM,EAAE;YAC9H,UAAU,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE;SACnD,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;YACtB,OAAO,IAAI,CAAC;QACb,CAAC;QAED,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC,OAAO,EAAE,CAAC;YACjE,gFAAgF;YAChF,IAAI,MAAM,KAAK,MAAM,IAAI,MAAM,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;gBACxD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;YAClE,CAAC;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,UAAU,CACjB,MAAoB,EACpB,MAAc,EACd,MAAgF;QAEhF,KAAK,GAAG,CAAC,SAAS,CAAC,uBAAuB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACzE,CAAC;IAEO,qBAAqB,CAAC,GAAiB,EAAE,MAA8B;QAC9E,KAAK,GAAG,CAAC,SAAS,CAAC,uBAAuB,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9D,CAAC;IAEO,KAAK,CAAC,OAAO,CAAC,MAA8B;QACnD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QAED,MAAM,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,EAAE,qBAAqB,CAAC,KAAK,EAAE,CAAC,CAAC;QAC/G,MAAM,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAE/C,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC5B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,UAAU,CAAC,MAA8B;QACtD,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAA4C,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACxI,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QAED,MAAM,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,EAAE,qBAAqB,CAAC,OAAO,EAAE,CAAC,CAAC;IAClH,CAAC;IAEO,KAAK,CAAC,aAAa,CAAC,IAA4B;QACvD,MAAM,MAAM,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QAE5E,0DAA0D;QAC1D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAEnD,kFAAkF;QAClF,MAAM,aAAa,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;YAChG,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;SACpC,CAAC,CAAC,OAAO,EAAE,CAAC;QAEb,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE,CAAC;YAC1C,oDAAoD;YACpD,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC9D,SAAS;YACV,CAAC;YAED,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACpD,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,4BAA4B,CACzC,GAAiB,EACjB,YAAqB;QAErB,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAA2B,GAAG,EAAE;YACnE,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;SACpB,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,OAAO,cAAc,CAAC,cAAc,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC1D,CAAC;IAEO,KAAK,CAAC,aAAa,CAAC,IAAqB,EAAE,SAAiB,EAAE,YAAiC;QACtG,MAAM,MAAM,GAAG;YACd,CAAC,EAAE,WAAW;YACd,GAAG,EAAE,EAAE;YACP,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,YAAY,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChC,CAAC;QAE9B,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,MAAM,KAAK,GAAG,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACrE,MAAM,IAAI,GAAG,SAAS,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;QAEpH,MAAM,OAAO,GAAG,MAAM,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAE7D,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC7C,CAAC;QAED,OAAO,OAAO,CAAC,GAAG,CAAC;IACpB,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAAC,YAAoB;QAClD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAChD,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;QACpF,IAAI,CAAC,UAAU,EAAE,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;QACpD,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,oBAAoB;QACjC,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,EAAE,CAAC;YAC1C,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAC5C,CAAC;QAED,MAAM,YAAY,GAAG,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;QAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QAChD,CAAC;QAED,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QAE1C,OAAO,YAAY,CAAC;IACrB,CAAC;IAEO,KAAK,CAAC,sBAAsB,CAAC,GAAW,EAAE,GAAW,EAAE,OAAe;QAC7E,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAoC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACxH,MAAM,QAAQ,GAAG,IAAI,EAAE,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAS,UAAU,CAAC,IAAI,IAAI,CAAC;QAC5E,MAAM,GAAG,GAAG,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;QACzE,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE;YACvB,GAAG,EAAE,QAAQ;SACb,CAAC,CAAC;QAEH,KAAK,GAAG,CAAC,SAAS,CAAC,yBAAyB,EAAE,GAAG,EAAE,GAAG,EAAE;YACvD,GAAG;SACH,CAAC,CAAC;IACJ,CAAC;IAEO,KAAK,CAAC,qBAAqB,CAAC,IAA8B,EAAE,IAAW,EAAE,GAAW;QAC3F,MAAM,QAAQ,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAU,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QAChH,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,wBAAwB,EAAE;YAC7C,QAAQ;SACR,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE;YACrC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YAC5B;gBACC,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,gBAAgB;gBACvB,OAAO,EAAE,IAAI,CAAC,GAAG;gBACjB,QAAQ,EAAE;oBACT;wBACC,KAAK,EAAE,gBAAgB;wBACvB,OAAO,EAAE,IAAI,CAAC,GAAG;wBACjB,QAAQ,EAAE,cAAc;wBACxB,IAAI,EAAE,QAAQ;wBACd,IAAI,EAAE;4BACL,IAAI,EAAE,YAAY;4BAClB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC;4BACzB,KAAK,EAAE,IAAI;yBACX;wBACD,GAAG;qBACH;iBACD;aACD;SACD,CAAC,CAAC;IACJ,CAAC;IAEO,mBAAmB,CAAC,MAAc;QACzC,OAAO;YACN,IAAI,EAAE,YAAY;YAClB,OAAO,EAAE,MAAM;YACf,MAAM;YACN,KAAK,EAAE,gBAAgB;SACvB,CAAC;IACH,CAAC;IAEO,iBAAiB,CAAC,IAAY;QACrC,OAAO;YACN,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,gBAAgB;YACvB,IAAI,EAAE;gBACL,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,GAAG,IAAI,EAAE;aACf;SACD,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,oBAAoB,CACjC,IAA6E,EAC7E,QAAsB;QAEtB,IACC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,IAAI;YACpC,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC,KAAK,IAAI;YACjD,CAAC,CAAC,MAAM,iBAAiB,CAAC,QAAQ,EAAE,qBAAqB,CAAC,CAAC,EAC1D,CAAC;YACF,OAAO;QACR,CAAC;QAED,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC/D,MAAM,IAAI,CAAC,IAAI,CAAC;YACf,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,cAAc;YACrB,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;YACpC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,kBAAkB,CAAC;YAChC,OAAO,EAAE;gBACR,IAAI,EAAE,MAAM,CAAC,WAAW,EAAE;gBAC1B,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,gBAAgB,EAAE,WAAW;gBAC7B,MAAM,EAAE,IAAI,CAAC,SAAS;gBACtB,MAAM,EAAE,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;gBACjD,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,MAAM,EAAE,IAAI,CAAC,GAAG;aAChB;YACD,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,gBAAgB,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;YACpE,GAAG,EAAE;gBACJ,KAAK,EAAE,OAAO;gBACd,KAAK,EAAE,gBAAgB,CAAC,MAAM,CAAC,oBAAoB,CAAC;aACpD;YACD,GAAG,EAAE;gBACJ,QAAQ,EAAE,WAAW;aACrB;SACD,CAAC,CAAC;IACJ,CAAC;IAEO,KAAK,CAAC,wBAAwB,CAAC,MAA8B;QACpE,IAAI,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC,KAAK,IAAI,EAAE,CAAC;YAC/F,OAAO;QACR,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAA0E,MAAM,EAAE;YACpI,UAAU,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;SACzD,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QAED,MAAM,aAAa,GAAG,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;YAC1F,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;SACpC,CAAC,CAAC;QAEH,IAAI,KAAK,EAAE,MAAM,YAAY,IAAI,aAAa,EAAE,CAAC;YAChD,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3D,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,WAAW,CACxB,YAAoB,EACpB,IAAW,EACX,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAkC,EAClD,SAA2C;QAE3C,MAAM,QAAQ,GAAG,IAAI,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QAC/D,IAAI,CAAC,QAAQ,EAAE,CAAC;YACf,mCAAmC;YACnC,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,MAAM,GAAG,MAAM,oBAAoB,CAAC,YAAY,CAAC;YACtD,GAAG,SAAS;YACZ,GAAG;YACH,SAAS,EAAE;gBACV,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,IAAc;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAkB;aACjC;YACD,YAAY;SACZ,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;QAE9C,MAAM,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAE/C,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAkC,CAAC;QACjF,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QACjD,CAAC;QACD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,oBAAoB,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAEnD,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,SAAS,CAAC;QAClC,MAAM,oBAAoB,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAExE,uFAAuF;QACvF,UAAU,CAAC,KAAK,IAAI,EAAE;YACrB,IAAI,CAAC;gBACJ,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAyB,MAAM,CAAC,CAAC;gBAEpF,IAAI,IAAI,EAAE,CAAC;oBACV,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBAC/B,IAAI,IAAI,CAAC,MAAM,KAAK,qBAAqB,CAAC,OAAO,EAAE,CAAC;wBACnD,OAAO;oBACR,CAAC;oBAED,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;gBACrC,CAAC;YACF,CAAC;YAAC,MAAM,CAAC;gBACR,gCAAgC;YACjC,CAAC;QACF,CAAC,EAAE,KAAK,CAAC,CAAC;QAEV,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEhD,OAAO;YACN,IAAI,EAAE,QAAQ;YACd,MAAM;YACN,QAAQ;SACR,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,iBAAiB,CAC9B,GAAiB,EACjB,GAAiB,EACjB,MAAc,EACd,MAAgF;QAEhF,MAAM,aAAa,GAAG,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE;YACtE,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;SACpC,CAAC,CAAC;QAEH,MAAM,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACpG,CAAC;IAEO,KAAK,CAAC,UAAU,CACvB,YAAoB,EACpB,IAAW,EACX,GAAiB,EACjB,KAAa,EACb,SAA0C,EAC1C,UAAU,GAAG,IAAI;QAEjB,MAAM,MAAM,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC;YACrD,GAAG,SAAS;YACZ,GAAG;YACH,KAAK;YACL,SAAS,EAAE;gBACV,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,IAAc;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAkB;aACjC;YACD,YAAY;SACZ,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;QAE9C,MAAM,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAE/C,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAiC,CAAC;QAChF,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;QAChD,CAAC;QAED,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,oBAAoB,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAEnD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAChF,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,SAAS,CAAC;QAClC,MAAM,oBAAoB,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAExE,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YAClB,MAAM,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;QAC/F,CAAC;QAED,OAAO;YACN,IAAI,EAAE,iBAAiB;YACvB,MAAM;YACN,GAAG;SACH,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,aAAa,CAAC,YAAoB,EAAE,IAAW,EAAE,GAAiB;QAC/E,MAAM,MAAM,GAAG,MAAM,oBAAoB,CAAC,cAAc,CAAC;YACxD,GAAG;YACH,SAAS,EAAE;gBACV,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,IAAc;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAkB;aACjC;YACD,YAAY;SACZ,CAAC,CAAC;QAEH,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAoC,CAAC;QACnF,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACnD,CAAC;QAED,MAAM,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;QAE9C,8CAA8C;QAE9C,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACxE,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,SAAS,CAAC;QAClC,MAAM,oBAAoB,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAExE,OAAO;YACN,IAAI,EAAE,UAAU;YAChB,MAAM;SACN,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,QAAQ,CACrB,IAAqB,EACrB,IAA4E,EAC5E,OAAmC;QAEnC,KAAK,SAAS,CAAC,QAAQ,CAAC,uBAAuB,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QAEtE,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,IAA4B,CAAC,CAAC;QAEtE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IAEO,KAAK,CAAC,kBAAkB;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,CAAC;YAC5B,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC3C,CAAC;QAED,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE,2BAA2B,EAAE,CAAC;QACvE,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAC5C,CAAC;QAED,OAAO,OAAO,CAAC;IAChB,CAAC;IAEO,KAAK,CAAC,WAAW,CAAC,GAAW;QACpC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAwC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAExH,OAAO,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,CAAC;IACzC,CAAC;IAEO,KAAK,CAAC,cAAc,CAAC,IAAqB;QACjD,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QAED,MAAM,KAAK,GAAG,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACnG,MAAM,QAAQ,GAAkB;YAC/B,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,SAAS,EAAE,IAAI,CAAC,SAAmD;YACnE,KAAK;YACL,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,aAAa,EAAE,IAAI,CAAC,aAAa;SACjC,CAAC;QAEF,OAAO,CAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IACnF,CAAC;IAEO,KAAK,CAAC,mBAAmB,CAAC,IAAqB,EAAE,MAAqB;QAC7E,IAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACnD,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;QAED,IAAI,MAAM,EAAE,CAAC;YACZ,MAAM,YAAY,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAC3H,IAAI,YAAY,EAAE,CAAC;gBAClB,OAAO,YAAY,CAAC,KAAK,IAAI,YAAY,CAAC,IAAI,CAAC;YAChD,CAAC;QACF,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,OAAO,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,IAAI,IAAI,aAAa,CAAC;IACnD,CAAC;IAEO,KAAK,CAAC,YAAY,CAAC,IAAqB;QAC/C,IAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,EAAE,CAAC;YACrC,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBAChB,OAAO,IAAI,CAAC,KAAK,CAAC;YACnB,CAAC;QACF,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,IAAI,EAAE,CAAC;YACV,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;gBACpB,IAAI,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,CAAC;oBAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClC,CAAC;YACF,CAAC;iBAAM,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACvB,OAAO,IAAI,CAAC,KAAK,CAAC;YACnB,CAAC;iBAAM,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;gBACtB,OAAO,IAAI,CAAC,IAAI,CAAC;YAClB,CAAC;QACF,CAAC;QAED,OAAO,aAAa,CAAC;IACtB,CAAC;IAEO,KAAK,CAAC,MAAM,CACnB,IAAqB,EACrB,IAAkD,EAClD,UAAsC,EAAE;QAExC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,GAAG,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC3C,MAAM,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3D,CAAC;QAED,MAAM,QAAQ,GAA0B;YACvC,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,SAAS,EAAE,IAAI,CAAC,SAAmD;YACnE,YAAY,EAAE;gBACb,GAAG,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;gBAC5B,GAAG,EAAE,eAAe,EAAE,MAAM,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE;aACvE;YACD,KAAK,EAAE,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACpC,aAAa,EAAE,IAAI,CAAC,aAAa;SACjC,CAAC;QAEF,MAAM,QAAQ,GAAG,IAAI,IAAI;YACxB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAkB;YACjC,IAAI,EAAE,IAAI,CAAC,IAAc;SACzB,CAAC;QAEF,OAAO,CAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IACvG,CAAC;IAEO,KAAK,CAAC,0BAA0B,CAAC,MAA8B;QACtE,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAE5D,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QAED,OAAO,CAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IACxF,CAAC;IAEO,KAAK,CAAC,8BAA8B,CAAC,MAA8B;QAC1E,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAE5D,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QAED,OAAO,CAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,wBAAwB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IAC5F,CAAC;IAEO,KAAK,CAAC,kBAAkB,CAAC,MAA8B,EAAE,IAA2B;QAC3F,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAE5D,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QAED,OAAO,CAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACpF,CAAC;IAEO,KAAK,CAAC,aAAa,CAC1B,IAA+C,EAC/C,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAwF;QAE7H,qEAAqE;QACrE,+HAA+H;QAC/H,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,MAAM,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;QACzD,CAAC;QAED,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC;YACjD,OAAO;QACR,CAAC;QAED,MAAM,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC;QAE1F,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC5B,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAA8B,EAAE,GAAG,CAAC,CAAC;QACnE,CAAC;QAED,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAAC,IAAqD;QACnF,MAAM,oBAAoB,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7D,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAAC,IAA4B,EAAE,SAAuB;QACnF,yCAAyC;QACzC,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,KAAK,SAAS,CAAC,EAAE,CAAC;YACtE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;YACjG,IAAI,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;gBACxF,gEAAgE;gBAChE,MAAM,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAC5D,CAAC;QACF,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,qBAAqB,CAAC,OAAO,EAAE,CAAC;YACnD,OAAO;QACR,CAAC;QAED,MAAM,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,qBAAqB,CAAC,OAAO,CAAC,CAAC;QAClF,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAE/C,MAAM,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,MAAM,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAEO,uBAAuB;QAC9B,OAAO,QAAQ,CAAC,GAAG,CAAU,kCAAkC,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAU,oBAAoB,CAAC,CAAC;IACjH,CAAC;IAEO,KAAK,CAAC,qBAAqB,CAAC,MAA8B,EAAE,SAAiB;QACpF,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,CAAC;YACrC,OAAO;QACR,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,EAAE;YAC3D,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE;SACvE,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC7C,CAAC;QAED,0EAA0E;QAC1E,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,OAAO;QACR,CAAC;QAED,8FAA8F;QAC9F,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,cAAc,EAAE,CAAC;YACpF,OAAO;QACR,CAAC;QAED,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAS,2CAA2C,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC;QACzH,MAAM,WAAW,GAAG,GAAG,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;QAE7E,MAAM,IAAI,CAAC,6BAA6B,CAAC,WAAW,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;IACxE,CAAC;IAEO,KAAK,CAAC,oBAAoB,CACjC,QAAsB,EACtB,eAA+B,EAAE;QAEjC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAA+C,QAAQ,EAAE;YAC5F,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;SACxC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACf,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBACtC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;YACjD,CAAC;YAED,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1E,CAAC;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,KAAK,CAAC,6BAA6B,CAC1C,IAAY,EACZ,IAA2D,EAC3D,SAAiB;QAEjB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEvD,MAAM,IAAI,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACrF,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC7G,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,UAAU,GAAG,MAAM,UAAU,CAClC,IAAI,EACJ,MAAM,CAAC,EAAE,EAAE,EACX,IAAI,EACJ,EAAE,EACF,KAAK,EACL,KAAK,EACL;YACC,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,IAAI,CAAC,GAAG;YACd,SAAS,EAAE,KAAK;SAChB,EACD;YACC,OAAO,EAAE,IAAI,CAAC,GAAG;SACjB,CACD,CAAC;QAEF,OAAO,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC;IACpE,CAAC;IAEM,KAAK,CAAC,4BAA4B,CAAC,MAA8B,EAAE,GAA6B;QACtG,4CAA4C;QAC5C,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,WAAW,CAA8B,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACjH,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACpC,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACvG,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QAED,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;YACvB,MAAM,oBAAoB,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QAC3D,CAAC;aAAM,CAAC;YACP,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC9D,CAAC;QAED,IAAI,IAAI,EAAE,CAAC;YACV,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QACzF,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,mBAAmB,CAAC,GAAiB,EAAE,GAAiB;QACrE,IAAI,CAAC;YACJ,MAAM,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,SAAS,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;QAClF,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,+GAA+G;YAC/G,MAAM,CAAC,KAAK,CAAC;gBACZ,IAAI,EAAE,8CAA8C;gBACpD,KAAK;gBACL,GAAG;gBACH,GAAG;aACH,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;CACD","sourcesContent":["import { Apps } from '@rocket.chat/apps';\nimport type { VideoConfData, VideoConfDataExtended } from '@rocket.chat/apps-engine/definition/videoConfProviders';\nimport type { AppVideoConfProviderManager } from '@rocket.chat/apps-engine/server/managers';\nimport type { IVideoConfService, VideoConferenceJoinOptions } from '@rocket.chat/core-services';\nimport { api, ServiceClassInternal, Room } from '@rocket.chat/core-services';\nimport type {\n\tIDirectVideoConference,\n\tILivechatVideoConference,\n\tIRoom,\n\tIUser,\n\tVideoConferenceInstructions,\n\tDirectCallInstructions,\n\tConferenceInstructions,\n\tLivechatInstructions,\n\tAtLeast,\n\tIGroupVideoConference,\n\tIVideoConferenceUser,\n\tIMessage,\n\tIStats,\n\tVideoConference,\n\tVideoConferenceCapabilities,\n\tVideoConferenceCreateData,\n\tOptional,\n} from '@rocket.chat/core-typings';\nimport {\n\tVideoConferenceStatus,\n\tisDirectVideoConference,\n\tisGroupVideoConference,\n\tisLivechatVideoConference,\n} from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport { Users, VideoConference as VideoConferenceModel, Rooms, Messages, Subscriptions } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\nimport { wrapExceptions } from '@rocket.chat/tools';\nimport type * as UiKit from '@rocket.chat/ui-kit';\nimport { MongoInternals } from 'meteor/mongo';\n\nimport { RocketChatAssets } from '../../../app/assets/server';\nimport { canAccessRoomIdAsync } from '../../../app/authorization/server/functions/canAccessRoom';\nimport { createRoom } from '../../../app/lib/server/functions/createRoom';\nimport { sendMessage } from '../../../app/lib/server/functions/sendMessage';\nimport { notifyOnMessageChange } from '../../../app/lib/server/lib/notifyListener';\nimport { metrics } from '../../../app/metrics/server/lib/metrics';\nimport { Push } from '../../../app/push/server/push';\nimport PushNotification from '../../../app/push-notifications/server/lib/PushNotification';\nimport { settings } from '../../../app/settings/server';\nimport { updateCounter } from '../../../app/statistics/server/functions/updateStatsCounter';\nimport { getUserAvatarURL } from '../../../app/utils/server/getUserAvatarURL';\nimport { getUserPreference } from '../../../app/utils/server/lib/getUserPreference';\nimport { callbacks } from '../../../lib/callbacks';\nimport { availabilityErrors } from '../../../lib/videoConference/constants';\nimport { readSecondaryPreferred } from '../../database/readSecondaryPreferred';\nimport { i18n } from '../../lib/i18n';\nimport { isRoomCompatibleWithVideoConfRinging } from '../../lib/isRoomCompatibleWithVideoConfRinging';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport { videoConfProviders } from '../../lib/videoConfProviders';\nimport { videoConfTypes } from '../../lib/videoConfTypes';\n\nconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\nconst logger = new Logger('VideoConference');\n\nexport class VideoConfService extends ServiceClassInternal implements IVideoConfService {\n\tprotected name = 'video-conference';\n\n\t// VideoConference.create: Start a video conference using the type and provider specified as arguments\n\tpublic async create(\n\t\t{ type, rid, createdBy, providerName, ...data }: VideoConferenceCreateData,\n\t\tuseAppUser = true,\n\t): Promise<VideoConferenceInstructions> {\n\t\treturn wrapExceptions(async () => {\n\t\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 't' | 'uids' | 'name' | 'fname'>>(rid, {\n\t\t\t\tprojection: { t: 1, uids: 1, name: 1, fname: 1 },\n\t\t\t});\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('invalid-room');\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneById<IUser>(createdBy);\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('failed-to-load-own-data');\n\t\t\t}\n\n\t\t\tif (type === 'direct') {\n\t\t\t\tif (!isRoomCompatibleWithVideoConfRinging(room.t, room.uids)) {\n\t\t\t\t\tthrow new Error('type-and-room-not-compatible');\n\t\t\t\t}\n\n\t\t\t\treturn this.startDirect(providerName, user, room, data);\n\t\t\t}\n\n\t\t\tif (type === 'livechat') {\n\t\t\t\treturn this.startLivechat(providerName, user, rid);\n\t\t\t}\n\n\t\t\tconst title = (data as Partial<IGroupVideoConference>).title || room.fname || room.name || '';\n\t\t\treturn this.startGroup(providerName, user, room._id, title, data, useAppUser);\n\t\t}).catch((e) => {\n\t\t\tlogger.error({\n\t\t\t\tname: 'Error on VideoConf.create',\n\t\t\t\terror: e,\n\t\t\t});\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\t// VideoConference.start: Detect the desired type and provider then start a video conference using them\n\tpublic async start(\n\t\tcaller: IUser['_id'],\n\t\trid: string,\n\t\t{ title, allowRinging }: { title?: string; allowRinging?: boolean },\n\t): Promise<VideoConferenceInstructions> {\n\t\treturn wrapExceptions(async () => {\n\t\t\tconst providerName = await this.getValidatedProvider();\n\t\t\tconst initialData = await this.getTypeForNewVideoConference(rid, Boolean(allowRinging));\n\n\t\t\tconst data = {\n\t\t\t\t...initialData,\n\t\t\t\tcreatedBy: caller,\n\t\t\t\trid,\n\t\t\t\tproviderName,\n\t\t\t} as VideoConferenceCreateData;\n\n\t\t\tif (data.type === 'videoconference') {\n\t\t\t\tdata.title = title;\n\t\t\t}\n\n\t\t\treturn this.create(data, false);\n\t\t}).catch((e) => {\n\t\t\tlogger.error({\n\t\t\t\tname: 'Error on VideoConf.start',\n\t\t\t\terror: e,\n\t\t\t});\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tpublic async join(uid: IUser['_id'] | undefined, callId: VideoConference['_id'], options: VideoConferenceJoinOptions): Promise<string> {\n\t\treturn wrapExceptions(async () => {\n\t\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\t\t\tif (!call || call.endedAt) {\n\t\t\t\tthrow new Error('invalid-call');\n\t\t\t}\n\n\t\t\tlet user: Pick<IUser, '_id' | 'username' | 'name' | 'avatarETag'> | null = null;\n\n\t\t\tif (uid) {\n\t\t\t\tuser = await Users.findOneById<Pick<IUser, '_id' | 'username' | 'name' | 'avatarETag'>>(uid, {\n\t\t\t\t\tprojection: { name: 1, username: 1, avatarETag: 1 },\n\t\t\t\t});\n\t\t\t\tif (!user) {\n\t\t\t\t\tthrow new Error('failed-to-load-own-data');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (call.providerName === 'jitsi') {\n\t\t\t\tupdateCounter({ settingsId: 'Jitsi_Click_To_Join_Count' });\n\t\t\t}\n\n\t\t\treturn this.joinCall(call, user || undefined, options);\n\t\t}).catch((e) => {\n\t\t\tlogger.error({\n\t\t\t\tname: 'Error on VideoConf.join',\n\t\t\t\terror: e,\n\t\t\t});\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tpublic async getInfo(callId: VideoConference['_id'], uid: IUser['_id'] | undefined): Promise<UiKit.LayoutBlock[]> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\t\tif (!call) {\n\t\t\tthrow new Error('invalid-call');\n\t\t}\n\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\tlet user: Pick<Required<IUser>, '_id' | 'username' | 'name' | 'avatarETag'> | null = null;\n\n\t\tif (uid) {\n\t\t\tuser = await Users.findOneById<Pick<Required<IUser>, '_id' | 'username' | 'name' | 'avatarETag'>>(uid, {\n\t\t\t\tprojection: { name: 1, username: 1, avatarETag: 1 },\n\t\t\t});\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('failed-to-load-own-data');\n\t\t\t}\n\t\t}\n\n\t\tconst blocks = await (await this.getProviderManager()).getVideoConferenceInfo(call.providerName, call, user || undefined).catch((e) => {\n\t\t\tthrow new Error(e);\n\t\t});\n\n\t\tif (blocks?.length) {\n\t\t\treturn blocks as UiKit.LayoutBlock[];\n\t\t}\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tblockId: 'videoconf-info',\n\t\t\t\ttype: 'section',\n\t\t\t\ttext: {\n\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\ttext: `**${i18n.t('Video_Conference_Url')}**: ${call.url}`,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tpublic async cancel(uid: IUser['_id'], callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\t\tif (!call || !isDirectVideoConference(call)) {\n\t\t\tthrow new Error('invalid-call');\n\t\t}\n\n\t\tif (call.status !== VideoConferenceStatus.CALLING || call.endedBy || call.endedAt) {\n\t\t\tthrow new Error('invalid-call-status');\n\t\t}\n\n\t\tconst user = await Users.findOneById(uid);\n\t\tif (!user) {\n\t\t\tthrow new Error('failed-to-load-own-data');\n\t\t}\n\n\t\tawait VideoConferenceModel.setDataById(callId, {\n\t\t\tringing: false,\n\t\t\tstatus: VideoConferenceStatus.DECLINED,\n\t\t\tendedAt: new Date(),\n\t\t\tendedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name as string,\n\t\t\t\tusername: user.username as string,\n\t\t\t},\n\t\t});\n\n\t\tawait this.runVideoConferenceChangedEvent(callId);\n\t\tthis.notifyVideoConfUpdate(call.rid, call._id);\n\n\t\tawait this.sendAllPushNotifications(call._id);\n\t}\n\n\tpublic async get(callId: VideoConference['_id']): Promise<Omit<VideoConference, 'providerData'> | null> {\n\t\treturn VideoConferenceModel.findOneById<Omit<VideoConference, 'providerData'>>(callId, { projection: { providerData: 0 } });\n\t}\n\n\tpublic async getUnfiltered(callId: VideoConference['_id']): Promise<VideoConference | null> {\n\t\treturn VideoConferenceModel.findOneById(callId);\n\t}\n\n\tpublic async list(\n\t\troomId: IRoom['_id'],\n\t\tpagination: { offset?: number; count?: number } = {},\n\t): Promise<PaginatedResult<{ data: VideoConference[] }>> {\n\t\tconst { cursor, totalCount } = VideoConferenceModel.findPaginatedByRoomId(roomId, pagination);\n\n\t\tconst [data, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\treturn {\n\t\t\tdata,\n\t\t\toffset: pagination.offset || 0,\n\t\t\tcount: data.length,\n\t\t\ttotal,\n\t\t};\n\t}\n\n\tpublic async setProviderData(callId: VideoConference['_id'], data: VideoConference['providerData'] | undefined): Promise<void> {\n\t\tawait VideoConferenceModel.setProviderDataById(callId, data);\n\t}\n\n\tpublic async setEndedBy(callId: VideoConference['_id'], endedBy: IUser['_id']): Promise<void> {\n\t\tconst user = await Users.findOneById<Required<Pick<IUser, '_id' | 'username' | 'name'>>>(endedBy, {\n\t\t\tprojection: { username: 1, name: 1 },\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new Error('Invalid User');\n\t\t}\n\n\t\tawait VideoConferenceModel.setEndedById(callId, {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t\tname: user.name,\n\t\t});\n\t}\n\n\tpublic async setEndedAt(callId: VideoConference['_id'], endedAt: Date): Promise<void> {\n\t\tawait VideoConferenceModel.setEndedById(callId, undefined, endedAt);\n\t}\n\n\tpublic async setStatus(callId: VideoConference['_id'], status: VideoConference['status']): Promise<void> {\n\t\tswitch (status) {\n\t\t\tcase VideoConferenceStatus.ENDED:\n\t\t\t\treturn this.endCall(callId);\n\t\t\tcase VideoConferenceStatus.EXPIRED:\n\t\t\t\treturn this.expireCall(callId);\n\t\t}\n\n\t\tawait VideoConferenceModel.setStatusById(callId, status);\n\t}\n\n\tpublic async addUser(callId: VideoConference['_id'], userId?: IUser['_id'], ts?: Date): Promise<void> {\n\t\tconst call = await this.get(callId);\n\t\tif (!call) {\n\t\t\tthrow new Error('Invalid video conference');\n\t\t}\n\n\t\tif (!userId) {\n\t\t\tif (call.type === 'videoconference') {\n\t\t\t\treturn this.addAnonymousUser(call as Omit<IGroupVideoConference, 'providerData'>);\n\t\t\t}\n\n\t\t\tthrow new Error('Invalid User');\n\t\t}\n\n\t\tconst user = await Users.findOneById<Required<Pick<IUser, '_id' | 'username' | 'name' | 'avatarETag'>>>(userId, {\n\t\t\tprojection: { username: 1, name: 1, avatarETag: 1 },\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new Error('Invalid User');\n\t\t}\n\n\t\tawait this.addUserToCall(call, {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t\tname: user.name,\n\t\t\tavatarETag: user.avatarETag,\n\t\t\tts: ts || new Date(),\n\t\t});\n\t}\n\n\tpublic async listProviders(): Promise<{ key: string; label: string }[]> {\n\t\treturn videoConfProviders.getProviderList();\n\t}\n\n\tpublic async listProviderCapabilities(providerName: string): Promise<VideoConferenceCapabilities> {\n\t\treturn videoConfProviders.getProviderCapabilities(providerName) || {};\n\t}\n\n\tpublic async listCapabilities(): Promise<{ providerName: string; capabilities: VideoConferenceCapabilities }> {\n\t\tconst providerName = await this.getValidatedProvider();\n\n\t\treturn {\n\t\t\tproviderName,\n\t\t\tcapabilities: videoConfProviders.getProviderCapabilities(providerName) || {},\n\t\t};\n\t}\n\n\tpublic async declineLivechatCall(callId: VideoConference['_id']): Promise<boolean> {\n\t\tconst call = await this.getUnfiltered(callId);\n\n\t\tif (!isLivechatVideoConference(call)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (call.messages.started) {\n\t\t\tconst name =\n\t\t\t\t(settings.get<boolean>('UI_Use_Real_Name') ? call.createdBy.name : call.createdBy.username) || call.createdBy.username || '';\n\t\t\tconst text = i18n.t('video_livechat_missed', { username: name });\n\t\t\tawait Messages.setBlocksById(call.messages.started, [this.buildMessageBlock(text)]);\n\n\t\t\tawait notifyOnMessageChange({\n\t\t\t\tid: call.messages.started,\n\t\t\t});\n\t\t}\n\n\t\tawait VideoConferenceModel.setDataById(call._id, {\n\t\t\tstatus: VideoConferenceStatus.DECLINED,\n\t\t\tendedAt: new Date(),\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tpublic async diagnoseProvider(uid: string, rid: string, providerName?: string): Promise<string | undefined> {\n\t\ttry {\n\t\t\tif (providerName) {\n\t\t\t\tawait this.validateProvider(providerName);\n\t\t\t} else {\n\t\t\t\tawait this.getValidatedProvider();\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tawait this.createEphemeralMessage(uid, rid, error.message);\n\t\t\t\treturn error.message;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async getStatistics(): Promise<IStats['videoConf']> {\n\t\tconst options = {\n\t\t\treadPreference: readSecondaryPreferred(db),\n\t\t};\n\n\t\treturn {\n\t\t\tvideoConference: {\n\t\t\t\tstarted: await VideoConferenceModel.countByTypeAndStatus('videoconference', VideoConferenceStatus.STARTED, options),\n\t\t\t\tended: await VideoConferenceModel.countByTypeAndStatus('videoconference', VideoConferenceStatus.ENDED, options),\n\t\t\t},\n\t\t\tdirect: {\n\t\t\t\tcalling: await VideoConferenceModel.countByTypeAndStatus('direct', VideoConferenceStatus.CALLING, options),\n\t\t\t\tstarted: await VideoConferenceModel.countByTypeAndStatus('direct', VideoConferenceStatus.STARTED, options),\n\t\t\t\tended: await VideoConferenceModel.countByTypeAndStatus('direct', VideoConferenceStatus.ENDED, options),\n\t\t\t},\n\t\t\tlivechat: {\n\t\t\t\tstarted: await VideoConferenceModel.countByTypeAndStatus('livechat', VideoConferenceStatus.STARTED, options),\n\t\t\t\tended: await VideoConferenceModel.countByTypeAndStatus('livechat', VideoConferenceStatus.ENDED, options),\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\tprovider: settings.get<string>('VideoConf_Default_Provider'),\n\t\t\t\tdms: settings.get<boolean>('VideoConf_Enable_DMs'),\n\t\t\t\tchannels: settings.get<boolean>('VideoConf_Enable_Channels'),\n\t\t\t\tgroups: settings.get<boolean>('VideoConf_Enable_Groups'),\n\t\t\t\tteams: settings.get<boolean>('VideoConf_Enable_Teams'),\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic async validateAction(\n\t\taction: string,\n\t\tcaller: IUser['_id'],\n\t\t{ callId, uid, rid }: { callId: VideoConference['_id']; uid: IUser['_id']; rid: IRoom['_id'] },\n\t): Promise<boolean> {\n\t\tif (!callId || !uid || !rid) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!(await canAccessRoomIdAsync(rid, caller)) || (caller !== uid && !(await canAccessRoomIdAsync(rid, uid)))) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst call = await VideoConferenceModel.findOneById<Pick<VideoConference, '_id' | 'status' | 'endedAt' | 'createdBy'>>(callId, {\n\t\t\tprojection: { status: 1, endedAt: 1, createdBy: 1 },\n\t\t});\n\n\t\tif (!call) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (action === 'end') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (call.endedAt || call.status > VideoConferenceStatus.STARTED) {\n\t\t\t// If the caller is still calling about a call that has already ended, notify it\n\t\t\tif (action === 'call' && caller === call.createdBy._id) {\n\t\t\t\tthis.notifyUser(call.createdBy._id, 'end', { rid, uid, callId });\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate notifyUser(\n\t\tuserId: IUser['_id'],\n\t\taction: string,\n\t\tparams: { uid: IUser['_id']; rid: IRoom['_id']; callId: VideoConference['_id'] },\n\t): void {\n\t\tvoid api.broadcast('user.video-conference', { userId, action, params });\n\t}\n\n\tprivate notifyVideoConfUpdate(rid: IRoom['_id'], callId: VideoConference['_id']): void {\n\t\tvoid api.broadcast('room.video-conference', { rid, callId });\n\t}\n\n\tprivate async endCall(callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await this.getUnfiltered(callId);\n\t\tif (!call) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait VideoConferenceModel.setDataById(call._id, { endedAt: new Date(), status: VideoConferenceStatus.ENDED });\n\t\tawait this.runVideoConferenceChangedEvent(call._id);\n\t\tthis.notifyVideoConfUpdate(call.rid, call._id);\n\n\t\tif (call.type === 'direct') {\n\t\t\treturn this.endDirectCall(call);\n\t\t}\n\t}\n\n\tprivate async expireCall(callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById<Pick<VideoConference, '_id' | 'messages'>>(callId, { projection: { messages: 1 } });\n\t\tif (!call) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait VideoConferenceModel.setDataById(call._id, { endedAt: new Date(), status: VideoConferenceStatus.EXPIRED });\n\t}\n\n\tprivate async endDirectCall(call: IDirectVideoConference): Promise<void> {\n\t\tconst params = { rid: call.rid, uid: call.createdBy._id, callId: call._id };\n\n\t\t// Notify the caller that the call was ended by the server\n\t\tthis.notifyUser(call.createdBy._id, 'end', params);\n\n\t\t// If the callee hasn't joined the call yet, notify them that it has already ended\n\t\tconst subscriptions = await Subscriptions.findByRoomIdAndNotUserId(call.rid, call.createdBy._id, {\n\t\t\tprojection: { 'u._id': 1, '_id': 0 },\n\t\t}).toArray();\n\n\t\tfor (const subscription of subscriptions) {\n\t\t\t// Skip notifying users that already joined the call\n\t\t\tif (call.users.find(({ _id }) => _id === subscription.u._id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.notifyUser(subscription.u._id, 'end', params);\n\t\t}\n\t}\n\n\tprivate async getTypeForNewVideoConference(\n\t\trid: IRoom['_id'],\n\t\tallowRinging: boolean,\n\t): Promise<AtLeast<VideoConferenceCreateData, 'type'>> {\n\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 't'>>(rid, {\n\t\t\tprojection: { t: 1 },\n\t\t});\n\n\t\tif (!room) {\n\t\t\tthrow new Error('invalid-room');\n\t\t}\n\n\t\treturn videoConfTypes.getTypeForRoom(room, allowRinging);\n\t}\n\n\tprivate async createMessage(call: VideoConference, createdBy?: IUser, customBlocks?: IMessage['blocks']): Promise<IMessage['_id']> {\n\t\tconst record = {\n\t\t\tt: 'videoconf',\n\t\t\tmsg: '',\n\t\t\tgroupable: false,\n\t\t\tblocks: customBlocks || [this.buildVideoConfBlock(call._id)],\n\t\t} satisfies Partial<IMessage>;\n\n\t\tconst room = await Rooms.findOneById(call.rid);\n\t\tconst appId = videoConfProviders.getProviderAppId(call.providerName);\n\t\tconst user = createdBy || (appId && (await Users.findOneByAppId(appId))) || (await Users.findOneById('rocket.cat'));\n\n\t\tconst message = await sendMessage(user, record, room, false);\n\n\t\tif (!message) {\n\t\t\tthrow new Error('failed-to-create-message');\n\t\t}\n\n\t\treturn message._id;\n\t}\n\n\tprivate async validateProvider(providerName: string): Promise<void> {\n\t\tconst manager = await this.getProviderManager();\n\t\tconst configured = await manager.isFullyConfigured(providerName).catch(() => false);\n\t\tif (!configured) {\n\t\t\tthrow new Error(availabilityErrors.NOT_CONFIGURED);\n\t\t}\n\t}\n\n\tprivate async getValidatedProvider(): Promise<string> {\n\t\tif (!videoConfProviders.hasAnyProvider()) {\n\t\t\tthrow new Error(availabilityErrors.NO_APP);\n\t\t}\n\n\t\tconst providerName = videoConfProviders.getActiveProvider();\n\t\tif (!providerName) {\n\t\t\tthrow new Error(availabilityErrors.NOT_ACTIVE);\n\t\t}\n\n\t\tawait this.validateProvider(providerName);\n\n\t\treturn providerName;\n\t}\n\n\tprivate async createEphemeralMessage(uid: string, rid: string, i18nKey: string): Promise<void> {\n\t\tconst user = await Users.findOneById<Pick<IUser, 'language' | 'roles'>>(uid, { projection: { language: 1, roles: 1 } });\n\t\tconst language = user?.language || settings.get<string>('Language') || 'en';\n\t\tconst key = user?.roles.includes('admin') ? `admin-${i18nKey}` : i18nKey;\n\t\tconst msg = i18n.t(key, {\n\t\t\tlng: language,\n\t\t});\n\n\t\tvoid api.broadcast('notify.ephemeralMessage', uid, rid, {\n\t\t\tmsg,\n\t\t});\n\t}\n\n\tprivate async createLivechatMessage(call: ILivechatVideoConference, user: IUser, url: string): Promise<IMessage['_id']> {\n\t\tconst username = (settings.get<boolean>('UI_Use_Real_Name') ? user.name : user.username) || user.username || '';\n\t\tconst text = i18n.t('video_livechat_started', {\n\t\t\tusername,\n\t\t});\n\n\t\treturn this.createMessage(call, user, [\n\t\t\tthis.buildMessageBlock(text),\n\t\t\t{\n\t\t\t\ttype: 'actions',\n\t\t\t\tappId: 'videoconf-core',\n\t\t\t\tblockId: call._id,\n\t\t\t\telements: [\n\t\t\t\t\t{\n\t\t\t\t\t\tappId: 'videoconf-core',\n\t\t\t\t\t\tblockId: call._id,\n\t\t\t\t\t\tactionId: 'joinLivechat',\n\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\ttext: {\n\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\ttext: i18n.t('Join_call'),\n\t\t\t\t\t\t\temoji: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\turl,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t]);\n\t}\n\n\tprivate buildVideoConfBlock(callId: string): UiKit.MessageSurfaceLayout[number] {\n\t\treturn {\n\t\t\ttype: 'video_conf',\n\t\t\tblockId: callId,\n\t\t\tcallId,\n\t\t\tappId: 'videoconf-core',\n\t\t};\n\t}\n\n\tprivate buildMessageBlock(text: string): UiKit.MessageSurfaceLayout[number] {\n\t\treturn {\n\t\t\ttype: 'section',\n\t\t\tappId: 'videoconf-core',\n\t\t\ttext: {\n\t\t\t\ttype: 'mrkdwn',\n\t\t\t\ttext: `${text}`,\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate async sendPushNotification(\n\t\tcall: AtLeast<IDirectVideoConference, 'createdBy' | 'rid' | '_id' | 'status'>,\n\t\tcalleeId: IUser['_id'],\n\t): Promise<void> {\n\t\tif (\n\t\t\tsettings.get('Push_enable') !== true ||\n\t\t\tsettings.get('VideoConf_Mobile_Ringing') !== true ||\n\t\t\t!(await getUserPreference(calleeId, 'enableMobileRinging'))\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tmetrics.notificationsSent.inc({ notification_type: 'mobile' });\n\t\tawait Push.send({\n\t\t\tfrom: 'push',\n\t\t\tbadge: 0,\n\t\t\tsound: 'ringtone.mp3',\n\t\t\tpriority: 10,\n\t\t\ttitle: `@${call.createdBy.username}`,\n\t\t\ttext: i18n.t('Video_Conference'),\n\t\t\tpayload: {\n\t\t\t\thost: Meteor.absoluteUrl(),\n\t\t\t\trid: call.rid,\n\t\t\t\tnotificationType: 'videoconf',\n\t\t\t\tcaller: call.createdBy,\n\t\t\t\tavatar: getUserAvatarURL(call.createdBy.username),\n\t\t\t\tstatus: call.status,\n\t\t\t\tcallId: call._id,\n\t\t\t},\n\t\t\tuserId: calleeId,\n\t\t\tnotId: PushNotification.getNotificationId(`${call.rid}|${call._id}`),\n\t\t\tgcm: {\n\t\t\t\tstyle: 'inbox',\n\t\t\t\timage: RocketChatAssets.getURL('Assets_favicon_192'),\n\t\t\t},\n\t\t\tapn: {\n\t\t\t\tcategory: 'VIDEOCONF',\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate async sendAllPushNotifications(callId: VideoConference['_id']): Promise<void> {\n\t\tif (settings.get('Push_enable') !== true || settings.get('VideoConf_Mobile_Ringing') !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst call = await VideoConferenceModel.findOneById<Pick<VideoConference, 'createdBy' | 'rid' | '_id' | 'users' | 'status'>>(callId, {\n\t\t\tprojection: { createdBy: 1, rid: 1, users: 1, status: 1 },\n\t\t});\n\n\t\tif (!call) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subscriptions = Subscriptions.findByRoomIdAndNotUserId(call.rid, call.createdBy._id, {\n\t\t\tprojection: { 'u._id': 1, '_id': 0 },\n\t\t});\n\n\t\tfor await (const subscription of subscriptions) {\n\t\t\tawait this.sendPushNotification(call, subscription.u._id);\n\t\t}\n\t}\n\n\tprivate async startDirect(\n\t\tproviderName: string,\n\t\tuser: IUser,\n\t\t{ _id: rid, uids }: AtLeast<IRoom, '_id' | 'uids'>,\n\t\textraData?: Partial<IDirectVideoConference>,\n\t): Promise<DirectCallInstructions> {\n\t\tconst calleeId = uids?.filter((uid) => uid !== user._id).pop();\n\t\tif (!calleeId) {\n\t\t\t// Are you trying to call yourself?\n\t\t\tthrow new Error('invalid-call-target');\n\t\t}\n\n\t\tconst callId = await VideoConferenceModel.createDirect({\n\t\t\t...extraData,\n\t\t\trid,\n\t\t\tcreatedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name as string,\n\t\t\t\tusername: user.username as string,\n\t\t\t},\n\t\t\tproviderName,\n\t\t});\n\n\t\tawait this.runNewVideoConferenceEvent(callId);\n\n\t\tawait this.maybeCreateDiscussion(callId, user);\n\n\t\tconst call = (await this.getUnfiltered(callId)) as IDirectVideoConference | null;\n\t\tif (!call) {\n\t\t\tthrow new Error('failed-to-create-direct-call');\n\t\t}\n\t\tconst url = await this.generateNewUrl(call);\n\t\tawait VideoConferenceModel.setUrlById(callId, url);\n\n\t\tconst messageId = await this.createMessage(call, user);\n\t\tcall.messages.started = messageId;\n\t\tawait VideoConferenceModel.setMessageById(callId, 'started', messageId);\n\n\t\t// After 40 seconds if the status is still \"calling\", we cancel the call automatically.\n\t\tsetTimeout(async () => {\n\t\t\ttry {\n\t\t\t\tconst call = await VideoConferenceModel.findOneById<IDirectVideoConference>(callId);\n\n\t\t\t\tif (call) {\n\t\t\t\t\tawait this.endDirectCall(call);\n\t\t\t\t\tif (call.status !== VideoConferenceStatus.CALLING) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tawait this.cancel(user._id, callId);\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// Ignore errors on this timeout\n\t\t\t}\n\t\t}, 40000);\n\n\t\tawait this.sendPushNotification(call, calleeId);\n\n\t\treturn {\n\t\t\ttype: 'direct',\n\t\t\tcallId,\n\t\t\tcalleeId,\n\t\t};\n\t}\n\n\tprivate async notifyUsersOfRoom(\n\t\trid: IRoom['_id'],\n\t\tuid: IUser['_id'],\n\t\taction: string,\n\t\tparams: { uid: IUser['_id']; rid: IRoom['_id']; callId: VideoConference['_id'] },\n\t): Promise<void> {\n\t\tconst subscriptions = Subscriptions.findByRoomIdAndNotUserId(rid, uid, {\n\t\t\tprojection: { 'u._id': 1, '_id': 0 },\n\t\t});\n\n\t\tawait subscriptions.forEach((subscription) => this.notifyUser(subscription.u._id, action, params));\n\t}\n\n\tprivate async startGroup(\n\t\tproviderName: string,\n\t\tuser: IUser,\n\t\trid: IRoom['_id'],\n\t\ttitle: string,\n\t\textraData?: Partial<IGroupVideoConference>,\n\t\tuseAppUser = true,\n\t): Promise<ConferenceInstructions> {\n\t\tconst callId = await VideoConferenceModel.createGroup({\n\t\t\t...extraData,\n\t\t\trid,\n\t\t\ttitle,\n\t\t\tcreatedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name as string,\n\t\t\t\tusername: user.username as string,\n\t\t\t},\n\t\t\tproviderName,\n\t\t});\n\n\t\tawait this.runNewVideoConferenceEvent(callId);\n\n\t\tawait this.maybeCreateDiscussion(callId, user);\n\n\t\tconst call = (await this.getUnfiltered(callId)) as IGroupVideoConference | null;\n\t\tif (!call) {\n\t\t\tthrow new Error('failed-to-create-group-call');\n\t\t}\n\n\t\tconst url = await this.generateNewUrl(call);\n\t\tawait VideoConferenceModel.setUrlById(callId, url);\n\n\t\tcall.url = url;\n\n\t\tconst messageId = await this.createMessage(call, useAppUser ? undefined : user);\n\t\tcall.messages.started = messageId;\n\t\tawait VideoConferenceModel.setMessageById(callId, 'started', messageId);\n\n\t\tif (call.ringing) {\n\t\t\tawait this.notifyUsersOfRoom(rid, user._id, 'ring', { callId, rid, uid: call.createdBy._id });\n\t\t}\n\n\t\treturn {\n\t\t\ttype: 'videoconference',\n\t\t\tcallId,\n\t\t\trid,\n\t\t};\n\t}\n\n\tprivate async startLivechat(providerName: string, user: IUser, rid: IRoom['_id']): Promise<LivechatInstructions> {\n\t\tconst callId = await VideoConferenceModel.createLivechat({\n\t\t\trid,\n\t\t\tcreatedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name as string,\n\t\t\t\tusername: user.username as string,\n\t\t\t},\n\t\t\tproviderName,\n\t\t});\n\n\t\tconst call = (await this.getUnfiltered(callId)) as ILivechatVideoConference | null;\n\t\tif (!call) {\n\t\t\tthrow new Error('failed-to-create-livechat-call');\n\t\t}\n\n\t\tawait this.runNewVideoConferenceEvent(callId);\n\n\t\t// Livechat conferences do not use discussions\n\n\t\tconst joinUrl = await this.getUrl(call);\n\t\tconst messageId = await this.createLivechatMessage(call, user, joinUrl);\n\t\tcall.messages.started = messageId;\n\t\tawait VideoConferenceModel.setMessageById(callId, 'started', messageId);\n\n\t\treturn {\n\t\t\ttype: 'livechat',\n\t\t\tcallId,\n\t\t};\n\t}\n\n\tprivate async joinCall(\n\t\tcall: VideoConference,\n\t\tuser: AtLeast<IUser, '_id' | 'username' | 'name' | 'avatarETag'> | undefined,\n\t\toptions: VideoConferenceJoinOptions,\n\t): Promise<string> {\n\t\tvoid callbacks.runAsync('onJoinVideoConference', call._id, user?._id);\n\n\t\tawait this.runOnUserJoinEvent(call._id, user as IVideoConferenceUser);\n\n\t\treturn this.getUrl(call, user, options);\n\t}\n\n\tprivate async getProviderManager(): Promise<AppVideoConfProviderManager> {\n\t\tif (!Apps.self?.isLoaded()) {\n\t\t\tthrow new Error('apps-engine-not-loaded');\n\t\t}\n\n\t\tconst manager = Apps.self?.getManager()?.getVideoConfProviderManager();\n\t\tif (!manager) {\n\t\t\tthrow new Error(availabilityErrors.NO_APP);\n\t\t}\n\n\t\treturn manager;\n\t}\n\n\tprivate async getRoomName(rid: string): Promise<string> {\n\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 'name' | 'fname'>>(rid, { projection: { name: 1, fname: 1 } });\n\n\t\treturn room?.fname || room?.name || rid;\n\t}\n\n\tprivate async generateNewUrl(call: VideoConference): Promise<string> {\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\tconst title = isGroupVideoConference(call) ? call.title || (await this.getRoomName(call.rid)) : '';\n\t\tconst callData: VideoConfData = {\n\t\t\t_id: call._id,\n\t\t\ttype: call.type,\n\t\t\trid: call.rid,\n\t\t\tcreatedBy: call.createdBy as Required<VideoConference['createdBy']>,\n\t\t\ttitle,\n\t\t\tproviderData: call.providerData,\n\t\t\tdiscussionRid: call.discussionRid,\n\t\t};\n\n\t\treturn (await this.getProviderManager()).generateUrl(call.providerName, callData);\n\t}\n\n\tprivate async getCallTitleForUser(call: VideoConference, userId?: IUser['_id']): Promise<string> {\n\t\tif (call.type === 'videoconference' && call.title) {\n\t\t\treturn call.title;\n\t\t}\n\n\t\tif (userId) {\n\t\t\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(call.rid, userId, { projection: { fname: 1, name: 1 } });\n\t\t\tif (subscription) {\n\t\t\t\treturn subscription.fname || subscription.name;\n\t\t\t}\n\t\t}\n\n\t\tconst room = await Rooms.findOneById(call.rid);\n\t\treturn room?.fname || room?.name || 'Rocket.Chat';\n\t}\n\n\tprivate async getCallTitle(call: VideoConference): Promise<string> {\n\t\tif (call.type === 'videoconference') {\n\t\t\tif (call.title) {\n\t\t\t\treturn call.title;\n\t\t\t}\n\t\t}\n\n\t\tconst room = await Rooms.findOneById(call.rid);\n\t\tif (room) {\n\t\t\tif (room.t === 'd') {\n\t\t\t\tif (room.usernames?.length) {\n\t\t\t\t\treturn room.usernames.join(', ');\n\t\t\t\t}\n\t\t\t} else if (room.fname) {\n\t\t\t\treturn room.fname;\n\t\t\t} else if (room.name) {\n\t\t\t\treturn room.name;\n\t\t\t}\n\t\t}\n\n\t\treturn 'Rocket.Chat';\n\t}\n\n\tprivate async getUrl(\n\t\tcall: VideoConference,\n\t\tuser?: AtLeast<IUser, '_id' | 'username' | 'name'>,\n\t\toptions: VideoConferenceJoinOptions = {},\n\t): Promise<string> {\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\tif (!call.url) {\n\t\t\tcall.url = await this.generateNewUrl(call);\n\t\t\tawait VideoConferenceModel.setUrlById(call._id, call.url);\n\t\t}\n\n\t\tconst callData: VideoConfDataExtended = {\n\t\t\t_id: call._id,\n\t\t\ttype: call.type,\n\t\t\trid: call.rid,\n\t\t\turl: call.url,\n\t\t\tcreatedBy: call.createdBy as Required<VideoConference['createdBy']>,\n\t\t\tproviderData: {\n\t\t\t\t...(call.providerData || {}),\n\t\t\t\t...{ customCallTitle: await this.getCallTitleForUser(call, user?._id) },\n\t\t\t},\n\t\t\ttitle: await this.getCallTitle(call),\n\t\t\tdiscussionRid: call.discussionRid,\n\t\t};\n\n\t\tconst userData = user && {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username as string,\n\t\t\tname: user.name as string,\n\t\t};\n\n\t\treturn (await this.getProviderManager()).customizeUrl(call.providerName, callData, userData, options);\n\t}\n\n\tprivate async runNewVideoConferenceEvent(callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\n\t\tif (!call) {\n\t\t\tthrow new Error('video-conf-data-not-found');\n\t\t}\n\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\treturn (await this.getProviderManager()).onNewVideoConference(call.providerName, call);\n\t}\n\n\tprivate async runVideoConferenceChangedEvent(callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\n\t\tif (!call) {\n\t\t\tthrow new Error('video-conf-data-not-found');\n\t\t}\n\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\treturn (await this.getProviderManager()).onVideoConferenceChanged(call.providerName, call);\n\t}\n\n\tprivate async runOnUserJoinEvent(callId: VideoConference['_id'], user?: IVideoConferenceUser): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\n\t\tif (!call) {\n\t\t\tthrow new Error('video-conf-data-not-found');\n\t\t}\n\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\treturn (await this.getProviderManager()).onUserJoin(call.providerName, call, user);\n\t}\n\n\tprivate async addUserToCall(\n\t\tcall: Optional<VideoConference, 'providerData'>,\n\t\t{ _id, username, name, avatarETag, ts }: AtLeast<Required<IUser>, '_id' | 'username' | 'name' | 'avatarETag'> & { ts?: Date },\n\t): Promise<void> {\n\t\t// If the call has a discussion, ensure the user is subscribed to it;\n\t\t// This is done even if the user has already joined the call before, so they can be added back if they had left the discussion.\n\t\tif (call.discussionRid) {\n\t\t\tawait this.addUserToDiscussion(call.discussionRid, _id);\n\t\t}\n\n\t\tif (call.users.find((user) => user._id === _id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait VideoConferenceModel.addUserById(call._id, { _id, username, name, avatarETag, ts });\n\n\t\tif (call.type === 'direct') {\n\t\t\treturn this.updateDirectCall(call as IDirectVideoConference, _id);\n\t\t}\n\n\t\tthis.notifyVideoConfUpdate(call.rid, call._id);\n\t}\n\n\tprivate async addAnonymousUser(call: Optional<IGroupVideoConference, 'providerData'>): Promise<void> {\n\t\tawait VideoConferenceModel.increaseAnonymousCount(call._id);\n\t}\n\n\tprivate async updateDirectCall(call: IDirectVideoConference, newUserId: IUser['_id']): Promise<void> {\n\t\t// If it's an user that hasn't joined yet\n\t\tif (call.ringing && !call.users.find(({ _id }) => _id === newUserId)) {\n\t\t\tthis.notifyUser(call.createdBy._id, 'join', { rid: call.rid, uid: newUserId, callId: call._id });\n\t\t\tif (newUserId !== call.createdBy._id) {\n\t\t\t\tthis.notifyUser(newUserId, 'join', { rid: call.rid, uid: newUserId, callId: call._id });\n\t\t\t\t// If the callee joined the direct call, then we stopped ringing\n\t\t\t\tawait VideoConferenceModel.setRingingById(call._id, false);\n\t\t\t}\n\t\t}\n\n\t\tif (call.status !== VideoConferenceStatus.CALLING) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait VideoConferenceModel.setStatusById(call._id, VideoConferenceStatus.STARTED);\n\t\tthis.notifyVideoConfUpdate(call.rid, call._id);\n\n\t\tawait this.runVideoConferenceChangedEvent(call._id);\n\t\tawait this.sendAllPushNotifications(call._id);\n\t}\n\n\tprivate isPersistentChatEnabled(): boolean {\n\t\treturn settings.get<boolean>('VideoConf_Enable_Persistent_Chat') && settings.get<boolean>('Discussion_enabled');\n\t}\n\n\tprivate async maybeCreateDiscussion(callId: VideoConference['_id'], createdBy?: IUser): Promise<void> {\n\t\tif (!this.isPersistentChatEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst call = await VideoConferenceModel.findOneById(callId, {\n\t\t\tprojection: { rid: 1, createdBy: 1, discussionRid: 1, providerName: 1 },\n\t\t});\n\t\tif (!call) {\n\t\t\tthrow new Error('invalid-video-conference');\n\t\t}\n\n\t\t// If there's already a discussion assigned to it, do not create a new one\n\t\tif (call.discussionRid) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the call provider does not explicitly support persistent chat, do not create discussions\n\t\tif (!videoConfProviders.getProviderCapabilities(call.providerName)?.persistentChat) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst name = settings.get<string>('VideoConf_Persistent_Chat_Discussion_Name') || i18n.t('Conference Call Chat History');\n\t\tconst displayName = `${name} - ${new Date().toISOString().substring(0, 10)}`;\n\n\t\tawait this.createDiscussionForConference(displayName, call, createdBy);\n\t}\n\n\tprivate async getRoomForDiscussion(\n\t\tbaseRoom: IRoom['_id'],\n\t\tchildRoomIds: IRoom['_id'][] = [],\n\t): Promise<Pick<IRoom, '_id' | 't' | 'teamId' | 'prid'>> {\n\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 't' | 'teamId' | 'prid'>>(baseRoom, {\n\t\t\tprojection: { t: 1, teamId: 1, prid: 1 },\n\t\t});\n\t\tif (!room) {\n\t\t\tthrow new Error('invalid-room');\n\t\t}\n\n\t\tif (room.prid) {\n\t\t\tif (childRoomIds.includes(room.prid)) {\n\t\t\t\tthrow new Error('Room has circular reference.');\n\t\t\t}\n\n\t\t\treturn this.getRoomForDiscussion(room.prid, [...childRoomIds, room._id]);\n\t\t}\n\n\t\treturn room;\n\t}\n\n\tprivate async createDiscussionForConference(\n\t\tname: string,\n\t\tcall: AtLeast<VideoConference, '_id' | 'rid' | 'createdBy'>,\n\t\tcreatedBy?: IUser,\n\t): Promise<void> {\n\t\tconst room = await this.getRoomForDiscussion(call.rid);\n\n\t\tconst type = await roomCoordinator.getRoomDirectives(room.t).getDiscussionType(room);\n\t\tconst user = call.createdBy._id === createdBy?._id ? createdBy : await Users.findOneById(call.createdBy._id);\n\t\tif (!user) {\n\t\t\tthrow new Error('invalid-user');\n\t\t}\n\n\t\tconst discussion = await createRoom(\n\t\t\ttype,\n\t\t\tRandom.id(),\n\t\t\tuser,\n\t\t\t[],\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tfname: name,\n\t\t\t\tprid: room._id,\n\t\t\t\tencrypted: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreator: user._id,\n\t\t\t},\n\t\t);\n\n\t\treturn this.assignDiscussionToConference(call._id, discussion._id);\n\t}\n\n\tpublic async assignDiscussionToConference(callId: VideoConference['_id'], rid: IRoom['_id'] | undefined): Promise<void> {\n\t\t// Ensures the specified rid is a valid room\n\t\tconst room = rid ? await Rooms.findOneById<Pick<IRoom, '_id' | 'prid'>>(rid, { projection: { prid: 1 } }) : null;\n\t\tif (rid && !room) {\n\t\t\tthrow new Error('invalid-room-id');\n\t\t}\n\n\t\tconst call = await VideoConferenceModel.findOneById(callId, { projection: { users: 1, messages: 1 } });\n\t\tif (!call) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (rid === undefined) {\n\t\t\tawait VideoConferenceModel.unsetDiscussionRidById(callId);\n\t\t} else {\n\t\t\tawait VideoConferenceModel.setDiscussionRidById(callId, rid);\n\t\t}\n\n\t\tif (room) {\n\t\t\tawait Promise.all(call.users.map(({ _id }) => this.addUserToDiscussion(room._id, _id)));\n\t\t}\n\t}\n\n\tprivate async addUserToDiscussion(rid: IRoom['_id'], uid: IUser['_id']): Promise<void> {\n\t\ttry {\n\t\t\tawait Room.addUserToRoom(rid, { _id: uid }, undefined, { skipAlertSound: true });\n\t\t} catch (error) {\n\t\t\t// Ignore any errors here so that the subscription doesn't block the user from participating in the conference.\n\t\t\tlogger.error({\n\t\t\t\tname: 'Error trying to subscribe user to discussion',\n\t\t\t\terror,\n\t\t\t\trid,\n\t\t\t\tuid,\n\t\t\t});\n\t\t}\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/video-conference/service.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/video-conference/service.ts","inputSourceMap":{"version":3,"file":"server/services/video-conference/service.ts","sourceRoot":"","sources":["server/services/video-conference/service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAIzC,OAAO,EAAE,GAAG,EAAE,oBAAoB,EAAE,IAAI,EAAE,MAAM,4BAA4B,CAAC;AAoB7E,OAAO,EACN,qBAAqB,EACrB,uBAAuB,EACvB,sBAAsB,EACtB,yBAAyB,GACzB,MAAM,2BAA2B,CAAC;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,KAAK,EAAE,eAAe,IAAI,oBAAoB,EAAE,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACrH,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAE7C,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AAEpD,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAE9C,OAAO,EAAE,gBAAgB,EAAE,MAAM,4BAA4B,CAAC;AAC9D,OAAO,EAAE,oBAAoB,EAAE,MAAM,2DAA2D,CAAC;AACjG,OAAO,EAAE,UAAU,EAAE,MAAM,8CAA8C,CAAC;AAC1E,OAAO,EAAE,WAAW,EAAE,MAAM,+CAA+C,CAAC;AAC5E,OAAO,EAAE,qBAAqB,EAAE,MAAM,4CAA4C,CAAC;AACnF,OAAO,EAAE,OAAO,EAAE,MAAM,yCAAyC,CAAC;AAClE,OAAO,EAAE,IAAI,EAAE,MAAM,+BAA+B,CAAC;AACrD,OAAO,gBAAgB,MAAM,6DAA6D,CAAC;AAC3F,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,6DAA6D,CAAC;AAC5F,OAAO,EAAE,gBAAgB,EAAE,MAAM,4CAA4C,CAAC;AAC9E,OAAO,EAAE,iBAAiB,EAAE,MAAM,iDAAiD,CAAC;AACpF,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AACnD,OAAO,EAAE,kBAAkB,EAAE,MAAM,wCAAwC,CAAC;AAC5E,OAAO,EAAE,sBAAsB,EAAE,MAAM,uCAAuC,CAAC;AAC/E,OAAO,EAAE,IAAI,EAAE,MAAM,gBAAgB,CAAC;AACtC,OAAO,EAAE,oCAAoC,EAAE,MAAM,gDAAgD,CAAC;AACtG,OAAO,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAClE,OAAO,EAAE,kBAAkB,EAAE,MAAM,8BAA8B,CAAC;AAClE,OAAO,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAE1D,MAAM,EAAE,EAAE,EAAE,GAAG,cAAc,CAAC,6BAA6B,EAAE,CAAC,KAAK,CAAC;AAEpE,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAE7C,MAAM,OAAO,gBAAiB,SAAQ,oBAAoB;IAC/C,IAAI,GAAG,kBAAkB,CAAC;IAEpC,sGAAsG;IAC/F,KAAK,CAAC,MAAM,CAClB,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG,IAAI,EAA6B,EAC1E,UAAU,GAAG,IAAI;QAEjB,OAAO,cAAc,CAAC,KAAK,IAAI,EAAE;YAChC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAuD,GAAG,EAAE;gBAC/F,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;aAChD,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;YACjC,CAAC;YAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAQ,SAAS,CAAC,CAAC;YACvD,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC5C,CAAC;YAED,IAAI,IAAI,KAAK,QAAQ,EAAE,CAAC;gBACvB,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC9D,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;gBACjD,CAAC;gBAED,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACzD,CAAC;YAED,IAAI,IAAI,KAAK,UAAU,EAAE,CAAC;gBACzB,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;YACpD,CAAC;YAED,MAAM,KAAK,GAAI,IAAuC,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;YAC9F,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACd,MAAM,CAAC,KAAK,CAAC;gBACZ,IAAI,EAAE,2BAA2B;gBACjC,KAAK,EAAE,CAAC;aACR,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,uGAAuG;IAChG,KAAK,CAAC,KAAK,CACjB,MAAoB,EACpB,GAAW,EACX,EAAE,KAAK,EAAE,YAAY,EAA8C;QAEnE,OAAO,cAAc,CAAC,KAAK,IAAI,EAAE;YAChC,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;YACvD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,4BAA4B,CAAC,GAAG,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAExF,MAAM,IAAI,GAAG;gBACZ,GAAG,WAAW;gBACd,SAAS,EAAE,MAAM;gBACjB,GAAG;gBACH,YAAY;aACiB,CAAC;YAE/B,IAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,EAAE,CAAC;gBACrC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACpB,CAAC;YAED,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACd,MAAM,CAAC,KAAK,CAAC;gBACZ,IAAI,EAAE,0BAA0B;gBAChC,KAAK,EAAE,CAAC;aACR,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,GAA6B,EAAE,MAA8B,EAAE,OAAmC;QACnH,OAAO,cAAc,CAAC,KAAK,IAAI,EAAE;YAChC,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAC5D,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;gBAC3B,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;YACjC,CAAC;YAED,IAAI,IAAI,GAAmE,IAAI,CAAC;YAEhF,IAAI,GAAG,EAAE,CAAC;gBACT,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAA0D,GAAG,EAAE;oBAC5F,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;iBACnD,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,EAAE,CAAC;oBACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;gBAC5C,CAAC;YACF,CAAC;YAED,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,EAAE,CAAC;gBACnC,aAAa,CAAC,EAAE,UAAU,EAAE,2BAA2B,EAAE,CAAC,CAAC;YAC5D,CAAC;YAED,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,IAAI,SAAS,EAAE,OAAO,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACd,MAAM,CAAC,KAAK,CAAC;gBACZ,IAAI,EAAE,yBAAyB;gBAC/B,KAAK,EAAE,CAAC;aACR,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;QACT,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,OAAO,CAAC,MAA8B,EAAE,GAA6B;QACjF,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QAED,IAAI,IAAI,GAA6E,IAAI,CAAC;QAE1F,IAAI,GAAG,EAAE,CAAC;YACT,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAoE,GAAG,EAAE;gBACtG,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;aACnD,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;YAC5C,CAAC;QACF,CAAC;QAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,sBAAsB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,IAAI,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACrI,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAI,MAAM,EAAE,MAAM,EAAE,CAAC;YACpB,OAAO,MAA6B,CAAC;QACtC,CAAC;QAED,OAAO;YACN;gBACC,OAAO,EAAE,gBAAgB;gBACzB,IAAI,EAAE,SAAS;gBACf,IAAI,EAAE;oBACL,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,sBAAsB,CAAC,OAAO,IAAI,CAAC,GAAG,EAAE;iBAC1D;aACD;SACD,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,GAAiB,EAAE,MAA8B;QACpE,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,CAAC;YAC7C,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,qBAAqB,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACnF,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC5C,CAAC;QAED,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,EAAE;YAC9C,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,qBAAqB,CAAC,QAAQ;YACtC,OAAO,EAAE,IAAI,IAAI,EAAE;YACnB,OAAO,EAAE;gBACR,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,IAAc;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAkB;aACjC;SACD,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC,CAAC;QAClD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAE/C,MAAM,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAEM,KAAK,CAAC,GAAG,CAAC,MAA8B;QAC9C,OAAO,oBAAoB,CAAC,WAAW,CAAwC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC7H,CAAC;IAEM,KAAK,CAAC,aAAa,CAAC,MAA8B;QACxD,OAAO,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IAEM,KAAK,CAAC,IAAI,CAChB,MAAoB,EACpB,aAAkD,EAAE;QAEpD,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,oBAAoB,CAAC,qBAAqB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAE9F,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;QAExE,OAAO;YACN,IAAI;YACJ,MAAM,EAAE,UAAU,CAAC,MAAM,IAAI,CAAC;YAC9B,KAAK,EAAE,IAAI,CAAC,MAAM;YAClB,KAAK;SACL,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,eAAe,CAAC,MAA8B,EAAE,IAAiD;QAC7G,MAAM,oBAAoB,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;IAEM,KAAK,CAAC,UAAU,CAAC,MAA8B,EAAE,OAAqB;QAC5E,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAqD,OAAO,EAAE;YACjG,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;SACpC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,oBAAoB,CAAC,YAAY,CAAC,MAAM,EAAE;YAC/C,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;SACf,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,UAAU,CAAC,MAA8B,EAAE,OAAa;QACpE,MAAM,oBAAoB,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IACrE,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,MAA8B,EAAE,MAAiC;QACvF,QAAQ,MAAM,EAAE,CAAC;YAChB,KAAK,qBAAqB,CAAC,KAAK;gBAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC7B,KAAK,qBAAqB,CAAC,OAAO;gBACjC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,oBAAoB,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC1D,CAAC;IAEM,KAAK,CAAC,OAAO,CAAC,MAA8B,EAAE,MAAqB,EAAE,EAAS;QACpF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC7C,CAAC;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,IAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,EAAE,CAAC;gBACrC,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAmD,CAAC,CAAC;YACnF,CAAC;YAED,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAoE,MAAM,EAAE;YAC/G,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE;SACnD,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;YAC9B,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,EAAE,EAAE,EAAE,IAAI,IAAI,IAAI,EAAE;SACpB,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,aAAa;QACzB,OAAO,kBAAkB,CAAC,eAAe,EAAE,CAAC;IAC7C,CAAC;IAEM,KAAK,CAAC,wBAAwB,CAAC,YAAoB;QACzD,OAAO,kBAAkB,CAAC,uBAAuB,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IACvE,CAAC;IAEM,KAAK,CAAC,gBAAgB;QAC5B,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAEvD,OAAO;YACN,YAAY;YACZ,YAAY,EAAE,kBAAkB,CAAC,uBAAuB,CAAC,YAAY,CAAC,IAAI,EAAE;SAC5E,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,mBAAmB,CAAC,MAA8B;QAC9D,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAE9C,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,CAAC;YACtC,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YAC3B,MAAM,IAAI,GACT,CAAC,QAAQ,CAAC,GAAG,CAAU,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,EAAE,CAAC;YAC9H,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,uBAAuB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YACjE,MAAM,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEpF,MAAM,qBAAqB,CAAC;gBAC3B,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;aACzB,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE;YAChD,MAAM,EAAE,qBAAqB,CAAC,QAAQ;YACtC,OAAO,EAAE,IAAI,IAAI,EAAE;SACnB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAAC,GAAW,EAAE,GAAW,EAAE,YAAqB;QAC5E,IAAI,CAAC;YACJ,IAAI,YAAY,EAAE,CAAC;gBAClB,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;YAC3C,CAAC;iBAAM,CAAC;gBACP,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC;YACnC,CAAC;QACF,CAAC;QAAC,OAAO,KAAc,EAAE,CAAC;YACzB,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;gBAC5B,MAAM,IAAI,CAAC,sBAAsB,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC3D,OAAO,KAAK,CAAC,OAAO,CAAC;YACtB,CAAC;QACF,CAAC;IACF,CAAC;IAEM,KAAK,CAAC,aAAa;QACzB,MAAM,OAAO,GAAG;YACf,cAAc,EAAE,sBAAsB,CAAC,EAAE,CAAC;SAC1C,CAAC;QAEF,OAAO;YACN,eAAe,EAAE;gBAChB,OAAO,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,OAAO,EAAE,OAAO,CAAC;gBACnH,KAAK,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,KAAK,EAAE,OAAO,CAAC;aAC/G;YACD,MAAM,EAAE;gBACP,OAAO,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,qBAAqB,CAAC,OAAO,EAAE,OAAO,CAAC;gBAC1G,OAAO,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,qBAAqB,CAAC,OAAO,EAAE,OAAO,CAAC;gBAC1G,KAAK,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,qBAAqB,CAAC,KAAK,EAAE,OAAO,CAAC;aACtG;YACD,QAAQ,EAAE;gBACT,OAAO,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,UAAU,EAAE,qBAAqB,CAAC,OAAO,EAAE,OAAO,CAAC;gBAC5G,KAAK,EAAE,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,UAAU,EAAE,qBAAqB,CAAC,KAAK,EAAE,OAAO,CAAC;aACxG;YACD,QAAQ,EAAE;gBACT,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAS,4BAA4B,CAAC;gBAC5D,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAU,sBAAsB,CAAC;gBAClD,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAU,2BAA2B,CAAC;gBAC5D,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAU,yBAAyB,CAAC;gBACxD,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAU,wBAAwB,CAAC;aACtD;SACD,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,cAAc,CAC1B,MAAc,EACd,MAAoB,EACpB,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAA4E;QAE9F,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC7B,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,CAAC,CAAC,MAAM,oBAAoB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,MAAM,oBAAoB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/G,OAAO,KAAK,CAAC;QACd,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAoE,MAAM,EAAE;YAC9H,UAAU,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE;SACnD,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;YACtB,OAAO,IAAI,CAAC;QACb,CAAC;QAED,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC,OAAO,EAAE,CAAC;YACjE,gFAAgF;YAChF,IAAI,MAAM,KAAK,MAAM,IAAI,MAAM,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;gBACxD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;YAClE,CAAC;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,UAAU,CACjB,MAAoB,EACpB,MAAc,EACd,MAAgF;QAEhF,KAAK,GAAG,CAAC,SAAS,CAAC,uBAAuB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACzE,CAAC;IAEO,qBAAqB,CAAC,GAAiB,EAAE,MAA8B;QAC9E,KAAK,GAAG,CAAC,SAAS,CAAC,uBAAuB,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9D,CAAC;IAEO,KAAK,CAAC,OAAO,CAAC,MAA8B;QACnD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QAED,MAAM,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,EAAE,qBAAqB,CAAC,KAAK,EAAE,CAAC,CAAC;QAC/G,MAAM,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAE/C,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC5B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,UAAU,CAAC,MAA8B;QACtD,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAA4C,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACxI,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QAED,MAAM,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,EAAE,qBAAqB,CAAC,OAAO,EAAE,CAAC,CAAC;IAClH,CAAC;IAEO,KAAK,CAAC,aAAa,CAAC,IAA4B;QACvD,MAAM,MAAM,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QAE5E,0DAA0D;QAC1D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAEnD,kFAAkF;QAClF,MAAM,aAAa,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;YAChG,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;SACpC,CAAC,CAAC,OAAO,EAAE,CAAC;QAEb,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE,CAAC;YAC1C,oDAAoD;YACpD,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,KAAK,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC9D,SAAS;YACV,CAAC;YAED,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACpD,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,4BAA4B,CACzC,GAAiB,EACjB,YAAqB;QAErB,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAA2B,GAAG,EAAE;YACnE,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;SACpB,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,OAAO,cAAc,CAAC,cAAc,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC1D,CAAC;IAEO,KAAK,CAAC,aAAa,CAAC,IAAqB,EAAE,SAAiB,EAAE,YAAiC;QACtG,MAAM,MAAM,GAAG;YACd,CAAC,EAAE,WAAW;YACd,GAAG,EAAE,EAAE;YACP,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,YAAY,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChC,CAAC;QAE9B,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,MAAM,KAAK,GAAG,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACrE,MAAM,IAAI,GAAG,SAAS,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;QAEpH,MAAM,OAAO,GAAG,MAAM,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAE7D,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC7C,CAAC;QAED,OAAO,OAAO,CAAC,GAAG,CAAC;IACpB,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAAC,YAAoB;QAClD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAChD,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;QACpF,IAAI,CAAC,UAAU,EAAE,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;QACpD,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,oBAAoB;QACjC,IAAI,CAAC,kBAAkB,CAAC,cAAc,EAAE,EAAE,CAAC;YAC1C,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAC5C,CAAC;QAED,MAAM,YAAY,GAAG,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;QAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QAChD,CAAC;QAED,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QAE1C,OAAO,YAAY,CAAC;IACrB,CAAC;IAEO,KAAK,CAAC,sBAAsB,CAAC,GAAW,EAAE,GAAW,EAAE,OAAe;QAC7E,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAoC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACxH,MAAM,QAAQ,GAAG,IAAI,EAAE,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAS,UAAU,CAAC,IAAI,IAAI,CAAC;QAC5E,MAAM,GAAG,GAAG,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;QACzE,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE;YACvB,GAAG,EAAE,QAAQ;SACb,CAAC,CAAC;QAEH,KAAK,GAAG,CAAC,SAAS,CAAC,yBAAyB,EAAE,GAAG,EAAE,GAAG,EAAE;YACvD,GAAG;SACH,CAAC,CAAC;IACJ,CAAC;IAEO,KAAK,CAAC,qBAAqB,CAAC,IAA8B,EAAE,IAAW,EAAE,GAAW;QAC3F,MAAM,QAAQ,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAU,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QAChH,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,wBAAwB,EAAE;YAC7C,QAAQ;SACR,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE;YACrC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YAC5B;gBACC,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,gBAAgB;gBACvB,OAAO,EAAE,IAAI,CAAC,GAAG;gBACjB,QAAQ,EAAE;oBACT;wBACC,KAAK,EAAE,gBAAgB;wBACvB,OAAO,EAAE,IAAI,CAAC,GAAG;wBACjB,QAAQ,EAAE,cAAc;wBACxB,IAAI,EAAE,QAAQ;wBACd,IAAI,EAAE;4BACL,IAAI,EAAE,YAAY;4BAClB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC;4BACzB,KAAK,EAAE,IAAI;yBACX;wBACD,GAAG;qBACH;iBACD;aACD;SACD,CAAC,CAAC;IACJ,CAAC;IAEO,mBAAmB,CAAC,MAAc;QACzC,OAAO;YACN,IAAI,EAAE,YAAY;YAClB,OAAO,EAAE,MAAM;YACf,MAAM;YACN,KAAK,EAAE,gBAAgB;SACvB,CAAC;IACH,CAAC;IAEO,iBAAiB,CAAC,IAAY;QACrC,OAAO;YACN,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,gBAAgB;YACvB,IAAI,EAAE;gBACL,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,GAAG,IAAI,EAAE;aACf;SACD,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,oBAAoB,CACjC,IAA6E,EAC7E,QAAsB;QAEtB,IACC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,IAAI;YACpC,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC,KAAK,IAAI;YACjD,CAAC,CAAC,MAAM,iBAAiB,CAAC,QAAQ,EAAE,qBAAqB,CAAC,CAAC,EAC1D,CAAC;YACF,OAAO;QACR,CAAC;QAED,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC/D,MAAM,IAAI,CAAC,IAAI,CAAC;YACf,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,cAAc;YACrB,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;YACpC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,kBAAkB,CAAC;YAChC,OAAO,EAAE;gBACR,IAAI,EAAE,MAAM,CAAC,WAAW,EAAE;gBAC1B,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,gBAAgB,EAAE,WAAW;gBAC7B,MAAM,EAAE,IAAI,CAAC,SAAS;gBACtB,MAAM,EAAE,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;gBACjD,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,MAAM,EAAE,IAAI,CAAC,GAAG;aAChB;YACD,MAAM,EAAE,QAAQ;YAChB,KAAK,EAAE,gBAAgB,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;YACpE,GAAG,EAAE;gBACJ,KAAK,EAAE,OAAO;gBACd,KAAK,EAAE,gBAAgB,CAAC,MAAM,CAAC,oBAAoB,CAAC;aACpD;YACD,GAAG,EAAE;gBACJ,QAAQ,EAAE,WAAW;aACrB;SACD,CAAC,CAAC;IACJ,CAAC;IAEO,KAAK,CAAC,wBAAwB,CAAC,MAA8B;QACpE,IAAI,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC,KAAK,IAAI,EAAE,CAAC;YAC/F,OAAO;QACR,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAA0E,MAAM,EAAE;YACpI,UAAU,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;SACzD,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QAED,MAAM,aAAa,GAAG,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE;YAC1F,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;SACpC,CAAC,CAAC;QAEH,IAAI,KAAK,EAAE,MAAM,YAAY,IAAI,aAAa,EAAE,CAAC;YAChD,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3D,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,WAAW,CACxB,YAAoB,EACpB,IAAW,EACX,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAkC,EAClD,SAA2C;QAE3C,MAAM,QAAQ,GAAG,IAAI,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QAC/D,IAAI,CAAC,QAAQ,EAAE,CAAC;YACf,mCAAmC;YACnC,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,MAAM,GAAG,MAAM,oBAAoB,CAAC,YAAY,CAAC;YACtD,GAAG,SAAS;YACZ,GAAG;YACH,SAAS,EAAE;gBACV,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,IAAc;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAkB;aACjC;YACD,YAAY;SACZ,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;QAE9C,MAAM,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAE/C,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAkC,CAAC;QACjF,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QACjD,CAAC;QACD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,oBAAoB,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAEnD,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,SAAS,CAAC;QAClC,MAAM,oBAAoB,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAExE,uFAAuF;QACvF,UAAU,CAAC,KAAK,IAAI,EAAE;YACrB,IAAI,CAAC;gBACJ,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAyB,MAAM,CAAC,CAAC;gBAEpF,IAAI,IAAI,EAAE,CAAC;oBACV,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBAC/B,IAAI,IAAI,CAAC,MAAM,KAAK,qBAAqB,CAAC,OAAO,EAAE,CAAC;wBACnD,OAAO;oBACR,CAAC;oBAED,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;gBACrC,CAAC;YACF,CAAC;YAAC,MAAM,CAAC;gBACR,gCAAgC;YACjC,CAAC;QACF,CAAC,EAAE,KAAK,CAAC,CAAC;QAEV,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAEhD,OAAO;YACN,IAAI,EAAE,QAAQ;YACd,MAAM;YACN,QAAQ;SACR,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,iBAAiB,CAC9B,GAAiB,EACjB,GAAiB,EACjB,MAAc,EACd,MAAgF;QAEhF,MAAM,aAAa,GAAG,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE;YACtE,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;SACpC,CAAC,CAAC;QAEH,MAAM,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;IACpG,CAAC;IAEO,KAAK,CAAC,UAAU,CACvB,YAAoB,EACpB,IAAW,EACX,GAAiB,EACjB,KAAa,EACb,SAA0C,EAC1C,UAAU,GAAG,IAAI;QAEjB,MAAM,MAAM,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC;YACrD,GAAG,SAAS;YACZ,GAAG;YACH,KAAK;YACL,SAAS,EAAE;gBACV,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,IAAc;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAkB;aACjC;YACD,YAAY;SACZ,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;QAE9C,MAAM,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAE/C,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAiC,CAAC;QAChF,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;QAChD,CAAC;QAED,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,oBAAoB,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAEnD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAChF,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,SAAS,CAAC;QAClC,MAAM,oBAAoB,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAExE,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YAClB,MAAM,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;QAC/F,CAAC;QAED,OAAO;YACN,IAAI,EAAE,iBAAiB;YACvB,MAAM;YACN,GAAG;SACH,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,aAAa,CAAC,YAAoB,EAAE,IAAW,EAAE,GAAiB;QAC/E,MAAM,MAAM,GAAG,MAAM,oBAAoB,CAAC,cAAc,CAAC;YACxD,GAAG;YACH,SAAS,EAAE;gBACV,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,IAAc;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAkB;aACjC;YACD,YAAY;SACZ,CAAC,CAAC;QAEH,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAoC,CAAC;QACnF,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACnD,CAAC;QAED,MAAM,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;QAE9C,8CAA8C;QAE9C,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxC,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACxE,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,SAAS,CAAC;QAClC,MAAM,oBAAoB,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAExE,OAAO;YACN,IAAI,EAAE,UAAU;YAChB,MAAM;SACN,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,QAAQ,CACrB,IAAqB,EACrB,IAA4E,EAC5E,OAAmC;QAEnC,KAAK,SAAS,CAAC,QAAQ,CAAC,uBAAuB,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QAEtE,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,IAA4B,CAAC,CAAC;QAEtE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IAEO,KAAK,CAAC,kBAAkB;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,CAAC;YAC5B,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC3C,CAAC;QAED,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE,2BAA2B,EAAE,CAAC;QACvE,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAC5C,CAAC;QAED,OAAO,OAAO,CAAC;IAChB,CAAC;IAEO,KAAK,CAAC,WAAW,CAAC,GAAW;QACpC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAwC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAExH,OAAO,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,IAAI,IAAI,GAAG,CAAC;IACzC,CAAC;IAEO,KAAK,CAAC,cAAc,CAAC,IAAqB;QACjD,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QAED,MAAM,KAAK,GAAG,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACnG,MAAM,QAAQ,GAAkB;YAC/B,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,SAAS,EAAE,IAAI,CAAC,SAAmD;YACnE,KAAK;YACL,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,aAAa,EAAE,IAAI,CAAC,aAAa;SACjC,CAAC;QAEF,OAAO,CAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;IACnF,CAAC;IAEO,KAAK,CAAC,mBAAmB,CAAC,IAAqB,EAAE,MAAqB;QAC7E,IAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACnD,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;QAED,IAAI,MAAM,EAAE,CAAC;YACZ,MAAM,YAAY,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAC3H,IAAI,YAAY,EAAE,CAAC;gBAClB,OAAO,YAAY,CAAC,KAAK,IAAI,YAAY,CAAC,IAAI,CAAC;YAChD,CAAC;QACF,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,OAAO,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,IAAI,IAAI,aAAa,CAAC;IACnD,CAAC;IAEO,KAAK,CAAC,YAAY,CAAC,IAAqB;QAC/C,IAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,EAAE,CAAC;YACrC,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBAChB,OAAO,IAAI,CAAC,KAAK,CAAC;YACnB,CAAC;QACF,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,IAAI,EAAE,CAAC;YACV,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;gBACpB,IAAI,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,CAAC;oBAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClC,CAAC;YACF,CAAC;iBAAM,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACvB,OAAO,IAAI,CAAC,KAAK,CAAC;YACnB,CAAC;iBAAM,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;gBACtB,OAAO,IAAI,CAAC,IAAI,CAAC;YAClB,CAAC;QACF,CAAC;QAED,OAAO,aAAa,CAAC;IACtB,CAAC;IAEO,KAAK,CAAC,MAAM,CACnB,IAAqB,EACrB,IAAkD,EAClD,UAAsC,EAAE;QAExC,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,GAAG,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC3C,MAAM,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3D,CAAC;QAED,MAAM,QAAQ,GAA0B;YACvC,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,SAAS,EAAE,IAAI,CAAC,SAAmD;YACnE,YAAY,EAAE;gBACb,GAAG,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;gBAC5B,GAAG,EAAE,eAAe,EAAE,MAAM,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE;aACvE;YACD,KAAK,EAAE,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACpC,aAAa,EAAE,IAAI,CAAC,aAAa;SACjC,CAAC;QAEF,MAAM,QAAQ,GAAG,IAAI,IAAI;YACxB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAkB;YACjC,IAAI,EAAE,IAAI,CAAC,IAAc;SACzB,CAAC;QAEF,OAAO,CAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IACvG,CAAC;IAEO,KAAK,CAAC,0BAA0B,CAAC,MAA8B;QACtE,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAE5D,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QAED,OAAO,CAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IACxF,CAAC;IAEO,KAAK,CAAC,8BAA8B,CAAC,MAA8B;QAC1E,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAE5D,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QAED,OAAO,CAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,wBAAwB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IAC5F,CAAC;IAEO,KAAK,CAAC,kBAAkB,CAAC,MAA8B,EAAE,IAA2B;QAC3F,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAE5D,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YAChE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC;QAED,OAAO,CAAC,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACpF,CAAC;IAEO,KAAK,CAAC,aAAa,CAC1B,IAA+C,EAC/C,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAwF;QAE7H,qEAAqE;QACrE,+HAA+H;QAC/H,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,MAAM,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;QACzD,CAAC;QAED,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC;YACjD,OAAO;QACR,CAAC;QAED,MAAM,oBAAoB,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC;QAE1F,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC5B,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAA8B,EAAE,GAAG,CAAC,CAAC;QACnE,CAAC;QAED,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAAC,IAAqD;QACnF,MAAM,oBAAoB,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7D,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAAC,IAA4B,EAAE,SAAuB;QACnF,yCAAyC;QACzC,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,KAAK,SAAS,CAAC,EAAE,CAAC;YACtE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;YACjG,IAAI,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;gBACxF,gEAAgE;gBAChE,MAAM,oBAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAC5D,CAAC;QACF,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,qBAAqB,CAAC,OAAO,EAAE,CAAC;YACnD,OAAO;QACR,CAAC;QAED,MAAM,oBAAoB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,qBAAqB,CAAC,OAAO,CAAC,CAAC;QAClF,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAE/C,MAAM,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpD,MAAM,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAEO,uBAAuB;QAC9B,OAAO,QAAQ,CAAC,GAAG,CAAU,kCAAkC,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAU,oBAAoB,CAAC,CAAC;IACjH,CAAC;IAEO,KAAK,CAAC,qBAAqB,CAAC,MAA8B,EAAE,SAAiB;QACpF,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,CAAC;YACrC,OAAO;QACR,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,EAAE;YAC3D,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE;SACvE,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC7C,CAAC;QAED,0EAA0E;QAC1E,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,OAAO;QACR,CAAC;QAED,8FAA8F;QAC9F,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,cAAc,EAAE,CAAC;YACpF,OAAO;QACR,CAAC;QAED,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAS,2CAA2C,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC;QACzH,MAAM,WAAW,GAAG,GAAG,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;QAE7E,MAAM,IAAI,CAAC,6BAA6B,CAAC,WAAW,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;IACxE,CAAC;IAEO,KAAK,CAAC,oBAAoB,CACjC,QAAsB,EACtB,eAA+B,EAAE;QAEjC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAA+C,QAAQ,EAAE;YAC5F,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;SACxC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACf,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBACtC,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;YACjD,CAAC;YAED,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1E,CAAC;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,KAAK,CAAC,6BAA6B,CAC1C,IAAY,EACZ,IAA2D,EAC3D,SAAiB;QAEjB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEvD,MAAM,IAAI,GAAG,MAAM,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACrF,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC7G,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,UAAU,GAAG,MAAM,UAAU,CAClC,IAAI,EACJ,MAAM,CAAC,EAAE,EAAE,EACX,IAAI,EACJ,EAAE,EACF,KAAK,EACL,KAAK,EACL;YACC,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,IAAI,CAAC,GAAG;YACd,SAAS,EAAE,KAAK;SAChB,EACD;YACC,OAAO,EAAE,IAAI,CAAC,GAAG;SACjB,CACD,CAAC;QAEF,OAAO,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC;IACpE,CAAC;IAEM,KAAK,CAAC,4BAA4B,CAAC,MAA8B,EAAE,GAA6B;QACtG,4CAA4C;QAC5C,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,WAAW,CAA8B,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACjH,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACpC,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACvG,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QAED,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;YACvB,MAAM,oBAAoB,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;QAC3D,CAAC;aAAM,CAAC;YACP,MAAM,oBAAoB,CAAC,oBAAoB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC9D,CAAC;QAED,IAAI,IAAI,EAAE,CAAC;YACV,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QACzF,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,mBAAmB,CAAC,GAAiB,EAAE,GAAiB;QACrE,IAAI,CAAC;YACJ,MAAM,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,SAAS,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;QAClF,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,+GAA+G;YAC/G,MAAM,CAAC,KAAK,CAAC;gBACZ,IAAI,EAAE,8CAA8C;gBACpD,KAAK;gBACL,GAAG;gBACH,GAAG;aACH,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;CACD","sourcesContent":["import { Apps } from '@rocket.chat/apps';\nimport type { VideoConfData, VideoConfDataExtended } from '@rocket.chat/apps-engine/definition/videoConfProviders';\nimport type { AppVideoConfProviderManager } from '@rocket.chat/apps-engine/server/managers';\nimport type { IVideoConfService, VideoConferenceJoinOptions } from '@rocket.chat/core-services';\nimport { api, ServiceClassInternal, Room } from '@rocket.chat/core-services';\nimport type {\n\tIDirectVideoConference,\n\tILivechatVideoConference,\n\tIRoom,\n\tIUser,\n\tVideoConferenceInstructions,\n\tDirectCallInstructions,\n\tConferenceInstructions,\n\tLivechatInstructions,\n\tAtLeast,\n\tIGroupVideoConference,\n\tIVideoConferenceUser,\n\tIMessage,\n\tIStats,\n\tVideoConference,\n\tVideoConferenceCapabilities,\n\tVideoConferenceCreateData,\n\tOptional,\n} from '@rocket.chat/core-typings';\nimport {\n\tVideoConferenceStatus,\n\tisDirectVideoConference,\n\tisGroupVideoConference,\n\tisLivechatVideoConference,\n} from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport { Users, VideoConference as VideoConferenceModel, Rooms, Messages, Subscriptions } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\nimport { wrapExceptions } from '@rocket.chat/tools';\nimport type * as UiKit from '@rocket.chat/ui-kit';\nimport { MongoInternals } from 'meteor/mongo';\n\nimport { RocketChatAssets } from '../../../app/assets/server';\nimport { canAccessRoomIdAsync } from '../../../app/authorization/server/functions/canAccessRoom';\nimport { createRoom } from '../../../app/lib/server/functions/createRoom';\nimport { sendMessage } from '../../../app/lib/server/functions/sendMessage';\nimport { notifyOnMessageChange } from '../../../app/lib/server/lib/notifyListener';\nimport { metrics } from '../../../app/metrics/server/lib/metrics';\nimport { Push } from '../../../app/push/server/push';\nimport PushNotification from '../../../app/push-notifications/server/lib/PushNotification';\nimport { settings } from '../../../app/settings/server';\nimport { updateCounter } from '../../../app/statistics/server/functions/updateStatsCounter';\nimport { getUserAvatarURL } from '../../../app/utils/server/getUserAvatarURL';\nimport { getUserPreference } from '../../../app/utils/server/lib/getUserPreference';\nimport { callbacks } from '../../../lib/callbacks';\nimport { availabilityErrors } from '../../../lib/videoConference/constants';\nimport { readSecondaryPreferred } from '../../database/readSecondaryPreferred';\nimport { i18n } from '../../lib/i18n';\nimport { isRoomCompatibleWithVideoConfRinging } from '../../lib/isRoomCompatibleWithVideoConfRinging';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport { videoConfProviders } from '../../lib/videoConfProviders';\nimport { videoConfTypes } from '../../lib/videoConfTypes';\n\nconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\nconst logger = new Logger('VideoConference');\n\nexport class VideoConfService extends ServiceClassInternal implements IVideoConfService {\n\tprotected name = 'video-conference';\n\n\t// VideoConference.create: Start a video conference using the type and provider specified as arguments\n\tpublic async create(\n\t\t{ type, rid, createdBy, providerName, ...data }: VideoConferenceCreateData,\n\t\tuseAppUser = true,\n\t): Promise<VideoConferenceInstructions> {\n\t\treturn wrapExceptions(async () => {\n\t\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 't' | 'uids' | 'name' | 'fname'>>(rid, {\n\t\t\t\tprojection: { t: 1, uids: 1, name: 1, fname: 1 },\n\t\t\t});\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('invalid-room');\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneById<IUser>(createdBy);\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('failed-to-load-own-data');\n\t\t\t}\n\n\t\t\tif (type === 'direct') {\n\t\t\t\tif (!isRoomCompatibleWithVideoConfRinging(room.t, room.uids)) {\n\t\t\t\t\tthrow new Error('type-and-room-not-compatible');\n\t\t\t\t}\n\n\t\t\t\treturn this.startDirect(providerName, user, room, data);\n\t\t\t}\n\n\t\t\tif (type === 'livechat') {\n\t\t\t\treturn this.startLivechat(providerName, user, rid);\n\t\t\t}\n\n\t\t\tconst title = (data as Partial<IGroupVideoConference>).title || room.fname || room.name || '';\n\t\t\treturn this.startGroup(providerName, user, room._id, title, data, useAppUser);\n\t\t}).catch((e) => {\n\t\t\tlogger.error({\n\t\t\t\tname: 'Error on VideoConf.create',\n\t\t\t\terror: e,\n\t\t\t});\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\t// VideoConference.start: Detect the desired type and provider then start a video conference using them\n\tpublic async start(\n\t\tcaller: IUser['_id'],\n\t\trid: string,\n\t\t{ title, allowRinging }: { title?: string; allowRinging?: boolean },\n\t): Promise<VideoConferenceInstructions> {\n\t\treturn wrapExceptions(async () => {\n\t\t\tconst providerName = await this.getValidatedProvider();\n\t\t\tconst initialData = await this.getTypeForNewVideoConference(rid, Boolean(allowRinging));\n\n\t\t\tconst data = {\n\t\t\t\t...initialData,\n\t\t\t\tcreatedBy: caller,\n\t\t\t\trid,\n\t\t\t\tproviderName,\n\t\t\t} as VideoConferenceCreateData;\n\n\t\t\tif (data.type === 'videoconference') {\n\t\t\t\tdata.title = title;\n\t\t\t}\n\n\t\t\treturn this.create(data, false);\n\t\t}).catch((e) => {\n\t\t\tlogger.error({\n\t\t\t\tname: 'Error on VideoConf.start',\n\t\t\t\terror: e,\n\t\t\t});\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tpublic async join(uid: IUser['_id'] | undefined, callId: VideoConference['_id'], options: VideoConferenceJoinOptions): Promise<string> {\n\t\treturn wrapExceptions(async () => {\n\t\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\t\t\tif (!call || call.endedAt) {\n\t\t\t\tthrow new Error('invalid-call');\n\t\t\t}\n\n\t\t\tlet user: Pick<IUser, '_id' | 'username' | 'name' | 'avatarETag'> | null = null;\n\n\t\t\tif (uid) {\n\t\t\t\tuser = await Users.findOneById<Pick<IUser, '_id' | 'username' | 'name' | 'avatarETag'>>(uid, {\n\t\t\t\t\tprojection: { name: 1, username: 1, avatarETag: 1 },\n\t\t\t\t});\n\t\t\t\tif (!user) {\n\t\t\t\t\tthrow new Error('failed-to-load-own-data');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (call.providerName === 'jitsi') {\n\t\t\t\tupdateCounter({ settingsId: 'Jitsi_Click_To_Join_Count' });\n\t\t\t}\n\n\t\t\treturn this.joinCall(call, user || undefined, options);\n\t\t}).catch((e) => {\n\t\t\tlogger.error({\n\t\t\t\tname: 'Error on VideoConf.join',\n\t\t\t\terror: e,\n\t\t\t});\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tpublic async getInfo(callId: VideoConference['_id'], uid: IUser['_id'] | undefined): Promise<UiKit.LayoutBlock[]> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\t\tif (!call) {\n\t\t\tthrow new Error('invalid-call');\n\t\t}\n\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\tlet user: Pick<Required<IUser>, '_id' | 'username' | 'name' | 'avatarETag'> | null = null;\n\n\t\tif (uid) {\n\t\t\tuser = await Users.findOneById<Pick<Required<IUser>, '_id' | 'username' | 'name' | 'avatarETag'>>(uid, {\n\t\t\t\tprojection: { name: 1, username: 1, avatarETag: 1 },\n\t\t\t});\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('failed-to-load-own-data');\n\t\t\t}\n\t\t}\n\n\t\tconst blocks = await (await this.getProviderManager()).getVideoConferenceInfo(call.providerName, call, user || undefined).catch((e) => {\n\t\t\tthrow new Error(e);\n\t\t});\n\n\t\tif (blocks?.length) {\n\t\t\treturn blocks as UiKit.LayoutBlock[];\n\t\t}\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tblockId: 'videoconf-info',\n\t\t\t\ttype: 'section',\n\t\t\t\ttext: {\n\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\ttext: `**${i18n.t('Video_Conference_Url')}**: ${call.url}`,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tpublic async cancel(uid: IUser['_id'], callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\t\tif (!call || !isDirectVideoConference(call)) {\n\t\t\tthrow new Error('invalid-call');\n\t\t}\n\n\t\tif (call.status !== VideoConferenceStatus.CALLING || call.endedBy || call.endedAt) {\n\t\t\tthrow new Error('invalid-call-status');\n\t\t}\n\n\t\tconst user = await Users.findOneById(uid);\n\t\tif (!user) {\n\t\t\tthrow new Error('failed-to-load-own-data');\n\t\t}\n\n\t\tawait VideoConferenceModel.setDataById(callId, {\n\t\t\tringing: false,\n\t\t\tstatus: VideoConferenceStatus.DECLINED,\n\t\t\tendedAt: new Date(),\n\t\t\tendedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name as string,\n\t\t\t\tusername: user.username as string,\n\t\t\t},\n\t\t});\n\n\t\tawait this.runVideoConferenceChangedEvent(callId);\n\t\tthis.notifyVideoConfUpdate(call.rid, call._id);\n\n\t\tawait this.sendAllPushNotifications(call._id);\n\t}\n\n\tpublic async get(callId: VideoConference['_id']): Promise<Omit<VideoConference, 'providerData'> | null> {\n\t\treturn VideoConferenceModel.findOneById<Omit<VideoConference, 'providerData'>>(callId, { projection: { providerData: 0 } });\n\t}\n\n\tpublic async getUnfiltered(callId: VideoConference['_id']): Promise<VideoConference | null> {\n\t\treturn VideoConferenceModel.findOneById(callId);\n\t}\n\n\tpublic async list(\n\t\troomId: IRoom['_id'],\n\t\tpagination: { offset?: number; count?: number } = {},\n\t): Promise<PaginatedResult<{ data: VideoConference[] }>> {\n\t\tconst { cursor, totalCount } = VideoConferenceModel.findPaginatedByRoomId(roomId, pagination);\n\n\t\tconst [data, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\treturn {\n\t\t\tdata,\n\t\t\toffset: pagination.offset || 0,\n\t\t\tcount: data.length,\n\t\t\ttotal,\n\t\t};\n\t}\n\n\tpublic async setProviderData(callId: VideoConference['_id'], data: VideoConference['providerData'] | undefined): Promise<void> {\n\t\tawait VideoConferenceModel.setProviderDataById(callId, data);\n\t}\n\n\tpublic async setEndedBy(callId: VideoConference['_id'], endedBy: IUser['_id']): Promise<void> {\n\t\tconst user = await Users.findOneById<Required<Pick<IUser, '_id' | 'username' | 'name'>>>(endedBy, {\n\t\t\tprojection: { username: 1, name: 1 },\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new Error('Invalid User');\n\t\t}\n\n\t\tawait VideoConferenceModel.setEndedById(callId, {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t\tname: user.name,\n\t\t});\n\t}\n\n\tpublic async setEndedAt(callId: VideoConference['_id'], endedAt: Date): Promise<void> {\n\t\tawait VideoConferenceModel.setEndedById(callId, undefined, endedAt);\n\t}\n\n\tpublic async setStatus(callId: VideoConference['_id'], status: VideoConference['status']): Promise<void> {\n\t\tswitch (status) {\n\t\t\tcase VideoConferenceStatus.ENDED:\n\t\t\t\treturn this.endCall(callId);\n\t\t\tcase VideoConferenceStatus.EXPIRED:\n\t\t\t\treturn this.expireCall(callId);\n\t\t}\n\n\t\tawait VideoConferenceModel.setStatusById(callId, status);\n\t}\n\n\tpublic async addUser(callId: VideoConference['_id'], userId?: IUser['_id'], ts?: Date): Promise<void> {\n\t\tconst call = await this.get(callId);\n\t\tif (!call) {\n\t\t\tthrow new Error('Invalid video conference');\n\t\t}\n\n\t\tif (!userId) {\n\t\t\tif (call.type === 'videoconference') {\n\t\t\t\treturn this.addAnonymousUser(call as Omit<IGroupVideoConference, 'providerData'>);\n\t\t\t}\n\n\t\t\tthrow new Error('Invalid User');\n\t\t}\n\n\t\tconst user = await Users.findOneById<Required<Pick<IUser, '_id' | 'username' | 'name' | 'avatarETag'>>>(userId, {\n\t\t\tprojection: { username: 1, name: 1, avatarETag: 1 },\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new Error('Invalid User');\n\t\t}\n\n\t\tawait this.addUserToCall(call, {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t\tname: user.name,\n\t\t\tavatarETag: user.avatarETag,\n\t\t\tts: ts || new Date(),\n\t\t});\n\t}\n\n\tpublic async listProviders(): Promise<{ key: string; label: string }[]> {\n\t\treturn videoConfProviders.getProviderList();\n\t}\n\n\tpublic async listProviderCapabilities(providerName: string): Promise<VideoConferenceCapabilities> {\n\t\treturn videoConfProviders.getProviderCapabilities(providerName) || {};\n\t}\n\n\tpublic async listCapabilities(): Promise<{ providerName: string; capabilities: VideoConferenceCapabilities }> {\n\t\tconst providerName = await this.getValidatedProvider();\n\n\t\treturn {\n\t\t\tproviderName,\n\t\t\tcapabilities: videoConfProviders.getProviderCapabilities(providerName) || {},\n\t\t};\n\t}\n\n\tpublic async declineLivechatCall(callId: VideoConference['_id']): Promise<boolean> {\n\t\tconst call = await this.getUnfiltered(callId);\n\n\t\tif (!isLivechatVideoConference(call)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (call.messages.started) {\n\t\t\tconst name =\n\t\t\t\t(settings.get<boolean>('UI_Use_Real_Name') ? call.createdBy.name : call.createdBy.username) || call.createdBy.username || '';\n\t\t\tconst text = i18n.t('video_livechat_missed', { username: name });\n\t\t\tawait Messages.setBlocksById(call.messages.started, [this.buildMessageBlock(text)]);\n\n\t\t\tawait notifyOnMessageChange({\n\t\t\t\tid: call.messages.started,\n\t\t\t});\n\t\t}\n\n\t\tawait VideoConferenceModel.setDataById(call._id, {\n\t\t\tstatus: VideoConferenceStatus.DECLINED,\n\t\t\tendedAt: new Date(),\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tpublic async diagnoseProvider(uid: string, rid: string, providerName?: string): Promise<string | undefined> {\n\t\ttry {\n\t\t\tif (providerName) {\n\t\t\t\tawait this.validateProvider(providerName);\n\t\t\t} else {\n\t\t\t\tawait this.getValidatedProvider();\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tawait this.createEphemeralMessage(uid, rid, error.message);\n\t\t\t\treturn error.message;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async getStatistics(): Promise<IStats['videoConf']> {\n\t\tconst options = {\n\t\t\treadPreference: readSecondaryPreferred(db),\n\t\t};\n\n\t\treturn {\n\t\t\tvideoConference: {\n\t\t\t\tstarted: await VideoConferenceModel.countByTypeAndStatus('videoconference', VideoConferenceStatus.STARTED, options),\n\t\t\t\tended: await VideoConferenceModel.countByTypeAndStatus('videoconference', VideoConferenceStatus.ENDED, options),\n\t\t\t},\n\t\t\tdirect: {\n\t\t\t\tcalling: await VideoConferenceModel.countByTypeAndStatus('direct', VideoConferenceStatus.CALLING, options),\n\t\t\t\tstarted: await VideoConferenceModel.countByTypeAndStatus('direct', VideoConferenceStatus.STARTED, options),\n\t\t\t\tended: await VideoConferenceModel.countByTypeAndStatus('direct', VideoConferenceStatus.ENDED, options),\n\t\t\t},\n\t\t\tlivechat: {\n\t\t\t\tstarted: await VideoConferenceModel.countByTypeAndStatus('livechat', VideoConferenceStatus.STARTED, options),\n\t\t\t\tended: await VideoConferenceModel.countByTypeAndStatus('livechat', VideoConferenceStatus.ENDED, options),\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\tprovider: settings.get<string>('VideoConf_Default_Provider'),\n\t\t\t\tdms: settings.get<boolean>('VideoConf_Enable_DMs'),\n\t\t\t\tchannels: settings.get<boolean>('VideoConf_Enable_Channels'),\n\t\t\t\tgroups: settings.get<boolean>('VideoConf_Enable_Groups'),\n\t\t\t\tteams: settings.get<boolean>('VideoConf_Enable_Teams'),\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic async validateAction(\n\t\taction: string,\n\t\tcaller: IUser['_id'],\n\t\t{ callId, uid, rid }: { callId: VideoConference['_id']; uid: IUser['_id']; rid: IRoom['_id'] },\n\t): Promise<boolean> {\n\t\tif (!callId || !uid || !rid) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!(await canAccessRoomIdAsync(rid, caller)) || (caller !== uid && !(await canAccessRoomIdAsync(rid, uid)))) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst call = await VideoConferenceModel.findOneById<Pick<VideoConference, '_id' | 'status' | 'endedAt' | 'createdBy'>>(callId, {\n\t\t\tprojection: { status: 1, endedAt: 1, createdBy: 1 },\n\t\t});\n\n\t\tif (!call) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (action === 'end') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (call.endedAt || call.status > VideoConferenceStatus.STARTED) {\n\t\t\t// If the caller is still calling about a call that has already ended, notify it\n\t\t\tif (action === 'call' && caller === call.createdBy._id) {\n\t\t\t\tthis.notifyUser(call.createdBy._id, 'end', { rid, uid, callId });\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate notifyUser(\n\t\tuserId: IUser['_id'],\n\t\taction: string,\n\t\tparams: { uid: IUser['_id']; rid: IRoom['_id']; callId: VideoConference['_id'] },\n\t): void {\n\t\tvoid api.broadcast('user.video-conference', { userId, action, params });\n\t}\n\n\tprivate notifyVideoConfUpdate(rid: IRoom['_id'], callId: VideoConference['_id']): void {\n\t\tvoid api.broadcast('room.video-conference', { rid, callId });\n\t}\n\n\tprivate async endCall(callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await this.getUnfiltered(callId);\n\t\tif (!call) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait VideoConferenceModel.setDataById(call._id, { endedAt: new Date(), status: VideoConferenceStatus.ENDED });\n\t\tawait this.runVideoConferenceChangedEvent(call._id);\n\t\tthis.notifyVideoConfUpdate(call.rid, call._id);\n\n\t\tif (call.type === 'direct') {\n\t\t\treturn this.endDirectCall(call);\n\t\t}\n\t}\n\n\tprivate async expireCall(callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById<Pick<VideoConference, '_id' | 'messages'>>(callId, { projection: { messages: 1 } });\n\t\tif (!call) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait VideoConferenceModel.setDataById(call._id, { endedAt: new Date(), status: VideoConferenceStatus.EXPIRED });\n\t}\n\n\tprivate async endDirectCall(call: IDirectVideoConference): Promise<void> {\n\t\tconst params = { rid: call.rid, uid: call.createdBy._id, callId: call._id };\n\n\t\t// Notify the caller that the call was ended by the server\n\t\tthis.notifyUser(call.createdBy._id, 'end', params);\n\n\t\t// If the callee hasn't joined the call yet, notify them that it has already ended\n\t\tconst subscriptions = await Subscriptions.findByRoomIdAndNotUserId(call.rid, call.createdBy._id, {\n\t\t\tprojection: { 'u._id': 1, '_id': 0 },\n\t\t}).toArray();\n\n\t\tfor (const subscription of subscriptions) {\n\t\t\t// Skip notifying users that already joined the call\n\t\t\tif (call.users.find(({ _id }) => _id === subscription.u._id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.notifyUser(subscription.u._id, 'end', params);\n\t\t}\n\t}\n\n\tprivate async getTypeForNewVideoConference(\n\t\trid: IRoom['_id'],\n\t\tallowRinging: boolean,\n\t): Promise<AtLeast<VideoConferenceCreateData, 'type'>> {\n\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 't'>>(rid, {\n\t\t\tprojection: { t: 1 },\n\t\t});\n\n\t\tif (!room) {\n\t\t\tthrow new Error('invalid-room');\n\t\t}\n\n\t\treturn videoConfTypes.getTypeForRoom(room, allowRinging);\n\t}\n\n\tprivate async createMessage(call: VideoConference, createdBy?: IUser, customBlocks?: IMessage['blocks']): Promise<IMessage['_id']> {\n\t\tconst record = {\n\t\t\tt: 'videoconf',\n\t\t\tmsg: '',\n\t\t\tgroupable: false,\n\t\t\tblocks: customBlocks || [this.buildVideoConfBlock(call._id)],\n\t\t} satisfies Partial<IMessage>;\n\n\t\tconst room = await Rooms.findOneById(call.rid);\n\t\tconst appId = videoConfProviders.getProviderAppId(call.providerName);\n\t\tconst user = createdBy || (appId && (await Users.findOneByAppId(appId))) || (await Users.findOneById('rocket.cat'));\n\n\t\tconst message = await sendMessage(user, record, room, false);\n\n\t\tif (!message) {\n\t\t\tthrow new Error('failed-to-create-message');\n\t\t}\n\n\t\treturn message._id;\n\t}\n\n\tprivate async validateProvider(providerName: string): Promise<void> {\n\t\tconst manager = await this.getProviderManager();\n\t\tconst configured = await manager.isFullyConfigured(providerName).catch(() => false);\n\t\tif (!configured) {\n\t\t\tthrow new Error(availabilityErrors.NOT_CONFIGURED);\n\t\t}\n\t}\n\n\tprivate async getValidatedProvider(): Promise<string> {\n\t\tif (!videoConfProviders.hasAnyProvider()) {\n\t\t\tthrow new Error(availabilityErrors.NO_APP);\n\t\t}\n\n\t\tconst providerName = videoConfProviders.getActiveProvider();\n\t\tif (!providerName) {\n\t\t\tthrow new Error(availabilityErrors.NOT_ACTIVE);\n\t\t}\n\n\t\tawait this.validateProvider(providerName);\n\n\t\treturn providerName;\n\t}\n\n\tprivate async createEphemeralMessage(uid: string, rid: string, i18nKey: string): Promise<void> {\n\t\tconst user = await Users.findOneById<Pick<IUser, 'language' | 'roles'>>(uid, { projection: { language: 1, roles: 1 } });\n\t\tconst language = user?.language || settings.get<string>('Language') || 'en';\n\t\tconst key = user?.roles.includes('admin') ? `admin-${i18nKey}` : i18nKey;\n\t\tconst msg = i18n.t(key, {\n\t\t\tlng: language,\n\t\t});\n\n\t\tvoid api.broadcast('notify.ephemeralMessage', uid, rid, {\n\t\t\tmsg,\n\t\t});\n\t}\n\n\tprivate async createLivechatMessage(call: ILivechatVideoConference, user: IUser, url: string): Promise<IMessage['_id']> {\n\t\tconst username = (settings.get<boolean>('UI_Use_Real_Name') ? user.name : user.username) || user.username || '';\n\t\tconst text = i18n.t('video_livechat_started', {\n\t\t\tusername,\n\t\t});\n\n\t\treturn this.createMessage(call, user, [\n\t\t\tthis.buildMessageBlock(text),\n\t\t\t{\n\t\t\t\ttype: 'actions',\n\t\t\t\tappId: 'videoconf-core',\n\t\t\t\tblockId: call._id,\n\t\t\t\telements: [\n\t\t\t\t\t{\n\t\t\t\t\t\tappId: 'videoconf-core',\n\t\t\t\t\t\tblockId: call._id,\n\t\t\t\t\t\tactionId: 'joinLivechat',\n\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\ttext: {\n\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\ttext: i18n.t('Join_call'),\n\t\t\t\t\t\t\temoji: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\turl,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t]);\n\t}\n\n\tprivate buildVideoConfBlock(callId: string): UiKit.MessageSurfaceLayout[number] {\n\t\treturn {\n\t\t\ttype: 'video_conf',\n\t\t\tblockId: callId,\n\t\t\tcallId,\n\t\t\tappId: 'videoconf-core',\n\t\t};\n\t}\n\n\tprivate buildMessageBlock(text: string): UiKit.MessageSurfaceLayout[number] {\n\t\treturn {\n\t\t\ttype: 'section',\n\t\t\tappId: 'videoconf-core',\n\t\t\ttext: {\n\t\t\t\ttype: 'mrkdwn',\n\t\t\t\ttext: `${text}`,\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate async sendPushNotification(\n\t\tcall: AtLeast<IDirectVideoConference, 'createdBy' | 'rid' | '_id' | 'status'>,\n\t\tcalleeId: IUser['_id'],\n\t): Promise<void> {\n\t\tif (\n\t\t\tsettings.get('Push_enable') !== true ||\n\t\t\tsettings.get('VideoConf_Mobile_Ringing') !== true ||\n\t\t\t!(await getUserPreference(calleeId, 'enableMobileRinging'))\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tmetrics.notificationsSent.inc({ notification_type: 'mobile' });\n\t\tawait Push.send({\n\t\t\tfrom: 'push',\n\t\t\tbadge: 0,\n\t\t\tsound: 'ringtone.mp3',\n\t\t\tpriority: 10,\n\t\t\ttitle: `@${call.createdBy.username}`,\n\t\t\ttext: i18n.t('Video_Conference'),\n\t\t\tpayload: {\n\t\t\t\thost: Meteor.absoluteUrl(),\n\t\t\t\trid: call.rid,\n\t\t\t\tnotificationType: 'videoconf',\n\t\t\t\tcaller: call.createdBy,\n\t\t\t\tavatar: getUserAvatarURL(call.createdBy.username),\n\t\t\t\tstatus: call.status,\n\t\t\t\tcallId: call._id,\n\t\t\t},\n\t\t\tuserId: calleeId,\n\t\t\tnotId: PushNotification.getNotificationId(`${call.rid}|${call._id}`),\n\t\t\tgcm: {\n\t\t\t\tstyle: 'inbox',\n\t\t\t\timage: RocketChatAssets.getURL('Assets_favicon_192'),\n\t\t\t},\n\t\t\tapn: {\n\t\t\t\tcategory: 'VIDEOCONF',\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate async sendAllPushNotifications(callId: VideoConference['_id']): Promise<void> {\n\t\tif (settings.get('Push_enable') !== true || settings.get('VideoConf_Mobile_Ringing') !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst call = await VideoConferenceModel.findOneById<Pick<VideoConference, 'createdBy' | 'rid' | '_id' | 'users' | 'status'>>(callId, {\n\t\t\tprojection: { createdBy: 1, rid: 1, users: 1, status: 1 },\n\t\t});\n\n\t\tif (!call) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subscriptions = Subscriptions.findByRoomIdAndNotUserId(call.rid, call.createdBy._id, {\n\t\t\tprojection: { 'u._id': 1, '_id': 0 },\n\t\t});\n\n\t\tfor await (const subscription of subscriptions) {\n\t\t\tawait this.sendPushNotification(call, subscription.u._id);\n\t\t}\n\t}\n\n\tprivate async startDirect(\n\t\tproviderName: string,\n\t\tuser: IUser,\n\t\t{ _id: rid, uids }: AtLeast<IRoom, '_id' | 'uids'>,\n\t\textraData?: Partial<IDirectVideoConference>,\n\t): Promise<DirectCallInstructions> {\n\t\tconst calleeId = uids?.filter((uid) => uid !== user._id).pop();\n\t\tif (!calleeId) {\n\t\t\t// Are you trying to call yourself?\n\t\t\tthrow new Error('invalid-call-target');\n\t\t}\n\n\t\tconst callId = await VideoConferenceModel.createDirect({\n\t\t\t...extraData,\n\t\t\trid,\n\t\t\tcreatedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name as string,\n\t\t\t\tusername: user.username as string,\n\t\t\t},\n\t\t\tproviderName,\n\t\t});\n\n\t\tawait this.runNewVideoConferenceEvent(callId);\n\n\t\tawait this.maybeCreateDiscussion(callId, user);\n\n\t\tconst call = (await this.getUnfiltered(callId)) as IDirectVideoConference | null;\n\t\tif (!call) {\n\t\t\tthrow new Error('failed-to-create-direct-call');\n\t\t}\n\t\tconst url = await this.generateNewUrl(call);\n\t\tawait VideoConferenceModel.setUrlById(callId, url);\n\n\t\tconst messageId = await this.createMessage(call, user);\n\t\tcall.messages.started = messageId;\n\t\tawait VideoConferenceModel.setMessageById(callId, 'started', messageId);\n\n\t\t// After 40 seconds if the status is still \"calling\", we cancel the call automatically.\n\t\tsetTimeout(async () => {\n\t\t\ttry {\n\t\t\t\tconst call = await VideoConferenceModel.findOneById<IDirectVideoConference>(callId);\n\n\t\t\t\tif (call) {\n\t\t\t\t\tawait this.endDirectCall(call);\n\t\t\t\t\tif (call.status !== VideoConferenceStatus.CALLING) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tawait this.cancel(user._id, callId);\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// Ignore errors on this timeout\n\t\t\t}\n\t\t}, 40000);\n\n\t\tawait this.sendPushNotification(call, calleeId);\n\n\t\treturn {\n\t\t\ttype: 'direct',\n\t\t\tcallId,\n\t\t\tcalleeId,\n\t\t};\n\t}\n\n\tprivate async notifyUsersOfRoom(\n\t\trid: IRoom['_id'],\n\t\tuid: IUser['_id'],\n\t\taction: string,\n\t\tparams: { uid: IUser['_id']; rid: IRoom['_id']; callId: VideoConference['_id'] },\n\t): Promise<void> {\n\t\tconst subscriptions = Subscriptions.findByRoomIdAndNotUserId(rid, uid, {\n\t\t\tprojection: { 'u._id': 1, '_id': 0 },\n\t\t});\n\n\t\tawait subscriptions.forEach((subscription) => this.notifyUser(subscription.u._id, action, params));\n\t}\n\n\tprivate async startGroup(\n\t\tproviderName: string,\n\t\tuser: IUser,\n\t\trid: IRoom['_id'],\n\t\ttitle: string,\n\t\textraData?: Partial<IGroupVideoConference>,\n\t\tuseAppUser = true,\n\t): Promise<ConferenceInstructions> {\n\t\tconst callId = await VideoConferenceModel.createGroup({\n\t\t\t...extraData,\n\t\t\trid,\n\t\t\ttitle,\n\t\t\tcreatedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name as string,\n\t\t\t\tusername: user.username as string,\n\t\t\t},\n\t\t\tproviderName,\n\t\t});\n\n\t\tawait this.runNewVideoConferenceEvent(callId);\n\n\t\tawait this.maybeCreateDiscussion(callId, user);\n\n\t\tconst call = (await this.getUnfiltered(callId)) as IGroupVideoConference | null;\n\t\tif (!call) {\n\t\t\tthrow new Error('failed-to-create-group-call');\n\t\t}\n\n\t\tconst url = await this.generateNewUrl(call);\n\t\tawait VideoConferenceModel.setUrlById(callId, url);\n\n\t\tcall.url = url;\n\n\t\tconst messageId = await this.createMessage(call, useAppUser ? undefined : user);\n\t\tcall.messages.started = messageId;\n\t\tawait VideoConferenceModel.setMessageById(callId, 'started', messageId);\n\n\t\tif (call.ringing) {\n\t\t\tawait this.notifyUsersOfRoom(rid, user._id, 'ring', { callId, rid, uid: call.createdBy._id });\n\t\t}\n\n\t\treturn {\n\t\t\ttype: 'videoconference',\n\t\t\tcallId,\n\t\t\trid,\n\t\t};\n\t}\n\n\tprivate async startLivechat(providerName: string, user: IUser, rid: IRoom['_id']): Promise<LivechatInstructions> {\n\t\tconst callId = await VideoConferenceModel.createLivechat({\n\t\t\trid,\n\t\t\tcreatedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name as string,\n\t\t\t\tusername: user.username as string,\n\t\t\t},\n\t\t\tproviderName,\n\t\t});\n\n\t\tconst call = (await this.getUnfiltered(callId)) as ILivechatVideoConference | null;\n\t\tif (!call) {\n\t\t\tthrow new Error('failed-to-create-livechat-call');\n\t\t}\n\n\t\tawait this.runNewVideoConferenceEvent(callId);\n\n\t\t// Livechat conferences do not use discussions\n\n\t\tconst joinUrl = await this.getUrl(call);\n\t\tconst messageId = await this.createLivechatMessage(call, user, joinUrl);\n\t\tcall.messages.started = messageId;\n\t\tawait VideoConferenceModel.setMessageById(callId, 'started', messageId);\n\n\t\treturn {\n\t\t\ttype: 'livechat',\n\t\t\tcallId,\n\t\t};\n\t}\n\n\tprivate async joinCall(\n\t\tcall: VideoConference,\n\t\tuser: AtLeast<IUser, '_id' | 'username' | 'name' | 'avatarETag'> | undefined,\n\t\toptions: VideoConferenceJoinOptions,\n\t): Promise<string> {\n\t\tvoid callbacks.runAsync('onJoinVideoConference', call._id, user?._id);\n\n\t\tawait this.runOnUserJoinEvent(call._id, user as IVideoConferenceUser);\n\n\t\treturn this.getUrl(call, user, options);\n\t}\n\n\tprivate async getProviderManager(): Promise<AppVideoConfProviderManager> {\n\t\tif (!Apps.self?.isLoaded()) {\n\t\t\tthrow new Error('apps-engine-not-loaded');\n\t\t}\n\n\t\tconst manager = Apps.self?.getManager()?.getVideoConfProviderManager();\n\t\tif (!manager) {\n\t\t\tthrow new Error(availabilityErrors.NO_APP);\n\t\t}\n\n\t\treturn manager;\n\t}\n\n\tprivate async getRoomName(rid: string): Promise<string> {\n\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 'name' | 'fname'>>(rid, { projection: { name: 1, fname: 1 } });\n\n\t\treturn room?.fname || room?.name || rid;\n\t}\n\n\tprivate async generateNewUrl(call: VideoConference): Promise<string> {\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\tconst title = isGroupVideoConference(call) ? call.title || (await this.getRoomName(call.rid)) : '';\n\t\tconst callData: VideoConfData = {\n\t\t\t_id: call._id,\n\t\t\ttype: call.type,\n\t\t\trid: call.rid,\n\t\t\tcreatedBy: call.createdBy as Required<VideoConference['createdBy']>,\n\t\t\ttitle,\n\t\t\tproviderData: call.providerData,\n\t\t\tdiscussionRid: call.discussionRid,\n\t\t};\n\n\t\treturn (await this.getProviderManager()).generateUrl(call.providerName, callData);\n\t}\n\n\tprivate async getCallTitleForUser(call: VideoConference, userId?: IUser['_id']): Promise<string> {\n\t\tif (call.type === 'videoconference' && call.title) {\n\t\t\treturn call.title;\n\t\t}\n\n\t\tif (userId) {\n\t\t\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(call.rid, userId, { projection: { fname: 1, name: 1 } });\n\t\t\tif (subscription) {\n\t\t\t\treturn subscription.fname || subscription.name;\n\t\t\t}\n\t\t}\n\n\t\tconst room = await Rooms.findOneById(call.rid);\n\t\treturn room?.fname || room?.name || 'Rocket.Chat';\n\t}\n\n\tprivate async getCallTitle(call: VideoConference): Promise<string> {\n\t\tif (call.type === 'videoconference') {\n\t\t\tif (call.title) {\n\t\t\t\treturn call.title;\n\t\t\t}\n\t\t}\n\n\t\tconst room = await Rooms.findOneById(call.rid);\n\t\tif (room) {\n\t\t\tif (room.t === 'd') {\n\t\t\t\tif (room.usernames?.length) {\n\t\t\t\t\treturn room.usernames.join(', ');\n\t\t\t\t}\n\t\t\t} else if (room.fname) {\n\t\t\t\treturn room.fname;\n\t\t\t} else if (room.name) {\n\t\t\t\treturn room.name;\n\t\t\t}\n\t\t}\n\n\t\treturn 'Rocket.Chat';\n\t}\n\n\tprivate async getUrl(\n\t\tcall: VideoConference,\n\t\tuser?: AtLeast<IUser, '_id' | 'username' | 'name'>,\n\t\toptions: VideoConferenceJoinOptions = {},\n\t): Promise<string> {\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\tif (!call.url) {\n\t\t\tcall.url = await this.generateNewUrl(call);\n\t\t\tawait VideoConferenceModel.setUrlById(call._id, call.url);\n\t\t}\n\n\t\tconst callData: VideoConfDataExtended = {\n\t\t\t_id: call._id,\n\t\t\ttype: call.type,\n\t\t\trid: call.rid,\n\t\t\turl: call.url,\n\t\t\tcreatedBy: call.createdBy as Required<VideoConference['createdBy']>,\n\t\t\tproviderData: {\n\t\t\t\t...(call.providerData || {}),\n\t\t\t\t...{ customCallTitle: await this.getCallTitleForUser(call, user?._id) },\n\t\t\t},\n\t\t\ttitle: await this.getCallTitle(call),\n\t\t\tdiscussionRid: call.discussionRid,\n\t\t};\n\n\t\tconst userData = user && {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username as string,\n\t\t\tname: user.name as string,\n\t\t};\n\n\t\treturn (await this.getProviderManager()).customizeUrl(call.providerName, callData, userData, options);\n\t}\n\n\tprivate async runNewVideoConferenceEvent(callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\n\t\tif (!call) {\n\t\t\tthrow new Error('video-conf-data-not-found');\n\t\t}\n\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\treturn (await this.getProviderManager()).onNewVideoConference(call.providerName, call);\n\t}\n\n\tprivate async runVideoConferenceChangedEvent(callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\n\t\tif (!call) {\n\t\t\tthrow new Error('video-conf-data-not-found');\n\t\t}\n\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\treturn (await this.getProviderManager()).onVideoConferenceChanged(call.providerName, call);\n\t}\n\n\tprivate async runOnUserJoinEvent(callId: VideoConference['_id'], user?: IVideoConferenceUser): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\n\t\tif (!call) {\n\t\t\tthrow new Error('video-conf-data-not-found');\n\t\t}\n\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\treturn (await this.getProviderManager()).onUserJoin(call.providerName, call, user);\n\t}\n\n\tprivate async addUserToCall(\n\t\tcall: Optional<VideoConference, 'providerData'>,\n\t\t{ _id, username, name, avatarETag, ts }: AtLeast<Required<IUser>, '_id' | 'username' | 'name' | 'avatarETag'> & { ts?: Date },\n\t): Promise<void> {\n\t\t// If the call has a discussion, ensure the user is subscribed to it;\n\t\t// This is done even if the user has already joined the call before, so they can be added back if they had left the discussion.\n\t\tif (call.discussionRid) {\n\t\t\tawait this.addUserToDiscussion(call.discussionRid, _id);\n\t\t}\n\n\t\tif (call.users.find((user) => user._id === _id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait VideoConferenceModel.addUserById(call._id, { _id, username, name, avatarETag, ts });\n\n\t\tif (call.type === 'direct') {\n\t\t\treturn this.updateDirectCall(call as IDirectVideoConference, _id);\n\t\t}\n\n\t\tthis.notifyVideoConfUpdate(call.rid, call._id);\n\t}\n\n\tprivate async addAnonymousUser(call: Optional<IGroupVideoConference, 'providerData'>): Promise<void> {\n\t\tawait VideoConferenceModel.increaseAnonymousCount(call._id);\n\t}\n\n\tprivate async updateDirectCall(call: IDirectVideoConference, newUserId: IUser['_id']): Promise<void> {\n\t\t// If it's an user that hasn't joined yet\n\t\tif (call.ringing && !call.users.find(({ _id }) => _id === newUserId)) {\n\t\t\tthis.notifyUser(call.createdBy._id, 'join', { rid: call.rid, uid: newUserId, callId: call._id });\n\t\t\tif (newUserId !== call.createdBy._id) {\n\t\t\t\tthis.notifyUser(newUserId, 'join', { rid: call.rid, uid: newUserId, callId: call._id });\n\t\t\t\t// If the callee joined the direct call, then we stopped ringing\n\t\t\t\tawait VideoConferenceModel.setRingingById(call._id, false);\n\t\t\t}\n\t\t}\n\n\t\tif (call.status !== VideoConferenceStatus.CALLING) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait VideoConferenceModel.setStatusById(call._id, VideoConferenceStatus.STARTED);\n\t\tthis.notifyVideoConfUpdate(call.rid, call._id);\n\n\t\tawait this.runVideoConferenceChangedEvent(call._id);\n\t\tawait this.sendAllPushNotifications(call._id);\n\t}\n\n\tprivate isPersistentChatEnabled(): boolean {\n\t\treturn settings.get<boolean>('VideoConf_Enable_Persistent_Chat') && settings.get<boolean>('Discussion_enabled');\n\t}\n\n\tprivate async maybeCreateDiscussion(callId: VideoConference['_id'], createdBy?: IUser): Promise<void> {\n\t\tif (!this.isPersistentChatEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst call = await VideoConferenceModel.findOneById(callId, {\n\t\t\tprojection: { rid: 1, createdBy: 1, discussionRid: 1, providerName: 1 },\n\t\t});\n\t\tif (!call) {\n\t\t\tthrow new Error('invalid-video-conference');\n\t\t}\n\n\t\t// If there's already a discussion assigned to it, do not create a new one\n\t\tif (call.discussionRid) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the call provider does not explicitly support persistent chat, do not create discussions\n\t\tif (!videoConfProviders.getProviderCapabilities(call.providerName)?.persistentChat) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst name = settings.get<string>('VideoConf_Persistent_Chat_Discussion_Name') || i18n.t('Conference Call Chat History');\n\t\tconst displayName = `${name} - ${new Date().toISOString().substring(0, 10)}`;\n\n\t\tawait this.createDiscussionForConference(displayName, call, createdBy);\n\t}\n\n\tprivate async getRoomForDiscussion(\n\t\tbaseRoom: IRoom['_id'],\n\t\tchildRoomIds: IRoom['_id'][] = [],\n\t): Promise<Pick<IRoom, '_id' | 't' | 'teamId' | 'prid'>> {\n\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 't' | 'teamId' | 'prid'>>(baseRoom, {\n\t\t\tprojection: { t: 1, teamId: 1, prid: 1 },\n\t\t});\n\t\tif (!room) {\n\t\t\tthrow new Error('invalid-room');\n\t\t}\n\n\t\tif (room.prid) {\n\t\t\tif (childRoomIds.includes(room.prid)) {\n\t\t\t\tthrow new Error('Room has circular reference.');\n\t\t\t}\n\n\t\t\treturn this.getRoomForDiscussion(room.prid, [...childRoomIds, room._id]);\n\t\t}\n\n\t\treturn room;\n\t}\n\n\tprivate async createDiscussionForConference(\n\t\tname: string,\n\t\tcall: AtLeast<VideoConference, '_id' | 'rid' | 'createdBy'>,\n\t\tcreatedBy?: IUser,\n\t): Promise<void> {\n\t\tconst room = await this.getRoomForDiscussion(call.rid);\n\n\t\tconst type = await roomCoordinator.getRoomDirectives(room.t).getDiscussionType(room);\n\t\tconst user = call.createdBy._id === createdBy?._id ? createdBy : await Users.findOneById(call.createdBy._id);\n\t\tif (!user) {\n\t\t\tthrow new Error('invalid-user');\n\t\t}\n\n\t\tconst discussion = await createRoom(\n\t\t\ttype,\n\t\t\tRandom.id(),\n\t\t\tuser,\n\t\t\t[],\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tfname: name,\n\t\t\t\tprid: room._id,\n\t\t\t\tencrypted: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreator: user._id,\n\t\t\t},\n\t\t);\n\n\t\treturn this.assignDiscussionToConference(call._id, discussion._id);\n\t}\n\n\tpublic async assignDiscussionToConference(callId: VideoConference['_id'], rid: IRoom['_id'] | undefined): Promise<void> {\n\t\t// Ensures the specified rid is a valid room\n\t\tconst room = rid ? await Rooms.findOneById<Pick<IRoom, '_id' | 'prid'>>(rid, { projection: { prid: 1 } }) : null;\n\t\tif (rid && !room) {\n\t\t\tthrow new Error('invalid-room-id');\n\t\t}\n\n\t\tconst call = await VideoConferenceModel.findOneById(callId, { projection: { users: 1, messages: 1 } });\n\t\tif (!call) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (rid === undefined) {\n\t\t\tawait VideoConferenceModel.unsetDiscussionRidById(callId);\n\t\t} else {\n\t\t\tawait VideoConferenceModel.setDiscussionRidById(callId, rid);\n\t\t}\n\n\t\tif (room) {\n\t\t\tawait Promise.all(call.users.map(({ _id }) => this.addUserToDiscussion(room._id, _id)));\n\t\t}\n\t}\n\n\tprivate async addUserToDiscussion(rid: IRoom['_id'], uid: IUser['_id']): Promise<void> {\n\t\ttry {\n\t\t\tawait Room.addUserToRoom(rid, { _id: uid }, undefined, { skipAlertSound: true });\n\t\t} catch (error) {\n\t\t\t// Ignore any errors here so that the subscription doesn't block the user from participating in the conference.\n\t\t\tlogger.error({\n\t\t\t\tname: 'Error trying to subscribe user to discussion',\n\t\t\t\terror,\n\t\t\t\trid,\n\t\t\t\tuid,\n\t\t\t});\n\t\t}\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _objectWithoutProperties;\n    module.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n      default(v) {\n        _objectWithoutProperties = v;\n      }\n    }, 1);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 2);\n    const _excluded = [\"type\", \"rid\", \"createdBy\", \"providerName\"];\n    module.export({\n      VideoConfService: () => VideoConfService\n    });\n    let Apps;\n    module.link(\"@rocket.chat/apps\", {\n      Apps(v) {\n        Apps = v;\n      }\n    }, 0);\n    let api, ServiceClassInternal, Room;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      },\n      ServiceClassInternal(v) {\n        ServiceClassInternal = v;\n      },\n      Room(v) {\n        Room = v;\n      }\n    }, 1);\n    let VideoConferenceStatus, isDirectVideoConference, isGroupVideoConference, isLivechatVideoConference;\n    module.link(\"@rocket.chat/core-typings\", {\n      VideoConferenceStatus(v) {\n        VideoConferenceStatus = v;\n      },\n      isDirectVideoConference(v) {\n        isDirectVideoConference = v;\n      },\n      isGroupVideoConference(v) {\n        isGroupVideoConference = v;\n      },\n      isLivechatVideoConference(v) {\n        isLivechatVideoConference = v;\n      }\n    }, 2);\n    let Logger;\n    module.link(\"@rocket.chat/logger\", {\n      Logger(v) {\n        Logger = v;\n      }\n    }, 3);\n    let Users, VideoConferenceModel, Rooms, Messages, Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      },\n      VideoConference(v) {\n        VideoConferenceModel = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      },\n      Messages(v) {\n        Messages = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 4);\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 5);\n    let wrapExceptions;\n    module.link(\"@rocket.chat/tools\", {\n      wrapExceptions(v) {\n        wrapExceptions = v;\n      }\n    }, 6);\n    let MongoInternals;\n    module.link(\"meteor/mongo\", {\n      MongoInternals(v) {\n        MongoInternals = v;\n      }\n    }, 7);\n    let RocketChatAssets;\n    module.link(\"../../../app/assets/server\", {\n      RocketChatAssets(v) {\n        RocketChatAssets = v;\n      }\n    }, 8);\n    let canAccessRoomIdAsync;\n    module.link(\"../../../app/authorization/server/functions/canAccessRoom\", {\n      canAccessRoomIdAsync(v) {\n        canAccessRoomIdAsync = v;\n      }\n    }, 9);\n    let createRoom;\n    module.link(\"../../../app/lib/server/functions/createRoom\", {\n      createRoom(v) {\n        createRoom = v;\n      }\n    }, 10);\n    let sendMessage;\n    module.link(\"../../../app/lib/server/functions/sendMessage\", {\n      sendMessage(v) {\n        sendMessage = v;\n      }\n    }, 11);\n    let notifyOnMessageChange;\n    module.link(\"../../../app/lib/server/lib/notifyListener\", {\n      notifyOnMessageChange(v) {\n        notifyOnMessageChange = v;\n      }\n    }, 12);\n    let metrics;\n    module.link(\"../../../app/metrics/server/lib/metrics\", {\n      metrics(v) {\n        metrics = v;\n      }\n    }, 13);\n    let Push;\n    module.link(\"../../../app/push/server/push\", {\n      Push(v) {\n        Push = v;\n      }\n    }, 14);\n    let PushNotification;\n    module.link(\"../../../app/push-notifications/server/lib/PushNotification\", {\n      default(v) {\n        PushNotification = v;\n      }\n    }, 15);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 16);\n    let updateCounter;\n    module.link(\"../../../app/statistics/server/functions/updateStatsCounter\", {\n      updateCounter(v) {\n        updateCounter = v;\n      }\n    }, 17);\n    let getUserAvatarURL;\n    module.link(\"../../../app/utils/server/getUserAvatarURL\", {\n      getUserAvatarURL(v) {\n        getUserAvatarURL = v;\n      }\n    }, 18);\n    let getUserPreference;\n    module.link(\"../../../app/utils/server/lib/getUserPreference\", {\n      getUserPreference(v) {\n        getUserPreference = v;\n      }\n    }, 19);\n    let callbacks;\n    module.link(\"../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 20);\n    let availabilityErrors;\n    module.link(\"../../../lib/videoConference/constants\", {\n      availabilityErrors(v) {\n        availabilityErrors = v;\n      }\n    }, 21);\n    let readSecondaryPreferred;\n    module.link(\"../../database/readSecondaryPreferred\", {\n      readSecondaryPreferred(v) {\n        readSecondaryPreferred = v;\n      }\n    }, 22);\n    let i18n;\n    module.link(\"../../lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 23);\n    let isRoomCompatibleWithVideoConfRinging;\n    module.link(\"../../lib/isRoomCompatibleWithVideoConfRinging\", {\n      isRoomCompatibleWithVideoConfRinging(v) {\n        isRoomCompatibleWithVideoConfRinging = v;\n      }\n    }, 24);\n    let roomCoordinator;\n    module.link(\"../../lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 25);\n    let videoConfProviders;\n    module.link(\"../../lib/videoConfProviders\", {\n      videoConfProviders(v) {\n        videoConfProviders = v;\n      }\n    }, 26);\n    let videoConfTypes;\n    module.link(\"../../lib/videoConfTypes\", {\n      videoConfTypes(v) {\n        videoConfTypes = v;\n      }\n    }, 27);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const {\n      db\n    } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n    const logger = new Logger('VideoConference');\n    class VideoConfService extends ServiceClassInternal {\n      constructor() {\n        super(...arguments);\n        this.name = 'video-conference';\n      }\n      // VideoConference.create: Start a video conference using the type and provider specified as arguments\n      async create(_ref) {\n        let useAppUser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        let {\n            type,\n            rid,\n            createdBy,\n            providerName\n          } = _ref,\n          data = _objectWithoutProperties(_ref, _excluded);\n        return wrapExceptions(async () => {\n          const room = await Rooms.findOneById(rid, {\n            projection: {\n              t: 1,\n              uids: 1,\n              name: 1,\n              fname: 1\n            }\n          });\n          if (!room) {\n            throw new Error('invalid-room');\n          }\n          const user = await Users.findOneById(createdBy);\n          if (!user) {\n            throw new Error('failed-to-load-own-data');\n          }\n          if (type === 'direct') {\n            if (!isRoomCompatibleWithVideoConfRinging(room.t, room.uids)) {\n              throw new Error('type-and-room-not-compatible');\n            }\n            return this.startDirect(providerName, user, room, data);\n          }\n          if (type === 'livechat') {\n            return this.startLivechat(providerName, user, rid);\n          }\n          const title = data.title || room.fname || room.name || '';\n          return this.startGroup(providerName, user, room._id, title, data, useAppUser);\n        }).catch(e => {\n          logger.error({\n            name: 'Error on VideoConf.create',\n            error: e\n          });\n          throw e;\n        });\n      }\n      // VideoConference.start: Detect the desired type and provider then start a video conference using them\n      async start(caller, rid, _ref2) {\n        let {\n          title,\n          allowRinging\n        } = _ref2;\n        return wrapExceptions(async () => {\n          const providerName = await this.getValidatedProvider();\n          const initialData = await this.getTypeForNewVideoConference(rid, Boolean(allowRinging));\n          const data = _objectSpread(_objectSpread({}, initialData), {}, {\n            createdBy: caller,\n            rid,\n            providerName\n          });\n          if (data.type === 'videoconference') {\n            data.title = title;\n          }\n          return this.create(data, false);\n        }).catch(e => {\n          logger.error({\n            name: 'Error on VideoConf.start',\n            error: e\n          });\n          throw e;\n        });\n      }\n      async join(uid, callId, options) {\n        return wrapExceptions(async () => {\n          const call = await VideoConferenceModel.findOneById(callId);\n          if (!call || call.endedAt) {\n            throw new Error('invalid-call');\n          }\n          let user = null;\n          if (uid) {\n            user = await Users.findOneById(uid, {\n              projection: {\n                name: 1,\n                username: 1,\n                avatarETag: 1\n              }\n            });\n            if (!user) {\n              throw new Error('failed-to-load-own-data');\n            }\n          }\n          if (call.providerName === 'jitsi') {\n            updateCounter({\n              settingsId: 'Jitsi_Click_To_Join_Count'\n            });\n          }\n          return this.joinCall(call, user || undefined, options);\n        }).catch(e => {\n          logger.error({\n            name: 'Error on VideoConf.join',\n            error: e\n          });\n          throw e;\n        });\n      }\n      async getInfo(callId, uid) {\n        const call = await VideoConferenceModel.findOneById(callId);\n        if (!call) {\n          throw new Error('invalid-call');\n        }\n        if (!videoConfProviders.isProviderAvailable(call.providerName)) {\n          throw new Error('video-conf-provider-unavailable');\n        }\n        let user = null;\n        if (uid) {\n          user = await Users.findOneById(uid, {\n            projection: {\n              name: 1,\n              username: 1,\n              avatarETag: 1\n            }\n          });\n          if (!user) {\n            throw new Error('failed-to-load-own-data');\n          }\n        }\n        const blocks = await (await this.getProviderManager()).getVideoConferenceInfo(call.providerName, call, user || undefined).catch(e => {\n          throw new Error(e);\n        });\n        if (blocks !== null && blocks !== void 0 && blocks.length) {\n          return blocks;\n        }\n        return [{\n          blockId: 'videoconf-info',\n          type: 'section',\n          text: {\n            type: 'mrkdwn',\n            text: \"**\".concat(i18n.t('Video_Conference_Url'), \"**: \").concat(call.url)\n          }\n        }];\n      }\n      async cancel(uid, callId) {\n        const call = await VideoConferenceModel.findOneById(callId);\n        if (!call || !isDirectVideoConference(call)) {\n          throw new Error('invalid-call');\n        }\n        if (call.status !== VideoConferenceStatus.CALLING || call.endedBy || call.endedAt) {\n          throw new Error('invalid-call-status');\n        }\n        const user = await Users.findOneById(uid);\n        if (!user) {\n          throw new Error('failed-to-load-own-data');\n        }\n        await VideoConferenceModel.setDataById(callId, {\n          ringing: false,\n          status: VideoConferenceStatus.DECLINED,\n          endedAt: new Date(),\n          endedBy: {\n            _id: user._id,\n            name: user.name,\n            username: user.username\n          }\n        });\n        await this.runVideoConferenceChangedEvent(callId);\n        this.notifyVideoConfUpdate(call.rid, call._id);\n        await this.sendAllPushNotifications(call._id);\n      }\n      async get(callId) {\n        return VideoConferenceModel.findOneById(callId, {\n          projection: {\n            providerData: 0\n          }\n        });\n      }\n      async getUnfiltered(callId) {\n        return VideoConferenceModel.findOneById(callId);\n      }\n      async list(roomId) {\n        let pagination = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const {\n          cursor,\n          totalCount\n        } = VideoConferenceModel.findPaginatedByRoomId(roomId, pagination);\n        const [data, total] = await Promise.all([cursor.toArray(), totalCount]);\n        return {\n          data,\n          offset: pagination.offset || 0,\n          count: data.length,\n          total\n        };\n      }\n      async setProviderData(callId, data) {\n        await VideoConferenceModel.setProviderDataById(callId, data);\n      }\n      async setEndedBy(callId, endedBy) {\n        const user = await Users.findOneById(endedBy, {\n          projection: {\n            username: 1,\n            name: 1\n          }\n        });\n        if (!user) {\n          throw new Error('Invalid User');\n        }\n        await VideoConferenceModel.setEndedById(callId, {\n          _id: user._id,\n          username: user.username,\n          name: user.name\n        });\n      }\n      async setEndedAt(callId, endedAt) {\n        await VideoConferenceModel.setEndedById(callId, undefined, endedAt);\n      }\n      async setStatus(callId, status) {\n        switch (status) {\n          case VideoConferenceStatus.ENDED:\n            return this.endCall(callId);\n          case VideoConferenceStatus.EXPIRED:\n            return this.expireCall(callId);\n        }\n        await VideoConferenceModel.setStatusById(callId, status);\n      }\n      async addUser(callId, userId, ts) {\n        const call = await this.get(callId);\n        if (!call) {\n          throw new Error('Invalid video conference');\n        }\n        if (!userId) {\n          if (call.type === 'videoconference') {\n            return this.addAnonymousUser(call);\n          }\n          throw new Error('Invalid User');\n        }\n        const user = await Users.findOneById(userId, {\n          projection: {\n            username: 1,\n            name: 1,\n            avatarETag: 1\n          }\n        });\n        if (!user) {\n          throw new Error('Invalid User');\n        }\n        await this.addUserToCall(call, {\n          _id: user._id,\n          username: user.username,\n          name: user.name,\n          avatarETag: user.avatarETag,\n          ts: ts || new Date()\n        });\n      }\n      async listProviders() {\n        return videoConfProviders.getProviderList();\n      }\n      async listProviderCapabilities(providerName) {\n        return videoConfProviders.getProviderCapabilities(providerName) || {};\n      }\n      async listCapabilities() {\n        const providerName = await this.getValidatedProvider();\n        return {\n          providerName,\n          capabilities: videoConfProviders.getProviderCapabilities(providerName) || {}\n        };\n      }\n      async declineLivechatCall(callId) {\n        const call = await this.getUnfiltered(callId);\n        if (!isLivechatVideoConference(call)) {\n          return false;\n        }\n        if (call.messages.started) {\n          const name = (settings.get('UI_Use_Real_Name') ? call.createdBy.name : call.createdBy.username) || call.createdBy.username || '';\n          const text = i18n.t('video_livechat_missed', {\n            username: name\n          });\n          await Messages.setBlocksById(call.messages.started, [this.buildMessageBlock(text)]);\n          await notifyOnMessageChange({\n            id: call.messages.started\n          });\n        }\n        await VideoConferenceModel.setDataById(call._id, {\n          status: VideoConferenceStatus.DECLINED,\n          endedAt: new Date()\n        });\n        return true;\n      }\n      async diagnoseProvider(uid, rid, providerName) {\n        try {\n          if (providerName) {\n            await this.validateProvider(providerName);\n          } else {\n            await this.getValidatedProvider();\n          }\n        } catch (error) {\n          if (error instanceof Error) {\n            await this.createEphemeralMessage(uid, rid, error.message);\n            return error.message;\n          }\n        }\n      }\n      async getStatistics() {\n        const options = {\n          readPreference: readSecondaryPreferred(db)\n        };\n        return {\n          videoConference: {\n            started: await VideoConferenceModel.countByTypeAndStatus('videoconference', VideoConferenceStatus.STARTED, options),\n            ended: await VideoConferenceModel.countByTypeAndStatus('videoconference', VideoConferenceStatus.ENDED, options)\n          },\n          direct: {\n            calling: await VideoConferenceModel.countByTypeAndStatus('direct', VideoConferenceStatus.CALLING, options),\n            started: await VideoConferenceModel.countByTypeAndStatus('direct', VideoConferenceStatus.STARTED, options),\n            ended: await VideoConferenceModel.countByTypeAndStatus('direct', VideoConferenceStatus.ENDED, options)\n          },\n          livechat: {\n            started: await VideoConferenceModel.countByTypeAndStatus('livechat', VideoConferenceStatus.STARTED, options),\n            ended: await VideoConferenceModel.countByTypeAndStatus('livechat', VideoConferenceStatus.ENDED, options)\n          },\n          settings: {\n            provider: settings.get('VideoConf_Default_Provider'),\n            dms: settings.get('VideoConf_Enable_DMs'),\n            channels: settings.get('VideoConf_Enable_Channels'),\n            groups: settings.get('VideoConf_Enable_Groups'),\n            teams: settings.get('VideoConf_Enable_Teams')\n          }\n        };\n      }\n      async validateAction(action, caller, _ref3) {\n        let {\n          callId,\n          uid,\n          rid\n        } = _ref3;\n        if (!callId || !uid || !rid) {\n          return false;\n        }\n        if (!(await canAccessRoomIdAsync(rid, caller)) || caller !== uid && !(await canAccessRoomIdAsync(rid, uid))) {\n          return false;\n        }\n        const call = await VideoConferenceModel.findOneById(callId, {\n          projection: {\n            status: 1,\n            endedAt: 1,\n            createdBy: 1\n          }\n        });\n        if (!call) {\n          return false;\n        }\n        if (action === 'end') {\n          return true;\n        }\n        if (call.endedAt || call.status > VideoConferenceStatus.STARTED) {\n          // If the caller is still calling about a call that has already ended, notify it\n          if (action === 'call' && caller === call.createdBy._id) {\n            this.notifyUser(call.createdBy._id, 'end', {\n              rid,\n              uid,\n              callId\n            });\n          }\n          return false;\n        }\n        return true;\n      }\n      notifyUser(userId, action, params) {\n        void api.broadcast('user.video-conference', {\n          userId,\n          action,\n          params\n        });\n      }\n      notifyVideoConfUpdate(rid, callId) {\n        void api.broadcast('room.video-conference', {\n          rid,\n          callId\n        });\n      }\n      async endCall(callId) {\n        const call = await this.getUnfiltered(callId);\n        if (!call) {\n          return;\n        }\n        await VideoConferenceModel.setDataById(call._id, {\n          endedAt: new Date(),\n          status: VideoConferenceStatus.ENDED\n        });\n        await this.runVideoConferenceChangedEvent(call._id);\n        this.notifyVideoConfUpdate(call.rid, call._id);\n        if (call.type === 'direct') {\n          return this.endDirectCall(call);\n        }\n      }\n      async expireCall(callId) {\n        const call = await VideoConferenceModel.findOneById(callId, {\n          projection: {\n            messages: 1\n          }\n        });\n        if (!call) {\n          return;\n        }\n        await VideoConferenceModel.setDataById(call._id, {\n          endedAt: new Date(),\n          status: VideoConferenceStatus.EXPIRED\n        });\n      }\n      async endDirectCall(call) {\n        const params = {\n          rid: call.rid,\n          uid: call.createdBy._id,\n          callId: call._id\n        };\n        // Notify the caller that the call was ended by the server\n        this.notifyUser(call.createdBy._id, 'end', params);\n        // If the callee hasn't joined the call yet, notify them that it has already ended\n        const subscriptions = await Subscriptions.findByRoomIdAndNotUserId(call.rid, call.createdBy._id, {\n          projection: {\n            'u._id': 1,\n            '_id': 0\n          }\n        }).toArray();\n        for (const subscription of subscriptions) {\n          // Skip notifying users that already joined the call\n          if (call.users.find(_ref4 => {\n            let {\n              _id\n            } = _ref4;\n            return _id === subscription.u._id;\n          })) {\n            continue;\n          }\n          this.notifyUser(subscription.u._id, 'end', params);\n        }\n      }\n      async getTypeForNewVideoConference(rid, allowRinging) {\n        const room = await Rooms.findOneById(rid, {\n          projection: {\n            t: 1\n          }\n        });\n        if (!room) {\n          throw new Error('invalid-room');\n        }\n        return videoConfTypes.getTypeForRoom(room, allowRinging);\n      }\n      async createMessage(call, createdBy, customBlocks) {\n        const record = {\n          t: 'videoconf',\n          msg: '',\n          groupable: false,\n          blocks: customBlocks || [this.buildVideoConfBlock(call._id)]\n        };\n        const room = await Rooms.findOneById(call.rid);\n        const appId = videoConfProviders.getProviderAppId(call.providerName);\n        const user = createdBy || appId && (await Users.findOneByAppId(appId)) || (await Users.findOneById('rocket.cat'));\n        const message = await sendMessage(user, record, room, false);\n        if (!message) {\n          throw new Error('failed-to-create-message');\n        }\n        return message._id;\n      }\n      async validateProvider(providerName) {\n        const manager = await this.getProviderManager();\n        const configured = await manager.isFullyConfigured(providerName).catch(() => false);\n        if (!configured) {\n          throw new Error(availabilityErrors.NOT_CONFIGURED);\n        }\n      }\n      async getValidatedProvider() {\n        if (!videoConfProviders.hasAnyProvider()) {\n          throw new Error(availabilityErrors.NO_APP);\n        }\n        const providerName = videoConfProviders.getActiveProvider();\n        if (!providerName) {\n          throw new Error(availabilityErrors.NOT_ACTIVE);\n        }\n        await this.validateProvider(providerName);\n        return providerName;\n      }\n      async createEphemeralMessage(uid, rid, i18nKey) {\n        const user = await Users.findOneById(uid, {\n          projection: {\n            language: 1,\n            roles: 1\n          }\n        });\n        const language = (user === null || user === void 0 ? void 0 : user.language) || settings.get('Language') || 'en';\n        const key = user !== null && user !== void 0 && user.roles.includes('admin') ? \"admin-\".concat(i18nKey) : i18nKey;\n        const msg = i18n.t(key, {\n          lng: language\n        });\n        void api.broadcast('notify.ephemeralMessage', uid, rid, {\n          msg\n        });\n      }\n      async createLivechatMessage(call, user, url) {\n        const username = (settings.get('UI_Use_Real_Name') ? user.name : user.username) || user.username || '';\n        const text = i18n.t('video_livechat_started', {\n          username\n        });\n        return this.createMessage(call, user, [this.buildMessageBlock(text), {\n          type: 'actions',\n          appId: 'videoconf-core',\n          blockId: call._id,\n          elements: [{\n            appId: 'videoconf-core',\n            blockId: call._id,\n            actionId: 'joinLivechat',\n            type: 'button',\n            text: {\n              type: 'plain_text',\n              text: i18n.t('Join_call'),\n              emoji: true\n            },\n            url\n          }]\n        }]);\n      }\n      buildVideoConfBlock(callId) {\n        return {\n          type: 'video_conf',\n          blockId: callId,\n          callId,\n          appId: 'videoconf-core'\n        };\n      }\n      buildMessageBlock(text) {\n        return {\n          type: 'section',\n          appId: 'videoconf-core',\n          text: {\n            type: 'mrkdwn',\n            text: \"\".concat(text)\n          }\n        };\n      }\n      async sendPushNotification(call, calleeId) {\n        if (settings.get('Push_enable') !== true || settings.get('VideoConf_Mobile_Ringing') !== true || !(await getUserPreference(calleeId, 'enableMobileRinging'))) {\n          return;\n        }\n        metrics.notificationsSent.inc({\n          notification_type: 'mobile'\n        });\n        await Push.send({\n          from: 'push',\n          badge: 0,\n          sound: 'ringtone.mp3',\n          priority: 10,\n          title: \"@\".concat(call.createdBy.username),\n          text: i18n.t('Video_Conference'),\n          payload: {\n            host: Meteor.absoluteUrl(),\n            rid: call.rid,\n            notificationType: 'videoconf',\n            caller: call.createdBy,\n            avatar: getUserAvatarURL(call.createdBy.username),\n            status: call.status,\n            callId: call._id\n          },\n          userId: calleeId,\n          notId: PushNotification.getNotificationId(\"\".concat(call.rid, \"|\").concat(call._id)),\n          gcm: {\n            style: 'inbox',\n            image: RocketChatAssets.getURL('Assets_favicon_192')\n          },\n          apn: {\n            category: 'VIDEOCONF'\n          }\n        });\n      }\n      async sendAllPushNotifications(callId) {\n        if (settings.get('Push_enable') !== true || settings.get('VideoConf_Mobile_Ringing') !== true) {\n          return;\n        }\n        const call = await VideoConferenceModel.findOneById(callId, {\n          projection: {\n            createdBy: 1,\n            rid: 1,\n            users: 1,\n            status: 1\n          }\n        });\n        if (!call) {\n          return;\n        }\n        const subscriptions = Subscriptions.findByRoomIdAndNotUserId(call.rid, call.createdBy._id, {\n          projection: {\n            'u._id': 1,\n            '_id': 0\n          }\n        });\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(subscriptions), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const subscription = _step.value;\n            {\n              await this.sendPushNotification(call, subscription.u._id);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n      async startDirect(providerName, user, _ref5, extraData) {\n        let {\n          _id: rid,\n          uids\n        } = _ref5;\n        const calleeId = uids === null || uids === void 0 ? void 0 : uids.filter(uid => uid !== user._id).pop();\n        if (!calleeId) {\n          // Are you trying to call yourself?\n          throw new Error('invalid-call-target');\n        }\n        const callId = await VideoConferenceModel.createDirect(_objectSpread(_objectSpread({}, extraData), {}, {\n          rid,\n          createdBy: {\n            _id: user._id,\n            name: user.name,\n            username: user.username\n          },\n          providerName\n        }));\n        await this.runNewVideoConferenceEvent(callId);\n        await this.maybeCreateDiscussion(callId, user);\n        const call = await this.getUnfiltered(callId);\n        if (!call) {\n          throw new Error('failed-to-create-direct-call');\n        }\n        const url = await this.generateNewUrl(call);\n        await VideoConferenceModel.setUrlById(callId, url);\n        const messageId = await this.createMessage(call, user);\n        call.messages.started = messageId;\n        await VideoConferenceModel.setMessageById(callId, 'started', messageId);\n        // After 40 seconds if the status is still \"calling\", we cancel the call automatically.\n        setTimeout(async () => {\n          try {\n            const call = await VideoConferenceModel.findOneById(callId);\n            if (call) {\n              await this.endDirectCall(call);\n              if (call.status !== VideoConferenceStatus.CALLING) {\n                return;\n              }\n              await this.cancel(user._id, callId);\n            }\n          } catch (_unused) {\n            // Ignore errors on this timeout\n          }\n        }, 40000);\n        await this.sendPushNotification(call, calleeId);\n        return {\n          type: 'direct',\n          callId,\n          calleeId\n        };\n      }\n      async notifyUsersOfRoom(rid, uid, action, params) {\n        const subscriptions = Subscriptions.findByRoomIdAndNotUserId(rid, uid, {\n          projection: {\n            'u._id': 1,\n            '_id': 0\n          }\n        });\n        await subscriptions.forEach(subscription => this.notifyUser(subscription.u._id, action, params));\n      }\n      async startGroup(providerName, user, rid, title, extraData) {\n        let useAppUser = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n        const callId = await VideoConferenceModel.createGroup(_objectSpread(_objectSpread({}, extraData), {}, {\n          rid,\n          title,\n          createdBy: {\n            _id: user._id,\n            name: user.name,\n            username: user.username\n          },\n          providerName\n        }));\n        await this.runNewVideoConferenceEvent(callId);\n        await this.maybeCreateDiscussion(callId, user);\n        const call = await this.getUnfiltered(callId);\n        if (!call) {\n          throw new Error('failed-to-create-group-call');\n        }\n        const url = await this.generateNewUrl(call);\n        await VideoConferenceModel.setUrlById(callId, url);\n        call.url = url;\n        const messageId = await this.createMessage(call, useAppUser ? undefined : user);\n        call.messages.started = messageId;\n        await VideoConferenceModel.setMessageById(callId, 'started', messageId);\n        if (call.ringing) {\n          await this.notifyUsersOfRoom(rid, user._id, 'ring', {\n            callId,\n            rid,\n            uid: call.createdBy._id\n          });\n        }\n        return {\n          type: 'videoconference',\n          callId,\n          rid\n        };\n      }\n      async startLivechat(providerName, user, rid) {\n        const callId = await VideoConferenceModel.createLivechat({\n          rid,\n          createdBy: {\n            _id: user._id,\n            name: user.name,\n            username: user.username\n          },\n          providerName\n        });\n        const call = await this.getUnfiltered(callId);\n        if (!call) {\n          throw new Error('failed-to-create-livechat-call');\n        }\n        await this.runNewVideoConferenceEvent(callId);\n        // Livechat conferences do not use discussions\n        const joinUrl = await this.getUrl(call);\n        const messageId = await this.createLivechatMessage(call, user, joinUrl);\n        call.messages.started = messageId;\n        await VideoConferenceModel.setMessageById(callId, 'started', messageId);\n        return {\n          type: 'livechat',\n          callId\n        };\n      }\n      async joinCall(call, user, options) {\n        void callbacks.runAsync('onJoinVideoConference', call._id, user === null || user === void 0 ? void 0 : user._id);\n        await this.runOnUserJoinEvent(call._id, user);\n        return this.getUrl(call, user, options);\n      }\n      async getProviderManager() {\n        var _Apps$self, _Apps$self2, _Apps$self2$getManage;\n        if (!((_Apps$self = Apps.self) !== null && _Apps$self !== void 0 && _Apps$self.isLoaded())) {\n          throw new Error('apps-engine-not-loaded');\n        }\n        const manager = (_Apps$self2 = Apps.self) === null || _Apps$self2 === void 0 ? void 0 : (_Apps$self2$getManage = _Apps$self2.getManager()) === null || _Apps$self2$getManage === void 0 ? void 0 : _Apps$self2$getManage.getVideoConfProviderManager();\n        if (!manager) {\n          throw new Error(availabilityErrors.NO_APP);\n        }\n        return manager;\n      }\n      async getRoomName(rid) {\n        const room = await Rooms.findOneById(rid, {\n          projection: {\n            name: 1,\n            fname: 1\n          }\n        });\n        return (room === null || room === void 0 ? void 0 : room.fname) || (room === null || room === void 0 ? void 0 : room.name) || rid;\n      }\n      async generateNewUrl(call) {\n        if (!videoConfProviders.isProviderAvailable(call.providerName)) {\n          throw new Error('video-conf-provider-unavailable');\n        }\n        const title = isGroupVideoConference(call) ? call.title || (await this.getRoomName(call.rid)) : '';\n        const callData = {\n          _id: call._id,\n          type: call.type,\n          rid: call.rid,\n          createdBy: call.createdBy,\n          title,\n          providerData: call.providerData,\n          discussionRid: call.discussionRid\n        };\n        return (await this.getProviderManager()).generateUrl(call.providerName, callData);\n      }\n      async getCallTitleForUser(call, userId) {\n        if (call.type === 'videoconference' && call.title) {\n          return call.title;\n        }\n        if (userId) {\n          const subscription = await Subscriptions.findOneByRoomIdAndUserId(call.rid, userId, {\n            projection: {\n              fname: 1,\n              name: 1\n            }\n          });\n          if (subscription) {\n            return subscription.fname || subscription.name;\n          }\n        }\n        const room = await Rooms.findOneById(call.rid);\n        return (room === null || room === void 0 ? void 0 : room.fname) || (room === null || room === void 0 ? void 0 : room.name) || 'Rocket.Chat';\n      }\n      async getCallTitle(call) {\n        if (call.type === 'videoconference') {\n          if (call.title) {\n            return call.title;\n          }\n        }\n        const room = await Rooms.findOneById(call.rid);\n        if (room) {\n          if (room.t === 'd') {\n            var _room$usernames;\n            if ((_room$usernames = room.usernames) !== null && _room$usernames !== void 0 && _room$usernames.length) {\n              return room.usernames.join(', ');\n            }\n          } else if (room.fname) {\n            return room.fname;\n          } else if (room.name) {\n            return room.name;\n          }\n        }\n        return 'Rocket.Chat';\n      }\n      async getUrl(call, user) {\n        let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        if (!videoConfProviders.isProviderAvailable(call.providerName)) {\n          throw new Error('video-conf-provider-unavailable');\n        }\n        if (!call.url) {\n          call.url = await this.generateNewUrl(call);\n          await VideoConferenceModel.setUrlById(call._id, call.url);\n        }\n        const callData = {\n          _id: call._id,\n          type: call.type,\n          rid: call.rid,\n          url: call.url,\n          createdBy: call.createdBy,\n          providerData: _objectSpread(_objectSpread({}, call.providerData || {}), {\n            customCallTitle: await this.getCallTitleForUser(call, user === null || user === void 0 ? void 0 : user._id)\n          }),\n          title: await this.getCallTitle(call),\n          discussionRid: call.discussionRid\n        };\n        const userData = user && {\n          _id: user._id,\n          username: user.username,\n          name: user.name\n        };\n        return (await this.getProviderManager()).customizeUrl(call.providerName, callData, userData, options);\n      }\n      async runNewVideoConferenceEvent(callId) {\n        const call = await VideoConferenceModel.findOneById(callId);\n        if (!call) {\n          throw new Error('video-conf-data-not-found');\n        }\n        if (!videoConfProviders.isProviderAvailable(call.providerName)) {\n          throw new Error('video-conf-provider-unavailable');\n        }\n        return (await this.getProviderManager()).onNewVideoConference(call.providerName, call);\n      }\n      async runVideoConferenceChangedEvent(callId) {\n        const call = await VideoConferenceModel.findOneById(callId);\n        if (!call) {\n          throw new Error('video-conf-data-not-found');\n        }\n        if (!videoConfProviders.isProviderAvailable(call.providerName)) {\n          throw new Error('video-conf-provider-unavailable');\n        }\n        return (await this.getProviderManager()).onVideoConferenceChanged(call.providerName, call);\n      }\n      async runOnUserJoinEvent(callId, user) {\n        const call = await VideoConferenceModel.findOneById(callId);\n        if (!call) {\n          throw new Error('video-conf-data-not-found');\n        }\n        if (!videoConfProviders.isProviderAvailable(call.providerName)) {\n          throw new Error('video-conf-provider-unavailable');\n        }\n        return (await this.getProviderManager()).onUserJoin(call.providerName, call, user);\n      }\n      async addUserToCall(call, _ref6) {\n        let {\n          _id,\n          username,\n          name,\n          avatarETag,\n          ts\n        } = _ref6;\n        // If the call has a discussion, ensure the user is subscribed to it;\n        // This is done even if the user has already joined the call before, so they can be added back if they had left the discussion.\n        if (call.discussionRid) {\n          await this.addUserToDiscussion(call.discussionRid, _id);\n        }\n        if (call.users.find(user => user._id === _id)) {\n          return;\n        }\n        await VideoConferenceModel.addUserById(call._id, {\n          _id,\n          username,\n          name,\n          avatarETag,\n          ts\n        });\n        if (call.type === 'direct') {\n          return this.updateDirectCall(call, _id);\n        }\n        this.notifyVideoConfUpdate(call.rid, call._id);\n      }\n      async addAnonymousUser(call) {\n        await VideoConferenceModel.increaseAnonymousCount(call._id);\n      }\n      async updateDirectCall(call, newUserId) {\n        // If it's an user that hasn't joined yet\n        if (call.ringing && !call.users.find(_ref7 => {\n          let {\n            _id\n          } = _ref7;\n          return _id === newUserId;\n        })) {\n          this.notifyUser(call.createdBy._id, 'join', {\n            rid: call.rid,\n            uid: newUserId,\n            callId: call._id\n          });\n          if (newUserId !== call.createdBy._id) {\n            this.notifyUser(newUserId, 'join', {\n              rid: call.rid,\n              uid: newUserId,\n              callId: call._id\n            });\n            // If the callee joined the direct call, then we stopped ringing\n            await VideoConferenceModel.setRingingById(call._id, false);\n          }\n        }\n        if (call.status !== VideoConferenceStatus.CALLING) {\n          return;\n        }\n        await VideoConferenceModel.setStatusById(call._id, VideoConferenceStatus.STARTED);\n        this.notifyVideoConfUpdate(call.rid, call._id);\n        await this.runVideoConferenceChangedEvent(call._id);\n        await this.sendAllPushNotifications(call._id);\n      }\n      isPersistentChatEnabled() {\n        return settings.get('VideoConf_Enable_Persistent_Chat') && settings.get('Discussion_enabled');\n      }\n      async maybeCreateDiscussion(callId, createdBy) {\n        var _videoConfProviders$g;\n        if (!this.isPersistentChatEnabled()) {\n          return;\n        }\n        const call = await VideoConferenceModel.findOneById(callId, {\n          projection: {\n            rid: 1,\n            createdBy: 1,\n            discussionRid: 1,\n            providerName: 1\n          }\n        });\n        if (!call) {\n          throw new Error('invalid-video-conference');\n        }\n        // If there's already a discussion assigned to it, do not create a new one\n        if (call.discussionRid) {\n          return;\n        }\n        // If the call provider does not explicitly support persistent chat, do not create discussions\n        if (!((_videoConfProviders$g = videoConfProviders.getProviderCapabilities(call.providerName)) !== null && _videoConfProviders$g !== void 0 && _videoConfProviders$g.persistentChat)) {\n          return;\n        }\n        const name = settings.get('VideoConf_Persistent_Chat_Discussion_Name') || i18n.t('Conference Call Chat History');\n        const displayName = \"\".concat(name, \" - \").concat(new Date().toISOString().substring(0, 10));\n        await this.createDiscussionForConference(displayName, call, createdBy);\n      }\n      async getRoomForDiscussion(baseRoom) {\n        let childRoomIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        const room = await Rooms.findOneById(baseRoom, {\n          projection: {\n            t: 1,\n            teamId: 1,\n            prid: 1\n          }\n        });\n        if (!room) {\n          throw new Error('invalid-room');\n        }\n        if (room.prid) {\n          if (childRoomIds.includes(room.prid)) {\n            throw new Error('Room has circular reference.');\n          }\n          return this.getRoomForDiscussion(room.prid, [...childRoomIds, room._id]);\n        }\n        return room;\n      }\n      async createDiscussionForConference(name, call, createdBy) {\n        const room = await this.getRoomForDiscussion(call.rid);\n        const type = await roomCoordinator.getRoomDirectives(room.t).getDiscussionType(room);\n        const user = call.createdBy._id === (createdBy === null || createdBy === void 0 ? void 0 : createdBy._id) ? createdBy : await Users.findOneById(call.createdBy._id);\n        if (!user) {\n          throw new Error('invalid-user');\n        }\n        const discussion = await createRoom(type, Random.id(), user, [], false, false, {\n          fname: name,\n          prid: room._id,\n          encrypted: false\n        }, {\n          creator: user._id\n        });\n        return this.assignDiscussionToConference(call._id, discussion._id);\n      }\n      async assignDiscussionToConference(callId, rid) {\n        // Ensures the specified rid is a valid room\n        const room = rid ? await Rooms.findOneById(rid, {\n          projection: {\n            prid: 1\n          }\n        }) : null;\n        if (rid && !room) {\n          throw new Error('invalid-room-id');\n        }\n        const call = await VideoConferenceModel.findOneById(callId, {\n          projection: {\n            users: 1,\n            messages: 1\n          }\n        });\n        if (!call) {\n          return;\n        }\n        if (rid === undefined) {\n          await VideoConferenceModel.unsetDiscussionRidById(callId);\n        } else {\n          await VideoConferenceModel.setDiscussionRidById(callId, rid);\n        }\n        if (room) {\n          await Promise.all(call.users.map(_ref8 => {\n            let {\n              _id\n            } = _ref8;\n            return this.addUserToDiscussion(room._id, _id);\n          }));\n        }\n      }\n      async addUserToDiscussion(rid, uid) {\n        try {\n          await Room.addUserToRoom(rid, {\n            _id: uid\n          }, undefined, {\n            skipAlertSound: true\n          });\n        } catch (error) {\n          // Ignore any errors here so that the subscription doesn't block the user from participating in the conference.\n          logger.error({\n            name: 'Error trying to subscribe user to discussion',\n            error,\n            rid,\n            uid\n          });\n        }\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","_asyncIterator","_excluded","export","VideoConfService","Apps","api","ServiceClassInternal","Room","VideoConferenceStatus","isDirectVideoConference","isGroupVideoConference","isLivechatVideoConference","Logger","Users","VideoConferenceModel","Rooms","Messages","Subscriptions","VideoConference","Random","wrapExceptions","MongoInternals","RocketChatAssets","canAccessRoomIdAsync","createRoom","sendMessage","notifyOnMessageChange","metrics","Push","PushNotification","settings","updateCounter","getUserAvatarURL","getUserPreference","callbacks","availabilityErrors","readSecondaryPreferred","i18n","isRoomCompatibleWithVideoConfRinging","roomCoordinator","videoConfProviders","videoConfTypes","__reifyWaitForDeps__","db","defaultRemoteCollectionDriver","mongo","logger","constructor","arguments","name","create","_ref","useAppUser","length","undefined","type","rid","createdBy","providerName","data","room","findOneById","projection","t","uids","fname","Error","user","startDirect","startLivechat","title","startGroup","_id","catch","e","error","start","caller","_ref2","allowRinging","getValidatedProvider","initialData","getTypeForNewVideoConference","Boolean","join","uid","callId","options","call","endedAt","username","avatarETag","settingsId","joinCall","getInfo","isProviderAvailable","blocks","getProviderManager","getVideoConferenceInfo","blockId","text","concat","url","cancel","status","CALLING","endedBy","setDataById","ringing","DECLINED","Date","runVideoConferenceChangedEvent","notifyVideoConfUpdate","sendAllPushNotifications","get","providerData","getUnfiltered","list","roomId","pagination","cursor","totalCount","findPaginatedByRoomId","total","Promise","all","toArray","offset","count","setProviderData","setProviderDataById","setEndedBy","setEndedById","setEndedAt","setStatus","ENDED","endCall","EXPIRED","expireCall","setStatusById","addUser","userId","ts","addAnonymousUser","addUserToCall","listProviders","getProviderList","listProviderCapabilities","getProviderCapabilities","listCapabilities","capabilities","declineLivechatCall","messages","started","setBlocksById","buildMessageBlock","id","diagnoseProvider","validateProvider","createEphemeralMessage","message","getStatistics","readPreference","videoConference","countByTypeAndStatus","STARTED","ended","direct","calling","livechat","provider","dms","channels","groups","teams","validateAction","action","_ref3","notifyUser","params","broadcast","endDirectCall","subscriptions","findByRoomIdAndNotUserId","subscription","users","find","_ref4","u","getTypeForRoom","createMessage","customBlocks","record","msg","groupable","buildVideoConfBlock","appId","getProviderAppId","findOneByAppId","manager","configured","isFullyConfigured","NOT_CONFIGURED","hasAnyProvider","NO_APP","getActiveProvider","NOT_ACTIVE","i18nKey","language","roles","key","includes","lng","createLivechatMessage","elements","actionId","emoji","sendPushNotification","calleeId","notificationsSent","inc","notification_type","send","from","badge","sound","priority","payload","host","Meteor","absoluteUrl","notificationType","avatar","notId","getNotificationId","gcm","style","image","getURL","apn","category","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","err","return","_ref5","extraData","filter","pop","createDirect","runNewVideoConferenceEvent","maybeCreateDiscussion","generateNewUrl","setUrlById","messageId","setMessageById","setTimeout","_unused","notifyUsersOfRoom","forEach","createGroup","createLivechat","joinUrl","getUrl","runAsync","runOnUserJoinEvent","_Apps$self","_Apps$self2","_Apps$self2$getManage","self","isLoaded","getManager","getVideoConfProviderManager","getRoomName","callData","discussionRid","generateUrl","getCallTitleForUser","findOneByRoomIdAndUserId","getCallTitle","_room$usernames","usernames","customCallTitle","userData","customizeUrl","onNewVideoConference","onVideoConferenceChanged","onUserJoin","_ref6","addUserToDiscussion","addUserById","updateDirectCall","increaseAnonymousCount","newUserId","_ref7","setRingingById","isPersistentChatEnabled","_videoConfProviders$g","persistentChat","displayName","toISOString","substring","createDiscussionForConference","getRoomForDiscussion","baseRoom","childRoomIds","teamId","prid","getRoomDirectives","getDiscussionType","discussion","encrypted","creator","assignDiscussionToConference","unsetDiscussionRidById","setDiscussionRidById","map","_ref8","addUserToRoom","skipAlertSound","__reify_async_result__","_reifyError","async"],"sources":["server/services/video-conference/service.ts"],"sourcesContent":["import { Apps } from '@rocket.chat/apps';\nimport type { VideoConfData, VideoConfDataExtended } from '@rocket.chat/apps-engine/definition/videoConfProviders';\nimport type { AppVideoConfProviderManager } from '@rocket.chat/apps-engine/server/managers';\nimport type { IVideoConfService, VideoConferenceJoinOptions } from '@rocket.chat/core-services';\nimport { api, ServiceClassInternal, Room } from '@rocket.chat/core-services';\nimport type {\n\tIDirectVideoConference,\n\tILivechatVideoConference,\n\tIRoom,\n\tIUser,\n\tVideoConferenceInstructions,\n\tDirectCallInstructions,\n\tConferenceInstructions,\n\tLivechatInstructions,\n\tAtLeast,\n\tIGroupVideoConference,\n\tIVideoConferenceUser,\n\tIMessage,\n\tIStats,\n\tVideoConference,\n\tVideoConferenceCapabilities,\n\tVideoConferenceCreateData,\n\tOptional,\n} from '@rocket.chat/core-typings';\nimport {\n\tVideoConferenceStatus,\n\tisDirectVideoConference,\n\tisGroupVideoConference,\n\tisLivechatVideoConference,\n} from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport { Users, VideoConference as VideoConferenceModel, Rooms, Messages, Subscriptions } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\nimport { wrapExceptions } from '@rocket.chat/tools';\nimport type * as UiKit from '@rocket.chat/ui-kit';\nimport { MongoInternals } from 'meteor/mongo';\n\nimport { RocketChatAssets } from '../../../app/assets/server';\nimport { canAccessRoomIdAsync } from '../../../app/authorization/server/functions/canAccessRoom';\nimport { createRoom } from '../../../app/lib/server/functions/createRoom';\nimport { sendMessage } from '../../../app/lib/server/functions/sendMessage';\nimport { notifyOnMessageChange } from '../../../app/lib/server/lib/notifyListener';\nimport { metrics } from '../../../app/metrics/server/lib/metrics';\nimport { Push } from '../../../app/push/server/push';\nimport PushNotification from '../../../app/push-notifications/server/lib/PushNotification';\nimport { settings } from '../../../app/settings/server';\nimport { updateCounter } from '../../../app/statistics/server/functions/updateStatsCounter';\nimport { getUserAvatarURL } from '../../../app/utils/server/getUserAvatarURL';\nimport { getUserPreference } from '../../../app/utils/server/lib/getUserPreference';\nimport { callbacks } from '../../../lib/callbacks';\nimport { availabilityErrors } from '../../../lib/videoConference/constants';\nimport { readSecondaryPreferred } from '../../database/readSecondaryPreferred';\nimport { i18n } from '../../lib/i18n';\nimport { isRoomCompatibleWithVideoConfRinging } from '../../lib/isRoomCompatibleWithVideoConfRinging';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport { videoConfProviders } from '../../lib/videoConfProviders';\nimport { videoConfTypes } from '../../lib/videoConfTypes';\n\nconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\nconst logger = new Logger('VideoConference');\n\nexport class VideoConfService extends ServiceClassInternal implements IVideoConfService {\n\tprotected name = 'video-conference';\n\n\t// VideoConference.create: Start a video conference using the type and provider specified as arguments\n\tpublic async create(\n\t\t{ type, rid, createdBy, providerName, ...data }: VideoConferenceCreateData,\n\t\tuseAppUser = true,\n\t): Promise<VideoConferenceInstructions> {\n\t\treturn wrapExceptions(async () => {\n\t\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 't' | 'uids' | 'name' | 'fname'>>(rid, {\n\t\t\t\tprojection: { t: 1, uids: 1, name: 1, fname: 1 },\n\t\t\t});\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('invalid-room');\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneById<IUser>(createdBy);\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('failed-to-load-own-data');\n\t\t\t}\n\n\t\t\tif (type === 'direct') {\n\t\t\t\tif (!isRoomCompatibleWithVideoConfRinging(room.t, room.uids)) {\n\t\t\t\t\tthrow new Error('type-and-room-not-compatible');\n\t\t\t\t}\n\n\t\t\t\treturn this.startDirect(providerName, user, room, data);\n\t\t\t}\n\n\t\t\tif (type === 'livechat') {\n\t\t\t\treturn this.startLivechat(providerName, user, rid);\n\t\t\t}\n\n\t\t\tconst title = (data as Partial<IGroupVideoConference>).title || room.fname || room.name || '';\n\t\t\treturn this.startGroup(providerName, user, room._id, title, data, useAppUser);\n\t\t}).catch((e) => {\n\t\t\tlogger.error({\n\t\t\t\tname: 'Error on VideoConf.create',\n\t\t\t\terror: e,\n\t\t\t});\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\t// VideoConference.start: Detect the desired type and provider then start a video conference using them\n\tpublic async start(\n\t\tcaller: IUser['_id'],\n\t\trid: string,\n\t\t{ title, allowRinging }: { title?: string; allowRinging?: boolean },\n\t): Promise<VideoConferenceInstructions> {\n\t\treturn wrapExceptions(async () => {\n\t\t\tconst providerName = await this.getValidatedProvider();\n\t\t\tconst initialData = await this.getTypeForNewVideoConference(rid, Boolean(allowRinging));\n\n\t\t\tconst data = {\n\t\t\t\t...initialData,\n\t\t\t\tcreatedBy: caller,\n\t\t\t\trid,\n\t\t\t\tproviderName,\n\t\t\t} as VideoConferenceCreateData;\n\n\t\t\tif (data.type === 'videoconference') {\n\t\t\t\tdata.title = title;\n\t\t\t}\n\n\t\t\treturn this.create(data, false);\n\t\t}).catch((e) => {\n\t\t\tlogger.error({\n\t\t\t\tname: 'Error on VideoConf.start',\n\t\t\t\terror: e,\n\t\t\t});\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tpublic async join(uid: IUser['_id'] | undefined, callId: VideoConference['_id'], options: VideoConferenceJoinOptions): Promise<string> {\n\t\treturn wrapExceptions(async () => {\n\t\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\t\t\tif (!call || call.endedAt) {\n\t\t\t\tthrow new Error('invalid-call');\n\t\t\t}\n\n\t\t\tlet user: Pick<IUser, '_id' | 'username' | 'name' | 'avatarETag'> | null = null;\n\n\t\t\tif (uid) {\n\t\t\t\tuser = await Users.findOneById<Pick<IUser, '_id' | 'username' | 'name' | 'avatarETag'>>(uid, {\n\t\t\t\t\tprojection: { name: 1, username: 1, avatarETag: 1 },\n\t\t\t\t});\n\t\t\t\tif (!user) {\n\t\t\t\t\tthrow new Error('failed-to-load-own-data');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (call.providerName === 'jitsi') {\n\t\t\t\tupdateCounter({ settingsId: 'Jitsi_Click_To_Join_Count' });\n\t\t\t}\n\n\t\t\treturn this.joinCall(call, user || undefined, options);\n\t\t}).catch((e) => {\n\t\t\tlogger.error({\n\t\t\t\tname: 'Error on VideoConf.join',\n\t\t\t\terror: e,\n\t\t\t});\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tpublic async getInfo(callId: VideoConference['_id'], uid: IUser['_id'] | undefined): Promise<UiKit.LayoutBlock[]> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\t\tif (!call) {\n\t\t\tthrow new Error('invalid-call');\n\t\t}\n\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\tlet user: Pick<Required<IUser>, '_id' | 'username' | 'name' | 'avatarETag'> | null = null;\n\n\t\tif (uid) {\n\t\t\tuser = await Users.findOneById<Pick<Required<IUser>, '_id' | 'username' | 'name' | 'avatarETag'>>(uid, {\n\t\t\t\tprojection: { name: 1, username: 1, avatarETag: 1 },\n\t\t\t});\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('failed-to-load-own-data');\n\t\t\t}\n\t\t}\n\n\t\tconst blocks = await (await this.getProviderManager()).getVideoConferenceInfo(call.providerName, call, user || undefined).catch((e) => {\n\t\t\tthrow new Error(e);\n\t\t});\n\n\t\tif (blocks?.length) {\n\t\t\treturn blocks as UiKit.LayoutBlock[];\n\t\t}\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tblockId: 'videoconf-info',\n\t\t\t\ttype: 'section',\n\t\t\t\ttext: {\n\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\ttext: `**${i18n.t('Video_Conference_Url')}**: ${call.url}`,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tpublic async cancel(uid: IUser['_id'], callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\t\tif (!call || !isDirectVideoConference(call)) {\n\t\t\tthrow new Error('invalid-call');\n\t\t}\n\n\t\tif (call.status !== VideoConferenceStatus.CALLING || call.endedBy || call.endedAt) {\n\t\t\tthrow new Error('invalid-call-status');\n\t\t}\n\n\t\tconst user = await Users.findOneById(uid);\n\t\tif (!user) {\n\t\t\tthrow new Error('failed-to-load-own-data');\n\t\t}\n\n\t\tawait VideoConferenceModel.setDataById(callId, {\n\t\t\tringing: false,\n\t\t\tstatus: VideoConferenceStatus.DECLINED,\n\t\t\tendedAt: new Date(),\n\t\t\tendedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name as string,\n\t\t\t\tusername: user.username as string,\n\t\t\t},\n\t\t});\n\n\t\tawait this.runVideoConferenceChangedEvent(callId);\n\t\tthis.notifyVideoConfUpdate(call.rid, call._id);\n\n\t\tawait this.sendAllPushNotifications(call._id);\n\t}\n\n\tpublic async get(callId: VideoConference['_id']): Promise<Omit<VideoConference, 'providerData'> | null> {\n\t\treturn VideoConferenceModel.findOneById<Omit<VideoConference, 'providerData'>>(callId, { projection: { providerData: 0 } });\n\t}\n\n\tpublic async getUnfiltered(callId: VideoConference['_id']): Promise<VideoConference | null> {\n\t\treturn VideoConferenceModel.findOneById(callId);\n\t}\n\n\tpublic async list(\n\t\troomId: IRoom['_id'],\n\t\tpagination: { offset?: number; count?: number } = {},\n\t): Promise<PaginatedResult<{ data: VideoConference[] }>> {\n\t\tconst { cursor, totalCount } = VideoConferenceModel.findPaginatedByRoomId(roomId, pagination);\n\n\t\tconst [data, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\treturn {\n\t\t\tdata,\n\t\t\toffset: pagination.offset || 0,\n\t\t\tcount: data.length,\n\t\t\ttotal,\n\t\t};\n\t}\n\n\tpublic async setProviderData(callId: VideoConference['_id'], data: VideoConference['providerData'] | undefined): Promise<void> {\n\t\tawait VideoConferenceModel.setProviderDataById(callId, data);\n\t}\n\n\tpublic async setEndedBy(callId: VideoConference['_id'], endedBy: IUser['_id']): Promise<void> {\n\t\tconst user = await Users.findOneById<Required<Pick<IUser, '_id' | 'username' | 'name'>>>(endedBy, {\n\t\t\tprojection: { username: 1, name: 1 },\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new Error('Invalid User');\n\t\t}\n\n\t\tawait VideoConferenceModel.setEndedById(callId, {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t\tname: user.name,\n\t\t});\n\t}\n\n\tpublic async setEndedAt(callId: VideoConference['_id'], endedAt: Date): Promise<void> {\n\t\tawait VideoConferenceModel.setEndedById(callId, undefined, endedAt);\n\t}\n\n\tpublic async setStatus(callId: VideoConference['_id'], status: VideoConference['status']): Promise<void> {\n\t\tswitch (status) {\n\t\t\tcase VideoConferenceStatus.ENDED:\n\t\t\t\treturn this.endCall(callId);\n\t\t\tcase VideoConferenceStatus.EXPIRED:\n\t\t\t\treturn this.expireCall(callId);\n\t\t}\n\n\t\tawait VideoConferenceModel.setStatusById(callId, status);\n\t}\n\n\tpublic async addUser(callId: VideoConference['_id'], userId?: IUser['_id'], ts?: Date): Promise<void> {\n\t\tconst call = await this.get(callId);\n\t\tif (!call) {\n\t\t\tthrow new Error('Invalid video conference');\n\t\t}\n\n\t\tif (!userId) {\n\t\t\tif (call.type === 'videoconference') {\n\t\t\t\treturn this.addAnonymousUser(call as Omit<IGroupVideoConference, 'providerData'>);\n\t\t\t}\n\n\t\t\tthrow new Error('Invalid User');\n\t\t}\n\n\t\tconst user = await Users.findOneById<Required<Pick<IUser, '_id' | 'username' | 'name' | 'avatarETag'>>>(userId, {\n\t\t\tprojection: { username: 1, name: 1, avatarETag: 1 },\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new Error('Invalid User');\n\t\t}\n\n\t\tawait this.addUserToCall(call, {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t\tname: user.name,\n\t\t\tavatarETag: user.avatarETag,\n\t\t\tts: ts || new Date(),\n\t\t});\n\t}\n\n\tpublic async listProviders(): Promise<{ key: string; label: string }[]> {\n\t\treturn videoConfProviders.getProviderList();\n\t}\n\n\tpublic async listProviderCapabilities(providerName: string): Promise<VideoConferenceCapabilities> {\n\t\treturn videoConfProviders.getProviderCapabilities(providerName) || {};\n\t}\n\n\tpublic async listCapabilities(): Promise<{ providerName: string; capabilities: VideoConferenceCapabilities }> {\n\t\tconst providerName = await this.getValidatedProvider();\n\n\t\treturn {\n\t\t\tproviderName,\n\t\t\tcapabilities: videoConfProviders.getProviderCapabilities(providerName) || {},\n\t\t};\n\t}\n\n\tpublic async declineLivechatCall(callId: VideoConference['_id']): Promise<boolean> {\n\t\tconst call = await this.getUnfiltered(callId);\n\n\t\tif (!isLivechatVideoConference(call)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (call.messages.started) {\n\t\t\tconst name =\n\t\t\t\t(settings.get<boolean>('UI_Use_Real_Name') ? call.createdBy.name : call.createdBy.username) || call.createdBy.username || '';\n\t\t\tconst text = i18n.t('video_livechat_missed', { username: name });\n\t\t\tawait Messages.setBlocksById(call.messages.started, [this.buildMessageBlock(text)]);\n\n\t\t\tawait notifyOnMessageChange({\n\t\t\t\tid: call.messages.started,\n\t\t\t});\n\t\t}\n\n\t\tawait VideoConferenceModel.setDataById(call._id, {\n\t\t\tstatus: VideoConferenceStatus.DECLINED,\n\t\t\tendedAt: new Date(),\n\t\t});\n\n\t\treturn true;\n\t}\n\n\tpublic async diagnoseProvider(uid: string, rid: string, providerName?: string): Promise<string | undefined> {\n\t\ttry {\n\t\t\tif (providerName) {\n\t\t\t\tawait this.validateProvider(providerName);\n\t\t\t} else {\n\t\t\t\tawait this.getValidatedProvider();\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tawait this.createEphemeralMessage(uid, rid, error.message);\n\t\t\t\treturn error.message;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async getStatistics(): Promise<IStats['videoConf']> {\n\t\tconst options = {\n\t\t\treadPreference: readSecondaryPreferred(db),\n\t\t};\n\n\t\treturn {\n\t\t\tvideoConference: {\n\t\t\t\tstarted: await VideoConferenceModel.countByTypeAndStatus('videoconference', VideoConferenceStatus.STARTED, options),\n\t\t\t\tended: await VideoConferenceModel.countByTypeAndStatus('videoconference', VideoConferenceStatus.ENDED, options),\n\t\t\t},\n\t\t\tdirect: {\n\t\t\t\tcalling: await VideoConferenceModel.countByTypeAndStatus('direct', VideoConferenceStatus.CALLING, options),\n\t\t\t\tstarted: await VideoConferenceModel.countByTypeAndStatus('direct', VideoConferenceStatus.STARTED, options),\n\t\t\t\tended: await VideoConferenceModel.countByTypeAndStatus('direct', VideoConferenceStatus.ENDED, options),\n\t\t\t},\n\t\t\tlivechat: {\n\t\t\t\tstarted: await VideoConferenceModel.countByTypeAndStatus('livechat', VideoConferenceStatus.STARTED, options),\n\t\t\t\tended: await VideoConferenceModel.countByTypeAndStatus('livechat', VideoConferenceStatus.ENDED, options),\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\tprovider: settings.get<string>('VideoConf_Default_Provider'),\n\t\t\t\tdms: settings.get<boolean>('VideoConf_Enable_DMs'),\n\t\t\t\tchannels: settings.get<boolean>('VideoConf_Enable_Channels'),\n\t\t\t\tgroups: settings.get<boolean>('VideoConf_Enable_Groups'),\n\t\t\t\tteams: settings.get<boolean>('VideoConf_Enable_Teams'),\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic async validateAction(\n\t\taction: string,\n\t\tcaller: IUser['_id'],\n\t\t{ callId, uid, rid }: { callId: VideoConference['_id']; uid: IUser['_id']; rid: IRoom['_id'] },\n\t): Promise<boolean> {\n\t\tif (!callId || !uid || !rid) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!(await canAccessRoomIdAsync(rid, caller)) || (caller !== uid && !(await canAccessRoomIdAsync(rid, uid)))) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst call = await VideoConferenceModel.findOneById<Pick<VideoConference, '_id' | 'status' | 'endedAt' | 'createdBy'>>(callId, {\n\t\t\tprojection: { status: 1, endedAt: 1, createdBy: 1 },\n\t\t});\n\n\t\tif (!call) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (action === 'end') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (call.endedAt || call.status > VideoConferenceStatus.STARTED) {\n\t\t\t// If the caller is still calling about a call that has already ended, notify it\n\t\t\tif (action === 'call' && caller === call.createdBy._id) {\n\t\t\t\tthis.notifyUser(call.createdBy._id, 'end', { rid, uid, callId });\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate notifyUser(\n\t\tuserId: IUser['_id'],\n\t\taction: string,\n\t\tparams: { uid: IUser['_id']; rid: IRoom['_id']; callId: VideoConference['_id'] },\n\t): void {\n\t\tvoid api.broadcast('user.video-conference', { userId, action, params });\n\t}\n\n\tprivate notifyVideoConfUpdate(rid: IRoom['_id'], callId: VideoConference['_id']): void {\n\t\tvoid api.broadcast('room.video-conference', { rid, callId });\n\t}\n\n\tprivate async endCall(callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await this.getUnfiltered(callId);\n\t\tif (!call) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait VideoConferenceModel.setDataById(call._id, { endedAt: new Date(), status: VideoConferenceStatus.ENDED });\n\t\tawait this.runVideoConferenceChangedEvent(call._id);\n\t\tthis.notifyVideoConfUpdate(call.rid, call._id);\n\n\t\tif (call.type === 'direct') {\n\t\t\treturn this.endDirectCall(call);\n\t\t}\n\t}\n\n\tprivate async expireCall(callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById<Pick<VideoConference, '_id' | 'messages'>>(callId, { projection: { messages: 1 } });\n\t\tif (!call) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait VideoConferenceModel.setDataById(call._id, { endedAt: new Date(), status: VideoConferenceStatus.EXPIRED });\n\t}\n\n\tprivate async endDirectCall(call: IDirectVideoConference): Promise<void> {\n\t\tconst params = { rid: call.rid, uid: call.createdBy._id, callId: call._id };\n\n\t\t// Notify the caller that the call was ended by the server\n\t\tthis.notifyUser(call.createdBy._id, 'end', params);\n\n\t\t// If the callee hasn't joined the call yet, notify them that it has already ended\n\t\tconst subscriptions = await Subscriptions.findByRoomIdAndNotUserId(call.rid, call.createdBy._id, {\n\t\t\tprojection: { 'u._id': 1, '_id': 0 },\n\t\t}).toArray();\n\n\t\tfor (const subscription of subscriptions) {\n\t\t\t// Skip notifying users that already joined the call\n\t\t\tif (call.users.find(({ _id }) => _id === subscription.u._id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.notifyUser(subscription.u._id, 'end', params);\n\t\t}\n\t}\n\n\tprivate async getTypeForNewVideoConference(\n\t\trid: IRoom['_id'],\n\t\tallowRinging: boolean,\n\t): Promise<AtLeast<VideoConferenceCreateData, 'type'>> {\n\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 't'>>(rid, {\n\t\t\tprojection: { t: 1 },\n\t\t});\n\n\t\tif (!room) {\n\t\t\tthrow new Error('invalid-room');\n\t\t}\n\n\t\treturn videoConfTypes.getTypeForRoom(room, allowRinging);\n\t}\n\n\tprivate async createMessage(call: VideoConference, createdBy?: IUser, customBlocks?: IMessage['blocks']): Promise<IMessage['_id']> {\n\t\tconst record = {\n\t\t\tt: 'videoconf',\n\t\t\tmsg: '',\n\t\t\tgroupable: false,\n\t\t\tblocks: customBlocks || [this.buildVideoConfBlock(call._id)],\n\t\t} satisfies Partial<IMessage>;\n\n\t\tconst room = await Rooms.findOneById(call.rid);\n\t\tconst appId = videoConfProviders.getProviderAppId(call.providerName);\n\t\tconst user = createdBy || (appId && (await Users.findOneByAppId(appId))) || (await Users.findOneById('rocket.cat'));\n\n\t\tconst message = await sendMessage(user, record, room, false);\n\n\t\tif (!message) {\n\t\t\tthrow new Error('failed-to-create-message');\n\t\t}\n\n\t\treturn message._id;\n\t}\n\n\tprivate async validateProvider(providerName: string): Promise<void> {\n\t\tconst manager = await this.getProviderManager();\n\t\tconst configured = await manager.isFullyConfigured(providerName).catch(() => false);\n\t\tif (!configured) {\n\t\t\tthrow new Error(availabilityErrors.NOT_CONFIGURED);\n\t\t}\n\t}\n\n\tprivate async getValidatedProvider(): Promise<string> {\n\t\tif (!videoConfProviders.hasAnyProvider()) {\n\t\t\tthrow new Error(availabilityErrors.NO_APP);\n\t\t}\n\n\t\tconst providerName = videoConfProviders.getActiveProvider();\n\t\tif (!providerName) {\n\t\t\tthrow new Error(availabilityErrors.NOT_ACTIVE);\n\t\t}\n\n\t\tawait this.validateProvider(providerName);\n\n\t\treturn providerName;\n\t}\n\n\tprivate async createEphemeralMessage(uid: string, rid: string, i18nKey: string): Promise<void> {\n\t\tconst user = await Users.findOneById<Pick<IUser, 'language' | 'roles'>>(uid, { projection: { language: 1, roles: 1 } });\n\t\tconst language = user?.language || settings.get<string>('Language') || 'en';\n\t\tconst key = user?.roles.includes('admin') ? `admin-${i18nKey}` : i18nKey;\n\t\tconst msg = i18n.t(key, {\n\t\t\tlng: language,\n\t\t});\n\n\t\tvoid api.broadcast('notify.ephemeralMessage', uid, rid, {\n\t\t\tmsg,\n\t\t});\n\t}\n\n\tprivate async createLivechatMessage(call: ILivechatVideoConference, user: IUser, url: string): Promise<IMessage['_id']> {\n\t\tconst username = (settings.get<boolean>('UI_Use_Real_Name') ? user.name : user.username) || user.username || '';\n\t\tconst text = i18n.t('video_livechat_started', {\n\t\t\tusername,\n\t\t});\n\n\t\treturn this.createMessage(call, user, [\n\t\t\tthis.buildMessageBlock(text),\n\t\t\t{\n\t\t\t\ttype: 'actions',\n\t\t\t\tappId: 'videoconf-core',\n\t\t\t\tblockId: call._id,\n\t\t\t\telements: [\n\t\t\t\t\t{\n\t\t\t\t\t\tappId: 'videoconf-core',\n\t\t\t\t\t\tblockId: call._id,\n\t\t\t\t\t\tactionId: 'joinLivechat',\n\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\ttext: {\n\t\t\t\t\t\t\ttype: 'plain_text',\n\t\t\t\t\t\t\ttext: i18n.t('Join_call'),\n\t\t\t\t\t\t\temoji: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\turl,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t]);\n\t}\n\n\tprivate buildVideoConfBlock(callId: string): UiKit.MessageSurfaceLayout[number] {\n\t\treturn {\n\t\t\ttype: 'video_conf',\n\t\t\tblockId: callId,\n\t\t\tcallId,\n\t\t\tappId: 'videoconf-core',\n\t\t};\n\t}\n\n\tprivate buildMessageBlock(text: string): UiKit.MessageSurfaceLayout[number] {\n\t\treturn {\n\t\t\ttype: 'section',\n\t\t\tappId: 'videoconf-core',\n\t\t\ttext: {\n\t\t\t\ttype: 'mrkdwn',\n\t\t\t\ttext: `${text}`,\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate async sendPushNotification(\n\t\tcall: AtLeast<IDirectVideoConference, 'createdBy' | 'rid' | '_id' | 'status'>,\n\t\tcalleeId: IUser['_id'],\n\t): Promise<void> {\n\t\tif (\n\t\t\tsettings.get('Push_enable') !== true ||\n\t\t\tsettings.get('VideoConf_Mobile_Ringing') !== true ||\n\t\t\t!(await getUserPreference(calleeId, 'enableMobileRinging'))\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tmetrics.notificationsSent.inc({ notification_type: 'mobile' });\n\t\tawait Push.send({\n\t\t\tfrom: 'push',\n\t\t\tbadge: 0,\n\t\t\tsound: 'ringtone.mp3',\n\t\t\tpriority: 10,\n\t\t\ttitle: `@${call.createdBy.username}`,\n\t\t\ttext: i18n.t('Video_Conference'),\n\t\t\tpayload: {\n\t\t\t\thost: Meteor.absoluteUrl(),\n\t\t\t\trid: call.rid,\n\t\t\t\tnotificationType: 'videoconf',\n\t\t\t\tcaller: call.createdBy,\n\t\t\t\tavatar: getUserAvatarURL(call.createdBy.username),\n\t\t\t\tstatus: call.status,\n\t\t\t\tcallId: call._id,\n\t\t\t},\n\t\t\tuserId: calleeId,\n\t\t\tnotId: PushNotification.getNotificationId(`${call.rid}|${call._id}`),\n\t\t\tgcm: {\n\t\t\t\tstyle: 'inbox',\n\t\t\t\timage: RocketChatAssets.getURL('Assets_favicon_192'),\n\t\t\t},\n\t\t\tapn: {\n\t\t\t\tcategory: 'VIDEOCONF',\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate async sendAllPushNotifications(callId: VideoConference['_id']): Promise<void> {\n\t\tif (settings.get('Push_enable') !== true || settings.get('VideoConf_Mobile_Ringing') !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst call = await VideoConferenceModel.findOneById<Pick<VideoConference, 'createdBy' | 'rid' | '_id' | 'users' | 'status'>>(callId, {\n\t\t\tprojection: { createdBy: 1, rid: 1, users: 1, status: 1 },\n\t\t});\n\n\t\tif (!call) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subscriptions = Subscriptions.findByRoomIdAndNotUserId(call.rid, call.createdBy._id, {\n\t\t\tprojection: { 'u._id': 1, '_id': 0 },\n\t\t});\n\n\t\tfor await (const subscription of subscriptions) {\n\t\t\tawait this.sendPushNotification(call, subscription.u._id);\n\t\t}\n\t}\n\n\tprivate async startDirect(\n\t\tproviderName: string,\n\t\tuser: IUser,\n\t\t{ _id: rid, uids }: AtLeast<IRoom, '_id' | 'uids'>,\n\t\textraData?: Partial<IDirectVideoConference>,\n\t): Promise<DirectCallInstructions> {\n\t\tconst calleeId = uids?.filter((uid) => uid !== user._id).pop();\n\t\tif (!calleeId) {\n\t\t\t// Are you trying to call yourself?\n\t\t\tthrow new Error('invalid-call-target');\n\t\t}\n\n\t\tconst callId = await VideoConferenceModel.createDirect({\n\t\t\t...extraData,\n\t\t\trid,\n\t\t\tcreatedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name as string,\n\t\t\t\tusername: user.username as string,\n\t\t\t},\n\t\t\tproviderName,\n\t\t});\n\n\t\tawait this.runNewVideoConferenceEvent(callId);\n\n\t\tawait this.maybeCreateDiscussion(callId, user);\n\n\t\tconst call = (await this.getUnfiltered(callId)) as IDirectVideoConference | null;\n\t\tif (!call) {\n\t\t\tthrow new Error('failed-to-create-direct-call');\n\t\t}\n\t\tconst url = await this.generateNewUrl(call);\n\t\tawait VideoConferenceModel.setUrlById(callId, url);\n\n\t\tconst messageId = await this.createMessage(call, user);\n\t\tcall.messages.started = messageId;\n\t\tawait VideoConferenceModel.setMessageById(callId, 'started', messageId);\n\n\t\t// After 40 seconds if the status is still \"calling\", we cancel the call automatically.\n\t\tsetTimeout(async () => {\n\t\t\ttry {\n\t\t\t\tconst call = await VideoConferenceModel.findOneById<IDirectVideoConference>(callId);\n\n\t\t\t\tif (call) {\n\t\t\t\t\tawait this.endDirectCall(call);\n\t\t\t\t\tif (call.status !== VideoConferenceStatus.CALLING) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tawait this.cancel(user._id, callId);\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// Ignore errors on this timeout\n\t\t\t}\n\t\t}, 40000);\n\n\t\tawait this.sendPushNotification(call, calleeId);\n\n\t\treturn {\n\t\t\ttype: 'direct',\n\t\t\tcallId,\n\t\t\tcalleeId,\n\t\t};\n\t}\n\n\tprivate async notifyUsersOfRoom(\n\t\trid: IRoom['_id'],\n\t\tuid: IUser['_id'],\n\t\taction: string,\n\t\tparams: { uid: IUser['_id']; rid: IRoom['_id']; callId: VideoConference['_id'] },\n\t): Promise<void> {\n\t\tconst subscriptions = Subscriptions.findByRoomIdAndNotUserId(rid, uid, {\n\t\t\tprojection: { 'u._id': 1, '_id': 0 },\n\t\t});\n\n\t\tawait subscriptions.forEach((subscription) => this.notifyUser(subscription.u._id, action, params));\n\t}\n\n\tprivate async startGroup(\n\t\tproviderName: string,\n\t\tuser: IUser,\n\t\trid: IRoom['_id'],\n\t\ttitle: string,\n\t\textraData?: Partial<IGroupVideoConference>,\n\t\tuseAppUser = true,\n\t): Promise<ConferenceInstructions> {\n\t\tconst callId = await VideoConferenceModel.createGroup({\n\t\t\t...extraData,\n\t\t\trid,\n\t\t\ttitle,\n\t\t\tcreatedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name as string,\n\t\t\t\tusername: user.username as string,\n\t\t\t},\n\t\t\tproviderName,\n\t\t});\n\n\t\tawait this.runNewVideoConferenceEvent(callId);\n\n\t\tawait this.maybeCreateDiscussion(callId, user);\n\n\t\tconst call = (await this.getUnfiltered(callId)) as IGroupVideoConference | null;\n\t\tif (!call) {\n\t\t\tthrow new Error('failed-to-create-group-call');\n\t\t}\n\n\t\tconst url = await this.generateNewUrl(call);\n\t\tawait VideoConferenceModel.setUrlById(callId, url);\n\n\t\tcall.url = url;\n\n\t\tconst messageId = await this.createMessage(call, useAppUser ? undefined : user);\n\t\tcall.messages.started = messageId;\n\t\tawait VideoConferenceModel.setMessageById(callId, 'started', messageId);\n\n\t\tif (call.ringing) {\n\t\t\tawait this.notifyUsersOfRoom(rid, user._id, 'ring', { callId, rid, uid: call.createdBy._id });\n\t\t}\n\n\t\treturn {\n\t\t\ttype: 'videoconference',\n\t\t\tcallId,\n\t\t\trid,\n\t\t};\n\t}\n\n\tprivate async startLivechat(providerName: string, user: IUser, rid: IRoom['_id']): Promise<LivechatInstructions> {\n\t\tconst callId = await VideoConferenceModel.createLivechat({\n\t\t\trid,\n\t\t\tcreatedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tname: user.name as string,\n\t\t\t\tusername: user.username as string,\n\t\t\t},\n\t\t\tproviderName,\n\t\t});\n\n\t\tconst call = (await this.getUnfiltered(callId)) as ILivechatVideoConference | null;\n\t\tif (!call) {\n\t\t\tthrow new Error('failed-to-create-livechat-call');\n\t\t}\n\n\t\tawait this.runNewVideoConferenceEvent(callId);\n\n\t\t// Livechat conferences do not use discussions\n\n\t\tconst joinUrl = await this.getUrl(call);\n\t\tconst messageId = await this.createLivechatMessage(call, user, joinUrl);\n\t\tcall.messages.started = messageId;\n\t\tawait VideoConferenceModel.setMessageById(callId, 'started', messageId);\n\n\t\treturn {\n\t\t\ttype: 'livechat',\n\t\t\tcallId,\n\t\t};\n\t}\n\n\tprivate async joinCall(\n\t\tcall: VideoConference,\n\t\tuser: AtLeast<IUser, '_id' | 'username' | 'name' | 'avatarETag'> | undefined,\n\t\toptions: VideoConferenceJoinOptions,\n\t): Promise<string> {\n\t\tvoid callbacks.runAsync('onJoinVideoConference', call._id, user?._id);\n\n\t\tawait this.runOnUserJoinEvent(call._id, user as IVideoConferenceUser);\n\n\t\treturn this.getUrl(call, user, options);\n\t}\n\n\tprivate async getProviderManager(): Promise<AppVideoConfProviderManager> {\n\t\tif (!Apps.self?.isLoaded()) {\n\t\t\tthrow new Error('apps-engine-not-loaded');\n\t\t}\n\n\t\tconst manager = Apps.self?.getManager()?.getVideoConfProviderManager();\n\t\tif (!manager) {\n\t\t\tthrow new Error(availabilityErrors.NO_APP);\n\t\t}\n\n\t\treturn manager;\n\t}\n\n\tprivate async getRoomName(rid: string): Promise<string> {\n\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 'name' | 'fname'>>(rid, { projection: { name: 1, fname: 1 } });\n\n\t\treturn room?.fname || room?.name || rid;\n\t}\n\n\tprivate async generateNewUrl(call: VideoConference): Promise<string> {\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\tconst title = isGroupVideoConference(call) ? call.title || (await this.getRoomName(call.rid)) : '';\n\t\tconst callData: VideoConfData = {\n\t\t\t_id: call._id,\n\t\t\ttype: call.type,\n\t\t\trid: call.rid,\n\t\t\tcreatedBy: call.createdBy as Required<VideoConference['createdBy']>,\n\t\t\ttitle,\n\t\t\tproviderData: call.providerData,\n\t\t\tdiscussionRid: call.discussionRid,\n\t\t};\n\n\t\treturn (await this.getProviderManager()).generateUrl(call.providerName, callData);\n\t}\n\n\tprivate async getCallTitleForUser(call: VideoConference, userId?: IUser['_id']): Promise<string> {\n\t\tif (call.type === 'videoconference' && call.title) {\n\t\t\treturn call.title;\n\t\t}\n\n\t\tif (userId) {\n\t\t\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(call.rid, userId, { projection: { fname: 1, name: 1 } });\n\t\t\tif (subscription) {\n\t\t\t\treturn subscription.fname || subscription.name;\n\t\t\t}\n\t\t}\n\n\t\tconst room = await Rooms.findOneById(call.rid);\n\t\treturn room?.fname || room?.name || 'Rocket.Chat';\n\t}\n\n\tprivate async getCallTitle(call: VideoConference): Promise<string> {\n\t\tif (call.type === 'videoconference') {\n\t\t\tif (call.title) {\n\t\t\t\treturn call.title;\n\t\t\t}\n\t\t}\n\n\t\tconst room = await Rooms.findOneById(call.rid);\n\t\tif (room) {\n\t\t\tif (room.t === 'd') {\n\t\t\t\tif (room.usernames?.length) {\n\t\t\t\t\treturn room.usernames.join(', ');\n\t\t\t\t}\n\t\t\t} else if (room.fname) {\n\t\t\t\treturn room.fname;\n\t\t\t} else if (room.name) {\n\t\t\t\treturn room.name;\n\t\t\t}\n\t\t}\n\n\t\treturn 'Rocket.Chat';\n\t}\n\n\tprivate async getUrl(\n\t\tcall: VideoConference,\n\t\tuser?: AtLeast<IUser, '_id' | 'username' | 'name'>,\n\t\toptions: VideoConferenceJoinOptions = {},\n\t): Promise<string> {\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\tif (!call.url) {\n\t\t\tcall.url = await this.generateNewUrl(call);\n\t\t\tawait VideoConferenceModel.setUrlById(call._id, call.url);\n\t\t}\n\n\t\tconst callData: VideoConfDataExtended = {\n\t\t\t_id: call._id,\n\t\t\ttype: call.type,\n\t\t\trid: call.rid,\n\t\t\turl: call.url,\n\t\t\tcreatedBy: call.createdBy as Required<VideoConference['createdBy']>,\n\t\t\tproviderData: {\n\t\t\t\t...(call.providerData || {}),\n\t\t\t\t...{ customCallTitle: await this.getCallTitleForUser(call, user?._id) },\n\t\t\t},\n\t\t\ttitle: await this.getCallTitle(call),\n\t\t\tdiscussionRid: call.discussionRid,\n\t\t};\n\n\t\tconst userData = user && {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username as string,\n\t\t\tname: user.name as string,\n\t\t};\n\n\t\treturn (await this.getProviderManager()).customizeUrl(call.providerName, callData, userData, options);\n\t}\n\n\tprivate async runNewVideoConferenceEvent(callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\n\t\tif (!call) {\n\t\t\tthrow new Error('video-conf-data-not-found');\n\t\t}\n\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\treturn (await this.getProviderManager()).onNewVideoConference(call.providerName, call);\n\t}\n\n\tprivate async runVideoConferenceChangedEvent(callId: VideoConference['_id']): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\n\t\tif (!call) {\n\t\t\tthrow new Error('video-conf-data-not-found');\n\t\t}\n\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\treturn (await this.getProviderManager()).onVideoConferenceChanged(call.providerName, call);\n\t}\n\n\tprivate async runOnUserJoinEvent(callId: VideoConference['_id'], user?: IVideoConferenceUser): Promise<void> {\n\t\tconst call = await VideoConferenceModel.findOneById(callId);\n\n\t\tif (!call) {\n\t\t\tthrow new Error('video-conf-data-not-found');\n\t\t}\n\n\t\tif (!videoConfProviders.isProviderAvailable(call.providerName)) {\n\t\t\tthrow new Error('video-conf-provider-unavailable');\n\t\t}\n\n\t\treturn (await this.getProviderManager()).onUserJoin(call.providerName, call, user);\n\t}\n\n\tprivate async addUserToCall(\n\t\tcall: Optional<VideoConference, 'providerData'>,\n\t\t{ _id, username, name, avatarETag, ts }: AtLeast<Required<IUser>, '_id' | 'username' | 'name' | 'avatarETag'> & { ts?: Date },\n\t): Promise<void> {\n\t\t// If the call has a discussion, ensure the user is subscribed to it;\n\t\t// This is done even if the user has already joined the call before, so they can be added back if they had left the discussion.\n\t\tif (call.discussionRid) {\n\t\t\tawait this.addUserToDiscussion(call.discussionRid, _id);\n\t\t}\n\n\t\tif (call.users.find((user) => user._id === _id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait VideoConferenceModel.addUserById(call._id, { _id, username, name, avatarETag, ts });\n\n\t\tif (call.type === 'direct') {\n\t\t\treturn this.updateDirectCall(call as IDirectVideoConference, _id);\n\t\t}\n\n\t\tthis.notifyVideoConfUpdate(call.rid, call._id);\n\t}\n\n\tprivate async addAnonymousUser(call: Optional<IGroupVideoConference, 'providerData'>): Promise<void> {\n\t\tawait VideoConferenceModel.increaseAnonymousCount(call._id);\n\t}\n\n\tprivate async updateDirectCall(call: IDirectVideoConference, newUserId: IUser['_id']): Promise<void> {\n\t\t// If it's an user that hasn't joined yet\n\t\tif (call.ringing && !call.users.find(({ _id }) => _id === newUserId)) {\n\t\t\tthis.notifyUser(call.createdBy._id, 'join', { rid: call.rid, uid: newUserId, callId: call._id });\n\t\t\tif (newUserId !== call.createdBy._id) {\n\t\t\t\tthis.notifyUser(newUserId, 'join', { rid: call.rid, uid: newUserId, callId: call._id });\n\t\t\t\t// If the callee joined the direct call, then we stopped ringing\n\t\t\t\tawait VideoConferenceModel.setRingingById(call._id, false);\n\t\t\t}\n\t\t}\n\n\t\tif (call.status !== VideoConferenceStatus.CALLING) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait VideoConferenceModel.setStatusById(call._id, VideoConferenceStatus.STARTED);\n\t\tthis.notifyVideoConfUpdate(call.rid, call._id);\n\n\t\tawait this.runVideoConferenceChangedEvent(call._id);\n\t\tawait this.sendAllPushNotifications(call._id);\n\t}\n\n\tprivate isPersistentChatEnabled(): boolean {\n\t\treturn settings.get<boolean>('VideoConf_Enable_Persistent_Chat') && settings.get<boolean>('Discussion_enabled');\n\t}\n\n\tprivate async maybeCreateDiscussion(callId: VideoConference['_id'], createdBy?: IUser): Promise<void> {\n\t\tif (!this.isPersistentChatEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst call = await VideoConferenceModel.findOneById(callId, {\n\t\t\tprojection: { rid: 1, createdBy: 1, discussionRid: 1, providerName: 1 },\n\t\t});\n\t\tif (!call) {\n\t\t\tthrow new Error('invalid-video-conference');\n\t\t}\n\n\t\t// If there's already a discussion assigned to it, do not create a new one\n\t\tif (call.discussionRid) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the call provider does not explicitly support persistent chat, do not create discussions\n\t\tif (!videoConfProviders.getProviderCapabilities(call.providerName)?.persistentChat) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst name = settings.get<string>('VideoConf_Persistent_Chat_Discussion_Name') || i18n.t('Conference Call Chat History');\n\t\tconst displayName = `${name} - ${new Date().toISOString().substring(0, 10)}`;\n\n\t\tawait this.createDiscussionForConference(displayName, call, createdBy);\n\t}\n\n\tprivate async getRoomForDiscussion(\n\t\tbaseRoom: IRoom['_id'],\n\t\tchildRoomIds: IRoom['_id'][] = [],\n\t): Promise<Pick<IRoom, '_id' | 't' | 'teamId' | 'prid'>> {\n\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 't' | 'teamId' | 'prid'>>(baseRoom, {\n\t\t\tprojection: { t: 1, teamId: 1, prid: 1 },\n\t\t});\n\t\tif (!room) {\n\t\t\tthrow new Error('invalid-room');\n\t\t}\n\n\t\tif (room.prid) {\n\t\t\tif (childRoomIds.includes(room.prid)) {\n\t\t\t\tthrow new Error('Room has circular reference.');\n\t\t\t}\n\n\t\t\treturn this.getRoomForDiscussion(room.prid, [...childRoomIds, room._id]);\n\t\t}\n\n\t\treturn room;\n\t}\n\n\tprivate async createDiscussionForConference(\n\t\tname: string,\n\t\tcall: AtLeast<VideoConference, '_id' | 'rid' | 'createdBy'>,\n\t\tcreatedBy?: IUser,\n\t): Promise<void> {\n\t\tconst room = await this.getRoomForDiscussion(call.rid);\n\n\t\tconst type = await roomCoordinator.getRoomDirectives(room.t).getDiscussionType(room);\n\t\tconst user = call.createdBy._id === createdBy?._id ? createdBy : await Users.findOneById(call.createdBy._id);\n\t\tif (!user) {\n\t\t\tthrow new Error('invalid-user');\n\t\t}\n\n\t\tconst discussion = await createRoom(\n\t\t\ttype,\n\t\t\tRandom.id(),\n\t\t\tuser,\n\t\t\t[],\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tfname: name,\n\t\t\t\tprid: room._id,\n\t\t\t\tencrypted: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tcreator: user._id,\n\t\t\t},\n\t\t);\n\n\t\treturn this.assignDiscussionToConference(call._id, discussion._id);\n\t}\n\n\tpublic async assignDiscussionToConference(callId: VideoConference['_id'], rid: IRoom['_id'] | undefined): Promise<void> {\n\t\t// Ensures the specified rid is a valid room\n\t\tconst room = rid ? await Rooms.findOneById<Pick<IRoom, '_id' | 'prid'>>(rid, { projection: { prid: 1 } }) : null;\n\t\tif (rid && !room) {\n\t\t\tthrow new Error('invalid-room-id');\n\t\t}\n\n\t\tconst call = await VideoConferenceModel.findOneById(callId, { projection: { users: 1, messages: 1 } });\n\t\tif (!call) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (rid === undefined) {\n\t\t\tawait VideoConferenceModel.unsetDiscussionRidById(callId);\n\t\t} else {\n\t\t\tawait VideoConferenceModel.setDiscussionRidById(callId, rid);\n\t\t}\n\n\t\tif (room) {\n\t\t\tawait Promise.all(call.users.map(({ _id }) => this.addUserToDiscussion(room._id, _id)));\n\t\t}\n\t}\n\n\tprivate async addUserToDiscussion(rid: IRoom['_id'], uid: IUser['_id']): Promise<void> {\n\t\ttry {\n\t\t\tawait Room.addUserToRoom(rid, { _id: uid }, undefined, { skipAlertSound: true });\n\t\t} catch (error) {\n\t\t\t// Ignore any errors here so that the subscription doesn't block the user from participating in the conference.\n\t\t\tlogger.error({\n\t\t\t\tname: 'Error trying to subscribe user to discussion',\n\t\t\t\terror,\n\t\t\t\trid,\n\t\t\t\tuid,\n\t\t\t});\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d938023f48fcc15a2808ac20bec279d8552b61cd"}
