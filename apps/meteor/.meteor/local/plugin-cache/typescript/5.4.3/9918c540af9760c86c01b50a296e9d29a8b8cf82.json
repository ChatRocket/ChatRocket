{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/lib/generators/AuthorizeRequest.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/meteor-accounts-saml/server/lib/generators/AuthorizeRequest.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/lib/generators/AuthorizeRequest.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/lib/generators/AuthorizeRequest.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/lib/generators/AuthorizeRequest.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAC;AACrC,OAAO,EACN,uBAAuB,EACvB,mBAAmB,EACnB,0BAA0B,EAC1B,qBAAqB,EACrB,2BAA2B,GAC3B,MAAM,cAAc,CAAC;AAEtB;;EAEE;AACF,MAAM,OAAO,gBAAgB;IACrB,MAAM,CAAC,QAAQ,CAAC,sBAA+C;QACrE,MAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,CAAC;QAC/D,MAAM,OAAO,GAAG,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,wBAAwB,CAAC,sBAAsB,CAAC,EAAE,IAAI,CAAC,CAAC;QAExG,OAAO;YACN,OAAO;YACP,EAAE,EAAE,IAAI,CAAC,KAAK;SACd,CAAC;IACH,CAAC;IAED,0DAA0D;IAC1D,8HAA8H;IAC9H,oGAAoG;IAC5F,MAAM,CAAC,wBAAwB,CAAC,sBAA+C;QACtF,MAAM,IAAI,GAAG;YACZ,mBAAmB,EAAE,IAAI,CAAC,2BAA2B,CAAC,sBAAsB,CAAC;YAC7E,eAAe,EAAE,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC;SACrE,CAAC;QAEF,MAAM,QAAQ,GAAG,sBAAsB,CAAC,mBAAmB,IAAI,0BAA0B,CAAC;QAC1F,OAAO,SAAS,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAEO,MAAM,CAAC,2BAA2B,CAAC,sBAA+C;QACzF,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,EAAE,CAAC;YAC9C,OAAO,EAAE,CAAC;QACX,CAAC;QAED,OAAO,sBAAsB,CAAC,oBAAoB,IAAI,qBAAqB,CAAC;IAC7E,CAAC;IAEO,MAAM,CAAC,uBAAuB,CAAC,sBAA+C;QACrF,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,CAAC;YAChD,OAAO,EAAE,CAAC;QACX,CAAC;QAED,OAAO,sBAAsB,CAAC,oBAAoB,IAAI,2BAA2B,CAAC;IACnF,CAAC;IAEO,MAAM,CAAC,oBAAoB,CAAC,sBAA+C;QAClF,IAAI,EAAE,GAAG,IAAI,SAAS,CAAC,gBAAgB,EAAE,EAAE,CAAC;QAC5C,MAAM,OAAO,GAAG,SAAS,CAAC,eAAe,EAAE,CAAC;QAE5C,wBAAwB;QACxB,IAAI,sBAAsB,CAAC,EAAE,EAAE,CAAC;YAC/B,EAAE,GAAG,sBAAsB,CAAC,EAAE,CAAC;QAChC,CAAC;QAED,OAAO;YACN,KAAK,EAAE,EAAE;YACT,OAAO;YACP,WAAW,EAAE,sBAAsB,CAAC,WAAW;YAC/C,UAAU,EAAE,sBAAsB,CAAC,UAAU;YAC7C,MAAM,EAAE,sBAAsB,CAAC,MAAM;YACrC,gBAAgB,EAAE,sBAAsB,CAAC,gBAAgB,IAAI,uBAAuB;YACpF,sBAAsB,EAAE,sBAAsB,CAAC,sBAAsB,IAAI,OAAO;YAChF,YAAY,EAAE,sBAAsB,CAAC,kBAAkB,IAAI,mBAAmB;SAC9E,CAAC;IACH,CAAC;CACD","sourcesContent":["import type { IAuthorizeRequestVariables } from '../../definition/IAuthorizeRequestVariables';\nimport type { ISAMLRequest } from '../../definition/ISAMLRequest';\nimport type { IServiceProviderOptions } from '../../definition/IServiceProviderOptions';\nimport { SAMLUtils } from '../Utils';\nimport {\n\tdefaultIdentifierFormat,\n\tdefaultAuthnContext,\n\tdefaultAuthRequestTemplate,\n\tdefaultNameIDTemplate,\n\tdefaultAuthnContextTemplate,\n} from '../constants';\n\n/*\n\tAn Authorize Request is used to show the Identity Provider login form when the user clicks on the Rocket.Chat SAML login button\n*/\nexport class AuthorizeRequest {\n\tpublic static generate(serviceProviderOptions: IServiceProviderOptions): ISAMLRequest {\n\t\tconst data = this.getDataForNewRequest(serviceProviderOptions);\n\t\tconst request = SAMLUtils.fillTemplateData(this.authorizeRequestTemplate(serviceProviderOptions), data);\n\n\t\treturn {\n\t\t\trequest,\n\t\t\tid: data.newId,\n\t\t};\n\t}\n\n\t// The AuthorizeRequest template is split into three parts\n\t// This way, users don't need to change the template when all they want to do is remove the NameID Policy or the AuthnContext.\n\t// This also ensures compatibility with providers that were configured before the templates existed.\n\tprivate static authorizeRequestTemplate(serviceProviderOptions: IServiceProviderOptions): string {\n\t\tconst data = {\n\t\t\tidentifierFormatTag: this.identifierFormatTagTemplate(serviceProviderOptions),\n\t\t\tauthnContextTag: this.authnContextTagTemplate(serviceProviderOptions),\n\t\t};\n\n\t\tconst template = serviceProviderOptions.authRequestTemplate || defaultAuthRequestTemplate;\n\t\treturn SAMLUtils.fillTemplateData(template, data);\n\t}\n\n\tprivate static identifierFormatTagTemplate(serviceProviderOptions: IServiceProviderOptions): string {\n\t\tif (!serviceProviderOptions.identifierFormat) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn serviceProviderOptions.nameIDPolicyTemplate || defaultNameIDTemplate;\n\t}\n\n\tprivate static authnContextTagTemplate(serviceProviderOptions: IServiceProviderOptions): string {\n\t\tif (!serviceProviderOptions.customAuthnContext) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn serviceProviderOptions.authnContextTemplate || defaultAuthnContextTemplate;\n\t}\n\n\tprivate static getDataForNewRequest(serviceProviderOptions: IServiceProviderOptions): IAuthorizeRequestVariables {\n\t\tlet id = `_${SAMLUtils.generateUniqueID()}`;\n\t\tconst instant = SAMLUtils.generateInstant();\n\n\t\t// Post-auth destination\n\t\tif (serviceProviderOptions.id) {\n\t\t\tid = serviceProviderOptions.id;\n\t\t}\n\n\t\treturn {\n\t\t\tnewId: id,\n\t\t\tinstant,\n\t\t\tcallbackUrl: serviceProviderOptions.callbackUrl,\n\t\t\tentryPoint: serviceProviderOptions.entryPoint,\n\t\t\tissuer: serviceProviderOptions.issuer,\n\t\t\tidentifierFormat: serviceProviderOptions.identifierFormat || defaultIdentifierFormat,\n\t\t\tauthnContextComparison: serviceProviderOptions.authnContextComparison || 'exact',\n\t\t\tauthnContext: serviceProviderOptions.customAuthnContext || defaultAuthnContext,\n\t\t};\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/lib/generators/AuthorizeRequest.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-accounts-saml/server/lib/generators/AuthorizeRequest.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/lib/generators/AuthorizeRequest.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/lib/generators/AuthorizeRequest.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAC;AACrC,OAAO,EACN,uBAAuB,EACvB,mBAAmB,EACnB,0BAA0B,EAC1B,qBAAqB,EACrB,2BAA2B,GAC3B,MAAM,cAAc,CAAC;AAEtB;;EAEE;AACF,MAAM,OAAO,gBAAgB;IACrB,MAAM,CAAC,QAAQ,CAAC,sBAA+C;QACrE,MAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,CAAC;QAC/D,MAAM,OAAO,GAAG,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,wBAAwB,CAAC,sBAAsB,CAAC,EAAE,IAAI,CAAC,CAAC;QAExG,OAAO;YACN,OAAO;YACP,EAAE,EAAE,IAAI,CAAC,KAAK;SACd,CAAC;IACH,CAAC;IAED,0DAA0D;IAC1D,8HAA8H;IAC9H,oGAAoG;IAC5F,MAAM,CAAC,wBAAwB,CAAC,sBAA+C;QACtF,MAAM,IAAI,GAAG;YACZ,mBAAmB,EAAE,IAAI,CAAC,2BAA2B,CAAC,sBAAsB,CAAC;YAC7E,eAAe,EAAE,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC;SACrE,CAAC;QAEF,MAAM,QAAQ,GAAG,sBAAsB,CAAC,mBAAmB,IAAI,0BAA0B,CAAC;QAC1F,OAAO,SAAS,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAEO,MAAM,CAAC,2BAA2B,CAAC,sBAA+C;QACzF,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,EAAE,CAAC;YAC9C,OAAO,EAAE,CAAC;QACX,CAAC;QAED,OAAO,sBAAsB,CAAC,oBAAoB,IAAI,qBAAqB,CAAC;IAC7E,CAAC;IAEO,MAAM,CAAC,uBAAuB,CAAC,sBAA+C;QACrF,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,CAAC;YAChD,OAAO,EAAE,CAAC;QACX,CAAC;QAED,OAAO,sBAAsB,CAAC,oBAAoB,IAAI,2BAA2B,CAAC;IACnF,CAAC;IAEO,MAAM,CAAC,oBAAoB,CAAC,sBAA+C;QAClF,IAAI,EAAE,GAAG,IAAI,SAAS,CAAC,gBAAgB,EAAE,EAAE,CAAC;QAC5C,MAAM,OAAO,GAAG,SAAS,CAAC,eAAe,EAAE,CAAC;QAE5C,wBAAwB;QACxB,IAAI,sBAAsB,CAAC,EAAE,EAAE,CAAC;YAC/B,EAAE,GAAG,sBAAsB,CAAC,EAAE,CAAC;QAChC,CAAC;QAED,OAAO;YACN,KAAK,EAAE,EAAE;YACT,OAAO;YACP,WAAW,EAAE,sBAAsB,CAAC,WAAW;YAC/C,UAAU,EAAE,sBAAsB,CAAC,UAAU;YAC7C,MAAM,EAAE,sBAAsB,CAAC,MAAM;YACrC,gBAAgB,EAAE,sBAAsB,CAAC,gBAAgB,IAAI,uBAAuB;YACpF,sBAAsB,EAAE,sBAAsB,CAAC,sBAAsB,IAAI,OAAO;YAChF,YAAY,EAAE,sBAAsB,CAAC,kBAAkB,IAAI,mBAAmB;SAC9E,CAAC;IACH,CAAC;CACD","sourcesContent":["import type { IAuthorizeRequestVariables } from '../../definition/IAuthorizeRequestVariables';\nimport type { ISAMLRequest } from '../../definition/ISAMLRequest';\nimport type { IServiceProviderOptions } from '../../definition/IServiceProviderOptions';\nimport { SAMLUtils } from '../Utils';\nimport {\n\tdefaultIdentifierFormat,\n\tdefaultAuthnContext,\n\tdefaultAuthRequestTemplate,\n\tdefaultNameIDTemplate,\n\tdefaultAuthnContextTemplate,\n} from '../constants';\n\n/*\n\tAn Authorize Request is used to show the Identity Provider login form when the user clicks on the Rocket.Chat SAML login button\n*/\nexport class AuthorizeRequest {\n\tpublic static generate(serviceProviderOptions: IServiceProviderOptions): ISAMLRequest {\n\t\tconst data = this.getDataForNewRequest(serviceProviderOptions);\n\t\tconst request = SAMLUtils.fillTemplateData(this.authorizeRequestTemplate(serviceProviderOptions), data);\n\n\t\treturn {\n\t\t\trequest,\n\t\t\tid: data.newId,\n\t\t};\n\t}\n\n\t// The AuthorizeRequest template is split into three parts\n\t// This way, users don't need to change the template when all they want to do is remove the NameID Policy or the AuthnContext.\n\t// This also ensures compatibility with providers that were configured before the templates existed.\n\tprivate static authorizeRequestTemplate(serviceProviderOptions: IServiceProviderOptions): string {\n\t\tconst data = {\n\t\t\tidentifierFormatTag: this.identifierFormatTagTemplate(serviceProviderOptions),\n\t\t\tauthnContextTag: this.authnContextTagTemplate(serviceProviderOptions),\n\t\t};\n\n\t\tconst template = serviceProviderOptions.authRequestTemplate || defaultAuthRequestTemplate;\n\t\treturn SAMLUtils.fillTemplateData(template, data);\n\t}\n\n\tprivate static identifierFormatTagTemplate(serviceProviderOptions: IServiceProviderOptions): string {\n\t\tif (!serviceProviderOptions.identifierFormat) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn serviceProviderOptions.nameIDPolicyTemplate || defaultNameIDTemplate;\n\t}\n\n\tprivate static authnContextTagTemplate(serviceProviderOptions: IServiceProviderOptions): string {\n\t\tif (!serviceProviderOptions.customAuthnContext) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn serviceProviderOptions.authnContextTemplate || defaultAuthnContextTemplate;\n\t}\n\n\tprivate static getDataForNewRequest(serviceProviderOptions: IServiceProviderOptions): IAuthorizeRequestVariables {\n\t\tlet id = `_${SAMLUtils.generateUniqueID()}`;\n\t\tconst instant = SAMLUtils.generateInstant();\n\n\t\t// Post-auth destination\n\t\tif (serviceProviderOptions.id) {\n\t\t\tid = serviceProviderOptions.id;\n\t\t}\n\n\t\treturn {\n\t\t\tnewId: id,\n\t\t\tinstant,\n\t\t\tcallbackUrl: serviceProviderOptions.callbackUrl,\n\t\t\tentryPoint: serviceProviderOptions.entryPoint,\n\t\t\tissuer: serviceProviderOptions.issuer,\n\t\t\tidentifierFormat: serviceProviderOptions.identifierFormat || defaultIdentifierFormat,\n\t\t\tauthnContextComparison: serviceProviderOptions.authnContextComparison || 'exact',\n\t\t\tauthnContext: serviceProviderOptions.customAuthnContext || defaultAuthnContext,\n\t\t};\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      AuthorizeRequest: () => AuthorizeRequest\n    });\n    let SAMLUtils;\n    module.link(\"../Utils\", {\n      SAMLUtils(v) {\n        SAMLUtils = v;\n      }\n    }, 0);\n    let defaultIdentifierFormat, defaultAuthnContext, defaultAuthRequestTemplate, defaultNameIDTemplate, defaultAuthnContextTemplate;\n    module.link(\"../constants\", {\n      defaultIdentifierFormat(v) {\n        defaultIdentifierFormat = v;\n      },\n      defaultAuthnContext(v) {\n        defaultAuthnContext = v;\n      },\n      defaultAuthRequestTemplate(v) {\n        defaultAuthRequestTemplate = v;\n      },\n      defaultNameIDTemplate(v) {\n        defaultNameIDTemplate = v;\n      },\n      defaultAuthnContextTemplate(v) {\n        defaultAuthnContextTemplate = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AuthorizeRequest {\n      static generate(serviceProviderOptions) {\n        const data = this.getDataForNewRequest(serviceProviderOptions);\n        const request = SAMLUtils.fillTemplateData(this.authorizeRequestTemplate(serviceProviderOptions), data);\n        return {\n          request,\n          id: data.newId\n        };\n      }\n      // The AuthorizeRequest template is split into three parts\n      // This way, users don't need to change the template when all they want to do is remove the NameID Policy or the AuthnContext.\n      // This also ensures compatibility with providers that were configured before the templates existed.\n      static authorizeRequestTemplate(serviceProviderOptions) {\n        const data = {\n          identifierFormatTag: this.identifierFormatTagTemplate(serviceProviderOptions),\n          authnContextTag: this.authnContextTagTemplate(serviceProviderOptions)\n        };\n        const template = serviceProviderOptions.authRequestTemplate || defaultAuthRequestTemplate;\n        return SAMLUtils.fillTemplateData(template, data);\n      }\n      static identifierFormatTagTemplate(serviceProviderOptions) {\n        if (!serviceProviderOptions.identifierFormat) {\n          return '';\n        }\n        return serviceProviderOptions.nameIDPolicyTemplate || defaultNameIDTemplate;\n      }\n      static authnContextTagTemplate(serviceProviderOptions) {\n        if (!serviceProviderOptions.customAuthnContext) {\n          return '';\n        }\n        return serviceProviderOptions.authnContextTemplate || defaultAuthnContextTemplate;\n      }\n      static getDataForNewRequest(serviceProviderOptions) {\n        let id = \"_\".concat(SAMLUtils.generateUniqueID());\n        const instant = SAMLUtils.generateInstant();\n        // Post-auth destination\n        if (serviceProviderOptions.id) {\n          id = serviceProviderOptions.id;\n        }\n        return {\n          newId: id,\n          instant,\n          callbackUrl: serviceProviderOptions.callbackUrl,\n          entryPoint: serviceProviderOptions.entryPoint,\n          issuer: serviceProviderOptions.issuer,\n          identifierFormat: serviceProviderOptions.identifierFormat || defaultIdentifierFormat,\n          authnContextComparison: serviceProviderOptions.authnContextComparison || 'exact',\n          authnContext: serviceProviderOptions.customAuthnContext || defaultAuthnContext\n        };\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","AuthorizeRequest","SAMLUtils","link","v","defaultIdentifierFormat","defaultAuthnContext","defaultAuthRequestTemplate","defaultNameIDTemplate","defaultAuthnContextTemplate","__reifyWaitForDeps__","generate","serviceProviderOptions","data","getDataForNewRequest","request","fillTemplateData","authorizeRequestTemplate","id","newId","identifierFormatTag","identifierFormatTagTemplate","authnContextTag","authnContextTagTemplate","template","authRequestTemplate","identifierFormat","nameIDPolicyTemplate","customAuthnContext","authnContextTemplate","concat","generateUniqueID","instant","generateInstant","callbackUrl","entryPoint","issuer","authnContextComparison","authnContext","__reify_async_result__","_reifyError","self","async"],"sources":["app/meteor-accounts-saml/server/lib/generators/AuthorizeRequest.ts"],"sourcesContent":["import type { IAuthorizeRequestVariables } from '../../definition/IAuthorizeRequestVariables';\nimport type { ISAMLRequest } from '../../definition/ISAMLRequest';\nimport type { IServiceProviderOptions } from '../../definition/IServiceProviderOptions';\nimport { SAMLUtils } from '../Utils';\nimport {\n\tdefaultIdentifierFormat,\n\tdefaultAuthnContext,\n\tdefaultAuthRequestTemplate,\n\tdefaultNameIDTemplate,\n\tdefaultAuthnContextTemplate,\n} from '../constants';\n\n/*\n\tAn Authorize Request is used to show the Identity Provider login form when the user clicks on the Rocket.Chat SAML login button\n*/\nexport class AuthorizeRequest {\n\tpublic static generate(serviceProviderOptions: IServiceProviderOptions): ISAMLRequest {\n\t\tconst data = this.getDataForNewRequest(serviceProviderOptions);\n\t\tconst request = SAMLUtils.fillTemplateData(this.authorizeRequestTemplate(serviceProviderOptions), data);\n\n\t\treturn {\n\t\t\trequest,\n\t\t\tid: data.newId,\n\t\t};\n\t}\n\n\t// The AuthorizeRequest template is split into three parts\n\t// This way, users don't need to change the template when all they want to do is remove the NameID Policy or the AuthnContext.\n\t// This also ensures compatibility with providers that were configured before the templates existed.\n\tprivate static authorizeRequestTemplate(serviceProviderOptions: IServiceProviderOptions): string {\n\t\tconst data = {\n\t\t\tidentifierFormatTag: this.identifierFormatTagTemplate(serviceProviderOptions),\n\t\t\tauthnContextTag: this.authnContextTagTemplate(serviceProviderOptions),\n\t\t};\n\n\t\tconst template = serviceProviderOptions.authRequestTemplate || defaultAuthRequestTemplate;\n\t\treturn SAMLUtils.fillTemplateData(template, data);\n\t}\n\n\tprivate static identifierFormatTagTemplate(serviceProviderOptions: IServiceProviderOptions): string {\n\t\tif (!serviceProviderOptions.identifierFormat) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn serviceProviderOptions.nameIDPolicyTemplate || defaultNameIDTemplate;\n\t}\n\n\tprivate static authnContextTagTemplate(serviceProviderOptions: IServiceProviderOptions): string {\n\t\tif (!serviceProviderOptions.customAuthnContext) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn serviceProviderOptions.authnContextTemplate || defaultAuthnContextTemplate;\n\t}\n\n\tprivate static getDataForNewRequest(serviceProviderOptions: IServiceProviderOptions): IAuthorizeRequestVariables {\n\t\tlet id = `_${SAMLUtils.generateUniqueID()}`;\n\t\tconst instant = SAMLUtils.generateInstant();\n\n\t\t// Post-auth destination\n\t\tif (serviceProviderOptions.id) {\n\t\t\tid = serviceProviderOptions.id;\n\t\t}\n\n\t\treturn {\n\t\t\tnewId: id,\n\t\t\tinstant,\n\t\t\tcallbackUrl: serviceProviderOptions.callbackUrl,\n\t\t\tentryPoint: serviceProviderOptions.entryPoint,\n\t\t\tissuer: serviceProviderOptions.issuer,\n\t\t\tidentifierFormat: serviceProviderOptions.identifierFormat || defaultIdentifierFormat,\n\t\t\tauthnContextComparison: serviceProviderOptions.authnContextComparison || 'exact',\n\t\t\tauthnContext: serviceProviderOptions.customAuthnContext || defaultAuthnContext,\n\t\t};\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9918c540af9760c86c01b50a296e9d29a8b8cf82"}
