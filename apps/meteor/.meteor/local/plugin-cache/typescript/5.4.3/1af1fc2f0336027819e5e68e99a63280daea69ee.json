{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Analytics.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/Analytics.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Analytics.ts","inputSourceMap":{"version":3,"file":"server/models/raw/Analytics.ts","sourceRoot":"","sources":["server/models/raw/Analytics.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAnalytic, IRoom } from '@rocket.chat/core-typings';\nimport type { IAnalyticsModel, IChannelsWithNumberOfMessagesBetweenDate } from '@rocket.chat/model-typings';\nimport { Random } from '@rocket.chat/random';\nimport type { AggregationCursor, FindCursor, Db, IndexDescription, FindOptions, UpdateResult, Document, Collection } from 'mongodb';\n\nimport { readSecondaryPreferred } from '../../database/readSecondaryPreferred';\nimport { BaseRaw } from './BaseRaw';\n\nexport class AnalyticsRaw extends BaseRaw<IAnalytic> implements IAnalyticsModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'analytics', undefined, {\n\t\t\tcollection: { readPreference: readSecondaryPreferred(db) },\n\t\t});\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { date: 1 } },\n\t\t\t{ key: { 'room._id': 1, 'date': 1 }, unique: true, partialFilterExpression: { type: 'rooms' } },\n\t\t\t{ key: { 'room.t': 1, 'date': 1 }, partialFilterExpression: { type: 'messages' } },\n\t\t];\n\t}\n\n\tsaveMessageSent({ room, date }: { room: IRoom; date: IAnalytic['date'] }): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany(\n\t\t\t{ date, 'room._id': room._id, 'type': 'messages' },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\troom: {\n\t\t\t\t\t\t_id: room._id,\n\t\t\t\t\t\tname: room.fname || room.name,\n\t\t\t\t\t\tt: room.t,\n\t\t\t\t\t\tusernames: room.usernames || [],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\tdate,\n\t\t\t\t\ttype: 'messages' as const,\n\t\t\t\t},\n\t\t\t\t$inc: { messages: 1 },\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\n\tsaveUserData({ date }: { date: IAnalytic['date'] }): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany(\n\t\t\t{ date, type: 'users' },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\tdate,\n\t\t\t\t\ttype: 'users' as const,\n\t\t\t\t},\n\t\t\t\t$inc: { users: 1 },\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\n\tsaveMessageDeleted({ room, date }: { room: { _id: string }; date: IAnalytic['date'] }): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany(\n\t\t\t{ date, 'room._id': room._id },\n\t\t\t{\n\t\t\t\t$inc: { messages: -1 },\n\t\t\t},\n\t\t);\n\t}\n\n\tgetMessagesSentTotalByDate({\n\t\tstart,\n\t\tend,\n\t\toptions = {},\n\t}: {\n\t\tstart: IAnalytic['date'];\n\t\tend: IAnalytic['date'];\n\t\toptions?: { sort?: FindOptions<IAnalytic>['sort']; count?: number };\n\t}): AggregationCursor<{\n\t\t_id: IAnalytic['date'];\n\t\tmessages: number;\n\t}> {\n\t\treturn this.col.aggregate<{\n\t\t\t_id: IAnalytic['date'];\n\t\t\tmessages: number;\n\t\t}>(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\ttype: 'messages',\n\t\t\t\t\t\tdate: { $gte: start, $lte: end },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: '$date',\n\t\t\t\t\t\tmessages: { $sum: '$messages' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t...(options.sort ? [{ $sort: options.sort }] : []),\n\t\t\t\t...(options.count ? [{ $limit: options.count }] : []),\n\t\t\t],\n\t\t\t{ readPreference: readSecondaryPreferred() },\n\t\t);\n\t}\n\n\tgetMessagesOrigin({ start, end }: { start: IAnalytic['date']; end: IAnalytic['date'] }): AggregationCursor<{\n\t\tt: IRoom['t'];\n\t\tmessages: number;\n\t}> {\n\t\tconst params = [\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\ttype: 'messages',\n\t\t\t\t\tdate: { $gte: start, $lte: end },\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$group: {\n\t\t\t\t\t_id: { t: '$room.t' },\n\t\t\t\t\tmessages: { $sum: '$messages' },\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$project: {\n\t\t\t\t\t_id: 0,\n\t\t\t\t\tt: '$_id.t',\n\t\t\t\t\tmessages: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t\treturn this.col.aggregate(params, { readPreference: readSecondaryPreferred() });\n\t}\n\n\tgetMostPopularChannelsByMessagesSentQuantity({\n\t\tstart,\n\t\tend,\n\t\toptions = {},\n\t}: {\n\t\tstart: IAnalytic['date'];\n\t\tend: IAnalytic['date'];\n\t\toptions?: { sort?: FindOptions<IAnalytic>['sort']; count?: number };\n\t}): AggregationCursor<{\n\t\tt: IRoom['t'];\n\t\tname: string;\n\t\tmessages: number;\n\t\tusernames: string[];\n\t}> {\n\t\treturn this.col.aggregate(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\ttype: 'messages',\n\t\t\t\t\t\tdate: { $gte: start, $lte: end },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: { t: '$room.t', name: '$room.name', usernames: '$room.usernames' },\n\t\t\t\t\t\tmessages: { $sum: '$messages' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$project: {\n\t\t\t\t\t\t_id: 0,\n\t\t\t\t\t\tt: '$_id.t',\n\t\t\t\t\t\tname: '$_id.name',\n\t\t\t\t\t\tusernames: '$_id.usernames',\n\t\t\t\t\t\tmessages: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t...(options.sort ? [{ $sort: options.sort }] : []),\n\t\t\t\t...(options.count ? [{ $limit: options.count }] : []),\n\t\t\t],\n\t\t\t{ readPreference: readSecondaryPreferred() },\n\t\t);\n\t}\n\n\tgetTotalOfRegisteredUsersByDate({\n\t\tstart,\n\t\tend,\n\t\toptions = {},\n\t}: {\n\t\tstart: IAnalytic['date'];\n\t\tend: IAnalytic['date'];\n\t\toptions?: { sort?: FindOptions<IAnalytic>['sort']; count?: number };\n\t}): AggregationCursor<{\n\t\t_id: IAnalytic['date'];\n\t\tusers: number;\n\t}> {\n\t\treturn this.col.aggregate<{\n\t\t\t_id: IAnalytic['date'];\n\t\t\tusers: number;\n\t\t}>(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\ttype: 'users',\n\t\t\t\t\t\tdate: { $gte: start, $lte: end },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: '$date',\n\t\t\t\t\t\tusers: { $sum: '$users' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t...(options.sort ? [{ $sort: options.sort }] : []),\n\t\t\t\t...(options.count ? [{ $limit: options.count }] : []),\n\t\t\t],\n\t\t\t{ readPreference: readSecondaryPreferred() },\n\t\t);\n\t}\n\n\tfindByTypeBeforeDate({ type, date }: { type: IAnalytic['type']; date: IAnalytic['date'] }): FindCursor<IAnalytic> {\n\t\treturn this.find({ type, date: { $lte: date } });\n\t}\n\n\tgetRoomsWithNumberOfMessagesBetweenDateQuery({\n\t\ttypes,\n\t\tstart,\n\t\tend,\n\t\tstartOfLastWeek,\n\t\tendOfLastWeek,\n\t\toptions,\n\t}: {\n\t\ttypes: Array<IRoom['t']>;\n\t\tstart: number;\n\t\tend: number;\n\t\tstartOfLastWeek: number;\n\t\tendOfLastWeek: number;\n\t\toptions?: any;\n\t}) {\n\t\tconst typeAndDateMatch = {\n\t\t\t$match: {\n\t\t\t\t'type': 'messages',\n\t\t\t\t'room.t': { $in: types },\n\t\t\t\t'date': { $gte: startOfLastWeek, $lte: end },\n\t\t\t},\n\t\t};\n\t\tconst roomsGroup = {\n\t\t\t$group: {\n\t\t\t\t_id: '$room._id',\n\t\t\t\troom: { $first: '$room' },\n\t\t\t\tmessages: { $sum: { $cond: [{ $gte: ['$date', start] }, '$messages', 0] } },\n\t\t\t\tlastWeekMessages: { $sum: { $cond: [{ $lte: ['$date', endOfLastWeek] }, '$messages', 0] } },\n\t\t\t},\n\t\t};\n\t\tconst lookup = {\n\t\t\t$lookup: {\n\t\t\t\tfrom: 'rocketchat_room',\n\t\t\t\tlocalField: '_id',\n\t\t\t\tforeignField: '_id',\n\t\t\t\tas: 'room',\n\t\t\t},\n\t\t};\n\t\tconst roomsUnwind = {\n\t\t\t$unwind: {\n\t\t\t\tpath: '$room',\n\t\t\t\tpreserveNullAndEmptyArrays: false,\n\t\t\t},\n\t\t};\n\t\tconst project = {\n\t\t\t$project: {\n\t\t\t\t_id: 0,\n\t\t\t\troom: {\n\t\t\t\t\t_id: '$room._id',\n\t\t\t\t\tname: { $ifNull: ['$room.name', '$room.fname'] },\n\t\t\t\t\tts: '$room.ts',\n\t\t\t\t\tt: '$room.t',\n\t\t\t\t\t_updatedAt: '$room._updatedAt',\n\t\t\t\t\tusernames: '$room.usernames',\n\t\t\t\t},\n\t\t\t\tmessages: '$messages',\n\t\t\t\tlastWeekMessages: '$lastWeekMessages',\n\t\t\t\tdiffFromLastWeek: { $subtract: ['$messages', '$lastWeekMessages'] },\n\t\t\t},\n\t\t};\n\n\t\tconst sort = { $sort: options?.sort || { messages: -1 } };\n\t\tconst sortAndPaginationParams: Exclude<Parameters<Collection<IRoom>['aggregate']>[0], undefined> = [sort];\n\t\tif (options?.offset) {\n\t\t\tsortAndPaginationParams.push({ $skip: options.offset });\n\t\t}\n\n\t\tif (options?.count) {\n\t\t\tsortAndPaginationParams.push({ $limit: options.count });\n\t\t}\n\t\tconst facet = {\n\t\t\t$facet: {\n\t\t\t\tchannels: [...sortAndPaginationParams],\n\t\t\t\ttotal: [{ $count: 'total' }],\n\t\t\t},\n\t\t};\n\t\tconst totalUnwind = { $unwind: '$total' };\n\t\tconst totalProject = {\n\t\t\t$project: {\n\t\t\t\tchannels: '$channels',\n\t\t\t\ttotal: '$total.total',\n\t\t\t},\n\t\t};\n\n\t\tconst params: Exclude<Parameters<Collection<IRoom>['aggregate']>[0], undefined> = [\n\t\t\ttypeAndDateMatch,\n\t\t\troomsGroup,\n\t\t\tlookup,\n\t\t\troomsUnwind,\n\t\t\tproject,\n\t\t\tfacet,\n\t\t\ttotalUnwind,\n\t\t\ttotalProject,\n\t\t];\n\n\t\treturn params;\n\t}\n\n\tfindRoomsByTypesWithNumberOfMessagesBetweenDate(params: {\n\t\ttypes: Array<IRoom['t']>;\n\t\tstart: number;\n\t\tend: number;\n\t\tstartOfLastWeek: number;\n\t\tendOfLastWeek: number;\n\t\toptions?: any;\n\t}): AggregationCursor<{ channels: IChannelsWithNumberOfMessagesBetweenDate[]; total: number }> {\n\t\tconst aggregationParams = this.getRoomsWithNumberOfMessagesBetweenDateQuery(params);\n\t\treturn this.col.aggregate<{ channels: IChannelsWithNumberOfMessagesBetweenDate[]; total: number }>(aggregationParams, {\n\t\t\tallowDiskUse: true,\n\t\t\treadPreference: readSecondaryPreferred(),\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Analytics.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/Analytics.ts","inputSourceMap":{"version":3,"file":"server/models/raw/Analytics.ts","sourceRoot":"","sources":["server/models/raw/Analytics.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAnalytic, IRoom } from '@rocket.chat/core-typings';\nimport type { IAnalyticsModel, IChannelsWithNumberOfMessagesBetweenDate } from '@rocket.chat/model-typings';\nimport { Random } from '@rocket.chat/random';\nimport type { AggregationCursor, FindCursor, Db, IndexDescription, FindOptions, UpdateResult, Document, Collection } from 'mongodb';\n\nimport { readSecondaryPreferred } from '../../database/readSecondaryPreferred';\nimport { BaseRaw } from './BaseRaw';\n\nexport class AnalyticsRaw extends BaseRaw<IAnalytic> implements IAnalyticsModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'analytics', undefined, {\n\t\t\tcollection: { readPreference: readSecondaryPreferred(db) },\n\t\t});\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { date: 1 } },\n\t\t\t{ key: { 'room._id': 1, 'date': 1 }, unique: true, partialFilterExpression: { type: 'rooms' } },\n\t\t\t{ key: { 'room.t': 1, 'date': 1 }, partialFilterExpression: { type: 'messages' } },\n\t\t];\n\t}\n\n\tsaveMessageSent({ room, date }: { room: IRoom; date: IAnalytic['date'] }): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany(\n\t\t\t{ date, 'room._id': room._id, 'type': 'messages' },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\troom: {\n\t\t\t\t\t\t_id: room._id,\n\t\t\t\t\t\tname: room.fname || room.name,\n\t\t\t\t\t\tt: room.t,\n\t\t\t\t\t\tusernames: room.usernames || [],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\tdate,\n\t\t\t\t\ttype: 'messages' as const,\n\t\t\t\t},\n\t\t\t\t$inc: { messages: 1 },\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\n\tsaveUserData({ date }: { date: IAnalytic['date'] }): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany(\n\t\t\t{ date, type: 'users' },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\tdate,\n\t\t\t\t\ttype: 'users' as const,\n\t\t\t\t},\n\t\t\t\t$inc: { users: 1 },\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\n\tsaveMessageDeleted({ room, date }: { room: { _id: string }; date: IAnalytic['date'] }): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany(\n\t\t\t{ date, 'room._id': room._id },\n\t\t\t{\n\t\t\t\t$inc: { messages: -1 },\n\t\t\t},\n\t\t);\n\t}\n\n\tgetMessagesSentTotalByDate({\n\t\tstart,\n\t\tend,\n\t\toptions = {},\n\t}: {\n\t\tstart: IAnalytic['date'];\n\t\tend: IAnalytic['date'];\n\t\toptions?: { sort?: FindOptions<IAnalytic>['sort']; count?: number };\n\t}): AggregationCursor<{\n\t\t_id: IAnalytic['date'];\n\t\tmessages: number;\n\t}> {\n\t\treturn this.col.aggregate<{\n\t\t\t_id: IAnalytic['date'];\n\t\t\tmessages: number;\n\t\t}>(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\ttype: 'messages',\n\t\t\t\t\t\tdate: { $gte: start, $lte: end },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: '$date',\n\t\t\t\t\t\tmessages: { $sum: '$messages' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t...(options.sort ? [{ $sort: options.sort }] : []),\n\t\t\t\t...(options.count ? [{ $limit: options.count }] : []),\n\t\t\t],\n\t\t\t{ readPreference: readSecondaryPreferred() },\n\t\t);\n\t}\n\n\tgetMessagesOrigin({ start, end }: { start: IAnalytic['date']; end: IAnalytic['date'] }): AggregationCursor<{\n\t\tt: IRoom['t'];\n\t\tmessages: number;\n\t}> {\n\t\tconst params = [\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\ttype: 'messages',\n\t\t\t\t\tdate: { $gte: start, $lte: end },\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$group: {\n\t\t\t\t\t_id: { t: '$room.t' },\n\t\t\t\t\tmessages: { $sum: '$messages' },\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$project: {\n\t\t\t\t\t_id: 0,\n\t\t\t\t\tt: '$_id.t',\n\t\t\t\t\tmessages: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t\treturn this.col.aggregate(params, { readPreference: readSecondaryPreferred() });\n\t}\n\n\tgetMostPopularChannelsByMessagesSentQuantity({\n\t\tstart,\n\t\tend,\n\t\toptions = {},\n\t}: {\n\t\tstart: IAnalytic['date'];\n\t\tend: IAnalytic['date'];\n\t\toptions?: { sort?: FindOptions<IAnalytic>['sort']; count?: number };\n\t}): AggregationCursor<{\n\t\tt: IRoom['t'];\n\t\tname: string;\n\t\tmessages: number;\n\t\tusernames: string[];\n\t}> {\n\t\treturn this.col.aggregate(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\ttype: 'messages',\n\t\t\t\t\t\tdate: { $gte: start, $lte: end },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: { t: '$room.t', name: '$room.name', usernames: '$room.usernames' },\n\t\t\t\t\t\tmessages: { $sum: '$messages' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$project: {\n\t\t\t\t\t\t_id: 0,\n\t\t\t\t\t\tt: '$_id.t',\n\t\t\t\t\t\tname: '$_id.name',\n\t\t\t\t\t\tusernames: '$_id.usernames',\n\t\t\t\t\t\tmessages: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t...(options.sort ? [{ $sort: options.sort }] : []),\n\t\t\t\t...(options.count ? [{ $limit: options.count }] : []),\n\t\t\t],\n\t\t\t{ readPreference: readSecondaryPreferred() },\n\t\t);\n\t}\n\n\tgetTotalOfRegisteredUsersByDate({\n\t\tstart,\n\t\tend,\n\t\toptions = {},\n\t}: {\n\t\tstart: IAnalytic['date'];\n\t\tend: IAnalytic['date'];\n\t\toptions?: { sort?: FindOptions<IAnalytic>['sort']; count?: number };\n\t}): AggregationCursor<{\n\t\t_id: IAnalytic['date'];\n\t\tusers: number;\n\t}> {\n\t\treturn this.col.aggregate<{\n\t\t\t_id: IAnalytic['date'];\n\t\t\tusers: number;\n\t\t}>(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\ttype: 'users',\n\t\t\t\t\t\tdate: { $gte: start, $lte: end },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: '$date',\n\t\t\t\t\t\tusers: { $sum: '$users' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t...(options.sort ? [{ $sort: options.sort }] : []),\n\t\t\t\t...(options.count ? [{ $limit: options.count }] : []),\n\t\t\t],\n\t\t\t{ readPreference: readSecondaryPreferred() },\n\t\t);\n\t}\n\n\tfindByTypeBeforeDate({ type, date }: { type: IAnalytic['type']; date: IAnalytic['date'] }): FindCursor<IAnalytic> {\n\t\treturn this.find({ type, date: { $lte: date } });\n\t}\n\n\tgetRoomsWithNumberOfMessagesBetweenDateQuery({\n\t\ttypes,\n\t\tstart,\n\t\tend,\n\t\tstartOfLastWeek,\n\t\tendOfLastWeek,\n\t\toptions,\n\t}: {\n\t\ttypes: Array<IRoom['t']>;\n\t\tstart: number;\n\t\tend: number;\n\t\tstartOfLastWeek: number;\n\t\tendOfLastWeek: number;\n\t\toptions?: any;\n\t}) {\n\t\tconst typeAndDateMatch = {\n\t\t\t$match: {\n\t\t\t\t'type': 'messages',\n\t\t\t\t'room.t': { $in: types },\n\t\t\t\t'date': { $gte: startOfLastWeek, $lte: end },\n\t\t\t},\n\t\t};\n\t\tconst roomsGroup = {\n\t\t\t$group: {\n\t\t\t\t_id: '$room._id',\n\t\t\t\troom: { $first: '$room' },\n\t\t\t\tmessages: { $sum: { $cond: [{ $gte: ['$date', start] }, '$messages', 0] } },\n\t\t\t\tlastWeekMessages: { $sum: { $cond: [{ $lte: ['$date', endOfLastWeek] }, '$messages', 0] } },\n\t\t\t},\n\t\t};\n\t\tconst lookup = {\n\t\t\t$lookup: {\n\t\t\t\tfrom: 'rocketchat_room',\n\t\t\t\tlocalField: '_id',\n\t\t\t\tforeignField: '_id',\n\t\t\t\tas: 'room',\n\t\t\t},\n\t\t};\n\t\tconst roomsUnwind = {\n\t\t\t$unwind: {\n\t\t\t\tpath: '$room',\n\t\t\t\tpreserveNullAndEmptyArrays: false,\n\t\t\t},\n\t\t};\n\t\tconst project = {\n\t\t\t$project: {\n\t\t\t\t_id: 0,\n\t\t\t\troom: {\n\t\t\t\t\t_id: '$room._id',\n\t\t\t\t\tname: { $ifNull: ['$room.name', '$room.fname'] },\n\t\t\t\t\tts: '$room.ts',\n\t\t\t\t\tt: '$room.t',\n\t\t\t\t\t_updatedAt: '$room._updatedAt',\n\t\t\t\t\tusernames: '$room.usernames',\n\t\t\t\t},\n\t\t\t\tmessages: '$messages',\n\t\t\t\tlastWeekMessages: '$lastWeekMessages',\n\t\t\t\tdiffFromLastWeek: { $subtract: ['$messages', '$lastWeekMessages'] },\n\t\t\t},\n\t\t};\n\n\t\tconst sort = { $sort: options?.sort || { messages: -1 } };\n\t\tconst sortAndPaginationParams: Exclude<Parameters<Collection<IRoom>['aggregate']>[0], undefined> = [sort];\n\t\tif (options?.offset) {\n\t\t\tsortAndPaginationParams.push({ $skip: options.offset });\n\t\t}\n\n\t\tif (options?.count) {\n\t\t\tsortAndPaginationParams.push({ $limit: options.count });\n\t\t}\n\t\tconst facet = {\n\t\t\t$facet: {\n\t\t\t\tchannels: [...sortAndPaginationParams],\n\t\t\t\ttotal: [{ $count: 'total' }],\n\t\t\t},\n\t\t};\n\t\tconst totalUnwind = { $unwind: '$total' };\n\t\tconst totalProject = {\n\t\t\t$project: {\n\t\t\t\tchannels: '$channels',\n\t\t\t\ttotal: '$total.total',\n\t\t\t},\n\t\t};\n\n\t\tconst params: Exclude<Parameters<Collection<IRoom>['aggregate']>[0], undefined> = [\n\t\t\ttypeAndDateMatch,\n\t\t\troomsGroup,\n\t\t\tlookup,\n\t\t\troomsUnwind,\n\t\t\tproject,\n\t\t\tfacet,\n\t\t\ttotalUnwind,\n\t\t\ttotalProject,\n\t\t];\n\n\t\treturn params;\n\t}\n\n\tfindRoomsByTypesWithNumberOfMessagesBetweenDate(params: {\n\t\ttypes: Array<IRoom['t']>;\n\t\tstart: number;\n\t\tend: number;\n\t\tstartOfLastWeek: number;\n\t\tendOfLastWeek: number;\n\t\toptions?: any;\n\t}): AggregationCursor<{ channels: IChannelsWithNumberOfMessagesBetweenDate[]; total: number }> {\n\t\tconst aggregationParams = this.getRoomsWithNumberOfMessagesBetweenDateQuery(params);\n\t\treturn this.col.aggregate<{ channels: IChannelsWithNumberOfMessagesBetweenDate[]; total: number }>(aggregationParams, {\n\t\t\tallowDiskUse: true,\n\t\t\treadPreference: readSecondaryPreferred(),\n\t\t});\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      AnalyticsRaw: () => AnalyticsRaw\n    });\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 0);\n    let readSecondaryPreferred;\n    module.link(\"../../database/readSecondaryPreferred\", {\n      readSecondaryPreferred(v) {\n        readSecondaryPreferred = v;\n      }\n    }, 1);\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AnalyticsRaw extends BaseRaw {\n      constructor(db) {\n        super(db, 'analytics', undefined, {\n          collection: {\n            readPreference: readSecondaryPreferred(db)\n          }\n        });\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            date: 1\n          }\n        }, {\n          key: {\n            'room._id': 1,\n            'date': 1\n          },\n          unique: true,\n          partialFilterExpression: {\n            type: 'rooms'\n          }\n        }, {\n          key: {\n            'room.t': 1,\n            'date': 1\n          },\n          partialFilterExpression: {\n            type: 'messages'\n          }\n        }];\n      }\n      saveMessageSent(_ref) {\n        let {\n          room,\n          date\n        } = _ref;\n        return this.updateMany({\n          date,\n          'room._id': room._id,\n          'type': 'messages'\n        }, {\n          $set: {\n            room: {\n              _id: room._id,\n              name: room.fname || room.name,\n              t: room.t,\n              usernames: room.usernames || []\n            }\n          },\n          $setOnInsert: {\n            _id: Random.id(),\n            date,\n            type: 'messages'\n          },\n          $inc: {\n            messages: 1\n          }\n        }, {\n          upsert: true\n        });\n      }\n      saveUserData(_ref2) {\n        let {\n          date\n        } = _ref2;\n        return this.updateMany({\n          date,\n          type: 'users'\n        }, {\n          $setOnInsert: {\n            _id: Random.id(),\n            date,\n            type: 'users'\n          },\n          $inc: {\n            users: 1\n          }\n        }, {\n          upsert: true\n        });\n      }\n      saveMessageDeleted(_ref3) {\n        let {\n          room,\n          date\n        } = _ref3;\n        return this.updateMany({\n          date,\n          'room._id': room._id\n        }, {\n          $inc: {\n            messages: -1\n          }\n        });\n      }\n      getMessagesSentTotalByDate(_ref4) {\n        let {\n          start,\n          end,\n          options = {}\n        } = _ref4;\n        return this.col.aggregate([{\n          $match: {\n            type: 'messages',\n            date: {\n              $gte: start,\n              $lte: end\n            }\n          }\n        }, {\n          $group: {\n            _id: '$date',\n            messages: {\n              $sum: '$messages'\n            }\n          }\n        }, ...(options.sort ? [{\n          $sort: options.sort\n        }] : []), ...(options.count ? [{\n          $limit: options.count\n        }] : [])], {\n          readPreference: readSecondaryPreferred()\n        });\n      }\n      getMessagesOrigin(_ref5) {\n        let {\n          start,\n          end\n        } = _ref5;\n        const params = [{\n          $match: {\n            type: 'messages',\n            date: {\n              $gte: start,\n              $lte: end\n            }\n          }\n        }, {\n          $group: {\n            _id: {\n              t: '$room.t'\n            },\n            messages: {\n              $sum: '$messages'\n            }\n          }\n        }, {\n          $project: {\n            _id: 0,\n            t: '$_id.t',\n            messages: 1\n          }\n        }];\n        return this.col.aggregate(params, {\n          readPreference: readSecondaryPreferred()\n        });\n      }\n      getMostPopularChannelsByMessagesSentQuantity(_ref6) {\n        let {\n          start,\n          end,\n          options = {}\n        } = _ref6;\n        return this.col.aggregate([{\n          $match: {\n            type: 'messages',\n            date: {\n              $gte: start,\n              $lte: end\n            }\n          }\n        }, {\n          $group: {\n            _id: {\n              t: '$room.t',\n              name: '$room.name',\n              usernames: '$room.usernames'\n            },\n            messages: {\n              $sum: '$messages'\n            }\n          }\n        }, {\n          $project: {\n            _id: 0,\n            t: '$_id.t',\n            name: '$_id.name',\n            usernames: '$_id.usernames',\n            messages: 1\n          }\n        }, ...(options.sort ? [{\n          $sort: options.sort\n        }] : []), ...(options.count ? [{\n          $limit: options.count\n        }] : [])], {\n          readPreference: readSecondaryPreferred()\n        });\n      }\n      getTotalOfRegisteredUsersByDate(_ref7) {\n        let {\n          start,\n          end,\n          options = {}\n        } = _ref7;\n        return this.col.aggregate([{\n          $match: {\n            type: 'users',\n            date: {\n              $gte: start,\n              $lte: end\n            }\n          }\n        }, {\n          $group: {\n            _id: '$date',\n            users: {\n              $sum: '$users'\n            }\n          }\n        }, ...(options.sort ? [{\n          $sort: options.sort\n        }] : []), ...(options.count ? [{\n          $limit: options.count\n        }] : [])], {\n          readPreference: readSecondaryPreferred()\n        });\n      }\n      findByTypeBeforeDate(_ref8) {\n        let {\n          type,\n          date\n        } = _ref8;\n        return this.find({\n          type,\n          date: {\n            $lte: date\n          }\n        });\n      }\n      getRoomsWithNumberOfMessagesBetweenDateQuery(_ref9) {\n        let {\n          types,\n          start,\n          end,\n          startOfLastWeek,\n          endOfLastWeek,\n          options\n        } = _ref9;\n        const typeAndDateMatch = {\n          $match: {\n            'type': 'messages',\n            'room.t': {\n              $in: types\n            },\n            'date': {\n              $gte: startOfLastWeek,\n              $lte: end\n            }\n          }\n        };\n        const roomsGroup = {\n          $group: {\n            _id: '$room._id',\n            room: {\n              $first: '$room'\n            },\n            messages: {\n              $sum: {\n                $cond: [{\n                  $gte: ['$date', start]\n                }, '$messages', 0]\n              }\n            },\n            lastWeekMessages: {\n              $sum: {\n                $cond: [{\n                  $lte: ['$date', endOfLastWeek]\n                }, '$messages', 0]\n              }\n            }\n          }\n        };\n        const lookup = {\n          $lookup: {\n            from: 'rocketchat_room',\n            localField: '_id',\n            foreignField: '_id',\n            as: 'room'\n          }\n        };\n        const roomsUnwind = {\n          $unwind: {\n            path: '$room',\n            preserveNullAndEmptyArrays: false\n          }\n        };\n        const project = {\n          $project: {\n            _id: 0,\n            room: {\n              _id: '$room._id',\n              name: {\n                $ifNull: ['$room.name', '$room.fname']\n              },\n              ts: '$room.ts',\n              t: '$room.t',\n              _updatedAt: '$room._updatedAt',\n              usernames: '$room.usernames'\n            },\n            messages: '$messages',\n            lastWeekMessages: '$lastWeekMessages',\n            diffFromLastWeek: {\n              $subtract: ['$messages', '$lastWeekMessages']\n            }\n          }\n        };\n        const sort = {\n          $sort: (options === null || options === void 0 ? void 0 : options.sort) || {\n            messages: -1\n          }\n        };\n        const sortAndPaginationParams = [sort];\n        if (options !== null && options !== void 0 && options.offset) {\n          sortAndPaginationParams.push({\n            $skip: options.offset\n          });\n        }\n        if (options !== null && options !== void 0 && options.count) {\n          sortAndPaginationParams.push({\n            $limit: options.count\n          });\n        }\n        const facet = {\n          $facet: {\n            channels: [...sortAndPaginationParams],\n            total: [{\n              $count: 'total'\n            }]\n          }\n        };\n        const totalUnwind = {\n          $unwind: '$total'\n        };\n        const totalProject = {\n          $project: {\n            channels: '$channels',\n            total: '$total.total'\n          }\n        };\n        const params = [typeAndDateMatch, roomsGroup, lookup, roomsUnwind, project, facet, totalUnwind, totalProject];\n        return params;\n      }\n      findRoomsByTypesWithNumberOfMessagesBetweenDate(params) {\n        const aggregationParams = this.getRoomsWithNumberOfMessagesBetweenDateQuery(params);\n        return this.col.aggregate(aggregationParams, {\n          allowDiskUse: true,\n          readPreference: readSecondaryPreferred()\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","AnalyticsRaw","Random","link","v","readSecondaryPreferred","BaseRaw","__reifyWaitForDeps__","constructor","db","undefined","collection","readPreference","modelIndexes","key","date","unique","partialFilterExpression","type","saveMessageSent","_ref","room","updateMany","_id","$set","name","fname","t","usernames","$setOnInsert","id","$inc","messages","upsert","saveUserData","_ref2","users","saveMessageDeleted","_ref3","getMessagesSentTotalByDate","_ref4","start","end","options","col","aggregate","$match","$gte","$lte","$group","$sum","sort","$sort","count","$limit","getMessagesOrigin","_ref5","params","$project","getMostPopularChannelsByMessagesSentQuantity","_ref6","getTotalOfRegisteredUsersByDate","_ref7","findByTypeBeforeDate","_ref8","find","getRoomsWithNumberOfMessagesBetweenDateQuery","_ref9","types","startOfLastWeek","endOfLastWeek","typeAndDateMatch","$in","roomsGroup","$first","$cond","lastWeekMessages","lookup","$lookup","from","localField","foreignField","as","roomsUnwind","$unwind","path","preserveNullAndEmptyArrays","project","$ifNull","ts","_updatedAt","diffFromLastWeek","$subtract","sortAndPaginationParams","offset","push","$skip","facet","$facet","channels","total","$count","totalUnwind","totalProject","findRoomsByTypesWithNumberOfMessagesBetweenDate","aggregationParams","allowDiskUse","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/Analytics.ts"],"sourcesContent":["import type { IAnalytic, IRoom } from '@rocket.chat/core-typings';\nimport type { IAnalyticsModel, IChannelsWithNumberOfMessagesBetweenDate } from '@rocket.chat/model-typings';\nimport { Random } from '@rocket.chat/random';\nimport type { AggregationCursor, FindCursor, Db, IndexDescription, FindOptions, UpdateResult, Document, Collection } from 'mongodb';\n\nimport { readSecondaryPreferred } from '../../database/readSecondaryPreferred';\nimport { BaseRaw } from './BaseRaw';\n\nexport class AnalyticsRaw extends BaseRaw<IAnalytic> implements IAnalyticsModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'analytics', undefined, {\n\t\t\tcollection: { readPreference: readSecondaryPreferred(db) },\n\t\t});\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { date: 1 } },\n\t\t\t{ key: { 'room._id': 1, 'date': 1 }, unique: true, partialFilterExpression: { type: 'rooms' } },\n\t\t\t{ key: { 'room.t': 1, 'date': 1 }, partialFilterExpression: { type: 'messages' } },\n\t\t];\n\t}\n\n\tsaveMessageSent({ room, date }: { room: IRoom; date: IAnalytic['date'] }): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany(\n\t\t\t{ date, 'room._id': room._id, 'type': 'messages' },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\troom: {\n\t\t\t\t\t\t_id: room._id,\n\t\t\t\t\t\tname: room.fname || room.name,\n\t\t\t\t\t\tt: room.t,\n\t\t\t\t\t\tusernames: room.usernames || [],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\tdate,\n\t\t\t\t\ttype: 'messages' as const,\n\t\t\t\t},\n\t\t\t\t$inc: { messages: 1 },\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\n\tsaveUserData({ date }: { date: IAnalytic['date'] }): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany(\n\t\t\t{ date, type: 'users' },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\t_id: Random.id(),\n\t\t\t\t\tdate,\n\t\t\t\t\ttype: 'users' as const,\n\t\t\t\t},\n\t\t\t\t$inc: { users: 1 },\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\n\tsaveMessageDeleted({ room, date }: { room: { _id: string }; date: IAnalytic['date'] }): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany(\n\t\t\t{ date, 'room._id': room._id },\n\t\t\t{\n\t\t\t\t$inc: { messages: -1 },\n\t\t\t},\n\t\t);\n\t}\n\n\tgetMessagesSentTotalByDate({\n\t\tstart,\n\t\tend,\n\t\toptions = {},\n\t}: {\n\t\tstart: IAnalytic['date'];\n\t\tend: IAnalytic['date'];\n\t\toptions?: { sort?: FindOptions<IAnalytic>['sort']; count?: number };\n\t}): AggregationCursor<{\n\t\t_id: IAnalytic['date'];\n\t\tmessages: number;\n\t}> {\n\t\treturn this.col.aggregate<{\n\t\t\t_id: IAnalytic['date'];\n\t\t\tmessages: number;\n\t\t}>(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\ttype: 'messages',\n\t\t\t\t\t\tdate: { $gte: start, $lte: end },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: '$date',\n\t\t\t\t\t\tmessages: { $sum: '$messages' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t...(options.sort ? [{ $sort: options.sort }] : []),\n\t\t\t\t...(options.count ? [{ $limit: options.count }] : []),\n\t\t\t],\n\t\t\t{ readPreference: readSecondaryPreferred() },\n\t\t);\n\t}\n\n\tgetMessagesOrigin({ start, end }: { start: IAnalytic['date']; end: IAnalytic['date'] }): AggregationCursor<{\n\t\tt: IRoom['t'];\n\t\tmessages: number;\n\t}> {\n\t\tconst params = [\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\ttype: 'messages',\n\t\t\t\t\tdate: { $gte: start, $lte: end },\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$group: {\n\t\t\t\t\t_id: { t: '$room.t' },\n\t\t\t\t\tmessages: { $sum: '$messages' },\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$project: {\n\t\t\t\t\t_id: 0,\n\t\t\t\t\tt: '$_id.t',\n\t\t\t\t\tmessages: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t\treturn this.col.aggregate(params, { readPreference: readSecondaryPreferred() });\n\t}\n\n\tgetMostPopularChannelsByMessagesSentQuantity({\n\t\tstart,\n\t\tend,\n\t\toptions = {},\n\t}: {\n\t\tstart: IAnalytic['date'];\n\t\tend: IAnalytic['date'];\n\t\toptions?: { sort?: FindOptions<IAnalytic>['sort']; count?: number };\n\t}): AggregationCursor<{\n\t\tt: IRoom['t'];\n\t\tname: string;\n\t\tmessages: number;\n\t\tusernames: string[];\n\t}> {\n\t\treturn this.col.aggregate(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\ttype: 'messages',\n\t\t\t\t\t\tdate: { $gte: start, $lte: end },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: { t: '$room.t', name: '$room.name', usernames: '$room.usernames' },\n\t\t\t\t\t\tmessages: { $sum: '$messages' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$project: {\n\t\t\t\t\t\t_id: 0,\n\t\t\t\t\t\tt: '$_id.t',\n\t\t\t\t\t\tname: '$_id.name',\n\t\t\t\t\t\tusernames: '$_id.usernames',\n\t\t\t\t\t\tmessages: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t...(options.sort ? [{ $sort: options.sort }] : []),\n\t\t\t\t...(options.count ? [{ $limit: options.count }] : []),\n\t\t\t],\n\t\t\t{ readPreference: readSecondaryPreferred() },\n\t\t);\n\t}\n\n\tgetTotalOfRegisteredUsersByDate({\n\t\tstart,\n\t\tend,\n\t\toptions = {},\n\t}: {\n\t\tstart: IAnalytic['date'];\n\t\tend: IAnalytic['date'];\n\t\toptions?: { sort?: FindOptions<IAnalytic>['sort']; count?: number };\n\t}): AggregationCursor<{\n\t\t_id: IAnalytic['date'];\n\t\tusers: number;\n\t}> {\n\t\treturn this.col.aggregate<{\n\t\t\t_id: IAnalytic['date'];\n\t\t\tusers: number;\n\t\t}>(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\ttype: 'users',\n\t\t\t\t\t\tdate: { $gte: start, $lte: end },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: '$date',\n\t\t\t\t\t\tusers: { $sum: '$users' },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t...(options.sort ? [{ $sort: options.sort }] : []),\n\t\t\t\t...(options.count ? [{ $limit: options.count }] : []),\n\t\t\t],\n\t\t\t{ readPreference: readSecondaryPreferred() },\n\t\t);\n\t}\n\n\tfindByTypeBeforeDate({ type, date }: { type: IAnalytic['type']; date: IAnalytic['date'] }): FindCursor<IAnalytic> {\n\t\treturn this.find({ type, date: { $lte: date } });\n\t}\n\n\tgetRoomsWithNumberOfMessagesBetweenDateQuery({\n\t\ttypes,\n\t\tstart,\n\t\tend,\n\t\tstartOfLastWeek,\n\t\tendOfLastWeek,\n\t\toptions,\n\t}: {\n\t\ttypes: Array<IRoom['t']>;\n\t\tstart: number;\n\t\tend: number;\n\t\tstartOfLastWeek: number;\n\t\tendOfLastWeek: number;\n\t\toptions?: any;\n\t}) {\n\t\tconst typeAndDateMatch = {\n\t\t\t$match: {\n\t\t\t\t'type': 'messages',\n\t\t\t\t'room.t': { $in: types },\n\t\t\t\t'date': { $gte: startOfLastWeek, $lte: end },\n\t\t\t},\n\t\t};\n\t\tconst roomsGroup = {\n\t\t\t$group: {\n\t\t\t\t_id: '$room._id',\n\t\t\t\troom: { $first: '$room' },\n\t\t\t\tmessages: { $sum: { $cond: [{ $gte: ['$date', start] }, '$messages', 0] } },\n\t\t\t\tlastWeekMessages: { $sum: { $cond: [{ $lte: ['$date', endOfLastWeek] }, '$messages', 0] } },\n\t\t\t},\n\t\t};\n\t\tconst lookup = {\n\t\t\t$lookup: {\n\t\t\t\tfrom: 'rocketchat_room',\n\t\t\t\tlocalField: '_id',\n\t\t\t\tforeignField: '_id',\n\t\t\t\tas: 'room',\n\t\t\t},\n\t\t};\n\t\tconst roomsUnwind = {\n\t\t\t$unwind: {\n\t\t\t\tpath: '$room',\n\t\t\t\tpreserveNullAndEmptyArrays: false,\n\t\t\t},\n\t\t};\n\t\tconst project = {\n\t\t\t$project: {\n\t\t\t\t_id: 0,\n\t\t\t\troom: {\n\t\t\t\t\t_id: '$room._id',\n\t\t\t\t\tname: { $ifNull: ['$room.name', '$room.fname'] },\n\t\t\t\t\tts: '$room.ts',\n\t\t\t\t\tt: '$room.t',\n\t\t\t\t\t_updatedAt: '$room._updatedAt',\n\t\t\t\t\tusernames: '$room.usernames',\n\t\t\t\t},\n\t\t\t\tmessages: '$messages',\n\t\t\t\tlastWeekMessages: '$lastWeekMessages',\n\t\t\t\tdiffFromLastWeek: { $subtract: ['$messages', '$lastWeekMessages'] },\n\t\t\t},\n\t\t};\n\n\t\tconst sort = { $sort: options?.sort || { messages: -1 } };\n\t\tconst sortAndPaginationParams: Exclude<Parameters<Collection<IRoom>['aggregate']>[0], undefined> = [sort];\n\t\tif (options?.offset) {\n\t\t\tsortAndPaginationParams.push({ $skip: options.offset });\n\t\t}\n\n\t\tif (options?.count) {\n\t\t\tsortAndPaginationParams.push({ $limit: options.count });\n\t\t}\n\t\tconst facet = {\n\t\t\t$facet: {\n\t\t\t\tchannels: [...sortAndPaginationParams],\n\t\t\t\ttotal: [{ $count: 'total' }],\n\t\t\t},\n\t\t};\n\t\tconst totalUnwind = { $unwind: '$total' };\n\t\tconst totalProject = {\n\t\t\t$project: {\n\t\t\t\tchannels: '$channels',\n\t\t\t\ttotal: '$total.total',\n\t\t\t},\n\t\t};\n\n\t\tconst params: Exclude<Parameters<Collection<IRoom>['aggregate']>[0], undefined> = [\n\t\t\ttypeAndDateMatch,\n\t\t\troomsGroup,\n\t\t\tlookup,\n\t\t\troomsUnwind,\n\t\t\tproject,\n\t\t\tfacet,\n\t\t\ttotalUnwind,\n\t\t\ttotalProject,\n\t\t];\n\n\t\treturn params;\n\t}\n\n\tfindRoomsByTypesWithNumberOfMessagesBetweenDate(params: {\n\t\ttypes: Array<IRoom['t']>;\n\t\tstart: number;\n\t\tend: number;\n\t\tstartOfLastWeek: number;\n\t\tendOfLastWeek: number;\n\t\toptions?: any;\n\t}): AggregationCursor<{ channels: IChannelsWithNumberOfMessagesBetweenDate[]; total: number }> {\n\t\tconst aggregationParams = this.getRoomsWithNumberOfMessagesBetweenDateQuery(params);\n\t\treturn this.col.aggregate<{ channels: IChannelsWithNumberOfMessagesBetweenDate[]; total: number }>(aggregationParams, {\n\t\t\tallowDiskUse: true,\n\t\t\treadPreference: readSecondaryPreferred(),\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1af1fc2f0336027819e5e68e99a63280daea69ee"}
