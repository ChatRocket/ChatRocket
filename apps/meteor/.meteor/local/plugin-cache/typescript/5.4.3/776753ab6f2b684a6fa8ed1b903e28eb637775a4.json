{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/lib/departments.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/lib/departments.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/lib/departments.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/lib/departments.ts","sourceRoot":"","sources":["app/livechat/server/api/lib/departments.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatDepartment, ILivechatDepartmentAgents } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatDepartmentAgents } from '@rocket.chat/models';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Document, Filter, FindOptions } from 'mongodb';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\n\ntype Pagination<T extends Document> = { pagination: { offset: number; count: number; sort: FindOptions<T>['sort'] } };\ntype FindDepartmentParams = {\n\tuserId: string;\n\tonlyMyDepartments?: boolean;\n\ttext?: string;\n\tenabled?: boolean;\n\texcludeDepartmentId?: string;\n\tshowArchived?: boolean;\n} & Pagination<ILivechatDepartment>;\ntype FindDepartmentByIdParams = {\n\tuserId: string;\n\tdepartmentId: string;\n\tincludeAgents?: boolean;\n\tonlyMyDepartments?: boolean;\n};\ntype FindDepartmentToAutocompleteParams = {\n\tuid: string;\n\tselector: {\n\t\texceptions: string[];\n\t\tconditions: Filter<ILivechatDepartment>;\n\t\tterm: string;\n\t};\n\tonlyMyDepartments?: boolean;\n\tshowArchived?: boolean;\n};\ntype FindDepartmentAgentsParams = {\n\tuserId: string;\n\tdepartmentId: string;\n} & Pagination<ILivechatDepartmentAgents>;\n\nexport async function findDepartments({\n\tuserId,\n\tonlyMyDepartments = false,\n\ttext,\n\tenabled,\n\texcludeDepartmentId,\n\tshowArchived = false,\n\tpagination: { offset, count, sort },\n}: FindDepartmentParams): Promise<PaginatedResult<{ departments: ILivechatDepartment[] }>> {\n\tlet query = {\n\t\t$or: [{ type: { $eq: 'd' } }, { type: { $exists: false } }],\n\t\t...(!showArchived && { archived: { $ne: !showArchived } }),\n\t\t...(enabled && { enabled: Boolean(enabled) }),\n\t\t...(text && { name: new RegExp(escapeRegExp(text), 'i') }),\n\t\t...(excludeDepartmentId && { _id: { $ne: excludeDepartmentId } }),\n\t};\n\n\tif (onlyMyDepartments) {\n\t\tquery = await callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst { cursor, totalCount } = LivechatDepartment.findPaginated(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [departments, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tdepartments,\n\t\tcount: departments.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findArchivedDepartments({\n\tuserId,\n\tonlyMyDepartments = false,\n\ttext,\n\texcludeDepartmentId,\n\tpagination: { offset, count, sort },\n}: FindDepartmentParams): Promise<PaginatedResult<{ departments: ILivechatDepartment[] }>> {\n\tlet query = {\n\t\t$or: [{ type: { $eq: 'd' } }, { type: { $exists: false } }],\n\t\tarchived: { $eq: true },\n\t\t...(text && { name: new RegExp(escapeRegExp(text), 'i') }),\n\t\t...(excludeDepartmentId && { _id: { $ne: excludeDepartmentId } }),\n\t};\n\n\tif (onlyMyDepartments) {\n\t\tquery = await callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst { cursor, totalCount } = LivechatDepartment.findPaginated(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [departments, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tdepartments,\n\t\tcount: departments.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDepartmentById({\n\tuserId,\n\tdepartmentId,\n\tincludeAgents = true,\n\tonlyMyDepartments = false,\n}: FindDepartmentByIdParams): Promise<{\n\tdepartment: ILivechatDepartment | null;\n\tagents?: ILivechatDepartmentAgents[];\n}> {\n\tconst canViewLivechatDepartments = includeAgents && (await hasPermissionAsync(userId, 'view-livechat-departments'));\n\n\tlet query = { _id: departmentId };\n\n\tif (onlyMyDepartments) {\n\t\tquery = await callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst result = {\n\t\tdepartment: await LivechatDepartment.findOne(query),\n\t\t...(includeAgents &&\n\t\t\tcanViewLivechatDepartments && {\n\t\t\t\tagents: await LivechatDepartmentAgents.findByDepartmentId(departmentId).toArray(),\n\t\t\t}),\n\t};\n\n\treturn result;\n}\n\nexport async function findDepartmentsToAutocomplete({\n\tuid,\n\tselector,\n\tonlyMyDepartments = false,\n\tshowArchived = false,\n}: FindDepartmentToAutocompleteParams): Promise<{ items: ILivechatDepartment[] }> {\n\tconst { exceptions = [] } = selector;\n\tlet { conditions = {} } = selector;\n\n\tif (onlyMyDepartments) {\n\t\tconditions = await callbacks.run('livechat.applyDepartmentRestrictions', conditions, { userId: uid });\n\t}\n\n\tconst conditionsWithArchived = { archived: { $ne: !showArchived }, ...conditions };\n\n\tconst items = await LivechatDepartment.findByNameRegexWithExceptionsAndConditions(selector.term, exceptions, conditionsWithArchived, {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tname: 1,\n\t\t},\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t}).toArray();\n\treturn {\n\t\titems,\n\t};\n}\n\nexport async function findDepartmentAgents({\n\tdepartmentId,\n\tpagination: { offset, count, sort },\n}: FindDepartmentAgentsParams): Promise<PaginatedResult<{ agents: ILivechatDepartmentAgents[] }>> {\n\tconst { cursor, totalCount } = LivechatDepartmentAgents.findAgentsByDepartmentId<ILivechatDepartmentAgents>(departmentId, {\n\t\tsort: sort || { username: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [agents, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tagents,\n\t\tcount: agents.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDepartmentsBetweenIds({\n\tids,\n\tfields,\n}: {\n\tids: string[];\n\tfields: Record<string, unknown>;\n}): Promise<{ departments: ILivechatDepartment[] }> {\n\tconst departments = await LivechatDepartment.findInIds(ids, { projection: fields }).toArray();\n\treturn { departments };\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/lib/departments.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/lib/departments.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/lib/departments.ts","sourceRoot":"","sources":["app/livechat/server/api/lib/departments.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatDepartment, ILivechatDepartmentAgents } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatDepartmentAgents } from '@rocket.chat/models';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Document, Filter, FindOptions } from 'mongodb';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\n\ntype Pagination<T extends Document> = { pagination: { offset: number; count: number; sort: FindOptions<T>['sort'] } };\ntype FindDepartmentParams = {\n\tuserId: string;\n\tonlyMyDepartments?: boolean;\n\ttext?: string;\n\tenabled?: boolean;\n\texcludeDepartmentId?: string;\n\tshowArchived?: boolean;\n} & Pagination<ILivechatDepartment>;\ntype FindDepartmentByIdParams = {\n\tuserId: string;\n\tdepartmentId: string;\n\tincludeAgents?: boolean;\n\tonlyMyDepartments?: boolean;\n};\ntype FindDepartmentToAutocompleteParams = {\n\tuid: string;\n\tselector: {\n\t\texceptions: string[];\n\t\tconditions: Filter<ILivechatDepartment>;\n\t\tterm: string;\n\t};\n\tonlyMyDepartments?: boolean;\n\tshowArchived?: boolean;\n};\ntype FindDepartmentAgentsParams = {\n\tuserId: string;\n\tdepartmentId: string;\n} & Pagination<ILivechatDepartmentAgents>;\n\nexport async function findDepartments({\n\tuserId,\n\tonlyMyDepartments = false,\n\ttext,\n\tenabled,\n\texcludeDepartmentId,\n\tshowArchived = false,\n\tpagination: { offset, count, sort },\n}: FindDepartmentParams): Promise<PaginatedResult<{ departments: ILivechatDepartment[] }>> {\n\tlet query = {\n\t\t$or: [{ type: { $eq: 'd' } }, { type: { $exists: false } }],\n\t\t...(!showArchived && { archived: { $ne: !showArchived } }),\n\t\t...(enabled && { enabled: Boolean(enabled) }),\n\t\t...(text && { name: new RegExp(escapeRegExp(text), 'i') }),\n\t\t...(excludeDepartmentId && { _id: { $ne: excludeDepartmentId } }),\n\t};\n\n\tif (onlyMyDepartments) {\n\t\tquery = await callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst { cursor, totalCount } = LivechatDepartment.findPaginated(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [departments, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tdepartments,\n\t\tcount: departments.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findArchivedDepartments({\n\tuserId,\n\tonlyMyDepartments = false,\n\ttext,\n\texcludeDepartmentId,\n\tpagination: { offset, count, sort },\n}: FindDepartmentParams): Promise<PaginatedResult<{ departments: ILivechatDepartment[] }>> {\n\tlet query = {\n\t\t$or: [{ type: { $eq: 'd' } }, { type: { $exists: false } }],\n\t\tarchived: { $eq: true },\n\t\t...(text && { name: new RegExp(escapeRegExp(text), 'i') }),\n\t\t...(excludeDepartmentId && { _id: { $ne: excludeDepartmentId } }),\n\t};\n\n\tif (onlyMyDepartments) {\n\t\tquery = await callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst { cursor, totalCount } = LivechatDepartment.findPaginated(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [departments, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tdepartments,\n\t\tcount: departments.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDepartmentById({\n\tuserId,\n\tdepartmentId,\n\tincludeAgents = true,\n\tonlyMyDepartments = false,\n}: FindDepartmentByIdParams): Promise<{\n\tdepartment: ILivechatDepartment | null;\n\tagents?: ILivechatDepartmentAgents[];\n}> {\n\tconst canViewLivechatDepartments = includeAgents && (await hasPermissionAsync(userId, 'view-livechat-departments'));\n\n\tlet query = { _id: departmentId };\n\n\tif (onlyMyDepartments) {\n\t\tquery = await callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst result = {\n\t\tdepartment: await LivechatDepartment.findOne(query),\n\t\t...(includeAgents &&\n\t\t\tcanViewLivechatDepartments && {\n\t\t\t\tagents: await LivechatDepartmentAgents.findByDepartmentId(departmentId).toArray(),\n\t\t\t}),\n\t};\n\n\treturn result;\n}\n\nexport async function findDepartmentsToAutocomplete({\n\tuid,\n\tselector,\n\tonlyMyDepartments = false,\n\tshowArchived = false,\n}: FindDepartmentToAutocompleteParams): Promise<{ items: ILivechatDepartment[] }> {\n\tconst { exceptions = [] } = selector;\n\tlet { conditions = {} } = selector;\n\n\tif (onlyMyDepartments) {\n\t\tconditions = await callbacks.run('livechat.applyDepartmentRestrictions', conditions, { userId: uid });\n\t}\n\n\tconst conditionsWithArchived = { archived: { $ne: !showArchived }, ...conditions };\n\n\tconst items = await LivechatDepartment.findByNameRegexWithExceptionsAndConditions(selector.term, exceptions, conditionsWithArchived, {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tname: 1,\n\t\t},\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t}).toArray();\n\treturn {\n\t\titems,\n\t};\n}\n\nexport async function findDepartmentAgents({\n\tdepartmentId,\n\tpagination: { offset, count, sort },\n}: FindDepartmentAgentsParams): Promise<PaginatedResult<{ agents: ILivechatDepartmentAgents[] }>> {\n\tconst { cursor, totalCount } = LivechatDepartmentAgents.findAgentsByDepartmentId<ILivechatDepartmentAgents>(departmentId, {\n\t\tsort: sort || { username: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [agents, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tagents,\n\t\tcount: agents.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDepartmentsBetweenIds({\n\tids,\n\tfields,\n}: {\n\tids: string[];\n\tfields: Record<string, unknown>;\n}): Promise<{ departments: ILivechatDepartment[] }> {\n\tconst departments = await LivechatDepartment.findInIds(ids, { projection: fields }).toArray();\n\treturn { departments };\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      findDepartments: () => findDepartments,\n      findArchivedDepartments: () => findArchivedDepartments,\n      findDepartmentById: () => findDepartmentById,\n      findDepartmentsToAutocomplete: () => findDepartmentsToAutocomplete,\n      findDepartmentAgents: () => findDepartmentAgents,\n      findDepartmentsBetweenIds: () => findDepartmentsBetweenIds\n    });\n    let LivechatDepartment, LivechatDepartmentAgents;\n    module.link(\"@rocket.chat/models\", {\n      LivechatDepartment(v) {\n        LivechatDepartment = v;\n      },\n      LivechatDepartmentAgents(v) {\n        LivechatDepartmentAgents = v;\n      }\n    }, 0);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 1);\n    let callbacks;\n    module.link(\"../../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 2);\n    let hasPermissionAsync;\n    module.link(\"../../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function findDepartments(_ref) {\n      let {\n        userId,\n        onlyMyDepartments = false,\n        text,\n        enabled,\n        excludeDepartmentId,\n        showArchived = false,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref;\n      let query = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n        $or: [{\n          type: {\n            $eq: 'd'\n          }\n        }, {\n          type: {\n            $exists: false\n          }\n        }]\n      }, !showArchived && {\n        archived: {\n          $ne: !showArchived\n        }\n      }), enabled && {\n        enabled: Boolean(enabled)\n      }), text && {\n        name: new RegExp(escapeRegExp(text), 'i')\n      }), excludeDepartmentId && {\n        _id: {\n          $ne: excludeDepartmentId\n        }\n      });\n      if (onlyMyDepartments) {\n        query = await callbacks.run('livechat.applyDepartmentRestrictions', query, {\n          userId\n        });\n      }\n      const {\n        cursor,\n        totalCount\n      } = LivechatDepartment.findPaginated(query, {\n        sort: sort || {\n          name: 1\n        },\n        skip: offset,\n        limit: count\n      });\n      const [departments, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        departments,\n        count: departments.length,\n        offset,\n        total\n      };\n    }\n    async function findArchivedDepartments(_ref2) {\n      let {\n        userId,\n        onlyMyDepartments = false,\n        text,\n        excludeDepartmentId,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref2;\n      let query = _objectSpread(_objectSpread({\n        $or: [{\n          type: {\n            $eq: 'd'\n          }\n        }, {\n          type: {\n            $exists: false\n          }\n        }],\n        archived: {\n          $eq: true\n        }\n      }, text && {\n        name: new RegExp(escapeRegExp(text), 'i')\n      }), excludeDepartmentId && {\n        _id: {\n          $ne: excludeDepartmentId\n        }\n      });\n      if (onlyMyDepartments) {\n        query = await callbacks.run('livechat.applyDepartmentRestrictions', query, {\n          userId\n        });\n      }\n      const {\n        cursor,\n        totalCount\n      } = LivechatDepartment.findPaginated(query, {\n        sort: sort || {\n          name: 1\n        },\n        skip: offset,\n        limit: count\n      });\n      const [departments, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        departments,\n        count: departments.length,\n        offset,\n        total\n      };\n    }\n    async function findDepartmentById(_ref3) {\n      let {\n        userId,\n        departmentId,\n        includeAgents = true,\n        onlyMyDepartments = false\n      } = _ref3;\n      const canViewLivechatDepartments = includeAgents && (await hasPermissionAsync(userId, 'view-livechat-departments'));\n      let query = {\n        _id: departmentId\n      };\n      if (onlyMyDepartments) {\n        query = await callbacks.run('livechat.applyDepartmentRestrictions', query, {\n          userId\n        });\n      }\n      const result = _objectSpread({\n        department: await LivechatDepartment.findOne(query)\n      }, includeAgents && canViewLivechatDepartments && {\n        agents: await LivechatDepartmentAgents.findByDepartmentId(departmentId).toArray()\n      });\n      return result;\n    }\n    async function findDepartmentsToAutocomplete(_ref4) {\n      let {\n        uid,\n        selector,\n        onlyMyDepartments = false,\n        showArchived = false\n      } = _ref4;\n      const {\n        exceptions = []\n      } = selector;\n      let {\n        conditions = {}\n      } = selector;\n      if (onlyMyDepartments) {\n        conditions = await callbacks.run('livechat.applyDepartmentRestrictions', conditions, {\n          userId: uid\n        });\n      }\n      const conditionsWithArchived = _objectSpread({\n        archived: {\n          $ne: !showArchived\n        }\n      }, conditions);\n      const items = await LivechatDepartment.findByNameRegexWithExceptionsAndConditions(selector.term, exceptions, conditionsWithArchived, {\n        projection: {\n          _id: 1,\n          name: 1\n        },\n        sort: {\n          name: 1\n        }\n      }).toArray();\n      return {\n        items\n      };\n    }\n    async function findDepartmentAgents(_ref5) {\n      let {\n        departmentId,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref5;\n      const {\n        cursor,\n        totalCount\n      } = LivechatDepartmentAgents.findAgentsByDepartmentId(departmentId, {\n        sort: sort || {\n          username: 1\n        },\n        skip: offset,\n        limit: count\n      });\n      const [agents, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        agents,\n        count: agents.length,\n        offset,\n        total\n      };\n    }\n    async function findDepartmentsBetweenIds(_ref6) {\n      let {\n        ids,\n        fields\n      } = _ref6;\n      const departments = await LivechatDepartment.findInIds(ids, {\n        projection: fields\n      }).toArray();\n      return {\n        departments\n      };\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","findDepartments","findArchivedDepartments","findDepartmentById","findDepartmentsToAutocomplete","findDepartmentAgents","findDepartmentsBetweenIds","LivechatDepartment","LivechatDepartmentAgents","escapeRegExp","callbacks","hasPermissionAsync","__reifyWaitForDeps__","_ref","userId","onlyMyDepartments","text","enabled","excludeDepartmentId","showArchived","pagination","offset","count","sort","query","$or","type","$eq","$exists","archived","$ne","Boolean","name","RegExp","_id","run","cursor","totalCount","findPaginated","skip","limit","departments","total","Promise","all","toArray","length","_ref2","_ref3","departmentId","includeAgents","canViewLivechatDepartments","result","department","findOne","agents","findByDepartmentId","_ref4","uid","selector","exceptions","conditions","conditionsWithArchived","items","findByNameRegexWithExceptionsAndConditions","term","projection","_ref5","findAgentsByDepartmentId","username","_ref6","ids","fields","findInIds","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/api/lib/departments.ts"],"sourcesContent":["import type { ILivechatDepartment, ILivechatDepartmentAgents } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatDepartmentAgents } from '@rocket.chat/models';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Document, Filter, FindOptions } from 'mongodb';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\n\ntype Pagination<T extends Document> = { pagination: { offset: number; count: number; sort: FindOptions<T>['sort'] } };\ntype FindDepartmentParams = {\n\tuserId: string;\n\tonlyMyDepartments?: boolean;\n\ttext?: string;\n\tenabled?: boolean;\n\texcludeDepartmentId?: string;\n\tshowArchived?: boolean;\n} & Pagination<ILivechatDepartment>;\ntype FindDepartmentByIdParams = {\n\tuserId: string;\n\tdepartmentId: string;\n\tincludeAgents?: boolean;\n\tonlyMyDepartments?: boolean;\n};\ntype FindDepartmentToAutocompleteParams = {\n\tuid: string;\n\tselector: {\n\t\texceptions: string[];\n\t\tconditions: Filter<ILivechatDepartment>;\n\t\tterm: string;\n\t};\n\tonlyMyDepartments?: boolean;\n\tshowArchived?: boolean;\n};\ntype FindDepartmentAgentsParams = {\n\tuserId: string;\n\tdepartmentId: string;\n} & Pagination<ILivechatDepartmentAgents>;\n\nexport async function findDepartments({\n\tuserId,\n\tonlyMyDepartments = false,\n\ttext,\n\tenabled,\n\texcludeDepartmentId,\n\tshowArchived = false,\n\tpagination: { offset, count, sort },\n}: FindDepartmentParams): Promise<PaginatedResult<{ departments: ILivechatDepartment[] }>> {\n\tlet query = {\n\t\t$or: [{ type: { $eq: 'd' } }, { type: { $exists: false } }],\n\t\t...(!showArchived && { archived: { $ne: !showArchived } }),\n\t\t...(enabled && { enabled: Boolean(enabled) }),\n\t\t...(text && { name: new RegExp(escapeRegExp(text), 'i') }),\n\t\t...(excludeDepartmentId && { _id: { $ne: excludeDepartmentId } }),\n\t};\n\n\tif (onlyMyDepartments) {\n\t\tquery = await callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst { cursor, totalCount } = LivechatDepartment.findPaginated(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [departments, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tdepartments,\n\t\tcount: departments.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findArchivedDepartments({\n\tuserId,\n\tonlyMyDepartments = false,\n\ttext,\n\texcludeDepartmentId,\n\tpagination: { offset, count, sort },\n}: FindDepartmentParams): Promise<PaginatedResult<{ departments: ILivechatDepartment[] }>> {\n\tlet query = {\n\t\t$or: [{ type: { $eq: 'd' } }, { type: { $exists: false } }],\n\t\tarchived: { $eq: true },\n\t\t...(text && { name: new RegExp(escapeRegExp(text), 'i') }),\n\t\t...(excludeDepartmentId && { _id: { $ne: excludeDepartmentId } }),\n\t};\n\n\tif (onlyMyDepartments) {\n\t\tquery = await callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst { cursor, totalCount } = LivechatDepartment.findPaginated(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [departments, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tdepartments,\n\t\tcount: departments.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDepartmentById({\n\tuserId,\n\tdepartmentId,\n\tincludeAgents = true,\n\tonlyMyDepartments = false,\n}: FindDepartmentByIdParams): Promise<{\n\tdepartment: ILivechatDepartment | null;\n\tagents?: ILivechatDepartmentAgents[];\n}> {\n\tconst canViewLivechatDepartments = includeAgents && (await hasPermissionAsync(userId, 'view-livechat-departments'));\n\n\tlet query = { _id: departmentId };\n\n\tif (onlyMyDepartments) {\n\t\tquery = await callbacks.run('livechat.applyDepartmentRestrictions', query, { userId });\n\t}\n\n\tconst result = {\n\t\tdepartment: await LivechatDepartment.findOne(query),\n\t\t...(includeAgents &&\n\t\t\tcanViewLivechatDepartments && {\n\t\t\t\tagents: await LivechatDepartmentAgents.findByDepartmentId(departmentId).toArray(),\n\t\t\t}),\n\t};\n\n\treturn result;\n}\n\nexport async function findDepartmentsToAutocomplete({\n\tuid,\n\tselector,\n\tonlyMyDepartments = false,\n\tshowArchived = false,\n}: FindDepartmentToAutocompleteParams): Promise<{ items: ILivechatDepartment[] }> {\n\tconst { exceptions = [] } = selector;\n\tlet { conditions = {} } = selector;\n\n\tif (onlyMyDepartments) {\n\t\tconditions = await callbacks.run('livechat.applyDepartmentRestrictions', conditions, { userId: uid });\n\t}\n\n\tconst conditionsWithArchived = { archived: { $ne: !showArchived }, ...conditions };\n\n\tconst items = await LivechatDepartment.findByNameRegexWithExceptionsAndConditions(selector.term, exceptions, conditionsWithArchived, {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tname: 1,\n\t\t},\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t}).toArray();\n\treturn {\n\t\titems,\n\t};\n}\n\nexport async function findDepartmentAgents({\n\tdepartmentId,\n\tpagination: { offset, count, sort },\n}: FindDepartmentAgentsParams): Promise<PaginatedResult<{ agents: ILivechatDepartmentAgents[] }>> {\n\tconst { cursor, totalCount } = LivechatDepartmentAgents.findAgentsByDepartmentId<ILivechatDepartmentAgents>(departmentId, {\n\t\tsort: sort || { username: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [agents, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tagents,\n\t\tcount: agents.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDepartmentsBetweenIds({\n\tids,\n\tfields,\n}: {\n\tids: string[];\n\tfields: Record<string, unknown>;\n}): Promise<{ departments: ILivechatDepartment[] }> {\n\tconst departments = await LivechatDepartment.findInIds(ids, { projection: fields }).toArray();\n\treturn { departments };\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"776753ab6f2b684a6fa8ed1b903e28eb637775a4"}
