{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/authorization/server/functions/upsertPermissions.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/authorization/server/functions/upsertPermissions.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/authorization/server/functions/upsertPermissions.ts","inputSourceMap":{"version":3,"file":"app/authorization/server/functions/upsertPermissions.ts","sourceRoot":"","sources":["app/authorization/server/functions/upsertPermissions.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAE5D,OAAO,EAAE,gCAAgC,EAAE,MAAM,0DAA0D,CAAC;AAC5G,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,sBAAsB,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAC9D,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAC;AAEtD,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,IAAmB,EAAE;IAC1D,IAAI,KAAK,EAAE,MAAM,UAAU,IAAI,WAAW,EAAE,CAAC;QAC5C,MAAM,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED,MAAM,YAAY,GAAG;QACpB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE;QACvD,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,eAAe,EAAE,WAAW,EAAE,WAAW,EAAE;QACvE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,eAAe,EAAE,WAAW,EAAE,QAAQ,EAAE;QACjE,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,eAAe,EAAE,WAAW,EAAE,OAAO,EAAE;QAC/D,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,EAAE;QACjD,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,EAAE;QAChD,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,EAAE;QAChD,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,EAAE;QAClD,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE,EAAE;QACtD,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE;QACzE,EAAE,IAAI,EAAE,kBAAkB,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,kBAAkB,EAAE;KACpE,CAAC;IAEX,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,YAAY,EAAE,CAAC;QACvC,MAAM,gCAAgC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,MAAM,sBAAsB,GAAG,KAAK,WAAW,SAAkB;QAChE,MAAM,0BAA0B,GAE5B,EAAE,CAAC;QAEP,MAAM,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,UAAuB,EAAE,EAAE;YACxF,0BAA0B,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;QACzD,CAAC,CAAC,CAAC;QACH,OAAO,0BAA0B,CAAC;IACnC,CAAC,CAAC;IAEF,MAAM,uBAAuB,GAAG,KAAK,WACpC,OAAiB,EACjB,0BAEC;QAED,MAAM,YAAY,GAAG,sBAAsB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACzD,MAAM,UAAU,GAA4C;YAC3D,KAAK,EAAE,SAAS,CAAC,cAAwC;YACzD,mGAAmG;YACnG,SAAS,EAAE,OAAO,CAAC,GAAG;YACtB,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,OAAO,EAAE,OAAO,CAAC,OAAO,IAAI,SAAS;YACrC,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,KAAK,EAAE,EAAE;SACT,CAAC;QACF,8CAA8C;QAC9C,IAAI,0BAA0B,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,CAAC;YACrD,UAAU,CAAC,KAAK,GAAG,0BAA0B,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QACnE,CAAC;QACD,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;YACnB,UAAU,CAAC,iBAAiB,GAAG,sBAAsB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACtE,CAAC;QACD,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACrB,UAAU,CAAC,mBAAmB,GAAG,sBAAsB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC1E,CAAC;QAED,MAAM,QAAQ,GAAG,MAAM,WAAW,CAAC,OAAO,CACzC;YACC,GAAG,EAAE,YAAY;YACjB,GAAG,UAAU;SACb,EACD,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAC1B,CAAC;QAEF,IAAI,CAAC,QAAQ,EAAE,CAAC;YACf,IAAI,CAAC;gBACJ,MAAM,WAAW,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YAC5F,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACZ,IAAI,CAAE,CAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;oBAC9C,wFAAwF;oBACxF,4FAA4F;oBAC5F,MAAM,WAAW,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC5F,CAAC;YACF,CAAC;QACF,CAAC;QAED,OAAO,0BAA0B,CAAC,YAAY,CAAC,CAAC;IACjD,CAAC,CAAC;IAEF,MAAM,oCAAoC,GAAG,KAAK;QACjD,MAAM,0BAA0B,GAAG,MAAM,sBAAsB,EAAE,CAAC;QAElE,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,aAAa,EAAE,CAAC,OAAO,EAAE,CAAC;QAC1D,IAAI,KAAK,EAAE,MAAM,OAAO,IAAI,QAAQ,EAAE,CAAC;YACtC,MAAM,uBAAuB,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;QACpE,CAAC;QAED,+CAA+C;QAC/C,IAAI,KAAK,EAAE,MAAM,kBAAkB,IAAI,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,EAAE,CAAC;YAChF,IAAI,0BAA0B,CAAC,cAAc,CAAC,kBAAkB,CAAC,EAAE,CAAC;gBACnE,MAAM,WAAW,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,kBAAkB,EAAE,CAAC,CAAC;YAC1D,CAAC;QACF,CAAC;IACF,CAAC,CAAC;IAEF,qGAAqG;IACrG,MAAM,oCAAoC,EAAE,CAAC;IAE7C,0EAA0E;IAC1E,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE;QACtC,MAAM,0BAA0B,GAAG,MAAM,sBAAsB,CAAC,SAAS,CAAC,CAAC;QAC3E,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YAChC,MAAM,uBAAuB,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;QACpE,CAAC;IACF,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/* eslint no-multi-spaces: 0 */\nimport type { IPermission, ISetting } from '@rocket.chat/core-typings';\nimport { Permissions, Settings } from '@rocket.chat/models';\n\nimport { createOrUpdateProtectedRoleAsync } from '../../../../server/lib/roles/createOrUpdateProtectedRole';\nimport { settings } from '../../../settings/server';\nimport { getSettingPermissionId, CONSTANTS } from '../../lib';\nimport { permissions } from '../constant/permissions';\n\nexport const upsertPermissions = async (): Promise<void> => {\n\tfor await (const permission of permissions) {\n\t\tawait Permissions.create(permission._id, permission.roles);\n\t}\n\n\tconst defaultRoles = [\n\t\t{ name: 'admin', scope: 'Users', description: 'Admin' },\n\t\t{ name: 'moderator', scope: 'Subscriptions', description: 'Moderator' },\n\t\t{ name: 'leader', scope: 'Subscriptions', description: 'Leader' },\n\t\t{ name: 'owner', scope: 'Subscriptions', description: 'Owner' },\n\t\t{ name: 'user', scope: 'Users', description: '' },\n\t\t{ name: 'bot', scope: 'Users', description: '' },\n\t\t{ name: 'app', scope: 'Users', description: '' },\n\t\t{ name: 'guest', scope: 'Users', description: '' },\n\t\t{ name: 'anonymous', scope: 'Users', description: '' },\n\t\t{ name: 'livechat-agent', scope: 'Users', description: 'Livechat Agent' },\n\t\t{ name: 'livechat-manager', scope: 'Users', description: 'Livechat Manager' },\n\t] as const;\n\n\tfor await (const role of defaultRoles) {\n\t\tawait createOrUpdateProtectedRoleAsync(role.name, role);\n\t}\n\n\tconst getPreviousPermissions = async function (settingId?: string): Promise<Record<string, IPermission>> {\n\t\tconst previousSettingPermissions: {\n\t\t\t[key: string]: IPermission;\n\t\t} = {};\n\n\t\tawait Permissions.findByLevel('settings', settingId).forEach((permission: IPermission) => {\n\t\t\tpreviousSettingPermissions[permission._id] = permission;\n\t\t});\n\t\treturn previousSettingPermissions;\n\t};\n\n\tconst createSettingPermission = async function (\n\t\tsetting: ISetting,\n\t\tpreviousSettingPermissions: {\n\t\t\t[key: string]: IPermission;\n\t\t},\n\t): Promise<void> {\n\t\tconst permissionId = getSettingPermissionId(setting._id);\n\t\tconst permission: Omit<IPermission, '_id' | '_updatedAt'> = {\n\t\t\tlevel: CONSTANTS.SETTINGS_LEVEL as 'settings' | undefined,\n\t\t\t// copy those setting-properties which are needed to properly publish the setting-based permissions\n\t\t\tsettingId: setting._id,\n\t\t\tgroup: setting.group,\n\t\t\tsection: setting.section ?? undefined,\n\t\t\tsorter: setting.sorter,\n\t\t\troles: [],\n\t\t};\n\t\t// copy previously assigned roles if available\n\t\tif (previousSettingPermissions[permissionId]?.roles) {\n\t\t\tpermission.roles = previousSettingPermissions[permissionId].roles;\n\t\t}\n\t\tif (setting.group) {\n\t\t\tpermission.groupPermissionId = getSettingPermissionId(setting.group);\n\t\t}\n\t\tif (setting.section) {\n\t\t\tpermission.sectionPermissionId = getSettingPermissionId(setting.section);\n\t\t}\n\n\t\tconst existent = await Permissions.findOne(\n\t\t\t{\n\t\t\t\t_id: permissionId,\n\t\t\t\t...permission,\n\t\t\t},\n\t\t\t{ projection: { _id: 1 } },\n\t\t);\n\n\t\tif (!existent) {\n\t\t\ttry {\n\t\t\t\tawait Permissions.updateOne({ _id: permissionId }, { $set: permission }, { upsert: true });\n\t\t\t} catch (e) {\n\t\t\t\tif (!(e as Error).message.includes('E11000')) {\n\t\t\t\t\t// E11000 refers to a MongoDB error that can occur when using unique indexes for upserts\n\t\t\t\t\t// https://docs.mongodb.com/manual/reference/method/db.collection.update/#use-unique-indexes\n\t\t\t\t\tawait Permissions.updateOne({ _id: permissionId }, { $set: permission }, { upsert: true });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete previousSettingPermissions[permissionId];\n\t};\n\n\tconst createPermissionsForExistingSettings = async function (): Promise<void> {\n\t\tconst previousSettingPermissions = await getPreviousPermissions();\n\n\t\tconst settings = await Settings.findNotHidden().toArray();\n\t\tfor await (const setting of settings) {\n\t\t\tawait createSettingPermission(setting, previousSettingPermissions);\n\t\t}\n\n\t\t// remove permissions for non-existent settings\n\t\tfor await (const obsoletePermission of Object.keys(previousSettingPermissions)) {\n\t\t\tif (previousSettingPermissions.hasOwnProperty(obsoletePermission)) {\n\t\t\t\tawait Permissions.deleteOne({ _id: obsoletePermission });\n\t\t\t}\n\t\t}\n\t};\n\n\t// for each setting which already exists, create a permission to allow changing just this one setting\n\tawait createPermissionsForExistingSettings();\n\n\t// register a callback for settings for be create in higher-level-packages\n\tsettings.on('*', async ([settingId]) => {\n\t\tconst previousSettingPermissions = await getPreviousPermissions(settingId);\n\t\tconst setting = await Settings.findOneById(settingId);\n\t\tif (setting && !setting.hidden) {\n\t\t\tawait createSettingPermission(setting, previousSettingPermissions);\n\t\t}\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/authorization/server/functions/upsertPermissions.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/authorization/server/functions/upsertPermissions.ts","inputSourceMap":{"version":3,"file":"app/authorization/server/functions/upsertPermissions.ts","sourceRoot":"","sources":["app/authorization/server/functions/upsertPermissions.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint no-multi-spaces: 0 */\nimport type { IPermission, ISetting } from '@rocket.chat/core-typings';\nimport { Permissions, Settings } from '@rocket.chat/models';\n\nimport { createOrUpdateProtectedRoleAsync } from '../../../../server/lib/roles/createOrUpdateProtectedRole';\nimport { settings } from '../../../settings/server';\nimport { getSettingPermissionId, CONSTANTS } from '../../lib';\nimport { permissions } from '../constant/permissions';\n\nexport const upsertPermissions = async (): Promise<void> => {\n\tfor await (const permission of permissions) {\n\t\tawait Permissions.create(permission._id, permission.roles);\n\t}\n\n\tconst defaultRoles = [\n\t\t{ name: 'admin', scope: 'Users', description: 'Admin' },\n\t\t{ name: 'moderator', scope: 'Subscriptions', description: 'Moderator' },\n\t\t{ name: 'leader', scope: 'Subscriptions', description: 'Leader' },\n\t\t{ name: 'owner', scope: 'Subscriptions', description: 'Owner' },\n\t\t{ name: 'user', scope: 'Users', description: '' },\n\t\t{ name: 'bot', scope: 'Users', description: '' },\n\t\t{ name: 'app', scope: 'Users', description: '' },\n\t\t{ name: 'guest', scope: 'Users', description: '' },\n\t\t{ name: 'anonymous', scope: 'Users', description: '' },\n\t\t{ name: 'livechat-agent', scope: 'Users', description: 'Livechat Agent' },\n\t\t{ name: 'livechat-manager', scope: 'Users', description: 'Livechat Manager' },\n\t] as const;\n\n\tfor await (const role of defaultRoles) {\n\t\tawait createOrUpdateProtectedRoleAsync(role.name, role);\n\t}\n\n\tconst getPreviousPermissions = async function (settingId?: string): Promise<Record<string, IPermission>> {\n\t\tconst previousSettingPermissions: {\n\t\t\t[key: string]: IPermission;\n\t\t} = {};\n\n\t\tawait Permissions.findByLevel('settings', settingId).forEach((permission: IPermission) => {\n\t\t\tpreviousSettingPermissions[permission._id] = permission;\n\t\t});\n\t\treturn previousSettingPermissions;\n\t};\n\n\tconst createSettingPermission = async function (\n\t\tsetting: ISetting,\n\t\tpreviousSettingPermissions: {\n\t\t\t[key: string]: IPermission;\n\t\t},\n\t): Promise<void> {\n\t\tconst permissionId = getSettingPermissionId(setting._id);\n\t\tconst permission: Omit<IPermission, '_id' | '_updatedAt'> = {\n\t\t\tlevel: CONSTANTS.SETTINGS_LEVEL as 'settings' | undefined,\n\t\t\t// copy those setting-properties which are needed to properly publish the setting-based permissions\n\t\t\tsettingId: setting._id,\n\t\t\tgroup: setting.group,\n\t\t\tsection: setting.section ?? undefined,\n\t\t\tsorter: setting.sorter,\n\t\t\troles: [],\n\t\t};\n\t\t// copy previously assigned roles if available\n\t\tif (previousSettingPermissions[permissionId]?.roles) {\n\t\t\tpermission.roles = previousSettingPermissions[permissionId].roles;\n\t\t}\n\t\tif (setting.group) {\n\t\t\tpermission.groupPermissionId = getSettingPermissionId(setting.group);\n\t\t}\n\t\tif (setting.section) {\n\t\t\tpermission.sectionPermissionId = getSettingPermissionId(setting.section);\n\t\t}\n\n\t\tconst existent = await Permissions.findOne(\n\t\t\t{\n\t\t\t\t_id: permissionId,\n\t\t\t\t...permission,\n\t\t\t},\n\t\t\t{ projection: { _id: 1 } },\n\t\t);\n\n\t\tif (!existent) {\n\t\t\ttry {\n\t\t\t\tawait Permissions.updateOne({ _id: permissionId }, { $set: permission }, { upsert: true });\n\t\t\t} catch (e) {\n\t\t\t\tif (!(e as Error).message.includes('E11000')) {\n\t\t\t\t\t// E11000 refers to a MongoDB error that can occur when using unique indexes for upserts\n\t\t\t\t\t// https://docs.mongodb.com/manual/reference/method/db.collection.update/#use-unique-indexes\n\t\t\t\t\tawait Permissions.updateOne({ _id: permissionId }, { $set: permission }, { upsert: true });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete previousSettingPermissions[permissionId];\n\t};\n\n\tconst createPermissionsForExistingSettings = async function (): Promise<void> {\n\t\tconst previousSettingPermissions = await getPreviousPermissions();\n\n\t\tconst settings = await Settings.findNotHidden().toArray();\n\t\tfor await (const setting of settings) {\n\t\t\tawait createSettingPermission(setting, previousSettingPermissions);\n\t\t}\n\n\t\t// remove permissions for non-existent settings\n\t\tfor await (const obsoletePermission of Object.keys(previousSettingPermissions)) {\n\t\t\tif (previousSettingPermissions.hasOwnProperty(obsoletePermission)) {\n\t\t\t\tawait Permissions.deleteOne({ _id: obsoletePermission });\n\t\t\t}\n\t\t}\n\t};\n\n\t// for each setting which already exists, create a permission to allow changing just this one setting\n\tawait createPermissionsForExistingSettings();\n\n\t// register a callback for settings for be create in higher-level-packages\n\tsettings.on('*', async ([settingId]) => {\n\t\tconst previousSettingPermissions = await getPreviousPermissions(settingId);\n\t\tconst setting = await Settings.findOneById(settingId);\n\t\tif (setting && !setting.hidden) {\n\t\t\tawait createSettingPermission(setting, previousSettingPermissions);\n\t\t}\n\t});\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      upsertPermissions: () => upsertPermissions\n    });\n    let Permissions, Settings;\n    module.link(\"@rocket.chat/models\", {\n      Permissions(v) {\n        Permissions = v;\n      },\n      Settings(v) {\n        Settings = v;\n      }\n    }, 0);\n    let createOrUpdateProtectedRoleAsync;\n    module.link(\"../../../../server/lib/roles/createOrUpdateProtectedRole\", {\n      createOrUpdateProtectedRoleAsync(v) {\n        createOrUpdateProtectedRoleAsync = v;\n      }\n    }, 1);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 2);\n    let getSettingPermissionId, CONSTANTS;\n    module.link(\"../../lib\", {\n      getSettingPermissionId(v) {\n        getSettingPermissionId = v;\n      },\n      CONSTANTS(v) {\n        CONSTANTS = v;\n      }\n    }, 3);\n    let permissions;\n    module.link(\"../constant/permissions\", {\n      permissions(v) {\n        permissions = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const upsertPermissions = async () => {\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(permissions), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const permission = _step.value;\n          {\n            await Permissions.create(permission._id, permission.roles);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      const defaultRoles = [{\n        name: 'admin',\n        scope: 'Users',\n        description: 'Admin'\n      }, {\n        name: 'moderator',\n        scope: 'Subscriptions',\n        description: 'Moderator'\n      }, {\n        name: 'leader',\n        scope: 'Subscriptions',\n        description: 'Leader'\n      }, {\n        name: 'owner',\n        scope: 'Subscriptions',\n        description: 'Owner'\n      }, {\n        name: 'user',\n        scope: 'Users',\n        description: ''\n      }, {\n        name: 'bot',\n        scope: 'Users',\n        description: ''\n      }, {\n        name: 'app',\n        scope: 'Users',\n        description: ''\n      }, {\n        name: 'guest',\n        scope: 'Users',\n        description: ''\n      }, {\n        name: 'anonymous',\n        scope: 'Users',\n        description: ''\n      }, {\n        name: 'livechat-agent',\n        scope: 'Users',\n        description: 'Livechat Agent'\n      }, {\n        name: 'livechat-manager',\n        scope: 'Users',\n        description: 'Livechat Manager'\n      }];\n      var _iteratorAbruptCompletion2 = false;\n      var _didIteratorError2 = false;\n      var _iteratorError2;\n      try {\n        for (var _iterator2 = _asyncIterator(defaultRoles), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n          const role = _step2.value;\n          {\n            await createOrUpdateProtectedRoleAsync(role.name, role);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n            await _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n      const getPreviousPermissions = async function (settingId) {\n        const previousSettingPermissions = {};\n        await Permissions.findByLevel('settings', settingId).forEach(permission => {\n          previousSettingPermissions[permission._id] = permission;\n        });\n        return previousSettingPermissions;\n      };\n      const createSettingPermission = async function (setting, previousSettingPermissions) {\n        var _setting$section, _previousSettingPermi;\n        const permissionId = getSettingPermissionId(setting._id);\n        const permission = {\n          level: CONSTANTS.SETTINGS_LEVEL,\n          // copy those setting-properties which are needed to properly publish the setting-based permissions\n          settingId: setting._id,\n          group: setting.group,\n          section: (_setting$section = setting.section) !== null && _setting$section !== void 0 ? _setting$section : undefined,\n          sorter: setting.sorter,\n          roles: []\n        };\n        // copy previously assigned roles if available\n        if ((_previousSettingPermi = previousSettingPermissions[permissionId]) !== null && _previousSettingPermi !== void 0 && _previousSettingPermi.roles) {\n          permission.roles = previousSettingPermissions[permissionId].roles;\n        }\n        if (setting.group) {\n          permission.groupPermissionId = getSettingPermissionId(setting.group);\n        }\n        if (setting.section) {\n          permission.sectionPermissionId = getSettingPermissionId(setting.section);\n        }\n        const existent = await Permissions.findOne(_objectSpread({\n          _id: permissionId\n        }, permission), {\n          projection: {\n            _id: 1\n          }\n        });\n        if (!existent) {\n          try {\n            await Permissions.updateOne({\n              _id: permissionId\n            }, {\n              $set: permission\n            }, {\n              upsert: true\n            });\n          } catch (e) {\n            if (!e.message.includes('E11000')) {\n              // E11000 refers to a MongoDB error that can occur when using unique indexes for upserts\n              // https://docs.mongodb.com/manual/reference/method/db.collection.update/#use-unique-indexes\n              await Permissions.updateOne({\n                _id: permissionId\n              }, {\n                $set: permission\n              }, {\n                upsert: true\n              });\n            }\n          }\n        }\n        delete previousSettingPermissions[permissionId];\n      };\n      const createPermissionsForExistingSettings = async function () {\n        const previousSettingPermissions = await getPreviousPermissions();\n        const settings = await Settings.findNotHidden().toArray();\n        var _iteratorAbruptCompletion3 = false;\n        var _didIteratorError3 = false;\n        var _iteratorError3;\n        try {\n          for (var _iterator3 = _asyncIterator(settings), _step3; _iteratorAbruptCompletion3 = !(_step3 = await _iterator3.next()).done; _iteratorAbruptCompletion3 = false) {\n            const setting = _step3.value;\n            {\n              await createSettingPermission(setting, previousSettingPermissions);\n            }\n          }\n          // remove permissions for non-existent settings\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion3 && _iterator3.return != null) {\n              await _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n        var _iteratorAbruptCompletion4 = false;\n        var _didIteratorError4 = false;\n        var _iteratorError4;\n        try {\n          for (var _iterator4 = _asyncIterator(Object.keys(previousSettingPermissions)), _step4; _iteratorAbruptCompletion4 = !(_step4 = await _iterator4.next()).done; _iteratorAbruptCompletion4 = false) {\n            const obsoletePermission = _step4.value;\n            {\n              if (previousSettingPermissions.hasOwnProperty(obsoletePermission)) {\n                await Permissions.deleteOne({\n                  _id: obsoletePermission\n                });\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion4 && _iterator4.return != null) {\n              await _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n      };\n      // for each setting which already exists, create a permission to allow changing just this one setting\n      await createPermissionsForExistingSettings();\n      // register a callback for settings for be create in higher-level-packages\n      settings.on('*', async _ref => {\n        let [settingId] = _ref;\n        const previousSettingPermissions = await getPreviousPermissions(settingId);\n        const setting = await Settings.findOneById(settingId);\n        if (setting && !setting.hidden) {\n          await createSettingPermission(setting, previousSettingPermissions);\n        }\n      });\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","upsertPermissions","Permissions","Settings","createOrUpdateProtectedRoleAsync","settings","getSettingPermissionId","CONSTANTS","permissions","__reifyWaitForDeps__","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","permission","value","create","_id","roles","err","return","defaultRoles","name","scope","description","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","role","getPreviousPermissions","settingId","previousSettingPermissions","findByLevel","forEach","createSettingPermission","setting","_setting$section","_previousSettingPermi","permissionId","level","SETTINGS_LEVEL","group","section","undefined","sorter","groupPermissionId","sectionPermissionId","existent","findOne","projection","updateOne","$set","upsert","e","message","includes","createPermissionsForExistingSettings","findNotHidden","toArray","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_iteratorAbruptCompletion4","_didIteratorError4","_iteratorError4","_iterator4","Object","keys","_step4","obsoletePermission","hasOwnProperty","deleteOne","on","_ref","findOneById","hidden","__reify_async_result__","_reifyError","self","async"],"sources":["app/authorization/server/functions/upsertPermissions.ts"],"sourcesContent":["/* eslint no-multi-spaces: 0 */\nimport type { IPermission, ISetting } from '@rocket.chat/core-typings';\nimport { Permissions, Settings } from '@rocket.chat/models';\n\nimport { createOrUpdateProtectedRoleAsync } from '../../../../server/lib/roles/createOrUpdateProtectedRole';\nimport { settings } from '../../../settings/server';\nimport { getSettingPermissionId, CONSTANTS } from '../../lib';\nimport { permissions } from '../constant/permissions';\n\nexport const upsertPermissions = async (): Promise<void> => {\n\tfor await (const permission of permissions) {\n\t\tawait Permissions.create(permission._id, permission.roles);\n\t}\n\n\tconst defaultRoles = [\n\t\t{ name: 'admin', scope: 'Users', description: 'Admin' },\n\t\t{ name: 'moderator', scope: 'Subscriptions', description: 'Moderator' },\n\t\t{ name: 'leader', scope: 'Subscriptions', description: 'Leader' },\n\t\t{ name: 'owner', scope: 'Subscriptions', description: 'Owner' },\n\t\t{ name: 'user', scope: 'Users', description: '' },\n\t\t{ name: 'bot', scope: 'Users', description: '' },\n\t\t{ name: 'app', scope: 'Users', description: '' },\n\t\t{ name: 'guest', scope: 'Users', description: '' },\n\t\t{ name: 'anonymous', scope: 'Users', description: '' },\n\t\t{ name: 'livechat-agent', scope: 'Users', description: 'Livechat Agent' },\n\t\t{ name: 'livechat-manager', scope: 'Users', description: 'Livechat Manager' },\n\t] as const;\n\n\tfor await (const role of defaultRoles) {\n\t\tawait createOrUpdateProtectedRoleAsync(role.name, role);\n\t}\n\n\tconst getPreviousPermissions = async function (settingId?: string): Promise<Record<string, IPermission>> {\n\t\tconst previousSettingPermissions: {\n\t\t\t[key: string]: IPermission;\n\t\t} = {};\n\n\t\tawait Permissions.findByLevel('settings', settingId).forEach((permission: IPermission) => {\n\t\t\tpreviousSettingPermissions[permission._id] = permission;\n\t\t});\n\t\treturn previousSettingPermissions;\n\t};\n\n\tconst createSettingPermission = async function (\n\t\tsetting: ISetting,\n\t\tpreviousSettingPermissions: {\n\t\t\t[key: string]: IPermission;\n\t\t},\n\t): Promise<void> {\n\t\tconst permissionId = getSettingPermissionId(setting._id);\n\t\tconst permission: Omit<IPermission, '_id' | '_updatedAt'> = {\n\t\t\tlevel: CONSTANTS.SETTINGS_LEVEL as 'settings' | undefined,\n\t\t\t// copy those setting-properties which are needed to properly publish the setting-based permissions\n\t\t\tsettingId: setting._id,\n\t\t\tgroup: setting.group,\n\t\t\tsection: setting.section ?? undefined,\n\t\t\tsorter: setting.sorter,\n\t\t\troles: [],\n\t\t};\n\t\t// copy previously assigned roles if available\n\t\tif (previousSettingPermissions[permissionId]?.roles) {\n\t\t\tpermission.roles = previousSettingPermissions[permissionId].roles;\n\t\t}\n\t\tif (setting.group) {\n\t\t\tpermission.groupPermissionId = getSettingPermissionId(setting.group);\n\t\t}\n\t\tif (setting.section) {\n\t\t\tpermission.sectionPermissionId = getSettingPermissionId(setting.section);\n\t\t}\n\n\t\tconst existent = await Permissions.findOne(\n\t\t\t{\n\t\t\t\t_id: permissionId,\n\t\t\t\t...permission,\n\t\t\t},\n\t\t\t{ projection: { _id: 1 } },\n\t\t);\n\n\t\tif (!existent) {\n\t\t\ttry {\n\t\t\t\tawait Permissions.updateOne({ _id: permissionId }, { $set: permission }, { upsert: true });\n\t\t\t} catch (e) {\n\t\t\t\tif (!(e as Error).message.includes('E11000')) {\n\t\t\t\t\t// E11000 refers to a MongoDB error that can occur when using unique indexes for upserts\n\t\t\t\t\t// https://docs.mongodb.com/manual/reference/method/db.collection.update/#use-unique-indexes\n\t\t\t\t\tawait Permissions.updateOne({ _id: permissionId }, { $set: permission }, { upsert: true });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete previousSettingPermissions[permissionId];\n\t};\n\n\tconst createPermissionsForExistingSettings = async function (): Promise<void> {\n\t\tconst previousSettingPermissions = await getPreviousPermissions();\n\n\t\tconst settings = await Settings.findNotHidden().toArray();\n\t\tfor await (const setting of settings) {\n\t\t\tawait createSettingPermission(setting, previousSettingPermissions);\n\t\t}\n\n\t\t// remove permissions for non-existent settings\n\t\tfor await (const obsoletePermission of Object.keys(previousSettingPermissions)) {\n\t\t\tif (previousSettingPermissions.hasOwnProperty(obsoletePermission)) {\n\t\t\t\tawait Permissions.deleteOne({ _id: obsoletePermission });\n\t\t\t}\n\t\t}\n\t};\n\n\t// for each setting which already exists, create a permission to allow changing just this one setting\n\tawait createPermissionsForExistingSettings();\n\n\t// register a callback for settings for be create in higher-level-packages\n\tsettings.on('*', async ([settingId]) => {\n\t\tconst previousSettingPermissions = await getPreviousPermissions(settingId);\n\t\tconst setting = await Settings.findOneById(settingId);\n\t\tif (setting && !setting.hidden) {\n\t\t\tawait createSettingPermission(setting, previousSettingPermissions);\n\t\t}\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"65ca232a4a221e845c79a943094bf6818212e2ff"}
