{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/voip-asterisk/connector/asterisk/ami/ACDQueue.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/voip-asterisk/connector/asterisk/ami/ACDQueue.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/voip-asterisk/connector/asterisk/ami/ACDQueue.ts","inputSourceMap":{"version":3,"file":"server/services/voip-asterisk/connector/asterisk/ami/ACDQueue.ts","sourceRoot":"","sources":["server/services/voip-asterisk/connector/asterisk/ami/ACDQueue.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * This class is responsible for handling ACD Queue summary\n * @remarks\n */\nimport type { IVoipConnectorResult } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport type { Db } from 'mongodb';\n\nimport { Command, CommandType } from '../Command';\nimport { Commands } from '../Commands';\nimport { CallbackContext } from './CallbackContext';\n\nexport class ACDQueue extends Command {\n\tprivate logger: Logger;\n\n\tconstructor(command: string, parametersNeeded: boolean, db: Db) {\n\t\tsuper(command, parametersNeeded, db);\n\t\tthis._type = CommandType.AMI;\n\t\tthis.logger = new Logger('ACDQueue');\n\t}\n\n\tonQueueSummary(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueSummary() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst queue = {\n\t\t\tname: event.queue,\n\t\t\tloggedin: event.loggedin,\n\t\t\tavailable: event.available,\n\t\t\tcallers: event.callers,\n\t\t\tholdtime: event.holdtime,\n\t\t\ttalktime: event.talktime,\n\t\t\tlogestholdtime: event.logestholdtime,\n\t\t};\n\t\tconst { result } = this;\n\t\tif (result.queueSummary) {\n\t\t\tresult.queueSummary.push(queue);\n\t\t} else {\n\t\t\tresult.queueSummary = [];\n\t\t\tresult.queueSummary.push(queue);\n\t\t}\n\t}\n\n\tonQueueSummaryComplete(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueSummaryComplete() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis.resetEventHandlers();\n\t\tconst { result } = this;\n\t\tif (!result.queueSummary) {\n\t\t\tthis.logger.info({ msg: 'No Queues available' });\n\t\t\tresult.queueSummary = [];\n\t\t}\n\t\tthis.returnResolve({ result: result.queueSummary } as IVoipConnectorResult);\n\t}\n\n\t/**  Callback for receiving Queue parameters for queuestatus action.\n\t *\n\t */\n\tonQueueParams(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueParams() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst queue = {\n\t\t\tname: event.queue,\n\t\t\tstrategy: event.strategy,\n\t\t\tcalls: event.calls,\n\t\t\tholdtime: event.holdtime,\n\t\t\ttalktime: event.talktime,\n\t\t\tcompleted: event.completed,\n\t\t\tabandoned: event.abandoned,\n\t\t\tlogestholdtime: event.logestholdtime,\n\t\t};\n\t\tthis.result.queueStatus = queue;\n\t}\n\n\t/**  Callback for receiving Queue members for queuestatus action.\n\t *\n\t */\n\tonQueueMember(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueMember() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst member = {\n\t\t\tname: event.name,\n\t\t\tlocation: event.location,\n\t\t\tstateinterface: event.stateinterface,\n\t\t\tmembership: event.membership,\n\t\t\tpenalty: event.penalty,\n\t\t\tcallstaken: event.callstaken,\n\t\t\tlastcall: event.lastcall,\n\t\t\tlastpause: event.lastpause,\n\t\t\tincall: event.incall,\n\t\t\tstatus: event.status,\n\t\t\tpaused: event.paused,\n\t\t\tpausedreason: event.pausedreason,\n\t\t\twrapuptime: event.wrapuptime,\n\t\t};\n\t\tif (this.result.queueStatus.name !== event.queue) {\n\t\t\tthis.logger.error({ msg: `onQueueMember() : Unknown error. Queue ${event.queue} not found` });\n\t\t} else {\n\t\t\tif (!this.result.queueStatus.members) {\n\t\t\t\tthis.result.queueStatus.members = [];\n\t\t\t}\n\t\t\tthis.result.queueStatus.members.push(member);\n\t\t}\n\t}\n\n\t/**  Callback when all the data is received for queuestatus action.\n\t *\n\t */\n\tonQueueStatusComplete(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueStatusComplete() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis.resetEventHandlers();\n\t\tconst { result } = this;\n\t\tthis.returnResolve({ result: result.queueStatus } as IVoipConnectorResult);\n\t}\n\n\t/**\n\t * Callback for indicatiing command execution status.\n\t * Received actionid for the first time.\n\t */\n\tonActionResult(error: any, result: any): void {\n\t\tif (error) {\n\t\t\tthis.logger.error({ msg: 'onActionResult()', error: JSON.stringify(error) });\n\t\t\tthis.returnReject(`error${error} while executing command`);\n\t\t} else {\n\t\t\t// Set up actionid for future reference in case of success.\n\t\t\tthis.actionid = result.actionid;\n\t\t}\n\t}\n\n\tsetupEventHandlers(): void {\n\t\t// Setup necessary command event handlers based on the command\n\t\tswitch (this.commandText) {\n\t\t\tcase Commands.queue_summary.toString(): {\n\t\t\t\tthis.connection.on('queuesummary', new CallbackContext(this.onQueueSummary.bind(this), this));\n\t\t\t\tthis.connection.on('queuesummarycomplete', new CallbackContext(this.onQueueSummaryComplete.bind(this), this));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Commands.queue_details.toString(): {\n\t\t\t\tthis.connection.on('queueparams', new CallbackContext(this.onQueueParams.bind(this), this));\n\t\t\t\tthis.connection.on('queuemember', new CallbackContext(this.onQueueMember.bind(this), this));\n\t\t\t\tthis.connection.on('queuestatuscomplete', new CallbackContext(this.onQueueStatusComplete.bind(this), this));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthis.logger.error({ msg: `setupEventHandlers() : Unimplemented ${this.commandText}` });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tresetEventHandlers(): void {\n\t\tswitch (this.commandText) {\n\t\t\tcase Commands.queue_summary.toString(): {\n\t\t\t\tthis.connection.off('queuesummary', this);\n\t\t\t\tthis.connection.off('queuesummarycomplete', this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Commands.queue_details.toString(): {\n\t\t\t\tthis.connection.off('queueparams', this);\n\t\t\t\tthis.connection.off('queuemember', this);\n\t\t\t\tthis.connection.off('queuestatuscomplete', this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthis.logger.error({ msg: `resetEventHandlers() : Unimplemented ${this.commandText}` });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync executeCommand(data: any): Promise<IVoipConnectorResult> {\n\t\tlet amiCommand = {};\n\t\t// set up the specific action based on the value of |Commands|\n\t\tif (this.commandText === Commands.queue_summary.toString()) {\n\t\t\tamiCommand = {\n\t\t\t\taction: 'queuesummary',\n\t\t\t};\n\t\t} else if (this.commandText === Commands.queue_details.toString()) {\n\t\t\tamiCommand = {\n\t\t\t\taction: 'queuestatus',\n\t\t\t\tqueue: data.queueName,\n\t\t\t};\n\t\t}\n\t\tthis.logger.debug({ msg: `Executing AMI command ${JSON.stringify(amiCommand)}`, data });\n\t\tconst actionResultCallback = this.onActionResult.bind(this);\n\t\tconst eventHandlerSetupCallback = this.setupEventHandlers.bind(this);\n\t\treturn super.prepareCommandAndExecution(amiCommand, actionResultCallback, eventHandlerSetupCallback);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/voip-asterisk/connector/asterisk/ami/ACDQueue.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/voip-asterisk/connector/asterisk/ami/ACDQueue.ts","inputSourceMap":{"version":3,"file":"server/services/voip-asterisk/connector/asterisk/ami/ACDQueue.ts","sourceRoot":"","sources":["server/services/voip-asterisk/connector/asterisk/ami/ACDQueue.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * This class is responsible for handling ACD Queue summary\n * @remarks\n */\nimport type { IVoipConnectorResult } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport type { Db } from 'mongodb';\n\nimport { Command, CommandType } from '../Command';\nimport { Commands } from '../Commands';\nimport { CallbackContext } from './CallbackContext';\n\nexport class ACDQueue extends Command {\n\tprivate logger: Logger;\n\n\tconstructor(command: string, parametersNeeded: boolean, db: Db) {\n\t\tsuper(command, parametersNeeded, db);\n\t\tthis._type = CommandType.AMI;\n\t\tthis.logger = new Logger('ACDQueue');\n\t}\n\n\tonQueueSummary(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueSummary() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst queue = {\n\t\t\tname: event.queue,\n\t\t\tloggedin: event.loggedin,\n\t\t\tavailable: event.available,\n\t\t\tcallers: event.callers,\n\t\t\tholdtime: event.holdtime,\n\t\t\ttalktime: event.talktime,\n\t\t\tlogestholdtime: event.logestholdtime,\n\t\t};\n\t\tconst { result } = this;\n\t\tif (result.queueSummary) {\n\t\t\tresult.queueSummary.push(queue);\n\t\t} else {\n\t\t\tresult.queueSummary = [];\n\t\t\tresult.queueSummary.push(queue);\n\t\t}\n\t}\n\n\tonQueueSummaryComplete(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueSummaryComplete() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis.resetEventHandlers();\n\t\tconst { result } = this;\n\t\tif (!result.queueSummary) {\n\t\t\tthis.logger.info({ msg: 'No Queues available' });\n\t\t\tresult.queueSummary = [];\n\t\t}\n\t\tthis.returnResolve({ result: result.queueSummary } as IVoipConnectorResult);\n\t}\n\n\t/**  Callback for receiving Queue parameters for queuestatus action.\n\t *\n\t */\n\tonQueueParams(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueParams() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst queue = {\n\t\t\tname: event.queue,\n\t\t\tstrategy: event.strategy,\n\t\t\tcalls: event.calls,\n\t\t\tholdtime: event.holdtime,\n\t\t\ttalktime: event.talktime,\n\t\t\tcompleted: event.completed,\n\t\t\tabandoned: event.abandoned,\n\t\t\tlogestholdtime: event.logestholdtime,\n\t\t};\n\t\tthis.result.queueStatus = queue;\n\t}\n\n\t/**  Callback for receiving Queue members for queuestatus action.\n\t *\n\t */\n\tonQueueMember(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueMember() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst member = {\n\t\t\tname: event.name,\n\t\t\tlocation: event.location,\n\t\t\tstateinterface: event.stateinterface,\n\t\t\tmembership: event.membership,\n\t\t\tpenalty: event.penalty,\n\t\t\tcallstaken: event.callstaken,\n\t\t\tlastcall: event.lastcall,\n\t\t\tlastpause: event.lastpause,\n\t\t\tincall: event.incall,\n\t\t\tstatus: event.status,\n\t\t\tpaused: event.paused,\n\t\t\tpausedreason: event.pausedreason,\n\t\t\twrapuptime: event.wrapuptime,\n\t\t};\n\t\tif (this.result.queueStatus.name !== event.queue) {\n\t\t\tthis.logger.error({ msg: `onQueueMember() : Unknown error. Queue ${event.queue} not found` });\n\t\t} else {\n\t\t\tif (!this.result.queueStatus.members) {\n\t\t\t\tthis.result.queueStatus.members = [];\n\t\t\t}\n\t\t\tthis.result.queueStatus.members.push(member);\n\t\t}\n\t}\n\n\t/**  Callback when all the data is received for queuestatus action.\n\t *\n\t */\n\tonQueueStatusComplete(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueStatusComplete() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis.resetEventHandlers();\n\t\tconst { result } = this;\n\t\tthis.returnResolve({ result: result.queueStatus } as IVoipConnectorResult);\n\t}\n\n\t/**\n\t * Callback for indicatiing command execution status.\n\t * Received actionid for the first time.\n\t */\n\tonActionResult(error: any, result: any): void {\n\t\tif (error) {\n\t\t\tthis.logger.error({ msg: 'onActionResult()', error: JSON.stringify(error) });\n\t\t\tthis.returnReject(`error${error} while executing command`);\n\t\t} else {\n\t\t\t// Set up actionid for future reference in case of success.\n\t\t\tthis.actionid = result.actionid;\n\t\t}\n\t}\n\n\tsetupEventHandlers(): void {\n\t\t// Setup necessary command event handlers based on the command\n\t\tswitch (this.commandText) {\n\t\t\tcase Commands.queue_summary.toString(): {\n\t\t\t\tthis.connection.on('queuesummary', new CallbackContext(this.onQueueSummary.bind(this), this));\n\t\t\t\tthis.connection.on('queuesummarycomplete', new CallbackContext(this.onQueueSummaryComplete.bind(this), this));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Commands.queue_details.toString(): {\n\t\t\t\tthis.connection.on('queueparams', new CallbackContext(this.onQueueParams.bind(this), this));\n\t\t\t\tthis.connection.on('queuemember', new CallbackContext(this.onQueueMember.bind(this), this));\n\t\t\t\tthis.connection.on('queuestatuscomplete', new CallbackContext(this.onQueueStatusComplete.bind(this), this));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthis.logger.error({ msg: `setupEventHandlers() : Unimplemented ${this.commandText}` });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tresetEventHandlers(): void {\n\t\tswitch (this.commandText) {\n\t\t\tcase Commands.queue_summary.toString(): {\n\t\t\t\tthis.connection.off('queuesummary', this);\n\t\t\t\tthis.connection.off('queuesummarycomplete', this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Commands.queue_details.toString(): {\n\t\t\t\tthis.connection.off('queueparams', this);\n\t\t\t\tthis.connection.off('queuemember', this);\n\t\t\t\tthis.connection.off('queuestatuscomplete', this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthis.logger.error({ msg: `resetEventHandlers() : Unimplemented ${this.commandText}` });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync executeCommand(data: any): Promise<IVoipConnectorResult> {\n\t\tlet amiCommand = {};\n\t\t// set up the specific action based on the value of |Commands|\n\t\tif (this.commandText === Commands.queue_summary.toString()) {\n\t\t\tamiCommand = {\n\t\t\t\taction: 'queuesummary',\n\t\t\t};\n\t\t} else if (this.commandText === Commands.queue_details.toString()) {\n\t\t\tamiCommand = {\n\t\t\t\taction: 'queuestatus',\n\t\t\t\tqueue: data.queueName,\n\t\t\t};\n\t\t}\n\t\tthis.logger.debug({ msg: `Executing AMI command ${JSON.stringify(amiCommand)}`, data });\n\t\tconst actionResultCallback = this.onActionResult.bind(this);\n\t\tconst eventHandlerSetupCallback = this.setupEventHandlers.bind(this);\n\t\treturn super.prepareCommandAndExecution(amiCommand, actionResultCallback, eventHandlerSetupCallback);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      ACDQueue: () => ACDQueue\n    });\n    let Logger;\n    module.link(\"@rocket.chat/logger\", {\n      Logger(v) {\n        Logger = v;\n      }\n    }, 0);\n    let Command, CommandType;\n    module.link(\"../Command\", {\n      Command(v) {\n        Command = v;\n      },\n      CommandType(v) {\n        CommandType = v;\n      }\n    }, 1);\n    let Commands;\n    module.link(\"../Commands\", {\n      Commands(v) {\n        Commands = v;\n      }\n    }, 2);\n    let CallbackContext;\n    module.link(\"./CallbackContext\", {\n      CallbackContext(v) {\n        CallbackContext = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class ACDQueue extends Command {\n      constructor(command, parametersNeeded, db) {\n        super(command, parametersNeeded, db);\n        this.logger = void 0;\n        this._type = CommandType.AMI;\n        this.logger = new Logger('ACDQueue');\n      }\n      onQueueSummary(event) {\n        if (event.actionid !== this.actionid) {\n          this.logger.error({\n            msg: 'onQueueSummary() Unusual behavior. ActionId does not belong to this object',\n            eventActionId: event.actionid,\n            actionId: this.actionid\n          });\n          return;\n        }\n        const queue = {\n          name: event.queue,\n          loggedin: event.loggedin,\n          available: event.available,\n          callers: event.callers,\n          holdtime: event.holdtime,\n          talktime: event.talktime,\n          logestholdtime: event.logestholdtime\n        };\n        const {\n          result\n        } = this;\n        if (result.queueSummary) {\n          result.queueSummary.push(queue);\n        } else {\n          result.queueSummary = [];\n          result.queueSummary.push(queue);\n        }\n      }\n      onQueueSummaryComplete(event) {\n        if (event.actionid !== this.actionid) {\n          this.logger.error({\n            msg: 'onQueueSummaryComplete() Unusual behavior. ActionId does not belong to this object',\n            eventActionId: event.actionid,\n            actionId: this.actionid\n          });\n          return;\n        }\n        this.resetEventHandlers();\n        const {\n          result\n        } = this;\n        if (!result.queueSummary) {\n          this.logger.info({\n            msg: 'No Queues available'\n          });\n          result.queueSummary = [];\n        }\n        this.returnResolve({\n          result: result.queueSummary\n        });\n      }\n      /**  Callback for receiving Queue parameters for queuestatus action.\n       *\n       */\n      onQueueParams(event) {\n        if (event.actionid !== this.actionid) {\n          this.logger.error({\n            msg: 'onQueueParams() Unusual behavior. ActionId does not belong to this object',\n            eventActionId: event.actionid,\n            actionId: this.actionid\n          });\n          return;\n        }\n        const queue = {\n          name: event.queue,\n          strategy: event.strategy,\n          calls: event.calls,\n          holdtime: event.holdtime,\n          talktime: event.talktime,\n          completed: event.completed,\n          abandoned: event.abandoned,\n          logestholdtime: event.logestholdtime\n        };\n        this.result.queueStatus = queue;\n      }\n      /**  Callback for receiving Queue members for queuestatus action.\n       *\n       */\n      onQueueMember(event) {\n        if (event.actionid !== this.actionid) {\n          this.logger.error({\n            msg: 'onQueueMember() Unusual behavior. ActionId does not belong to this object',\n            eventActionId: event.actionid,\n            actionId: this.actionid\n          });\n          return;\n        }\n        const member = {\n          name: event.name,\n          location: event.location,\n          stateinterface: event.stateinterface,\n          membership: event.membership,\n          penalty: event.penalty,\n          callstaken: event.callstaken,\n          lastcall: event.lastcall,\n          lastpause: event.lastpause,\n          incall: event.incall,\n          status: event.status,\n          paused: event.paused,\n          pausedreason: event.pausedreason,\n          wrapuptime: event.wrapuptime\n        };\n        if (this.result.queueStatus.name !== event.queue) {\n          this.logger.error({\n            msg: \"onQueueMember() : Unknown error. Queue \".concat(event.queue, \" not found\")\n          });\n        } else {\n          if (!this.result.queueStatus.members) {\n            this.result.queueStatus.members = [];\n          }\n          this.result.queueStatus.members.push(member);\n        }\n      }\n      /**  Callback when all the data is received for queuestatus action.\n       *\n       */\n      onQueueStatusComplete(event) {\n        if (event.actionid !== this.actionid) {\n          this.logger.error({\n            msg: 'onQueueStatusComplete() Unusual behavior. ActionId does not belong to this object',\n            eventActionId: event.actionid,\n            actionId: this.actionid\n          });\n          return;\n        }\n        this.resetEventHandlers();\n        const {\n          result\n        } = this;\n        this.returnResolve({\n          result: result.queueStatus\n        });\n      }\n      /**\n       * Callback for indicatiing command execution status.\n       * Received actionid for the first time.\n       */\n      onActionResult(error, result) {\n        if (error) {\n          this.logger.error({\n            msg: 'onActionResult()',\n            error: JSON.stringify(error)\n          });\n          this.returnReject(\"error\".concat(error, \" while executing command\"));\n        } else {\n          // Set up actionid for future reference in case of success.\n          this.actionid = result.actionid;\n        }\n      }\n      setupEventHandlers() {\n        // Setup necessary command event handlers based on the command\n        switch (this.commandText) {\n          case Commands.queue_summary.toString():\n            {\n              this.connection.on('queuesummary', new CallbackContext(this.onQueueSummary.bind(this), this));\n              this.connection.on('queuesummarycomplete', new CallbackContext(this.onQueueSummaryComplete.bind(this), this));\n              break;\n            }\n          case Commands.queue_details.toString():\n            {\n              this.connection.on('queueparams', new CallbackContext(this.onQueueParams.bind(this), this));\n              this.connection.on('queuemember', new CallbackContext(this.onQueueMember.bind(this), this));\n              this.connection.on('queuestatuscomplete', new CallbackContext(this.onQueueStatusComplete.bind(this), this));\n              break;\n            }\n          default:\n            {\n              this.logger.error({\n                msg: \"setupEventHandlers() : Unimplemented \".concat(this.commandText)\n              });\n              break;\n            }\n        }\n      }\n      resetEventHandlers() {\n        switch (this.commandText) {\n          case Commands.queue_summary.toString():\n            {\n              this.connection.off('queuesummary', this);\n              this.connection.off('queuesummarycomplete', this);\n              break;\n            }\n          case Commands.queue_details.toString():\n            {\n              this.connection.off('queueparams', this);\n              this.connection.off('queuemember', this);\n              this.connection.off('queuestatuscomplete', this);\n              break;\n            }\n          default:\n            {\n              this.logger.error({\n                msg: \"resetEventHandlers() : Unimplemented \".concat(this.commandText)\n              });\n              break;\n            }\n        }\n      }\n      async executeCommand(data) {\n        let amiCommand = {};\n        // set up the specific action based on the value of |Commands|\n        if (this.commandText === Commands.queue_summary.toString()) {\n          amiCommand = {\n            action: 'queuesummary'\n          };\n        } else if (this.commandText === Commands.queue_details.toString()) {\n          amiCommand = {\n            action: 'queuestatus',\n            queue: data.queueName\n          };\n        }\n        this.logger.debug({\n          msg: \"Executing AMI command \".concat(JSON.stringify(amiCommand)),\n          data\n        });\n        const actionResultCallback = this.onActionResult.bind(this);\n        const eventHandlerSetupCallback = this.setupEventHandlers.bind(this);\n        return super.prepareCommandAndExecution(amiCommand, actionResultCallback, eventHandlerSetupCallback);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","ACDQueue","Logger","link","v","Command","CommandType","Commands","CallbackContext","__reifyWaitForDeps__","constructor","command","parametersNeeded","db","logger","_type","AMI","onQueueSummary","event","actionid","error","msg","eventActionId","actionId","queue","name","loggedin","available","callers","holdtime","talktime","logestholdtime","result","queueSummary","push","onQueueSummaryComplete","resetEventHandlers","info","returnResolve","onQueueParams","strategy","calls","completed","abandoned","queueStatus","onQueueMember","member","location","stateinterface","membership","penalty","callstaken","lastcall","lastpause","incall","status","paused","pausedreason","wrapuptime","concat","members","onQueueStatusComplete","onActionResult","JSON","stringify","returnReject","setupEventHandlers","commandText","queue_summary","toString","connection","on","bind","queue_details","off","executeCommand","data","amiCommand","action","queueName","debug","actionResultCallback","eventHandlerSetupCallback","prepareCommandAndExecution","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/voip-asterisk/connector/asterisk/ami/ACDQueue.ts"],"sourcesContent":["/**\n * This class is responsible for handling ACD Queue summary\n * @remarks\n */\nimport type { IVoipConnectorResult } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport type { Db } from 'mongodb';\n\nimport { Command, CommandType } from '../Command';\nimport { Commands } from '../Commands';\nimport { CallbackContext } from './CallbackContext';\n\nexport class ACDQueue extends Command {\n\tprivate logger: Logger;\n\n\tconstructor(command: string, parametersNeeded: boolean, db: Db) {\n\t\tsuper(command, parametersNeeded, db);\n\t\tthis._type = CommandType.AMI;\n\t\tthis.logger = new Logger('ACDQueue');\n\t}\n\n\tonQueueSummary(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueSummary() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst queue = {\n\t\t\tname: event.queue,\n\t\t\tloggedin: event.loggedin,\n\t\t\tavailable: event.available,\n\t\t\tcallers: event.callers,\n\t\t\tholdtime: event.holdtime,\n\t\t\ttalktime: event.talktime,\n\t\t\tlogestholdtime: event.logestholdtime,\n\t\t};\n\t\tconst { result } = this;\n\t\tif (result.queueSummary) {\n\t\t\tresult.queueSummary.push(queue);\n\t\t} else {\n\t\t\tresult.queueSummary = [];\n\t\t\tresult.queueSummary.push(queue);\n\t\t}\n\t}\n\n\tonQueueSummaryComplete(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueSummaryComplete() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis.resetEventHandlers();\n\t\tconst { result } = this;\n\t\tif (!result.queueSummary) {\n\t\t\tthis.logger.info({ msg: 'No Queues available' });\n\t\t\tresult.queueSummary = [];\n\t\t}\n\t\tthis.returnResolve({ result: result.queueSummary } as IVoipConnectorResult);\n\t}\n\n\t/**  Callback for receiving Queue parameters for queuestatus action.\n\t *\n\t */\n\tonQueueParams(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueParams() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst queue = {\n\t\t\tname: event.queue,\n\t\t\tstrategy: event.strategy,\n\t\t\tcalls: event.calls,\n\t\t\tholdtime: event.holdtime,\n\t\t\ttalktime: event.talktime,\n\t\t\tcompleted: event.completed,\n\t\t\tabandoned: event.abandoned,\n\t\t\tlogestholdtime: event.logestholdtime,\n\t\t};\n\t\tthis.result.queueStatus = queue;\n\t}\n\n\t/**  Callback for receiving Queue members for queuestatus action.\n\t *\n\t */\n\tonQueueMember(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueMember() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst member = {\n\t\t\tname: event.name,\n\t\t\tlocation: event.location,\n\t\t\tstateinterface: event.stateinterface,\n\t\t\tmembership: event.membership,\n\t\t\tpenalty: event.penalty,\n\t\t\tcallstaken: event.callstaken,\n\t\t\tlastcall: event.lastcall,\n\t\t\tlastpause: event.lastpause,\n\t\t\tincall: event.incall,\n\t\t\tstatus: event.status,\n\t\t\tpaused: event.paused,\n\t\t\tpausedreason: event.pausedreason,\n\t\t\twrapuptime: event.wrapuptime,\n\t\t};\n\t\tif (this.result.queueStatus.name !== event.queue) {\n\t\t\tthis.logger.error({ msg: `onQueueMember() : Unknown error. Queue ${event.queue} not found` });\n\t\t} else {\n\t\t\tif (!this.result.queueStatus.members) {\n\t\t\t\tthis.result.queueStatus.members = [];\n\t\t\t}\n\t\t\tthis.result.queueStatus.members.push(member);\n\t\t}\n\t}\n\n\t/**  Callback when all the data is received for queuestatus action.\n\t *\n\t */\n\tonQueueStatusComplete(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueStatusComplete() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis.resetEventHandlers();\n\t\tconst { result } = this;\n\t\tthis.returnResolve({ result: result.queueStatus } as IVoipConnectorResult);\n\t}\n\n\t/**\n\t * Callback for indicatiing command execution status.\n\t * Received actionid for the first time.\n\t */\n\tonActionResult(error: any, result: any): void {\n\t\tif (error) {\n\t\t\tthis.logger.error({ msg: 'onActionResult()', error: JSON.stringify(error) });\n\t\t\tthis.returnReject(`error${error} while executing command`);\n\t\t} else {\n\t\t\t// Set up actionid for future reference in case of success.\n\t\t\tthis.actionid = result.actionid;\n\t\t}\n\t}\n\n\tsetupEventHandlers(): void {\n\t\t// Setup necessary command event handlers based on the command\n\t\tswitch (this.commandText) {\n\t\t\tcase Commands.queue_summary.toString(): {\n\t\t\t\tthis.connection.on('queuesummary', new CallbackContext(this.onQueueSummary.bind(this), this));\n\t\t\t\tthis.connection.on('queuesummarycomplete', new CallbackContext(this.onQueueSummaryComplete.bind(this), this));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Commands.queue_details.toString(): {\n\t\t\t\tthis.connection.on('queueparams', new CallbackContext(this.onQueueParams.bind(this), this));\n\t\t\t\tthis.connection.on('queuemember', new CallbackContext(this.onQueueMember.bind(this), this));\n\t\t\t\tthis.connection.on('queuestatuscomplete', new CallbackContext(this.onQueueStatusComplete.bind(this), this));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthis.logger.error({ msg: `setupEventHandlers() : Unimplemented ${this.commandText}` });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tresetEventHandlers(): void {\n\t\tswitch (this.commandText) {\n\t\t\tcase Commands.queue_summary.toString(): {\n\t\t\t\tthis.connection.off('queuesummary', this);\n\t\t\t\tthis.connection.off('queuesummarycomplete', this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Commands.queue_details.toString(): {\n\t\t\t\tthis.connection.off('queueparams', this);\n\t\t\t\tthis.connection.off('queuemember', this);\n\t\t\t\tthis.connection.off('queuestatuscomplete', this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthis.logger.error({ msg: `resetEventHandlers() : Unimplemented ${this.commandText}` });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync executeCommand(data: any): Promise<IVoipConnectorResult> {\n\t\tlet amiCommand = {};\n\t\t// set up the specific action based on the value of |Commands|\n\t\tif (this.commandText === Commands.queue_summary.toString()) {\n\t\t\tamiCommand = {\n\t\t\t\taction: 'queuesummary',\n\t\t\t};\n\t\t} else if (this.commandText === Commands.queue_details.toString()) {\n\t\t\tamiCommand = {\n\t\t\t\taction: 'queuestatus',\n\t\t\t\tqueue: data.queueName,\n\t\t\t};\n\t\t}\n\t\tthis.logger.debug({ msg: `Executing AMI command ${JSON.stringify(amiCommand)}`, data });\n\t\tconst actionResultCallback = this.onActionResult.bind(this);\n\t\tconst eventHandlerSetupCallback = this.setupEventHandlers.bind(this);\n\t\treturn super.prepareCommandAndExecution(amiCommand, actionResultCallback, eventHandlerSetupCallback);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0f3218a8a57afda16030bb36a4db3046b0312188"}
