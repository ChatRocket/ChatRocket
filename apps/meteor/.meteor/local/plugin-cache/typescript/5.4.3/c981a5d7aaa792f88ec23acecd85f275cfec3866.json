{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/ufs/ufs-store.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/ufs/ufs-store.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/ufs/ufs-store.ts","inputSourceMap":{"version":3,"file":"server/ufs/ufs-store.ts","sourceRoot":"","sources":["server/ufs/ufs-store.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport type * as http from 'http';\nimport type stream from 'stream';\n\nimport type { IUpload } from '@rocket.chat/core-typings';\nimport type { IBaseUploadsModel } from '@rocket.chat/model-typings';\nimport type createServer from 'connect';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport type { OptionalId } from 'mongodb';\n\nimport { UploadFS } from '.';\nimport { Filter } from './ufs-filter';\n\nexport type StoreOptions = {\n\tcollection?: IBaseUploadsModel<IUpload>;\n\tfilter?: Filter;\n\tname: string;\n\tonCopyError?: (err: any, fileId: string, file: IUpload) => void;\n\tonFinishUpload?: (file: IUpload) => Promise<void>;\n\tonRead?: (fileId: string, file: IUpload, request: any, response: any) => Promise<boolean>;\n\tonReadError?: (err: any, fileId: string, file: IUpload) => void;\n\tonValidate?: (file: IUpload) => Promise<void>;\n\tonWriteError?: (err: any, fileId: string, file: IUpload) => void;\n\ttransformRead?: (\n\t\treadStream: stream.Readable,\n\t\twriteStream: stream.Writable,\n\t\tfileId: string,\n\t\tfile: IUpload,\n\t\trequest: createServer.IncomingMessage,\n\t\theaders?: Record<string, any>,\n\t) => void;\n\ttransformWrite?: (readStream: stream.Readable, writeStream: stream.Writable, fileId: string, file: IUpload) => void;\n};\n\nexport class Store {\n\tprotected options: StoreOptions;\n\n\tpublic copy: (\n\t\tfileId: string,\n\t\tstore: Store,\n\t\tcallback?: (err?: Error, copyId?: string, copy?: OptionalId<IUpload>, store?: Store) => void,\n\t) => Promise<void>;\n\n\tpublic create: (file: OptionalId<IUpload>) => Promise<string>;\n\n\tpublic write: (rs: stream.Readable, fileId: string, callback: (err?: Error, file?: IUpload) => void) => Promise<void>;\n\n\tconstructor(options: StoreOptions) {\n\t\toptions = {\n\t\t\tonCopyError: this.onCopyError,\n\t\t\tonFinishUpload: this.onFinishUpload,\n\t\t\tonRead: this.onRead,\n\t\t\tonReadError: this.onReadError,\n\t\t\tonValidate: this.onValidate,\n\t\t\tonWriteError: this.onWriteError,\n\t\t\t...options,\n\t\t};\n\n\t\tif (UploadFS.getStore(options.name)) {\n\t\t\tthrow new TypeError('Store: name already exists');\n\t\t}\n\t\tif (options.onCopyError && typeof options.onCopyError !== 'function') {\n\t\t\tthrow new TypeError('Store: onCopyError is not a function');\n\t\t}\n\t\tif (options.onFinishUpload && typeof options.onFinishUpload !== 'function') {\n\t\t\tthrow new TypeError('Store: onFinishUpload is not a function');\n\t\t}\n\t\tif (options.onRead && typeof options.onRead !== 'function') {\n\t\t\tthrow new TypeError('Store: onRead is not a function');\n\t\t}\n\t\tif (options.onReadError && typeof options.onReadError !== 'function') {\n\t\t\tthrow new TypeError('Store: onReadError is not a function');\n\t\t}\n\t\tif (options.onWriteError && typeof options.onWriteError !== 'function') {\n\t\t\tthrow new TypeError('Store: onWriteError is not a function');\n\t\t}\n\t\tif (options.transformRead && typeof options.transformRead !== 'function') {\n\t\t\tthrow new TypeError('Store: transformRead is not a function');\n\t\t}\n\t\tif (options.transformWrite && typeof options.transformWrite !== 'function') {\n\t\t\tthrow new TypeError('Store: transformWrite is not a function');\n\t\t}\n\t\tif (options.onValidate && typeof options.onValidate !== 'function') {\n\t\t\tthrow new TypeError('Store: onValidate is not a function');\n\t\t}\n\n\t\t// Public attributes\n\t\tthis.options = options;\n\n\t\tif (options.onCopyError) this.onCopyError = options.onCopyError;\n\t\tif (options.onFinishUpload) this.onFinishUpload = options.onFinishUpload;\n\t\tif (options.onRead) this.onRead = options.onRead;\n\t\tif (options.onReadError) this.onReadError = options.onReadError;\n\t\tif (options.onWriteError) this.onWriteError = options.onWriteError;\n\t\tif (options.onValidate) this.onValidate = options.onValidate;\n\n\t\t// Add the store to the list\n\t\tUploadFS.addStore(this);\n\n\t\tthis.copy = async (fileId, store, callback) => {\n\t\t\tcheck(fileId, String);\n\n\t\t\tif (!(store instanceof Store)) {\n\t\t\t\tthrow new TypeError('store is not an instance of UploadFS.Store');\n\t\t\t}\n\t\t\t// Get original file\n\t\t\tconst file = await this.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\tthrow new Meteor.Error('file-not-found', 'File not found');\n\t\t\t}\n\t\t\t// Silently ignore the file if it does not match filter\n\t\t\tconst filter = store.getFilter();\n\t\t\tif (filter instanceof Filter && !(await filter.isValid(file))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare copy\n\t\t\tconst { _id, url, ...copy } = file;\n\t\t\tcopy.originalStore = this.getName();\n\t\t\tcopy.originalId = fileId;\n\n\t\t\t// Create the copy\n\t\t\tconst copyId = await store.create(copy);\n\n\t\t\t// Get original stream\n\t\t\tconst rs = await this.getReadStream(fileId, file);\n\n\t\t\t// Catch errors to avoid app crashing\n\t\t\trs.on('error', (err: Error) => {\n\t\t\t\tcallback?.call(this, err);\n\t\t\t});\n\n\t\t\t// Copy file data\n\t\t\tawait store.write(rs, copyId, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tvoid this.removeById(copyId);\n\t\t\t\t\tthis.onCopyError.call(this, err, fileId, file);\n\t\t\t\t}\n\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\tcallback.call(this, err, copyId, copy, store);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tthis.create = async (file) => {\n\t\t\tcheck(file, Object);\n\t\t\tfile.store = this.options.name; // assign store to file\n\t\t\treturn (await this.getCollection().insertOne(file)).insertedId;\n\t\t};\n\n\t\tthis.write = async (rs, fileId, callback) => {\n\t\t\tconst file = await this.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\treturn callback(new Error('File not found'));\n\t\t\t}\n\n\t\t\tconst errorHandler = (err: Error) => {\n\t\t\t\tthis.onWriteError.call(this, err, fileId, file);\n\t\t\t\tcallback.call(this, err);\n\t\t\t};\n\n\t\t\tconst finishHandler = async () => {\n\t\t\t\tlet size = 0;\n\t\t\t\tconst readStream = await this.getReadStream(fileId, file);\n\n\t\t\t\treadStream.on('error', (error: Error) => {\n\t\t\t\t\tcallback.call(this, error);\n\t\t\t\t});\n\t\t\t\treadStream.on('data', (data) => {\n\t\t\t\t\tsize += data.length;\n\t\t\t\t});\n\t\t\t\treadStream.on('end', async () => {\n\t\t\t\t\tif (file.complete) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Set file attribute\n\t\t\t\t\tfile.complete = true;\n\t\t\t\t\tfile.etag = UploadFS.generateEtag();\n\t\t\t\t\tfile.path = await this.getFileRelativeURL(fileId);\n\t\t\t\t\tfile.progress = 1;\n\t\t\t\t\tfile.size = size;\n\t\t\t\t\tfile.token = this.generateToken();\n\t\t\t\t\tfile.uploading = false;\n\t\t\t\t\tfile.uploadedAt = new Date();\n\t\t\t\t\tfile.url = await this.getFileURL(fileId);\n\n\t\t\t\t\t// Execute callback\n\t\t\t\t\tif (typeof this.onFinishUpload === 'function') {\n\t\t\t\t\t\tawait this.onFinishUpload.call(this, file);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Sets the file URL when file transfer is complete,\n\t\t\t\t\t// this way, the image will loads entirely.\n\t\t\t\t\tawait this.getCollection().updateOne(\n\t\t\t\t\t\t{ _id: fileId },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\tcomplete: file.complete,\n\t\t\t\t\t\t\t\tetag: file.etag,\n\t\t\t\t\t\t\t\tpath: file.path,\n\t\t\t\t\t\t\t\tprogress: file.progress,\n\t\t\t\t\t\t\t\tsize: file.size,\n\t\t\t\t\t\t\t\ttoken: file.token,\n\t\t\t\t\t\t\t\tuploading: file.uploading,\n\t\t\t\t\t\t\t\tuploadedAt: file.uploadedAt,\n\t\t\t\t\t\t\t\turl: file.url,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\t// Return file info\n\t\t\t\t\tcallback.call(this, undefined, file);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst ws = await this.getWriteStream(fileId, file);\n\t\t\tws.on('error', errorHandler);\n\t\t\tws.once('finish', finishHandler);\n\n\t\t\t// Execute transformation\n\t\t\tthis.transformWrite(rs, ws, fileId, file);\n\t\t};\n\t}\n\n\tasync removeById(fileId: string) {\n\t\t// Delete the physical file in the store\n\t\tawait this.delete(fileId);\n\n\t\tconst tmpFile = UploadFS.getTempFilePath(fileId);\n\n\t\t// Delete the temp file\n\t\tfs.stat(tmpFile, (err) => {\n\t\t\t!err &&\n\t\t\t\tfs.unlink(tmpFile, (err2) => {\n\t\t\t\t\terr2 && console.error(`ufs: cannot delete temp file at ${tmpFile} (${err2.message})`);\n\t\t\t\t});\n\t\t});\n\n\t\tawait this.getCollection().removeById(fileId);\n\t}\n\n\tasync delete(_fileId: string): Promise<any> {\n\t\tthrow new Error('delete is not implemented');\n\t}\n\n\tgenerateToken(pattern?: string) {\n\t\treturn (pattern || 'xyxyxyxyxy').replace(/[xy]/g, (c) => {\n\t\t\t// eslint-disable-next-line no-mixed-operators\n\t\t\tconst r = (Math.random() * 16) | 0;\n\t\t\tconst v = c === 'x' ? r : (r & 0x3) | 0x8;\n\t\t\tconst s = v.toString(16);\n\t\t\treturn Math.round(Math.random()) ? s.toUpperCase() : s;\n\t\t});\n\t}\n\n\tgetCollection() {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\treturn this.options.collection!;\n\t}\n\n\tasync getFilePath(_fileId: string, _file?: IUpload): Promise<string> {\n\t\tthrow new Error('Store.getFilePath is not implemented');\n\t}\n\n\tasync getFileRelativeURL(fileId: string) {\n\t\tconst file = await this.getCollection().findOne(fileId, { projection: { name: 1 } });\n\t\treturn file ? this.getRelativeURL(`${fileId}/${file.name}`) : undefined;\n\t}\n\n\tasync getFileURL(fileId: string) {\n\t\tconst file = await this.getCollection().findOne(fileId, { projection: { name: 1 } });\n\t\treturn file ? this.getURL(`${fileId}/${file.name}`) : undefined;\n\t}\n\n\tgetFilter() {\n\t\treturn this.options.filter;\n\t}\n\n\tgetName() {\n\t\treturn this.options.name;\n\t}\n\n\tasync getReadStream(_fileId: string, _file: IUpload, _options?: { start?: number; end?: number }): Promise<stream.Readable> {\n\t\tthrow new Error('Store.getReadStream is not implemented');\n\t}\n\n\tgetRelativeURL(path: string) {\n\t\tconst rootUrl = Meteor.absoluteUrl().replace(/\\/+$/, '');\n\t\tconst rootPath = rootUrl.replace(/^[a-z]+:\\/\\/[^/]+\\/*/gi, '');\n\t\tconst storeName = this.getName();\n\t\tpath = String(path).replace(/\\/$/, '').trim();\n\t\treturn encodeURI(`${rootPath}/${UploadFS.config.storesPath}/${storeName}/${path}`);\n\t}\n\n\tgetURL(path: string) {\n\t\tconst rootUrl = Meteor.absoluteUrl('', { secure: UploadFS.config.https }).replace(/\\/+$/, '');\n\t\tconst storeName = this.getName();\n\t\tpath = String(path).replace(/\\/$/, '').trim();\n\t\treturn encodeURI(`${rootUrl}/${UploadFS.config.storesPath}/${storeName}/${path}`);\n\t}\n\n\tasync getRedirectURL(_file: IUpload, _forceDownload = false): Promise<string> {\n\t\tthrow new Error('getRedirectURL is not implemented');\n\t}\n\n\tasync getWriteStream(_fileId: string, _file: IUpload): Promise<stream.Writable> {\n\t\tthrow new Error('getWriteStream is not implemented');\n\t}\n\n\tonCopyError(err: Error, fileId: string, _file: IUpload) {\n\t\tconsole.error(`ufs: cannot copy file \"${fileId}\" (${err.message})`, err);\n\t}\n\n\tasync onFinishUpload(_file: IUpload) {\n\t\t//\n\t}\n\n\tasync onRead(_fileId: string, _file: IUpload, _request: createServer.IncomingMessage, _response: http.ServerResponse) {\n\t\treturn true;\n\t}\n\n\tonReadError(err: Error, fileId: string, _file: IUpload) {\n\t\tconsole.error(`ufs: cannot read file \"${fileId}\" (${err.message})`, err);\n\t}\n\n\tasync onValidate(_file: IUpload) {\n\t\t//\n\t}\n\n\tonWriteError(err: Error, fileId: string, _file: IUpload) {\n\t\tconsole.error(`ufs: cannot write file \"${fileId}\" (${err.message})`, err);\n\t}\n\n\ttransformRead(\n\t\treadStream: stream.Readable,\n\t\twriteStream: stream.Writable,\n\t\tfileId: string,\n\t\tfile: IUpload,\n\t\trequest: createServer.IncomingMessage,\n\t\theaders?: Record<string, any>,\n\t) {\n\t\tif (typeof this.options.transformRead === 'function') {\n\t\t\tthis.options.transformRead.call(this, readStream, writeStream, fileId, file, request, headers);\n\t\t} else {\n\t\t\treadStream.pipe(writeStream);\n\t\t}\n\t}\n\n\ttransformWrite(readStream: stream.Readable, writeStream: stream.Writable, fileId: string, file: IUpload) {\n\t\tif (typeof this.options.transformWrite === 'function') {\n\t\t\tthis.options.transformWrite.call(this, readStream, writeStream, fileId, file);\n\t\t} else {\n\t\t\treadStream.pipe(writeStream);\n\t\t}\n\t}\n\n\tasync validate(file: IUpload) {\n\t\tif (typeof this.onValidate === 'function') {\n\t\t\tawait this.onValidate(file);\n\t\t}\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/ufs/ufs-store.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/ufs/ufs-store.ts","inputSourceMap":{"version":3,"file":"server/ufs/ufs-store.ts","sourceRoot":"","sources":["server/ufs/ufs-store.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport type * as http from 'http';\nimport type stream from 'stream';\n\nimport type { IUpload } from '@rocket.chat/core-typings';\nimport type { IBaseUploadsModel } from '@rocket.chat/model-typings';\nimport type createServer from 'connect';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport type { OptionalId } from 'mongodb';\n\nimport { UploadFS } from '.';\nimport { Filter } from './ufs-filter';\n\nexport type StoreOptions = {\n\tcollection?: IBaseUploadsModel<IUpload>;\n\tfilter?: Filter;\n\tname: string;\n\tonCopyError?: (err: any, fileId: string, file: IUpload) => void;\n\tonFinishUpload?: (file: IUpload) => Promise<void>;\n\tonRead?: (fileId: string, file: IUpload, request: any, response: any) => Promise<boolean>;\n\tonReadError?: (err: any, fileId: string, file: IUpload) => void;\n\tonValidate?: (file: IUpload) => Promise<void>;\n\tonWriteError?: (err: any, fileId: string, file: IUpload) => void;\n\ttransformRead?: (\n\t\treadStream: stream.Readable,\n\t\twriteStream: stream.Writable,\n\t\tfileId: string,\n\t\tfile: IUpload,\n\t\trequest: createServer.IncomingMessage,\n\t\theaders?: Record<string, any>,\n\t) => void;\n\ttransformWrite?: (readStream: stream.Readable, writeStream: stream.Writable, fileId: string, file: IUpload) => void;\n};\n\nexport class Store {\n\tprotected options: StoreOptions;\n\n\tpublic copy: (\n\t\tfileId: string,\n\t\tstore: Store,\n\t\tcallback?: (err?: Error, copyId?: string, copy?: OptionalId<IUpload>, store?: Store) => void,\n\t) => Promise<void>;\n\n\tpublic create: (file: OptionalId<IUpload>) => Promise<string>;\n\n\tpublic write: (rs: stream.Readable, fileId: string, callback: (err?: Error, file?: IUpload) => void) => Promise<void>;\n\n\tconstructor(options: StoreOptions) {\n\t\toptions = {\n\t\t\tonCopyError: this.onCopyError,\n\t\t\tonFinishUpload: this.onFinishUpload,\n\t\t\tonRead: this.onRead,\n\t\t\tonReadError: this.onReadError,\n\t\t\tonValidate: this.onValidate,\n\t\t\tonWriteError: this.onWriteError,\n\t\t\t...options,\n\t\t};\n\n\t\tif (UploadFS.getStore(options.name)) {\n\t\t\tthrow new TypeError('Store: name already exists');\n\t\t}\n\t\tif (options.onCopyError && typeof options.onCopyError !== 'function') {\n\t\t\tthrow new TypeError('Store: onCopyError is not a function');\n\t\t}\n\t\tif (options.onFinishUpload && typeof options.onFinishUpload !== 'function') {\n\t\t\tthrow new TypeError('Store: onFinishUpload is not a function');\n\t\t}\n\t\tif (options.onRead && typeof options.onRead !== 'function') {\n\t\t\tthrow new TypeError('Store: onRead is not a function');\n\t\t}\n\t\tif (options.onReadError && typeof options.onReadError !== 'function') {\n\t\t\tthrow new TypeError('Store: onReadError is not a function');\n\t\t}\n\t\tif (options.onWriteError && typeof options.onWriteError !== 'function') {\n\t\t\tthrow new TypeError('Store: onWriteError is not a function');\n\t\t}\n\t\tif (options.transformRead && typeof options.transformRead !== 'function') {\n\t\t\tthrow new TypeError('Store: transformRead is not a function');\n\t\t}\n\t\tif (options.transformWrite && typeof options.transformWrite !== 'function') {\n\t\t\tthrow new TypeError('Store: transformWrite is not a function');\n\t\t}\n\t\tif (options.onValidate && typeof options.onValidate !== 'function') {\n\t\t\tthrow new TypeError('Store: onValidate is not a function');\n\t\t}\n\n\t\t// Public attributes\n\t\tthis.options = options;\n\n\t\tif (options.onCopyError) this.onCopyError = options.onCopyError;\n\t\tif (options.onFinishUpload) this.onFinishUpload = options.onFinishUpload;\n\t\tif (options.onRead) this.onRead = options.onRead;\n\t\tif (options.onReadError) this.onReadError = options.onReadError;\n\t\tif (options.onWriteError) this.onWriteError = options.onWriteError;\n\t\tif (options.onValidate) this.onValidate = options.onValidate;\n\n\t\t// Add the store to the list\n\t\tUploadFS.addStore(this);\n\n\t\tthis.copy = async (fileId, store, callback) => {\n\t\t\tcheck(fileId, String);\n\n\t\t\tif (!(store instanceof Store)) {\n\t\t\t\tthrow new TypeError('store is not an instance of UploadFS.Store');\n\t\t\t}\n\t\t\t// Get original file\n\t\t\tconst file = await this.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\tthrow new Meteor.Error('file-not-found', 'File not found');\n\t\t\t}\n\t\t\t// Silently ignore the file if it does not match filter\n\t\t\tconst filter = store.getFilter();\n\t\t\tif (filter instanceof Filter && !(await filter.isValid(file))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare copy\n\t\t\tconst { _id, url, ...copy } = file;\n\t\t\tcopy.originalStore = this.getName();\n\t\t\tcopy.originalId = fileId;\n\n\t\t\t// Create the copy\n\t\t\tconst copyId = await store.create(copy);\n\n\t\t\t// Get original stream\n\t\t\tconst rs = await this.getReadStream(fileId, file);\n\n\t\t\t// Catch errors to avoid app crashing\n\t\t\trs.on('error', (err: Error) => {\n\t\t\t\tcallback?.call(this, err);\n\t\t\t});\n\n\t\t\t// Copy file data\n\t\t\tawait store.write(rs, copyId, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tvoid this.removeById(copyId);\n\t\t\t\t\tthis.onCopyError.call(this, err, fileId, file);\n\t\t\t\t}\n\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\tcallback.call(this, err, copyId, copy, store);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tthis.create = async (file) => {\n\t\t\tcheck(file, Object);\n\t\t\tfile.store = this.options.name; // assign store to file\n\t\t\treturn (await this.getCollection().insertOne(file)).insertedId;\n\t\t};\n\n\t\tthis.write = async (rs, fileId, callback) => {\n\t\t\tconst file = await this.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\treturn callback(new Error('File not found'));\n\t\t\t}\n\n\t\t\tconst errorHandler = (err: Error) => {\n\t\t\t\tthis.onWriteError.call(this, err, fileId, file);\n\t\t\t\tcallback.call(this, err);\n\t\t\t};\n\n\t\t\tconst finishHandler = async () => {\n\t\t\t\tlet size = 0;\n\t\t\t\tconst readStream = await this.getReadStream(fileId, file);\n\n\t\t\t\treadStream.on('error', (error: Error) => {\n\t\t\t\t\tcallback.call(this, error);\n\t\t\t\t});\n\t\t\t\treadStream.on('data', (data) => {\n\t\t\t\t\tsize += data.length;\n\t\t\t\t});\n\t\t\t\treadStream.on('end', async () => {\n\t\t\t\t\tif (file.complete) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Set file attribute\n\t\t\t\t\tfile.complete = true;\n\t\t\t\t\tfile.etag = UploadFS.generateEtag();\n\t\t\t\t\tfile.path = await this.getFileRelativeURL(fileId);\n\t\t\t\t\tfile.progress = 1;\n\t\t\t\t\tfile.size = size;\n\t\t\t\t\tfile.token = this.generateToken();\n\t\t\t\t\tfile.uploading = false;\n\t\t\t\t\tfile.uploadedAt = new Date();\n\t\t\t\t\tfile.url = await this.getFileURL(fileId);\n\n\t\t\t\t\t// Execute callback\n\t\t\t\t\tif (typeof this.onFinishUpload === 'function') {\n\t\t\t\t\t\tawait this.onFinishUpload.call(this, file);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Sets the file URL when file transfer is complete,\n\t\t\t\t\t// this way, the image will loads entirely.\n\t\t\t\t\tawait this.getCollection().updateOne(\n\t\t\t\t\t\t{ _id: fileId },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\tcomplete: file.complete,\n\t\t\t\t\t\t\t\tetag: file.etag,\n\t\t\t\t\t\t\t\tpath: file.path,\n\t\t\t\t\t\t\t\tprogress: file.progress,\n\t\t\t\t\t\t\t\tsize: file.size,\n\t\t\t\t\t\t\t\ttoken: file.token,\n\t\t\t\t\t\t\t\tuploading: file.uploading,\n\t\t\t\t\t\t\t\tuploadedAt: file.uploadedAt,\n\t\t\t\t\t\t\t\turl: file.url,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\t// Return file info\n\t\t\t\t\tcallback.call(this, undefined, file);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst ws = await this.getWriteStream(fileId, file);\n\t\t\tws.on('error', errorHandler);\n\t\t\tws.once('finish', finishHandler);\n\n\t\t\t// Execute transformation\n\t\t\tthis.transformWrite(rs, ws, fileId, file);\n\t\t};\n\t}\n\n\tasync removeById(fileId: string) {\n\t\t// Delete the physical file in the store\n\t\tawait this.delete(fileId);\n\n\t\tconst tmpFile = UploadFS.getTempFilePath(fileId);\n\n\t\t// Delete the temp file\n\t\tfs.stat(tmpFile, (err) => {\n\t\t\t!err &&\n\t\t\t\tfs.unlink(tmpFile, (err2) => {\n\t\t\t\t\terr2 && console.error(`ufs: cannot delete temp file at ${tmpFile} (${err2.message})`);\n\t\t\t\t});\n\t\t});\n\n\t\tawait this.getCollection().removeById(fileId);\n\t}\n\n\tasync delete(_fileId: string): Promise<any> {\n\t\tthrow new Error('delete is not implemented');\n\t}\n\n\tgenerateToken(pattern?: string) {\n\t\treturn (pattern || 'xyxyxyxyxy').replace(/[xy]/g, (c) => {\n\t\t\t// eslint-disable-next-line no-mixed-operators\n\t\t\tconst r = (Math.random() * 16) | 0;\n\t\t\tconst v = c === 'x' ? r : (r & 0x3) | 0x8;\n\t\t\tconst s = v.toString(16);\n\t\t\treturn Math.round(Math.random()) ? s.toUpperCase() : s;\n\t\t});\n\t}\n\n\tgetCollection() {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\treturn this.options.collection!;\n\t}\n\n\tasync getFilePath(_fileId: string, _file?: IUpload): Promise<string> {\n\t\tthrow new Error('Store.getFilePath is not implemented');\n\t}\n\n\tasync getFileRelativeURL(fileId: string) {\n\t\tconst file = await this.getCollection().findOne(fileId, { projection: { name: 1 } });\n\t\treturn file ? this.getRelativeURL(`${fileId}/${file.name}`) : undefined;\n\t}\n\n\tasync getFileURL(fileId: string) {\n\t\tconst file = await this.getCollection().findOne(fileId, { projection: { name: 1 } });\n\t\treturn file ? this.getURL(`${fileId}/${file.name}`) : undefined;\n\t}\n\n\tgetFilter() {\n\t\treturn this.options.filter;\n\t}\n\n\tgetName() {\n\t\treturn this.options.name;\n\t}\n\n\tasync getReadStream(_fileId: string, _file: IUpload, _options?: { start?: number; end?: number }): Promise<stream.Readable> {\n\t\tthrow new Error('Store.getReadStream is not implemented');\n\t}\n\n\tgetRelativeURL(path: string) {\n\t\tconst rootUrl = Meteor.absoluteUrl().replace(/\\/+$/, '');\n\t\tconst rootPath = rootUrl.replace(/^[a-z]+:\\/\\/[^/]+\\/*/gi, '');\n\t\tconst storeName = this.getName();\n\t\tpath = String(path).replace(/\\/$/, '').trim();\n\t\treturn encodeURI(`${rootPath}/${UploadFS.config.storesPath}/${storeName}/${path}`);\n\t}\n\n\tgetURL(path: string) {\n\t\tconst rootUrl = Meteor.absoluteUrl('', { secure: UploadFS.config.https }).replace(/\\/+$/, '');\n\t\tconst storeName = this.getName();\n\t\tpath = String(path).replace(/\\/$/, '').trim();\n\t\treturn encodeURI(`${rootUrl}/${UploadFS.config.storesPath}/${storeName}/${path}`);\n\t}\n\n\tasync getRedirectURL(_file: IUpload, _forceDownload = false): Promise<string> {\n\t\tthrow new Error('getRedirectURL is not implemented');\n\t}\n\n\tasync getWriteStream(_fileId: string, _file: IUpload): Promise<stream.Writable> {\n\t\tthrow new Error('getWriteStream is not implemented');\n\t}\n\n\tonCopyError(err: Error, fileId: string, _file: IUpload) {\n\t\tconsole.error(`ufs: cannot copy file \"${fileId}\" (${err.message})`, err);\n\t}\n\n\tasync onFinishUpload(_file: IUpload) {\n\t\t//\n\t}\n\n\tasync onRead(_fileId: string, _file: IUpload, _request: createServer.IncomingMessage, _response: http.ServerResponse) {\n\t\treturn true;\n\t}\n\n\tonReadError(err: Error, fileId: string, _file: IUpload) {\n\t\tconsole.error(`ufs: cannot read file \"${fileId}\" (${err.message})`, err);\n\t}\n\n\tasync onValidate(_file: IUpload) {\n\t\t//\n\t}\n\n\tonWriteError(err: Error, fileId: string, _file: IUpload) {\n\t\tconsole.error(`ufs: cannot write file \"${fileId}\" (${err.message})`, err);\n\t}\n\n\ttransformRead(\n\t\treadStream: stream.Readable,\n\t\twriteStream: stream.Writable,\n\t\tfileId: string,\n\t\tfile: IUpload,\n\t\trequest: createServer.IncomingMessage,\n\t\theaders?: Record<string, any>,\n\t) {\n\t\tif (typeof this.options.transformRead === 'function') {\n\t\t\tthis.options.transformRead.call(this, readStream, writeStream, fileId, file, request, headers);\n\t\t} else {\n\t\t\treadStream.pipe(writeStream);\n\t\t}\n\t}\n\n\ttransformWrite(readStream: stream.Readable, writeStream: stream.Writable, fileId: string, file: IUpload) {\n\t\tif (typeof this.options.transformWrite === 'function') {\n\t\t\tthis.options.transformWrite.call(this, readStream, writeStream, fileId, file);\n\t\t} else {\n\t\t\treadStream.pipe(writeStream);\n\t\t}\n\t}\n\n\tasync validate(file: IUpload) {\n\t\tif (typeof this.onValidate === 'function') {\n\t\t\tawait this.onValidate(file);\n\t\t}\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectWithoutProperties;\n    module.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n      default(v) {\n        _objectWithoutProperties = v;\n      }\n    }, 0);\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 1);\n    const _excluded = [\"_id\", \"url\"];\n    module.export({\n      Store: () => Store\n    });\n    let fs;\n    module.link(\"fs\", {\n      default(v) {\n        fs = v;\n      }\n    }, 0);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let UploadFS;\n    module.link(\".\", {\n      UploadFS(v) {\n        UploadFS = v;\n      }\n    }, 3);\n    let Filter;\n    module.link(\"./ufs-filter\", {\n      Filter(v) {\n        Filter = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class Store {\n      constructor(options) {\n        this.options = void 0;\n        this.copy = void 0;\n        this.create = void 0;\n        this.write = void 0;\n        options = _objectSpread({\n          onCopyError: this.onCopyError,\n          onFinishUpload: this.onFinishUpload,\n          onRead: this.onRead,\n          onReadError: this.onReadError,\n          onValidate: this.onValidate,\n          onWriteError: this.onWriteError\n        }, options);\n        if (UploadFS.getStore(options.name)) {\n          throw new TypeError('Store: name already exists');\n        }\n        if (options.onCopyError && typeof options.onCopyError !== 'function') {\n          throw new TypeError('Store: onCopyError is not a function');\n        }\n        if (options.onFinishUpload && typeof options.onFinishUpload !== 'function') {\n          throw new TypeError('Store: onFinishUpload is not a function');\n        }\n        if (options.onRead && typeof options.onRead !== 'function') {\n          throw new TypeError('Store: onRead is not a function');\n        }\n        if (options.onReadError && typeof options.onReadError !== 'function') {\n          throw new TypeError('Store: onReadError is not a function');\n        }\n        if (options.onWriteError && typeof options.onWriteError !== 'function') {\n          throw new TypeError('Store: onWriteError is not a function');\n        }\n        if (options.transformRead && typeof options.transformRead !== 'function') {\n          throw new TypeError('Store: transformRead is not a function');\n        }\n        if (options.transformWrite && typeof options.transformWrite !== 'function') {\n          throw new TypeError('Store: transformWrite is not a function');\n        }\n        if (options.onValidate && typeof options.onValidate !== 'function') {\n          throw new TypeError('Store: onValidate is not a function');\n        }\n        // Public attributes\n        this.options = options;\n        if (options.onCopyError) this.onCopyError = options.onCopyError;\n        if (options.onFinishUpload) this.onFinishUpload = options.onFinishUpload;\n        if (options.onRead) this.onRead = options.onRead;\n        if (options.onReadError) this.onReadError = options.onReadError;\n        if (options.onWriteError) this.onWriteError = options.onWriteError;\n        if (options.onValidate) this.onValidate = options.onValidate;\n        // Add the store to the list\n        UploadFS.addStore(this);\n        this.copy = async (fileId, store, callback) => {\n          check(fileId, String);\n          if (!(store instanceof Store)) {\n            throw new TypeError('store is not an instance of UploadFS.Store');\n          }\n          // Get original file\n          const file = await this.getCollection().findOne({\n            _id: fileId\n          });\n          if (!file) {\n            throw new Meteor.Error('file-not-found', 'File not found');\n          }\n          // Silently ignore the file if it does not match filter\n          const filter = store.getFilter();\n          if (filter instanceof Filter && !(await filter.isValid(file))) {\n            return;\n          }\n          // Prepare copy\n          const {\n              _id,\n              url\n            } = file,\n            copy = _objectWithoutProperties(file, _excluded);\n          copy.originalStore = this.getName();\n          copy.originalId = fileId;\n          // Create the copy\n          const copyId = await store.create(copy);\n          // Get original stream\n          const rs = await this.getReadStream(fileId, file);\n          // Catch errors to avoid app crashing\n          rs.on('error', err => {\n            callback === null || callback === void 0 ? void 0 : callback.call(this, err);\n          });\n          // Copy file data\n          await store.write(rs, copyId, err => {\n            if (err) {\n              void this.removeById(copyId);\n              this.onCopyError.call(this, err, fileId, file);\n            }\n            if (typeof callback === 'function') {\n              callback.call(this, err, copyId, copy, store);\n            }\n          });\n        };\n        this.create = async file => {\n          check(file, Object);\n          file.store = this.options.name; // assign store to file\n          return (await this.getCollection().insertOne(file)).insertedId;\n        };\n        this.write = async (rs, fileId, callback) => {\n          const file = await this.getCollection().findOne({\n            _id: fileId\n          });\n          if (!file) {\n            return callback(new Error('File not found'));\n          }\n          const errorHandler = err => {\n            this.onWriteError.call(this, err, fileId, file);\n            callback.call(this, err);\n          };\n          const finishHandler = async () => {\n            let size = 0;\n            const readStream = await this.getReadStream(fileId, file);\n            readStream.on('error', error => {\n              callback.call(this, error);\n            });\n            readStream.on('data', data => {\n              size += data.length;\n            });\n            readStream.on('end', async () => {\n              if (file.complete) {\n                return;\n              }\n              // Set file attribute\n              file.complete = true;\n              file.etag = UploadFS.generateEtag();\n              file.path = await this.getFileRelativeURL(fileId);\n              file.progress = 1;\n              file.size = size;\n              file.token = this.generateToken();\n              file.uploading = false;\n              file.uploadedAt = new Date();\n              file.url = await this.getFileURL(fileId);\n              // Execute callback\n              if (typeof this.onFinishUpload === 'function') {\n                await this.onFinishUpload.call(this, file);\n              }\n              // Sets the file URL when file transfer is complete,\n              // this way, the image will loads entirely.\n              await this.getCollection().updateOne({\n                _id: fileId\n              }, {\n                $set: {\n                  complete: file.complete,\n                  etag: file.etag,\n                  path: file.path,\n                  progress: file.progress,\n                  size: file.size,\n                  token: file.token,\n                  uploading: file.uploading,\n                  uploadedAt: file.uploadedAt,\n                  url: file.url\n                }\n              });\n              // Return file info\n              callback.call(this, undefined, file);\n            });\n          };\n          const ws = await this.getWriteStream(fileId, file);\n          ws.on('error', errorHandler);\n          ws.once('finish', finishHandler);\n          // Execute transformation\n          this.transformWrite(rs, ws, fileId, file);\n        };\n      }\n      async removeById(fileId) {\n        // Delete the physical file in the store\n        await this.delete(fileId);\n        const tmpFile = UploadFS.getTempFilePath(fileId);\n        // Delete the temp file\n        fs.stat(tmpFile, err => {\n          !err && fs.unlink(tmpFile, err2 => {\n            err2 && console.error(\"ufs: cannot delete temp file at \".concat(tmpFile, \" (\").concat(err2.message, \")\"));\n          });\n        });\n        await this.getCollection().removeById(fileId);\n      }\n      async delete(_fileId) {\n        throw new Error('delete is not implemented');\n      }\n      generateToken(pattern) {\n        return (pattern || 'xyxyxyxyxy').replace(/[xy]/g, c => {\n          // eslint-disable-next-line no-mixed-operators\n          const r = Math.random() * 16 | 0;\n          const v = c === 'x' ? r : r & 0x3 | 0x8;\n          const s = v.toString(16);\n          return Math.round(Math.random()) ? s.toUpperCase() : s;\n        });\n      }\n      getCollection() {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this.options.collection;\n      }\n      async getFilePath(_fileId, _file) {\n        throw new Error('Store.getFilePath is not implemented');\n      }\n      async getFileRelativeURL(fileId) {\n        const file = await this.getCollection().findOne(fileId, {\n          projection: {\n            name: 1\n          }\n        });\n        return file ? this.getRelativeURL(\"\".concat(fileId, \"/\").concat(file.name)) : undefined;\n      }\n      async getFileURL(fileId) {\n        const file = await this.getCollection().findOne(fileId, {\n          projection: {\n            name: 1\n          }\n        });\n        return file ? this.getURL(\"\".concat(fileId, \"/\").concat(file.name)) : undefined;\n      }\n      getFilter() {\n        return this.options.filter;\n      }\n      getName() {\n        return this.options.name;\n      }\n      async getReadStream(_fileId, _file, _options) {\n        throw new Error('Store.getReadStream is not implemented');\n      }\n      getRelativeURL(path) {\n        const rootUrl = Meteor.absoluteUrl().replace(/\\/+$/, '');\n        const rootPath = rootUrl.replace(/^[a-z]+:\\/\\/[^/]+\\/*/gi, '');\n        const storeName = this.getName();\n        path = String(path).replace(/\\/$/, '').trim();\n        return encodeURI(\"\".concat(rootPath, \"/\").concat(UploadFS.config.storesPath, \"/\").concat(storeName, \"/\").concat(path));\n      }\n      getURL(path) {\n        const rootUrl = Meteor.absoluteUrl('', {\n          secure: UploadFS.config.https\n        }).replace(/\\/+$/, '');\n        const storeName = this.getName();\n        path = String(path).replace(/\\/$/, '').trim();\n        return encodeURI(\"\".concat(rootUrl, \"/\").concat(UploadFS.config.storesPath, \"/\").concat(storeName, \"/\").concat(path));\n      }\n      async getRedirectURL(_file) {\n        let _forceDownload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        throw new Error('getRedirectURL is not implemented');\n      }\n      async getWriteStream(_fileId, _file) {\n        throw new Error('getWriteStream is not implemented');\n      }\n      onCopyError(err, fileId, _file) {\n        console.error(\"ufs: cannot copy file \\\"\".concat(fileId, \"\\\" (\").concat(err.message, \")\"), err);\n      }\n      async onFinishUpload(_file) {\n        //\n      }\n      async onRead(_fileId, _file, _request, _response) {\n        return true;\n      }\n      onReadError(err, fileId, _file) {\n        console.error(\"ufs: cannot read file \\\"\".concat(fileId, \"\\\" (\").concat(err.message, \")\"), err);\n      }\n      async onValidate(_file) {\n        //\n      }\n      onWriteError(err, fileId, _file) {\n        console.error(\"ufs: cannot write file \\\"\".concat(fileId, \"\\\" (\").concat(err.message, \")\"), err);\n      }\n      transformRead(readStream, writeStream, fileId, file, request, headers) {\n        if (typeof this.options.transformRead === 'function') {\n          this.options.transformRead.call(this, readStream, writeStream, fileId, file, request, headers);\n        } else {\n          readStream.pipe(writeStream);\n        }\n      }\n      transformWrite(readStream, writeStream, fileId, file) {\n        if (typeof this.options.transformWrite === 'function') {\n          this.options.transformWrite.call(this, readStream, writeStream, fileId, file);\n        } else {\n          readStream.pipe(writeStream);\n        }\n      }\n      async validate(file) {\n        if (typeof this.onValidate === 'function') {\n          await this.onValidate(file);\n        }\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectWithoutProperties","module","link","default","v","_objectSpread","_excluded","export","Store","fs","check","Meteor","UploadFS","Filter","__reifyWaitForDeps__","constructor","options","copy","create","write","onCopyError","onFinishUpload","onRead","onReadError","onValidate","onWriteError","getStore","name","TypeError","transformRead","transformWrite","addStore","fileId","store","callback","String","file","getCollection","findOne","_id","Error","filter","getFilter","isValid","url","originalStore","getName","originalId","copyId","rs","getReadStream","on","err","call","removeById","Object","insertOne","insertedId","errorHandler","finishHandler","size","readStream","error","data","length","complete","etag","generateEtag","path","getFileRelativeURL","progress","token","generateToken","uploading","uploadedAt","Date","getFileURL","updateOne","$set","undefined","ws","getWriteStream","once","delete","tmpFile","getTempFilePath","stat","unlink","err2","console","concat","message","_fileId","pattern","replace","c","r","Math","random","s","toString","round","toUpperCase","collection","getFilePath","_file","projection","getRelativeURL","getURL","_options","rootUrl","absoluteUrl","rootPath","storeName","trim","encodeURI","config","storesPath","secure","https","getRedirectURL","_forceDownload","arguments","_request","_response","writeStream","request","headers","pipe","validate","__reify_async_result__","_reifyError","self","async"],"sources":["server/ufs/ufs-store.ts"],"sourcesContent":["import fs from 'fs';\nimport type * as http from 'http';\nimport type stream from 'stream';\n\nimport type { IUpload } from '@rocket.chat/core-typings';\nimport type { IBaseUploadsModel } from '@rocket.chat/model-typings';\nimport type createServer from 'connect';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport type { OptionalId } from 'mongodb';\n\nimport { UploadFS } from '.';\nimport { Filter } from './ufs-filter';\n\nexport type StoreOptions = {\n\tcollection?: IBaseUploadsModel<IUpload>;\n\tfilter?: Filter;\n\tname: string;\n\tonCopyError?: (err: any, fileId: string, file: IUpload) => void;\n\tonFinishUpload?: (file: IUpload) => Promise<void>;\n\tonRead?: (fileId: string, file: IUpload, request: any, response: any) => Promise<boolean>;\n\tonReadError?: (err: any, fileId: string, file: IUpload) => void;\n\tonValidate?: (file: IUpload) => Promise<void>;\n\tonWriteError?: (err: any, fileId: string, file: IUpload) => void;\n\ttransformRead?: (\n\t\treadStream: stream.Readable,\n\t\twriteStream: stream.Writable,\n\t\tfileId: string,\n\t\tfile: IUpload,\n\t\trequest: createServer.IncomingMessage,\n\t\theaders?: Record<string, any>,\n\t) => void;\n\ttransformWrite?: (readStream: stream.Readable, writeStream: stream.Writable, fileId: string, file: IUpload) => void;\n};\n\nexport class Store {\n\tprotected options: StoreOptions;\n\n\tpublic copy: (\n\t\tfileId: string,\n\t\tstore: Store,\n\t\tcallback?: (err?: Error, copyId?: string, copy?: OptionalId<IUpload>, store?: Store) => void,\n\t) => Promise<void>;\n\n\tpublic create: (file: OptionalId<IUpload>) => Promise<string>;\n\n\tpublic write: (rs: stream.Readable, fileId: string, callback: (err?: Error, file?: IUpload) => void) => Promise<void>;\n\n\tconstructor(options: StoreOptions) {\n\t\toptions = {\n\t\t\tonCopyError: this.onCopyError,\n\t\t\tonFinishUpload: this.onFinishUpload,\n\t\t\tonRead: this.onRead,\n\t\t\tonReadError: this.onReadError,\n\t\t\tonValidate: this.onValidate,\n\t\t\tonWriteError: this.onWriteError,\n\t\t\t...options,\n\t\t};\n\n\t\tif (UploadFS.getStore(options.name)) {\n\t\t\tthrow new TypeError('Store: name already exists');\n\t\t}\n\t\tif (options.onCopyError && typeof options.onCopyError !== 'function') {\n\t\t\tthrow new TypeError('Store: onCopyError is not a function');\n\t\t}\n\t\tif (options.onFinishUpload && typeof options.onFinishUpload !== 'function') {\n\t\t\tthrow new TypeError('Store: onFinishUpload is not a function');\n\t\t}\n\t\tif (options.onRead && typeof options.onRead !== 'function') {\n\t\t\tthrow new TypeError('Store: onRead is not a function');\n\t\t}\n\t\tif (options.onReadError && typeof options.onReadError !== 'function') {\n\t\t\tthrow new TypeError('Store: onReadError is not a function');\n\t\t}\n\t\tif (options.onWriteError && typeof options.onWriteError !== 'function') {\n\t\t\tthrow new TypeError('Store: onWriteError is not a function');\n\t\t}\n\t\tif (options.transformRead && typeof options.transformRead !== 'function') {\n\t\t\tthrow new TypeError('Store: transformRead is not a function');\n\t\t}\n\t\tif (options.transformWrite && typeof options.transformWrite !== 'function') {\n\t\t\tthrow new TypeError('Store: transformWrite is not a function');\n\t\t}\n\t\tif (options.onValidate && typeof options.onValidate !== 'function') {\n\t\t\tthrow new TypeError('Store: onValidate is not a function');\n\t\t}\n\n\t\t// Public attributes\n\t\tthis.options = options;\n\n\t\tif (options.onCopyError) this.onCopyError = options.onCopyError;\n\t\tif (options.onFinishUpload) this.onFinishUpload = options.onFinishUpload;\n\t\tif (options.onRead) this.onRead = options.onRead;\n\t\tif (options.onReadError) this.onReadError = options.onReadError;\n\t\tif (options.onWriteError) this.onWriteError = options.onWriteError;\n\t\tif (options.onValidate) this.onValidate = options.onValidate;\n\n\t\t// Add the store to the list\n\t\tUploadFS.addStore(this);\n\n\t\tthis.copy = async (fileId, store, callback) => {\n\t\t\tcheck(fileId, String);\n\n\t\t\tif (!(store instanceof Store)) {\n\t\t\t\tthrow new TypeError('store is not an instance of UploadFS.Store');\n\t\t\t}\n\t\t\t// Get original file\n\t\t\tconst file = await this.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\tthrow new Meteor.Error('file-not-found', 'File not found');\n\t\t\t}\n\t\t\t// Silently ignore the file if it does not match filter\n\t\t\tconst filter = store.getFilter();\n\t\t\tif (filter instanceof Filter && !(await filter.isValid(file))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare copy\n\t\t\tconst { _id, url, ...copy } = file;\n\t\t\tcopy.originalStore = this.getName();\n\t\t\tcopy.originalId = fileId;\n\n\t\t\t// Create the copy\n\t\t\tconst copyId = await store.create(copy);\n\n\t\t\t// Get original stream\n\t\t\tconst rs = await this.getReadStream(fileId, file);\n\n\t\t\t// Catch errors to avoid app crashing\n\t\t\trs.on('error', (err: Error) => {\n\t\t\t\tcallback?.call(this, err);\n\t\t\t});\n\n\t\t\t// Copy file data\n\t\t\tawait store.write(rs, copyId, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tvoid this.removeById(copyId);\n\t\t\t\t\tthis.onCopyError.call(this, err, fileId, file);\n\t\t\t\t}\n\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\tcallback.call(this, err, copyId, copy, store);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tthis.create = async (file) => {\n\t\t\tcheck(file, Object);\n\t\t\tfile.store = this.options.name; // assign store to file\n\t\t\treturn (await this.getCollection().insertOne(file)).insertedId;\n\t\t};\n\n\t\tthis.write = async (rs, fileId, callback) => {\n\t\t\tconst file = await this.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\treturn callback(new Error('File not found'));\n\t\t\t}\n\n\t\t\tconst errorHandler = (err: Error) => {\n\t\t\t\tthis.onWriteError.call(this, err, fileId, file);\n\t\t\t\tcallback.call(this, err);\n\t\t\t};\n\n\t\t\tconst finishHandler = async () => {\n\t\t\t\tlet size = 0;\n\t\t\t\tconst readStream = await this.getReadStream(fileId, file);\n\n\t\t\t\treadStream.on('error', (error: Error) => {\n\t\t\t\t\tcallback.call(this, error);\n\t\t\t\t});\n\t\t\t\treadStream.on('data', (data) => {\n\t\t\t\t\tsize += data.length;\n\t\t\t\t});\n\t\t\t\treadStream.on('end', async () => {\n\t\t\t\t\tif (file.complete) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Set file attribute\n\t\t\t\t\tfile.complete = true;\n\t\t\t\t\tfile.etag = UploadFS.generateEtag();\n\t\t\t\t\tfile.path = await this.getFileRelativeURL(fileId);\n\t\t\t\t\tfile.progress = 1;\n\t\t\t\t\tfile.size = size;\n\t\t\t\t\tfile.token = this.generateToken();\n\t\t\t\t\tfile.uploading = false;\n\t\t\t\t\tfile.uploadedAt = new Date();\n\t\t\t\t\tfile.url = await this.getFileURL(fileId);\n\n\t\t\t\t\t// Execute callback\n\t\t\t\t\tif (typeof this.onFinishUpload === 'function') {\n\t\t\t\t\t\tawait this.onFinishUpload.call(this, file);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Sets the file URL when file transfer is complete,\n\t\t\t\t\t// this way, the image will loads entirely.\n\t\t\t\t\tawait this.getCollection().updateOne(\n\t\t\t\t\t\t{ _id: fileId },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\tcomplete: file.complete,\n\t\t\t\t\t\t\t\tetag: file.etag,\n\t\t\t\t\t\t\t\tpath: file.path,\n\t\t\t\t\t\t\t\tprogress: file.progress,\n\t\t\t\t\t\t\t\tsize: file.size,\n\t\t\t\t\t\t\t\ttoken: file.token,\n\t\t\t\t\t\t\t\tuploading: file.uploading,\n\t\t\t\t\t\t\t\tuploadedAt: file.uploadedAt,\n\t\t\t\t\t\t\t\turl: file.url,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\t// Return file info\n\t\t\t\t\tcallback.call(this, undefined, file);\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst ws = await this.getWriteStream(fileId, file);\n\t\t\tws.on('error', errorHandler);\n\t\t\tws.once('finish', finishHandler);\n\n\t\t\t// Execute transformation\n\t\t\tthis.transformWrite(rs, ws, fileId, file);\n\t\t};\n\t}\n\n\tasync removeById(fileId: string) {\n\t\t// Delete the physical file in the store\n\t\tawait this.delete(fileId);\n\n\t\tconst tmpFile = UploadFS.getTempFilePath(fileId);\n\n\t\t// Delete the temp file\n\t\tfs.stat(tmpFile, (err) => {\n\t\t\t!err &&\n\t\t\t\tfs.unlink(tmpFile, (err2) => {\n\t\t\t\t\terr2 && console.error(`ufs: cannot delete temp file at ${tmpFile} (${err2.message})`);\n\t\t\t\t});\n\t\t});\n\n\t\tawait this.getCollection().removeById(fileId);\n\t}\n\n\tasync delete(_fileId: string): Promise<any> {\n\t\tthrow new Error('delete is not implemented');\n\t}\n\n\tgenerateToken(pattern?: string) {\n\t\treturn (pattern || 'xyxyxyxyxy').replace(/[xy]/g, (c) => {\n\t\t\t// eslint-disable-next-line no-mixed-operators\n\t\t\tconst r = (Math.random() * 16) | 0;\n\t\t\tconst v = c === 'x' ? r : (r & 0x3) | 0x8;\n\t\t\tconst s = v.toString(16);\n\t\t\treturn Math.round(Math.random()) ? s.toUpperCase() : s;\n\t\t});\n\t}\n\n\tgetCollection() {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\treturn this.options.collection!;\n\t}\n\n\tasync getFilePath(_fileId: string, _file?: IUpload): Promise<string> {\n\t\tthrow new Error('Store.getFilePath is not implemented');\n\t}\n\n\tasync getFileRelativeURL(fileId: string) {\n\t\tconst file = await this.getCollection().findOne(fileId, { projection: { name: 1 } });\n\t\treturn file ? this.getRelativeURL(`${fileId}/${file.name}`) : undefined;\n\t}\n\n\tasync getFileURL(fileId: string) {\n\t\tconst file = await this.getCollection().findOne(fileId, { projection: { name: 1 } });\n\t\treturn file ? this.getURL(`${fileId}/${file.name}`) : undefined;\n\t}\n\n\tgetFilter() {\n\t\treturn this.options.filter;\n\t}\n\n\tgetName() {\n\t\treturn this.options.name;\n\t}\n\n\tasync getReadStream(_fileId: string, _file: IUpload, _options?: { start?: number; end?: number }): Promise<stream.Readable> {\n\t\tthrow new Error('Store.getReadStream is not implemented');\n\t}\n\n\tgetRelativeURL(path: string) {\n\t\tconst rootUrl = Meteor.absoluteUrl().replace(/\\/+$/, '');\n\t\tconst rootPath = rootUrl.replace(/^[a-z]+:\\/\\/[^/]+\\/*/gi, '');\n\t\tconst storeName = this.getName();\n\t\tpath = String(path).replace(/\\/$/, '').trim();\n\t\treturn encodeURI(`${rootPath}/${UploadFS.config.storesPath}/${storeName}/${path}`);\n\t}\n\n\tgetURL(path: string) {\n\t\tconst rootUrl = Meteor.absoluteUrl('', { secure: UploadFS.config.https }).replace(/\\/+$/, '');\n\t\tconst storeName = this.getName();\n\t\tpath = String(path).replace(/\\/$/, '').trim();\n\t\treturn encodeURI(`${rootUrl}/${UploadFS.config.storesPath}/${storeName}/${path}`);\n\t}\n\n\tasync getRedirectURL(_file: IUpload, _forceDownload = false): Promise<string> {\n\t\tthrow new Error('getRedirectURL is not implemented');\n\t}\n\n\tasync getWriteStream(_fileId: string, _file: IUpload): Promise<stream.Writable> {\n\t\tthrow new Error('getWriteStream is not implemented');\n\t}\n\n\tonCopyError(err: Error, fileId: string, _file: IUpload) {\n\t\tconsole.error(`ufs: cannot copy file \"${fileId}\" (${err.message})`, err);\n\t}\n\n\tasync onFinishUpload(_file: IUpload) {\n\t\t//\n\t}\n\n\tasync onRead(_fileId: string, _file: IUpload, _request: createServer.IncomingMessage, _response: http.ServerResponse) {\n\t\treturn true;\n\t}\n\n\tonReadError(err: Error, fileId: string, _file: IUpload) {\n\t\tconsole.error(`ufs: cannot read file \"${fileId}\" (${err.message})`, err);\n\t}\n\n\tasync onValidate(_file: IUpload) {\n\t\t//\n\t}\n\n\tonWriteError(err: Error, fileId: string, _file: IUpload) {\n\t\tconsole.error(`ufs: cannot write file \"${fileId}\" (${err.message})`, err);\n\t}\n\n\ttransformRead(\n\t\treadStream: stream.Readable,\n\t\twriteStream: stream.Writable,\n\t\tfileId: string,\n\t\tfile: IUpload,\n\t\trequest: createServer.IncomingMessage,\n\t\theaders?: Record<string, any>,\n\t) {\n\t\tif (typeof this.options.transformRead === 'function') {\n\t\t\tthis.options.transformRead.call(this, readStream, writeStream, fileId, file, request, headers);\n\t\t} else {\n\t\t\treadStream.pipe(writeStream);\n\t\t}\n\t}\n\n\ttransformWrite(readStream: stream.Readable, writeStream: stream.Writable, fileId: string, file: IUpload) {\n\t\tif (typeof this.options.transformWrite === 'function') {\n\t\t\tthis.options.transformWrite.call(this, readStream, writeStream, fileId, file);\n\t\t} else {\n\t\t\treadStream.pipe(writeStream);\n\t\t}\n\t}\n\n\tasync validate(file: IUpload) {\n\t\tif (typeof this.onValidate === 'function') {\n\t\t\tawait this.onValidate(file);\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c981a5d7aaa792f88ec23acecd85f275cfec3866"}
