{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx","inputSourceMap":{"version":3,"file":"client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx","sourceRoot":"","sources":["client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\nimport {\n\tuseAllPermissions,\n\tusePermission,\n\tuseSetModal,\n\tuseToastMessageDispatch,\n\tuseTranslation,\n\tuseUserRoom,\n\tuseUserSubscription,\n\tuseEndpoint,\n} from '@rocket.chat/ui-contexts';\nimport React, { useMemo } from 'react';\n\nimport GenericModal from '../../../../../components/GenericModal';\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport type { UserInfoAction, UserInfoActionType } from '../useUserInfoActions';\n\nconst getUserIsMuted = (\n\tuser: Pick<IUser, '_id' | 'username'>,\n\troom: IRoom | undefined,\n\tuserCanPostReadonly: boolean,\n): boolean | undefined => {\n\tif (room?.ro) {\n\t\tif (Array.isArray(room.unmuted) && room.unmuted.indexOf(user.username ?? '') !== -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (userCanPostReadonly) {\n\t\t\treturn Array.isArray(room.muted) && room.muted.indexOf(user.username ?? '') !== -1;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn room && Array.isArray(room.muted) && room.muted.indexOf(user.username ?? '') > -1;\n};\n\nexport const useMuteUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst room = useUserRoom(rid);\n\tconst userCanMute = usePermission('mute-user', rid);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst setModal = useSetModal();\n\tconst closeModal = useMutableCallback(() => setModal(null));\n\tconst otherUserCanPostReadonly = useAllPermissions(\n\t\tuseMemo(() => ['post-readonly'], []),\n\t\trid,\n\t);\n\tconst userSubscription = useUserSubscription(rid);\n\n\tconst isMuted = getUserIsMuted(user, room, otherUserCanPostReadonly);\n\tconst roomName = room?.t && escapeHTML(roomCoordinator.getRoomName(room.t, room));\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst { roomCanMute } = getRoomDirectives({ room, showingUserId: user._id, userSubscription });\n\n\tconst mutedMessage = isMuted ? 'User__username__unmuted_in_room__roomName__' : 'User__username__muted_in_room__roomName__';\n\n\tconst muteUser = useEndpoint('POST', isMuted ? '/v1/rooms.unmuteUser' : '/v1/rooms.muteUser');\n\n\tconst muteUserOption = useMemo(() => {\n\t\tconst action = (): Promise<void> | void => {\n\t\t\tconst onConfirm = async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tif (!user.username) {\n\t\t\t\t\t\tthrow new Error('User without username');\n\t\t\t\t\t}\n\n\t\t\t\t\tawait muteUser({ roomId: rid, username: user.username });\n\n\t\t\t\t\treturn dispatchToastMessage({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tmessage: t(mutedMessage, {\n\t\t\t\t\t\t\tusername: user.username,\n\t\t\t\t\t\t\troomName,\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t} finally {\n\t\t\t\t\tcloseModal();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (isMuted) {\n\t\t\t\treturn onConfirm();\n\t\t\t}\n\n\t\t\treturn setModal(\n\t\t\t\t<GenericModal variant='danger' confirmText={t('Yes_mute_user')} onClose={closeModal} onCancel={closeModal} onConfirm={onConfirm}>\n\t\t\t\t\t{t('The_user_wont_be_able_to_type_in_s', roomName)}\n\t\t\t\t</GenericModal>,\n\t\t\t);\n\t\t};\n\n\t\treturn roomCanMute && userCanMute\n\t\t\t? {\n\t\t\t\t\tcontent: t(isMuted ? 'Unmute_user' : 'Mute_user'),\n\t\t\t\t\ticon: isMuted ? ('mic' as const) : ('mic-off' as const),\n\t\t\t\t\tonClick: action,\n\t\t\t\t\ttype: 'management' as UserInfoActionType,\n\t\t\t  }\n\t\t\t: undefined;\n\t}, [\n\t\tcloseModal,\n\t\tmutedMessage,\n\t\tdispatchToastMessage,\n\t\tisMuted,\n\t\tmuteUser,\n\t\trid,\n\t\troomCanMute,\n\t\troomName,\n\t\tsetModal,\n\t\tt,\n\t\tuser.username,\n\t\tuserCanMute,\n\t]);\n\n\treturn muteUserOption;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx","inputSourceMap":{"version":3,"file":"client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx","sourceRoot":"","sources":["client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAC;AACzD,OAAO,EACN,iBAAiB,EACjB,aAAa,EACb,WAAW,EACX,uBAAuB,EACvB,cAAc,EACd,WAAW,EACX,mBAAmB,EACnB,WAAW,GACX,MAAM,0BAA0B,CAAC;AAClC,OAAO,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEvC,OAAO,YAAY,MAAM,wCAAwC,CAAC;AAClE,OAAO,EAAE,eAAe,EAAE,MAAM,0CAA0C,CAAC;AAC3E,OAAO,EAAE,iBAAiB,EAAE,MAAM,gCAAgC,CAAC;AAGnE,MAAM,cAAc,GAAG,CACtB,IAAqC,EACrC,IAAuB,EACvB,mBAA4B,EACN,EAAE;IACxB,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC;QACd,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;YACrF,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,mBAAmB,EAAE,CAAC;YACzB,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;QACpF,CAAC;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAED,OAAO,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1F,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,IAAqC,EAAE,GAAiB,EAA8B,EAAE;IACzH,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;IAC9B,MAAM,WAAW,GAAG,aAAa,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IACpD,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAC/B,MAAM,UAAU,GAAG,kBAAkB,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5D,MAAM,wBAAwB,GAAG,iBAAiB,CACjD,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,EACpC,GAAG,CACH,CAAC;IACF,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC;IAElD,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,wBAAwB,CAAC,CAAC;IACrE,MAAM,QAAQ,GAAG,IAAI,EAAE,CAAC,IAAI,UAAU,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IAElF,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,KAAK,CAAC,mBAAmB,CAAC,CAAC;IAClC,CAAC;IAED,MAAM,EAAE,WAAW,EAAE,GAAG,iBAAiB,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,CAAC,GAAG,EAAE,gBAAgB,EAAE,CAAC,CAAC;IAE/F,MAAM,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,6CAA6C,CAAC,CAAC,CAAC,2CAA2C,CAAC;IAE3H,MAAM,QAAQ,GAAG,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC;IAE9F,MAAM,cAAc,GAAG,OAAO,CAAC,GAAG,EAAE;QACnC,MAAM,MAAM,GAAG,GAAyB,EAAE;YACzC,MAAM,SAAS,GAAG,KAAK,IAAmB,EAAE;gBAC3C,IAAI,CAAC;oBACJ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;wBACpB,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;oBAC1C,CAAC;oBAED,MAAM,QAAQ,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;oBAEzD,OAAO,oBAAoB,CAAC;wBAC3B,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,CAAC,CAAC,YAAY,EAAE;4BACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ;4BACvB,QAAQ;yBACR,CAAC;qBACF,CAAC,CAAC;gBACJ,CAAC;gBAAC,OAAO,KAAc,EAAE,CAAC;oBACzB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;gBACzD,CAAC;wBAAS,CAAC;oBACV,UAAU,EAAE,CAAC;gBACd,CAAC;YACF,CAAC,CAAC;YAEF,IAAI,OAAO,EAAE,CAAC;gBACb,OAAO,SAAS,EAAE,CAAC;YACpB,CAAC;YAED,OAAO,QAAQ,CACd,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAC/H;KAAA,CAAC,CAAC,CAAC,oCAAoC,EAAE,QAAQ,CAAC,CACnD;IAAA,EAAE,YAAY,CAAC,CACf,CAAC;QACH,CAAC,CAAC;QAEF,OAAO,WAAW,IAAI,WAAW;YAChC,CAAC,CAAC;gBACA,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC;gBACjD,IAAI,EAAE,OAAO,CAAC,CAAC,CAAE,KAAe,CAAC,CAAC,CAAE,SAAmB;gBACvD,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE,YAAkC;aACvC;YACH,CAAC,CAAC,SAAS,CAAC;IACd,CAAC,EAAE;QACF,UAAU;QACV,YAAY;QACZ,oBAAoB;QACpB,OAAO;QACP,QAAQ;QACR,GAAG;QACH,WAAW;QACX,QAAQ;QACR,QAAQ;QACR,CAAC;QACD,IAAI,CAAC,QAAQ;QACb,WAAW;KACX,CAAC,CAAC;IAEH,OAAO,cAAc,CAAC;AACvB,CAAC,CAAC","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\nimport {\n\tuseAllPermissions,\n\tusePermission,\n\tuseSetModal,\n\tuseToastMessageDispatch,\n\tuseTranslation,\n\tuseUserRoom,\n\tuseUserSubscription,\n\tuseEndpoint,\n} from '@rocket.chat/ui-contexts';\nimport React, { useMemo } from 'react';\n\nimport GenericModal from '../../../../../components/GenericModal';\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport type { UserInfoAction, UserInfoActionType } from '../useUserInfoActions';\n\nconst getUserIsMuted = (\n\tuser: Pick<IUser, '_id' | 'username'>,\n\troom: IRoom | undefined,\n\tuserCanPostReadonly: boolean,\n): boolean | undefined => {\n\tif (room?.ro) {\n\t\tif (Array.isArray(room.unmuted) && room.unmuted.indexOf(user.username ?? '') !== -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (userCanPostReadonly) {\n\t\t\treturn Array.isArray(room.muted) && room.muted.indexOf(user.username ?? '') !== -1;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn room && Array.isArray(room.muted) && room.muted.indexOf(user.username ?? '') > -1;\n};\n\nexport const useMuteUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst room = useUserRoom(rid);\n\tconst userCanMute = usePermission('mute-user', rid);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst setModal = useSetModal();\n\tconst closeModal = useMutableCallback(() => setModal(null));\n\tconst otherUserCanPostReadonly = useAllPermissions(\n\t\tuseMemo(() => ['post-readonly'], []),\n\t\trid,\n\t);\n\tconst userSubscription = useUserSubscription(rid);\n\n\tconst isMuted = getUserIsMuted(user, room, otherUserCanPostReadonly);\n\tconst roomName = room?.t && escapeHTML(roomCoordinator.getRoomName(room.t, room));\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst { roomCanMute } = getRoomDirectives({ room, showingUserId: user._id, userSubscription });\n\n\tconst mutedMessage = isMuted ? 'User__username__unmuted_in_room__roomName__' : 'User__username__muted_in_room__roomName__';\n\n\tconst muteUser = useEndpoint('POST', isMuted ? '/v1/rooms.unmuteUser' : '/v1/rooms.muteUser');\n\n\tconst muteUserOption = useMemo(() => {\n\t\tconst action = (): Promise<void> | void => {\n\t\t\tconst onConfirm = async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tif (!user.username) {\n\t\t\t\t\t\tthrow new Error('User without username');\n\t\t\t\t\t}\n\n\t\t\t\t\tawait muteUser({ roomId: rid, username: user.username });\n\n\t\t\t\t\treturn dispatchToastMessage({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tmessage: t(mutedMessage, {\n\t\t\t\t\t\t\tusername: user.username,\n\t\t\t\t\t\t\troomName,\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t} finally {\n\t\t\t\t\tcloseModal();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (isMuted) {\n\t\t\t\treturn onConfirm();\n\t\t\t}\n\n\t\t\treturn setModal(\n\t\t\t\t<GenericModal variant='danger' confirmText={t('Yes_mute_user')} onClose={closeModal} onCancel={closeModal} onConfirm={onConfirm}>\n\t\t\t\t\t{t('The_user_wont_be_able_to_type_in_s', roomName)}\n\t\t\t\t</GenericModal>,\n\t\t\t);\n\t\t};\n\n\t\treturn roomCanMute && userCanMute\n\t\t\t? {\n\t\t\t\t\tcontent: t(isMuted ? 'Unmute_user' : 'Mute_user'),\n\t\t\t\t\ticon: isMuted ? ('mic' as const) : ('mic-off' as const),\n\t\t\t\t\tonClick: action,\n\t\t\t\t\ttype: 'management' as UserInfoActionType,\n\t\t\t  }\n\t\t\t: undefined;\n\t}, [\n\t\tcloseModal,\n\t\tmutedMessage,\n\t\tdispatchToastMessage,\n\t\tisMuted,\n\t\tmuteUser,\n\t\trid,\n\t\troomCanMute,\n\t\troomName,\n\t\tsetModal,\n\t\tt,\n\t\tuser.username,\n\t\tuserCanMute,\n\t]);\n\n\treturn muteUserOption;\n};\n"]}}},"code":"module.export({\n  useMuteUserAction: () => useMuteUserAction\n});\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n}, 0);\nlet escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeHTML(v) {\n    escapeHTML = v;\n  }\n}, 1);\nlet useAllPermissions, usePermission, useSetModal, useToastMessageDispatch, useTranslation, useUserRoom, useUserSubscription, useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useAllPermissions(v) {\n    useAllPermissions = v;\n  },\n  usePermission(v) {\n    usePermission = v;\n  },\n  useSetModal(v) {\n    useSetModal = v;\n  },\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  },\n  useTranslation(v) {\n    useTranslation = v;\n  },\n  useUserRoom(v) {\n    useUserRoom = v;\n  },\n  useUserSubscription(v) {\n    useUserSubscription = v;\n  },\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n}, 2);\nlet React, useMemo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 3);\nlet GenericModal;\nmodule.link(\"../../../../../components/GenericModal\", {\n  default(v) {\n    GenericModal = v;\n  }\n}, 4);\nlet roomCoordinator;\nmodule.link(\"../../../../../lib/rooms/roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n}, 5);\nlet getRoomDirectives;\nmodule.link(\"../../../lib/getRoomDirectives\", {\n  getRoomDirectives(v) {\n    getRoomDirectives = v;\n  }\n}, 6);\nconst getUserIsMuted = (user, room, userCanPostReadonly) => {\n  var _user$username3;\n  if (room !== null && room !== void 0 && room.ro) {\n    var _user$username;\n    if (Array.isArray(room.unmuted) && room.unmuted.indexOf((_user$username = user.username) !== null && _user$username !== void 0 ? _user$username : '') !== -1) {\n      return false;\n    }\n    if (userCanPostReadonly) {\n      var _user$username2;\n      return Array.isArray(room.muted) && room.muted.indexOf((_user$username2 = user.username) !== null && _user$username2 !== void 0 ? _user$username2 : '') !== -1;\n    }\n    return true;\n  }\n  return room && Array.isArray(room.muted) && room.muted.indexOf((_user$username3 = user.username) !== null && _user$username3 !== void 0 ? _user$username3 : '') > -1;\n};\nconst useMuteUserAction = (user, rid) => {\n  const t = useTranslation();\n  const room = useUserRoom(rid);\n  const userCanMute = usePermission('mute-user', rid);\n  const dispatchToastMessage = useToastMessageDispatch();\n  const setModal = useSetModal();\n  const closeModal = useMutableCallback(() => setModal(null));\n  const otherUserCanPostReadonly = useAllPermissions(useMemo(() => ['post-readonly'], []), rid);\n  const userSubscription = useUserSubscription(rid);\n  const isMuted = getUserIsMuted(user, room, otherUserCanPostReadonly);\n  const roomName = (room === null || room === void 0 ? void 0 : room.t) && escapeHTML(roomCoordinator.getRoomName(room.t, room));\n  if (!room) {\n    throw Error('Room not provided');\n  }\n  const {\n    roomCanMute\n  } = getRoomDirectives({\n    room,\n    showingUserId: user._id,\n    userSubscription\n  });\n  const mutedMessage = isMuted ? 'User__username__unmuted_in_room__roomName__' : 'User__username__muted_in_room__roomName__';\n  const muteUser = useEndpoint('POST', isMuted ? '/v1/rooms.unmuteUser' : '/v1/rooms.muteUser');\n  const muteUserOption = useMemo(() => {\n    const action = () => {\n      const onConfirm = async () => {\n        try {\n          if (!user.username) {\n            throw new Error('User without username');\n          }\n          await muteUser({\n            roomId: rid,\n            username: user.username\n          });\n          return dispatchToastMessage({\n            type: 'success',\n            message: t(mutedMessage, {\n              username: user.username,\n              roomName\n            })\n          });\n        } catch (error) {\n          dispatchToastMessage({\n            type: 'error',\n            message: error\n          });\n        } finally {\n          closeModal();\n        }\n      };\n      if (isMuted) {\n        return onConfirm();\n      }\n      return setModal( /*#__PURE__*/React.createElement(GenericModal, {\n        variant: \"danger\",\n        confirmText: t('Yes_mute_user'),\n        onClose: closeModal,\n        onCancel: closeModal,\n        onConfirm: onConfirm\n      }, t('The_user_wont_be_able_to_type_in_s', roomName)));\n    };\n    return roomCanMute && userCanMute ? {\n      content: t(isMuted ? 'Unmute_user' : 'Mute_user'),\n      icon: isMuted ? 'mic' : 'mic-off',\n      onClick: action,\n      type: 'management'\n    } : undefined;\n  }, [closeModal, mutedMessage, dispatchToastMessage, isMuted, muteUser, rid, roomCanMute, roomName, setModal, t, user.username, userCanMute]);\n  return muteUserOption;\n};","map":{"version":3,"names":["module","export","useMuteUserAction","useMutableCallback","link","v","escapeHTML","useAllPermissions","usePermission","useSetModal","useToastMessageDispatch","useTranslation","useUserRoom","useUserSubscription","useEndpoint","React","useMemo","default","GenericModal","roomCoordinator","getRoomDirectives","getUserIsMuted","user","room","userCanPostReadonly","_user$username3","ro","_user$username","Array","isArray","unmuted","indexOf","username","_user$username2","muted","rid","t","userCanMute","dispatchToastMessage","setModal","closeModal","otherUserCanPostReadonly","userSubscription","isMuted","roomName","getRoomName","Error","roomCanMute","showingUserId","_id","mutedMessage","muteUser","muteUserOption","action","onConfirm","roomId","type","message","error","createElement","variant","confirmText","onClose","onCancel","content","icon","onClick","undefined"],"sources":["client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\nimport {\n\tuseAllPermissions,\n\tusePermission,\n\tuseSetModal,\n\tuseToastMessageDispatch,\n\tuseTranslation,\n\tuseUserRoom,\n\tuseUserSubscription,\n\tuseEndpoint,\n} from '@rocket.chat/ui-contexts';\nimport React, { useMemo } from 'react';\n\nimport GenericModal from '../../../../../components/GenericModal';\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport type { UserInfoAction, UserInfoActionType } from '../useUserInfoActions';\n\nconst getUserIsMuted = (\n\tuser: Pick<IUser, '_id' | 'username'>,\n\troom: IRoom | undefined,\n\tuserCanPostReadonly: boolean,\n): boolean | undefined => {\n\tif (room?.ro) {\n\t\tif (Array.isArray(room.unmuted) && room.unmuted.indexOf(user.username ?? '') !== -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (userCanPostReadonly) {\n\t\t\treturn Array.isArray(room.muted) && room.muted.indexOf(user.username ?? '') !== -1;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn room && Array.isArray(room.muted) && room.muted.indexOf(user.username ?? '') > -1;\n};\n\nexport const useMuteUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst room = useUserRoom(rid);\n\tconst userCanMute = usePermission('mute-user', rid);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst setModal = useSetModal();\n\tconst closeModal = useMutableCallback(() => setModal(null));\n\tconst otherUserCanPostReadonly = useAllPermissions(\n\t\tuseMemo(() => ['post-readonly'], []),\n\t\trid,\n\t);\n\tconst userSubscription = useUserSubscription(rid);\n\n\tconst isMuted = getUserIsMuted(user, room, otherUserCanPostReadonly);\n\tconst roomName = room?.t && escapeHTML(roomCoordinator.getRoomName(room.t, room));\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst { roomCanMute } = getRoomDirectives({ room, showingUserId: user._id, userSubscription });\n\n\tconst mutedMessage = isMuted ? 'User__username__unmuted_in_room__roomName__' : 'User__username__muted_in_room__roomName__';\n\n\tconst muteUser = useEndpoint('POST', isMuted ? '/v1/rooms.unmuteUser' : '/v1/rooms.muteUser');\n\n\tconst muteUserOption = useMemo(() => {\n\t\tconst action = (): Promise<void> | void => {\n\t\t\tconst onConfirm = async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tif (!user.username) {\n\t\t\t\t\t\tthrow new Error('User without username');\n\t\t\t\t\t}\n\n\t\t\t\t\tawait muteUser({ roomId: rid, username: user.username });\n\n\t\t\t\t\treturn dispatchToastMessage({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tmessage: t(mutedMessage, {\n\t\t\t\t\t\t\tusername: user.username,\n\t\t\t\t\t\t\troomName,\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t} finally {\n\t\t\t\t\tcloseModal();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (isMuted) {\n\t\t\t\treturn onConfirm();\n\t\t\t}\n\n\t\t\treturn setModal(\n\t\t\t\t<GenericModal variant='danger' confirmText={t('Yes_mute_user')} onClose={closeModal} onCancel={closeModal} onConfirm={onConfirm}>\n\t\t\t\t\t{t('The_user_wont_be_able_to_type_in_s', roomName)}\n\t\t\t\t</GenericModal>,\n\t\t\t);\n\t\t};\n\n\t\treturn roomCanMute && userCanMute\n\t\t\t? {\n\t\t\t\t\tcontent: t(isMuted ? 'Unmute_user' : 'Mute_user'),\n\t\t\t\t\ticon: isMuted ? ('mic' as const) : ('mic-off' as const),\n\t\t\t\t\tonClick: action,\n\t\t\t\t\ttype: 'management' as UserInfoActionType,\n\t\t\t  }\n\t\t\t: undefined;\n\t}, [\n\t\tcloseModal,\n\t\tmutedMessage,\n\t\tdispatchToastMessage,\n\t\tisMuted,\n\t\tmuteUser,\n\t\trid,\n\t\troomCanMute,\n\t\troomName,\n\t\tsetModal,\n\t\tt,\n\t\tuser.username,\n\t\tuserCanMute,\n\t]);\n\n\treturn muteUserOption;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7c37a7dcd12ee7c99c3288aa654cc89437a4a4e3"}
