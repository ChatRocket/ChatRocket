{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/threads/server/hooks/aftersavemessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/threads/server/hooks/aftersavemessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/threads/server/hooks/aftersavemessage.ts","inputSourceMap":{"version":3,"file":"app/threads/server/hooks/aftersavemessage.ts","sourceRoot":"","sources":["app/threads/server/hooks/aftersavemessage.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { isEditedMessage } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { notifyOnMessageChange } from '../../../lib/server/lib/notifyListener';\nimport { updateThreadUsersSubscriptions, getMentions } from '../../../lib/server/lib/notifyUsersOnMessage';\nimport { sendMessageNotifications } from '../../../lib/server/lib/sendNotificationsOnMessage';\nimport { settings } from '../../../settings/server';\nimport { reply } from '../functions';\n\nasync function notifyUsersOnReply(message: IMessage, replies: IUser['_id'][]) {\n\t// skips this callback if the message was edited\n\tif (isEditedMessage(message)) {\n\t\treturn message;\n\t}\n\n\tawait updateThreadUsersSubscriptions(message, replies);\n\n\treturn message;\n}\n\nasync function metaData(message: IMessage, parentMessage: IMessage, followers: string[]) {\n\tawait reply({ tmid: message.tmid }, message, parentMessage, followers);\n\n\treturn message;\n}\n\nconst notification = async (message: IMessage, room: IRoom, replies: string[]) => {\n\t// skips this callback if the message was edited\n\tif (isEditedMessage(message)) {\n\t\treturn message;\n\t}\n\n\t// will send a notification to everyone who replied/followed the thread except the owner of the message\n\tawait sendMessageNotifications(message, room, replies);\n\n\treturn message;\n};\n\nexport async function processThreads(message: IMessage, room: IRoom) {\n\tif (!message.tmid) {\n\t\treturn message;\n\t}\n\n\tconst parentMessage = await Messages.findOneById(message.tmid);\n\tif (!parentMessage) {\n\t\treturn message;\n\t}\n\n\tconst { mentionIds } = await getMentions(message);\n\n\tconst replies = [\n\t\t...new Set([\n\t\t\t...((!parentMessage.tcount ? [parentMessage.u._id] : parentMessage.replies) || []),\n\t\t\t...(!parentMessage.tcount && room.t === 'd' && room.uids ? room.uids : []),\n\t\t\t...mentionIds,\n\t\t]),\n\t].filter((userId) => userId !== message.u._id);\n\n\tawait notifyUsersOnReply(message, replies);\n\tawait metaData(message, parentMessage, replies);\n\tawait notification(message, room, replies);\n\tvoid notifyOnMessageChange({\n\t\tid: message.tmid,\n\t});\n\n\treturn message;\n}\n\nMeteor.startup(() => {\n\tsettings.watch<boolean>('Threads_enabled', (value) => {\n\t\tif (!value) {\n\t\t\tcallbacks.remove('afterSaveMessage', 'threads-after-save-message');\n\t\t\treturn;\n\t\t}\n\t\tcallbacks.add(\n\t\t\t'afterSaveMessage',\n\t\t\tasync (message, { room }) => {\n\t\t\t\treturn processThreads(message, room);\n\t\t\t},\n\t\t\tcallbacks.priority.LOW,\n\t\t\t'threads-after-save-message',\n\t\t);\n\t});\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/threads/server/hooks/aftersavemessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/threads/server/hooks/aftersavemessage.ts","inputSourceMap":{"version":3,"file":"app/threads/server/hooks/aftersavemessage.ts","sourceRoot":"","sources":["app/threads/server/hooks/aftersavemessage.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { isEditedMessage } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { notifyOnMessageChange } from '../../../lib/server/lib/notifyListener';\nimport { updateThreadUsersSubscriptions, getMentions } from '../../../lib/server/lib/notifyUsersOnMessage';\nimport { sendMessageNotifications } from '../../../lib/server/lib/sendNotificationsOnMessage';\nimport { settings } from '../../../settings/server';\nimport { reply } from '../functions';\n\nasync function notifyUsersOnReply(message: IMessage, replies: IUser['_id'][]) {\n\t// skips this callback if the message was edited\n\tif (isEditedMessage(message)) {\n\t\treturn message;\n\t}\n\n\tawait updateThreadUsersSubscriptions(message, replies);\n\n\treturn message;\n}\n\nasync function metaData(message: IMessage, parentMessage: IMessage, followers: string[]) {\n\tawait reply({ tmid: message.tmid }, message, parentMessage, followers);\n\n\treturn message;\n}\n\nconst notification = async (message: IMessage, room: IRoom, replies: string[]) => {\n\t// skips this callback if the message was edited\n\tif (isEditedMessage(message)) {\n\t\treturn message;\n\t}\n\n\t// will send a notification to everyone who replied/followed the thread except the owner of the message\n\tawait sendMessageNotifications(message, room, replies);\n\n\treturn message;\n};\n\nexport async function processThreads(message: IMessage, room: IRoom) {\n\tif (!message.tmid) {\n\t\treturn message;\n\t}\n\n\tconst parentMessage = await Messages.findOneById(message.tmid);\n\tif (!parentMessage) {\n\t\treturn message;\n\t}\n\n\tconst { mentionIds } = await getMentions(message);\n\n\tconst replies = [\n\t\t...new Set([\n\t\t\t...((!parentMessage.tcount ? [parentMessage.u._id] : parentMessage.replies) || []),\n\t\t\t...(!parentMessage.tcount && room.t === 'd' && room.uids ? room.uids : []),\n\t\t\t...mentionIds,\n\t\t]),\n\t].filter((userId) => userId !== message.u._id);\n\n\tawait notifyUsersOnReply(message, replies);\n\tawait metaData(message, parentMessage, replies);\n\tawait notification(message, room, replies);\n\tvoid notifyOnMessageChange({\n\t\tid: message.tmid,\n\t});\n\n\treturn message;\n}\n\nMeteor.startup(() => {\n\tsettings.watch<boolean>('Threads_enabled', (value) => {\n\t\tif (!value) {\n\t\t\tcallbacks.remove('afterSaveMessage', 'threads-after-save-message');\n\t\t\treturn;\n\t\t}\n\t\tcallbacks.add(\n\t\t\t'afterSaveMessage',\n\t\t\tasync (message, { room }) => {\n\t\t\t\treturn processThreads(message, room);\n\t\t\t},\n\t\t\tcallbacks.priority.LOW,\n\t\t\t'threads-after-save-message',\n\t\t);\n\t});\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      processThreads: () => processThreads\n    });\n    let isEditedMessage;\n    module.link(\"@rocket.chat/core-typings\", {\n      isEditedMessage(v) {\n        isEditedMessage = v;\n      }\n    }, 0);\n    let Messages;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 3);\n    let notifyOnMessageChange;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnMessageChange(v) {\n        notifyOnMessageChange = v;\n      }\n    }, 4);\n    let updateThreadUsersSubscriptions, getMentions;\n    module.link(\"../../../lib/server/lib/notifyUsersOnMessage\", {\n      updateThreadUsersSubscriptions(v) {\n        updateThreadUsersSubscriptions = v;\n      },\n      getMentions(v) {\n        getMentions = v;\n      }\n    }, 5);\n    let sendMessageNotifications;\n    module.link(\"../../../lib/server/lib/sendNotificationsOnMessage\", {\n      sendMessageNotifications(v) {\n        sendMessageNotifications = v;\n      }\n    }, 6);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 7);\n    let reply;\n    module.link(\"../functions\", {\n      reply(v) {\n        reply = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function notifyUsersOnReply(message, replies) {\n      // skips this callback if the message was edited\n      if (isEditedMessage(message)) {\n        return message;\n      }\n      await updateThreadUsersSubscriptions(message, replies);\n      return message;\n    }\n    async function metaData(message, parentMessage, followers) {\n      await reply({\n        tmid: message.tmid\n      }, message, parentMessage, followers);\n      return message;\n    }\n    const notification = async (message, room, replies) => {\n      // skips this callback if the message was edited\n      if (isEditedMessage(message)) {\n        return message;\n      }\n      // will send a notification to everyone who replied/followed the thread except the owner of the message\n      await sendMessageNotifications(message, room, replies);\n      return message;\n    };\n    async function processThreads(message, room) {\n      if (!message.tmid) {\n        return message;\n      }\n      const parentMessage = await Messages.findOneById(message.tmid);\n      if (!parentMessage) {\n        return message;\n      }\n      const {\n        mentionIds\n      } = await getMentions(message);\n      const replies = [...new Set([...((!parentMessage.tcount ? [parentMessage.u._id] : parentMessage.replies) || []), ...(!parentMessage.tcount && room.t === 'd' && room.uids ? room.uids : []), ...mentionIds])].filter(userId => userId !== message.u._id);\n      await notifyUsersOnReply(message, replies);\n      await metaData(message, parentMessage, replies);\n      await notification(message, room, replies);\n      void notifyOnMessageChange({\n        id: message.tmid\n      });\n      return message;\n    }\n    Meteor.startup(() => {\n      settings.watch('Threads_enabled', value => {\n        if (!value) {\n          callbacks.remove('afterSaveMessage', 'threads-after-save-message');\n          return;\n        }\n        callbacks.add('afterSaveMessage', async (message, _ref) => {\n          let {\n            room\n          } = _ref;\n          return processThreads(message, room);\n        }, callbacks.priority.LOW, 'threads-after-save-message');\n      });\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","processThreads","isEditedMessage","link","v","Messages","Meteor","callbacks","notifyOnMessageChange","updateThreadUsersSubscriptions","getMentions","sendMessageNotifications","settings","reply","__reifyWaitForDeps__","notifyUsersOnReply","message","replies","metaData","parentMessage","followers","tmid","notification","room","findOneById","mentionIds","Set","tcount","u","_id","t","uids","filter","userId","id","startup","watch","value","remove","add","_ref","priority","LOW","__reify_async_result__","_reifyError","self","async"],"sources":["app/threads/server/hooks/aftersavemessage.ts"],"sourcesContent":["import type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { isEditedMessage } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { notifyOnMessageChange } from '../../../lib/server/lib/notifyListener';\nimport { updateThreadUsersSubscriptions, getMentions } from '../../../lib/server/lib/notifyUsersOnMessage';\nimport { sendMessageNotifications } from '../../../lib/server/lib/sendNotificationsOnMessage';\nimport { settings } from '../../../settings/server';\nimport { reply } from '../functions';\n\nasync function notifyUsersOnReply(message: IMessage, replies: IUser['_id'][]) {\n\t// skips this callback if the message was edited\n\tif (isEditedMessage(message)) {\n\t\treturn message;\n\t}\n\n\tawait updateThreadUsersSubscriptions(message, replies);\n\n\treturn message;\n}\n\nasync function metaData(message: IMessage, parentMessage: IMessage, followers: string[]) {\n\tawait reply({ tmid: message.tmid }, message, parentMessage, followers);\n\n\treturn message;\n}\n\nconst notification = async (message: IMessage, room: IRoom, replies: string[]) => {\n\t// skips this callback if the message was edited\n\tif (isEditedMessage(message)) {\n\t\treturn message;\n\t}\n\n\t// will send a notification to everyone who replied/followed the thread except the owner of the message\n\tawait sendMessageNotifications(message, room, replies);\n\n\treturn message;\n};\n\nexport async function processThreads(message: IMessage, room: IRoom) {\n\tif (!message.tmid) {\n\t\treturn message;\n\t}\n\n\tconst parentMessage = await Messages.findOneById(message.tmid);\n\tif (!parentMessage) {\n\t\treturn message;\n\t}\n\n\tconst { mentionIds } = await getMentions(message);\n\n\tconst replies = [\n\t\t...new Set([\n\t\t\t...((!parentMessage.tcount ? [parentMessage.u._id] : parentMessage.replies) || []),\n\t\t\t...(!parentMessage.tcount && room.t === 'd' && room.uids ? room.uids : []),\n\t\t\t...mentionIds,\n\t\t]),\n\t].filter((userId) => userId !== message.u._id);\n\n\tawait notifyUsersOnReply(message, replies);\n\tawait metaData(message, parentMessage, replies);\n\tawait notification(message, room, replies);\n\tvoid notifyOnMessageChange({\n\t\tid: message.tmid,\n\t});\n\n\treturn message;\n}\n\nMeteor.startup(() => {\n\tsettings.watch<boolean>('Threads_enabled', (value) => {\n\t\tif (!value) {\n\t\t\tcallbacks.remove('afterSaveMessage', 'threads-after-save-message');\n\t\t\treturn;\n\t\t}\n\t\tcallbacks.add(\n\t\t\t'afterSaveMessage',\n\t\t\tasync (message, { room }) => {\n\t\t\t\treturn processThreads(message, room);\n\t\t\t},\n\t\t\tcallbacks.priority.LOW,\n\t\t\t'threads-after-save-message',\n\t\t);\n\t});\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2a628f4f0dfa7dccb6cb3733233cfb4c9d3491f0"}
