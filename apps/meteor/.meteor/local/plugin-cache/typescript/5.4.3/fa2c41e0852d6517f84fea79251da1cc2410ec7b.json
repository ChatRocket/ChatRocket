{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/business-hour/LivechatBusinessHours.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/business-hour/LivechatBusinessHours.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/business-hour/LivechatBusinessHours.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/business-hour/LivechatBusinessHours.ts","sourceRoot":"","sources":["app/livechat/server/business-hour/LivechatBusinessHours.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,yBAAyB,EAAE,MAAM,2BAA2B,CAAC;AACtE,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAEnC,MAAM,CAAC,MAAM,4BAA4B,GAAG,GAA0B,EAAE;IACvE,MAAM,IAAI,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC5F,MAAM,UAAU,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC1C,OAAO;QACN,GAAG,EAAE,IAAI,QAAQ,EAAE,CAAC,WAAW,EAAE;QACjC,IAAI,EAAE,EAAE;QACR,MAAM,EAAE,IAAI;QACZ,IAAI,EAAE,yBAAyB,CAAC,OAAO;QACvC,EAAE,EAAE,IAAI,IAAI,EAAE;QACd,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;YACpC,GAAG;YACH,KAAK,EAAE;gBACN,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE;oBACJ,SAAS,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACpE,IAAI,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;iBAChE;gBACD,IAAI,EAAE;oBACL,SAAS,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;oBAC9D,IAAI,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;iBAC1D;aACD;YACD,MAAM,EAAE;gBACP,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE;oBACJ,SAAS,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACpE,IAAI,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;iBAChE;gBACD,IAAI,EAAE;oBACL,SAAS,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;oBAC9D,IAAI,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;iBAC1D;aACD;YACD,IAAI,EAAE,KAAK,GAAG,CAAC;YACf,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC;SAC/B,CAAC,CAAC;QACH,QAAQ,EAAE;YACT,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE;YACvB,GAAG,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC;SACtC;KACD,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { ILivechatBusinessHour } from '@rocket.chat/core-typings';\nimport { LivechatBusinessHourTypes } from '@rocket.chat/core-typings';\nimport moment from 'moment-timezone';\nimport { ObjectId } from 'mongodb';\n\nexport const createDefaultBusinessHourRow = (): ILivechatBusinessHour => {\n\tconst days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\tconst closedDays = ['Saturday', 'Sunday'];\n\treturn {\n\t\t_id: new ObjectId().toHexString(),\n\t\tname: '',\n\t\tactive: true,\n\t\ttype: LivechatBusinessHourTypes.DEFAULT,\n\t\tts: new Date(),\n\t\tworkHours: days.map((day, index) => ({\n\t\t\tday,\n\t\t\tstart: {\n\t\t\t\ttime: '08:00',\n\t\t\t\tutc: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:08:00`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:08:00`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t},\n\t\t\t\tcron: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:08:00`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:08:00`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfinish: {\n\t\t\t\ttime: '20:00',\n\t\t\t\tutc: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:20:00`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:20:00`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t},\n\t\t\t\tcron: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:20:00`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:20:00`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcode: index + 1,\n\t\t\topen: !closedDays.includes(day),\n\t\t})),\n\t\ttimezone: {\n\t\t\tname: moment.tz.guess(),\n\t\t\tutc: String(moment().utcOffset() / 60),\n\t\t},\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/business-hour/LivechatBusinessHours.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/business-hour/LivechatBusinessHours.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/business-hour/LivechatBusinessHours.ts","sourceRoot":"","sources":["app/livechat/server/business-hour/LivechatBusinessHours.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,yBAAyB,EAAE,MAAM,2BAA2B,CAAC;AACtE,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAEnC,MAAM,CAAC,MAAM,4BAA4B,GAAG,GAA0B,EAAE;IACvE,MAAM,IAAI,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC5F,MAAM,UAAU,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC1C,OAAO;QACN,GAAG,EAAE,IAAI,QAAQ,EAAE,CAAC,WAAW,EAAE;QACjC,IAAI,EAAE,EAAE;QACR,MAAM,EAAE,IAAI;QACZ,IAAI,EAAE,yBAAyB,CAAC,OAAO;QACvC,EAAE,EAAE,IAAI,IAAI,EAAE;QACd,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;YACpC,GAAG;YACH,KAAK,EAAE;gBACN,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE;oBACJ,SAAS,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACpE,IAAI,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;iBAChE;gBACD,IAAI,EAAE;oBACL,SAAS,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;oBAC9D,IAAI,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;iBAC1D;aACD;YACD,MAAM,EAAE;gBACP,IAAI,EAAE,OAAO;gBACb,GAAG,EAAE;oBACJ,SAAS,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;oBACpE,IAAI,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;iBAChE;gBACD,IAAI,EAAE;oBACL,SAAS,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;oBAC9D,IAAI,EAAE,MAAM,CAAC,GAAG,GAAG,QAAQ,EAAE,YAAY,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;iBAC1D;aACD;YACD,IAAI,EAAE,KAAK,GAAG,CAAC;YACf,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC;SAC/B,CAAC,CAAC;QACH,QAAQ,EAAE;YACT,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE;YACvB,GAAG,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC;SACtC;KACD,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { ILivechatBusinessHour } from '@rocket.chat/core-typings';\nimport { LivechatBusinessHourTypes } from '@rocket.chat/core-typings';\nimport moment from 'moment-timezone';\nimport { ObjectId } from 'mongodb';\n\nexport const createDefaultBusinessHourRow = (): ILivechatBusinessHour => {\n\tconst days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\tconst closedDays = ['Saturday', 'Sunday'];\n\treturn {\n\t\t_id: new ObjectId().toHexString(),\n\t\tname: '',\n\t\tactive: true,\n\t\ttype: LivechatBusinessHourTypes.DEFAULT,\n\t\tts: new Date(),\n\t\tworkHours: days.map((day, index) => ({\n\t\t\tday,\n\t\t\tstart: {\n\t\t\t\ttime: '08:00',\n\t\t\t\tutc: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:08:00`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:08:00`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t},\n\t\t\t\tcron: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:08:00`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:08:00`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfinish: {\n\t\t\t\ttime: '20:00',\n\t\t\t\tutc: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:20:00`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:20:00`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t},\n\t\t\t\tcron: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:20:00`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:20:00`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcode: index + 1,\n\t\t\topen: !closedDays.includes(day),\n\t\t})),\n\t\ttimezone: {\n\t\t\tname: moment.tz.guess(),\n\t\t\tutc: String(moment().utcOffset() / 60),\n\t\t},\n\t};\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      createDefaultBusinessHourRow: () => createDefaultBusinessHourRow\n    });\n    let LivechatBusinessHourTypes;\n    module.link(\"@rocket.chat/core-typings\", {\n      LivechatBusinessHourTypes(v) {\n        LivechatBusinessHourTypes = v;\n      }\n    }, 0);\n    let moment;\n    module.link(\"moment-timezone\", {\n      default(v) {\n        moment = v;\n      }\n    }, 1);\n    let ObjectId;\n    module.link(\"mongodb\", {\n      ObjectId(v) {\n        ObjectId = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const createDefaultBusinessHourRow = () => {\n      const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n      const closedDays = ['Saturday', 'Sunday'];\n      return {\n        _id: new ObjectId().toHexString(),\n        name: '',\n        active: true,\n        type: LivechatBusinessHourTypes.DEFAULT,\n        ts: new Date(),\n        workHours: days.map((day, index) => ({\n          day,\n          start: {\n            time: '08:00',\n            utc: {\n              dayOfWeek: moment(\"\".concat(day, \":08:00\"), 'dddd:HH:mm').utc().format('dddd'),\n              time: moment(\"\".concat(day, \":08:00\"), 'dddd:HH:mm').utc().format('HH:mm')\n            },\n            cron: {\n              dayOfWeek: moment(\"\".concat(day, \":08:00\"), 'dddd:HH:mm').format('dddd'),\n              time: moment(\"\".concat(day, \":08:00\"), 'dddd:HH:mm').format('HH:mm')\n            }\n          },\n          finish: {\n            time: '20:00',\n            utc: {\n              dayOfWeek: moment(\"\".concat(day, \":20:00\"), 'dddd:HH:mm').utc().format('dddd'),\n              time: moment(\"\".concat(day, \":20:00\"), 'dddd:HH:mm').utc().format('HH:mm')\n            },\n            cron: {\n              dayOfWeek: moment(\"\".concat(day, \":20:00\"), 'dddd:HH:mm').format('dddd'),\n              time: moment(\"\".concat(day, \":20:00\"), 'dddd:HH:mm').format('HH:mm')\n            }\n          },\n          code: index + 1,\n          open: !closedDays.includes(day)\n        })),\n        timezone: {\n          name: moment.tz.guess(),\n          utc: String(moment().utcOffset() / 60)\n        }\n      };\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","createDefaultBusinessHourRow","LivechatBusinessHourTypes","link","v","moment","default","ObjectId","__reifyWaitForDeps__","days","closedDays","_id","toHexString","name","active","type","DEFAULT","ts","Date","workHours","map","day","index","start","time","utc","dayOfWeek","concat","format","cron","finish","code","open","includes","timezone","tz","guess","String","utcOffset","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/business-hour/LivechatBusinessHours.ts"],"sourcesContent":["import type { ILivechatBusinessHour } from '@rocket.chat/core-typings';\nimport { LivechatBusinessHourTypes } from '@rocket.chat/core-typings';\nimport moment from 'moment-timezone';\nimport { ObjectId } from 'mongodb';\n\nexport const createDefaultBusinessHourRow = (): ILivechatBusinessHour => {\n\tconst days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\tconst closedDays = ['Saturday', 'Sunday'];\n\treturn {\n\t\t_id: new ObjectId().toHexString(),\n\t\tname: '',\n\t\tactive: true,\n\t\ttype: LivechatBusinessHourTypes.DEFAULT,\n\t\tts: new Date(),\n\t\tworkHours: days.map((day, index) => ({\n\t\t\tday,\n\t\t\tstart: {\n\t\t\t\ttime: '08:00',\n\t\t\t\tutc: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:08:00`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:08:00`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t},\n\t\t\t\tcron: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:08:00`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:08:00`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t},\n\t\t\t},\n\t\t\tfinish: {\n\t\t\t\ttime: '20:00',\n\t\t\t\tutc: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:20:00`, 'dddd:HH:mm').utc().format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:20:00`, 'dddd:HH:mm').utc().format('HH:mm'),\n\t\t\t\t},\n\t\t\t\tcron: {\n\t\t\t\t\tdayOfWeek: moment(`${day}:20:00`, 'dddd:HH:mm').format('dddd'),\n\t\t\t\t\ttime: moment(`${day}:20:00`, 'dddd:HH:mm').format('HH:mm'),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcode: index + 1,\n\t\t\topen: !closedDays.includes(day),\n\t\t})),\n\t\ttimezone: {\n\t\t\tname: moment.tz.guess(),\n\t\t\tutc: String(moment().utcOffset() / 60),\n\t\t},\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"fa2c41e0852d6517f84fea79251da1cc2410ec7b"}
