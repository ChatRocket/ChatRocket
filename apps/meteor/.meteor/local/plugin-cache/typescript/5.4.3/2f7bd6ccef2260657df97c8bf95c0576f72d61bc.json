{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/client/lib/stream/queueManager.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/livechat/client/lib/stream/queueManager.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/client/lib/stream/queueManager.ts","inputSourceMap":{"version":3,"file":"app/livechat/client/lib/stream/queueManager.ts","sourceRoot":"","sources":["app/livechat/client/lib/stream/queueManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatDepartment, ILivechatInquiryRecord, IOmnichannelAgent } from '@rocket.chat/core-typings';\n\nimport { queryClient } from '../../../../../client/lib/queryClient';\nimport { callWithErrorHandling } from '../../../../../client/lib/utils/callWithErrorHandling';\nimport { settings } from '../../../../settings/client';\nimport { sdk } from '../../../../utils/client/lib/SDKClient';\nimport { LivechatInquiry } from '../../collections/LivechatInquiry';\n\nconst departments = new Set();\n\nconst events = {\n\tadded: async (inquiry: ILivechatInquiryRecord) => {\n\t\tif (!departments.has(inquiry.department)) {\n\t\t\treturn;\n\t\t}\n\n\t\tLivechatInquiry.insert({ ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tawait invalidateRoomQueries(inquiry.rid);\n\t},\n\tchanged: async (inquiry: ILivechatInquiryRecord) => {\n\t\tif (inquiry.status !== 'queued' || (inquiry.department && !departments.has(inquiry.department))) {\n\t\t\treturn removeInquiry(inquiry);\n\t\t}\n\n\t\tLivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tawait invalidateRoomQueries(inquiry.rid);\n\t},\n\tremoved: (inquiry: ILivechatInquiryRecord) => removeInquiry(inquiry),\n};\n\nconst invalidateRoomQueries = async (rid: string) => {\n\tawait queryClient.invalidateQueries(['rooms', { reference: rid, type: 'l' }]);\n\tqueryClient.removeQueries(['rooms', rid]);\n\tqueryClient.removeQueries(['/v1/rooms.info', rid]);\n};\n\nconst removeInquiry = async (inquiry: ILivechatInquiryRecord) => {\n\tLivechatInquiry.remove(inquiry._id);\n\treturn queryClient.invalidateQueries(['rooms', { reference: inquiry.rid, type: 'l' }]);\n};\n\nconst getInquiriesFromAPI = async () => {\n\tconst count = settings.get('Livechat_guest_pool_max_number_incoming_livechats_displayed') ?? 0;\n\tconst { inquiries } = await sdk.rest.get('/v1/livechat/inquiries.queuedForUser', { count });\n\treturn inquiries;\n};\n\nconst removeListenerOfDepartment = (departmentId: ILivechatDepartment['_id']) => {\n\tsdk.stop('livechat-inquiry-queue-observer', `department/${departmentId}`);\n\tdepartments.delete(departmentId);\n};\n\nconst appendListenerToDepartment = (departmentId: ILivechatDepartment['_id']) => {\n\tdepartments.add(departmentId);\n\tsdk.stream('livechat-inquiry-queue-observer', [`department/${departmentId}`], async (args) => {\n\t\tif (!('type' in args)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, ...inquiry } = args;\n\t\tawait events[args.type](inquiry);\n\t});\n\treturn () => removeListenerOfDepartment(departmentId);\n};\nconst addListenerForeachDepartment = (departments: ILivechatDepartment['_id'][] = []) => {\n\tconst cleanupFunctions = departments.map((department) => appendListenerToDepartment(department));\n\treturn () => cleanupFunctions.forEach((cleanup) => cleanup());\n};\n\nconst updateInquiries = async (inquiries: ILivechatInquiryRecord[] = []) =>\n\tinquiries.forEach((inquiry) => LivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, _updatedAt: new Date(inquiry._updatedAt) }));\n\nconst getAgentsDepartments = async (userId: IOmnichannelAgent['_id']) => {\n\tconst { departments } = await sdk.rest.get(`/v1/livechat/agents/${userId}/departments`, { enabledDepartmentsOnly: 'true' });\n\treturn departments;\n};\n\nconst removeGlobalListener = () => sdk.stop('livechat-inquiry-queue-observer', 'public');\n\nconst addGlobalListener = () => {\n\tsdk.stream('livechat-inquiry-queue-observer', ['public'], async (args) => {\n\t\tif (!('type' in args)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, ...inquiry } = args;\n\t\tawait events[args.type](inquiry);\n\t});\n\treturn removeGlobalListener;\n};\n\nconst subscribe = async (userId: IOmnichannelAgent['_id']) => {\n\tconst config = await callWithErrorHandling('livechat:getRoutingConfig');\n\tif (config?.autoAssignAgent) {\n\t\treturn;\n\t}\n\n\tconst agentDepartments = (await getAgentsDepartments(userId)).map((department) => department.departmentId);\n\n\t// Register to all depts + public queue always to match the inquiry list returned by backend\n\tconst cleanDepartmentListeners = addListenerForeachDepartment(agentDepartments);\n\tconst globalCleanup = addGlobalListener();\n\n\tconst computation = Tracker.autorun(async () => {\n\t\tconst inquiriesFromAPI = (await getInquiriesFromAPI()) as unknown as ILivechatInquiryRecord[];\n\n\t\tawait updateInquiries(inquiriesFromAPI);\n\t});\n\n\treturn () => {\n\t\tLivechatInquiry.remove({});\n\t\tremoveGlobalListener();\n\t\tcleanDepartmentListeners?.();\n\t\tglobalCleanup?.();\n\t\tdepartments.clear();\n\t\tcomputation.stop();\n\t};\n};\n\nexport const initializeLivechatInquiryStream = (() => {\n\tlet cleanUp: (() => void) | undefined;\n\n\treturn async (...args: Parameters<typeof subscribe>) => {\n\t\tcleanUp?.();\n\t\tcleanUp = await subscribe(...args);\n\t};\n})();\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"production","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/client/lib/stream/queueManager.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/client/lib/stream/queueManager.ts","inputSourceMap":{"version":3,"file":"app/livechat/client/lib/stream/queueManager.ts","sourceRoot":"","sources":["app/livechat/client/lib/stream/queueManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatDepartment, ILivechatInquiryRecord, IOmnichannelAgent } from '@rocket.chat/core-typings';\n\nimport { queryClient } from '../../../../../client/lib/queryClient';\nimport { callWithErrorHandling } from '../../../../../client/lib/utils/callWithErrorHandling';\nimport { settings } from '../../../../settings/client';\nimport { sdk } from '../../../../utils/client/lib/SDKClient';\nimport { LivechatInquiry } from '../../collections/LivechatInquiry';\n\nconst departments = new Set();\n\nconst events = {\n\tadded: async (inquiry: ILivechatInquiryRecord) => {\n\t\tif (!departments.has(inquiry.department)) {\n\t\t\treturn;\n\t\t}\n\n\t\tLivechatInquiry.insert({ ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tawait invalidateRoomQueries(inquiry.rid);\n\t},\n\tchanged: async (inquiry: ILivechatInquiryRecord) => {\n\t\tif (inquiry.status !== 'queued' || (inquiry.department && !departments.has(inquiry.department))) {\n\t\t\treturn removeInquiry(inquiry);\n\t\t}\n\n\t\tLivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tawait invalidateRoomQueries(inquiry.rid);\n\t},\n\tremoved: (inquiry: ILivechatInquiryRecord) => removeInquiry(inquiry),\n};\n\nconst invalidateRoomQueries = async (rid: string) => {\n\tawait queryClient.invalidateQueries(['rooms', { reference: rid, type: 'l' }]);\n\tqueryClient.removeQueries(['rooms', rid]);\n\tqueryClient.removeQueries(['/v1/rooms.info', rid]);\n};\n\nconst removeInquiry = async (inquiry: ILivechatInquiryRecord) => {\n\tLivechatInquiry.remove(inquiry._id);\n\treturn queryClient.invalidateQueries(['rooms', { reference: inquiry.rid, type: 'l' }]);\n};\n\nconst getInquiriesFromAPI = async () => {\n\tconst count = settings.get('Livechat_guest_pool_max_number_incoming_livechats_displayed') ?? 0;\n\tconst { inquiries } = await sdk.rest.get('/v1/livechat/inquiries.queuedForUser', { count });\n\treturn inquiries;\n};\n\nconst removeListenerOfDepartment = (departmentId: ILivechatDepartment['_id']) => {\n\tsdk.stop('livechat-inquiry-queue-observer', `department/${departmentId}`);\n\tdepartments.delete(departmentId);\n};\n\nconst appendListenerToDepartment = (departmentId: ILivechatDepartment['_id']) => {\n\tdepartments.add(departmentId);\n\tsdk.stream('livechat-inquiry-queue-observer', [`department/${departmentId}`], async (args) => {\n\t\tif (!('type' in args)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, ...inquiry } = args;\n\t\tawait events[args.type](inquiry);\n\t});\n\treturn () => removeListenerOfDepartment(departmentId);\n};\nconst addListenerForeachDepartment = (departments: ILivechatDepartment['_id'][] = []) => {\n\tconst cleanupFunctions = departments.map((department) => appendListenerToDepartment(department));\n\treturn () => cleanupFunctions.forEach((cleanup) => cleanup());\n};\n\nconst updateInquiries = async (inquiries: ILivechatInquiryRecord[] = []) =>\n\tinquiries.forEach((inquiry) => LivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, _updatedAt: new Date(inquiry._updatedAt) }));\n\nconst getAgentsDepartments = async (userId: IOmnichannelAgent['_id']) => {\n\tconst { departments } = await sdk.rest.get(`/v1/livechat/agents/${userId}/departments`, { enabledDepartmentsOnly: 'true' });\n\treturn departments;\n};\n\nconst removeGlobalListener = () => sdk.stop('livechat-inquiry-queue-observer', 'public');\n\nconst addGlobalListener = () => {\n\tsdk.stream('livechat-inquiry-queue-observer', ['public'], async (args) => {\n\t\tif (!('type' in args)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, ...inquiry } = args;\n\t\tawait events[args.type](inquiry);\n\t});\n\treturn removeGlobalListener;\n};\n\nconst subscribe = async (userId: IOmnichannelAgent['_id']) => {\n\tconst config = await callWithErrorHandling('livechat:getRoutingConfig');\n\tif (config?.autoAssignAgent) {\n\t\treturn;\n\t}\n\n\tconst agentDepartments = (await getAgentsDepartments(userId)).map((department) => department.departmentId);\n\n\t// Register to all depts + public queue always to match the inquiry list returned by backend\n\tconst cleanDepartmentListeners = addListenerForeachDepartment(agentDepartments);\n\tconst globalCleanup = addGlobalListener();\n\n\tconst computation = Tracker.autorun(async () => {\n\t\tconst inquiriesFromAPI = (await getInquiriesFromAPI()) as unknown as ILivechatInquiryRecord[];\n\n\t\tawait updateInquiries(inquiriesFromAPI);\n\t});\n\n\treturn () => {\n\t\tLivechatInquiry.remove({});\n\t\tremoveGlobalListener();\n\t\tcleanDepartmentListeners?.();\n\t\tglobalCleanup?.();\n\t\tdepartments.clear();\n\t\tcomputation.stop();\n\t};\n};\n\nexport const initializeLivechatInquiryStream = (() => {\n\tlet cleanUp: (() => void) | undefined;\n\n\treturn async (...args: Parameters<typeof subscribe>) => {\n\t\tcleanUp?.();\n\t\tcleanUp = await subscribe(...args);\n\t};\n})();\n"]}}},"code":"const _excluded = [\"type\"],\n  _excluded2 = [\"type\"];\nlet _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n}, 0);\nlet _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 1);\nmodule.export({\n  initializeLivechatInquiryStream: () => initializeLivechatInquiryStream\n});\nlet queryClient;\nmodule.link(\"../../../../../client/lib/queryClient\", {\n  queryClient(v) {\n    queryClient = v;\n  }\n}, 0);\nlet callWithErrorHandling;\nmodule.link(\"../../../../../client/lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling(v) {\n    callWithErrorHandling = v;\n  }\n}, 1);\nlet settings;\nmodule.link(\"../../../../settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n}, 2);\nlet sdk;\nmodule.link(\"../../../../utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 3);\nlet LivechatInquiry;\nmodule.link(\"../../collections/LivechatInquiry\", {\n  LivechatInquiry(v) {\n    LivechatInquiry = v;\n  }\n}, 4);\nconst departments = new Set();\nconst events = {\n  added: async inquiry => {\n    if (!departments.has(inquiry.department)) {\n      return;\n    }\n    LivechatInquiry.insert(_objectSpread(_objectSpread({}, inquiry), {}, {\n      alert: true,\n      _updatedAt: new Date(inquiry._updatedAt)\n    }));\n    await invalidateRoomQueries(inquiry.rid);\n  },\n  changed: async inquiry => {\n    if (inquiry.status !== 'queued' || inquiry.department && !departments.has(inquiry.department)) {\n      return removeInquiry(inquiry);\n    }\n    LivechatInquiry.upsert({\n      _id: inquiry._id\n    }, _objectSpread(_objectSpread({}, inquiry), {}, {\n      alert: true,\n      _updatedAt: new Date(inquiry._updatedAt)\n    }));\n    await invalidateRoomQueries(inquiry.rid);\n  },\n  removed: inquiry => removeInquiry(inquiry)\n};\nconst invalidateRoomQueries = async rid => {\n  await queryClient.invalidateQueries(['rooms', {\n    reference: rid,\n    type: 'l'\n  }]);\n  queryClient.removeQueries(['rooms', rid]);\n  queryClient.removeQueries(['/v1/rooms.info', rid]);\n};\nconst removeInquiry = async inquiry => {\n  LivechatInquiry.remove(inquiry._id);\n  return queryClient.invalidateQueries(['rooms', {\n    reference: inquiry.rid,\n    type: 'l'\n  }]);\n};\nconst getInquiriesFromAPI = async () => {\n  var _settings$get;\n  const count = (_settings$get = settings.get('Livechat_guest_pool_max_number_incoming_livechats_displayed')) !== null && _settings$get !== void 0 ? _settings$get : 0;\n  const {\n    inquiries\n  } = await sdk.rest.get('/v1/livechat/inquiries.queuedForUser', {\n    count\n  });\n  return inquiries;\n};\nconst removeListenerOfDepartment = departmentId => {\n  sdk.stop('livechat-inquiry-queue-observer', \"department/\".concat(departmentId));\n  departments.delete(departmentId);\n};\nconst appendListenerToDepartment = departmentId => {\n  departments.add(departmentId);\n  sdk.stream('livechat-inquiry-queue-observer', [\"department/\".concat(departmentId)], async args => {\n    if (!('type' in args)) {\n      return;\n    }\n    const {\n        type\n      } = args,\n      inquiry = _objectWithoutProperties(args, _excluded);\n    await events[args.type](inquiry);\n  });\n  return () => removeListenerOfDepartment(departmentId);\n};\nconst addListenerForeachDepartment = function () {\n  let departments = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  const cleanupFunctions = departments.map(department => appendListenerToDepartment(department));\n  return () => cleanupFunctions.forEach(cleanup => cleanup());\n};\nconst updateInquiries = async function () {\n  let inquiries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return inquiries.forEach(inquiry => LivechatInquiry.upsert({\n    _id: inquiry._id\n  }, _objectSpread(_objectSpread({}, inquiry), {}, {\n    _updatedAt: new Date(inquiry._updatedAt)\n  })));\n};\nconst getAgentsDepartments = async userId => {\n  const {\n    departments\n  } = await sdk.rest.get(\"/v1/livechat/agents/\".concat(userId, \"/departments\"), {\n    enabledDepartmentsOnly: 'true'\n  });\n  return departments;\n};\nconst removeGlobalListener = () => sdk.stop('livechat-inquiry-queue-observer', 'public');\nconst addGlobalListener = () => {\n  sdk.stream('livechat-inquiry-queue-observer', ['public'], async args => {\n    if (!('type' in args)) {\n      return;\n    }\n    const {\n        type\n      } = args,\n      inquiry = _objectWithoutProperties(args, _excluded2);\n    await events[args.type](inquiry);\n  });\n  return removeGlobalListener;\n};\nconst subscribe = async userId => {\n  const config = await callWithErrorHandling('livechat:getRoutingConfig');\n  if (config !== null && config !== void 0 && config.autoAssignAgent) {\n    return;\n  }\n  const agentDepartments = (await getAgentsDepartments(userId)).map(department => department.departmentId);\n  // Register to all depts + public queue always to match the inquiry list returned by backend\n  const cleanDepartmentListeners = addListenerForeachDepartment(agentDepartments);\n  const globalCleanup = addGlobalListener();\n  const computation = Tracker.autorun(async () => {\n    const inquiriesFromAPI = await getInquiriesFromAPI();\n    await updateInquiries(inquiriesFromAPI);\n  });\n  return () => {\n    LivechatInquiry.remove({});\n    removeGlobalListener();\n    cleanDepartmentListeners === null || cleanDepartmentListeners === void 0 ? void 0 : cleanDepartmentListeners();\n    globalCleanup === null || globalCleanup === void 0 ? void 0 : globalCleanup();\n    departments.clear();\n    computation.stop();\n  };\n};\nconst initializeLivechatInquiryStream = (() => {\n  let cleanUp;\n  return async function () {\n    var _cleanUp;\n    (_cleanUp = cleanUp) === null || _cleanUp === void 0 ? void 0 : _cleanUp();\n    cleanUp = await subscribe(...arguments);\n  };\n})();","map":{"version":3,"names":["_objectWithoutProperties","module","link","default","v","_objectSpread","export","initializeLivechatInquiryStream","queryClient","callWithErrorHandling","settings","sdk","LivechatInquiry","departments","Set","events","added","inquiry","has","department","insert","alert","_updatedAt","Date","invalidateRoomQueries","rid","changed","status","removeInquiry","upsert","_id","removed","invalidateQueries","reference","type","removeQueries","remove","getInquiriesFromAPI","_settings$get","count","get","inquiries","rest","removeListenerOfDepartment","departmentId","stop","concat","delete","appendListenerToDepartment","add","stream","args","_excluded","addListenerForeachDepartment","arguments","length","undefined","cleanupFunctions","map","forEach","cleanup","updateInquiries","getAgentsDepartments","userId","enabledDepartmentsOnly","removeGlobalListener","addGlobalListener","_excluded2","subscribe","config","autoAssignAgent","agentDepartments","cleanDepartmentListeners","globalCleanup","computation","Tracker","autorun","inquiriesFromAPI","clear","cleanUp","_cleanUp"],"sources":["app/livechat/client/lib/stream/queueManager.ts"],"sourcesContent":["import type { ILivechatDepartment, ILivechatInquiryRecord, IOmnichannelAgent } from '@rocket.chat/core-typings';\n\nimport { queryClient } from '../../../../../client/lib/queryClient';\nimport { callWithErrorHandling } from '../../../../../client/lib/utils/callWithErrorHandling';\nimport { settings } from '../../../../settings/client';\nimport { sdk } from '../../../../utils/client/lib/SDKClient';\nimport { LivechatInquiry } from '../../collections/LivechatInquiry';\n\nconst departments = new Set();\n\nconst events = {\n\tadded: async (inquiry: ILivechatInquiryRecord) => {\n\t\tif (!departments.has(inquiry.department)) {\n\t\t\treturn;\n\t\t}\n\n\t\tLivechatInquiry.insert({ ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tawait invalidateRoomQueries(inquiry.rid);\n\t},\n\tchanged: async (inquiry: ILivechatInquiryRecord) => {\n\t\tif (inquiry.status !== 'queued' || (inquiry.department && !departments.has(inquiry.department))) {\n\t\t\treturn removeInquiry(inquiry);\n\t\t}\n\n\t\tLivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tawait invalidateRoomQueries(inquiry.rid);\n\t},\n\tremoved: (inquiry: ILivechatInquiryRecord) => removeInquiry(inquiry),\n};\n\nconst invalidateRoomQueries = async (rid: string) => {\n\tawait queryClient.invalidateQueries(['rooms', { reference: rid, type: 'l' }]);\n\tqueryClient.removeQueries(['rooms', rid]);\n\tqueryClient.removeQueries(['/v1/rooms.info', rid]);\n};\n\nconst removeInquiry = async (inquiry: ILivechatInquiryRecord) => {\n\tLivechatInquiry.remove(inquiry._id);\n\treturn queryClient.invalidateQueries(['rooms', { reference: inquiry.rid, type: 'l' }]);\n};\n\nconst getInquiriesFromAPI = async () => {\n\tconst count = settings.get('Livechat_guest_pool_max_number_incoming_livechats_displayed') ?? 0;\n\tconst { inquiries } = await sdk.rest.get('/v1/livechat/inquiries.queuedForUser', { count });\n\treturn inquiries;\n};\n\nconst removeListenerOfDepartment = (departmentId: ILivechatDepartment['_id']) => {\n\tsdk.stop('livechat-inquiry-queue-observer', `department/${departmentId}`);\n\tdepartments.delete(departmentId);\n};\n\nconst appendListenerToDepartment = (departmentId: ILivechatDepartment['_id']) => {\n\tdepartments.add(departmentId);\n\tsdk.stream('livechat-inquiry-queue-observer', [`department/${departmentId}`], async (args) => {\n\t\tif (!('type' in args)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, ...inquiry } = args;\n\t\tawait events[args.type](inquiry);\n\t});\n\treturn () => removeListenerOfDepartment(departmentId);\n};\nconst addListenerForeachDepartment = (departments: ILivechatDepartment['_id'][] = []) => {\n\tconst cleanupFunctions = departments.map((department) => appendListenerToDepartment(department));\n\treturn () => cleanupFunctions.forEach((cleanup) => cleanup());\n};\n\nconst updateInquiries = async (inquiries: ILivechatInquiryRecord[] = []) =>\n\tinquiries.forEach((inquiry) => LivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, _updatedAt: new Date(inquiry._updatedAt) }));\n\nconst getAgentsDepartments = async (userId: IOmnichannelAgent['_id']) => {\n\tconst { departments } = await sdk.rest.get(`/v1/livechat/agents/${userId}/departments`, { enabledDepartmentsOnly: 'true' });\n\treturn departments;\n};\n\nconst removeGlobalListener = () => sdk.stop('livechat-inquiry-queue-observer', 'public');\n\nconst addGlobalListener = () => {\n\tsdk.stream('livechat-inquiry-queue-observer', ['public'], async (args) => {\n\t\tif (!('type' in args)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, ...inquiry } = args;\n\t\tawait events[args.type](inquiry);\n\t});\n\treturn removeGlobalListener;\n};\n\nconst subscribe = async (userId: IOmnichannelAgent['_id']) => {\n\tconst config = await callWithErrorHandling('livechat:getRoutingConfig');\n\tif (config?.autoAssignAgent) {\n\t\treturn;\n\t}\n\n\tconst agentDepartments = (await getAgentsDepartments(userId)).map((department) => department.departmentId);\n\n\t// Register to all depts + public queue always to match the inquiry list returned by backend\n\tconst cleanDepartmentListeners = addListenerForeachDepartment(agentDepartments);\n\tconst globalCleanup = addGlobalListener();\n\n\tconst computation = Tracker.autorun(async () => {\n\t\tconst inquiriesFromAPI = (await getInquiriesFromAPI()) as unknown as ILivechatInquiryRecord[];\n\n\t\tawait updateInquiries(inquiriesFromAPI);\n\t});\n\n\treturn () => {\n\t\tLivechatInquiry.remove({});\n\t\tremoveGlobalListener();\n\t\tcleanDepartmentListeners?.();\n\t\tglobalCleanup?.();\n\t\tdepartments.clear();\n\t\tcomputation.stop();\n\t};\n};\n\nexport const initializeLivechatInquiryStream = (() => {\n\tlet cleanUp: (() => void) | undefined;\n\n\treturn async (...args: Parameters<typeof subscribe>) => {\n\t\tcleanUp?.();\n\t\tcleanUp = await subscribe(...args);\n\t};\n})();\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2f7bd6ccef2260657df97c8bf95c0576f72d61bc"}
