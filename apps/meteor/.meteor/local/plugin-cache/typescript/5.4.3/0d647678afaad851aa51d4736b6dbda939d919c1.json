{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/v1/transcript.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/v1/transcript.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/v1/transcript.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/v1/transcript.ts","sourceRoot":"","sources":["app/livechat/server/api/v1/transcript.ts"],"names":[],"mappings":"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","sourcesContent":["import { Omnichannel } from '@rocket.chat/core-services';\nimport type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { LivechatRooms, Users } from '@rocket.chat/models';\nimport { isPOSTLivechatTranscriptParams, isPOSTLivechatTranscriptRequestParams } from '@rocket.chat/rest-typings';\n\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { API } from '../../../../api/server';\nimport { Livechat } from '../../lib/LivechatTyped';\nimport { sendTranscript } from '../../lib/sendTranscript';\n\nAPI.v1.addRoute(\n\t'livechat/transcript',\n\t{ validateParams: isPOSTLivechatTranscriptParams },\n\t{\n\t\tasync post() {\n\t\t\tconst { token, rid, email } = this.bodyParams;\n\t\t\tif (!(await sendTranscript({ token, rid, email }))) {\n\t\t\t\treturn API.v1.failure({ message: i18n.t('Error_sending_livechat_transcript') });\n\t\t\t}\n\n\t\t\treturn API.v1.success({ message: i18n.t('Livechat_transcript_sent') });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/transcript/:rid',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['send-omnichannel-chat-transcript'],\n\t\tvalidateParams: {\n\t\t\tPOST: isPOSTLivechatTranscriptRequestParams,\n\t\t},\n\t},\n\t{\n\t\tasync delete() {\n\t\t\tconst { rid } = this.urlParams;\n\t\t\tconst room = await LivechatRooms.findOneById<Pick<IOmnichannelRoom, 'open' | 'transcriptRequest' | 'v'>>(rid, {\n\t\t\t\tprojection: { open: 1, transcriptRequest: 1, v: 1 },\n\t\t\t});\n\n\t\t\tif (!room?.open) {\n\t\t\t\tthrow new Error('error-invalid-room');\n\t\t\t}\n\t\t\tif (!room.transcriptRequest) {\n\t\t\t\tthrow new Error('error-transcript-not-requested');\n\t\t\t}\n\n\t\t\tif (!(await Omnichannel.isWithinMACLimit(room))) {\n\t\t\t\tthrow new Error('error-mac-limit-reached');\n\t\t\t}\n\n\t\t\tawait LivechatRooms.unsetEmailTranscriptRequestedByRoomId(rid);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t\tasync post() {\n\t\t\tconst { rid } = this.urlParams;\n\t\t\tconst { email, subject } = this.bodyParams;\n\n\t\t\tconst user = await Users.findOneById(this.userId, {\n\t\t\t\tprojection: { _id: 1, username: 1, name: 1, utcOffset: 1 },\n\t\t\t});\n\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('error-invalid-user');\n\t\t\t}\n\n\t\t\tawait Livechat.requestTranscript({ rid, email, subject, user });\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/v1/transcript.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/v1/transcript.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/v1/transcript.ts","sourceRoot":"","sources":["app/livechat/server/api/v1/transcript.ts"],"names":[],"mappings":"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","sourcesContent":["import { Omnichannel } from '@rocket.chat/core-services';\nimport type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { LivechatRooms, Users } from '@rocket.chat/models';\nimport { isPOSTLivechatTranscriptParams, isPOSTLivechatTranscriptRequestParams } from '@rocket.chat/rest-typings';\n\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { API } from '../../../../api/server';\nimport { Livechat } from '../../lib/LivechatTyped';\nimport { sendTranscript } from '../../lib/sendTranscript';\n\nAPI.v1.addRoute(\n\t'livechat/transcript',\n\t{ validateParams: isPOSTLivechatTranscriptParams },\n\t{\n\t\tasync post() {\n\t\t\tconst { token, rid, email } = this.bodyParams;\n\t\t\tif (!(await sendTranscript({ token, rid, email }))) {\n\t\t\t\treturn API.v1.failure({ message: i18n.t('Error_sending_livechat_transcript') });\n\t\t\t}\n\n\t\t\treturn API.v1.success({ message: i18n.t('Livechat_transcript_sent') });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/transcript/:rid',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['send-omnichannel-chat-transcript'],\n\t\tvalidateParams: {\n\t\t\tPOST: isPOSTLivechatTranscriptRequestParams,\n\t\t},\n\t},\n\t{\n\t\tasync delete() {\n\t\t\tconst { rid } = this.urlParams;\n\t\t\tconst room = await LivechatRooms.findOneById<Pick<IOmnichannelRoom, 'open' | 'transcriptRequest' | 'v'>>(rid, {\n\t\t\t\tprojection: { open: 1, transcriptRequest: 1, v: 1 },\n\t\t\t});\n\n\t\t\tif (!room?.open) {\n\t\t\t\tthrow new Error('error-invalid-room');\n\t\t\t}\n\t\t\tif (!room.transcriptRequest) {\n\t\t\t\tthrow new Error('error-transcript-not-requested');\n\t\t\t}\n\n\t\t\tif (!(await Omnichannel.isWithinMACLimit(room))) {\n\t\t\t\tthrow new Error('error-mac-limit-reached');\n\t\t\t}\n\n\t\t\tawait LivechatRooms.unsetEmailTranscriptRequestedByRoomId(rid);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t\tasync post() {\n\t\t\tconst { rid } = this.urlParams;\n\t\t\tconst { email, subject } = this.bodyParams;\n\n\t\t\tconst user = await Users.findOneById(this.userId, {\n\t\t\t\tprojection: { _id: 1, username: 1, name: 1, utcOffset: 1 },\n\t\t\t});\n\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('error-invalid-user');\n\t\t\t}\n\n\t\t\tawait Livechat.requestTranscript({ rid, email, subject, user });\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Omnichannel;\n    module.link(\"@rocket.chat/core-services\", {\n      Omnichannel(v) {\n        Omnichannel = v;\n      }\n    }, 0);\n    let LivechatRooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let isPOSTLivechatTranscriptParams, isPOSTLivechatTranscriptRequestParams;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isPOSTLivechatTranscriptParams(v) {\n        isPOSTLivechatTranscriptParams = v;\n      },\n      isPOSTLivechatTranscriptRequestParams(v) {\n        isPOSTLivechatTranscriptRequestParams = v;\n      }\n    }, 2);\n    let i18n;\n    module.link(\"../../../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 3);\n    let API;\n    module.link(\"../../../../api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 4);\n    let Livechat;\n    module.link(\"../../lib/LivechatTyped\", {\n      Livechat(v) {\n        Livechat = v;\n      }\n    }, 5);\n    let sendTranscript;\n    module.link(\"../../lib/sendTranscript\", {\n      sendTranscript(v) {\n        sendTranscript = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('livechat/transcript', {\n      validateParams: isPOSTLivechatTranscriptParams\n    }, {\n      async post() {\n        const {\n          token,\n          rid,\n          email\n        } = this.bodyParams;\n        if (!(await sendTranscript({\n          token,\n          rid,\n          email\n        }))) {\n          return API.v1.failure({\n            message: i18n.t('Error_sending_livechat_transcript')\n          });\n        }\n        return API.v1.success({\n          message: i18n.t('Livechat_transcript_sent')\n        });\n      }\n    });\n    API.v1.addRoute('livechat/transcript/:rid', {\n      authRequired: true,\n      permissionsRequired: ['send-omnichannel-chat-transcript'],\n      validateParams: {\n        POST: isPOSTLivechatTranscriptRequestParams\n      }\n    }, {\n      async delete() {\n        const {\n          rid\n        } = this.urlParams;\n        const room = await LivechatRooms.findOneById(rid, {\n          projection: {\n            open: 1,\n            transcriptRequest: 1,\n            v: 1\n          }\n        });\n        if (!(room !== null && room !== void 0 && room.open)) {\n          throw new Error('error-invalid-room');\n        }\n        if (!room.transcriptRequest) {\n          throw new Error('error-transcript-not-requested');\n        }\n        if (!(await Omnichannel.isWithinMACLimit(room))) {\n          throw new Error('error-mac-limit-reached');\n        }\n        await LivechatRooms.unsetEmailTranscriptRequestedByRoomId(rid);\n        return API.v1.success();\n      },\n      async post() {\n        const {\n          rid\n        } = this.urlParams;\n        const {\n          email,\n          subject\n        } = this.bodyParams;\n        const user = await Users.findOneById(this.userId, {\n          projection: {\n            _id: 1,\n            username: 1,\n            name: 1,\n            utcOffset: 1\n          }\n        });\n        if (!user) {\n          throw new Error('error-invalid-user');\n        }\n        await Livechat.requestTranscript({\n          rid,\n          email,\n          subject,\n          user\n        });\n        return API.v1.success();\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Omnichannel","module","link","v","LivechatRooms","Users","isPOSTLivechatTranscriptParams","isPOSTLivechatTranscriptRequestParams","i18n","API","Livechat","sendTranscript","__reifyWaitForDeps__","v1","addRoute","validateParams","post","token","rid","email","bodyParams","failure","message","t","success","authRequired","permissionsRequired","POST","delete","urlParams","room","findOneById","projection","open","transcriptRequest","Error","isWithinMACLimit","unsetEmailTranscriptRequestedByRoomId","subject","user","userId","_id","username","name","utcOffset","requestTranscript","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/api/v1/transcript.ts"],"sourcesContent":["import { Omnichannel } from '@rocket.chat/core-services';\nimport type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { LivechatRooms, Users } from '@rocket.chat/models';\nimport { isPOSTLivechatTranscriptParams, isPOSTLivechatTranscriptRequestParams } from '@rocket.chat/rest-typings';\n\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { API } from '../../../../api/server';\nimport { Livechat } from '../../lib/LivechatTyped';\nimport { sendTranscript } from '../../lib/sendTranscript';\n\nAPI.v1.addRoute(\n\t'livechat/transcript',\n\t{ validateParams: isPOSTLivechatTranscriptParams },\n\t{\n\t\tasync post() {\n\t\t\tconst { token, rid, email } = this.bodyParams;\n\t\t\tif (!(await sendTranscript({ token, rid, email }))) {\n\t\t\t\treturn API.v1.failure({ message: i18n.t('Error_sending_livechat_transcript') });\n\t\t\t}\n\n\t\t\treturn API.v1.success({ message: i18n.t('Livechat_transcript_sent') });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/transcript/:rid',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['send-omnichannel-chat-transcript'],\n\t\tvalidateParams: {\n\t\t\tPOST: isPOSTLivechatTranscriptRequestParams,\n\t\t},\n\t},\n\t{\n\t\tasync delete() {\n\t\t\tconst { rid } = this.urlParams;\n\t\t\tconst room = await LivechatRooms.findOneById<Pick<IOmnichannelRoom, 'open' | 'transcriptRequest' | 'v'>>(rid, {\n\t\t\t\tprojection: { open: 1, transcriptRequest: 1, v: 1 },\n\t\t\t});\n\n\t\t\tif (!room?.open) {\n\t\t\t\tthrow new Error('error-invalid-room');\n\t\t\t}\n\t\t\tif (!room.transcriptRequest) {\n\t\t\t\tthrow new Error('error-transcript-not-requested');\n\t\t\t}\n\n\t\t\tif (!(await Omnichannel.isWithinMACLimit(room))) {\n\t\t\t\tthrow new Error('error-mac-limit-reached');\n\t\t\t}\n\n\t\t\tawait LivechatRooms.unsetEmailTranscriptRequestedByRoomId(rid);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t\tasync post() {\n\t\t\tconst { rid } = this.urlParams;\n\t\t\tconst { email, subject } = this.bodyParams;\n\n\t\t\tconst user = await Users.findOneById(this.userId, {\n\t\t\t\tprojection: { _id: 1, username: 1, name: 1, utcOffset: 1 },\n\t\t\t});\n\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('error-invalid-user');\n\t\t\t}\n\n\t\t\tawait Livechat.requestTranscript({ rid, email, subject, user });\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"],"mappings":";;;IAAA,IAAAA,WAAS;IAAAC,MAAa,CAAAC,IAAA,CAAM,4BAA4B,EAAC;MAAAF,YAAAG,CAAA;QAAAH,WAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,aAAA,EAAAC,KAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAE,cAAAD,CAAA;QAAAC,aAAA,GAAAD,CAAA;MAAA;MAAAE,MAAAF,CAAA;QAAAE,KAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,8BAAA,EAAAC,qCAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAI,+BAAAH,CAAA;QAAAG,8BAAA,GAAAH,CAAA;MAAA;MAAAI,sCAAAJ,CAAA;QAAAI,qCAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,IAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAM,KAAAL,CAAA;QAAAK,IAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,GAAA;IAAAR,MAAA,CAAAC,IAAA;MAAAO,IAAAN,CAAA;QAAAM,GAAA,GAAAN,CAAA;MAAA;IAAA;IAAA,IAAAO,QAAA;IAAAT,MAAA,CAAAC,IAAA;MAAAQ,SAAAP,CAAA;QAAAO,QAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,cAAA;IAAAV,MAAA,CAAAC,IAAA;MAAAS,eAAAR,CAAA;QAAAQ,cAAA,GAAAR,CAAA;MAAA;IAAA;IAAA,IAAAS,oBAAA,WAAAA,oBAAA;IAUzDH,GAAG,CAACI,EAAE,CAACC,QAAQ,CACd,qBAAqB,EACrB;MAAEC,cAAc,EAAET;IAA8B,CAAE,EAClD;MACC,MAAMU,IAAIA,CAAA;QACT,MAAM;UAAEC,KAAK;UAAEC,GAAG;UAAEC;QAAK,CAAE,GAAG,IAAI,CAACC,UAAU;QAC7C,IAAI,EAAE,MAAMT,cAAc,CAAC;UAAEM,KAAK;UAAEC,GAAG;UAAEC;QAAK,CAAE,CAAC,CAAC,EAAE;UACnD,OAAOV,GAAG,CAACI,EAAE,CAACQ,OAAO,CAAC;YAAEC,OAAO,EAAEd,IAAI,CAACe,CAAC,CAAC,mCAAmC;UAAC,CAAE,CAAC;QAChF;QAEA,OAAOd,GAAG,CAACI,EAAE,CAACW,OAAO,CAAC;UAAEF,OAAO,EAAEd,IAAI,CAACe,CAAC,CAAC,0BAA0B;QAAC,CAAE,CAAC;MACvE;KACA,CACD;IAEDd,GAAG,CAACI,EAAE,CAACC,QAAQ,CACd,0BAA0B,EAC1B;MACCW,YAAY,EAAE,IAAI;MAClBC,mBAAmB,EAAE,CAAC,kCAAkC,CAAC;MACzDX,cAAc,EAAE;QACfY,IAAI,EAAEpB;;KAEP,EACD;MACC,MAAMqB,MAAMA,CAAA;QACX,MAAM;UAAEV;QAAG,CAAE,GAAG,IAAI,CAACW,SAAS;QAC9B,MAAMC,IAAI,GAAG,MAAM1B,aAAa,CAAC2B,WAAW,CAA6Db,GAAG,EAAE;UAC7Gc,UAAU,EAAE;YAAEC,IAAI,EAAE,CAAC;YAAEC,iBAAiB,EAAE,CAAC;YAAE/B,CAAC,EAAE;UAAC;SACjD,CAAC;QAEF,IAAI,EAAC2B,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEG,IAAI,GAAE;UAChB,MAAM,IAAIE,KAAK,CAAC,oBAAoB,CAAC;QACtC;QACA,IAAI,CAACL,IAAI,CAACI,iBAAiB,EAAE;UAC5B,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;QAClD;QAEA,IAAI,EAAE,MAAMnC,WAAW,CAACoC,gBAAgB,CAACN,IAAI,CAAC,CAAC,EAAE;UAChD,MAAM,IAAIK,KAAK,CAAC,yBAAyB,CAAC;QAC3C;QAEA,MAAM/B,aAAa,CAACiC,qCAAqC,CAACnB,GAAG,CAAC;QAE9D,OAAOT,GAAG,CAACI,EAAE,CAACW,OAAO,EAAE;MACxB,CAAC;MACD,MAAMR,IAAIA,CAAA;QACT,MAAM;UAAEE;QAAG,CAAE,GAAG,IAAI,CAACW,SAAS;QAC9B,MAAM;UAAEV,KAAK;UAAEmB;QAAO,CAAE,GAAG,IAAI,CAAClB,UAAU;QAE1C,MAAMmB,IAAI,GAAG,MAAMlC,KAAK,CAAC0B,WAAW,CAAC,IAAI,CAACS,MAAM,EAAE;UACjDR,UAAU,EAAE;YAAES,GAAG,EAAE,CAAC;YAAEC,QAAQ,EAAE,CAAC;YAAEC,IAAI,EAAE,CAAC;YAAEC,SAAS,EAAE;UAAC;SACxD,CAAC;QAEF,IAAI,CAACL,IAAI,EAAE;UACV,MAAM,IAAIJ,KAAK,CAAC,oBAAoB,CAAC;QACtC;QAEA,MAAMzB,QAAQ,CAACmC,iBAAiB,CAAC;UAAE3B,GAAG;UAAEC,KAAK;UAAEmB,OAAO;UAAEC;QAAI,CAAE,CAAC;QAE/D,OAAO9B,GAAG,CAACI,EAAE,CAACW,OAAO,EAAE;MACxB;KACA,CACD;IAACsB,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0d647678afaad851aa51d4736b6dbda939d919c1"}
