{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useCreateDiscussionAction.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useCreateDiscussionAction.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useCreateDiscussionAction.tsx","inputSourceMap":{"version":3,"file":"client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useCreateDiscussionAction.tsx","sourceRoot":"","sources":["client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useCreateDiscussionAction.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAE5D,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAClG,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,gBAAgB,MAAM,+CAA+C,CAAC;AAE7E,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,IAAY,EAAwB,EAAE;IAC/E,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAE/B,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;IACjC,CAAC;IAED,MAAM,sBAAsB,GAAG,GAAG,EAAE,CACnC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,GAAG,CAAC,EAAG,CAAC,CAAC;IAE3G,MAAM,iBAAiB,GAAG,UAAU,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACjE,MAAM,kBAAkB,GAAG,aAAa,CAAC,kBAAkB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACvE,MAAM,4BAA4B,GAAG,aAAa,CAAC,6BAA6B,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAE5F,MAAM,eAAe,GAAG,IAAI,IAAI,iBAAiB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,IAAI,4BAA4B,CAAC,CAAC;IAEpI,OAAO;QACN,EAAE,EAAE,mBAAmB;QACvB,OAAO,EAAE,CAAC,CAAC,YAAY,CAAC;QACxB,IAAI,EAAE,YAAY;QAClB,QAAQ,EAAE,CAAC,eAAe;QAC1B,OAAO,EAAE,sBAAsB;KAC/B,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport type { GenericMenuItemProps } from '@rocket.chat/ui-client';\nimport { useTranslation, useSetting, usePermission, useSetModal } from '@rocket.chat/ui-contexts';\nimport React from 'react';\n\nimport CreateDiscussion from '../../../../../../components/CreateDiscussion';\n\nexport const useCreateDiscussionAction = (room?: IRoom): GenericMenuItemProps => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\n\tif (!room) {\n\t\tthrow new Error('Invalid room');\n\t}\n\n\tconst handleCreateDiscussion = () =>\n\t\tsetModal(<CreateDiscussion onClose={() => setModal(null)} defaultParentRoom={room?.prid || room?._id} />);\n\n\tconst discussionEnabled = useSetting('Discussion_enabled', true);\n\tconst canStartDiscussion = usePermission('start-discussion', room._id);\n\tconst canSstartDiscussionOtherUser = usePermission('start-discussion-other-user', room._id);\n\n\tconst allowDiscussion = room && discussionEnabled && !isRoomFederated(room) && (canStartDiscussion || canSstartDiscussionOtherUser);\n\n\treturn {\n\t\tid: 'create-discussion',\n\t\tcontent: t('Discussion'),\n\t\ticon: 'discussion',\n\t\tdisabled: !allowDiscussion,\n\t\tonClick: handleCreateDiscussion,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useCreateDiscussionAction.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useCreateDiscussionAction.tsx","inputSourceMap":{"version":3,"file":"client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useCreateDiscussionAction.tsx","sourceRoot":"","sources":["client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useCreateDiscussionAction.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAE5D,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAClG,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,gBAAgB,MAAM,+CAA+C,CAAC;AAE7E,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,IAAY,EAAwB,EAAE;IAC/E,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAE/B,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;IACjC,CAAC;IAED,MAAM,sBAAsB,GAAG,GAAG,EAAE,CACnC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,GAAG,CAAC,EAAG,CAAC,CAAC;IAE3G,MAAM,iBAAiB,GAAG,UAAU,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACjE,MAAM,kBAAkB,GAAG,aAAa,CAAC,kBAAkB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACvE,MAAM,4BAA4B,GAAG,aAAa,CAAC,6BAA6B,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAE5F,MAAM,eAAe,GAAG,IAAI,IAAI,iBAAiB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,IAAI,4BAA4B,CAAC,CAAC;IAEpI,OAAO;QACN,EAAE,EAAE,mBAAmB;QACvB,OAAO,EAAE,CAAC,CAAC,YAAY,CAAC;QACxB,IAAI,EAAE,YAAY;QAClB,QAAQ,EAAE,CAAC,eAAe;QAC1B,OAAO,EAAE,sBAAsB;KAC/B,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport type { GenericMenuItemProps } from '@rocket.chat/ui-client';\nimport { useTranslation, useSetting, usePermission, useSetModal } from '@rocket.chat/ui-contexts';\nimport React from 'react';\n\nimport CreateDiscussion from '../../../../../../components/CreateDiscussion';\n\nexport const useCreateDiscussionAction = (room?: IRoom): GenericMenuItemProps => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\n\tif (!room) {\n\t\tthrow new Error('Invalid room');\n\t}\n\n\tconst handleCreateDiscussion = () =>\n\t\tsetModal(<CreateDiscussion onClose={() => setModal(null)} defaultParentRoom={room?.prid || room?._id} />);\n\n\tconst discussionEnabled = useSetting('Discussion_enabled', true);\n\tconst canStartDiscussion = usePermission('start-discussion', room._id);\n\tconst canSstartDiscussionOtherUser = usePermission('start-discussion-other-user', room._id);\n\n\tconst allowDiscussion = room && discussionEnabled && !isRoomFederated(room) && (canStartDiscussion || canSstartDiscussionOtherUser);\n\n\treturn {\n\t\tid: 'create-discussion',\n\t\tcontent: t('Discussion'),\n\t\ticon: 'discussion',\n\t\tdisabled: !allowDiscussion,\n\t\tonClick: handleCreateDiscussion,\n\t};\n};\n"]}}},"code":"module.export({\n  useCreateDiscussionAction: () => useCreateDiscussionAction\n});\nlet isRoomFederated;\nmodule.link(\"@rocket.chat/core-typings\", {\n  isRoomFederated(v) {\n    isRoomFederated = v;\n  }\n}, 0);\nlet useTranslation, useSetting, usePermission, useSetModal;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useTranslation(v) {\n    useTranslation = v;\n  },\n  useSetting(v) {\n    useSetting = v;\n  },\n  usePermission(v) {\n    usePermission = v;\n  },\n  useSetModal(v) {\n    useSetModal = v;\n  }\n}, 1);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n}, 2);\nlet CreateDiscussion;\nmodule.link(\"../../../../../../components/CreateDiscussion\", {\n  default(v) {\n    CreateDiscussion = v;\n  }\n}, 3);\nconst useCreateDiscussionAction = room => {\n  const t = useTranslation();\n  const setModal = useSetModal();\n  if (!room) {\n    throw new Error('Invalid room');\n  }\n  const handleCreateDiscussion = () => setModal( /*#__PURE__*/React.createElement(CreateDiscussion, {\n    onClose: () => setModal(null),\n    defaultParentRoom: (room === null || room === void 0 ? void 0 : room.prid) || (room === null || room === void 0 ? void 0 : room._id)\n  }));\n  const discussionEnabled = useSetting('Discussion_enabled', true);\n  const canStartDiscussion = usePermission('start-discussion', room._id);\n  const canSstartDiscussionOtherUser = usePermission('start-discussion-other-user', room._id);\n  const allowDiscussion = room && discussionEnabled && !isRoomFederated(room) && (canStartDiscussion || canSstartDiscussionOtherUser);\n  return {\n    id: 'create-discussion',\n    content: t('Discussion'),\n    icon: 'discussion',\n    disabled: !allowDiscussion,\n    onClick: handleCreateDiscussion\n  };\n};","map":{"version":3,"names":["module","export","useCreateDiscussionAction","isRoomFederated","link","v","useTranslation","useSetting","usePermission","useSetModal","React","default","CreateDiscussion","room","t","setModal","Error","handleCreateDiscussion","createElement","onClose","defaultParentRoom","prid","_id","discussionEnabled","canStartDiscussion","canSstartDiscussionOtherUser","allowDiscussion","id","content","icon","disabled","onClick"],"sources":["client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useCreateDiscussionAction.tsx"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport type { GenericMenuItemProps } from '@rocket.chat/ui-client';\nimport { useTranslation, useSetting, usePermission, useSetModal } from '@rocket.chat/ui-contexts';\nimport React from 'react';\n\nimport CreateDiscussion from '../../../../../../components/CreateDiscussion';\n\nexport const useCreateDiscussionAction = (room?: IRoom): GenericMenuItemProps => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\n\tif (!room) {\n\t\tthrow new Error('Invalid room');\n\t}\n\n\tconst handleCreateDiscussion = () =>\n\t\tsetModal(<CreateDiscussion onClose={() => setModal(null)} defaultParentRoom={room?.prid || room?._id} />);\n\n\tconst discussionEnabled = useSetting('Discussion_enabled', true);\n\tconst canStartDiscussion = usePermission('start-discussion', room._id);\n\tconst canSstartDiscussionOtherUser = usePermission('start-discussion-other-user', room._id);\n\n\tconst allowDiscussion = room && discussionEnabled && !isRoomFederated(room) && (canStartDiscussion || canSstartDiscussionOtherUser);\n\n\treturn {\n\t\tid: 'create-discussion',\n\t\tcontent: t('Discussion'),\n\t\ticon: 'discussion',\n\t\tdisabled: !allowDiscussion,\n\t\tonClick: handleCreateDiscussion,\n\t};\n};\n"],"mappings":"AACAA,MAAA,CAAOC,MAAE;EAAAC,yBAAuB,EAAAA,CAAA,KAAAA;AAA4B;AAAA,IAAAC,eAAA;AAAAH,MAAA,CAAAI,IAAA;EAAAD,gBAAAE,CAAA;IAAAF,eAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,cAAA,EAAAC,UAAA,EAAAC,aAAA,EAAAC,WAAA;AAAAT,MAAA,CAAAI,IAAA;EAAAE,eAAAD,CAAA;IAAAC,cAAA,GAAAD,CAAA;EAAA;EAAAE,WAAAF,CAAA;IAAAE,UAAA,GAAAF,CAAA;EAAA;EAAAG,cAAAH,CAAA;IAAAG,aAAA,GAAAH,CAAA;EAAA;EAAAI,YAAAJ,CAAA;IAAAI,WAAA,GAAAJ,CAAA;EAAA;AAAA;AAAA,IAAAK,KAAA;AAAAV,MAAA,CAAAI,IAAA;EAAAO,QAAAN,CAAA;IAAAK,KAAA,GAAAL,CAAA;EAAA;AAAA;AAAA,IAAAO,gBAAA;AAAAZ,MAAA,CAAAI,IAAA;EAAAO,QAAAN,CAAA;IAAAO,gBAAA,GAAAP,CAAA;EAAA;AAAA;AAOrD,MAAMH,yBAAyB,GAAIW,IAAY,IAA0B;EAC/E,MAAMC,CAAC,GAAGR,cAAc,EAAE;EAC1B,MAAMS,QAAQ,GAAGN,WAAW,EAAE;EAE9B,IAAI,CAACI,IAAI,EAAE;IACV,MAAM,IAAIG,KAAK,CAAC,cAAc,CAAC;EAChC;EAEA,MAAMC,sBAAsB,GAAGA,CAAA,KAC9BF,QAAQ,eAACL,KAAA,CAAAQ,aAAA,CAACN,gBAAgB;IAACO,OAAO,EAAEA,CAAA,KAAMJ,QAAQ,CAAC,IAAI,CAAE;IAACK,iBAAiB,EAAE,CAAAP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,IAAI,MAAIR,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAES,GAAG;EAAC,EAAG,CAAC;EAE1G,MAAMC,iBAAiB,GAAGhB,UAAU,CAAC,oBAAoB,EAAE,IAAI,CAAC;EAChE,MAAMiB,kBAAkB,GAAGhB,aAAa,CAAC,kBAAkB,EAAEK,IAAI,CAACS,GAAG,CAAC;EACtE,MAAMG,4BAA4B,GAAGjB,aAAa,CAAC,6BAA6B,EAAEK,IAAI,CAACS,GAAG,CAAC;EAE3F,MAAMI,eAAe,GAAGb,IAAI,IAAIU,iBAAiB,IAAI,CAACpB,eAAe,CAACU,IAAI,CAAC,KAAKW,kBAAkB,IAAIC,4BAA4B,CAAC;EAEnI,OAAO;IACNE,EAAE,EAAE,mBAAmB;IACvBC,OAAO,EAAEd,CAAC,CAAC,YAAY,CAAC;IACxBe,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAE,CAACJ,eAAe;IAC1BK,OAAO,EAAEd;GACT;AACF,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"3bf7741f0a3c90ab2d3275ec8fdbf401fb592077"}
