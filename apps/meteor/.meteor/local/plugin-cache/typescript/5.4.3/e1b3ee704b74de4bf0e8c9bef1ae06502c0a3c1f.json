{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/api.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/api.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/api.ts","inputSourceMap":{"version":3,"file":"app/api/server/api.ts","sourceRoot":"","sources":["app/api/server/api.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMethodConnection, IUser, IRoom } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport { Users } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport type { JoinPathPattern, Method } from '@rocket.chat/rest-typings';\nimport { Accounts } from 'meteor/accounts-base';\nimport { DDP } from 'meteor/ddp';\nimport { DDPCommon } from 'meteor/ddp-common';\nimport { Meteor } from 'meteor/meteor';\nimport type { RateLimiterOptionsToCheck } from 'meteor/rate-limit';\nimport { RateLimiter } from 'meteor/rate-limit';\nimport type { Request, Response } from 'meteor/rocketchat:restivus';\nimport { Restivus } from 'meteor/rocketchat:restivus';\nimport _ from 'underscore';\n\nimport { isObject } from '../../../lib/utils/isObject';\nimport { getNestedProp } from '../../../server/lib/getNestedProp';\nimport { getRestPayload } from '../../../server/lib/logger/logPayloads';\nimport { checkCodeForUser } from '../../2fa/server/code';\nimport { hasPermissionAsync } from '../../authorization/server/functions/hasPermission';\nimport { notifyOnUserChangeAsync } from '../../lib/server/lib/notifyListener';\nimport { metrics } from '../../metrics/server';\nimport { settings } from '../../settings/server';\nimport { getDefaultUserFields } from '../../utils/server/functions/getDefaultUserFields';\nimport type { PermissionsPayload } from './api.helpers';\nimport { checkPermissionsForInvocation, checkPermissions, parseDeprecation } from './api.helpers';\nimport type {\n\tFailureResult,\n\tInternalError,\n\tNotFoundResult,\n\tOperations,\n\tOptions,\n\tPartialThis,\n\tSuccessResult,\n\tUnauthorizedResult,\n} from './definition';\nimport { getUserInfo } from './helpers/getUserInfo';\nimport { parseJsonQuery } from './helpers/parseJsonQuery';\n\nconst logger = new Logger('API');\n\ninterface IAPIProperties {\n\tuseDefaultAuth: boolean;\n\tprettyJson: boolean;\n\tauth: { token: string; user: () => Promise<{ userId: string; token: string }> };\n\tdefaultOptionsEndpoint?: () => Promise<void>;\n\tversion?: string;\n\tenableCors?: boolean;\n\tapiPath?: string;\n}\n\ninterface IAPIDefaultFieldsToExclude {\n\tavatarOrigin: number;\n\temails: number;\n\tphone: number;\n\tstatusConnection: number;\n\tcreatedAt: number;\n\tlastLogin: number;\n\tservices: number;\n\trequirePasswordChange: number;\n\trequirePasswordChangeReason: number;\n\troles: number;\n\tstatusDefault: number;\n\t_updatedAt: number;\n\tsettings: number;\n\tinviteToken: number;\n}\n\ntype RateLimiterOptions = {\n\tnumRequestsAllowed?: number;\n\tintervalTimeInMS?: number;\n};\n\nexport const defaultRateLimiterOptions: RateLimiterOptions = {\n\tnumRequestsAllowed: settings.get<number>('API_Enable_Rate_Limiter_Limit_Calls_Default'),\n\tintervalTimeInMS: settings.get<number>('API_Enable_Rate_Limiter_Limit_Time_Default'),\n};\nconst rateLimiterDictionary: Record<\n\tstring,\n\t{\n\t\trateLimiter: RateLimiter;\n\t\toptions: RateLimiterOptions;\n\t}\n> = {};\n\nconst getRequestIP = (req: Request): string | null => {\n\tconst socket = req.socket || req.connection?.socket;\n\tconst remoteAddress =\n\t\treq.headers['x-real-ip'] || (typeof socket !== 'string' && (socket?.remoteAddress || req.connection?.remoteAddress || null));\n\tlet forwardedFor = req.headers['x-forwarded-for'];\n\n\tif (!socket) {\n\t\treturn remoteAddress || forwardedFor || null;\n\t}\n\n\tconst httpForwardedCount = parseInt(String(process.env.HTTP_FORWARDED_COUNT)) || 0;\n\tif (httpForwardedCount <= 0) {\n\t\treturn remoteAddress;\n\t}\n\n\tif (!forwardedFor || typeof forwardedFor.valueOf() !== 'string') {\n\t\treturn remoteAddress;\n\t}\n\n\tforwardedFor = forwardedFor.trim().split(/\\s*,\\s*/);\n\tif (httpForwardedCount > forwardedFor.length) {\n\t\treturn remoteAddress;\n\t}\n\n\treturn forwardedFor[forwardedFor.length - httpForwardedCount];\n};\n\nconst generateConnection = (\n\tipAddress: string,\n\thttpHeaders: Record<string, any>,\n): {\n\tid: string;\n\tclose: () => void;\n\tclientAddress: string;\n\thttpHeaders: Record<string, any>;\n} => ({\n\tid: Random.id(),\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tclose() {},\n\thttpHeaders,\n\tclientAddress: ipAddress,\n});\n\nlet prometheusAPIUserAgent = false;\n\nexport class APIClass<TBasePath extends string = ''> extends Restivus {\n\tprotected apiPath?: string;\n\n\tpublic authMethods: ((...args: any[]) => any)[];\n\n\tprotected helperMethods: Map<string, () => any> = new Map();\n\n\tpublic fieldSeparator: string;\n\n\tpublic defaultFieldsToExclude: {\n\t\tjoinCode: number;\n\t\tmembers: number;\n\t\timportIds: number;\n\t\te2e: number;\n\t};\n\n\tpublic defaultLimitedUserFieldsToExclude: IAPIDefaultFieldsToExclude;\n\n\tpublic limitedUserFieldsToExclude: IAPIDefaultFieldsToExclude;\n\n\tpublic limitedUserFieldsToExcludeIfIsPrivilegedUser: {\n\t\tservices: number;\n\t\tinviteToken: number;\n\t};\n\n\tconstructor(properties: IAPIProperties) {\n\t\tsuper(properties);\n\t\tthis.apiPath = properties.apiPath;\n\t\tthis.authMethods = [];\n\t\tthis.fieldSeparator = '.';\n\t\tthis.defaultFieldsToExclude = {\n\t\t\tjoinCode: 0,\n\t\t\tmembers: 0,\n\t\t\timportIds: 0,\n\t\t\te2e: 0,\n\t\t};\n\t\tthis.defaultLimitedUserFieldsToExclude = {\n\t\t\tavatarOrigin: 0,\n\t\t\temails: 0,\n\t\t\tphone: 0,\n\t\t\tstatusConnection: 0,\n\t\t\tcreatedAt: 0,\n\t\t\tlastLogin: 0,\n\t\t\tservices: 0,\n\t\t\trequirePasswordChange: 0,\n\t\t\trequirePasswordChangeReason: 0,\n\t\t\troles: 0,\n\t\t\tstatusDefault: 0,\n\t\t\t_updatedAt: 0,\n\t\t\tsettings: 0,\n\t\t\tinviteToken: 0,\n\t\t};\n\t\tthis.limitedUserFieldsToExclude = this.defaultLimitedUserFieldsToExclude;\n\t\tthis.limitedUserFieldsToExcludeIfIsPrivilegedUser = {\n\t\t\tservices: 0,\n\t\t\tinviteToken: 0,\n\t\t};\n\t}\n\n\tpublic setLimitedCustomFields(customFields: string[]): void {\n\t\tconst nonPublicFieds = customFields.reduce((acc, customField) => {\n\t\t\tacc[`customFields.${customField}`] = 0;\n\t\t\treturn acc;\n\t\t}, {} as Record<string, any>);\n\t\tthis.limitedUserFieldsToExclude = {\n\t\t\t...this.defaultLimitedUserFieldsToExclude,\n\t\t\t...nonPublicFieds,\n\t\t};\n\t}\n\n\tasync parseJsonQuery(this: PartialThis) {\n\t\treturn parseJsonQuery(this);\n\t}\n\n\tpublic addAuthMethod(func: (this: PartialThis, ...args: any[]) => any): void {\n\t\tthis.authMethods.push(func);\n\t}\n\n\tprotected shouldAddRateLimitToRoute(options: { rateLimiterOptions?: RateLimiterOptions | boolean }): boolean {\n\t\tconst { version } = this._config;\n\t\tconst { rateLimiterOptions } = options;\n\t\treturn (\n\t\t\t(typeof rateLimiterOptions === 'object' || rateLimiterOptions === undefined) &&\n\t\t\tBoolean(version) &&\n\t\t\t!process.env.TEST_MODE &&\n\t\t\tBoolean(defaultRateLimiterOptions.numRequestsAllowed && defaultRateLimiterOptions.intervalTimeInMS)\n\t\t);\n\t}\n\n\tpublic success(): SuccessResult<void>;\n\n\tpublic success<T>(result: T): SuccessResult<T>;\n\n\tpublic success<T>(result: T = {} as T): SuccessResult<T> {\n\t\tif (isObject(result)) {\n\t\t\t(result as Record<string, any>).success = true;\n\t\t}\n\n\t\tconst finalResult = {\n\t\t\tstatusCode: 200,\n\t\t\tbody: result,\n\t\t} as SuccessResult<T>;\n\n\t\treturn finalResult as SuccessResult<T>;\n\t}\n\n\tpublic failure<T>(result?: T): FailureResult<T>;\n\n\tpublic failure<T, TErrorType extends string, TStack extends string, TErrorDetails>(\n\t\tresult?: T,\n\t\terrorType?: TErrorType,\n\t\tstack?: TStack,\n\t\terror?: { details: TErrorDetails },\n\t): FailureResult<T, TErrorType, TStack, TErrorDetails>;\n\n\tpublic failure<T, TErrorType extends string, TStack extends string, TErrorDetails>(\n\t\tresult?: T,\n\t\terrorType?: TErrorType,\n\t\tstack?: TStack,\n\t\terror?: { details: TErrorDetails },\n\t): FailureResult<T> {\n\t\tconst response: {\n\t\t\tstatusCode: 400;\n\t\t\tbody: any & { message?: string; errorType?: string; stack?: string; success?: boolean; details?: Record<string, any> | string };\n\t\t} = { statusCode: 400, body: result };\n\n\t\tif (isObject(result)) {\n\t\t\tresponse.body.success = false;\n\t\t} else {\n\t\t\tresponse.body = {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: result,\n\t\t\t\tstack,\n\t\t\t};\n\n\t\t\tif (errorType) {\n\t\t\t\tresponse.body.errorType = errorType;\n\t\t\t}\n\n\t\t\tif (error && typeof error === 'object' && 'details' in error && error?.details) {\n\t\t\t\ttry {\n\t\t\t\t\tresponse.body.details = JSON.parse(error.details as unknown as string);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tresponse.body.details = error.details;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tpublic notFound(msg?: string): NotFoundResult {\n\t\treturn {\n\t\t\tstatusCode: 404,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'Resource not found',\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic internalError<T>(msg?: T): InternalError<T> {\n\t\treturn {\n\t\t\tstatusCode: 500,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'Internal error occured',\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic unauthorized<T>(msg?: T): UnauthorizedResult<T> {\n\t\treturn {\n\t\t\tstatusCode: 403,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'unauthorized',\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic tooManyRequests(msg?: string): { statusCode: number; body: Record<string, any> & { success?: boolean } } {\n\t\treturn {\n\t\t\tstatusCode: 429,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'Too many requests',\n\t\t\t},\n\t\t};\n\t}\n\n\tprotected getRateLimiter(route: string): { rateLimiter: RateLimiter; options: RateLimiterOptions } {\n\t\treturn rateLimiterDictionary[route];\n\t}\n\n\tprotected async shouldVerifyRateLimit(route: string, userId: string): Promise<boolean> {\n\t\treturn (\n\t\t\trateLimiterDictionary.hasOwnProperty(route) &&\n\t\t\tsettings.get<boolean>('API_Enable_Rate_Limiter') === true &&\n\t\t\t(process.env.NODE_ENV !== 'development' || settings.get<boolean>('API_Enable_Rate_Limiter_Dev') === true) &&\n\t\t\t!(userId && (await hasPermissionAsync(userId, 'api-bypass-rate-limit')))\n\t\t);\n\t}\n\n\tprotected async enforceRateLimit(\n\t\tobjectForRateLimitMatch: RateLimiterOptionsToCheck,\n\t\t_: any,\n\t\tresponse: Response,\n\t\tuserId: string,\n\t): Promise<void> {\n\t\tif (!(await this.shouldVerifyRateLimit(objectForRateLimitMatch.route, userId))) {\n\t\t\treturn;\n\t\t}\n\n\t\trateLimiterDictionary[objectForRateLimitMatch.route].rateLimiter.increment(objectForRateLimitMatch);\n\t\tconst attemptResult = await rateLimiterDictionary[objectForRateLimitMatch.route].rateLimiter.check(objectForRateLimitMatch);\n\t\tconst timeToResetAttempsInSeconds = Math.ceil(attemptResult.timeToReset / 1000);\n\t\tresponse.setHeader('X-RateLimit-Limit', rateLimiterDictionary[objectForRateLimitMatch.route].options.numRequestsAllowed);\n\t\tresponse.setHeader('X-RateLimit-Remaining', attemptResult.numInvocationsLeft);\n\t\tresponse.setHeader('X-RateLimit-Reset', new Date().getTime() + attemptResult.timeToReset);\n\n\t\tif (!attemptResult.allowed) {\n\t\t\tthrow new Meteor.Error(\n\t\t\t\t'error-too-many-requests',\n\t\t\t\t`Error, too many requests. Please slow down. You must wait ${timeToResetAttempsInSeconds} seconds before trying this endpoint again.`,\n\t\t\t\t{\n\t\t\t\t\ttimeToReset: attemptResult.timeToReset,\n\t\t\t\t\tseconds: timeToResetAttempsInSeconds,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic reloadRoutesToRefreshRateLimiter(): void {\n\t\tconst { version } = this._config;\n\t\tthis._routes.forEach((route) => {\n\t\t\tif (this.shouldAddRateLimitToRoute(route.options)) {\n\t\t\t\tthis.addRateLimiterRuleForRoutes({\n\t\t\t\t\troutes: [route.path],\n\t\t\t\t\trateLimiterOptions: route.options.rateLimiterOptions || defaultRateLimiterOptions,\n\t\t\t\t\tendpoints: Object.keys(route.endpoints).filter((endpoint) => endpoint !== 'options'),\n\t\t\t\t\tapiVersion: version,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected addRateLimiterRuleForRoutes({\n\t\troutes,\n\t\trateLimiterOptions,\n\t\tendpoints,\n\t\tapiVersion,\n\t}: {\n\t\troutes: string[];\n\t\trateLimiterOptions: RateLimiterOptions | boolean;\n\t\tendpoints: string[];\n\t\tapiVersion?: string;\n\t}): void {\n\t\tif (typeof rateLimiterOptions !== 'object') {\n\t\t\tthrow new Meteor.Error('\"rateLimiterOptions\" must be an object');\n\t\t}\n\t\tif (!rateLimiterOptions.numRequestsAllowed) {\n\t\t\tthrow new Meteor.Error('You must set \"numRequestsAllowed\" property in rateLimiter for REST API endpoint');\n\t\t}\n\t\tif (!rateLimiterOptions.intervalTimeInMS) {\n\t\t\tthrow new Meteor.Error('You must set \"intervalTimeInMS\" property in rateLimiter for REST API endpoint');\n\t\t}\n\t\tconst addRateLimitRuleToEveryRoute = (routes: string[]) => {\n\t\t\troutes.forEach((route) => {\n\t\t\t\trateLimiterDictionary[route] = {\n\t\t\t\t\trateLimiter: new RateLimiter(),\n\t\t\t\t\toptions: rateLimiterOptions,\n\t\t\t\t};\n\t\t\t\tconst rateLimitRule = {\n\t\t\t\t\tIPAddr: (input: any) => input,\n\t\t\t\t\troute,\n\t\t\t\t};\n\t\t\t\trateLimiterDictionary[route].rateLimiter.addRule(\n\t\t\t\t\trateLimitRule,\n\t\t\t\t\trateLimiterOptions.numRequestsAllowed as number,\n\t\t\t\t\trateLimiterOptions.intervalTimeInMS as number,\n\t\t\t\t);\n\t\t\t});\n\t\t};\n\t\troutes.map((route) => this.namedRoutes(route, endpoints, apiVersion)).map(addRateLimitRuleToEveryRoute);\n\t}\n\n\tpublic async processTwoFactor({\n\t\tuserId,\n\t\trequest,\n\t\tinvocation,\n\t\toptions,\n\t\tconnection,\n\t}: {\n\t\tuserId: string;\n\t\trequest: Request;\n\t\tinvocation: { twoFactorChecked?: boolean };\n\t\toptions?: Options;\n\t\tconnection: IMethodConnection;\n\t}): Promise<void> {\n\t\tif (options && (!('twoFactorRequired' in options) || !options.twoFactorRequired)) {\n\t\t\treturn;\n\t\t}\n\t\tconst code = request.headers['x-2fa-code'];\n\t\tconst method = request.headers['x-2fa-method'];\n\n\t\tawait checkCodeForUser({\n\t\t\tuser: userId,\n\t\t\tcode,\n\t\t\tmethod,\n\t\t\toptions: options && 'twoFactorOptions' in options ? (options as Record<string, any>).twoFactorOptions || {} : {},\n\t\t\tconnection,\n\t\t});\n\n\t\tinvocation.twoFactorChecked = true;\n\t}\n\n\tprotected getFullRouteName(route: string, method: string, apiVersion?: string): string {\n\t\tlet prefix = `/${this.apiPath || ''}`;\n\t\tif (apiVersion) {\n\t\t\tprefix += `${apiVersion}/`;\n\t\t}\n\t\treturn `${prefix}${route}${method}`;\n\t}\n\n\tprotected namedRoutes(route: string, endpoints: Record<string, string> | string[], apiVersion?: string): string[] {\n\t\tconst routeActions: string[] = Array.isArray(endpoints) ? endpoints : Object.keys(endpoints);\n\n\t\treturn routeActions.map((action) => this.getFullRouteName(route, action, apiVersion));\n\t}\n\n\taddRoute<TSubPathPattern extends string>(\n\t\tsubpath: TSubPathPattern,\n\t\toperations: Operations<JoinPathPattern<TBasePath, TSubPathPattern>>,\n\t): void;\n\n\taddRoute<TSubPathPattern extends string, TPathPattern extends JoinPathPattern<TBasePath, TSubPathPattern>>(\n\t\tsubpaths: TSubPathPattern[],\n\t\toperations: Operations<TPathPattern>,\n\t): void;\n\n\taddRoute<TSubPathPattern extends string, TOptions extends Options>(\n\t\tsubpath: TSubPathPattern,\n\t\toptions: TOptions,\n\t\toperations: Operations<JoinPathPattern<TBasePath, TSubPathPattern>, TOptions>,\n\t): void;\n\n\taddRoute<TSubPathPattern extends string, TPathPattern extends JoinPathPattern<TBasePath, TSubPathPattern>, TOptions extends Options>(\n\t\tsubpaths: TSubPathPattern[],\n\t\toptions: TOptions,\n\t\toperations: Operations<TPathPattern, TOptions>,\n\t): void;\n\n\tpublic addRoute<\n\t\tTSubPathPattern extends string,\n\t\tTPathPattern extends JoinPathPattern<TBasePath, TSubPathPattern>,\n\t\tTOptions extends Options,\n\t>(subpaths: TSubPathPattern[], options: TOptions, endpoints?: Operations<TPathPattern, TOptions>): void {\n\t\t// Note: required if the developer didn't provide options\n\t\tif (endpoints === undefined) {\n\t\t\tendpoints = options as unknown as Operations<TPathPattern>;\n\t\t\toptions = {} as TOptions;\n\t\t}\n\n\t\tconst operations = endpoints;\n\n\t\tconst shouldVerifyPermissions = checkPermissions(options);\n\n\t\t// Allow for more than one route using the same option and endpoints\n\t\tif (!Array.isArray(subpaths)) {\n\t\t\tsubpaths = [subpaths];\n\t\t}\n\t\tconst { version } = this._config;\n\t\tif (this.shouldAddRateLimitToRoute(options)) {\n\t\t\tthis.addRateLimiterRuleForRoutes({\n\t\t\t\troutes: subpaths,\n\t\t\t\trateLimiterOptions: options.rateLimiterOptions || defaultRateLimiterOptions,\n\t\t\t\tendpoints: operations as unknown as string[],\n\t\t\t\tapiVersion: version,\n\t\t\t});\n\t\t}\n\t\tsubpaths.forEach((route) => {\n\t\t\t// Note: This is required due to Restivus calling `addRoute` in the constructor of itself\n\t\t\tObject.keys(operations).forEach((method) => {\n\t\t\t\tconst _options = { ...options };\n\n\t\t\t\tif (typeof operations[method as keyof Operations<TPathPattern, TOptions>] === 'function') {\n\t\t\t\t\t(operations as Record<string, any>)[method as string] = {\n\t\t\t\t\t\taction: operations[method as keyof Operations<TPathPattern, TOptions>],\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tconst extraOptions: Record<string, any> = { ...operations[method as keyof Operations<TPathPattern, TOptions>] } as Record<\n\t\t\t\t\t\tstring,\n\t\t\t\t\t\tany\n\t\t\t\t\t>;\n\t\t\t\t\tdelete extraOptions.action;\n\t\t\t\t\tObject.assign(_options, extraOptions);\n\t\t\t\t}\n\t\t\t\t// Add a try/catch for each endpoint\n\t\t\t\tconst originalAction = (operations[method as keyof Operations<TPathPattern, TOptions>] as Record<string, any>).action;\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\t\t\tconst api = this;\n\t\t\t\t(operations[method as keyof Operations<TPathPattern, TOptions>] as Record<string, any>).action =\n\t\t\t\t\tasync function _internalRouteActionHandler() {\n\t\t\t\t\t\tconst rocketchatRestApiEnd = metrics.rocketchatRestApi.startTimer({\n\t\t\t\t\t\t\tmethod,\n\t\t\t\t\t\t\tversion,\n\t\t\t\t\t\t\t...(prometheusAPIUserAgent && { user_agent: this.request.headers['user-agent'] }),\n\t\t\t\t\t\t\tentrypoint: route.startsWith('method.call') ? decodeURIComponent(this.request._parsedUrl.pathname.slice(8)) : route,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.requestIp = getRequestIP(this.request);\n\n\t\t\t\t\t\tconst startTime = Date.now();\n\n\t\t\t\t\t\tconst log = logger.logger.child({\n\t\t\t\t\t\t\tmethod: this.request.method,\n\t\t\t\t\t\t\turl: this.request.url,\n\t\t\t\t\t\t\tuserId: this.request.headers['x-user-id'],\n\t\t\t\t\t\t\tuserAgent: this.request.headers['user-agent'],\n\t\t\t\t\t\t\tlength: this.request.headers['content-length'],\n\t\t\t\t\t\t\thost: this.request.headers.host,\n\t\t\t\t\t\t\treferer: this.request.headers.referer,\n\t\t\t\t\t\t\tremoteIP: this.requestIp,\n\t\t\t\t\t\t\t...getRestPayload(this.request.body),\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// If the endpoint requires authentication only if anonymous read is disabled, load the user info if it was provided\n\t\t\t\t\t\tif (!options.authRequired && options.authOrAnonRequired) {\n\t\t\t\t\t\t\tconst { 'x-user-id': userId, 'x-auth-token': userToken } = this.request.headers;\n\t\t\t\t\t\t\tif (userId && userToken) {\n\t\t\t\t\t\t\t\tthis.user = await Users.findOne(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t'services.resume.loginTokens.hashedToken': Accounts._hashLoginToken(userToken),\n\t\t\t\t\t\t\t\t\t\t'_id': userId,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tprojection: getDefaultUserFields(),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tthis.userId = this.user?._id;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!this.user && !settings.get('Accounts_AllowAnonymousRead')) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tstatusCode: 401,\n\t\t\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\t\t\tstatus: 'error',\n\t\t\t\t\t\t\t\t\t\tmessage: 'You must be logged in to do this.',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst objectForRateLimitMatch = {\n\t\t\t\t\t\t\tIPAddr: this.requestIp,\n\t\t\t\t\t\t\troute: `${this.request.route}${this.request.method.toLowerCase()}`,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlet result;\n\n\t\t\t\t\t\tconst connection = { ...generateConnection(this.requestIp, this.request.headers), token: this.token };\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (options.deprecation) {\n\t\t\t\t\t\t\t\tparseDeprecation(this, options.deprecation);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tawait api.enforceRateLimit(objectForRateLimitMatch, this.request, this.response, this.userId);\n\n\t\t\t\t\t\t\tif (_options.validateParams) {\n\t\t\t\t\t\t\t\tconst requestMethod = this.request.method as Method;\n\t\t\t\t\t\t\t\tconst validatorFunc =\n\t\t\t\t\t\t\t\t\ttypeof _options.validateParams === 'function' ? _options.validateParams : _options.validateParams[requestMethod];\n\n\t\t\t\t\t\t\t\tif (validatorFunc && !validatorFunc(requestMethod === 'GET' ? this.queryParams : this.bodyParams)) {\n\t\t\t\t\t\t\t\t\tthrow new Meteor.Error('invalid-params', validatorFunc.errors?.map((error: any) => error.message).join('\\n '));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tshouldVerifyPermissions &&\n\t\t\t\t\t\t\t\t(!this.userId ||\n\t\t\t\t\t\t\t\t\t!(await checkPermissionsForInvocation(\n\t\t\t\t\t\t\t\t\t\tthis.userId,\n\t\t\t\t\t\t\t\t\t\t_options.permissionsRequired as PermissionsPayload,\n\t\t\t\t\t\t\t\t\t\tthis.request.method,\n\t\t\t\t\t\t\t\t\t)))\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthrow new Meteor.Error('error-unauthorized', 'User does not have the permissions required for this action', {\n\t\t\t\t\t\t\t\t\tpermissions: _options.permissionsRequired,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst invocation = new DDPCommon.MethodInvocation({\n\t\t\t\t\t\t\t\tconnection,\n\t\t\t\t\t\t\t\tisSimulation: false,\n\t\t\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tAccounts._accountData[connection.id] = {\n\t\t\t\t\t\t\t\tconnection,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tAccounts._setAccountData(connection.id, 'loginToken', this.token);\n\n\t\t\t\t\t\t\tawait api.processTwoFactor({\n\t\t\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\t\t\trequest: this.request,\n\t\t\t\t\t\t\t\tinvocation: invocation as unknown as Record<string, any>,\n\t\t\t\t\t\t\t\toptions: _options,\n\t\t\t\t\t\t\t\tconnection: connection as unknown as IMethodConnection,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tthis.queryOperations = options.queryOperations;\n\t\t\t\t\t\t\tthis.queryFields = options.queryFields;\n\t\t\t\t\t\t\tthis.parseJsonQuery = api.parseJsonQuery.bind(this as PartialThis);\n\n\t\t\t\t\t\t\tresult =\n\t\t\t\t\t\t\t\t(await DDP._CurrentInvocation.withValue(invocation as any, async () => originalAction.apply(this))) || API.v1.success();\n\n\t\t\t\t\t\t\tlog.http({\n\t\t\t\t\t\t\t\tstatus: result.statusCode,\n\t\t\t\t\t\t\t\tresponseTime: Date.now() - startTime,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (e: any) {\n\t\t\t\t\t\t\tconst apiMethod: string =\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'error-too-many-requests': 'tooManyRequests',\n\t\t\t\t\t\t\t\t\t'error-unauthorized': 'unauthorized',\n\t\t\t\t\t\t\t\t}[e.error as string] || 'failure';\n\n\t\t\t\t\t\t\tresult = (API.v1 as Record<string, any>)[apiMethod](\n\t\t\t\t\t\t\t\ttypeof e === 'string' ? e : e.message,\n\t\t\t\t\t\t\t\te.error,\n\t\t\t\t\t\t\t\tprocess.env.TEST_MODE ? e.stack : undefined,\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tlog.http({\n\t\t\t\t\t\t\t\terr: e,\n\t\t\t\t\t\t\t\tstatus: result.statusCode,\n\t\t\t\t\t\t\t\tresponseTime: Date.now() - startTime,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tdelete Accounts._accountData[connection.id];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trocketchatRestApiEnd({\n\t\t\t\t\t\t\tstatus: result.statusCode,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t};\n\n\t\t\t\t// Allow the endpoints to make usage of the logger which respects the user's settings\n\t\t\t\t(operations[method as keyof Operations<TPathPattern, TOptions>] as Record<string, any>).logger = logger;\n\t\t\t});\n\n\t\t\tsuper.addRoute(route, options, operations);\n\t\t});\n\t}\n\n\tpublic updateRateLimiterDictionaryForRoute(route: string, numRequestsAllowed: number, intervalTimeInMS?: number): void {\n\t\tif (rateLimiterDictionary[route]) {\n\t\t\trateLimiterDictionary[route].options.numRequestsAllowed =\n\t\t\t\tnumRequestsAllowed ?? rateLimiterDictionary[route].options.numRequestsAllowed;\n\t\t\trateLimiterDictionary[route].options.intervalTimeInMS = intervalTimeInMS ?? rateLimiterDictionary[route].options.intervalTimeInMS;\n\t\t\tAPI.v1?.reloadRoutesToRefreshRateLimiter();\n\t\t}\n\t}\n\n\tprotected _initAuth(): void {\n\t\tconst loginCompatibility = (bodyParams: Record<string, any>, request: Request): Record<string, any> => {\n\t\t\t// Grab the username or email that the user is logging in with\n\t\t\tconst { user, username, email, password, code: bodyCode } = bodyParams;\n\t\t\tlet usernameToLDAPLogin = '';\n\n\t\t\tif (password == null) {\n\t\t\t\treturn bodyParams;\n\t\t\t}\n\n\t\t\tif (_.without(Object.keys(bodyParams), 'user', 'username', 'email', 'password', 'code').length > 0) {\n\t\t\t\treturn bodyParams;\n\t\t\t}\n\n\t\t\tconst code = bodyCode || request.headers['x-2fa-code'];\n\n\t\t\tconst auth: Record<string, any> = {\n\t\t\t\tpassword,\n\t\t\t};\n\n\t\t\tif (typeof user === 'string') {\n\t\t\t\tauth.user = user.includes('@') ? { email: user } : { username: user };\n\t\t\t\tusernameToLDAPLogin = user;\n\t\t\t} else if (username) {\n\t\t\t\tauth.user = { username };\n\t\t\t\tusernameToLDAPLogin = username;\n\t\t\t} else if (email) {\n\t\t\t\tauth.user = { email };\n\t\t\t\tusernameToLDAPLogin = email;\n\t\t\t}\n\n\t\t\tif (auth.user == null) {\n\t\t\t\treturn bodyParams;\n\t\t\t}\n\n\t\t\tif (auth.password.hashed) {\n\t\t\t\tauth.password = {\n\t\t\t\t\tdigest: auth.password as { hashed: string },\n\t\t\t\t\talgorithm: 'sha-256',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst objectToLDAPLogin = {\n\t\t\t\tldap: true,\n\t\t\t\tusername: usernameToLDAPLogin,\n\t\t\t\tldapPass: auth.password,\n\t\t\t\tldapOptions: {},\n\t\t\t};\n\t\t\tif (settings.get<boolean>('LDAP_Enable') && !code) {\n\t\t\t\treturn objectToLDAPLogin;\n\t\t\t}\n\n\t\t\tif (code) {\n\t\t\t\treturn {\n\t\t\t\t\ttotp: {\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tlogin: settings.get('LDAP_Enable') ? objectToLDAPLogin : auth,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn auth;\n\t\t};\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\n\t\t(this as APIClass<'/v1'>).addRoute<'/v1/login', { authRequired: false }>(\n\t\t\t'login' as any,\n\t\t\t{ authRequired: false },\n\t\t\t{\n\t\t\t\tasync post() {\n\t\t\t\t\tconst request = this.request as unknown as Request;\n\t\t\t\t\tconst args = loginCompatibility(this.bodyParams, request);\n\n\t\t\t\t\tconst invocation = new DDPCommon.MethodInvocation({\n\t\t\t\t\t\tconnection: generateConnection(getRequestIP(request) || '', this.request.headers),\n\t\t\t\t\t});\n\n\t\t\t\t\tlet auth;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tauth = await DDP._CurrentInvocation.withValue(invocation as any, async () => Meteor.callAsync('login', args));\n\t\t\t\t\t} catch (error: any) {\n\t\t\t\t\t\tlet e = error;\n\t\t\t\t\t\tif (error.reason === 'User not found') {\n\t\t\t\t\t\t\te = {\n\t\t\t\t\t\t\t\terror: 'Unauthorized',\n\t\t\t\t\t\t\t\treason: 'Unauthorized',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstatusCode: 401,\n\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\tstatus: 'error',\n\t\t\t\t\t\t\t\terror: e.error,\n\t\t\t\t\t\t\t\tdetails: e.details,\n\t\t\t\t\t\t\t\tmessage: e.reason || e.message,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} as unknown as SuccessResult<Record<string, any>>;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.user = await Users.findOne(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_id: auth.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprojection: getDefaultUserFields(),\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.userId = (this.user as unknown as IUser)?._id;\n\n\t\t\t\t\tconst response = {\n\t\t\t\t\t\tstatus: 'success',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\t\tauthToken: auth.token,\n\t\t\t\t\t\t\tme: await getUserInfo(this.user || ({} as IUser)),\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tconst extraData = self._config.onLoggedIn?.call(this);\n\n\t\t\t\t\tif (extraData != null) {\n\t\t\t\t\t\t_.extend(response.data, {\n\t\t\t\t\t\t\textra: extraData,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn response as unknown as SuccessResult<Record<string, any>>;\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tconst logout = async function (this: Restivus): Promise<{ status: string; data: { message: string } }> {\n\t\t\t// Remove the given auth token from the user's account\n\t\t\tconst authToken = this.request.headers['x-auth-token'];\n\t\t\tconst hashedToken = Accounts._hashLoginToken(authToken);\n\t\t\tconst tokenLocation = self._config?.auth?.token;\n\t\t\tconst index = tokenLocation?.lastIndexOf('.') || 0;\n\t\t\tconst tokenPath = tokenLocation?.substring(0, index) || '';\n\t\t\tconst tokenFieldName = tokenLocation?.substring(index + 1) || '';\n\t\t\tconst tokenToRemove: Record<string, any> = {};\n\t\t\ttokenToRemove[tokenFieldName] = hashedToken;\n\t\t\tconst tokenRemovalQuery: Record<string, any> = {};\n\t\t\ttokenRemovalQuery[tokenPath] = tokenToRemove;\n\n\t\t\tawait Users.updateOne(\n\t\t\t\t{ _id: this.user._id },\n\t\t\t\t{\n\t\t\t\t\t$pull: tokenRemovalQuery,\n\t\t\t\t},\n\t\t\t);\n\n\t\t\t// TODO this can be optmized so places that care about loginTokens being removed are invoked directly\n\t\t\t// instead of having to listen to every watch.users event\n\t\t\tvoid notifyOnUserChangeAsync(async () => {\n\t\t\t\tconst userTokens = await Users.findOneById(this.user._id, { projection: { [tokenPath]: 1 } });\n\t\t\t\tif (!userTokens) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst diff = { [tokenPath]: getNestedProp(userTokens, tokenPath) };\n\n\t\t\t\treturn { clientAction: 'updated', id: this.user._id, diff };\n\t\t\t});\n\n\t\t\tconst response = {\n\t\t\t\tstatus: 'success',\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: \"You've been logged out!\",\n\t\t\t\t},\n\t\t\t};\n\n\t\t\t// Call the logout hook with the authenticated user attached\n\t\t\tconst extraData = self._config.onLoggedOut?.call(this);\n\t\t\tif (extraData != null) {\n\t\t\t\t_.extend(response.data, {\n\t\t\t\t\textra: extraData,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn response;\n\t\t};\n\n\t\t/*\n\t\t\tAdd a logout endpoint to the API\n\t\t\tAfter the user is logged out, the onLoggedOut hook is called (see Restfully.configure() for\n\t\t\tadding hook).\n\t\t*/\n\t\treturn (this as APIClass<'/v1'>).addRoute<'/v1/logout', { authRequired: true }>(\n\t\t\t'logout' as any,\n\t\t\t{\n\t\t\t\tauthRequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tasync get() {\n\t\t\t\t\tconsole.warn('Warning: Default logout via GET will be removed in Restivus v1.0. Use POST instead.');\n\t\t\t\t\tconsole.warn('    See https://github.com/kahmali/meteor-restivus/issues/100');\n\t\t\t\t\treturn logout.call(this as unknown as Restivus) as any;\n\t\t\t\t},\n\t\t\t\tasync post() {\n\t\t\t\t\treturn logout.call(this as unknown as Restivus) as any;\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n\nconst getUserAuth = function _getUserAuth(...args: any[]): {\n\ttoken: string;\n\tuser: (this: Restivus) => Promise<{ userId: string; token: string }>;\n} {\n\tconst invalidResults = [undefined, null, false];\n\treturn {\n\t\ttoken: 'services.resume.loginTokens.hashedToken',\n\t\tasync user() {\n\t\t\tif (this.bodyParams?.payload) {\n\t\t\t\tthis.bodyParams = JSON.parse(this.bodyParams.payload);\n\t\t\t}\n\n\t\t\tfor await (const method of API.v1?.authMethods || []) {\n\t\t\t\tif (typeof method === 'function') {\n\t\t\t\t\tconst result = await method.apply(this, args);\n\t\t\t\t\tif (!invalidResults.includes(result)) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet token;\n\t\t\tif (this.request.headers['x-auth-token']) {\n\t\t\t\ttoken = Accounts._hashLoginToken(this.request.headers['x-auth-token']);\n\t\t\t}\n\n\t\t\tthis.token = token || '';\n\n\t\t\treturn {\n\t\t\t\tuserId: this.request.headers['x-user-id'],\n\t\t\t\ttoken,\n\t\t\t};\n\t\t},\n\t};\n};\n\nconst defaultOptionsEndpoint = async function _defaultOptionsEndpoint(this: Restivus): Promise<void> {\n\t// check if a pre-flight request\n\tif (!this.request.headers['access-control-request-method'] && !this.request.headers.origin) {\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tif (!settings.get('API_Enable_CORS')) {\n\t\tthis.response.writeHead(405);\n\t\tthis.response.write('CORS not enabled. Go to \"Admin > General > REST Api\" to enable it.');\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tconst CORSOriginSetting = String(settings.get('API_CORS_Origin'));\n\n\tconst defaultHeaders = {\n\t\t'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, HEAD, PATCH',\n\t\t'Access-Control-Allow-Headers':\n\t\t\t'Origin, X-Requested-With, Content-Type, Accept, X-User-Id, X-Auth-Token, x-visitor-token, Authorization',\n\t};\n\n\tif (CORSOriginSetting === '*') {\n\t\tthis.response.writeHead(200, {\n\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t...defaultHeaders,\n\t\t});\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tconst origins = CORSOriginSetting.trim()\n\t\t.split(',')\n\t\t.map((origin) => String(origin).trim().toLocaleLowerCase());\n\n\t// if invalid origin reply without required CORS headers\n\tif (!origins.includes(this.request.headers.origin)) {\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tthis.response.writeHead(200, {\n\t\t'Access-Control-Allow-Origin': this.request.headers.origin,\n\t\t'Vary': 'Origin',\n\t\t...defaultHeaders,\n\t});\n\tthis.done();\n};\n\nconst createApi = function _createApi(options: { version?: string } = {}): APIClass {\n\treturn new APIClass(\n\t\tObject.assign(\n\t\t\t{\n\t\t\t\tapiPath: 'api/',\n\t\t\t\tuseDefaultAuth: true,\n\t\t\t\tprettyJson: process.env.NODE_ENV === 'development',\n\t\t\t\tdefaultOptionsEndpoint,\n\t\t\t\tauth: getUserAuth(),\n\t\t\t},\n\t\t\toptions,\n\t\t) as IAPIProperties,\n\t);\n};\n\nexport const API: {\n\tv1: APIClass<'/v1'>;\n\tdefault: APIClass;\n\tgetUserAuth: () => { token: string; user: (this: Restivus) => Promise<{ userId: string; token: string }> };\n\tApiClass: typeof APIClass;\n\tchannels?: {\n\t\tcreate: {\n\t\t\tvalidate: (params: {\n\t\t\t\tuser: { value: string };\n\t\t\t\tname?: { key: string; value?: string };\n\t\t\t\tmembers?: { key: string; value?: string[] };\n\t\t\t\tcustomFields?: { key: string; value?: string };\n\t\t\t\tteams?: { key: string; value?: string[] };\n\t\t\t\tteamId?: { key: string; value?: string };\n\t\t\t}) => Promise<void>;\n\t\t\texecute: (\n\t\t\t\tuserId: string,\n\t\t\t\tparams: {\n\t\t\t\t\tname?: string;\n\t\t\t\t\tmembers?: string[];\n\t\t\t\t\tcustomFields?: Record<string, any>;\n\t\t\t\t\textraData?: Record<string, any>;\n\t\t\t\t\treadOnly?: boolean;\n\t\t\t\t},\n\t\t\t) => Promise<{ channel: IRoom }>;\n\t\t};\n\t};\n} = {\n\tgetUserAuth,\n\tApiClass: APIClass,\n\tv1: createApi({\n\t\tversion: 'v1',\n\t}),\n\tdefault: createApi(),\n};\n\n// register the API to be re-created once the CORS-setting changes.\nsettings.watchMultiple(['API_Enable_CORS', 'API_CORS_Origin'], () => {\n\tAPI.v1 = createApi({\n\t\tversion: 'v1',\n\t});\n\n\tAPI.default = createApi();\n});\n\nsettings.watch<string>('Accounts_CustomFields', (value) => {\n\tif (!value) {\n\t\treturn API.v1?.setLimitedCustomFields([]);\n\t}\n\ttry {\n\t\tconst customFields = JSON.parse(value);\n\t\tconst nonPublicCustomFields = Object.keys(customFields).filter((customFieldKey) => customFields[customFieldKey].public !== true);\n\t\tAPI.v1.setLimitedCustomFields(nonPublicCustomFields);\n\t} catch (error) {\n\t\tconsole.warn('Invalid Custom Fields', error);\n\t}\n});\n\nsettings.watch<number>('API_Enable_Rate_Limiter_Limit_Time_Default', (value) => {\n\tdefaultRateLimiterOptions.intervalTimeInMS = value;\n\tAPI.v1.reloadRoutesToRefreshRateLimiter();\n});\n\nsettings.watch<number>('API_Enable_Rate_Limiter_Limit_Calls_Default', (value) => {\n\tdefaultRateLimiterOptions.numRequestsAllowed = value;\n\tAPI.v1.reloadRoutesToRefreshRateLimiter();\n});\n\nsettings.watch<boolean>('Prometheus_API_User_Agent', (value) => {\n\tprometheusAPIUserAgent = value;\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/api.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/api.ts","inputSourceMap":{"version":3,"file":"app/api/server/api.ts","sourceRoot":"","sources":["app/api/server/api.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMethodConnection, IUser, IRoom } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport { Users } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport type { JoinPathPattern, Method } from '@rocket.chat/rest-typings';\nimport { Accounts } from 'meteor/accounts-base';\nimport { DDP } from 'meteor/ddp';\nimport { DDPCommon } from 'meteor/ddp-common';\nimport { Meteor } from 'meteor/meteor';\nimport type { RateLimiterOptionsToCheck } from 'meteor/rate-limit';\nimport { RateLimiter } from 'meteor/rate-limit';\nimport type { Request, Response } from 'meteor/rocketchat:restivus';\nimport { Restivus } from 'meteor/rocketchat:restivus';\nimport _ from 'underscore';\n\nimport { isObject } from '../../../lib/utils/isObject';\nimport { getNestedProp } from '../../../server/lib/getNestedProp';\nimport { getRestPayload } from '../../../server/lib/logger/logPayloads';\nimport { checkCodeForUser } from '../../2fa/server/code';\nimport { hasPermissionAsync } from '../../authorization/server/functions/hasPermission';\nimport { notifyOnUserChangeAsync } from '../../lib/server/lib/notifyListener';\nimport { metrics } from '../../metrics/server';\nimport { settings } from '../../settings/server';\nimport { getDefaultUserFields } from '../../utils/server/functions/getDefaultUserFields';\nimport type { PermissionsPayload } from './api.helpers';\nimport { checkPermissionsForInvocation, checkPermissions, parseDeprecation } from './api.helpers';\nimport type {\n\tFailureResult,\n\tInternalError,\n\tNotFoundResult,\n\tOperations,\n\tOptions,\n\tPartialThis,\n\tSuccessResult,\n\tUnauthorizedResult,\n} from './definition';\nimport { getUserInfo } from './helpers/getUserInfo';\nimport { parseJsonQuery } from './helpers/parseJsonQuery';\n\nconst logger = new Logger('API');\n\ninterface IAPIProperties {\n\tuseDefaultAuth: boolean;\n\tprettyJson: boolean;\n\tauth: { token: string; user: () => Promise<{ userId: string; token: string }> };\n\tdefaultOptionsEndpoint?: () => Promise<void>;\n\tversion?: string;\n\tenableCors?: boolean;\n\tapiPath?: string;\n}\n\ninterface IAPIDefaultFieldsToExclude {\n\tavatarOrigin: number;\n\temails: number;\n\tphone: number;\n\tstatusConnection: number;\n\tcreatedAt: number;\n\tlastLogin: number;\n\tservices: number;\n\trequirePasswordChange: number;\n\trequirePasswordChangeReason: number;\n\troles: number;\n\tstatusDefault: number;\n\t_updatedAt: number;\n\tsettings: number;\n\tinviteToken: number;\n}\n\ntype RateLimiterOptions = {\n\tnumRequestsAllowed?: number;\n\tintervalTimeInMS?: number;\n};\n\nexport const defaultRateLimiterOptions: RateLimiterOptions = {\n\tnumRequestsAllowed: settings.get<number>('API_Enable_Rate_Limiter_Limit_Calls_Default'),\n\tintervalTimeInMS: settings.get<number>('API_Enable_Rate_Limiter_Limit_Time_Default'),\n};\nconst rateLimiterDictionary: Record<\n\tstring,\n\t{\n\t\trateLimiter: RateLimiter;\n\t\toptions: RateLimiterOptions;\n\t}\n> = {};\n\nconst getRequestIP = (req: Request): string | null => {\n\tconst socket = req.socket || req.connection?.socket;\n\tconst remoteAddress =\n\t\treq.headers['x-real-ip'] || (typeof socket !== 'string' && (socket?.remoteAddress || req.connection?.remoteAddress || null));\n\tlet forwardedFor = req.headers['x-forwarded-for'];\n\n\tif (!socket) {\n\t\treturn remoteAddress || forwardedFor || null;\n\t}\n\n\tconst httpForwardedCount = parseInt(String(process.env.HTTP_FORWARDED_COUNT)) || 0;\n\tif (httpForwardedCount <= 0) {\n\t\treturn remoteAddress;\n\t}\n\n\tif (!forwardedFor || typeof forwardedFor.valueOf() !== 'string') {\n\t\treturn remoteAddress;\n\t}\n\n\tforwardedFor = forwardedFor.trim().split(/\\s*,\\s*/);\n\tif (httpForwardedCount > forwardedFor.length) {\n\t\treturn remoteAddress;\n\t}\n\n\treturn forwardedFor[forwardedFor.length - httpForwardedCount];\n};\n\nconst generateConnection = (\n\tipAddress: string,\n\thttpHeaders: Record<string, any>,\n): {\n\tid: string;\n\tclose: () => void;\n\tclientAddress: string;\n\thttpHeaders: Record<string, any>;\n} => ({\n\tid: Random.id(),\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tclose() {},\n\thttpHeaders,\n\tclientAddress: ipAddress,\n});\n\nlet prometheusAPIUserAgent = false;\n\nexport class APIClass<TBasePath extends string = ''> extends Restivus {\n\tprotected apiPath?: string;\n\n\tpublic authMethods: ((...args: any[]) => any)[];\n\n\tprotected helperMethods: Map<string, () => any> = new Map();\n\n\tpublic fieldSeparator: string;\n\n\tpublic defaultFieldsToExclude: {\n\t\tjoinCode: number;\n\t\tmembers: number;\n\t\timportIds: number;\n\t\te2e: number;\n\t};\n\n\tpublic defaultLimitedUserFieldsToExclude: IAPIDefaultFieldsToExclude;\n\n\tpublic limitedUserFieldsToExclude: IAPIDefaultFieldsToExclude;\n\n\tpublic limitedUserFieldsToExcludeIfIsPrivilegedUser: {\n\t\tservices: number;\n\t\tinviteToken: number;\n\t};\n\n\tconstructor(properties: IAPIProperties) {\n\t\tsuper(properties);\n\t\tthis.apiPath = properties.apiPath;\n\t\tthis.authMethods = [];\n\t\tthis.fieldSeparator = '.';\n\t\tthis.defaultFieldsToExclude = {\n\t\t\tjoinCode: 0,\n\t\t\tmembers: 0,\n\t\t\timportIds: 0,\n\t\t\te2e: 0,\n\t\t};\n\t\tthis.defaultLimitedUserFieldsToExclude = {\n\t\t\tavatarOrigin: 0,\n\t\t\temails: 0,\n\t\t\tphone: 0,\n\t\t\tstatusConnection: 0,\n\t\t\tcreatedAt: 0,\n\t\t\tlastLogin: 0,\n\t\t\tservices: 0,\n\t\t\trequirePasswordChange: 0,\n\t\t\trequirePasswordChangeReason: 0,\n\t\t\troles: 0,\n\t\t\tstatusDefault: 0,\n\t\t\t_updatedAt: 0,\n\t\t\tsettings: 0,\n\t\t\tinviteToken: 0,\n\t\t};\n\t\tthis.limitedUserFieldsToExclude = this.defaultLimitedUserFieldsToExclude;\n\t\tthis.limitedUserFieldsToExcludeIfIsPrivilegedUser = {\n\t\t\tservices: 0,\n\t\t\tinviteToken: 0,\n\t\t};\n\t}\n\n\tpublic setLimitedCustomFields(customFields: string[]): void {\n\t\tconst nonPublicFieds = customFields.reduce((acc, customField) => {\n\t\t\tacc[`customFields.${customField}`] = 0;\n\t\t\treturn acc;\n\t\t}, {} as Record<string, any>);\n\t\tthis.limitedUserFieldsToExclude = {\n\t\t\t...this.defaultLimitedUserFieldsToExclude,\n\t\t\t...nonPublicFieds,\n\t\t};\n\t}\n\n\tasync parseJsonQuery(this: PartialThis) {\n\t\treturn parseJsonQuery(this);\n\t}\n\n\tpublic addAuthMethod(func: (this: PartialThis, ...args: any[]) => any): void {\n\t\tthis.authMethods.push(func);\n\t}\n\n\tprotected shouldAddRateLimitToRoute(options: { rateLimiterOptions?: RateLimiterOptions | boolean }): boolean {\n\t\tconst { version } = this._config;\n\t\tconst { rateLimiterOptions } = options;\n\t\treturn (\n\t\t\t(typeof rateLimiterOptions === 'object' || rateLimiterOptions === undefined) &&\n\t\t\tBoolean(version) &&\n\t\t\t!process.env.TEST_MODE &&\n\t\t\tBoolean(defaultRateLimiterOptions.numRequestsAllowed && defaultRateLimiterOptions.intervalTimeInMS)\n\t\t);\n\t}\n\n\tpublic success(): SuccessResult<void>;\n\n\tpublic success<T>(result: T): SuccessResult<T>;\n\n\tpublic success<T>(result: T = {} as T): SuccessResult<T> {\n\t\tif (isObject(result)) {\n\t\t\t(result as Record<string, any>).success = true;\n\t\t}\n\n\t\tconst finalResult = {\n\t\t\tstatusCode: 200,\n\t\t\tbody: result,\n\t\t} as SuccessResult<T>;\n\n\t\treturn finalResult as SuccessResult<T>;\n\t}\n\n\tpublic failure<T>(result?: T): FailureResult<T>;\n\n\tpublic failure<T, TErrorType extends string, TStack extends string, TErrorDetails>(\n\t\tresult?: T,\n\t\terrorType?: TErrorType,\n\t\tstack?: TStack,\n\t\terror?: { details: TErrorDetails },\n\t): FailureResult<T, TErrorType, TStack, TErrorDetails>;\n\n\tpublic failure<T, TErrorType extends string, TStack extends string, TErrorDetails>(\n\t\tresult?: T,\n\t\terrorType?: TErrorType,\n\t\tstack?: TStack,\n\t\terror?: { details: TErrorDetails },\n\t): FailureResult<T> {\n\t\tconst response: {\n\t\t\tstatusCode: 400;\n\t\t\tbody: any & { message?: string; errorType?: string; stack?: string; success?: boolean; details?: Record<string, any> | string };\n\t\t} = { statusCode: 400, body: result };\n\n\t\tif (isObject(result)) {\n\t\t\tresponse.body.success = false;\n\t\t} else {\n\t\t\tresponse.body = {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: result,\n\t\t\t\tstack,\n\t\t\t};\n\n\t\t\tif (errorType) {\n\t\t\t\tresponse.body.errorType = errorType;\n\t\t\t}\n\n\t\t\tif (error && typeof error === 'object' && 'details' in error && error?.details) {\n\t\t\t\ttry {\n\t\t\t\t\tresponse.body.details = JSON.parse(error.details as unknown as string);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tresponse.body.details = error.details;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tpublic notFound(msg?: string): NotFoundResult {\n\t\treturn {\n\t\t\tstatusCode: 404,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'Resource not found',\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic internalError<T>(msg?: T): InternalError<T> {\n\t\treturn {\n\t\t\tstatusCode: 500,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'Internal error occured',\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic unauthorized<T>(msg?: T): UnauthorizedResult<T> {\n\t\treturn {\n\t\t\tstatusCode: 403,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'unauthorized',\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic tooManyRequests(msg?: string): { statusCode: number; body: Record<string, any> & { success?: boolean } } {\n\t\treturn {\n\t\t\tstatusCode: 429,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'Too many requests',\n\t\t\t},\n\t\t};\n\t}\n\n\tprotected getRateLimiter(route: string): { rateLimiter: RateLimiter; options: RateLimiterOptions } {\n\t\treturn rateLimiterDictionary[route];\n\t}\n\n\tprotected async shouldVerifyRateLimit(route: string, userId: string): Promise<boolean> {\n\t\treturn (\n\t\t\trateLimiterDictionary.hasOwnProperty(route) &&\n\t\t\tsettings.get<boolean>('API_Enable_Rate_Limiter') === true &&\n\t\t\t(process.env.NODE_ENV !== 'development' || settings.get<boolean>('API_Enable_Rate_Limiter_Dev') === true) &&\n\t\t\t!(userId && (await hasPermissionAsync(userId, 'api-bypass-rate-limit')))\n\t\t);\n\t}\n\n\tprotected async enforceRateLimit(\n\t\tobjectForRateLimitMatch: RateLimiterOptionsToCheck,\n\t\t_: any,\n\t\tresponse: Response,\n\t\tuserId: string,\n\t): Promise<void> {\n\t\tif (!(await this.shouldVerifyRateLimit(objectForRateLimitMatch.route, userId))) {\n\t\t\treturn;\n\t\t}\n\n\t\trateLimiterDictionary[objectForRateLimitMatch.route].rateLimiter.increment(objectForRateLimitMatch);\n\t\tconst attemptResult = await rateLimiterDictionary[objectForRateLimitMatch.route].rateLimiter.check(objectForRateLimitMatch);\n\t\tconst timeToResetAttempsInSeconds = Math.ceil(attemptResult.timeToReset / 1000);\n\t\tresponse.setHeader('X-RateLimit-Limit', rateLimiterDictionary[objectForRateLimitMatch.route].options.numRequestsAllowed);\n\t\tresponse.setHeader('X-RateLimit-Remaining', attemptResult.numInvocationsLeft);\n\t\tresponse.setHeader('X-RateLimit-Reset', new Date().getTime() + attemptResult.timeToReset);\n\n\t\tif (!attemptResult.allowed) {\n\t\t\tthrow new Meteor.Error(\n\t\t\t\t'error-too-many-requests',\n\t\t\t\t`Error, too many requests. Please slow down. You must wait ${timeToResetAttempsInSeconds} seconds before trying this endpoint again.`,\n\t\t\t\t{\n\t\t\t\t\ttimeToReset: attemptResult.timeToReset,\n\t\t\t\t\tseconds: timeToResetAttempsInSeconds,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic reloadRoutesToRefreshRateLimiter(): void {\n\t\tconst { version } = this._config;\n\t\tthis._routes.forEach((route) => {\n\t\t\tif (this.shouldAddRateLimitToRoute(route.options)) {\n\t\t\t\tthis.addRateLimiterRuleForRoutes({\n\t\t\t\t\troutes: [route.path],\n\t\t\t\t\trateLimiterOptions: route.options.rateLimiterOptions || defaultRateLimiterOptions,\n\t\t\t\t\tendpoints: Object.keys(route.endpoints).filter((endpoint) => endpoint !== 'options'),\n\t\t\t\t\tapiVersion: version,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected addRateLimiterRuleForRoutes({\n\t\troutes,\n\t\trateLimiterOptions,\n\t\tendpoints,\n\t\tapiVersion,\n\t}: {\n\t\troutes: string[];\n\t\trateLimiterOptions: RateLimiterOptions | boolean;\n\t\tendpoints: string[];\n\t\tapiVersion?: string;\n\t}): void {\n\t\tif (typeof rateLimiterOptions !== 'object') {\n\t\t\tthrow new Meteor.Error('\"rateLimiterOptions\" must be an object');\n\t\t}\n\t\tif (!rateLimiterOptions.numRequestsAllowed) {\n\t\t\tthrow new Meteor.Error('You must set \"numRequestsAllowed\" property in rateLimiter for REST API endpoint');\n\t\t}\n\t\tif (!rateLimiterOptions.intervalTimeInMS) {\n\t\t\tthrow new Meteor.Error('You must set \"intervalTimeInMS\" property in rateLimiter for REST API endpoint');\n\t\t}\n\t\tconst addRateLimitRuleToEveryRoute = (routes: string[]) => {\n\t\t\troutes.forEach((route) => {\n\t\t\t\trateLimiterDictionary[route] = {\n\t\t\t\t\trateLimiter: new RateLimiter(),\n\t\t\t\t\toptions: rateLimiterOptions,\n\t\t\t\t};\n\t\t\t\tconst rateLimitRule = {\n\t\t\t\t\tIPAddr: (input: any) => input,\n\t\t\t\t\troute,\n\t\t\t\t};\n\t\t\t\trateLimiterDictionary[route].rateLimiter.addRule(\n\t\t\t\t\trateLimitRule,\n\t\t\t\t\trateLimiterOptions.numRequestsAllowed as number,\n\t\t\t\t\trateLimiterOptions.intervalTimeInMS as number,\n\t\t\t\t);\n\t\t\t});\n\t\t};\n\t\troutes.map((route) => this.namedRoutes(route, endpoints, apiVersion)).map(addRateLimitRuleToEveryRoute);\n\t}\n\n\tpublic async processTwoFactor({\n\t\tuserId,\n\t\trequest,\n\t\tinvocation,\n\t\toptions,\n\t\tconnection,\n\t}: {\n\t\tuserId: string;\n\t\trequest: Request;\n\t\tinvocation: { twoFactorChecked?: boolean };\n\t\toptions?: Options;\n\t\tconnection: IMethodConnection;\n\t}): Promise<void> {\n\t\tif (options && (!('twoFactorRequired' in options) || !options.twoFactorRequired)) {\n\t\t\treturn;\n\t\t}\n\t\tconst code = request.headers['x-2fa-code'];\n\t\tconst method = request.headers['x-2fa-method'];\n\n\t\tawait checkCodeForUser({\n\t\t\tuser: userId,\n\t\t\tcode,\n\t\t\tmethod,\n\t\t\toptions: options && 'twoFactorOptions' in options ? (options as Record<string, any>).twoFactorOptions || {} : {},\n\t\t\tconnection,\n\t\t});\n\n\t\tinvocation.twoFactorChecked = true;\n\t}\n\n\tprotected getFullRouteName(route: string, method: string, apiVersion?: string): string {\n\t\tlet prefix = `/${this.apiPath || ''}`;\n\t\tif (apiVersion) {\n\t\t\tprefix += `${apiVersion}/`;\n\t\t}\n\t\treturn `${prefix}${route}${method}`;\n\t}\n\n\tprotected namedRoutes(route: string, endpoints: Record<string, string> | string[], apiVersion?: string): string[] {\n\t\tconst routeActions: string[] = Array.isArray(endpoints) ? endpoints : Object.keys(endpoints);\n\n\t\treturn routeActions.map((action) => this.getFullRouteName(route, action, apiVersion));\n\t}\n\n\taddRoute<TSubPathPattern extends string>(\n\t\tsubpath: TSubPathPattern,\n\t\toperations: Operations<JoinPathPattern<TBasePath, TSubPathPattern>>,\n\t): void;\n\n\taddRoute<TSubPathPattern extends string, TPathPattern extends JoinPathPattern<TBasePath, TSubPathPattern>>(\n\t\tsubpaths: TSubPathPattern[],\n\t\toperations: Operations<TPathPattern>,\n\t): void;\n\n\taddRoute<TSubPathPattern extends string, TOptions extends Options>(\n\t\tsubpath: TSubPathPattern,\n\t\toptions: TOptions,\n\t\toperations: Operations<JoinPathPattern<TBasePath, TSubPathPattern>, TOptions>,\n\t): void;\n\n\taddRoute<TSubPathPattern extends string, TPathPattern extends JoinPathPattern<TBasePath, TSubPathPattern>, TOptions extends Options>(\n\t\tsubpaths: TSubPathPattern[],\n\t\toptions: TOptions,\n\t\toperations: Operations<TPathPattern, TOptions>,\n\t): void;\n\n\tpublic addRoute<\n\t\tTSubPathPattern extends string,\n\t\tTPathPattern extends JoinPathPattern<TBasePath, TSubPathPattern>,\n\t\tTOptions extends Options,\n\t>(subpaths: TSubPathPattern[], options: TOptions, endpoints?: Operations<TPathPattern, TOptions>): void {\n\t\t// Note: required if the developer didn't provide options\n\t\tif (endpoints === undefined) {\n\t\t\tendpoints = options as unknown as Operations<TPathPattern>;\n\t\t\toptions = {} as TOptions;\n\t\t}\n\n\t\tconst operations = endpoints;\n\n\t\tconst shouldVerifyPermissions = checkPermissions(options);\n\n\t\t// Allow for more than one route using the same option and endpoints\n\t\tif (!Array.isArray(subpaths)) {\n\t\t\tsubpaths = [subpaths];\n\t\t}\n\t\tconst { version } = this._config;\n\t\tif (this.shouldAddRateLimitToRoute(options)) {\n\t\t\tthis.addRateLimiterRuleForRoutes({\n\t\t\t\troutes: subpaths,\n\t\t\t\trateLimiterOptions: options.rateLimiterOptions || defaultRateLimiterOptions,\n\t\t\t\tendpoints: operations as unknown as string[],\n\t\t\t\tapiVersion: version,\n\t\t\t});\n\t\t}\n\t\tsubpaths.forEach((route) => {\n\t\t\t// Note: This is required due to Restivus calling `addRoute` in the constructor of itself\n\t\t\tObject.keys(operations).forEach((method) => {\n\t\t\t\tconst _options = { ...options };\n\n\t\t\t\tif (typeof operations[method as keyof Operations<TPathPattern, TOptions>] === 'function') {\n\t\t\t\t\t(operations as Record<string, any>)[method as string] = {\n\t\t\t\t\t\taction: operations[method as keyof Operations<TPathPattern, TOptions>],\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tconst extraOptions: Record<string, any> = { ...operations[method as keyof Operations<TPathPattern, TOptions>] } as Record<\n\t\t\t\t\t\tstring,\n\t\t\t\t\t\tany\n\t\t\t\t\t>;\n\t\t\t\t\tdelete extraOptions.action;\n\t\t\t\t\tObject.assign(_options, extraOptions);\n\t\t\t\t}\n\t\t\t\t// Add a try/catch for each endpoint\n\t\t\t\tconst originalAction = (operations[method as keyof Operations<TPathPattern, TOptions>] as Record<string, any>).action;\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\t\t\tconst api = this;\n\t\t\t\t(operations[method as keyof Operations<TPathPattern, TOptions>] as Record<string, any>).action =\n\t\t\t\t\tasync function _internalRouteActionHandler() {\n\t\t\t\t\t\tconst rocketchatRestApiEnd = metrics.rocketchatRestApi.startTimer({\n\t\t\t\t\t\t\tmethod,\n\t\t\t\t\t\t\tversion,\n\t\t\t\t\t\t\t...(prometheusAPIUserAgent && { user_agent: this.request.headers['user-agent'] }),\n\t\t\t\t\t\t\tentrypoint: route.startsWith('method.call') ? decodeURIComponent(this.request._parsedUrl.pathname.slice(8)) : route,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.requestIp = getRequestIP(this.request);\n\n\t\t\t\t\t\tconst startTime = Date.now();\n\n\t\t\t\t\t\tconst log = logger.logger.child({\n\t\t\t\t\t\t\tmethod: this.request.method,\n\t\t\t\t\t\t\turl: this.request.url,\n\t\t\t\t\t\t\tuserId: this.request.headers['x-user-id'],\n\t\t\t\t\t\t\tuserAgent: this.request.headers['user-agent'],\n\t\t\t\t\t\t\tlength: this.request.headers['content-length'],\n\t\t\t\t\t\t\thost: this.request.headers.host,\n\t\t\t\t\t\t\treferer: this.request.headers.referer,\n\t\t\t\t\t\t\tremoteIP: this.requestIp,\n\t\t\t\t\t\t\t...getRestPayload(this.request.body),\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// If the endpoint requires authentication only if anonymous read is disabled, load the user info if it was provided\n\t\t\t\t\t\tif (!options.authRequired && options.authOrAnonRequired) {\n\t\t\t\t\t\t\tconst { 'x-user-id': userId, 'x-auth-token': userToken } = this.request.headers;\n\t\t\t\t\t\t\tif (userId && userToken) {\n\t\t\t\t\t\t\t\tthis.user = await Users.findOne(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t'services.resume.loginTokens.hashedToken': Accounts._hashLoginToken(userToken),\n\t\t\t\t\t\t\t\t\t\t'_id': userId,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tprojection: getDefaultUserFields(),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tthis.userId = this.user?._id;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!this.user && !settings.get('Accounts_AllowAnonymousRead')) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tstatusCode: 401,\n\t\t\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\t\t\tstatus: 'error',\n\t\t\t\t\t\t\t\t\t\tmessage: 'You must be logged in to do this.',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst objectForRateLimitMatch = {\n\t\t\t\t\t\t\tIPAddr: this.requestIp,\n\t\t\t\t\t\t\troute: `${this.request.route}${this.request.method.toLowerCase()}`,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlet result;\n\n\t\t\t\t\t\tconst connection = { ...generateConnection(this.requestIp, this.request.headers), token: this.token };\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (options.deprecation) {\n\t\t\t\t\t\t\t\tparseDeprecation(this, options.deprecation);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tawait api.enforceRateLimit(objectForRateLimitMatch, this.request, this.response, this.userId);\n\n\t\t\t\t\t\t\tif (_options.validateParams) {\n\t\t\t\t\t\t\t\tconst requestMethod = this.request.method as Method;\n\t\t\t\t\t\t\t\tconst validatorFunc =\n\t\t\t\t\t\t\t\t\ttypeof _options.validateParams === 'function' ? _options.validateParams : _options.validateParams[requestMethod];\n\n\t\t\t\t\t\t\t\tif (validatorFunc && !validatorFunc(requestMethod === 'GET' ? this.queryParams : this.bodyParams)) {\n\t\t\t\t\t\t\t\t\tthrow new Meteor.Error('invalid-params', validatorFunc.errors?.map((error: any) => error.message).join('\\n '));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tshouldVerifyPermissions &&\n\t\t\t\t\t\t\t\t(!this.userId ||\n\t\t\t\t\t\t\t\t\t!(await checkPermissionsForInvocation(\n\t\t\t\t\t\t\t\t\t\tthis.userId,\n\t\t\t\t\t\t\t\t\t\t_options.permissionsRequired as PermissionsPayload,\n\t\t\t\t\t\t\t\t\t\tthis.request.method,\n\t\t\t\t\t\t\t\t\t)))\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthrow new Meteor.Error('error-unauthorized', 'User does not have the permissions required for this action', {\n\t\t\t\t\t\t\t\t\tpermissions: _options.permissionsRequired,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst invocation = new DDPCommon.MethodInvocation({\n\t\t\t\t\t\t\t\tconnection,\n\t\t\t\t\t\t\t\tisSimulation: false,\n\t\t\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tAccounts._accountData[connection.id] = {\n\t\t\t\t\t\t\t\tconnection,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tAccounts._setAccountData(connection.id, 'loginToken', this.token);\n\n\t\t\t\t\t\t\tawait api.processTwoFactor({\n\t\t\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\t\t\trequest: this.request,\n\t\t\t\t\t\t\t\tinvocation: invocation as unknown as Record<string, any>,\n\t\t\t\t\t\t\t\toptions: _options,\n\t\t\t\t\t\t\t\tconnection: connection as unknown as IMethodConnection,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tthis.queryOperations = options.queryOperations;\n\t\t\t\t\t\t\tthis.queryFields = options.queryFields;\n\t\t\t\t\t\t\tthis.parseJsonQuery = api.parseJsonQuery.bind(this as PartialThis);\n\n\t\t\t\t\t\t\tresult =\n\t\t\t\t\t\t\t\t(await DDP._CurrentInvocation.withValue(invocation as any, async () => originalAction.apply(this))) || API.v1.success();\n\n\t\t\t\t\t\t\tlog.http({\n\t\t\t\t\t\t\t\tstatus: result.statusCode,\n\t\t\t\t\t\t\t\tresponseTime: Date.now() - startTime,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (e: any) {\n\t\t\t\t\t\t\tconst apiMethod: string =\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'error-too-many-requests': 'tooManyRequests',\n\t\t\t\t\t\t\t\t\t'error-unauthorized': 'unauthorized',\n\t\t\t\t\t\t\t\t}[e.error as string] || 'failure';\n\n\t\t\t\t\t\t\tresult = (API.v1 as Record<string, any>)[apiMethod](\n\t\t\t\t\t\t\t\ttypeof e === 'string' ? e : e.message,\n\t\t\t\t\t\t\t\te.error,\n\t\t\t\t\t\t\t\tprocess.env.TEST_MODE ? e.stack : undefined,\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tlog.http({\n\t\t\t\t\t\t\t\terr: e,\n\t\t\t\t\t\t\t\tstatus: result.statusCode,\n\t\t\t\t\t\t\t\tresponseTime: Date.now() - startTime,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tdelete Accounts._accountData[connection.id];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trocketchatRestApiEnd({\n\t\t\t\t\t\t\tstatus: result.statusCode,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t};\n\n\t\t\t\t// Allow the endpoints to make usage of the logger which respects the user's settings\n\t\t\t\t(operations[method as keyof Operations<TPathPattern, TOptions>] as Record<string, any>).logger = logger;\n\t\t\t});\n\n\t\t\tsuper.addRoute(route, options, operations);\n\t\t});\n\t}\n\n\tpublic updateRateLimiterDictionaryForRoute(route: string, numRequestsAllowed: number, intervalTimeInMS?: number): void {\n\t\tif (rateLimiterDictionary[route]) {\n\t\t\trateLimiterDictionary[route].options.numRequestsAllowed =\n\t\t\t\tnumRequestsAllowed ?? rateLimiterDictionary[route].options.numRequestsAllowed;\n\t\t\trateLimiterDictionary[route].options.intervalTimeInMS = intervalTimeInMS ?? rateLimiterDictionary[route].options.intervalTimeInMS;\n\t\t\tAPI.v1?.reloadRoutesToRefreshRateLimiter();\n\t\t}\n\t}\n\n\tprotected _initAuth(): void {\n\t\tconst loginCompatibility = (bodyParams: Record<string, any>, request: Request): Record<string, any> => {\n\t\t\t// Grab the username or email that the user is logging in with\n\t\t\tconst { user, username, email, password, code: bodyCode } = bodyParams;\n\t\t\tlet usernameToLDAPLogin = '';\n\n\t\t\tif (password == null) {\n\t\t\t\treturn bodyParams;\n\t\t\t}\n\n\t\t\tif (_.without(Object.keys(bodyParams), 'user', 'username', 'email', 'password', 'code').length > 0) {\n\t\t\t\treturn bodyParams;\n\t\t\t}\n\n\t\t\tconst code = bodyCode || request.headers['x-2fa-code'];\n\n\t\t\tconst auth: Record<string, any> = {\n\t\t\t\tpassword,\n\t\t\t};\n\n\t\t\tif (typeof user === 'string') {\n\t\t\t\tauth.user = user.includes('@') ? { email: user } : { username: user };\n\t\t\t\tusernameToLDAPLogin = user;\n\t\t\t} else if (username) {\n\t\t\t\tauth.user = { username };\n\t\t\t\tusernameToLDAPLogin = username;\n\t\t\t} else if (email) {\n\t\t\t\tauth.user = { email };\n\t\t\t\tusernameToLDAPLogin = email;\n\t\t\t}\n\n\t\t\tif (auth.user == null) {\n\t\t\t\treturn bodyParams;\n\t\t\t}\n\n\t\t\tif (auth.password.hashed) {\n\t\t\t\tauth.password = {\n\t\t\t\t\tdigest: auth.password as { hashed: string },\n\t\t\t\t\talgorithm: 'sha-256',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst objectToLDAPLogin = {\n\t\t\t\tldap: true,\n\t\t\t\tusername: usernameToLDAPLogin,\n\t\t\t\tldapPass: auth.password,\n\t\t\t\tldapOptions: {},\n\t\t\t};\n\t\t\tif (settings.get<boolean>('LDAP_Enable') && !code) {\n\t\t\t\treturn objectToLDAPLogin;\n\t\t\t}\n\n\t\t\tif (code) {\n\t\t\t\treturn {\n\t\t\t\t\ttotp: {\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tlogin: settings.get('LDAP_Enable') ? objectToLDAPLogin : auth,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn auth;\n\t\t};\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\n\t\t(this as APIClass<'/v1'>).addRoute<'/v1/login', { authRequired: false }>(\n\t\t\t'login' as any,\n\t\t\t{ authRequired: false },\n\t\t\t{\n\t\t\t\tasync post() {\n\t\t\t\t\tconst request = this.request as unknown as Request;\n\t\t\t\t\tconst args = loginCompatibility(this.bodyParams, request);\n\n\t\t\t\t\tconst invocation = new DDPCommon.MethodInvocation({\n\t\t\t\t\t\tconnection: generateConnection(getRequestIP(request) || '', this.request.headers),\n\t\t\t\t\t});\n\n\t\t\t\t\tlet auth;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tauth = await DDP._CurrentInvocation.withValue(invocation as any, async () => Meteor.callAsync('login', args));\n\t\t\t\t\t} catch (error: any) {\n\t\t\t\t\t\tlet e = error;\n\t\t\t\t\t\tif (error.reason === 'User not found') {\n\t\t\t\t\t\t\te = {\n\t\t\t\t\t\t\t\terror: 'Unauthorized',\n\t\t\t\t\t\t\t\treason: 'Unauthorized',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstatusCode: 401,\n\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\tstatus: 'error',\n\t\t\t\t\t\t\t\terror: e.error,\n\t\t\t\t\t\t\t\tdetails: e.details,\n\t\t\t\t\t\t\t\tmessage: e.reason || e.message,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} as unknown as SuccessResult<Record<string, any>>;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.user = await Users.findOne(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_id: auth.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprojection: getDefaultUserFields(),\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.userId = (this.user as unknown as IUser)?._id;\n\n\t\t\t\t\tconst response = {\n\t\t\t\t\t\tstatus: 'success',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\t\tauthToken: auth.token,\n\t\t\t\t\t\t\tme: await getUserInfo(this.user || ({} as IUser)),\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tconst extraData = self._config.onLoggedIn?.call(this);\n\n\t\t\t\t\tif (extraData != null) {\n\t\t\t\t\t\t_.extend(response.data, {\n\t\t\t\t\t\t\textra: extraData,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn response as unknown as SuccessResult<Record<string, any>>;\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tconst logout = async function (this: Restivus): Promise<{ status: string; data: { message: string } }> {\n\t\t\t// Remove the given auth token from the user's account\n\t\t\tconst authToken = this.request.headers['x-auth-token'];\n\t\t\tconst hashedToken = Accounts._hashLoginToken(authToken);\n\t\t\tconst tokenLocation = self._config?.auth?.token;\n\t\t\tconst index = tokenLocation?.lastIndexOf('.') || 0;\n\t\t\tconst tokenPath = tokenLocation?.substring(0, index) || '';\n\t\t\tconst tokenFieldName = tokenLocation?.substring(index + 1) || '';\n\t\t\tconst tokenToRemove: Record<string, any> = {};\n\t\t\ttokenToRemove[tokenFieldName] = hashedToken;\n\t\t\tconst tokenRemovalQuery: Record<string, any> = {};\n\t\t\ttokenRemovalQuery[tokenPath] = tokenToRemove;\n\n\t\t\tawait Users.updateOne(\n\t\t\t\t{ _id: this.user._id },\n\t\t\t\t{\n\t\t\t\t\t$pull: tokenRemovalQuery,\n\t\t\t\t},\n\t\t\t);\n\n\t\t\t// TODO this can be optmized so places that care about loginTokens being removed are invoked directly\n\t\t\t// instead of having to listen to every watch.users event\n\t\t\tvoid notifyOnUserChangeAsync(async () => {\n\t\t\t\tconst userTokens = await Users.findOneById(this.user._id, { projection: { [tokenPath]: 1 } });\n\t\t\t\tif (!userTokens) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst diff = { [tokenPath]: getNestedProp(userTokens, tokenPath) };\n\n\t\t\t\treturn { clientAction: 'updated', id: this.user._id, diff };\n\t\t\t});\n\n\t\t\tconst response = {\n\t\t\t\tstatus: 'success',\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: \"You've been logged out!\",\n\t\t\t\t},\n\t\t\t};\n\n\t\t\t// Call the logout hook with the authenticated user attached\n\t\t\tconst extraData = self._config.onLoggedOut?.call(this);\n\t\t\tif (extraData != null) {\n\t\t\t\t_.extend(response.data, {\n\t\t\t\t\textra: extraData,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn response;\n\t\t};\n\n\t\t/*\n\t\t\tAdd a logout endpoint to the API\n\t\t\tAfter the user is logged out, the onLoggedOut hook is called (see Restfully.configure() for\n\t\t\tadding hook).\n\t\t*/\n\t\treturn (this as APIClass<'/v1'>).addRoute<'/v1/logout', { authRequired: true }>(\n\t\t\t'logout' as any,\n\t\t\t{\n\t\t\t\tauthRequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tasync get() {\n\t\t\t\t\tconsole.warn('Warning: Default logout via GET will be removed in Restivus v1.0. Use POST instead.');\n\t\t\t\t\tconsole.warn('    See https://github.com/kahmali/meteor-restivus/issues/100');\n\t\t\t\t\treturn logout.call(this as unknown as Restivus) as any;\n\t\t\t\t},\n\t\t\t\tasync post() {\n\t\t\t\t\treturn logout.call(this as unknown as Restivus) as any;\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n\nconst getUserAuth = function _getUserAuth(...args: any[]): {\n\ttoken: string;\n\tuser: (this: Restivus) => Promise<{ userId: string; token: string }>;\n} {\n\tconst invalidResults = [undefined, null, false];\n\treturn {\n\t\ttoken: 'services.resume.loginTokens.hashedToken',\n\t\tasync user() {\n\t\t\tif (this.bodyParams?.payload) {\n\t\t\t\tthis.bodyParams = JSON.parse(this.bodyParams.payload);\n\t\t\t}\n\n\t\t\tfor await (const method of API.v1?.authMethods || []) {\n\t\t\t\tif (typeof method === 'function') {\n\t\t\t\t\tconst result = await method.apply(this, args);\n\t\t\t\t\tif (!invalidResults.includes(result)) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet token;\n\t\t\tif (this.request.headers['x-auth-token']) {\n\t\t\t\ttoken = Accounts._hashLoginToken(this.request.headers['x-auth-token']);\n\t\t\t}\n\n\t\t\tthis.token = token || '';\n\n\t\t\treturn {\n\t\t\t\tuserId: this.request.headers['x-user-id'],\n\t\t\t\ttoken,\n\t\t\t};\n\t\t},\n\t};\n};\n\nconst defaultOptionsEndpoint = async function _defaultOptionsEndpoint(this: Restivus): Promise<void> {\n\t// check if a pre-flight request\n\tif (!this.request.headers['access-control-request-method'] && !this.request.headers.origin) {\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tif (!settings.get('API_Enable_CORS')) {\n\t\tthis.response.writeHead(405);\n\t\tthis.response.write('CORS not enabled. Go to \"Admin > General > REST Api\" to enable it.');\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tconst CORSOriginSetting = String(settings.get('API_CORS_Origin'));\n\n\tconst defaultHeaders = {\n\t\t'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, HEAD, PATCH',\n\t\t'Access-Control-Allow-Headers':\n\t\t\t'Origin, X-Requested-With, Content-Type, Accept, X-User-Id, X-Auth-Token, x-visitor-token, Authorization',\n\t};\n\n\tif (CORSOriginSetting === '*') {\n\t\tthis.response.writeHead(200, {\n\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t...defaultHeaders,\n\t\t});\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tconst origins = CORSOriginSetting.trim()\n\t\t.split(',')\n\t\t.map((origin) => String(origin).trim().toLocaleLowerCase());\n\n\t// if invalid origin reply without required CORS headers\n\tif (!origins.includes(this.request.headers.origin)) {\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tthis.response.writeHead(200, {\n\t\t'Access-Control-Allow-Origin': this.request.headers.origin,\n\t\t'Vary': 'Origin',\n\t\t...defaultHeaders,\n\t});\n\tthis.done();\n};\n\nconst createApi = function _createApi(options: { version?: string } = {}): APIClass {\n\treturn new APIClass(\n\t\tObject.assign(\n\t\t\t{\n\t\t\t\tapiPath: 'api/',\n\t\t\t\tuseDefaultAuth: true,\n\t\t\t\tprettyJson: process.env.NODE_ENV === 'development',\n\t\t\t\tdefaultOptionsEndpoint,\n\t\t\t\tauth: getUserAuth(),\n\t\t\t},\n\t\t\toptions,\n\t\t) as IAPIProperties,\n\t);\n};\n\nexport const API: {\n\tv1: APIClass<'/v1'>;\n\tdefault: APIClass;\n\tgetUserAuth: () => { token: string; user: (this: Restivus) => Promise<{ userId: string; token: string }> };\n\tApiClass: typeof APIClass;\n\tchannels?: {\n\t\tcreate: {\n\t\t\tvalidate: (params: {\n\t\t\t\tuser: { value: string };\n\t\t\t\tname?: { key: string; value?: string };\n\t\t\t\tmembers?: { key: string; value?: string[] };\n\t\t\t\tcustomFields?: { key: string; value?: string };\n\t\t\t\tteams?: { key: string; value?: string[] };\n\t\t\t\tteamId?: { key: string; value?: string };\n\t\t\t}) => Promise<void>;\n\t\t\texecute: (\n\t\t\t\tuserId: string,\n\t\t\t\tparams: {\n\t\t\t\t\tname?: string;\n\t\t\t\t\tmembers?: string[];\n\t\t\t\t\tcustomFields?: Record<string, any>;\n\t\t\t\t\textraData?: Record<string, any>;\n\t\t\t\t\treadOnly?: boolean;\n\t\t\t\t},\n\t\t\t) => Promise<{ channel: IRoom }>;\n\t\t};\n\t};\n} = {\n\tgetUserAuth,\n\tApiClass: APIClass,\n\tv1: createApi({\n\t\tversion: 'v1',\n\t}),\n\tdefault: createApi(),\n};\n\n// register the API to be re-created once the CORS-setting changes.\nsettings.watchMultiple(['API_Enable_CORS', 'API_CORS_Origin'], () => {\n\tAPI.v1 = createApi({\n\t\tversion: 'v1',\n\t});\n\n\tAPI.default = createApi();\n});\n\nsettings.watch<string>('Accounts_CustomFields', (value) => {\n\tif (!value) {\n\t\treturn API.v1?.setLimitedCustomFields([]);\n\t}\n\ttry {\n\t\tconst customFields = JSON.parse(value);\n\t\tconst nonPublicCustomFields = Object.keys(customFields).filter((customFieldKey) => customFields[customFieldKey].public !== true);\n\t\tAPI.v1.setLimitedCustomFields(nonPublicCustomFields);\n\t} catch (error) {\n\t\tconsole.warn('Invalid Custom Fields', error);\n\t}\n});\n\nsettings.watch<number>('API_Enable_Rate_Limiter_Limit_Time_Default', (value) => {\n\tdefaultRateLimiterOptions.intervalTimeInMS = value;\n\tAPI.v1.reloadRoutesToRefreshRateLimiter();\n});\n\nsettings.watch<number>('API_Enable_Rate_Limiter_Limit_Calls_Default', (value) => {\n\tdefaultRateLimiterOptions.numRequestsAllowed = value;\n\tAPI.v1.reloadRoutesToRefreshRateLimiter();\n});\n\nsettings.watch<boolean>('Prometheus_API_User_Agent', (value) => {\n\tprometheusAPIUserAgent = value;\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      defaultRateLimiterOptions: () => defaultRateLimiterOptions,\n      APIClass: () => APIClass,\n      API: () => API\n    });\n    let Logger;\n    module.link(\"@rocket.chat/logger\", {\n      Logger(v) {\n        Logger = v;\n      }\n    }, 0);\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 2);\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 3);\n    let DDP;\n    module.link(\"meteor/ddp\", {\n      DDP(v) {\n        DDP = v;\n      }\n    }, 4);\n    let DDPCommon;\n    module.link(\"meteor/ddp-common\", {\n      DDPCommon(v) {\n        DDPCommon = v;\n      }\n    }, 5);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 6);\n    let RateLimiter;\n    module.link(\"meteor/rate-limit\", {\n      RateLimiter(v) {\n        RateLimiter = v;\n      }\n    }, 7);\n    let Restivus;\n    module.link(\"meteor/rocketchat:restivus\", {\n      Restivus(v) {\n        Restivus = v;\n      }\n    }, 8);\n    let _;\n    module.link(\"underscore\", {\n      default(v) {\n        _ = v;\n      }\n    }, 9);\n    let isObject;\n    module.link(\"../../../lib/utils/isObject\", {\n      isObject(v) {\n        isObject = v;\n      }\n    }, 10);\n    let getNestedProp;\n    module.link(\"../../../server/lib/getNestedProp\", {\n      getNestedProp(v) {\n        getNestedProp = v;\n      }\n    }, 11);\n    let getRestPayload;\n    module.link(\"../../../server/lib/logger/logPayloads\", {\n      getRestPayload(v) {\n        getRestPayload = v;\n      }\n    }, 12);\n    let checkCodeForUser;\n    module.link(\"../../2fa/server/code\", {\n      checkCodeForUser(v) {\n        checkCodeForUser = v;\n      }\n    }, 13);\n    let hasPermissionAsync;\n    module.link(\"../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 14);\n    let notifyOnUserChangeAsync;\n    module.link(\"../../lib/server/lib/notifyListener\", {\n      notifyOnUserChangeAsync(v) {\n        notifyOnUserChangeAsync = v;\n      }\n    }, 15);\n    let metrics;\n    module.link(\"../../metrics/server\", {\n      metrics(v) {\n        metrics = v;\n      }\n    }, 16);\n    let settings;\n    module.link(\"../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 17);\n    let getDefaultUserFields;\n    module.link(\"../../utils/server/functions/getDefaultUserFields\", {\n      getDefaultUserFields(v) {\n        getDefaultUserFields = v;\n      }\n    }, 18);\n    let checkPermissionsForInvocation, checkPermissions, parseDeprecation;\n    module.link(\"./api.helpers\", {\n      checkPermissionsForInvocation(v) {\n        checkPermissionsForInvocation = v;\n      },\n      checkPermissions(v) {\n        checkPermissions = v;\n      },\n      parseDeprecation(v) {\n        parseDeprecation = v;\n      }\n    }, 19);\n    let getUserInfo;\n    module.link(\"./helpers/getUserInfo\", {\n      getUserInfo(v) {\n        getUserInfo = v;\n      }\n    }, 20);\n    let parseJsonQuery;\n    module.link(\"./helpers/parseJsonQuery\", {\n      parseJsonQuery(v) {\n        parseJsonQuery = v;\n      }\n    }, 21);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const logger = new Logger('API');\n    const defaultRateLimiterOptions = {\n      numRequestsAllowed: settings.get('API_Enable_Rate_Limiter_Limit_Calls_Default'),\n      intervalTimeInMS: settings.get('API_Enable_Rate_Limiter_Limit_Time_Default')\n    };\n    const rateLimiterDictionary = {};\n    const getRequestIP = req => {\n      var _req$connection, _req$connection2;\n      const socket = req.socket || ((_req$connection = req.connection) === null || _req$connection === void 0 ? void 0 : _req$connection.socket);\n      const remoteAddress = req.headers['x-real-ip'] || typeof socket !== 'string' && ((socket === null || socket === void 0 ? void 0 : socket.remoteAddress) || ((_req$connection2 = req.connection) === null || _req$connection2 === void 0 ? void 0 : _req$connection2.remoteAddress) || null);\n      let forwardedFor = req.headers['x-forwarded-for'];\n      if (!socket) {\n        return remoteAddress || forwardedFor || null;\n      }\n      const httpForwardedCount = parseInt(String(process.env.HTTP_FORWARDED_COUNT)) || 0;\n      if (httpForwardedCount <= 0) {\n        return remoteAddress;\n      }\n      if (!forwardedFor || typeof forwardedFor.valueOf() !== 'string') {\n        return remoteAddress;\n      }\n      forwardedFor = forwardedFor.trim().split(/\\s*,\\s*/);\n      if (httpForwardedCount > forwardedFor.length) {\n        return remoteAddress;\n      }\n      return forwardedFor[forwardedFor.length - httpForwardedCount];\n    };\n    const generateConnection = (ipAddress, httpHeaders) => ({\n      id: Random.id(),\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      close() {},\n      httpHeaders,\n      clientAddress: ipAddress\n    });\n    let prometheusAPIUserAgent = false;\n    class APIClass extends Restivus {\n      constructor(properties) {\n        super(properties);\n        this.apiPath = void 0;\n        this.authMethods = void 0;\n        this.helperMethods = new Map();\n        this.fieldSeparator = void 0;\n        this.defaultFieldsToExclude = void 0;\n        this.defaultLimitedUserFieldsToExclude = void 0;\n        this.limitedUserFieldsToExclude = void 0;\n        this.limitedUserFieldsToExcludeIfIsPrivilegedUser = void 0;\n        this.apiPath = properties.apiPath;\n        this.authMethods = [];\n        this.fieldSeparator = '.';\n        this.defaultFieldsToExclude = {\n          joinCode: 0,\n          members: 0,\n          importIds: 0,\n          e2e: 0\n        };\n        this.defaultLimitedUserFieldsToExclude = {\n          avatarOrigin: 0,\n          emails: 0,\n          phone: 0,\n          statusConnection: 0,\n          createdAt: 0,\n          lastLogin: 0,\n          services: 0,\n          requirePasswordChange: 0,\n          requirePasswordChangeReason: 0,\n          roles: 0,\n          statusDefault: 0,\n          _updatedAt: 0,\n          settings: 0,\n          inviteToken: 0\n        };\n        this.limitedUserFieldsToExclude = this.defaultLimitedUserFieldsToExclude;\n        this.limitedUserFieldsToExcludeIfIsPrivilegedUser = {\n          services: 0,\n          inviteToken: 0\n        };\n      }\n      setLimitedCustomFields(customFields) {\n        const nonPublicFieds = customFields.reduce((acc, customField) => {\n          acc[\"customFields.\".concat(customField)] = 0;\n          return acc;\n        }, {});\n        this.limitedUserFieldsToExclude = _objectSpread(_objectSpread({}, this.defaultLimitedUserFieldsToExclude), nonPublicFieds);\n      }\n      async parseJsonQuery() {\n        return parseJsonQuery(this);\n      }\n      addAuthMethod(func) {\n        this.authMethods.push(func);\n      }\n      shouldAddRateLimitToRoute(options) {\n        const {\n          version\n        } = this._config;\n        const {\n          rateLimiterOptions\n        } = options;\n        return (typeof rateLimiterOptions === 'object' || rateLimiterOptions === undefined) && Boolean(version) && !process.env.TEST_MODE && Boolean(defaultRateLimiterOptions.numRequestsAllowed && defaultRateLimiterOptions.intervalTimeInMS);\n      }\n      success() {\n        let result = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (isObject(result)) {\n          result.success = true;\n        }\n        const finalResult = {\n          statusCode: 200,\n          body: result\n        };\n        return finalResult;\n      }\n      failure(result, errorType, stack, error) {\n        const response = {\n          statusCode: 400,\n          body: result\n        };\n        if (isObject(result)) {\n          response.body.success = false;\n        } else {\n          response.body = {\n            success: false,\n            error: result,\n            stack\n          };\n          if (errorType) {\n            response.body.errorType = errorType;\n          }\n          if (error && typeof error === 'object' && 'details' in error && error !== null && error !== void 0 && error.details) {\n            try {\n              response.body.details = JSON.parse(error.details);\n            } catch (e) {\n              response.body.details = error.details;\n            }\n          }\n        }\n        return response;\n      }\n      notFound(msg) {\n        return {\n          statusCode: 404,\n          body: {\n            success: false,\n            error: msg || 'Resource not found'\n          }\n        };\n      }\n      internalError(msg) {\n        return {\n          statusCode: 500,\n          body: {\n            success: false,\n            error: msg || 'Internal error occured'\n          }\n        };\n      }\n      unauthorized(msg) {\n        return {\n          statusCode: 403,\n          body: {\n            success: false,\n            error: msg || 'unauthorized'\n          }\n        };\n      }\n      tooManyRequests(msg) {\n        return {\n          statusCode: 429,\n          body: {\n            success: false,\n            error: msg || 'Too many requests'\n          }\n        };\n      }\n      getRateLimiter(route) {\n        return rateLimiterDictionary[route];\n      }\n      async shouldVerifyRateLimit(route, userId) {\n        return rateLimiterDictionary.hasOwnProperty(route) && settings.get('API_Enable_Rate_Limiter') === true && (process.env.NODE_ENV !== 'development' || settings.get('API_Enable_Rate_Limiter_Dev') === true) && !(userId && (await hasPermissionAsync(userId, 'api-bypass-rate-limit')));\n      }\n      async enforceRateLimit(objectForRateLimitMatch, _, response, userId) {\n        if (!(await this.shouldVerifyRateLimit(objectForRateLimitMatch.route, userId))) {\n          return;\n        }\n        rateLimiterDictionary[objectForRateLimitMatch.route].rateLimiter.increment(objectForRateLimitMatch);\n        const attemptResult = await rateLimiterDictionary[objectForRateLimitMatch.route].rateLimiter.check(objectForRateLimitMatch);\n        const timeToResetAttempsInSeconds = Math.ceil(attemptResult.timeToReset / 1000);\n        response.setHeader('X-RateLimit-Limit', rateLimiterDictionary[objectForRateLimitMatch.route].options.numRequestsAllowed);\n        response.setHeader('X-RateLimit-Remaining', attemptResult.numInvocationsLeft);\n        response.setHeader('X-RateLimit-Reset', new Date().getTime() + attemptResult.timeToReset);\n        if (!attemptResult.allowed) {\n          throw new Meteor.Error('error-too-many-requests', \"Error, too many requests. Please slow down. You must wait \".concat(timeToResetAttempsInSeconds, \" seconds before trying this endpoint again.\"), {\n            timeToReset: attemptResult.timeToReset,\n            seconds: timeToResetAttempsInSeconds\n          });\n        }\n      }\n      reloadRoutesToRefreshRateLimiter() {\n        const {\n          version\n        } = this._config;\n        this._routes.forEach(route => {\n          if (this.shouldAddRateLimitToRoute(route.options)) {\n            this.addRateLimiterRuleForRoutes({\n              routes: [route.path],\n              rateLimiterOptions: route.options.rateLimiterOptions || defaultRateLimiterOptions,\n              endpoints: Object.keys(route.endpoints).filter(endpoint => endpoint !== 'options'),\n              apiVersion: version\n            });\n          }\n        });\n      }\n      addRateLimiterRuleForRoutes(_ref) {\n        let {\n          routes,\n          rateLimiterOptions,\n          endpoints,\n          apiVersion\n        } = _ref;\n        if (typeof rateLimiterOptions !== 'object') {\n          throw new Meteor.Error('\"rateLimiterOptions\" must be an object');\n        }\n        if (!rateLimiterOptions.numRequestsAllowed) {\n          throw new Meteor.Error('You must set \"numRequestsAllowed\" property in rateLimiter for REST API endpoint');\n        }\n        if (!rateLimiterOptions.intervalTimeInMS) {\n          throw new Meteor.Error('You must set \"intervalTimeInMS\" property in rateLimiter for REST API endpoint');\n        }\n        const addRateLimitRuleToEveryRoute = routes => {\n          routes.forEach(route => {\n            rateLimiterDictionary[route] = {\n              rateLimiter: new RateLimiter(),\n              options: rateLimiterOptions\n            };\n            const rateLimitRule = {\n              IPAddr: input => input,\n              route\n            };\n            rateLimiterDictionary[route].rateLimiter.addRule(rateLimitRule, rateLimiterOptions.numRequestsAllowed, rateLimiterOptions.intervalTimeInMS);\n          });\n        };\n        routes.map(route => this.namedRoutes(route, endpoints, apiVersion)).map(addRateLimitRuleToEveryRoute);\n      }\n      async processTwoFactor(_ref2) {\n        let {\n          userId,\n          request,\n          invocation,\n          options,\n          connection\n        } = _ref2;\n        if (options && (!('twoFactorRequired' in options) || !options.twoFactorRequired)) {\n          return;\n        }\n        const code = request.headers['x-2fa-code'];\n        const method = request.headers['x-2fa-method'];\n        await checkCodeForUser({\n          user: userId,\n          code,\n          method,\n          options: options && 'twoFactorOptions' in options ? options.twoFactorOptions || {} : {},\n          connection\n        });\n        invocation.twoFactorChecked = true;\n      }\n      getFullRouteName(route, method, apiVersion) {\n        let prefix = \"/\".concat(this.apiPath || '');\n        if (apiVersion) {\n          prefix += \"\".concat(apiVersion, \"/\");\n        }\n        return \"\".concat(prefix).concat(route).concat(method);\n      }\n      namedRoutes(route, endpoints, apiVersion) {\n        const routeActions = Array.isArray(endpoints) ? endpoints : Object.keys(endpoints);\n        return routeActions.map(action => this.getFullRouteName(route, action, apiVersion));\n      }\n      addRoute(subpaths, options, endpoints) {\n        // Note: required if the developer didn't provide options\n        if (endpoints === undefined) {\n          endpoints = options;\n          options = {};\n        }\n        const operations = endpoints;\n        const shouldVerifyPermissions = checkPermissions(options);\n        // Allow for more than one route using the same option and endpoints\n        if (!Array.isArray(subpaths)) {\n          subpaths = [subpaths];\n        }\n        const {\n          version\n        } = this._config;\n        if (this.shouldAddRateLimitToRoute(options)) {\n          this.addRateLimiterRuleForRoutes({\n            routes: subpaths,\n            rateLimiterOptions: options.rateLimiterOptions || defaultRateLimiterOptions,\n            endpoints: operations,\n            apiVersion: version\n          });\n        }\n        subpaths.forEach(route => {\n          // Note: This is required due to Restivus calling `addRoute` in the constructor of itself\n          Object.keys(operations).forEach(method => {\n            const _options = _objectSpread({}, options);\n            if (typeof operations[method] === 'function') {\n              operations[method] = {\n                action: operations[method]\n              };\n            } else {\n              const extraOptions = _objectSpread({}, operations[method]);\n              delete extraOptions.action;\n              Object.assign(_options, extraOptions);\n            }\n            // Add a try/catch for each endpoint\n            const originalAction = operations[method].action;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const api = this;\n            operations[method].action = async function _internalRouteActionHandler() {\n              const rocketchatRestApiEnd = metrics.rocketchatRestApi.startTimer(_objectSpread(_objectSpread({\n                method,\n                version\n              }, prometheusAPIUserAgent && {\n                user_agent: this.request.headers['user-agent']\n              }), {}, {\n                entrypoint: route.startsWith('method.call') ? decodeURIComponent(this.request._parsedUrl.pathname.slice(8)) : route\n              }));\n              this.requestIp = getRequestIP(this.request);\n              const startTime = Date.now();\n              const log = logger.logger.child(_objectSpread({\n                method: this.request.method,\n                url: this.request.url,\n                userId: this.request.headers['x-user-id'],\n                userAgent: this.request.headers['user-agent'],\n                length: this.request.headers['content-length'],\n                host: this.request.headers.host,\n                referer: this.request.headers.referer,\n                remoteIP: this.requestIp\n              }, getRestPayload(this.request.body)));\n              // If the endpoint requires authentication only if anonymous read is disabled, load the user info if it was provided\n              if (!options.authRequired && options.authOrAnonRequired) {\n                const {\n                  'x-user-id': userId,\n                  'x-auth-token': userToken\n                } = this.request.headers;\n                if (userId && userToken) {\n                  var _this$user;\n                  this.user = await Users.findOne({\n                    'services.resume.loginTokens.hashedToken': Accounts._hashLoginToken(userToken),\n                    '_id': userId\n                  }, {\n                    projection: getDefaultUserFields()\n                  });\n                  this.userId = (_this$user = this.user) === null || _this$user === void 0 ? void 0 : _this$user._id;\n                }\n                if (!this.user && !settings.get('Accounts_AllowAnonymousRead')) {\n                  return {\n                    statusCode: 401,\n                    body: {\n                      status: 'error',\n                      message: 'You must be logged in to do this.'\n                    }\n                  };\n                }\n              }\n              const objectForRateLimitMatch = {\n                IPAddr: this.requestIp,\n                route: \"\".concat(this.request.route).concat(this.request.method.toLowerCase())\n              };\n              let result;\n              const connection = _objectSpread(_objectSpread({}, generateConnection(this.requestIp, this.request.headers)), {}, {\n                token: this.token\n              });\n              try {\n                if (options.deprecation) {\n                  parseDeprecation(this, options.deprecation);\n                }\n                await api.enforceRateLimit(objectForRateLimitMatch, this.request, this.response, this.userId);\n                if (_options.validateParams) {\n                  const requestMethod = this.request.method;\n                  const validatorFunc = typeof _options.validateParams === 'function' ? _options.validateParams : _options.validateParams[requestMethod];\n                  if (validatorFunc && !validatorFunc(requestMethod === 'GET' ? this.queryParams : this.bodyParams)) {\n                    var _validatorFunc$errors;\n                    throw new Meteor.Error('invalid-params', (_validatorFunc$errors = validatorFunc.errors) === null || _validatorFunc$errors === void 0 ? void 0 : _validatorFunc$errors.map(error => error.message).join('\\n '));\n                  }\n                }\n                if (shouldVerifyPermissions && (!this.userId || !(await checkPermissionsForInvocation(this.userId, _options.permissionsRequired, this.request.method)))) {\n                  throw new Meteor.Error('error-unauthorized', 'User does not have the permissions required for this action', {\n                    permissions: _options.permissionsRequired\n                  });\n                }\n                const invocation = new DDPCommon.MethodInvocation({\n                  connection,\n                  isSimulation: false,\n                  userId: this.userId\n                });\n                Accounts._accountData[connection.id] = {\n                  connection\n                };\n                Accounts._setAccountData(connection.id, 'loginToken', this.token);\n                await api.processTwoFactor({\n                  userId: this.userId,\n                  request: this.request,\n                  invocation: invocation,\n                  options: _options,\n                  connection: connection\n                });\n                this.queryOperations = options.queryOperations;\n                this.queryFields = options.queryFields;\n                this.parseJsonQuery = api.parseJsonQuery.bind(this);\n                result = (await DDP._CurrentInvocation.withValue(invocation, async () => originalAction.apply(this))) || API.v1.success();\n                log.http({\n                  status: result.statusCode,\n                  responseTime: Date.now() - startTime\n                });\n              } catch (e) {\n                const apiMethod = {\n                  'error-too-many-requests': 'tooManyRequests',\n                  'error-unauthorized': 'unauthorized'\n                }[e.error] || 'failure';\n                result = API.v1[apiMethod](typeof e === 'string' ? e : e.message, e.error, process.env.TEST_MODE ? e.stack : undefined, e);\n                log.http({\n                  err: e,\n                  status: result.statusCode,\n                  responseTime: Date.now() - startTime\n                });\n              } finally {\n                delete Accounts._accountData[connection.id];\n              }\n              rocketchatRestApiEnd({\n                status: result.statusCode\n              });\n              return result;\n            };\n            // Allow the endpoints to make usage of the logger which respects the user's settings\n            operations[method].logger = logger;\n          });\n          super.addRoute(route, options, operations);\n        });\n      }\n      updateRateLimiterDictionaryForRoute(route, numRequestsAllowed, intervalTimeInMS) {\n        if (rateLimiterDictionary[route]) {\n          var _API$v;\n          rateLimiterDictionary[route].options.numRequestsAllowed = numRequestsAllowed !== null && numRequestsAllowed !== void 0 ? numRequestsAllowed : rateLimiterDictionary[route].options.numRequestsAllowed;\n          rateLimiterDictionary[route].options.intervalTimeInMS = intervalTimeInMS !== null && intervalTimeInMS !== void 0 ? intervalTimeInMS : rateLimiterDictionary[route].options.intervalTimeInMS;\n          (_API$v = API.v1) === null || _API$v === void 0 ? void 0 : _API$v.reloadRoutesToRefreshRateLimiter();\n        }\n      }\n      _initAuth() {\n        const loginCompatibility = (bodyParams, request) => {\n          // Grab the username or email that the user is logging in with\n          const {\n            user,\n            username,\n            email,\n            password,\n            code: bodyCode\n          } = bodyParams;\n          let usernameToLDAPLogin = '';\n          if (password == null) {\n            return bodyParams;\n          }\n          if (_.without(Object.keys(bodyParams), 'user', 'username', 'email', 'password', 'code').length > 0) {\n            return bodyParams;\n          }\n          const code = bodyCode || request.headers['x-2fa-code'];\n          const auth = {\n            password\n          };\n          if (typeof user === 'string') {\n            auth.user = user.includes('@') ? {\n              email: user\n            } : {\n              username: user\n            };\n            usernameToLDAPLogin = user;\n          } else if (username) {\n            auth.user = {\n              username\n            };\n            usernameToLDAPLogin = username;\n          } else if (email) {\n            auth.user = {\n              email\n            };\n            usernameToLDAPLogin = email;\n          }\n          if (auth.user == null) {\n            return bodyParams;\n          }\n          if (auth.password.hashed) {\n            auth.password = {\n              digest: auth.password,\n              algorithm: 'sha-256'\n            };\n          }\n          const objectToLDAPLogin = {\n            ldap: true,\n            username: usernameToLDAPLogin,\n            ldapPass: auth.password,\n            ldapOptions: {}\n          };\n          if (settings.get('LDAP_Enable') && !code) {\n            return objectToLDAPLogin;\n          }\n          if (code) {\n            return {\n              totp: {\n                code,\n                login: settings.get('LDAP_Enable') ? objectToLDAPLogin : auth\n              }\n            };\n          }\n          return auth;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        this.addRoute('login', {\n          authRequired: false\n        }, {\n          async post() {\n            var _this$user2, _self$_config$onLogge;\n            const request = this.request;\n            const args = loginCompatibility(this.bodyParams, request);\n            const invocation = new DDPCommon.MethodInvocation({\n              connection: generateConnection(getRequestIP(request) || '', this.request.headers)\n            });\n            let auth;\n            try {\n              auth = await DDP._CurrentInvocation.withValue(invocation, async () => Meteor.callAsync('login', args));\n            } catch (error) {\n              let e = error;\n              if (error.reason === 'User not found') {\n                e = {\n                  error: 'Unauthorized',\n                  reason: 'Unauthorized'\n                };\n              }\n              return {\n                statusCode: 401,\n                body: {\n                  status: 'error',\n                  error: e.error,\n                  details: e.details,\n                  message: e.reason || e.message\n                }\n              };\n            }\n            this.user = await Users.findOne({\n              _id: auth.id\n            }, {\n              projection: getDefaultUserFields()\n            });\n            this.userId = (_this$user2 = this.user) === null || _this$user2 === void 0 ? void 0 : _this$user2._id;\n            const response = {\n              status: 'success',\n              data: {\n                userId: this.userId,\n                authToken: auth.token,\n                me: await getUserInfo(this.user || {})\n              }\n            };\n            const extraData = (_self$_config$onLogge = self._config.onLoggedIn) === null || _self$_config$onLogge === void 0 ? void 0 : _self$_config$onLogge.call(this);\n            if (extraData != null) {\n              _.extend(response.data, {\n                extra: extraData\n              });\n            }\n            return response;\n          }\n        });\n        const logout = async function () {\n          var _self$_config, _self$_config$auth, _self$_config$onLogge2;\n          // Remove the given auth token from the user's account\n          const authToken = this.request.headers['x-auth-token'];\n          const hashedToken = Accounts._hashLoginToken(authToken);\n          const tokenLocation = (_self$_config = self._config) === null || _self$_config === void 0 ? void 0 : (_self$_config$auth = _self$_config.auth) === null || _self$_config$auth === void 0 ? void 0 : _self$_config$auth.token;\n          const index = (tokenLocation === null || tokenLocation === void 0 ? void 0 : tokenLocation.lastIndexOf('.')) || 0;\n          const tokenPath = (tokenLocation === null || tokenLocation === void 0 ? void 0 : tokenLocation.substring(0, index)) || '';\n          const tokenFieldName = (tokenLocation === null || tokenLocation === void 0 ? void 0 : tokenLocation.substring(index + 1)) || '';\n          const tokenToRemove = {};\n          tokenToRemove[tokenFieldName] = hashedToken;\n          const tokenRemovalQuery = {};\n          tokenRemovalQuery[tokenPath] = tokenToRemove;\n          await Users.updateOne({\n            _id: this.user._id\n          }, {\n            $pull: tokenRemovalQuery\n          });\n          // TODO this can be optmized so places that care about loginTokens being removed are invoked directly\n          // instead of having to listen to every watch.users event\n          void notifyOnUserChangeAsync(async () => {\n            const userTokens = await Users.findOneById(this.user._id, {\n              projection: {\n                [tokenPath]: 1\n              }\n            });\n            if (!userTokens) {\n              return;\n            }\n            const diff = {\n              [tokenPath]: getNestedProp(userTokens, tokenPath)\n            };\n            return {\n              clientAction: 'updated',\n              id: this.user._id,\n              diff\n            };\n          });\n          const response = {\n            status: 'success',\n            data: {\n              message: \"You've been logged out!\"\n            }\n          };\n          // Call the logout hook with the authenticated user attached\n          const extraData = (_self$_config$onLogge2 = self._config.onLoggedOut) === null || _self$_config$onLogge2 === void 0 ? void 0 : _self$_config$onLogge2.call(this);\n          if (extraData != null) {\n            _.extend(response.data, {\n              extra: extraData\n            });\n          }\n          return response;\n        };\n        /*\n            Add a logout endpoint to the API\n            After the user is logged out, the onLoggedOut hook is called (see Restfully.configure() for\n            adding hook).\n        */\n        return this.addRoute('logout', {\n          authRequired: true\n        }, {\n          async get() {\n            console.warn('Warning: Default logout via GET will be removed in Restivus v1.0. Use POST instead.');\n            console.warn('    See https://github.com/kahmali/meteor-restivus/issues/100');\n            return logout.call(this);\n          },\n          async post() {\n            return logout.call(this);\n          }\n        });\n      }\n    }\n    const getUserAuth = function _getUserAuth() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const invalidResults = [undefined, null, false];\n      return {\n        token: 'services.resume.loginTokens.hashedToken',\n        async user() {\n          var _this$bodyParams;\n          if ((_this$bodyParams = this.bodyParams) !== null && _this$bodyParams !== void 0 && _this$bodyParams.payload) {\n            this.bodyParams = JSON.parse(this.bodyParams.payload);\n          }\n          var _iteratorAbruptCompletion = false;\n          var _didIteratorError = false;\n          var _iteratorError;\n          try {\n            for (var _iterator = _asyncIterator(((_API$v2 = API.v1) === null || _API$v2 === void 0 ? void 0 : _API$v2.authMethods) || []), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n              var _API$v2;\n              const method = _step.value;\n              {\n                if (typeof method === 'function') {\n                  const result = await method.apply(this, args);\n                  if (!invalidResults.includes(result)) {\n                    return result;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (_iteratorAbruptCompletion && _iterator.return != null) {\n                await _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n          let token;\n          if (this.request.headers['x-auth-token']) {\n            token = Accounts._hashLoginToken(this.request.headers['x-auth-token']);\n          }\n          this.token = token || '';\n          return {\n            userId: this.request.headers['x-user-id'],\n            token\n          };\n        }\n      };\n    };\n    const defaultOptionsEndpoint = async function _defaultOptionsEndpoint() {\n      // check if a pre-flight request\n      if (!this.request.headers['access-control-request-method'] && !this.request.headers.origin) {\n        this.done();\n        return;\n      }\n      if (!settings.get('API_Enable_CORS')) {\n        this.response.writeHead(405);\n        this.response.write('CORS not enabled. Go to \"Admin > General > REST Api\" to enable it.');\n        this.done();\n        return;\n      }\n      const CORSOriginSetting = String(settings.get('API_CORS_Origin'));\n      const defaultHeaders = {\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, HEAD, PATCH',\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept, X-User-Id, X-Auth-Token, x-visitor-token, Authorization'\n      };\n      if (CORSOriginSetting === '*') {\n        this.response.writeHead(200, _objectSpread({\n          'Access-Control-Allow-Origin': '*'\n        }, defaultHeaders));\n        this.done();\n        return;\n      }\n      const origins = CORSOriginSetting.trim().split(',').map(origin => String(origin).trim().toLocaleLowerCase());\n      // if invalid origin reply without required CORS headers\n      if (!origins.includes(this.request.headers.origin)) {\n        this.done();\n        return;\n      }\n      this.response.writeHead(200, _objectSpread({\n        'Access-Control-Allow-Origin': this.request.headers.origin,\n        'Vary': 'Origin'\n      }, defaultHeaders));\n      this.done();\n    };\n    const createApi = function _createApi() {\n      let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return new APIClass(Object.assign({\n        apiPath: 'api/',\n        useDefaultAuth: true,\n        prettyJson: process.env.NODE_ENV === 'development',\n        defaultOptionsEndpoint,\n        auth: getUserAuth()\n      }, options));\n    };\n    const API = {\n      getUserAuth,\n      ApiClass: APIClass,\n      v1: createApi({\n        version: 'v1'\n      }),\n      default: createApi()\n    };\n    // register the API to be re-created once the CORS-setting changes.\n    settings.watchMultiple(['API_Enable_CORS', 'API_CORS_Origin'], () => {\n      API.v1 = createApi({\n        version: 'v1'\n      });\n      API.default = createApi();\n    });\n    settings.watch('Accounts_CustomFields', value => {\n      if (!value) {\n        var _API$v3;\n        return (_API$v3 = API.v1) === null || _API$v3 === void 0 ? void 0 : _API$v3.setLimitedCustomFields([]);\n      }\n      try {\n        const customFields = JSON.parse(value);\n        const nonPublicCustomFields = Object.keys(customFields).filter(customFieldKey => customFields[customFieldKey].public !== true);\n        API.v1.setLimitedCustomFields(nonPublicCustomFields);\n      } catch (error) {\n        console.warn('Invalid Custom Fields', error);\n      }\n    });\n    settings.watch('API_Enable_Rate_Limiter_Limit_Time_Default', value => {\n      defaultRateLimiterOptions.intervalTimeInMS = value;\n      API.v1.reloadRoutesToRefreshRateLimiter();\n    });\n    settings.watch('API_Enable_Rate_Limiter_Limit_Calls_Default', value => {\n      defaultRateLimiterOptions.numRequestsAllowed = value;\n      API.v1.reloadRoutesToRefreshRateLimiter();\n    });\n    settings.watch('Prometheus_API_User_Agent', value => {\n      prometheusAPIUserAgent = value;\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","defaultRateLimiterOptions","APIClass","API","Logger","Users","Random","Accounts","DDP","DDPCommon","Meteor","RateLimiter","Restivus","_","isObject","getNestedProp","getRestPayload","checkCodeForUser","hasPermissionAsync","notifyOnUserChangeAsync","metrics","settings","getDefaultUserFields","checkPermissionsForInvocation","checkPermissions","parseDeprecation","getUserInfo","parseJsonQuery","__reifyWaitForDeps__","logger","numRequestsAllowed","get","intervalTimeInMS","rateLimiterDictionary","getRequestIP","req","_req$connection","_req$connection2","socket","connection","remoteAddress","headers","forwardedFor","httpForwardedCount","parseInt","String","process","env","HTTP_FORWARDED_COUNT","valueOf","trim","split","length","generateConnection","ipAddress","httpHeaders","id","close","clientAddress","prometheusAPIUserAgent","constructor","properties","apiPath","authMethods","helperMethods","Map","fieldSeparator","defaultFieldsToExclude","defaultLimitedUserFieldsToExclude","limitedUserFieldsToExclude","limitedUserFieldsToExcludeIfIsPrivilegedUser","joinCode","members","importIds","e2e","avatarOrigin","emails","phone","statusConnection","createdAt","lastLogin","services","requirePasswordChange","requirePasswordChangeReason","roles","statusDefault","_updatedAt","inviteToken","setLimitedCustomFields","customFields","nonPublicFieds","reduce","acc","customField","concat","addAuthMethod","func","push","shouldAddRateLimitToRoute","options","version","_config","rateLimiterOptions","undefined","Boolean","TEST_MODE","success","result","arguments","finalResult","statusCode","body","failure","errorType","stack","error","response","details","JSON","parse","e","notFound","msg","internalError","unauthorized","tooManyRequests","getRateLimiter","route","shouldVerifyRateLimit","userId","hasOwnProperty","NODE_ENV","enforceRateLimit","objectForRateLimitMatch","rateLimiter","increment","attemptResult","check","timeToResetAttempsInSeconds","Math","ceil","timeToReset","setHeader","numInvocationsLeft","Date","getTime","allowed","Error","seconds","reloadRoutesToRefreshRateLimiter","_routes","forEach","addRateLimiterRuleForRoutes","routes","path","endpoints","Object","keys","filter","endpoint","apiVersion","_ref","addRateLimitRuleToEveryRoute","rateLimitRule","IPAddr","input","addRule","map","namedRoutes","processTwoFactor","_ref2","request","invocation","twoFactorRequired","code","method","user","twoFactorOptions","twoFactorChecked","getFullRouteName","prefix","routeActions","Array","isArray","action","addRoute","subpaths","operations","shouldVerifyPermissions","_options","extraOptions","assign","originalAction","api","_internalRouteActionHandler","rocketchatRestApiEnd","rocketchatRestApi","startTimer","user_agent","entrypoint","startsWith","decodeURIComponent","_parsedUrl","pathname","slice","requestIp","startTime","now","log","child","url","userAgent","host","referer","remoteIP","authRequired","authOrAnonRequired","userToken","_this$user","findOne","_hashLoginToken","projection","_id","status","message","toLowerCase","token","deprecation","validateParams","requestMethod","validatorFunc","queryParams","bodyParams","_validatorFunc$errors","errors","join","permissionsRequired","permissions","MethodInvocation","isSimulation","_accountData","_setAccountData","queryOperations","queryFields","bind","_CurrentInvocation","withValue","apply","v1","http","responseTime","apiMethod","err","updateRateLimiterDictionaryForRoute","_API$v","_initAuth","loginCompatibility","username","email","password","bodyCode","usernameToLDAPLogin","without","auth","includes","hashed","digest","algorithm","objectToLDAPLogin","ldap","ldapPass","ldapOptions","totp","login","self","post","_this$user2","_self$_config$onLogge","args","callAsync","reason","data","authToken","me","extraData","onLoggedIn","call","extend","extra","logout","_self$_config","_self$_config$auth","_self$_config$onLogge2","hashedToken","tokenLocation","index","lastIndexOf","tokenPath","substring","tokenFieldName","tokenToRemove","tokenRemovalQuery","updateOne","$pull","userTokens","findOneById","diff","clientAction","onLoggedOut","console","warn","getUserAuth","_getUserAuth","_len","_key","invalidResults","_this$bodyParams","payload","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_API$v2","_step","next","done","value","return","defaultOptionsEndpoint","_defaultOptionsEndpoint","origin","writeHead","write","CORSOriginSetting","defaultHeaders","origins","toLocaleLowerCase","createApi","_createApi","useDefaultAuth","prettyJson","ApiClass","watchMultiple","watch","_API$v3","nonPublicCustomFields","customFieldKey","public","__reify_async_result__","_reifyError","async"],"sources":["app/api/server/api.ts"],"sourcesContent":["import type { IMethodConnection, IUser, IRoom } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\nimport { Users } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport type { JoinPathPattern, Method } from '@rocket.chat/rest-typings';\nimport { Accounts } from 'meteor/accounts-base';\nimport { DDP } from 'meteor/ddp';\nimport { DDPCommon } from 'meteor/ddp-common';\nimport { Meteor } from 'meteor/meteor';\nimport type { RateLimiterOptionsToCheck } from 'meteor/rate-limit';\nimport { RateLimiter } from 'meteor/rate-limit';\nimport type { Request, Response } from 'meteor/rocketchat:restivus';\nimport { Restivus } from 'meteor/rocketchat:restivus';\nimport _ from 'underscore';\n\nimport { isObject } from '../../../lib/utils/isObject';\nimport { getNestedProp } from '../../../server/lib/getNestedProp';\nimport { getRestPayload } from '../../../server/lib/logger/logPayloads';\nimport { checkCodeForUser } from '../../2fa/server/code';\nimport { hasPermissionAsync } from '../../authorization/server/functions/hasPermission';\nimport { notifyOnUserChangeAsync } from '../../lib/server/lib/notifyListener';\nimport { metrics } from '../../metrics/server';\nimport { settings } from '../../settings/server';\nimport { getDefaultUserFields } from '../../utils/server/functions/getDefaultUserFields';\nimport type { PermissionsPayload } from './api.helpers';\nimport { checkPermissionsForInvocation, checkPermissions, parseDeprecation } from './api.helpers';\nimport type {\n\tFailureResult,\n\tInternalError,\n\tNotFoundResult,\n\tOperations,\n\tOptions,\n\tPartialThis,\n\tSuccessResult,\n\tUnauthorizedResult,\n} from './definition';\nimport { getUserInfo } from './helpers/getUserInfo';\nimport { parseJsonQuery } from './helpers/parseJsonQuery';\n\nconst logger = new Logger('API');\n\ninterface IAPIProperties {\n\tuseDefaultAuth: boolean;\n\tprettyJson: boolean;\n\tauth: { token: string; user: () => Promise<{ userId: string; token: string }> };\n\tdefaultOptionsEndpoint?: () => Promise<void>;\n\tversion?: string;\n\tenableCors?: boolean;\n\tapiPath?: string;\n}\n\ninterface IAPIDefaultFieldsToExclude {\n\tavatarOrigin: number;\n\temails: number;\n\tphone: number;\n\tstatusConnection: number;\n\tcreatedAt: number;\n\tlastLogin: number;\n\tservices: number;\n\trequirePasswordChange: number;\n\trequirePasswordChangeReason: number;\n\troles: number;\n\tstatusDefault: number;\n\t_updatedAt: number;\n\tsettings: number;\n\tinviteToken: number;\n}\n\ntype RateLimiterOptions = {\n\tnumRequestsAllowed?: number;\n\tintervalTimeInMS?: number;\n};\n\nexport const defaultRateLimiterOptions: RateLimiterOptions = {\n\tnumRequestsAllowed: settings.get<number>('API_Enable_Rate_Limiter_Limit_Calls_Default'),\n\tintervalTimeInMS: settings.get<number>('API_Enable_Rate_Limiter_Limit_Time_Default'),\n};\nconst rateLimiterDictionary: Record<\n\tstring,\n\t{\n\t\trateLimiter: RateLimiter;\n\t\toptions: RateLimiterOptions;\n\t}\n> = {};\n\nconst getRequestIP = (req: Request): string | null => {\n\tconst socket = req.socket || req.connection?.socket;\n\tconst remoteAddress =\n\t\treq.headers['x-real-ip'] || (typeof socket !== 'string' && (socket?.remoteAddress || req.connection?.remoteAddress || null));\n\tlet forwardedFor = req.headers['x-forwarded-for'];\n\n\tif (!socket) {\n\t\treturn remoteAddress || forwardedFor || null;\n\t}\n\n\tconst httpForwardedCount = parseInt(String(process.env.HTTP_FORWARDED_COUNT)) || 0;\n\tif (httpForwardedCount <= 0) {\n\t\treturn remoteAddress;\n\t}\n\n\tif (!forwardedFor || typeof forwardedFor.valueOf() !== 'string') {\n\t\treturn remoteAddress;\n\t}\n\n\tforwardedFor = forwardedFor.trim().split(/\\s*,\\s*/);\n\tif (httpForwardedCount > forwardedFor.length) {\n\t\treturn remoteAddress;\n\t}\n\n\treturn forwardedFor[forwardedFor.length - httpForwardedCount];\n};\n\nconst generateConnection = (\n\tipAddress: string,\n\thttpHeaders: Record<string, any>,\n): {\n\tid: string;\n\tclose: () => void;\n\tclientAddress: string;\n\thttpHeaders: Record<string, any>;\n} => ({\n\tid: Random.id(),\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tclose() {},\n\thttpHeaders,\n\tclientAddress: ipAddress,\n});\n\nlet prometheusAPIUserAgent = false;\n\nexport class APIClass<TBasePath extends string = ''> extends Restivus {\n\tprotected apiPath?: string;\n\n\tpublic authMethods: ((...args: any[]) => any)[];\n\n\tprotected helperMethods: Map<string, () => any> = new Map();\n\n\tpublic fieldSeparator: string;\n\n\tpublic defaultFieldsToExclude: {\n\t\tjoinCode: number;\n\t\tmembers: number;\n\t\timportIds: number;\n\t\te2e: number;\n\t};\n\n\tpublic defaultLimitedUserFieldsToExclude: IAPIDefaultFieldsToExclude;\n\n\tpublic limitedUserFieldsToExclude: IAPIDefaultFieldsToExclude;\n\n\tpublic limitedUserFieldsToExcludeIfIsPrivilegedUser: {\n\t\tservices: number;\n\t\tinviteToken: number;\n\t};\n\n\tconstructor(properties: IAPIProperties) {\n\t\tsuper(properties);\n\t\tthis.apiPath = properties.apiPath;\n\t\tthis.authMethods = [];\n\t\tthis.fieldSeparator = '.';\n\t\tthis.defaultFieldsToExclude = {\n\t\t\tjoinCode: 0,\n\t\t\tmembers: 0,\n\t\t\timportIds: 0,\n\t\t\te2e: 0,\n\t\t};\n\t\tthis.defaultLimitedUserFieldsToExclude = {\n\t\t\tavatarOrigin: 0,\n\t\t\temails: 0,\n\t\t\tphone: 0,\n\t\t\tstatusConnection: 0,\n\t\t\tcreatedAt: 0,\n\t\t\tlastLogin: 0,\n\t\t\tservices: 0,\n\t\t\trequirePasswordChange: 0,\n\t\t\trequirePasswordChangeReason: 0,\n\t\t\troles: 0,\n\t\t\tstatusDefault: 0,\n\t\t\t_updatedAt: 0,\n\t\t\tsettings: 0,\n\t\t\tinviteToken: 0,\n\t\t};\n\t\tthis.limitedUserFieldsToExclude = this.defaultLimitedUserFieldsToExclude;\n\t\tthis.limitedUserFieldsToExcludeIfIsPrivilegedUser = {\n\t\t\tservices: 0,\n\t\t\tinviteToken: 0,\n\t\t};\n\t}\n\n\tpublic setLimitedCustomFields(customFields: string[]): void {\n\t\tconst nonPublicFieds = customFields.reduce((acc, customField) => {\n\t\t\tacc[`customFields.${customField}`] = 0;\n\t\t\treturn acc;\n\t\t}, {} as Record<string, any>);\n\t\tthis.limitedUserFieldsToExclude = {\n\t\t\t...this.defaultLimitedUserFieldsToExclude,\n\t\t\t...nonPublicFieds,\n\t\t};\n\t}\n\n\tasync parseJsonQuery(this: PartialThis) {\n\t\treturn parseJsonQuery(this);\n\t}\n\n\tpublic addAuthMethod(func: (this: PartialThis, ...args: any[]) => any): void {\n\t\tthis.authMethods.push(func);\n\t}\n\n\tprotected shouldAddRateLimitToRoute(options: { rateLimiterOptions?: RateLimiterOptions | boolean }): boolean {\n\t\tconst { version } = this._config;\n\t\tconst { rateLimiterOptions } = options;\n\t\treturn (\n\t\t\t(typeof rateLimiterOptions === 'object' || rateLimiterOptions === undefined) &&\n\t\t\tBoolean(version) &&\n\t\t\t!process.env.TEST_MODE &&\n\t\t\tBoolean(defaultRateLimiterOptions.numRequestsAllowed && defaultRateLimiterOptions.intervalTimeInMS)\n\t\t);\n\t}\n\n\tpublic success(): SuccessResult<void>;\n\n\tpublic success<T>(result: T): SuccessResult<T>;\n\n\tpublic success<T>(result: T = {} as T): SuccessResult<T> {\n\t\tif (isObject(result)) {\n\t\t\t(result as Record<string, any>).success = true;\n\t\t}\n\n\t\tconst finalResult = {\n\t\t\tstatusCode: 200,\n\t\t\tbody: result,\n\t\t} as SuccessResult<T>;\n\n\t\treturn finalResult as SuccessResult<T>;\n\t}\n\n\tpublic failure<T>(result?: T): FailureResult<T>;\n\n\tpublic failure<T, TErrorType extends string, TStack extends string, TErrorDetails>(\n\t\tresult?: T,\n\t\terrorType?: TErrorType,\n\t\tstack?: TStack,\n\t\terror?: { details: TErrorDetails },\n\t): FailureResult<T, TErrorType, TStack, TErrorDetails>;\n\n\tpublic failure<T, TErrorType extends string, TStack extends string, TErrorDetails>(\n\t\tresult?: T,\n\t\terrorType?: TErrorType,\n\t\tstack?: TStack,\n\t\terror?: { details: TErrorDetails },\n\t): FailureResult<T> {\n\t\tconst response: {\n\t\t\tstatusCode: 400;\n\t\t\tbody: any & { message?: string; errorType?: string; stack?: string; success?: boolean; details?: Record<string, any> | string };\n\t\t} = { statusCode: 400, body: result };\n\n\t\tif (isObject(result)) {\n\t\t\tresponse.body.success = false;\n\t\t} else {\n\t\t\tresponse.body = {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: result,\n\t\t\t\tstack,\n\t\t\t};\n\n\t\t\tif (errorType) {\n\t\t\t\tresponse.body.errorType = errorType;\n\t\t\t}\n\n\t\t\tif (error && typeof error === 'object' && 'details' in error && error?.details) {\n\t\t\t\ttry {\n\t\t\t\t\tresponse.body.details = JSON.parse(error.details as unknown as string);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tresponse.body.details = error.details;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tpublic notFound(msg?: string): NotFoundResult {\n\t\treturn {\n\t\t\tstatusCode: 404,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'Resource not found',\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic internalError<T>(msg?: T): InternalError<T> {\n\t\treturn {\n\t\t\tstatusCode: 500,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'Internal error occured',\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic unauthorized<T>(msg?: T): UnauthorizedResult<T> {\n\t\treturn {\n\t\t\tstatusCode: 403,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'unauthorized',\n\t\t\t},\n\t\t};\n\t}\n\n\tpublic tooManyRequests(msg?: string): { statusCode: number; body: Record<string, any> & { success?: boolean } } {\n\t\treturn {\n\t\t\tstatusCode: 429,\n\t\t\tbody: {\n\t\t\t\tsuccess: false,\n\t\t\t\terror: msg || 'Too many requests',\n\t\t\t},\n\t\t};\n\t}\n\n\tprotected getRateLimiter(route: string): { rateLimiter: RateLimiter; options: RateLimiterOptions } {\n\t\treturn rateLimiterDictionary[route];\n\t}\n\n\tprotected async shouldVerifyRateLimit(route: string, userId: string): Promise<boolean> {\n\t\treturn (\n\t\t\trateLimiterDictionary.hasOwnProperty(route) &&\n\t\t\tsettings.get<boolean>('API_Enable_Rate_Limiter') === true &&\n\t\t\t(process.env.NODE_ENV !== 'development' || settings.get<boolean>('API_Enable_Rate_Limiter_Dev') === true) &&\n\t\t\t!(userId && (await hasPermissionAsync(userId, 'api-bypass-rate-limit')))\n\t\t);\n\t}\n\n\tprotected async enforceRateLimit(\n\t\tobjectForRateLimitMatch: RateLimiterOptionsToCheck,\n\t\t_: any,\n\t\tresponse: Response,\n\t\tuserId: string,\n\t): Promise<void> {\n\t\tif (!(await this.shouldVerifyRateLimit(objectForRateLimitMatch.route, userId))) {\n\t\t\treturn;\n\t\t}\n\n\t\trateLimiterDictionary[objectForRateLimitMatch.route].rateLimiter.increment(objectForRateLimitMatch);\n\t\tconst attemptResult = await rateLimiterDictionary[objectForRateLimitMatch.route].rateLimiter.check(objectForRateLimitMatch);\n\t\tconst timeToResetAttempsInSeconds = Math.ceil(attemptResult.timeToReset / 1000);\n\t\tresponse.setHeader('X-RateLimit-Limit', rateLimiterDictionary[objectForRateLimitMatch.route].options.numRequestsAllowed);\n\t\tresponse.setHeader('X-RateLimit-Remaining', attemptResult.numInvocationsLeft);\n\t\tresponse.setHeader('X-RateLimit-Reset', new Date().getTime() + attemptResult.timeToReset);\n\n\t\tif (!attemptResult.allowed) {\n\t\t\tthrow new Meteor.Error(\n\t\t\t\t'error-too-many-requests',\n\t\t\t\t`Error, too many requests. Please slow down. You must wait ${timeToResetAttempsInSeconds} seconds before trying this endpoint again.`,\n\t\t\t\t{\n\t\t\t\t\ttimeToReset: attemptResult.timeToReset,\n\t\t\t\t\tseconds: timeToResetAttempsInSeconds,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic reloadRoutesToRefreshRateLimiter(): void {\n\t\tconst { version } = this._config;\n\t\tthis._routes.forEach((route) => {\n\t\t\tif (this.shouldAddRateLimitToRoute(route.options)) {\n\t\t\t\tthis.addRateLimiterRuleForRoutes({\n\t\t\t\t\troutes: [route.path],\n\t\t\t\t\trateLimiterOptions: route.options.rateLimiterOptions || defaultRateLimiterOptions,\n\t\t\t\t\tendpoints: Object.keys(route.endpoints).filter((endpoint) => endpoint !== 'options'),\n\t\t\t\t\tapiVersion: version,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected addRateLimiterRuleForRoutes({\n\t\troutes,\n\t\trateLimiterOptions,\n\t\tendpoints,\n\t\tapiVersion,\n\t}: {\n\t\troutes: string[];\n\t\trateLimiterOptions: RateLimiterOptions | boolean;\n\t\tendpoints: string[];\n\t\tapiVersion?: string;\n\t}): void {\n\t\tif (typeof rateLimiterOptions !== 'object') {\n\t\t\tthrow new Meteor.Error('\"rateLimiterOptions\" must be an object');\n\t\t}\n\t\tif (!rateLimiterOptions.numRequestsAllowed) {\n\t\t\tthrow new Meteor.Error('You must set \"numRequestsAllowed\" property in rateLimiter for REST API endpoint');\n\t\t}\n\t\tif (!rateLimiterOptions.intervalTimeInMS) {\n\t\t\tthrow new Meteor.Error('You must set \"intervalTimeInMS\" property in rateLimiter for REST API endpoint');\n\t\t}\n\t\tconst addRateLimitRuleToEveryRoute = (routes: string[]) => {\n\t\t\troutes.forEach((route) => {\n\t\t\t\trateLimiterDictionary[route] = {\n\t\t\t\t\trateLimiter: new RateLimiter(),\n\t\t\t\t\toptions: rateLimiterOptions,\n\t\t\t\t};\n\t\t\t\tconst rateLimitRule = {\n\t\t\t\t\tIPAddr: (input: any) => input,\n\t\t\t\t\troute,\n\t\t\t\t};\n\t\t\t\trateLimiterDictionary[route].rateLimiter.addRule(\n\t\t\t\t\trateLimitRule,\n\t\t\t\t\trateLimiterOptions.numRequestsAllowed as number,\n\t\t\t\t\trateLimiterOptions.intervalTimeInMS as number,\n\t\t\t\t);\n\t\t\t});\n\t\t};\n\t\troutes.map((route) => this.namedRoutes(route, endpoints, apiVersion)).map(addRateLimitRuleToEveryRoute);\n\t}\n\n\tpublic async processTwoFactor({\n\t\tuserId,\n\t\trequest,\n\t\tinvocation,\n\t\toptions,\n\t\tconnection,\n\t}: {\n\t\tuserId: string;\n\t\trequest: Request;\n\t\tinvocation: { twoFactorChecked?: boolean };\n\t\toptions?: Options;\n\t\tconnection: IMethodConnection;\n\t}): Promise<void> {\n\t\tif (options && (!('twoFactorRequired' in options) || !options.twoFactorRequired)) {\n\t\t\treturn;\n\t\t}\n\t\tconst code = request.headers['x-2fa-code'];\n\t\tconst method = request.headers['x-2fa-method'];\n\n\t\tawait checkCodeForUser({\n\t\t\tuser: userId,\n\t\t\tcode,\n\t\t\tmethod,\n\t\t\toptions: options && 'twoFactorOptions' in options ? (options as Record<string, any>).twoFactorOptions || {} : {},\n\t\t\tconnection,\n\t\t});\n\n\t\tinvocation.twoFactorChecked = true;\n\t}\n\n\tprotected getFullRouteName(route: string, method: string, apiVersion?: string): string {\n\t\tlet prefix = `/${this.apiPath || ''}`;\n\t\tif (apiVersion) {\n\t\t\tprefix += `${apiVersion}/`;\n\t\t}\n\t\treturn `${prefix}${route}${method}`;\n\t}\n\n\tprotected namedRoutes(route: string, endpoints: Record<string, string> | string[], apiVersion?: string): string[] {\n\t\tconst routeActions: string[] = Array.isArray(endpoints) ? endpoints : Object.keys(endpoints);\n\n\t\treturn routeActions.map((action) => this.getFullRouteName(route, action, apiVersion));\n\t}\n\n\taddRoute<TSubPathPattern extends string>(\n\t\tsubpath: TSubPathPattern,\n\t\toperations: Operations<JoinPathPattern<TBasePath, TSubPathPattern>>,\n\t): void;\n\n\taddRoute<TSubPathPattern extends string, TPathPattern extends JoinPathPattern<TBasePath, TSubPathPattern>>(\n\t\tsubpaths: TSubPathPattern[],\n\t\toperations: Operations<TPathPattern>,\n\t): void;\n\n\taddRoute<TSubPathPattern extends string, TOptions extends Options>(\n\t\tsubpath: TSubPathPattern,\n\t\toptions: TOptions,\n\t\toperations: Operations<JoinPathPattern<TBasePath, TSubPathPattern>, TOptions>,\n\t): void;\n\n\taddRoute<TSubPathPattern extends string, TPathPattern extends JoinPathPattern<TBasePath, TSubPathPattern>, TOptions extends Options>(\n\t\tsubpaths: TSubPathPattern[],\n\t\toptions: TOptions,\n\t\toperations: Operations<TPathPattern, TOptions>,\n\t): void;\n\n\tpublic addRoute<\n\t\tTSubPathPattern extends string,\n\t\tTPathPattern extends JoinPathPattern<TBasePath, TSubPathPattern>,\n\t\tTOptions extends Options,\n\t>(subpaths: TSubPathPattern[], options: TOptions, endpoints?: Operations<TPathPattern, TOptions>): void {\n\t\t// Note: required if the developer didn't provide options\n\t\tif (endpoints === undefined) {\n\t\t\tendpoints = options as unknown as Operations<TPathPattern>;\n\t\t\toptions = {} as TOptions;\n\t\t}\n\n\t\tconst operations = endpoints;\n\n\t\tconst shouldVerifyPermissions = checkPermissions(options);\n\n\t\t// Allow for more than one route using the same option and endpoints\n\t\tif (!Array.isArray(subpaths)) {\n\t\t\tsubpaths = [subpaths];\n\t\t}\n\t\tconst { version } = this._config;\n\t\tif (this.shouldAddRateLimitToRoute(options)) {\n\t\t\tthis.addRateLimiterRuleForRoutes({\n\t\t\t\troutes: subpaths,\n\t\t\t\trateLimiterOptions: options.rateLimiterOptions || defaultRateLimiterOptions,\n\t\t\t\tendpoints: operations as unknown as string[],\n\t\t\t\tapiVersion: version,\n\t\t\t});\n\t\t}\n\t\tsubpaths.forEach((route) => {\n\t\t\t// Note: This is required due to Restivus calling `addRoute` in the constructor of itself\n\t\t\tObject.keys(operations).forEach((method) => {\n\t\t\t\tconst _options = { ...options };\n\n\t\t\t\tif (typeof operations[method as keyof Operations<TPathPattern, TOptions>] === 'function') {\n\t\t\t\t\t(operations as Record<string, any>)[method as string] = {\n\t\t\t\t\t\taction: operations[method as keyof Operations<TPathPattern, TOptions>],\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tconst extraOptions: Record<string, any> = { ...operations[method as keyof Operations<TPathPattern, TOptions>] } as Record<\n\t\t\t\t\t\tstring,\n\t\t\t\t\t\tany\n\t\t\t\t\t>;\n\t\t\t\t\tdelete extraOptions.action;\n\t\t\t\t\tObject.assign(_options, extraOptions);\n\t\t\t\t}\n\t\t\t\t// Add a try/catch for each endpoint\n\t\t\t\tconst originalAction = (operations[method as keyof Operations<TPathPattern, TOptions>] as Record<string, any>).action;\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\t\t\tconst api = this;\n\t\t\t\t(operations[method as keyof Operations<TPathPattern, TOptions>] as Record<string, any>).action =\n\t\t\t\t\tasync function _internalRouteActionHandler() {\n\t\t\t\t\t\tconst rocketchatRestApiEnd = metrics.rocketchatRestApi.startTimer({\n\t\t\t\t\t\t\tmethod,\n\t\t\t\t\t\t\tversion,\n\t\t\t\t\t\t\t...(prometheusAPIUserAgent && { user_agent: this.request.headers['user-agent'] }),\n\t\t\t\t\t\t\tentrypoint: route.startsWith('method.call') ? decodeURIComponent(this.request._parsedUrl.pathname.slice(8)) : route,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.requestIp = getRequestIP(this.request);\n\n\t\t\t\t\t\tconst startTime = Date.now();\n\n\t\t\t\t\t\tconst log = logger.logger.child({\n\t\t\t\t\t\t\tmethod: this.request.method,\n\t\t\t\t\t\t\turl: this.request.url,\n\t\t\t\t\t\t\tuserId: this.request.headers['x-user-id'],\n\t\t\t\t\t\t\tuserAgent: this.request.headers['user-agent'],\n\t\t\t\t\t\t\tlength: this.request.headers['content-length'],\n\t\t\t\t\t\t\thost: this.request.headers.host,\n\t\t\t\t\t\t\treferer: this.request.headers.referer,\n\t\t\t\t\t\t\tremoteIP: this.requestIp,\n\t\t\t\t\t\t\t...getRestPayload(this.request.body),\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// If the endpoint requires authentication only if anonymous read is disabled, load the user info if it was provided\n\t\t\t\t\t\tif (!options.authRequired && options.authOrAnonRequired) {\n\t\t\t\t\t\t\tconst { 'x-user-id': userId, 'x-auth-token': userToken } = this.request.headers;\n\t\t\t\t\t\t\tif (userId && userToken) {\n\t\t\t\t\t\t\t\tthis.user = await Users.findOne(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t'services.resume.loginTokens.hashedToken': Accounts._hashLoginToken(userToken),\n\t\t\t\t\t\t\t\t\t\t'_id': userId,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tprojection: getDefaultUserFields(),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tthis.userId = this.user?._id;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!this.user && !settings.get('Accounts_AllowAnonymousRead')) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tstatusCode: 401,\n\t\t\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\t\t\tstatus: 'error',\n\t\t\t\t\t\t\t\t\t\tmessage: 'You must be logged in to do this.',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst objectForRateLimitMatch = {\n\t\t\t\t\t\t\tIPAddr: this.requestIp,\n\t\t\t\t\t\t\troute: `${this.request.route}${this.request.method.toLowerCase()}`,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlet result;\n\n\t\t\t\t\t\tconst connection = { ...generateConnection(this.requestIp, this.request.headers), token: this.token };\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (options.deprecation) {\n\t\t\t\t\t\t\t\tparseDeprecation(this, options.deprecation);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tawait api.enforceRateLimit(objectForRateLimitMatch, this.request, this.response, this.userId);\n\n\t\t\t\t\t\t\tif (_options.validateParams) {\n\t\t\t\t\t\t\t\tconst requestMethod = this.request.method as Method;\n\t\t\t\t\t\t\t\tconst validatorFunc =\n\t\t\t\t\t\t\t\t\ttypeof _options.validateParams === 'function' ? _options.validateParams : _options.validateParams[requestMethod];\n\n\t\t\t\t\t\t\t\tif (validatorFunc && !validatorFunc(requestMethod === 'GET' ? this.queryParams : this.bodyParams)) {\n\t\t\t\t\t\t\t\t\tthrow new Meteor.Error('invalid-params', validatorFunc.errors?.map((error: any) => error.message).join('\\n '));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tshouldVerifyPermissions &&\n\t\t\t\t\t\t\t\t(!this.userId ||\n\t\t\t\t\t\t\t\t\t!(await checkPermissionsForInvocation(\n\t\t\t\t\t\t\t\t\t\tthis.userId,\n\t\t\t\t\t\t\t\t\t\t_options.permissionsRequired as PermissionsPayload,\n\t\t\t\t\t\t\t\t\t\tthis.request.method,\n\t\t\t\t\t\t\t\t\t)))\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthrow new Meteor.Error('error-unauthorized', 'User does not have the permissions required for this action', {\n\t\t\t\t\t\t\t\t\tpermissions: _options.permissionsRequired,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst invocation = new DDPCommon.MethodInvocation({\n\t\t\t\t\t\t\t\tconnection,\n\t\t\t\t\t\t\t\tisSimulation: false,\n\t\t\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tAccounts._accountData[connection.id] = {\n\t\t\t\t\t\t\t\tconnection,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tAccounts._setAccountData(connection.id, 'loginToken', this.token);\n\n\t\t\t\t\t\t\tawait api.processTwoFactor({\n\t\t\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\t\t\trequest: this.request,\n\t\t\t\t\t\t\t\tinvocation: invocation as unknown as Record<string, any>,\n\t\t\t\t\t\t\t\toptions: _options,\n\t\t\t\t\t\t\t\tconnection: connection as unknown as IMethodConnection,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tthis.queryOperations = options.queryOperations;\n\t\t\t\t\t\t\tthis.queryFields = options.queryFields;\n\t\t\t\t\t\t\tthis.parseJsonQuery = api.parseJsonQuery.bind(this as PartialThis);\n\n\t\t\t\t\t\t\tresult =\n\t\t\t\t\t\t\t\t(await DDP._CurrentInvocation.withValue(invocation as any, async () => originalAction.apply(this))) || API.v1.success();\n\n\t\t\t\t\t\t\tlog.http({\n\t\t\t\t\t\t\t\tstatus: result.statusCode,\n\t\t\t\t\t\t\t\tresponseTime: Date.now() - startTime,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (e: any) {\n\t\t\t\t\t\t\tconst apiMethod: string =\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'error-too-many-requests': 'tooManyRequests',\n\t\t\t\t\t\t\t\t\t'error-unauthorized': 'unauthorized',\n\t\t\t\t\t\t\t\t}[e.error as string] || 'failure';\n\n\t\t\t\t\t\t\tresult = (API.v1 as Record<string, any>)[apiMethod](\n\t\t\t\t\t\t\t\ttypeof e === 'string' ? e : e.message,\n\t\t\t\t\t\t\t\te.error,\n\t\t\t\t\t\t\t\tprocess.env.TEST_MODE ? e.stack : undefined,\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tlog.http({\n\t\t\t\t\t\t\t\terr: e,\n\t\t\t\t\t\t\t\tstatus: result.statusCode,\n\t\t\t\t\t\t\t\tresponseTime: Date.now() - startTime,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tdelete Accounts._accountData[connection.id];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trocketchatRestApiEnd({\n\t\t\t\t\t\t\tstatus: result.statusCode,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t};\n\n\t\t\t\t// Allow the endpoints to make usage of the logger which respects the user's settings\n\t\t\t\t(operations[method as keyof Operations<TPathPattern, TOptions>] as Record<string, any>).logger = logger;\n\t\t\t});\n\n\t\t\tsuper.addRoute(route, options, operations);\n\t\t});\n\t}\n\n\tpublic updateRateLimiterDictionaryForRoute(route: string, numRequestsAllowed: number, intervalTimeInMS?: number): void {\n\t\tif (rateLimiterDictionary[route]) {\n\t\t\trateLimiterDictionary[route].options.numRequestsAllowed =\n\t\t\t\tnumRequestsAllowed ?? rateLimiterDictionary[route].options.numRequestsAllowed;\n\t\t\trateLimiterDictionary[route].options.intervalTimeInMS = intervalTimeInMS ?? rateLimiterDictionary[route].options.intervalTimeInMS;\n\t\t\tAPI.v1?.reloadRoutesToRefreshRateLimiter();\n\t\t}\n\t}\n\n\tprotected _initAuth(): void {\n\t\tconst loginCompatibility = (bodyParams: Record<string, any>, request: Request): Record<string, any> => {\n\t\t\t// Grab the username or email that the user is logging in with\n\t\t\tconst { user, username, email, password, code: bodyCode } = bodyParams;\n\t\t\tlet usernameToLDAPLogin = '';\n\n\t\t\tif (password == null) {\n\t\t\t\treturn bodyParams;\n\t\t\t}\n\n\t\t\tif (_.without(Object.keys(bodyParams), 'user', 'username', 'email', 'password', 'code').length > 0) {\n\t\t\t\treturn bodyParams;\n\t\t\t}\n\n\t\t\tconst code = bodyCode || request.headers['x-2fa-code'];\n\n\t\t\tconst auth: Record<string, any> = {\n\t\t\t\tpassword,\n\t\t\t};\n\n\t\t\tif (typeof user === 'string') {\n\t\t\t\tauth.user = user.includes('@') ? { email: user } : { username: user };\n\t\t\t\tusernameToLDAPLogin = user;\n\t\t\t} else if (username) {\n\t\t\t\tauth.user = { username };\n\t\t\t\tusernameToLDAPLogin = username;\n\t\t\t} else if (email) {\n\t\t\t\tauth.user = { email };\n\t\t\t\tusernameToLDAPLogin = email;\n\t\t\t}\n\n\t\t\tif (auth.user == null) {\n\t\t\t\treturn bodyParams;\n\t\t\t}\n\n\t\t\tif (auth.password.hashed) {\n\t\t\t\tauth.password = {\n\t\t\t\t\tdigest: auth.password as { hashed: string },\n\t\t\t\t\talgorithm: 'sha-256',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst objectToLDAPLogin = {\n\t\t\t\tldap: true,\n\t\t\t\tusername: usernameToLDAPLogin,\n\t\t\t\tldapPass: auth.password,\n\t\t\t\tldapOptions: {},\n\t\t\t};\n\t\t\tif (settings.get<boolean>('LDAP_Enable') && !code) {\n\t\t\t\treturn objectToLDAPLogin;\n\t\t\t}\n\n\t\t\tif (code) {\n\t\t\t\treturn {\n\t\t\t\t\ttotp: {\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tlogin: settings.get('LDAP_Enable') ? objectToLDAPLogin : auth,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn auth;\n\t\t};\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\n\t\t(this as APIClass<'/v1'>).addRoute<'/v1/login', { authRequired: false }>(\n\t\t\t'login' as any,\n\t\t\t{ authRequired: false },\n\t\t\t{\n\t\t\t\tasync post() {\n\t\t\t\t\tconst request = this.request as unknown as Request;\n\t\t\t\t\tconst args = loginCompatibility(this.bodyParams, request);\n\n\t\t\t\t\tconst invocation = new DDPCommon.MethodInvocation({\n\t\t\t\t\t\tconnection: generateConnection(getRequestIP(request) || '', this.request.headers),\n\t\t\t\t\t});\n\n\t\t\t\t\tlet auth;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tauth = await DDP._CurrentInvocation.withValue(invocation as any, async () => Meteor.callAsync('login', args));\n\t\t\t\t\t} catch (error: any) {\n\t\t\t\t\t\tlet e = error;\n\t\t\t\t\t\tif (error.reason === 'User not found') {\n\t\t\t\t\t\t\te = {\n\t\t\t\t\t\t\t\terror: 'Unauthorized',\n\t\t\t\t\t\t\t\treason: 'Unauthorized',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstatusCode: 401,\n\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\tstatus: 'error',\n\t\t\t\t\t\t\t\terror: e.error,\n\t\t\t\t\t\t\t\tdetails: e.details,\n\t\t\t\t\t\t\t\tmessage: e.reason || e.message,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t} as unknown as SuccessResult<Record<string, any>>;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.user = await Users.findOne(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_id: auth.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprojection: getDefaultUserFields(),\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.userId = (this.user as unknown as IUser)?._id;\n\n\t\t\t\t\tconst response = {\n\t\t\t\t\t\tstatus: 'success',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\t\t\tauthToken: auth.token,\n\t\t\t\t\t\t\tme: await getUserInfo(this.user || ({} as IUser)),\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tconst extraData = self._config.onLoggedIn?.call(this);\n\n\t\t\t\t\tif (extraData != null) {\n\t\t\t\t\t\t_.extend(response.data, {\n\t\t\t\t\t\t\textra: extraData,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn response as unknown as SuccessResult<Record<string, any>>;\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tconst logout = async function (this: Restivus): Promise<{ status: string; data: { message: string } }> {\n\t\t\t// Remove the given auth token from the user's account\n\t\t\tconst authToken = this.request.headers['x-auth-token'];\n\t\t\tconst hashedToken = Accounts._hashLoginToken(authToken);\n\t\t\tconst tokenLocation = self._config?.auth?.token;\n\t\t\tconst index = tokenLocation?.lastIndexOf('.') || 0;\n\t\t\tconst tokenPath = tokenLocation?.substring(0, index) || '';\n\t\t\tconst tokenFieldName = tokenLocation?.substring(index + 1) || '';\n\t\t\tconst tokenToRemove: Record<string, any> = {};\n\t\t\ttokenToRemove[tokenFieldName] = hashedToken;\n\t\t\tconst tokenRemovalQuery: Record<string, any> = {};\n\t\t\ttokenRemovalQuery[tokenPath] = tokenToRemove;\n\n\t\t\tawait Users.updateOne(\n\t\t\t\t{ _id: this.user._id },\n\t\t\t\t{\n\t\t\t\t\t$pull: tokenRemovalQuery,\n\t\t\t\t},\n\t\t\t);\n\n\t\t\t// TODO this can be optmized so places that care about loginTokens being removed are invoked directly\n\t\t\t// instead of having to listen to every watch.users event\n\t\t\tvoid notifyOnUserChangeAsync(async () => {\n\t\t\t\tconst userTokens = await Users.findOneById(this.user._id, { projection: { [tokenPath]: 1 } });\n\t\t\t\tif (!userTokens) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst diff = { [tokenPath]: getNestedProp(userTokens, tokenPath) };\n\n\t\t\t\treturn { clientAction: 'updated', id: this.user._id, diff };\n\t\t\t});\n\n\t\t\tconst response = {\n\t\t\t\tstatus: 'success',\n\t\t\t\tdata: {\n\t\t\t\t\tmessage: \"You've been logged out!\",\n\t\t\t\t},\n\t\t\t};\n\n\t\t\t// Call the logout hook with the authenticated user attached\n\t\t\tconst extraData = self._config.onLoggedOut?.call(this);\n\t\t\tif (extraData != null) {\n\t\t\t\t_.extend(response.data, {\n\t\t\t\t\textra: extraData,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn response;\n\t\t};\n\n\t\t/*\n\t\t\tAdd a logout endpoint to the API\n\t\t\tAfter the user is logged out, the onLoggedOut hook is called (see Restfully.configure() for\n\t\t\tadding hook).\n\t\t*/\n\t\treturn (this as APIClass<'/v1'>).addRoute<'/v1/logout', { authRequired: true }>(\n\t\t\t'logout' as any,\n\t\t\t{\n\t\t\t\tauthRequired: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tasync get() {\n\t\t\t\t\tconsole.warn('Warning: Default logout via GET will be removed in Restivus v1.0. Use POST instead.');\n\t\t\t\t\tconsole.warn('    See https://github.com/kahmali/meteor-restivus/issues/100');\n\t\t\t\t\treturn logout.call(this as unknown as Restivus) as any;\n\t\t\t\t},\n\t\t\t\tasync post() {\n\t\t\t\t\treturn logout.call(this as unknown as Restivus) as any;\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n\nconst getUserAuth = function _getUserAuth(...args: any[]): {\n\ttoken: string;\n\tuser: (this: Restivus) => Promise<{ userId: string; token: string }>;\n} {\n\tconst invalidResults = [undefined, null, false];\n\treturn {\n\t\ttoken: 'services.resume.loginTokens.hashedToken',\n\t\tasync user() {\n\t\t\tif (this.bodyParams?.payload) {\n\t\t\t\tthis.bodyParams = JSON.parse(this.bodyParams.payload);\n\t\t\t}\n\n\t\t\tfor await (const method of API.v1?.authMethods || []) {\n\t\t\t\tif (typeof method === 'function') {\n\t\t\t\t\tconst result = await method.apply(this, args);\n\t\t\t\t\tif (!invalidResults.includes(result)) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet token;\n\t\t\tif (this.request.headers['x-auth-token']) {\n\t\t\t\ttoken = Accounts._hashLoginToken(this.request.headers['x-auth-token']);\n\t\t\t}\n\n\t\t\tthis.token = token || '';\n\n\t\t\treturn {\n\t\t\t\tuserId: this.request.headers['x-user-id'],\n\t\t\t\ttoken,\n\t\t\t};\n\t\t},\n\t};\n};\n\nconst defaultOptionsEndpoint = async function _defaultOptionsEndpoint(this: Restivus): Promise<void> {\n\t// check if a pre-flight request\n\tif (!this.request.headers['access-control-request-method'] && !this.request.headers.origin) {\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tif (!settings.get('API_Enable_CORS')) {\n\t\tthis.response.writeHead(405);\n\t\tthis.response.write('CORS not enabled. Go to \"Admin > General > REST Api\" to enable it.');\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tconst CORSOriginSetting = String(settings.get('API_CORS_Origin'));\n\n\tconst defaultHeaders = {\n\t\t'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, HEAD, PATCH',\n\t\t'Access-Control-Allow-Headers':\n\t\t\t'Origin, X-Requested-With, Content-Type, Accept, X-User-Id, X-Auth-Token, x-visitor-token, Authorization',\n\t};\n\n\tif (CORSOriginSetting === '*') {\n\t\tthis.response.writeHead(200, {\n\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t...defaultHeaders,\n\t\t});\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tconst origins = CORSOriginSetting.trim()\n\t\t.split(',')\n\t\t.map((origin) => String(origin).trim().toLocaleLowerCase());\n\n\t// if invalid origin reply without required CORS headers\n\tif (!origins.includes(this.request.headers.origin)) {\n\t\tthis.done();\n\t\treturn;\n\t}\n\n\tthis.response.writeHead(200, {\n\t\t'Access-Control-Allow-Origin': this.request.headers.origin,\n\t\t'Vary': 'Origin',\n\t\t...defaultHeaders,\n\t});\n\tthis.done();\n};\n\nconst createApi = function _createApi(options: { version?: string } = {}): APIClass {\n\treturn new APIClass(\n\t\tObject.assign(\n\t\t\t{\n\t\t\t\tapiPath: 'api/',\n\t\t\t\tuseDefaultAuth: true,\n\t\t\t\tprettyJson: process.env.NODE_ENV === 'development',\n\t\t\t\tdefaultOptionsEndpoint,\n\t\t\t\tauth: getUserAuth(),\n\t\t\t},\n\t\t\toptions,\n\t\t) as IAPIProperties,\n\t);\n};\n\nexport const API: {\n\tv1: APIClass<'/v1'>;\n\tdefault: APIClass;\n\tgetUserAuth: () => { token: string; user: (this: Restivus) => Promise<{ userId: string; token: string }> };\n\tApiClass: typeof APIClass;\n\tchannels?: {\n\t\tcreate: {\n\t\t\tvalidate: (params: {\n\t\t\t\tuser: { value: string };\n\t\t\t\tname?: { key: string; value?: string };\n\t\t\t\tmembers?: { key: string; value?: string[] };\n\t\t\t\tcustomFields?: { key: string; value?: string };\n\t\t\t\tteams?: { key: string; value?: string[] };\n\t\t\t\tteamId?: { key: string; value?: string };\n\t\t\t}) => Promise<void>;\n\t\t\texecute: (\n\t\t\t\tuserId: string,\n\t\t\t\tparams: {\n\t\t\t\t\tname?: string;\n\t\t\t\t\tmembers?: string[];\n\t\t\t\t\tcustomFields?: Record<string, any>;\n\t\t\t\t\textraData?: Record<string, any>;\n\t\t\t\t\treadOnly?: boolean;\n\t\t\t\t},\n\t\t\t) => Promise<{ channel: IRoom }>;\n\t\t};\n\t};\n} = {\n\tgetUserAuth,\n\tApiClass: APIClass,\n\tv1: createApi({\n\t\tversion: 'v1',\n\t}),\n\tdefault: createApi(),\n};\n\n// register the API to be re-created once the CORS-setting changes.\nsettings.watchMultiple(['API_Enable_CORS', 'API_CORS_Origin'], () => {\n\tAPI.v1 = createApi({\n\t\tversion: 'v1',\n\t});\n\n\tAPI.default = createApi();\n});\n\nsettings.watch<string>('Accounts_CustomFields', (value) => {\n\tif (!value) {\n\t\treturn API.v1?.setLimitedCustomFields([]);\n\t}\n\ttry {\n\t\tconst customFields = JSON.parse(value);\n\t\tconst nonPublicCustomFields = Object.keys(customFields).filter((customFieldKey) => customFields[customFieldKey].public !== true);\n\t\tAPI.v1.setLimitedCustomFields(nonPublicCustomFields);\n\t} catch (error) {\n\t\tconsole.warn('Invalid Custom Fields', error);\n\t}\n});\n\nsettings.watch<number>('API_Enable_Rate_Limiter_Limit_Time_Default', (value) => {\n\tdefaultRateLimiterOptions.intervalTimeInMS = value;\n\tAPI.v1.reloadRoutesToRefreshRateLimiter();\n});\n\nsettings.watch<number>('API_Enable_Rate_Limiter_Limit_Calls_Default', (value) => {\n\tdefaultRateLimiterOptions.numRequestsAllowed = value;\n\tAPI.v1.reloadRoutesToRefreshRateLimiter();\n});\n\nsettings.watch<boolean>('Prometheus_API_User_Agent', (value) => {\n\tprometheusAPIUserAgent = value;\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e1b3ee704b74de4bf0e8c9bef1ae06502c0a3c1f"}
