{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/AbstractFederationApplicationService.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/application/AbstractFederationApplicationService.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/AbstractFederationApplicationService.ts","inputSourceMap":{"version":3,"file":"server/services/federation/application/AbstractFederationApplicationService.ts","sourceRoot":"","sources":["server/services/federation/application/AbstractFederationApplicationService.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\n\nimport { FederatedUser } from '../domain/FederatedUser';\nimport type { IFederationBridge } from '../domain/IFederationBridge';\nimport type { RocketChatFileAdapter } from '../infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatSettingsAdapter } from '../infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from '../infrastructure/rocket-chat/adapters/User';\n\nexport abstract class AbstractFederationApplicationService {\n\tprotected internalHomeServerDomain: string;\n\n\tconstructor(\n\t\tprotected bridge: IFederationBridge,\n\t\tprotected internalUserAdapter: RocketChatUserAdapter,\n\t\tprotected internalFileAdapter: RocketChatFileAdapter,\n\t\tprotected internalSettingsAdapter: RocketChatSettingsAdapter,\n\t) {\n\t\tthis.internalHomeServerDomain = this.internalSettingsAdapter.getHomeServerDomain();\n\t}\n\n\tprotected async createFederatedUserInternallyOnly(\n\t\texternalUserId: string,\n\t\tusername: string,\n\t\texistsOnlyOnProxyServer = false,\n\t\tprovidedName?: string,\n\t): Promise<void> {\n\t\tconst internalUser = await this.internalUserAdapter.getInternalUserByUsername(username);\n\t\tconst externalUserProfileInformation = await this.bridge.getUserProfileInformation(externalUserId);\n\t\tlet federatedUser;\n\t\tif (internalUser) {\n\t\t\tfederatedUser = FederatedUser.createWithInternalReference(externalUserId, existsOnlyOnProxyServer, internalUser);\n\t\t} else {\n\t\t\tconst name = externalUserProfileInformation?.displayName || providedName || username;\n\t\t\tfederatedUser = FederatedUser.createInstance(externalUserId, {\n\t\t\t\tname,\n\t\t\t\tusername,\n\t\t\t\texistsOnlyOnProxyServer,\n\t\t\t});\n\t\t}\n\t\tawait this.internalUserAdapter.createFederatedUser(federatedUser);\n\t\tconst insertedUser = await this.internalUserAdapter.getFederatedUserByExternalId(externalUserId);\n\t\tif (!insertedUser) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.updateUserAvatarInternally(insertedUser, externalUserProfileInformation?.avatarUrl);\n\t\tawait this.updateUserDisplayNameInternally(insertedUser, externalUserProfileInformation?.displayName);\n\t}\n\n\tprotected async updateUserAvatarInternally(federatedUser: FederatedUser, avatarUrl?: string): Promise<void> {\n\t\tif (!avatarUrl) {\n\t\t\treturn;\n\t\t}\n\t\tif (!federatedUser.isRemote()) {\n\t\t\treturn;\n\t\t}\n\t\tif (federatedUser.shouldUpdateFederationAvatar(avatarUrl)) {\n\t\t\tawait this.internalUserAdapter.setAvatar(federatedUser, this.bridge.convertMatrixUrlToHttp(federatedUser.getExternalId(), avatarUrl));\n\t\t\tawait this.internalUserAdapter.updateFederationAvatar(federatedUser.getInternalId(), avatarUrl);\n\t\t}\n\t}\n\n\tprotected async updateUserDisplayNameInternally(federatedUser: FederatedUser, displayName?: string): Promise<void> {\n\t\tif (!displayName) {\n\t\t\treturn;\n\t\t}\n\t\tif (!federatedUser.isRemote()) {\n\t\t\treturn;\n\t\t}\n\t\tif (federatedUser.shouldUpdateDisplayName(displayName)) {\n\t\t\tawait this.internalUserAdapter.updateRealName(federatedUser.getInternalReference(), displayName);\n\t\t}\n\t}\n\n\tprotected async createFederatedUserIncludingHomeserverUsingLocalInformation(internalInviterId: string): Promise<string> {\n\t\tconst internalUser = await this.internalUserAdapter.getInternalUserById(internalInviterId);\n\t\tif (!internalUser || !internalUser?.username) {\n\t\t\tthrow new Error(`Could not find user id for ${internalInviterId}`);\n\t\t}\n\t\tconst name = internalUser.name || internalUser.username;\n\t\tconst externalInviterId = await this.bridge.createUser(internalUser.username, name, this.internalHomeServerDomain);\n\t\tconst existsOnlyOnProxyServer = true;\n\t\tawait this.createFederatedUserInternallyOnly(externalInviterId, internalUser.username, existsOnlyOnProxyServer, name);\n\t\tawait this.updateUserAvatarExternally(\n\t\t\tinternalUser,\n\t\t\t(await this.internalUserAdapter.getFederatedUserByExternalId(externalInviterId)) as FederatedUser,\n\t\t);\n\n\t\treturn externalInviterId;\n\t}\n\n\tprotected async updateUserAvatarExternally(internalUser: IUser, externalInviter: FederatedUser): Promise<void> {\n\t\tif (!internalUser.username) {\n\t\t\treturn;\n\t\t}\n\t\tconst buffer = await this.internalFileAdapter.getBufferForAvatarFile(internalUser.username);\n\t\tif (!buffer) {\n\t\t\treturn;\n\t\t}\n\t\tconst avatarFileRecord = await this.internalFileAdapter.getFileMetadataForAvatarFile(internalUser.username);\n\t\tif (!avatarFileRecord?.type || !avatarFileRecord?.name) {\n\t\t\treturn;\n\t\t}\n\t\tconst externalFileUri = await this.bridge.uploadContent(externalInviter.getExternalId(), buffer, {\n\t\t\ttype: avatarFileRecord.type,\n\t\t\tname: avatarFileRecord.name,\n\t\t});\n\t\tif (!externalFileUri) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.internalUserAdapter.updateFederationAvatar(internalUser._id, externalFileUri);\n\t\tawait this.bridge.setUserAvatar(externalInviter.getExternalId(), externalFileUri);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/AbstractFederationApplicationService.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/application/AbstractFederationApplicationService.ts","inputSourceMap":{"version":3,"file":"server/services/federation/application/AbstractFederationApplicationService.ts","sourceRoot":"","sources":["server/services/federation/application/AbstractFederationApplicationService.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\n\nimport { FederatedUser } from '../domain/FederatedUser';\nimport type { IFederationBridge } from '../domain/IFederationBridge';\nimport type { RocketChatFileAdapter } from '../infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatSettingsAdapter } from '../infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from '../infrastructure/rocket-chat/adapters/User';\n\nexport abstract class AbstractFederationApplicationService {\n\tprotected internalHomeServerDomain: string;\n\n\tconstructor(\n\t\tprotected bridge: IFederationBridge,\n\t\tprotected internalUserAdapter: RocketChatUserAdapter,\n\t\tprotected internalFileAdapter: RocketChatFileAdapter,\n\t\tprotected internalSettingsAdapter: RocketChatSettingsAdapter,\n\t) {\n\t\tthis.internalHomeServerDomain = this.internalSettingsAdapter.getHomeServerDomain();\n\t}\n\n\tprotected async createFederatedUserInternallyOnly(\n\t\texternalUserId: string,\n\t\tusername: string,\n\t\texistsOnlyOnProxyServer = false,\n\t\tprovidedName?: string,\n\t): Promise<void> {\n\t\tconst internalUser = await this.internalUserAdapter.getInternalUserByUsername(username);\n\t\tconst externalUserProfileInformation = await this.bridge.getUserProfileInformation(externalUserId);\n\t\tlet federatedUser;\n\t\tif (internalUser) {\n\t\t\tfederatedUser = FederatedUser.createWithInternalReference(externalUserId, existsOnlyOnProxyServer, internalUser);\n\t\t} else {\n\t\t\tconst name = externalUserProfileInformation?.displayName || providedName || username;\n\t\t\tfederatedUser = FederatedUser.createInstance(externalUserId, {\n\t\t\t\tname,\n\t\t\t\tusername,\n\t\t\t\texistsOnlyOnProxyServer,\n\t\t\t});\n\t\t}\n\t\tawait this.internalUserAdapter.createFederatedUser(federatedUser);\n\t\tconst insertedUser = await this.internalUserAdapter.getFederatedUserByExternalId(externalUserId);\n\t\tif (!insertedUser) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.updateUserAvatarInternally(insertedUser, externalUserProfileInformation?.avatarUrl);\n\t\tawait this.updateUserDisplayNameInternally(insertedUser, externalUserProfileInformation?.displayName);\n\t}\n\n\tprotected async updateUserAvatarInternally(federatedUser: FederatedUser, avatarUrl?: string): Promise<void> {\n\t\tif (!avatarUrl) {\n\t\t\treturn;\n\t\t}\n\t\tif (!federatedUser.isRemote()) {\n\t\t\treturn;\n\t\t}\n\t\tif (federatedUser.shouldUpdateFederationAvatar(avatarUrl)) {\n\t\t\tawait this.internalUserAdapter.setAvatar(federatedUser, this.bridge.convertMatrixUrlToHttp(federatedUser.getExternalId(), avatarUrl));\n\t\t\tawait this.internalUserAdapter.updateFederationAvatar(federatedUser.getInternalId(), avatarUrl);\n\t\t}\n\t}\n\n\tprotected async updateUserDisplayNameInternally(federatedUser: FederatedUser, displayName?: string): Promise<void> {\n\t\tif (!displayName) {\n\t\t\treturn;\n\t\t}\n\t\tif (!federatedUser.isRemote()) {\n\t\t\treturn;\n\t\t}\n\t\tif (federatedUser.shouldUpdateDisplayName(displayName)) {\n\t\t\tawait this.internalUserAdapter.updateRealName(federatedUser.getInternalReference(), displayName);\n\t\t}\n\t}\n\n\tprotected async createFederatedUserIncludingHomeserverUsingLocalInformation(internalInviterId: string): Promise<string> {\n\t\tconst internalUser = await this.internalUserAdapter.getInternalUserById(internalInviterId);\n\t\tif (!internalUser || !internalUser?.username) {\n\t\t\tthrow new Error(`Could not find user id for ${internalInviterId}`);\n\t\t}\n\t\tconst name = internalUser.name || internalUser.username;\n\t\tconst externalInviterId = await this.bridge.createUser(internalUser.username, name, this.internalHomeServerDomain);\n\t\tconst existsOnlyOnProxyServer = true;\n\t\tawait this.createFederatedUserInternallyOnly(externalInviterId, internalUser.username, existsOnlyOnProxyServer, name);\n\t\tawait this.updateUserAvatarExternally(\n\t\t\tinternalUser,\n\t\t\t(await this.internalUserAdapter.getFederatedUserByExternalId(externalInviterId)) as FederatedUser,\n\t\t);\n\n\t\treturn externalInviterId;\n\t}\n\n\tprotected async updateUserAvatarExternally(internalUser: IUser, externalInviter: FederatedUser): Promise<void> {\n\t\tif (!internalUser.username) {\n\t\t\treturn;\n\t\t}\n\t\tconst buffer = await this.internalFileAdapter.getBufferForAvatarFile(internalUser.username);\n\t\tif (!buffer) {\n\t\t\treturn;\n\t\t}\n\t\tconst avatarFileRecord = await this.internalFileAdapter.getFileMetadataForAvatarFile(internalUser.username);\n\t\tif (!avatarFileRecord?.type || !avatarFileRecord?.name) {\n\t\t\treturn;\n\t\t}\n\t\tconst externalFileUri = await this.bridge.uploadContent(externalInviter.getExternalId(), buffer, {\n\t\t\ttype: avatarFileRecord.type,\n\t\t\tname: avatarFileRecord.name,\n\t\t});\n\t\tif (!externalFileUri) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.internalUserAdapter.updateFederationAvatar(internalUser._id, externalFileUri);\n\t\tawait this.bridge.setUserAvatar(externalInviter.getExternalId(), externalFileUri);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      AbstractFederationApplicationService: () => AbstractFederationApplicationService\n    });\n    let FederatedUser;\n    module.link(\"../domain/FederatedUser\", {\n      FederatedUser(v) {\n        FederatedUser = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AbstractFederationApplicationService {\n      constructor(bridge, internalUserAdapter, internalFileAdapter, internalSettingsAdapter) {\n        this.bridge = void 0;\n        this.internalUserAdapter = void 0;\n        this.internalFileAdapter = void 0;\n        this.internalSettingsAdapter = void 0;\n        this.internalHomeServerDomain = void 0;\n        this.bridge = bridge;\n        this.internalUserAdapter = internalUserAdapter;\n        this.internalFileAdapter = internalFileAdapter;\n        this.internalSettingsAdapter = internalSettingsAdapter;\n        this.internalHomeServerDomain = this.internalSettingsAdapter.getHomeServerDomain();\n      }\n      async createFederatedUserInternallyOnly(externalUserId, username) {\n        let existsOnlyOnProxyServer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        let providedName = arguments.length > 3 ? arguments[3] : undefined;\n        const internalUser = await this.internalUserAdapter.getInternalUserByUsername(username);\n        const externalUserProfileInformation = await this.bridge.getUserProfileInformation(externalUserId);\n        let federatedUser;\n        if (internalUser) {\n          federatedUser = FederatedUser.createWithInternalReference(externalUserId, existsOnlyOnProxyServer, internalUser);\n        } else {\n          const name = (externalUserProfileInformation === null || externalUserProfileInformation === void 0 ? void 0 : externalUserProfileInformation.displayName) || providedName || username;\n          federatedUser = FederatedUser.createInstance(externalUserId, {\n            name,\n            username,\n            existsOnlyOnProxyServer\n          });\n        }\n        await this.internalUserAdapter.createFederatedUser(federatedUser);\n        const insertedUser = await this.internalUserAdapter.getFederatedUserByExternalId(externalUserId);\n        if (!insertedUser) {\n          return;\n        }\n        await this.updateUserAvatarInternally(insertedUser, externalUserProfileInformation === null || externalUserProfileInformation === void 0 ? void 0 : externalUserProfileInformation.avatarUrl);\n        await this.updateUserDisplayNameInternally(insertedUser, externalUserProfileInformation === null || externalUserProfileInformation === void 0 ? void 0 : externalUserProfileInformation.displayName);\n      }\n      async updateUserAvatarInternally(federatedUser, avatarUrl) {\n        if (!avatarUrl) {\n          return;\n        }\n        if (!federatedUser.isRemote()) {\n          return;\n        }\n        if (federatedUser.shouldUpdateFederationAvatar(avatarUrl)) {\n          await this.internalUserAdapter.setAvatar(federatedUser, this.bridge.convertMatrixUrlToHttp(federatedUser.getExternalId(), avatarUrl));\n          await this.internalUserAdapter.updateFederationAvatar(federatedUser.getInternalId(), avatarUrl);\n        }\n      }\n      async updateUserDisplayNameInternally(federatedUser, displayName) {\n        if (!displayName) {\n          return;\n        }\n        if (!federatedUser.isRemote()) {\n          return;\n        }\n        if (federatedUser.shouldUpdateDisplayName(displayName)) {\n          await this.internalUserAdapter.updateRealName(federatedUser.getInternalReference(), displayName);\n        }\n      }\n      async createFederatedUserIncludingHomeserverUsingLocalInformation(internalInviterId) {\n        const internalUser = await this.internalUserAdapter.getInternalUserById(internalInviterId);\n        if (!internalUser || !(internalUser !== null && internalUser !== void 0 && internalUser.username)) {\n          throw new Error(\"Could not find user id for \".concat(internalInviterId));\n        }\n        const name = internalUser.name || internalUser.username;\n        const externalInviterId = await this.bridge.createUser(internalUser.username, name, this.internalHomeServerDomain);\n        const existsOnlyOnProxyServer = true;\n        await this.createFederatedUserInternallyOnly(externalInviterId, internalUser.username, existsOnlyOnProxyServer, name);\n        await this.updateUserAvatarExternally(internalUser, await this.internalUserAdapter.getFederatedUserByExternalId(externalInviterId));\n        return externalInviterId;\n      }\n      async updateUserAvatarExternally(internalUser, externalInviter) {\n        if (!internalUser.username) {\n          return;\n        }\n        const buffer = await this.internalFileAdapter.getBufferForAvatarFile(internalUser.username);\n        if (!buffer) {\n          return;\n        }\n        const avatarFileRecord = await this.internalFileAdapter.getFileMetadataForAvatarFile(internalUser.username);\n        if (!(avatarFileRecord !== null && avatarFileRecord !== void 0 && avatarFileRecord.type) || !(avatarFileRecord !== null && avatarFileRecord !== void 0 && avatarFileRecord.name)) {\n          return;\n        }\n        const externalFileUri = await this.bridge.uploadContent(externalInviter.getExternalId(), buffer, {\n          type: avatarFileRecord.type,\n          name: avatarFileRecord.name\n        });\n        if (!externalFileUri) {\n          return;\n        }\n        await this.internalUserAdapter.updateFederationAvatar(internalUser._id, externalFileUri);\n        await this.bridge.setUserAvatar(externalInviter.getExternalId(), externalFileUri);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","AbstractFederationApplicationService","FederatedUser","link","v","__reifyWaitForDeps__","constructor","bridge","internalUserAdapter","internalFileAdapter","internalSettingsAdapter","internalHomeServerDomain","getHomeServerDomain","createFederatedUserInternallyOnly","externalUserId","username","existsOnlyOnProxyServer","arguments","length","undefined","providedName","internalUser","getInternalUserByUsername","externalUserProfileInformation","getUserProfileInformation","federatedUser","createWithInternalReference","name","displayName","createInstance","createFederatedUser","insertedUser","getFederatedUserByExternalId","updateUserAvatarInternally","avatarUrl","updateUserDisplayNameInternally","isRemote","shouldUpdateFederationAvatar","setAvatar","convertMatrixUrlToHttp","getExternalId","updateFederationAvatar","getInternalId","shouldUpdateDisplayName","updateRealName","getInternalReference","createFederatedUserIncludingHomeserverUsingLocalInformation","internalInviterId","getInternalUserById","Error","concat","externalInviterId","createUser","updateUserAvatarExternally","externalInviter","buffer","getBufferForAvatarFile","avatarFileRecord","getFileMetadataForAvatarFile","type","externalFileUri","uploadContent","_id","setUserAvatar","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/federation/application/AbstractFederationApplicationService.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\n\nimport { FederatedUser } from '../domain/FederatedUser';\nimport type { IFederationBridge } from '../domain/IFederationBridge';\nimport type { RocketChatFileAdapter } from '../infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatSettingsAdapter } from '../infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from '../infrastructure/rocket-chat/adapters/User';\n\nexport abstract class AbstractFederationApplicationService {\n\tprotected internalHomeServerDomain: string;\n\n\tconstructor(\n\t\tprotected bridge: IFederationBridge,\n\t\tprotected internalUserAdapter: RocketChatUserAdapter,\n\t\tprotected internalFileAdapter: RocketChatFileAdapter,\n\t\tprotected internalSettingsAdapter: RocketChatSettingsAdapter,\n\t) {\n\t\tthis.internalHomeServerDomain = this.internalSettingsAdapter.getHomeServerDomain();\n\t}\n\n\tprotected async createFederatedUserInternallyOnly(\n\t\texternalUserId: string,\n\t\tusername: string,\n\t\texistsOnlyOnProxyServer = false,\n\t\tprovidedName?: string,\n\t): Promise<void> {\n\t\tconst internalUser = await this.internalUserAdapter.getInternalUserByUsername(username);\n\t\tconst externalUserProfileInformation = await this.bridge.getUserProfileInformation(externalUserId);\n\t\tlet federatedUser;\n\t\tif (internalUser) {\n\t\t\tfederatedUser = FederatedUser.createWithInternalReference(externalUserId, existsOnlyOnProxyServer, internalUser);\n\t\t} else {\n\t\t\tconst name = externalUserProfileInformation?.displayName || providedName || username;\n\t\t\tfederatedUser = FederatedUser.createInstance(externalUserId, {\n\t\t\t\tname,\n\t\t\t\tusername,\n\t\t\t\texistsOnlyOnProxyServer,\n\t\t\t});\n\t\t}\n\t\tawait this.internalUserAdapter.createFederatedUser(federatedUser);\n\t\tconst insertedUser = await this.internalUserAdapter.getFederatedUserByExternalId(externalUserId);\n\t\tif (!insertedUser) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.updateUserAvatarInternally(insertedUser, externalUserProfileInformation?.avatarUrl);\n\t\tawait this.updateUserDisplayNameInternally(insertedUser, externalUserProfileInformation?.displayName);\n\t}\n\n\tprotected async updateUserAvatarInternally(federatedUser: FederatedUser, avatarUrl?: string): Promise<void> {\n\t\tif (!avatarUrl) {\n\t\t\treturn;\n\t\t}\n\t\tif (!federatedUser.isRemote()) {\n\t\t\treturn;\n\t\t}\n\t\tif (federatedUser.shouldUpdateFederationAvatar(avatarUrl)) {\n\t\t\tawait this.internalUserAdapter.setAvatar(federatedUser, this.bridge.convertMatrixUrlToHttp(federatedUser.getExternalId(), avatarUrl));\n\t\t\tawait this.internalUserAdapter.updateFederationAvatar(federatedUser.getInternalId(), avatarUrl);\n\t\t}\n\t}\n\n\tprotected async updateUserDisplayNameInternally(federatedUser: FederatedUser, displayName?: string): Promise<void> {\n\t\tif (!displayName) {\n\t\t\treturn;\n\t\t}\n\t\tif (!federatedUser.isRemote()) {\n\t\t\treturn;\n\t\t}\n\t\tif (federatedUser.shouldUpdateDisplayName(displayName)) {\n\t\t\tawait this.internalUserAdapter.updateRealName(federatedUser.getInternalReference(), displayName);\n\t\t}\n\t}\n\n\tprotected async createFederatedUserIncludingHomeserverUsingLocalInformation(internalInviterId: string): Promise<string> {\n\t\tconst internalUser = await this.internalUserAdapter.getInternalUserById(internalInviterId);\n\t\tif (!internalUser || !internalUser?.username) {\n\t\t\tthrow new Error(`Could not find user id for ${internalInviterId}`);\n\t\t}\n\t\tconst name = internalUser.name || internalUser.username;\n\t\tconst externalInviterId = await this.bridge.createUser(internalUser.username, name, this.internalHomeServerDomain);\n\t\tconst existsOnlyOnProxyServer = true;\n\t\tawait this.createFederatedUserInternallyOnly(externalInviterId, internalUser.username, existsOnlyOnProxyServer, name);\n\t\tawait this.updateUserAvatarExternally(\n\t\t\tinternalUser,\n\t\t\t(await this.internalUserAdapter.getFederatedUserByExternalId(externalInviterId)) as FederatedUser,\n\t\t);\n\n\t\treturn externalInviterId;\n\t}\n\n\tprotected async updateUserAvatarExternally(internalUser: IUser, externalInviter: FederatedUser): Promise<void> {\n\t\tif (!internalUser.username) {\n\t\t\treturn;\n\t\t}\n\t\tconst buffer = await this.internalFileAdapter.getBufferForAvatarFile(internalUser.username);\n\t\tif (!buffer) {\n\t\t\treturn;\n\t\t}\n\t\tconst avatarFileRecord = await this.internalFileAdapter.getFileMetadataForAvatarFile(internalUser.username);\n\t\tif (!avatarFileRecord?.type || !avatarFileRecord?.name) {\n\t\t\treturn;\n\t\t}\n\t\tconst externalFileUri = await this.bridge.uploadContent(externalInviter.getExternalId(), buffer, {\n\t\t\ttype: avatarFileRecord.type,\n\t\t\tname: avatarFileRecord.name,\n\t\t});\n\t\tif (!externalFileUri) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.internalUserAdapter.updateFederationAvatar(internalUser._id, externalFileUri);\n\t\tawait this.bridge.setUserAvatar(externalInviter.getExternalId(), externalFileUri);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2eedfae9f2090f2b6f6177dff0bbfae4bbbe3caf"}
