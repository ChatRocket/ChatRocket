{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/FederationServers.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/FederationServers.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/FederationServers.ts","inputSourceMap":{"version":3,"file":"server/models/raw/FederationServers.ts","sourceRoot":"","sources":["server/models/raw/FederationServers.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAG5C,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,oBAAqB,SAAQ,OAA0B;IACnE,YAAY,EAAM,EAAE,KAA8D;QACjF,KAAK,CAAC,EAAE,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAES,YAAY;QACrB,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACjC,CAAC;IAED,UAAU,CAAC,MAAc;QACxB,OAAO,IAAI,CAAC,SAAS,CACpB,EAAE,MAAM,EAAE,EACV;YACC,YAAY,EAAE;gBACb,MAAM;aACN;SACD,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,CAChB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,cAAc;QACnB,kGAAkG;QAClG,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,4BAA4B,EAAE,CAAC;QAE3D,IAAI,KAAK,EAAE,MAAM,MAAM,IAAI,OAAO,EAAE,CAAC;YACpC,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC;QAED,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IACtD,CAAC;CACD","sourcesContent":["import type { IFederationServer, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IFederationServersModel } from '@rocket.chat/model-typings';\nimport { Users } from '@rocket.chat/models';\nimport type { Collection, Db, IndexDescription, UpdateResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class FederationServersRaw extends BaseRaw<IFederationServer> implements IFederationServersModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IFederationServer>>) {\n\t\tsuper(db, 'federation_servers', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { domain: 1 } }];\n\t}\n\n\tsaveDomain(domain: string): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ domain },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\n\tasync refreshServers(): Promise<void> {\n\t\t// TODO remove model dependency - this logs should be inside a function/service and not in a model\n\t\tconst domains = await Users.getDistinctFederationDomains();\n\n\t\tfor await (const domain of domains) {\n\t\t\tawait this.saveDomain(domain);\n\t\t}\n\n\t\tawait this.deleteMany({ domain: { $nin: domains } });\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/FederationServers.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/FederationServers.ts","inputSourceMap":{"version":3,"file":"server/models/raw/FederationServers.ts","sourceRoot":"","sources":["server/models/raw/FederationServers.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAG5C,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,oBAAqB,SAAQ,OAA0B;IACnE,YAAY,EAAM,EAAE,KAA8D;QACjF,KAAK,CAAC,EAAE,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAES,YAAY;QACrB,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACjC,CAAC;IAED,UAAU,CAAC,MAAc;QACxB,OAAO,IAAI,CAAC,SAAS,CACpB,EAAE,MAAM,EAAE,EACV;YACC,YAAY,EAAE;gBACb,MAAM;aACN;SACD,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,CAChB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,cAAc;QACnB,kGAAkG;QAClG,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,4BAA4B,EAAE,CAAC;QAE3D,IAAI,KAAK,EAAE,MAAM,MAAM,IAAI,OAAO,EAAE,CAAC;YACpC,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC;QAED,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IACtD,CAAC;CACD","sourcesContent":["import type { IFederationServer, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IFederationServersModel } from '@rocket.chat/model-typings';\nimport { Users } from '@rocket.chat/models';\nimport type { Collection, Db, IndexDescription, UpdateResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class FederationServersRaw extends BaseRaw<IFederationServer> implements IFederationServersModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IFederationServer>>) {\n\t\tsuper(db, 'federation_servers', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { domain: 1 } }];\n\t}\n\n\tsaveDomain(domain: string): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ domain },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\n\tasync refreshServers(): Promise<void> {\n\t\t// TODO remove model dependency - this logs should be inside a function/service and not in a model\n\t\tconst domains = await Users.getDistinctFederationDomains();\n\n\t\tfor await (const domain of domains) {\n\t\t\tawait this.saveDomain(domain);\n\t\t}\n\n\t\tawait this.deleteMany({ domain: { $nin: domains } });\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      FederationServersRaw: () => FederationServersRaw\n    });\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class FederationServersRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'federation_servers', trash);\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            domain: 1\n          }\n        }];\n      }\n      saveDomain(domain) {\n        return this.updateOne({\n          domain\n        }, {\n          $setOnInsert: {\n            domain\n          }\n        }, {\n          upsert: true\n        });\n      }\n      async refreshServers() {\n        // TODO remove model dependency - this logs should be inside a function/service and not in a model\n        const domains = await Users.getDistinctFederationDomains();\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(domains), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const domain = _step.value;\n            {\n              await this.saveDomain(domain);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        await this.deleteMany({\n          domain: {\n            $nin: domains\n          }\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","FederationServersRaw","Users","BaseRaw","__reifyWaitForDeps__","constructor","db","trash","modelIndexes","key","domain","saveDomain","updateOne","$setOnInsert","upsert","refreshServers","domains","getDistinctFederationDomains","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","err","return","deleteMany","$nin","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/FederationServers.ts"],"sourcesContent":["import type { IFederationServer, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IFederationServersModel } from '@rocket.chat/model-typings';\nimport { Users } from '@rocket.chat/models';\nimport type { Collection, Db, IndexDescription, UpdateResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class FederationServersRaw extends BaseRaw<IFederationServer> implements IFederationServersModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IFederationServer>>) {\n\t\tsuper(db, 'federation_servers', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { domain: 1 } }];\n\t}\n\n\tsaveDomain(domain: string): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ domain },\n\t\t\t{\n\t\t\t\t$setOnInsert: {\n\t\t\t\t\tdomain,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n\n\tasync refreshServers(): Promise<void> {\n\t\t// TODO remove model dependency - this logs should be inside a function/service and not in a model\n\t\tconst domains = await Users.getDistinctFederationDomains();\n\n\t\tfor await (const domain of domains) {\n\t\t\tawait this.saveDomain(domain);\n\t\t}\n\n\t\tawait this.deleteMany({ domain: { $nin: domains } });\n\t}\n}\n"],"mappings":";;;IAEA,IAAAA,cAAgB;IAAAC,MAAM,CAAAC,IAAA,uCAAsB;MAAAC,QAAAC,CAAA;QAAAJ,cAAA,GAAAI,CAAA;MAAA;IAAA;IAA5CH,MAAA,CAAOI,MAAE,CAAK;MAAAC,oBAAQ,EAAAA,CAAA,KAAAA;IAAsB;IAAA,IAAAC,KAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,MAAAH,CAAA;QAAAG,KAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,OAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAM,QAAAJ,CAAA;QAAAI,OAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,oBAAA,WAAAA,oBAAA;IAKtC,MAAOH,oBAAqB,SAAQE,OAA0B;MACnEE,YAAYC,EAAM,EAAEC,KAA8D;QACjF,KAAK,CAACD,EAAE,EAAE,oBAAoB,EAAEC,KAAK,CAAC;MACvC;MAEUC,YAAYA,CAAA;QACrB,OAAO,CAAC;UAAEC,GAAG,EAAE;YAAEC,MAAM,EAAE;UAAC;QAAE,CAAE,CAAC;MAChC;MAEAC,UAAUA,CAACD,MAAc;QACxB,OAAO,IAAI,CAACE,SAAS,CACpB;UAAEF;QAAM,CAAE,EACV;UACCG,YAAY,EAAE;YACbH;;SAED,EACD;UAAEI,MAAM,EAAE;QAAI,CAAE,CAChB;MACF;MAEA,MAAMC,cAAcA,CAAA;QACnB;QACA,MAAMC,OAAO,GAAG,MAAMd,KAAK,CAACe,4BAA4B,EAAE;QAAC,IAAAC,yBAAA;QAAA,IAAAC,iBAAA;QAAA,IAAAC,cAAA;QAAA;UAE3D,SAAAC,SAAA,GAAA1B,cAAA,CAA2BqB,OAAO,GAAAM,KAAA,EAAAJ,yBAAA,KAAAI,KAAA,SAAAD,SAAA,CAAAE,IAAA,IAAAC,IAAA,EAAAN,yBAAA,UAAE;YAAA,MAAnBR,MAAM,GAAAY,KAAA,CAAAG,KAAA;YAAA;cACtB,MAAM,IAAI,CAACd,UAAU,CAACD,MAAM,CAAC;YAAC;UAC/B;QAAC,SAAAgB,GAAA;UAAAP,iBAAA;UAAAC,cAAA,GAAAM,GAAA;QAAA;UAAA;YAAA,IAAAR,yBAAA,IAAAG,SAAA,CAAAM,MAAA;cAAA,MAAAN,SAAA,CAAAM,MAAA;YAAA;UAAA;YAAA,IAAAR,iBAAA;cAAA,MAAAC,cAAA;YAAA;UAAA;QAAA;QAED,MAAM,IAAI,CAACQ,UAAU,CAAC;UAAElB,MAAM,EAAE;YAAEmB,IAAI,EAAEb;UAAO;QAAE,CAAE,CAAC;MACrD;;IACAc,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2404c5e9c3b30081bb9b448a7c87f91ce7a7c9c6"}
