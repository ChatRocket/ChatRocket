{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/meteorOverrides/ddpOverREST.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/meteorOverrides/ddpOverREST.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/meteorOverrides/ddpOverREST.ts","inputSourceMap":{"version":3,"file":"client/meteorOverrides/ddpOverREST.ts","sourceRoot":"","sources":["client/meteorOverrides/ddpOverREST.ts"],"names":[],"mappings":"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","sourcesContent":["import { DDPCommon } from 'meteor/ddp-common';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\n\nconst bypassMethods: string[] = ['setUserStatus', 'logout'];\n\nconst shouldBypass = ({ msg, method, params }: Meteor.IDDPMessage): boolean => {\n\tif (msg !== 'method') {\n\t\treturn true;\n\t}\n\n\tif (method === 'login' && params[0]?.resume) {\n\t\treturn true;\n\t}\n\n\tif (method.startsWith('UserPresence:') || bypassMethods.includes(method)) {\n\t\treturn true;\n\t}\n\n\tif (method.startsWith('stream-')) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nconst withDDPOverREST = (_send: (this: Meteor.IMeteorConnection, message: Meteor.IDDPMessage, ...args: unknown[]) => void) => {\n\treturn function _sendOverREST(this: Meteor.IMeteorConnection, message: Meteor.IDDPMessage, ...args: unknown[]): void {\n\t\tif (shouldBypass(message)) {\n\t\t\treturn _send.call(this, message, ...args);\n\t\t}\n\n\t\tconst endpoint = Tracker.nonreactive(() => (!Meteor.userId() ? 'method.callAnon' : 'method.call'));\n\n\t\tconst restParams = {\n\t\t\tmessage: DDPCommon.stringifyDDP({ ...message }),\n\t\t};\n\n\t\tconst processResult = (_message: string): void => {\n\t\t\t// Prevent error on reconnections and method retry.\n\t\t\t// On those cases the API will be called 2 times but\n\t\t\t// the handler will be deleted after the first execution.\n\t\t\tif (!this._methodInvokers[message.id]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._livedata_data({\n\t\t\t\tmsg: 'updated',\n\t\t\t\tmethods: [message.id],\n\t\t\t});\n\t\t\tthis.onMessage(_message);\n\t\t};\n\n\t\tconst method = encodeURIComponent(message.method.replace(/\\//g, ':'));\n\n\t\tsdk.rest\n\t\t\t.post(`/v1/${endpoint}/${method}`, restParams)\n\t\t\t.then(({ message: _message }) => {\n\t\t\t\tprocessResult(_message);\n\t\t\t\tif (message.method === 'login') {\n\t\t\t\t\tconst parsedMessage = DDPCommon.parseDDP(_message) as { result?: { token?: string } };\n\t\t\t\t\tif (parsedMessage.result?.token) {\n\t\t\t\t\t\tMeteor.loginWithToken(parsedMessage.result.token);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t};\n};\n\nif (window.USE_REST_FOR_DDP_CALLS) {\n\tMeteor.connection._send = withDDPOverREST(Meteor.connection._send);\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"production","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/meteorOverrides/ddpOverREST.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/meteorOverrides/ddpOverREST.ts","inputSourceMap":{"version":3,"file":"client/meteorOverrides/ddpOverREST.ts","sourceRoot":"","sources":["client/meteorOverrides/ddpOverREST.ts"],"names":[],"mappings":"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","sourcesContent":["import { DDPCommon } from 'meteor/ddp-common';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\n\nconst bypassMethods: string[] = ['setUserStatus', 'logout'];\n\nconst shouldBypass = ({ msg, method, params }: Meteor.IDDPMessage): boolean => {\n\tif (msg !== 'method') {\n\t\treturn true;\n\t}\n\n\tif (method === 'login' && params[0]?.resume) {\n\t\treturn true;\n\t}\n\n\tif (method.startsWith('UserPresence:') || bypassMethods.includes(method)) {\n\t\treturn true;\n\t}\n\n\tif (method.startsWith('stream-')) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nconst withDDPOverREST = (_send: (this: Meteor.IMeteorConnection, message: Meteor.IDDPMessage, ...args: unknown[]) => void) => {\n\treturn function _sendOverREST(this: Meteor.IMeteorConnection, message: Meteor.IDDPMessage, ...args: unknown[]): void {\n\t\tif (shouldBypass(message)) {\n\t\t\treturn _send.call(this, message, ...args);\n\t\t}\n\n\t\tconst endpoint = Tracker.nonreactive(() => (!Meteor.userId() ? 'method.callAnon' : 'method.call'));\n\n\t\tconst restParams = {\n\t\t\tmessage: DDPCommon.stringifyDDP({ ...message }),\n\t\t};\n\n\t\tconst processResult = (_message: string): void => {\n\t\t\t// Prevent error on reconnections and method retry.\n\t\t\t// On those cases the API will be called 2 times but\n\t\t\t// the handler will be deleted after the first execution.\n\t\t\tif (!this._methodInvokers[message.id]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._livedata_data({\n\t\t\t\tmsg: 'updated',\n\t\t\t\tmethods: [message.id],\n\t\t\t});\n\t\t\tthis.onMessage(_message);\n\t\t};\n\n\t\tconst method = encodeURIComponent(message.method.replace(/\\//g, ':'));\n\n\t\tsdk.rest\n\t\t\t.post(`/v1/${endpoint}/${method}`, restParams)\n\t\t\t.then(({ message: _message }) => {\n\t\t\t\tprocessResult(_message);\n\t\t\t\tif (message.method === 'login') {\n\t\t\t\t\tconst parsedMessage = DDPCommon.parseDDP(_message) as { result?: { token?: string } };\n\t\t\t\t\tif (parsedMessage.result?.token) {\n\t\t\t\t\t\tMeteor.loginWithToken(parsedMessage.result.token);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t};\n};\n\nif (window.USE_REST_FOR_DDP_CALLS) {\n\tMeteor.connection._send = withDDPOverREST(Meteor.connection._send);\n}\n"]}}},"code":"var _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nvar DDPCommon;\nmodule.link(\"meteor/ddp-common\", {\n  DDPCommon: function (v) {\n    DDPCommon = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 2);\nvar sdk;\nmodule.link(\"../../app/utils/client/lib/SDKClient\", {\n  sdk: function (v) {\n    sdk = v;\n  }\n}, 3);\nvar bypassMethods = ['setUserStatus', 'logout'];\nvar shouldBypass = function (_ref) {\n  var _params$;\n  var msg = _ref.msg,\n    method = _ref.method,\n    params = _ref.params;\n  if (msg !== 'method') {\n    return true;\n  }\n  if (method === 'login' && (_params$ = params[0]) !== null && _params$ !== void 0 && _params$.resume) {\n    return true;\n  }\n  if (method.startsWith('UserPresence:') || bypassMethods.includes(method)) {\n    return true;\n  }\n  if (method.startsWith('stream-')) {\n    return true;\n  }\n  return false;\n};\nvar withDDPOverREST = function (_send) {\n  return function () {\n    function _sendOverREST(message) {\n      var _this = this;\n      if (shouldBypass(message)) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        return _send.call.apply(_send, [this, message].concat(args));\n      }\n      var endpoint = Tracker.nonreactive(function () {\n        return !Meteor.userId() ? 'method.callAnon' : 'method.call';\n      });\n      var restParams = {\n        message: DDPCommon.stringifyDDP(_objectSpread({}, message))\n      };\n      var processResult = function (_message) {\n        // Prevent error on reconnections and method retry.\n        // On those cases the API will be called 2 times but\n        // the handler will be deleted after the first execution.\n        if (!_this._methodInvokers[message.id]) {\n          return;\n        }\n        _this._livedata_data({\n          msg: 'updated',\n          methods: [message.id]\n        });\n        _this.onMessage(_message);\n      };\n      var method = encodeURIComponent(message.method.replace(/\\//g, ':'));\n      sdk.rest.post(\"/v1/\" + endpoint + \"/\" + method, restParams).then(function (_ref2) {\n        var _message = _ref2.message;\n        processResult(_message);\n        if (message.method === 'login') {\n          var _parsedMessage$result;\n          var parsedMessage = DDPCommon.parseDDP(_message);\n          if ((_parsedMessage$result = parsedMessage.result) !== null && _parsedMessage$result !== void 0 && _parsedMessage$result.token) {\n            Meteor.loginWithToken(parsedMessage.result.token);\n          }\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n    return _sendOverREST;\n  }();\n};\nif (window.USE_REST_FOR_DDP_CALLS) {\n  Meteor.connection._send = withDDPOverREST(Meteor.connection._send);\n}","map":{"version":3,"names":["_objectSpread","module","link","default","v","DDPCommon","Meteor","Tracker","sdk","bypassMethods","shouldBypass","_ref","_params$","msg","method","params","resume","startsWith","includes","withDDPOverREST","_send","_sendOverREST","message","_this","_len","arguments","length","args","Array","_key","call","apply","concat","endpoint","nonreactive","userId","restParams","stringifyDDP","processResult","_message","_methodInvokers","id","_livedata_data","methods","onMessage","encodeURIComponent","replace","rest","post","then","_ref2","_parsedMessage$result","parsedMessage","parseDDP","result","token","loginWithToken","catch","error","console","window","USE_REST_FOR_DDP_CALLS","connection"],"sources":["client/meteorOverrides/ddpOverREST.ts"],"sourcesContent":["import { DDPCommon } from 'meteor/ddp-common';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\n\nconst bypassMethods: string[] = ['setUserStatus', 'logout'];\n\nconst shouldBypass = ({ msg, method, params }: Meteor.IDDPMessage): boolean => {\n\tif (msg !== 'method') {\n\t\treturn true;\n\t}\n\n\tif (method === 'login' && params[0]?.resume) {\n\t\treturn true;\n\t}\n\n\tif (method.startsWith('UserPresence:') || bypassMethods.includes(method)) {\n\t\treturn true;\n\t}\n\n\tif (method.startsWith('stream-')) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nconst withDDPOverREST = (_send: (this: Meteor.IMeteorConnection, message: Meteor.IDDPMessage, ...args: unknown[]) => void) => {\n\treturn function _sendOverREST(this: Meteor.IMeteorConnection, message: Meteor.IDDPMessage, ...args: unknown[]): void {\n\t\tif (shouldBypass(message)) {\n\t\t\treturn _send.call(this, message, ...args);\n\t\t}\n\n\t\tconst endpoint = Tracker.nonreactive(() => (!Meteor.userId() ? 'method.callAnon' : 'method.call'));\n\n\t\tconst restParams = {\n\t\t\tmessage: DDPCommon.stringifyDDP({ ...message }),\n\t\t};\n\n\t\tconst processResult = (_message: string): void => {\n\t\t\t// Prevent error on reconnections and method retry.\n\t\t\t// On those cases the API will be called 2 times but\n\t\t\t// the handler will be deleted after the first execution.\n\t\t\tif (!this._methodInvokers[message.id]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._livedata_data({\n\t\t\t\tmsg: 'updated',\n\t\t\t\tmethods: [message.id],\n\t\t\t});\n\t\t\tthis.onMessage(_message);\n\t\t};\n\n\t\tconst method = encodeURIComponent(message.method.replace(/\\//g, ':'));\n\n\t\tsdk.rest\n\t\t\t.post(`/v1/${endpoint}/${method}`, restParams)\n\t\t\t.then(({ message: _message }) => {\n\t\t\t\tprocessResult(_message);\n\t\t\t\tif (message.method === 'login') {\n\t\t\t\t\tconst parsedMessage = DDPCommon.parseDDP(_message) as { result?: { token?: string } };\n\t\t\t\t\tif (parsedMessage.result?.token) {\n\t\t\t\t\t\tMeteor.loginWithToken(parsedMessage.result.token);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t};\n};\n\nif (window.USE_REST_FOR_DDP_CALLS) {\n\tMeteor.connection._send = withDDPOverREST(Meteor.connection._send);\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"89aed1df5dc4b5baba8e4cff31027b43fe0ed24e"}
