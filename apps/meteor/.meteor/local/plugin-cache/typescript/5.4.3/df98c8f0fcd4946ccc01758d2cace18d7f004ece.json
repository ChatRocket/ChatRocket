{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/server/methods/updateGroupKey.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/e2e/server/methods/updateGroupKey.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/server/methods/updateGroupKey.ts","inputSourceMap":{"version":3,"file":"app/e2e/server/methods/updateGroupKey.ts","sourceRoot":"","sources":["app/e2e/server/methods/updateGroupKey.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,uBAAuB,EAAE,MAAM,kDAAkD,CAAC;AAC3F,OAAO,EAAE,+BAA+B,EAAE,2BAA2B,EAAE,MAAM,wCAAwC,CAAC;AAStH,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,oBAAoB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;QACvC,uBAAuB,CAAC,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;QAC9D,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,6BAA6B,EAAE,CAAC,CAAC;QACzG,CAAC;QAED,qCAAqC;QACrC,MAAM,KAAK,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAExE,IAAI,KAAK,EAAE,CAAC;YACX,iEAAiE;YACjE,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;gBACpB,MAAM,sBAAsB,GAAG,MAAM,aAAa,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAClF,IAAI,sBAAsB,CAAC,aAAa,EAAE,CAAC;oBAC1C,KAAK,+BAA+B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjD,CAAC;gBACD,OAAO;YACR,CAAC;YAED,yCAAyC;YACzC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,aAAa,CAAC,uBAAuB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC7E,IAAI,KAAK,EAAE,CAAC;gBACX,KAAK,2BAA2B,CAAC,KAAK,CAAC,CAAC;YACzC,CAAC;QACF,CAAC;IACF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Subscriptions } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { methodDeprecationLogger } from '../../../lib/server/lib/deprecationWarningLogger';\nimport { notifyOnSubscriptionChangedById, notifyOnSubscriptionChanged } from '../../../lib/server/lib/notifyListener';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'e2e.updateGroupKey'(rid: string, uid: string, key: string): Promise<void>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'e2e.updateGroupKey'(rid, uid, key) {\n\t\tmethodDeprecationLogger.method('e2e.updateGroupKey', '8.0.0');\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'e2e.acceptSuggestedGroupKey' });\n\t\t}\n\n\t\t// I have a subscription to this room\n\t\tconst mySub = await Subscriptions.findOneByRoomIdAndUserId(rid, userId);\n\n\t\tif (mySub) {\n\t\t\t// Setting the key to myself, can set directly to the final field\n\t\t\tif (userId === uid) {\n\t\t\t\tconst setGroupE2EKeyResponse = await Subscriptions.setGroupE2EKey(mySub._id, key);\n\t\t\t\tif (setGroupE2EKeyResponse.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSubscriptionChangedById(mySub._id);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// uid also has subscription to this room\n\t\t\tconst { value } = await Subscriptions.setGroupE2ESuggestedKey(uid, rid, key);\n\t\t\tif (value) {\n\t\t\t\tvoid notifyOnSubscriptionChanged(value);\n\t\t\t}\n\t\t}\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/server/methods/updateGroupKey.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/e2e/server/methods/updateGroupKey.ts","inputSourceMap":{"version":3,"file":"app/e2e/server/methods/updateGroupKey.ts","sourceRoot":"","sources":["app/e2e/server/methods/updateGroupKey.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,uBAAuB,EAAE,MAAM,kDAAkD,CAAC;AAC3F,OAAO,EAAE,+BAA+B,EAAE,2BAA2B,EAAE,MAAM,wCAAwC,CAAC;AAStH,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,oBAAoB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;QACvC,uBAAuB,CAAC,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;QAC9D,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,6BAA6B,EAAE,CAAC,CAAC;QACzG,CAAC;QAED,qCAAqC;QACrC,MAAM,KAAK,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAExE,IAAI,KAAK,EAAE,CAAC;YACX,iEAAiE;YACjE,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;gBACpB,MAAM,sBAAsB,GAAG,MAAM,aAAa,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAClF,IAAI,sBAAsB,CAAC,aAAa,EAAE,CAAC;oBAC1C,KAAK,+BAA+B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjD,CAAC;gBACD,OAAO;YACR,CAAC;YAED,yCAAyC;YACzC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,aAAa,CAAC,uBAAuB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC7E,IAAI,KAAK,EAAE,CAAC;gBACX,KAAK,2BAA2B,CAAC,KAAK,CAAC,CAAC;YACzC,CAAC;QACF,CAAC;IACF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Subscriptions } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { methodDeprecationLogger } from '../../../lib/server/lib/deprecationWarningLogger';\nimport { notifyOnSubscriptionChangedById, notifyOnSubscriptionChanged } from '../../../lib/server/lib/notifyListener';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'e2e.updateGroupKey'(rid: string, uid: string, key: string): Promise<void>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'e2e.updateGroupKey'(rid, uid, key) {\n\t\tmethodDeprecationLogger.method('e2e.updateGroupKey', '8.0.0');\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'e2e.acceptSuggestedGroupKey' });\n\t\t}\n\n\t\t// I have a subscription to this room\n\t\tconst mySub = await Subscriptions.findOneByRoomIdAndUserId(rid, userId);\n\n\t\tif (mySub) {\n\t\t\t// Setting the key to myself, can set directly to the final field\n\t\t\tif (userId === uid) {\n\t\t\t\tconst setGroupE2EKeyResponse = await Subscriptions.setGroupE2EKey(mySub._id, key);\n\t\t\t\tif (setGroupE2EKeyResponse.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSubscriptionChangedById(mySub._id);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// uid also has subscription to this room\n\t\t\tconst { value } = await Subscriptions.setGroupE2ESuggestedKey(uid, rid, key);\n\t\t\tif (value) {\n\t\t\t\tvoid notifyOnSubscriptionChanged(value);\n\t\t\t}\n\t\t}\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let methodDeprecationLogger;\n    module.link(\"../../../lib/server/lib/deprecationWarningLogger\", {\n      methodDeprecationLogger(v) {\n        methodDeprecationLogger = v;\n      }\n    }, 2);\n    let notifyOnSubscriptionChangedById, notifyOnSubscriptionChanged;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnSubscriptionChangedById(v) {\n        notifyOnSubscriptionChangedById = v;\n      },\n      notifyOnSubscriptionChanged(v) {\n        notifyOnSubscriptionChanged = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async 'e2e.updateGroupKey'(rid, uid, key) {\n        methodDeprecationLogger.method('e2e.updateGroupKey', '8.0.0');\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'e2e.acceptSuggestedGroupKey'\n          });\n        }\n        // I have a subscription to this room\n        const mySub = await Subscriptions.findOneByRoomIdAndUserId(rid, userId);\n        if (mySub) {\n          // Setting the key to myself, can set directly to the final field\n          if (userId === uid) {\n            const setGroupE2EKeyResponse = await Subscriptions.setGroupE2EKey(mySub._id, key);\n            if (setGroupE2EKeyResponse.modifiedCount) {\n              void notifyOnSubscriptionChangedById(mySub._id);\n            }\n            return;\n          }\n          // uid also has subscription to this room\n          const {\n            value\n          } = await Subscriptions.setGroupE2ESuggestedKey(uid, rid, key);\n          if (value) {\n            void notifyOnSubscriptionChanged(value);\n          }\n        }\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Subscriptions","module","link","v","Meteor","methodDeprecationLogger","notifyOnSubscriptionChangedById","notifyOnSubscriptionChanged","__reifyWaitForDeps__","methods","e2e.updateGroupKey","rid","uid","key","method","userId","Error","mySub","findOneByRoomIdAndUserId","setGroupE2EKeyResponse","setGroupE2EKey","_id","modifiedCount","value","setGroupE2ESuggestedKey","__reify_async_result__","_reifyError","self","async"],"sources":["app/e2e/server/methods/updateGroupKey.ts"],"sourcesContent":["import type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Subscriptions } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { methodDeprecationLogger } from '../../../lib/server/lib/deprecationWarningLogger';\nimport { notifyOnSubscriptionChangedById, notifyOnSubscriptionChanged } from '../../../lib/server/lib/notifyListener';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'e2e.updateGroupKey'(rid: string, uid: string, key: string): Promise<void>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'e2e.updateGroupKey'(rid, uid, key) {\n\t\tmethodDeprecationLogger.method('e2e.updateGroupKey', '8.0.0');\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'e2e.acceptSuggestedGroupKey' });\n\t\t}\n\n\t\t// I have a subscription to this room\n\t\tconst mySub = await Subscriptions.findOneByRoomIdAndUserId(rid, userId);\n\n\t\tif (mySub) {\n\t\t\t// Setting the key to myself, can set directly to the final field\n\t\t\tif (userId === uid) {\n\t\t\t\tconst setGroupE2EKeyResponse = await Subscriptions.setGroupE2EKey(mySub._id, key);\n\t\t\t\tif (setGroupE2EKeyResponse.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSubscriptionChangedById(mySub._id);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// uid also has subscription to this room\n\t\t\tconst { value } = await Subscriptions.setGroupE2ESuggestedKey(uid, rid, key);\n\t\t\tif (value) {\n\t\t\t\tvoid notifyOnSubscriptionChanged(value);\n\t\t\t}\n\t\t}\n\t},\n});\n"],"mappings":";;;IACA,IAAAA,aAAS;IAAAC,MAAe,CAAAC,IAAA,CAAM,qBAAqB,EAAC;MAAAF,cAAAG,CAAA;QAAAH,aAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,MAAA;IAAAH,MAAA,CAAAC,IAAA;MAAAE,OAAAD,CAAA;QAAAC,MAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,uBAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAG,wBAAAF,CAAA;QAAAE,uBAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,+BAAA,EAAAC,2BAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAI,gCAAAH,CAAA;QAAAG,+BAAA,GAAAH,CAAA;MAAA;MAAAI,4BAAAJ,CAAA;QAAAI,2BAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,oBAAA,WAAAA,oBAAA;IAapDJ,MAAM,CAACK,OAAO,CAAgB;MAC7B,MAAM,oBAAoBC,CAACC,GAAG,EAAEC,GAAG,EAAEC,GAAG;QACvCR,uBAAuB,CAACS,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC;QAC7D,MAAMC,MAAM,GAAGX,MAAM,CAACW,MAAM,EAAE;QAC9B,IAAI,CAACA,MAAM,EAAE;UACZ,MAAM,IAAIX,MAAM,CAACY,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAAEF,MAAM,EAAE;UAA6B,CAAE,CAAC;QACxG;QAEA;QACA,MAAMG,KAAK,GAAG,MAAMjB,aAAa,CAACkB,wBAAwB,CAACP,GAAG,EAAEI,MAAM,CAAC;QAEvE,IAAIE,KAAK,EAAE;UACV;UACA,IAAIF,MAAM,KAAKH,GAAG,EAAE;YACnB,MAAMO,sBAAsB,GAAG,MAAMnB,aAAa,CAACoB,cAAc,CAACH,KAAK,CAACI,GAAG,EAAER,GAAG,CAAC;YACjF,IAAIM,sBAAsB,CAACG,aAAa,EAAE;cACzC,KAAKhB,+BAA+B,CAACW,KAAK,CAACI,GAAG,CAAC;YAChD;YACA;UACD;UAEA;UACA,MAAM;YAAEE;UAAK,CAAE,GAAG,MAAMvB,aAAa,CAACwB,uBAAuB,CAACZ,GAAG,EAAED,GAAG,EAAEE,GAAG,CAAC;UAC5E,IAAIU,KAAK,EAAE;YACV,KAAKhB,2BAA2B,CAACgB,KAAK,CAAC;UACxC;QACD;MACD;KACA,CAAC;IAACE,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"df98c8f0fcd4946ccc01758d2cace18d7f004ece"}
