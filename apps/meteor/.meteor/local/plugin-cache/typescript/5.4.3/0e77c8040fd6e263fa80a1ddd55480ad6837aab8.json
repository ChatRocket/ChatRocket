{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Integrations.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/Integrations.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Integrations.ts","inputSourceMap":{"version":3,"file":"server/models/raw/Integrations.ts","sourceRoot":"","sources":["server/models/raw/Integrations.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,eAAgB,SAAQ,OAAqB;IACzD,YAAY,EAAM,EAAE,KAAyD;QAC5E,KAAK,CAAC,EAAE,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;IAClC,CAAC;IAES,YAAY;QACrB,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,YAAY,CAAC,GAAW;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,cAAc,CAAC,WAAmB,EAAE,WAAmB;QACtD,MAAM,iBAAiB,GAAG,IAAI,WAAW,EAAE,CAAC;QAC5C,MAAM,iBAAiB,GAAG,IAAI,WAAW,EAAE,CAAC;QAE5C,OAAO,IAAI,CAAC,UAAU,CACrB;YACC,OAAO,EAAE,iBAAiB;SAC1B,EACD;YACC,IAAI,EAAE;gBACL,WAAW,EAAE,iBAAiB;aAC9B;SACD,CACD,CAAC;IACH,CAAC;IAED,+BAA+B,CAAC,EAC/B,GAAG,EACH,SAAS,GAIT;QACA,OAAO,IAAI,CAAC,OAAO,CAAC;YACnB,GAAG;YACH,GAAG,CAAC,SAAS,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,CAAC;SACjD,CAAC,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,MAA8B;QAC7C,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,YAAY,CAAC,MAA8B;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,cAAc,CAAC,QAAiC;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;CACD","sourcesContent":["import type { IIntegration, IUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IBaseModel, IIntegrationsModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, FindCursor, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class IntegrationsRaw extends BaseRaw<IIntegration> implements IIntegrationsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IIntegration>>) {\n\t\tsuper(db, 'integrations', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { type: 1 } }];\n\t}\n\n\tfindOneByUrl(url: string): Promise<IIntegration | null> {\n\t\treturn this.findOne({ url });\n\t}\n\n\tupdateRoomName(oldRoomName: string, newRoomName: string): ReturnType<IBaseModel<IIntegration>['updateMany']> {\n\t\tconst hashedOldRoomName = `#${oldRoomName}`;\n\t\tconst hashedNewRoomName = `#${newRoomName}`;\n\n\t\treturn this.updateMany(\n\t\t\t{\n\t\t\t\tchannel: hashedOldRoomName,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'channel.$': hashedNewRoomName,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tfindOneByIdAndCreatedByIfExists({\n\t\t_id,\n\t\tcreatedBy,\n\t}: {\n\t\t_id: IIntegration['_id'];\n\t\tcreatedBy?: IUser['_id'];\n\t}): Promise<IIntegration | null> {\n\t\treturn this.findOne({\n\t\t\t_id,\n\t\t\t...(createdBy && { '_createdBy._id': createdBy }),\n\t\t});\n\t}\n\n\tdisableByUserId(userId: IIntegration['userId']): ReturnType<IBaseModel<IIntegration>['updateMany']> {\n\t\treturn this.updateMany({ userId }, { $set: { enabled: false } });\n\t}\n\n\tfindByUserId(userId: IIntegration['userId']): FindCursor<Pick<IIntegration, '_id'>> {\n\t\treturn this.find({ userId }, { projection: { _id: 1 } });\n\t}\n\n\tfindByChannels(channels: IIntegration['channel']): FindCursor<IIntegration> {\n\t\treturn this.find({ channel: { $in: channels } });\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Integrations.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/Integrations.ts","inputSourceMap":{"version":3,"file":"server/models/raw/Integrations.ts","sourceRoot":"","sources":["server/models/raw/Integrations.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,eAAgB,SAAQ,OAAqB;IACzD,YAAY,EAAM,EAAE,KAAyD;QAC5E,KAAK,CAAC,EAAE,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;IAClC,CAAC;IAES,YAAY;QACrB,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,YAAY,CAAC,GAAW;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,cAAc,CAAC,WAAmB,EAAE,WAAmB;QACtD,MAAM,iBAAiB,GAAG,IAAI,WAAW,EAAE,CAAC;QAC5C,MAAM,iBAAiB,GAAG,IAAI,WAAW,EAAE,CAAC;QAE5C,OAAO,IAAI,CAAC,UAAU,CACrB;YACC,OAAO,EAAE,iBAAiB;SAC1B,EACD;YACC,IAAI,EAAE;gBACL,WAAW,EAAE,iBAAiB;aAC9B;SACD,CACD,CAAC;IACH,CAAC;IAED,+BAA+B,CAAC,EAC/B,GAAG,EACH,SAAS,GAIT;QACA,OAAO,IAAI,CAAC,OAAO,CAAC;YACnB,GAAG;YACH,GAAG,CAAC,SAAS,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,CAAC;SACjD,CAAC,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,MAA8B;QAC7C,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAClE,CAAC;IAED,YAAY,CAAC,MAA8B;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,cAAc,CAAC,QAAiC;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;CACD","sourcesContent":["import type { IIntegration, IUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IBaseModel, IIntegrationsModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, FindCursor, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class IntegrationsRaw extends BaseRaw<IIntegration> implements IIntegrationsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IIntegration>>) {\n\t\tsuper(db, 'integrations', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { type: 1 } }];\n\t}\n\n\tfindOneByUrl(url: string): Promise<IIntegration | null> {\n\t\treturn this.findOne({ url });\n\t}\n\n\tupdateRoomName(oldRoomName: string, newRoomName: string): ReturnType<IBaseModel<IIntegration>['updateMany']> {\n\t\tconst hashedOldRoomName = `#${oldRoomName}`;\n\t\tconst hashedNewRoomName = `#${newRoomName}`;\n\n\t\treturn this.updateMany(\n\t\t\t{\n\t\t\t\tchannel: hashedOldRoomName,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'channel.$': hashedNewRoomName,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tfindOneByIdAndCreatedByIfExists({\n\t\t_id,\n\t\tcreatedBy,\n\t}: {\n\t\t_id: IIntegration['_id'];\n\t\tcreatedBy?: IUser['_id'];\n\t}): Promise<IIntegration | null> {\n\t\treturn this.findOne({\n\t\t\t_id,\n\t\t\t...(createdBy && { '_createdBy._id': createdBy }),\n\t\t});\n\t}\n\n\tdisableByUserId(userId: IIntegration['userId']): ReturnType<IBaseModel<IIntegration>['updateMany']> {\n\t\treturn this.updateMany({ userId }, { $set: { enabled: false } });\n\t}\n\n\tfindByUserId(userId: IIntegration['userId']): FindCursor<Pick<IIntegration, '_id'>> {\n\t\treturn this.find({ userId }, { projection: { _id: 1 } });\n\t}\n\n\tfindByChannels(channels: IIntegration['channel']): FindCursor<IIntegration> {\n\t\treturn this.find({ channel: { $in: channels } });\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      IntegrationsRaw: () => IntegrationsRaw\n    });\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class IntegrationsRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'integrations', trash);\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            type: 1\n          }\n        }];\n      }\n      findOneByUrl(url) {\n        return this.findOne({\n          url\n        });\n      }\n      updateRoomName(oldRoomName, newRoomName) {\n        const hashedOldRoomName = \"#\".concat(oldRoomName);\n        const hashedNewRoomName = \"#\".concat(newRoomName);\n        return this.updateMany({\n          channel: hashedOldRoomName\n        }, {\n          $set: {\n            'channel.$': hashedNewRoomName\n          }\n        });\n      }\n      findOneByIdAndCreatedByIfExists(_ref) {\n        let {\n          _id,\n          createdBy\n        } = _ref;\n        return this.findOne(_objectSpread({\n          _id\n        }, createdBy && {\n          '_createdBy._id': createdBy\n        }));\n      }\n      disableByUserId(userId) {\n        return this.updateMany({\n          userId\n        }, {\n          $set: {\n            enabled: false\n          }\n        });\n      }\n      findByUserId(userId) {\n        return this.find({\n          userId\n        }, {\n          projection: {\n            _id: 1\n          }\n        });\n      }\n      findByChannels(channels) {\n        return this.find({\n          channel: {\n            $in: channels\n          }\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","IntegrationsRaw","BaseRaw","__reifyWaitForDeps__","constructor","db","trash","modelIndexes","key","type","findOneByUrl","url","findOne","updateRoomName","oldRoomName","newRoomName","hashedOldRoomName","concat","hashedNewRoomName","updateMany","channel","$set","findOneByIdAndCreatedByIfExists","_ref","_id","createdBy","disableByUserId","userId","enabled","findByUserId","find","projection","findByChannels","channels","$in","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/Integrations.ts"],"sourcesContent":["import type { IIntegration, IUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IBaseModel, IIntegrationsModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, FindCursor, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class IntegrationsRaw extends BaseRaw<IIntegration> implements IIntegrationsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IIntegration>>) {\n\t\tsuper(db, 'integrations', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { type: 1 } }];\n\t}\n\n\tfindOneByUrl(url: string): Promise<IIntegration | null> {\n\t\treturn this.findOne({ url });\n\t}\n\n\tupdateRoomName(oldRoomName: string, newRoomName: string): ReturnType<IBaseModel<IIntegration>['updateMany']> {\n\t\tconst hashedOldRoomName = `#${oldRoomName}`;\n\t\tconst hashedNewRoomName = `#${newRoomName}`;\n\n\t\treturn this.updateMany(\n\t\t\t{\n\t\t\t\tchannel: hashedOldRoomName,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'channel.$': hashedNewRoomName,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tfindOneByIdAndCreatedByIfExists({\n\t\t_id,\n\t\tcreatedBy,\n\t}: {\n\t\t_id: IIntegration['_id'];\n\t\tcreatedBy?: IUser['_id'];\n\t}): Promise<IIntegration | null> {\n\t\treturn this.findOne({\n\t\t\t_id,\n\t\t\t...(createdBy && { '_createdBy._id': createdBy }),\n\t\t});\n\t}\n\n\tdisableByUserId(userId: IIntegration['userId']): ReturnType<IBaseModel<IIntegration>['updateMany']> {\n\t\treturn this.updateMany({ userId }, { $set: { enabled: false } });\n\t}\n\n\tfindByUserId(userId: IIntegration['userId']): FindCursor<Pick<IIntegration, '_id'>> {\n\t\treturn this.find({ userId }, { projection: { _id: 1 } });\n\t}\n\n\tfindByChannels(channels: IIntegration['channel']): FindCursor<IIntegration> {\n\t\treturn this.find({ channel: { $in: channels } });\n\t}\n}\n"],"mappings":";;;IAIA,IAAAA,aAAgB;IAAEC,MAAM,CAAAC,IAAA,uCAAY;MAAAC,QAAAC,CAAA;QAAAJ,aAAA,GAAAI,CAAA;MAAA;IAAA;IAApCH,MAAA,CAAOI,MAAE;MAAAC,eAAe,EAAAA,CAAA,KAAWA;IAAC;IAAA,IAAAC,OAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,QAAAH,CAAA;QAAAG,OAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,oBAAA,WAAAA,oBAAA;IAE9B,MAAOF,eAAgB,SAAQC,OAAqB;MACzDE,YAAYC,EAAM,EAAEC,KAAyD;QAC5E,KAAK,CAACD,EAAE,EAAE,cAAc,EAAEC,KAAK,CAAC;MACjC;MAEUC,YAAYA,CAAA;QACrB,OAAO,CAAC;UAAEC,GAAG,EAAE;YAAEC,IAAI,EAAE;UAAC;QAAE,CAAE,CAAC;MAC9B;MAEAC,YAAYA,CAACC,GAAW;QACvB,OAAO,IAAI,CAACC,OAAO,CAAC;UAAED;QAAG,CAAE,CAAC;MAC7B;MAEAE,cAAcA,CAACC,WAAmB,EAAEC,WAAmB;QACtD,MAAMC,iBAAiB,OAAAC,MAAA,CAAOH,WAAW,CAAE;QAC3C,MAAMI,iBAAiB,OAAAD,MAAA,CAAOF,WAAW,CAAE;QAE3C,OAAO,IAAI,CAACI,UAAU,CACrB;UACCC,OAAO,EAAEJ;SACT,EACD;UACCK,IAAI,EAAE;YACL,WAAW,EAAEH;;SAEd,CACD;MACF;MAEAI,+BAA+BA,CAAAC,IAAA,EAM9B;QAAA,IAN+B;UAC/BC,GAAG;UACHC;QAAS,CAIT,GAAAF,IAAA;QACA,OAAO,IAAI,CAACX,OAAO,CAAAjB,aAAA;UAClB6B;QAAG,GACCC,SAAS,IAAI;UAAE,gBAAgB,EAAEA;QAAS,CAAE,CAChD,CAAC;MACH;MAEAC,eAAeA,CAACC,MAA8B;QAC7C,OAAO,IAAI,CAACR,UAAU,CAAC;UAAEQ;QAAM,CAAE,EAAE;UAAEN,IAAI,EAAE;YAAEO,OAAO,EAAE;UAAK;QAAE,CAAE,CAAC;MACjE;MAEAC,YAAYA,CAACF,MAA8B;QAC1C,OAAO,IAAI,CAACG,IAAI,CAAC;UAAEH;QAAM,CAAE,EAAE;UAAEI,UAAU,EAAE;YAAEP,GAAG,EAAE;UAAC;QAAE,CAAE,CAAC;MACzD;MAEAQ,cAAcA,CAACC,QAAiC;QAC/C,OAAO,IAAI,CAACH,IAAI,CAAC;UAAEV,OAAO,EAAE;YAAEc,GAAG,EAAED;UAAQ;QAAE,CAAE,CAAC;MACjD;;IACAE,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0e77c8040fd6e263fa80a1ddd55480ad6837aab8"}
