{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/autotranslate/client/lib/actionButton.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/autotranslate/client/lib/actionButton.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/autotranslate/client/lib/actionButton.ts","inputSourceMap":{"version":3,"file":"app/autotranslate/client/lib/actionButton.ts","sourceRoot":"","sources":["app/autotranslate/client/lib/actionButton.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { roomCoordinator } from '../../../../client/lib/rooms/roomCoordinator';\nimport {\n\thasTranslationLanguageInAttachments,\n\thasTranslationLanguageInMessage,\n} from '../../../../client/views/room/MessageList/lib/autoTranslate';\nimport { hasAtLeastOnePermission } from '../../../authorization/client';\nimport { Messages } from '../../../models/client';\nimport { settings } from '../../../settings/client';\nimport { MessageAction } from '../../../ui-utils/client/lib/MessageAction';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { AutoTranslate } from './autotranslate';\n\nMeteor.startup(() => {\n\tAutoTranslate.init();\n\n\tTracker.autorun(() => {\n\t\tif (settings.get('AutoTranslate_Enabled') && hasAtLeastOnePermission(['auto-translate'])) {\n\t\t\tMessageAction.addButton({\n\t\t\t\tid: 'translate',\n\t\t\t\ticon: 'language',\n\t\t\t\tlabel: 'Translate',\n\t\t\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\t\t\ttype: 'interaction',\n\t\t\t\taction(_, { message }) {\n\t\t\t\t\tconst language = AutoTranslate.getLanguage(message.rid);\n\t\t\t\t\tif (!hasTranslationLanguageInMessage(message, language) && !hasTranslationLanguageInAttachments(message.attachments, language)) {\n\t\t\t\t\t\t(AutoTranslate.messageIdsToWait as any)[message._id] = true;\n\t\t\t\t\t\tMessages.update({ _id: message._id }, { $set: { autoTranslateFetching: true } });\n\t\t\t\t\t\tvoid sdk.call('autoTranslate.translateMessage', message, language);\n\t\t\t\t\t}\n\t\t\t\t\tconst action = 'autoTranslateShowInverse' in message ? '$unset' : '$set';\n\t\t\t\t\tMessages.update({ _id: message._id }, { [action]: { autoTranslateShowInverse: true } });\n\t\t\t\t},\n\t\t\t\tcondition({ message, subscription, user, room }) {\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst language = subscription?.autoTranslateLanguage || AutoTranslate.getLanguage(message.rid) || '';\n\t\t\t\t\tconst isLivechatRoom = roomCoordinator.isLivechatRoom(room?.t);\n\t\t\t\t\tconst isDifferentUser = message?.u && message.u._id !== user._id;\n\t\t\t\t\tconst autoTranslateEnabled = subscription?.autoTranslate || isLivechatRoom;\n\t\t\t\t\tconst hasLanguage =\n\t\t\t\t\t\thasTranslationLanguageInMessage(message, language) || hasTranslationLanguageInAttachments(message.attachments, language);\n\n\t\t\t\t\treturn Boolean(\n\t\t\t\t\t\t(message as { autoTranslateShowInverse?: boolean }).autoTranslateShowInverse ||\n\t\t\t\t\t\t\t(isDifferentUser && autoTranslateEnabled && !hasLanguage),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\torder: 90,\n\t\t\t});\n\t\t\tMessageAction.addButton({\n\t\t\t\tid: 'view-original',\n\t\t\t\ticon: 'language',\n\t\t\t\tlabel: 'View_original',\n\t\t\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\t\t\ttype: 'interaction',\n\t\t\t\taction(_, props) {\n\t\t\t\t\tconst { message } = props;\n\t\t\t\t\tconst language = AutoTranslate.getLanguage(message.rid);\n\t\t\t\t\tif (!hasTranslationLanguageInMessage(message, language) && !hasTranslationLanguageInAttachments(message.attachments, language)) {\n\t\t\t\t\t\t(AutoTranslate.messageIdsToWait as any)[message._id] = true;\n\t\t\t\t\t\tMessages.update({ _id: message._id }, { $set: { autoTranslateFetching: true } });\n\t\t\t\t\t\tvoid sdk.call('autoTranslate.translateMessage', message, language);\n\t\t\t\t\t}\n\t\t\t\t\tconst action = 'autoTranslateShowInverse' in message ? '$unset' : '$set';\n\t\t\t\t\tMessages.update({ _id: message._id }, { [action]: { autoTranslateShowInverse: true } });\n\t\t\t\t},\n\t\t\t\tcondition({ message, subscription, user, room }) {\n\t\t\t\t\tconst language = subscription?.autoTranslateLanguage || AutoTranslate.getLanguage(message.rid) || '';\n\t\t\t\t\tconst isLivechatRoom = roomCoordinator.isLivechatRoom(room?.t);\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst isDifferentUser = message?.u && message.u._id !== user._id;\n\t\t\t\t\tconst autoTranslateEnabled = subscription?.autoTranslate || isLivechatRoom;\n\t\t\t\t\tconst hasLanguage =\n\t\t\t\t\t\thasTranslationLanguageInMessage(message, language) || hasTranslationLanguageInAttachments(message.attachments, language);\n\n\t\t\t\t\treturn Boolean(\n\t\t\t\t\t\t!(message as { autoTranslateShowInverse?: boolean }).autoTranslateShowInverse &&\n\t\t\t\t\t\t\tisDifferentUser &&\n\t\t\t\t\t\t\tautoTranslateEnabled &&\n\t\t\t\t\t\t\thasLanguage,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\torder: 90,\n\t\t\t});\n\t\t} else {\n\t\t\tMessageAction.removeButton('toggle-language');\n\t\t}\n\t});\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/autotranslate/client/lib/actionButton.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/autotranslate/client/lib/actionButton.ts","inputSourceMap":{"version":3,"file":"app/autotranslate/client/lib/actionButton.ts","sourceRoot":"","sources":["app/autotranslate/client/lib/actionButton.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { roomCoordinator } from '../../../../client/lib/rooms/roomCoordinator';\nimport {\n\thasTranslationLanguageInAttachments,\n\thasTranslationLanguageInMessage,\n} from '../../../../client/views/room/MessageList/lib/autoTranslate';\nimport { hasAtLeastOnePermission } from '../../../authorization/client';\nimport { Messages } from '../../../models/client';\nimport { settings } from '../../../settings/client';\nimport { MessageAction } from '../../../ui-utils/client/lib/MessageAction';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { AutoTranslate } from './autotranslate';\n\nMeteor.startup(() => {\n\tAutoTranslate.init();\n\n\tTracker.autorun(() => {\n\t\tif (settings.get('AutoTranslate_Enabled') && hasAtLeastOnePermission(['auto-translate'])) {\n\t\t\tMessageAction.addButton({\n\t\t\t\tid: 'translate',\n\t\t\t\ticon: 'language',\n\t\t\t\tlabel: 'Translate',\n\t\t\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\t\t\ttype: 'interaction',\n\t\t\t\taction(_, { message }) {\n\t\t\t\t\tconst language = AutoTranslate.getLanguage(message.rid);\n\t\t\t\t\tif (!hasTranslationLanguageInMessage(message, language) && !hasTranslationLanguageInAttachments(message.attachments, language)) {\n\t\t\t\t\t\t(AutoTranslate.messageIdsToWait as any)[message._id] = true;\n\t\t\t\t\t\tMessages.update({ _id: message._id }, { $set: { autoTranslateFetching: true } });\n\t\t\t\t\t\tvoid sdk.call('autoTranslate.translateMessage', message, language);\n\t\t\t\t\t}\n\t\t\t\t\tconst action = 'autoTranslateShowInverse' in message ? '$unset' : '$set';\n\t\t\t\t\tMessages.update({ _id: message._id }, { [action]: { autoTranslateShowInverse: true } });\n\t\t\t\t},\n\t\t\t\tcondition({ message, subscription, user, room }) {\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst language = subscription?.autoTranslateLanguage || AutoTranslate.getLanguage(message.rid) || '';\n\t\t\t\t\tconst isLivechatRoom = roomCoordinator.isLivechatRoom(room?.t);\n\t\t\t\t\tconst isDifferentUser = message?.u && message.u._id !== user._id;\n\t\t\t\t\tconst autoTranslateEnabled = subscription?.autoTranslate || isLivechatRoom;\n\t\t\t\t\tconst hasLanguage =\n\t\t\t\t\t\thasTranslationLanguageInMessage(message, language) || hasTranslationLanguageInAttachments(message.attachments, language);\n\n\t\t\t\t\treturn Boolean(\n\t\t\t\t\t\t(message as { autoTranslateShowInverse?: boolean }).autoTranslateShowInverse ||\n\t\t\t\t\t\t\t(isDifferentUser && autoTranslateEnabled && !hasLanguage),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\torder: 90,\n\t\t\t});\n\t\t\tMessageAction.addButton({\n\t\t\t\tid: 'view-original',\n\t\t\t\ticon: 'language',\n\t\t\t\tlabel: 'View_original',\n\t\t\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\t\t\ttype: 'interaction',\n\t\t\t\taction(_, props) {\n\t\t\t\t\tconst { message } = props;\n\t\t\t\t\tconst language = AutoTranslate.getLanguage(message.rid);\n\t\t\t\t\tif (!hasTranslationLanguageInMessage(message, language) && !hasTranslationLanguageInAttachments(message.attachments, language)) {\n\t\t\t\t\t\t(AutoTranslate.messageIdsToWait as any)[message._id] = true;\n\t\t\t\t\t\tMessages.update({ _id: message._id }, { $set: { autoTranslateFetching: true } });\n\t\t\t\t\t\tvoid sdk.call('autoTranslate.translateMessage', message, language);\n\t\t\t\t\t}\n\t\t\t\t\tconst action = 'autoTranslateShowInverse' in message ? '$unset' : '$set';\n\t\t\t\t\tMessages.update({ _id: message._id }, { [action]: { autoTranslateShowInverse: true } });\n\t\t\t\t},\n\t\t\t\tcondition({ message, subscription, user, room }) {\n\t\t\t\t\tconst language = subscription?.autoTranslateLanguage || AutoTranslate.getLanguage(message.rid) || '';\n\t\t\t\t\tconst isLivechatRoom = roomCoordinator.isLivechatRoom(room?.t);\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst isDifferentUser = message?.u && message.u._id !== user._id;\n\t\t\t\t\tconst autoTranslateEnabled = subscription?.autoTranslate || isLivechatRoom;\n\t\t\t\t\tconst hasLanguage =\n\t\t\t\t\t\thasTranslationLanguageInMessage(message, language) || hasTranslationLanguageInAttachments(message.attachments, language);\n\n\t\t\t\t\treturn Boolean(\n\t\t\t\t\t\t!(message as { autoTranslateShowInverse?: boolean }).autoTranslateShowInverse &&\n\t\t\t\t\t\t\tisDifferentUser &&\n\t\t\t\t\t\t\tautoTranslateEnabled &&\n\t\t\t\t\t\t\thasLanguage,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\torder: 90,\n\t\t\t});\n\t\t} else {\n\t\t\tMessageAction.removeButton('toggle-language');\n\t\t}\n\t});\n});\n"]}}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 0);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n}, 1);\nlet roomCoordinator;\nmodule.link(\"../../../../client/lib/rooms/roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n}, 2);\nlet hasTranslationLanguageInAttachments, hasTranslationLanguageInMessage;\nmodule.link(\"../../../../client/views/room/MessageList/lib/autoTranslate\", {\n  hasTranslationLanguageInAttachments(v) {\n    hasTranslationLanguageInAttachments = v;\n  },\n  hasTranslationLanguageInMessage(v) {\n    hasTranslationLanguageInMessage = v;\n  }\n}, 3);\nlet hasAtLeastOnePermission;\nmodule.link(\"../../../authorization/client\", {\n  hasAtLeastOnePermission(v) {\n    hasAtLeastOnePermission = v;\n  }\n}, 4);\nlet Messages;\nmodule.link(\"../../../models/client\", {\n  Messages(v) {\n    Messages = v;\n  }\n}, 5);\nlet settings;\nmodule.link(\"../../../settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n}, 6);\nlet MessageAction;\nmodule.link(\"../../../ui-utils/client/lib/MessageAction\", {\n  MessageAction(v) {\n    MessageAction = v;\n  }\n}, 7);\nlet sdk;\nmodule.link(\"../../../utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 8);\nlet AutoTranslate;\nmodule.link(\"./autotranslate\", {\n  AutoTranslate(v) {\n    AutoTranslate = v;\n  }\n}, 9);\nMeteor.startup(() => {\n  AutoTranslate.init();\n  Tracker.autorun(() => {\n    if (settings.get('AutoTranslate_Enabled') && hasAtLeastOnePermission(['auto-translate'])) {\n      MessageAction.addButton({\n        id: 'translate',\n        icon: 'language',\n        label: 'Translate',\n        context: ['message', 'message-mobile', 'threads'],\n        type: 'interaction',\n        action(_, _ref) {\n          let {\n            message\n          } = _ref;\n          const language = AutoTranslate.getLanguage(message.rid);\n          if (!hasTranslationLanguageInMessage(message, language) && !hasTranslationLanguageInAttachments(message.attachments, language)) {\n            AutoTranslate.messageIdsToWait[message._id] = true;\n            Messages.update({\n              _id: message._id\n            }, {\n              $set: {\n                autoTranslateFetching: true\n              }\n            });\n            void sdk.call('autoTranslate.translateMessage', message, language);\n          }\n          const action = 'autoTranslateShowInverse' in message ? '$unset' : '$set';\n          Messages.update({\n            _id: message._id\n          }, {\n            [action]: {\n              autoTranslateShowInverse: true\n            }\n          });\n        },\n        condition(_ref2) {\n          let {\n            message,\n            subscription,\n            user,\n            room\n          } = _ref2;\n          if (!user) {\n            return false;\n          }\n          const language = (subscription === null || subscription === void 0 ? void 0 : subscription.autoTranslateLanguage) || AutoTranslate.getLanguage(message.rid) || '';\n          const isLivechatRoom = roomCoordinator.isLivechatRoom(room === null || room === void 0 ? void 0 : room.t);\n          const isDifferentUser = (message === null || message === void 0 ? void 0 : message.u) && message.u._id !== user._id;\n          const autoTranslateEnabled = (subscription === null || subscription === void 0 ? void 0 : subscription.autoTranslate) || isLivechatRoom;\n          const hasLanguage = hasTranslationLanguageInMessage(message, language) || hasTranslationLanguageInAttachments(message.attachments, language);\n          return Boolean(message.autoTranslateShowInverse || isDifferentUser && autoTranslateEnabled && !hasLanguage);\n        },\n        order: 90\n      });\n      MessageAction.addButton({\n        id: 'view-original',\n        icon: 'language',\n        label: 'View_original',\n        context: ['message', 'message-mobile', 'threads'],\n        type: 'interaction',\n        action(_, props) {\n          const {\n            message\n          } = props;\n          const language = AutoTranslate.getLanguage(message.rid);\n          if (!hasTranslationLanguageInMessage(message, language) && !hasTranslationLanguageInAttachments(message.attachments, language)) {\n            AutoTranslate.messageIdsToWait[message._id] = true;\n            Messages.update({\n              _id: message._id\n            }, {\n              $set: {\n                autoTranslateFetching: true\n              }\n            });\n            void sdk.call('autoTranslate.translateMessage', message, language);\n          }\n          const action = 'autoTranslateShowInverse' in message ? '$unset' : '$set';\n          Messages.update({\n            _id: message._id\n          }, {\n            [action]: {\n              autoTranslateShowInverse: true\n            }\n          });\n        },\n        condition(_ref3) {\n          let {\n            message,\n            subscription,\n            user,\n            room\n          } = _ref3;\n          const language = (subscription === null || subscription === void 0 ? void 0 : subscription.autoTranslateLanguage) || AutoTranslate.getLanguage(message.rid) || '';\n          const isLivechatRoom = roomCoordinator.isLivechatRoom(room === null || room === void 0 ? void 0 : room.t);\n          if (!user) {\n            return false;\n          }\n          const isDifferentUser = (message === null || message === void 0 ? void 0 : message.u) && message.u._id !== user._id;\n          const autoTranslateEnabled = (subscription === null || subscription === void 0 ? void 0 : subscription.autoTranslate) || isLivechatRoom;\n          const hasLanguage = hasTranslationLanguageInMessage(message, language) || hasTranslationLanguageInAttachments(message.attachments, language);\n          return Boolean(!message.autoTranslateShowInverse && isDifferentUser && autoTranslateEnabled && hasLanguage);\n        },\n        order: 90\n      });\n    } else {\n      MessageAction.removeButton('toggle-language');\n    }\n  });\n});","map":{"version":3,"names":["Meteor","module","link","v","Tracker","roomCoordinator","hasTranslationLanguageInAttachments","hasTranslationLanguageInMessage","hasAtLeastOnePermission","Messages","settings","MessageAction","sdk","AutoTranslate","startup","init","autorun","get","addButton","id","icon","label","context","type","action","_","_ref","message","language","getLanguage","rid","attachments","messageIdsToWait","_id","update","$set","autoTranslateFetching","call","autoTranslateShowInverse","condition","_ref2","subscription","user","room","autoTranslateLanguage","isLivechatRoom","t","isDifferentUser","u","autoTranslateEnabled","autoTranslate","hasLanguage","Boolean","order","props","_ref3","removeButton"],"sources":["app/autotranslate/client/lib/actionButton.ts"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { roomCoordinator } from '../../../../client/lib/rooms/roomCoordinator';\nimport {\n\thasTranslationLanguageInAttachments,\n\thasTranslationLanguageInMessage,\n} from '../../../../client/views/room/MessageList/lib/autoTranslate';\nimport { hasAtLeastOnePermission } from '../../../authorization/client';\nimport { Messages } from '../../../models/client';\nimport { settings } from '../../../settings/client';\nimport { MessageAction } from '../../../ui-utils/client/lib/MessageAction';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { AutoTranslate } from './autotranslate';\n\nMeteor.startup(() => {\n\tAutoTranslate.init();\n\n\tTracker.autorun(() => {\n\t\tif (settings.get('AutoTranslate_Enabled') && hasAtLeastOnePermission(['auto-translate'])) {\n\t\t\tMessageAction.addButton({\n\t\t\t\tid: 'translate',\n\t\t\t\ticon: 'language',\n\t\t\t\tlabel: 'Translate',\n\t\t\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\t\t\ttype: 'interaction',\n\t\t\t\taction(_, { message }) {\n\t\t\t\t\tconst language = AutoTranslate.getLanguage(message.rid);\n\t\t\t\t\tif (!hasTranslationLanguageInMessage(message, language) && !hasTranslationLanguageInAttachments(message.attachments, language)) {\n\t\t\t\t\t\t(AutoTranslate.messageIdsToWait as any)[message._id] = true;\n\t\t\t\t\t\tMessages.update({ _id: message._id }, { $set: { autoTranslateFetching: true } });\n\t\t\t\t\t\tvoid sdk.call('autoTranslate.translateMessage', message, language);\n\t\t\t\t\t}\n\t\t\t\t\tconst action = 'autoTranslateShowInverse' in message ? '$unset' : '$set';\n\t\t\t\t\tMessages.update({ _id: message._id }, { [action]: { autoTranslateShowInverse: true } });\n\t\t\t\t},\n\t\t\t\tcondition({ message, subscription, user, room }) {\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst language = subscription?.autoTranslateLanguage || AutoTranslate.getLanguage(message.rid) || '';\n\t\t\t\t\tconst isLivechatRoom = roomCoordinator.isLivechatRoom(room?.t);\n\t\t\t\t\tconst isDifferentUser = message?.u && message.u._id !== user._id;\n\t\t\t\t\tconst autoTranslateEnabled = subscription?.autoTranslate || isLivechatRoom;\n\t\t\t\t\tconst hasLanguage =\n\t\t\t\t\t\thasTranslationLanguageInMessage(message, language) || hasTranslationLanguageInAttachments(message.attachments, language);\n\n\t\t\t\t\treturn Boolean(\n\t\t\t\t\t\t(message as { autoTranslateShowInverse?: boolean }).autoTranslateShowInverse ||\n\t\t\t\t\t\t\t(isDifferentUser && autoTranslateEnabled && !hasLanguage),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\torder: 90,\n\t\t\t});\n\t\t\tMessageAction.addButton({\n\t\t\t\tid: 'view-original',\n\t\t\t\ticon: 'language',\n\t\t\t\tlabel: 'View_original',\n\t\t\t\tcontext: ['message', 'message-mobile', 'threads'],\n\t\t\t\ttype: 'interaction',\n\t\t\t\taction(_, props) {\n\t\t\t\t\tconst { message } = props;\n\t\t\t\t\tconst language = AutoTranslate.getLanguage(message.rid);\n\t\t\t\t\tif (!hasTranslationLanguageInMessage(message, language) && !hasTranslationLanguageInAttachments(message.attachments, language)) {\n\t\t\t\t\t\t(AutoTranslate.messageIdsToWait as any)[message._id] = true;\n\t\t\t\t\t\tMessages.update({ _id: message._id }, { $set: { autoTranslateFetching: true } });\n\t\t\t\t\t\tvoid sdk.call('autoTranslate.translateMessage', message, language);\n\t\t\t\t\t}\n\t\t\t\t\tconst action = 'autoTranslateShowInverse' in message ? '$unset' : '$set';\n\t\t\t\t\tMessages.update({ _id: message._id }, { [action]: { autoTranslateShowInverse: true } });\n\t\t\t\t},\n\t\t\t\tcondition({ message, subscription, user, room }) {\n\t\t\t\t\tconst language = subscription?.autoTranslateLanguage || AutoTranslate.getLanguage(message.rid) || '';\n\t\t\t\t\tconst isLivechatRoom = roomCoordinator.isLivechatRoom(room?.t);\n\t\t\t\t\tif (!user) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst isDifferentUser = message?.u && message.u._id !== user._id;\n\t\t\t\t\tconst autoTranslateEnabled = subscription?.autoTranslate || isLivechatRoom;\n\t\t\t\t\tconst hasLanguage =\n\t\t\t\t\t\thasTranslationLanguageInMessage(message, language) || hasTranslationLanguageInAttachments(message.attachments, language);\n\n\t\t\t\t\treturn Boolean(\n\t\t\t\t\t\t!(message as { autoTranslateShowInverse?: boolean }).autoTranslateShowInverse &&\n\t\t\t\t\t\t\tisDifferentUser &&\n\t\t\t\t\t\t\tautoTranslateEnabled &&\n\t\t\t\t\t\t\thasLanguage,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\torder: 90,\n\t\t\t});\n\t\t} else {\n\t\t\tMessageAction.removeButton('toggle-language');\n\t\t}\n\t});\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6c4f13a9dfd7734a3509f82ede17c0752b4aff9a"}
