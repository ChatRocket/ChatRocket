{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/utils/server/functions/getMongoInfo.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/utils/server/functions/getMongoInfo.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/utils/server/functions/getMongoInfo.ts","inputSourceMap":{"version":3,"file":"app/utils/server/functions/getMongoInfo.ts","sourceRoot":"","sources":["app/utils/server/functions/getMongoInfo.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAE9C,OAAO,EAAE,gBAAgB,EAAE,MAAM,qDAAqD,CAAC;AAEvF,SAAS,YAAY;IACpB,MAAM,EAAE,KAAK,EAAE,GAAG,cAAc,CAAC,6BAA6B,EAAE,CAAC;IAEjE,MAAM,YAAY,GAAG,gBAAgB,EAAE,CAAC;IAExC,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;AAChC,CAAC;AAED,KAAK,UAAU,iBAAiB;IAM/B,IAAI,YAAY,CAAC;IACjB,IAAI,kBAAkB,CAAC;IAEvB,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,YAAY,EAAE,CAAC;IAE/C,IAAI,CAAC;QACJ,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7D,YAAY,GAAG,OAAO,CAAC;QACvB,kBAAkB,GAAG,SAAS,CAAC;IAChC,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACZ,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;QACpD,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC7B,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;QACpD,OAAO,CAAC,KAAK,CAAC,+EAA+E,CAAC,CAAC;QAC/F,OAAO,CAAC,KAAK,CAAC,oFAAoF,CAAC,CAAC;QACpG,OAAO,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;QACxF,OAAO,CAAC,KAAK,CAAC,uEAAuE,CAAC,CAAC;QACvF,OAAO,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC;QAClE,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAClB,OAAO,CAAC,KAAK,CAAC,qGAAqG,CAAC,CAAC;QACrH,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAClB,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACrD,CAAC;IAED,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC;AAClE,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,YAAY;IAMjC,IAAI,YAAY,CAAC;IACjB,IAAI,kBAAkB,CAAC;IAEvB,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,YAAY,EAAE,CAAC;IAE/C,IAAI,CAAC;QACJ,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,GAAG,MAAM,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;QAE/E,YAAY,GAAG,OAAO,CAAC;QACvB,kBAAkB,GAAG,aAAa,CAAC,IAAI,CAAC;IACzC,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACZ,OAAO,iBAAiB,EAAE,CAAC;IAC5B,CAAC;IAED,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC;AAClE,CAAC","sourcesContent":["import { MongoInternals } from 'meteor/mongo';\n\nimport { isWatcherRunning } from '../../../../server/modules/watchers/watchers.module';\n\nfunction getOplogInfo(): { oplogEnabled: boolean; mongo: MongoConnection } {\n\tconst { mongo } = MongoInternals.defaultRemoteCollectionDriver();\n\n\tconst oplogEnabled = isWatcherRunning();\n\n\treturn { oplogEnabled, mongo };\n}\n\nasync function fallbackMongoInfo(): Promise<{\n\toplogEnabled: boolean;\n\tmongoVersion: string;\n\tmongoStorageEngine?: string;\n\tmongo: MongoConnection;\n}> {\n\tlet mongoVersion;\n\tlet mongoStorageEngine;\n\n\tconst { oplogEnabled, mongo } = getOplogInfo();\n\n\ttry {\n\t\tconst { version } = await mongo.db.command({ buildinfo: 1 });\n\t\tmongoVersion = version;\n\t\tmongoStorageEngine = 'unknown';\n\t} catch (e) {\n\t\tconsole.error('=== Error getting MongoDB info ===');\n\t\tconsole.error(e?.toString());\n\t\tconsole.error('----------------------------------');\n\t\tconsole.error(\"Without mongodb version we can't ensure you are running a compatible version.\");\n\t\tconsole.error('If you are running your mongodb with auth enabled and an user different from admin');\n\t\tconsole.error('you may need to grant permissions for this user to check cluster data.');\n\t\tconsole.error('You can do it via mongo shell running the following command replacing');\n\t\tconsole.error(\"the string YOUR_USER by the correct user's name:\");\n\t\tconsole.error('');\n\t\tconsole.error('   db.runCommand({ grantRolesToUser: \"YOUR_USER\" , roles: [{role: \"clusterMonitor\", db: \"admin\"}]})');\n\t\tconsole.error('');\n\t\tconsole.error('==================================');\n\t}\n\n\treturn { oplogEnabled, mongoVersion, mongoStorageEngine, mongo };\n}\n\nexport async function getMongoInfo(): Promise<{\n\toplogEnabled: boolean;\n\tmongoVersion: string;\n\tmongoStorageEngine?: string;\n\tmongo: MongoConnection;\n}> {\n\tlet mongoVersion;\n\tlet mongoStorageEngine;\n\n\tconst { oplogEnabled, mongo } = getOplogInfo();\n\n\ttry {\n\t\tconst { version, storageEngine } = await mongo.db.command({ serverStatus: 1 });\n\n\t\tmongoVersion = version;\n\t\tmongoStorageEngine = storageEngine.name;\n\t} catch (e) {\n\t\treturn fallbackMongoInfo();\n\t}\n\n\treturn { oplogEnabled, mongoVersion, mongoStorageEngine, mongo };\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/utils/server/functions/getMongoInfo.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/utils/server/functions/getMongoInfo.ts","inputSourceMap":{"version":3,"file":"app/utils/server/functions/getMongoInfo.ts","sourceRoot":"","sources":["app/utils/server/functions/getMongoInfo.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAE9C,OAAO,EAAE,gBAAgB,EAAE,MAAM,qDAAqD,CAAC;AAEvF,SAAS,YAAY;IACpB,MAAM,EAAE,KAAK,EAAE,GAAG,cAAc,CAAC,6BAA6B,EAAE,CAAC;IAEjE,MAAM,YAAY,GAAG,gBAAgB,EAAE,CAAC;IAExC,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;AAChC,CAAC;AAED,KAAK,UAAU,iBAAiB;IAM/B,IAAI,YAAY,CAAC;IACjB,IAAI,kBAAkB,CAAC;IAEvB,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,YAAY,EAAE,CAAC;IAE/C,IAAI,CAAC;QACJ,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;QAC7D,YAAY,GAAG,OAAO,CAAC;QACvB,kBAAkB,GAAG,SAAS,CAAC;IAChC,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACZ,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;QACpD,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC7B,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;QACpD,OAAO,CAAC,KAAK,CAAC,+EAA+E,CAAC,CAAC;QAC/F,OAAO,CAAC,KAAK,CAAC,oFAAoF,CAAC,CAAC;QACpG,OAAO,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;QACxF,OAAO,CAAC,KAAK,CAAC,uEAAuE,CAAC,CAAC;QACvF,OAAO,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC;QAClE,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAClB,OAAO,CAAC,KAAK,CAAC,qGAAqG,CAAC,CAAC;QACrH,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAClB,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACrD,CAAC;IAED,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC;AAClE,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,YAAY;IAMjC,IAAI,YAAY,CAAC;IACjB,IAAI,kBAAkB,CAAC;IAEvB,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,YAAY,EAAE,CAAC;IAE/C,IAAI,CAAC;QACJ,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,GAAG,MAAM,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;QAE/E,YAAY,GAAG,OAAO,CAAC;QACvB,kBAAkB,GAAG,aAAa,CAAC,IAAI,CAAC;IACzC,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACZ,OAAO,iBAAiB,EAAE,CAAC;IAC5B,CAAC;IAED,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC;AAClE,CAAC","sourcesContent":["import { MongoInternals } from 'meteor/mongo';\n\nimport { isWatcherRunning } from '../../../../server/modules/watchers/watchers.module';\n\nfunction getOplogInfo(): { oplogEnabled: boolean; mongo: MongoConnection } {\n\tconst { mongo } = MongoInternals.defaultRemoteCollectionDriver();\n\n\tconst oplogEnabled = isWatcherRunning();\n\n\treturn { oplogEnabled, mongo };\n}\n\nasync function fallbackMongoInfo(): Promise<{\n\toplogEnabled: boolean;\n\tmongoVersion: string;\n\tmongoStorageEngine?: string;\n\tmongo: MongoConnection;\n}> {\n\tlet mongoVersion;\n\tlet mongoStorageEngine;\n\n\tconst { oplogEnabled, mongo } = getOplogInfo();\n\n\ttry {\n\t\tconst { version } = await mongo.db.command({ buildinfo: 1 });\n\t\tmongoVersion = version;\n\t\tmongoStorageEngine = 'unknown';\n\t} catch (e) {\n\t\tconsole.error('=== Error getting MongoDB info ===');\n\t\tconsole.error(e?.toString());\n\t\tconsole.error('----------------------------------');\n\t\tconsole.error(\"Without mongodb version we can't ensure you are running a compatible version.\");\n\t\tconsole.error('If you are running your mongodb with auth enabled and an user different from admin');\n\t\tconsole.error('you may need to grant permissions for this user to check cluster data.');\n\t\tconsole.error('You can do it via mongo shell running the following command replacing');\n\t\tconsole.error(\"the string YOUR_USER by the correct user's name:\");\n\t\tconsole.error('');\n\t\tconsole.error('   db.runCommand({ grantRolesToUser: \"YOUR_USER\" , roles: [{role: \"clusterMonitor\", db: \"admin\"}]})');\n\t\tconsole.error('');\n\t\tconsole.error('==================================');\n\t}\n\n\treturn { oplogEnabled, mongoVersion, mongoStorageEngine, mongo };\n}\n\nexport async function getMongoInfo(): Promise<{\n\toplogEnabled: boolean;\n\tmongoVersion: string;\n\tmongoStorageEngine?: string;\n\tmongo: MongoConnection;\n}> {\n\tlet mongoVersion;\n\tlet mongoStorageEngine;\n\n\tconst { oplogEnabled, mongo } = getOplogInfo();\n\n\ttry {\n\t\tconst { version, storageEngine } = await mongo.db.command({ serverStatus: 1 });\n\n\t\tmongoVersion = version;\n\t\tmongoStorageEngine = storageEngine.name;\n\t} catch (e) {\n\t\treturn fallbackMongoInfo();\n\t}\n\n\treturn { oplogEnabled, mongoVersion, mongoStorageEngine, mongo };\n}\n"]}}},"code":"!module.wrapAsync(async function (module1, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module1.export({\n      getMongoInfo: () => getMongoInfo\n    });\n    let MongoInternals;\n    module1.link(\"meteor/mongo\", {\n      MongoInternals(v) {\n        MongoInternals = v;\n      }\n    }, 0);\n    let isWatcherRunning;\n    module1.link(\"../../../../server/modules/watchers/watchers.module\", {\n      isWatcherRunning(v) {\n        isWatcherRunning = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    function getOplogInfo() {\n      const {\n        mongo\n      } = MongoInternals.defaultRemoteCollectionDriver();\n      const oplogEnabled = isWatcherRunning();\n      return {\n        oplogEnabled,\n        mongo\n      };\n    }\n    async function fallbackMongoInfo() {\n      let mongoVersion;\n      let mongoStorageEngine;\n      const {\n        oplogEnabled,\n        mongo\n      } = getOplogInfo();\n      try {\n        const {\n          version\n        } = await mongo.db.command({\n          buildinfo: 1\n        });\n        mongoVersion = version;\n        mongoStorageEngine = 'unknown';\n      } catch (e) {\n        console.error('=== Error getting MongoDB info ===');\n        console.error(e === null || e === void 0 ? void 0 : e.toString());\n        console.error('----------------------------------');\n        console.error(\"Without mongodb version we can't ensure you are running a compatible version.\");\n        console.error('If you are running your mongodb with auth enabled and an user different from admin');\n        console.error('you may need to grant permissions for this user to check cluster data.');\n        console.error('You can do it via mongo shell running the following command replacing');\n        console.error(\"the string YOUR_USER by the correct user's name:\");\n        console.error('');\n        console.error('   db.runCommand({ grantRolesToUser: \"YOUR_USER\" , roles: [{role: \"clusterMonitor\", db: \"admin\"}]})');\n        console.error('');\n        console.error('==================================');\n      }\n      return {\n        oplogEnabled,\n        mongoVersion,\n        mongoStorageEngine,\n        mongo\n      };\n    }\n    async function getMongoInfo() {\n      let mongoVersion;\n      let mongoStorageEngine;\n      const {\n        oplogEnabled,\n        mongo\n      } = getOplogInfo();\n      try {\n        const {\n          version,\n          storageEngine\n        } = await mongo.db.command({\n          serverStatus: 1\n        });\n        mongoVersion = version;\n        mongoStorageEngine = storageEngine.name;\n      } catch (e) {\n        return fallbackMongoInfo();\n      }\n      return {\n        oplogEnabled,\n        mongoVersion,\n        mongoStorageEngine,\n        mongo\n      };\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module1","export","getMongoInfo","MongoInternals","link","v","isWatcherRunning","__reifyWaitForDeps__","getOplogInfo","mongo","defaultRemoteCollectionDriver","oplogEnabled","fallbackMongoInfo","mongoVersion","mongoStorageEngine","version","db","command","buildinfo","e","console","error","toString","storageEngine","serverStatus","name","__reify_async_result__","_reifyError","self","async"],"sources":["app/utils/server/functions/getMongoInfo.ts"],"sourcesContent":["import { MongoInternals } from 'meteor/mongo';\n\nimport { isWatcherRunning } from '../../../../server/modules/watchers/watchers.module';\n\nfunction getOplogInfo(): { oplogEnabled: boolean; mongo: MongoConnection } {\n\tconst { mongo } = MongoInternals.defaultRemoteCollectionDriver();\n\n\tconst oplogEnabled = isWatcherRunning();\n\n\treturn { oplogEnabled, mongo };\n}\n\nasync function fallbackMongoInfo(): Promise<{\n\toplogEnabled: boolean;\n\tmongoVersion: string;\n\tmongoStorageEngine?: string;\n\tmongo: MongoConnection;\n}> {\n\tlet mongoVersion;\n\tlet mongoStorageEngine;\n\n\tconst { oplogEnabled, mongo } = getOplogInfo();\n\n\ttry {\n\t\tconst { version } = await mongo.db.command({ buildinfo: 1 });\n\t\tmongoVersion = version;\n\t\tmongoStorageEngine = 'unknown';\n\t} catch (e) {\n\t\tconsole.error('=== Error getting MongoDB info ===');\n\t\tconsole.error(e?.toString());\n\t\tconsole.error('----------------------------------');\n\t\tconsole.error(\"Without mongodb version we can't ensure you are running a compatible version.\");\n\t\tconsole.error('If you are running your mongodb with auth enabled and an user different from admin');\n\t\tconsole.error('you may need to grant permissions for this user to check cluster data.');\n\t\tconsole.error('You can do it via mongo shell running the following command replacing');\n\t\tconsole.error(\"the string YOUR_USER by the correct user's name:\");\n\t\tconsole.error('');\n\t\tconsole.error('   db.runCommand({ grantRolesToUser: \"YOUR_USER\" , roles: [{role: \"clusterMonitor\", db: \"admin\"}]})');\n\t\tconsole.error('');\n\t\tconsole.error('==================================');\n\t}\n\n\treturn { oplogEnabled, mongoVersion, mongoStorageEngine, mongo };\n}\n\nexport async function getMongoInfo(): Promise<{\n\toplogEnabled: boolean;\n\tmongoVersion: string;\n\tmongoStorageEngine?: string;\n\tmongo: MongoConnection;\n}> {\n\tlet mongoVersion;\n\tlet mongoStorageEngine;\n\n\tconst { oplogEnabled, mongo } = getOplogInfo();\n\n\ttry {\n\t\tconst { version, storageEngine } = await mongo.db.command({ serverStatus: 1 });\n\n\t\tmongoVersion = version;\n\t\tmongoStorageEngine = storageEngine.name;\n\t} catch (e) {\n\t\treturn fallbackMongoInfo();\n\t}\n\n\treturn { oplogEnabled, mongoVersion, mongoStorageEngine, mongo };\n}\n"],"mappings":";;;IAAAA,OAAO,CAAAC,MAAE;MAAAC,YAAgB,EAAAA,CAAA,KAAMA;IAAc,CAAC;IAAA,IAAAC,cAAA;IAAAH,OAAA,CAAAI,IAAA;MAAAD,eAAAE,CAAA;QAAAF,cAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,gBAAA;IAAAN,OAAA,CAAAI,IAAA;MAAAE,iBAAAD,CAAA;QAAAC,gBAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,oBAAA,WAAAA,oBAAA;IAI9C,SAASC,YAAYA,CAAA;MACpB,MAAM;QAAEC;MAAK,CAAE,GAAGN,cAAc,CAACO,6BAA6B,EAAE;MAEhE,MAAMC,YAAY,GAAGL,gBAAgB,EAAE;MAEvC,OAAO;QAAEK,YAAY;QAAEF;MAAK,CAAE;IAC/B;IAEA,eAAeG,iBAAiBA,CAAA;MAM/B,IAAIC,YAAY;MAChB,IAAIC,kBAAkB;MAEtB,MAAM;QAAEH,YAAY;QAAEF;MAAK,CAAE,GAAGD,YAAY,EAAE;MAE9C,IAAI;QACH,MAAM;UAAEO;QAAO,CAAE,GAAG,MAAMN,KAAK,CAACO,EAAE,CAACC,OAAO,CAAC;UAAEC,SAAS,EAAE;QAAC,CAAE,CAAC;QAC5DL,YAAY,GAAGE,OAAO;QACtBD,kBAAkB,GAAG,SAAS;MAC/B,CAAC,CAAC,OAAOK,CAAC,EAAE;QACXC,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC;QACnDD,OAAO,CAACC,KAAK,CAACF,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEG,QAAQ,EAAE,CAAC;QAC5BF,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC;QACnDD,OAAO,CAACC,KAAK,CAAC,+EAA+E,CAAC;QAC9FD,OAAO,CAACC,KAAK,CAAC,oFAAoF,CAAC;QACnGD,OAAO,CAACC,KAAK,CAAC,wEAAwE,CAAC;QACvFD,OAAO,CAACC,KAAK,CAAC,uEAAuE,CAAC;QACtFD,OAAO,CAACC,KAAK,CAAC,kDAAkD,CAAC;QACjED,OAAO,CAACC,KAAK,CAAC,EAAE,CAAC;QACjBD,OAAO,CAACC,KAAK,CAAC,qGAAqG,CAAC;QACpHD,OAAO,CAACC,KAAK,CAAC,EAAE,CAAC;QACjBD,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC;MACpD;MAEA,OAAO;QAAEV,YAAY;QAAEE,YAAY;QAAEC,kBAAkB;QAAEL;MAAK,CAAE;IACjE;IAEO,eAAeP,YAAYA,CAAA;MAMjC,IAAIW,YAAY;MAChB,IAAIC,kBAAkB;MAEtB,MAAM;QAAEH,YAAY;QAAEF;MAAK,CAAE,GAAGD,YAAY,EAAE;MAE9C,IAAI;QACH,MAAM;UAAEO,OAAO;UAAEQ;QAAa,CAAE,GAAG,MAAMd,KAAK,CAACO,EAAE,CAACC,OAAO,CAAC;UAAEO,YAAY,EAAE;QAAC,CAAE,CAAC;QAE9EX,YAAY,GAAGE,OAAO;QACtBD,kBAAkB,GAAGS,aAAa,CAACE,IAAI;MACxC,CAAC,CAAC,OAAON,CAAC,EAAE;QACX,OAAOP,iBAAiB,EAAE;MAC3B;MAEA,OAAO;QAAED,YAAY;QAAEE,YAAY;QAAEC,kBAAkB;QAAEL;MAAK,CAAE;IACjE;IAACiB,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8ccd17f9001847cf1229fb6c50280de6ce28c694"}
