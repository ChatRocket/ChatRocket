{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/getAvatarSuggestionForUser.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/getAvatarSuggestionForUser.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/getAvatarSuggestionForUser.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/getAvatarSuggestionForUser.ts","sourceRoot":"","sources":["app/lib/server/functions/getAvatarSuggestionForUser.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\nimport Gravatar from 'gravatar';\nimport { check } from 'meteor/check';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\n\nimport { settings } from '../../../settings/server';\n\nconst avatarProviders = {\n\tfacebook(user: IUser) {\n\t\tif (user.services?.facebook?.id && settings.get('Accounts_OAuth_Facebook')) {\n\t\t\treturn {\n\t\t\t\tservice: 'facebook',\n\t\t\t\turl: `https://graph.facebook.com/${user.services.facebook.id}/picture?type=large`,\n\t\t\t};\n\t\t}\n\t},\n\n\tgoogle(user: IUser) {\n\t\tif (\n\t\t\tuser.services?.google?.picture &&\n\t\t\tuser.services.google.picture !== 'https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg' &&\n\t\t\tsettings.get('Accounts_OAuth_Google')\n\t\t) {\n\t\t\treturn {\n\t\t\t\tservice: 'google',\n\t\t\t\turl: user.services.google.picture,\n\t\t\t};\n\t\t}\n\t},\n\n\tgithub(user: IUser) {\n\t\tif (user.services?.github?.username && settings.get('Accounts_OAuth_Github')) {\n\t\t\treturn {\n\t\t\t\tservice: 'github',\n\t\t\t\turl: `https://avatars.githubusercontent.com/${user.services.github.username}?s=200`,\n\t\t\t};\n\t\t}\n\t},\n\n\tlinkedin(user: IUser) {\n\t\tif (\n\t\t\tuser.services?.linkedin?.profilePicture?.identifiersUrl &&\n\t\t\tuser.services.linkedin.profilePicture.identifiersUrl.length > 0 &&\n\t\t\tsettings.get('Accounts_OAuth_Linkedin')\n\t\t) {\n\t\t\tconst total = user.services.linkedin.profilePicture.identifiersUrl.length;\n\t\t\treturn {\n\t\t\t\tservice: 'linkedin',\n\t\t\t\turl: user.services.linkedin.profilePicture.identifiersUrl[total - 1],\n\t\t\t};\n\t\t}\n\t},\n\n\ttwitter(user: IUser) {\n\t\tif (user.services?.twitter?.profile_image_url_https && settings.get('Accounts_OAuth_Twitter')) {\n\t\t\treturn {\n\t\t\t\tservice: 'twitter',\n\t\t\t\turl: user.services.twitter.profile_image_url_https.replace(/_normal|_bigger/, ''),\n\t\t\t};\n\t\t}\n\t},\n\n\tgitlab(user: IUser) {\n\t\tif (user.services?.gitlab?.avatar_url && settings.get('Accounts_OAuth_Gitlab')) {\n\t\t\treturn {\n\t\t\t\tservice: 'gitlab',\n\t\t\t\turl: user.services.gitlab.avatar_url,\n\t\t\t};\n\t\t}\n\t},\n\n\tasync customOAuth(user: IUser) {\n\t\tconst avatars: { service: string; url: string }[] = [];\n\t\tif (!user.services) {\n\t\t\treturn avatars;\n\t\t}\n\n\t\tawait Promise.all(\n\t\t\tObject.keys(user.services).map(async (service) => {\n\t\t\t\tif (!user.services) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (user.services[service as keyof typeof user.services]._OAuthCustom) {\n\t\t\t\t\tconst services = await ServiceConfiguration.configurations.find({ service }, { fields: { secret: 0 } }).fetchAsync();\n\n\t\t\t\t\tif (services.length > 0) {\n\t\t\t\t\t\tif (user.services[service as keyof typeof user.services].avatarUrl) {\n\t\t\t\t\t\t\tavatars.push({\n\t\t\t\t\t\t\t\tservice,\n\t\t\t\t\t\t\t\turl: user.services[service as keyof typeof user.services].avatarUrl,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\treturn avatars;\n\t},\n\n\temails(user: IUser) {\n\t\tconst avatars = [];\n\t\tif (user.emails && user.emails.length > 0) {\n\t\t\tfor (const email of user.emails) {\n\t\t\t\tif (email.verified === true) {\n\t\t\t\t\tavatars.push({\n\t\t\t\t\t\tservice: 'gravatar',\n\t\t\t\t\t\turl: Gravatar.url(email.address, {\n\t\t\t\t\t\t\tdefault: '404',\n\t\t\t\t\t\t\tsize: '200',\n\t\t\t\t\t\t\tprotocol: 'https',\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (email.verified !== true) {\n\t\t\t\t\tavatars.push({\n\t\t\t\t\t\tservice: 'gravatar',\n\t\t\t\t\t\turl: Gravatar.url(email.address, {\n\t\t\t\t\t\t\tdefault: '404',\n\t\t\t\t\t\t\tsize: '200',\n\t\t\t\t\t\t\tprotocol: 'https',\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn avatars;\n\t},\n};\n\n/**\n * @return {Object}\n */\nexport async function getAvatarSuggestionForUser(\n\tuser: IUser,\n): Promise<Record<string, { blob: string; contentType: string; service: string; url: string }>> {\n\tcheck(user, Object);\n\n\tconst avatars = [];\n\n\tfor await (const avatarProvider of Object.values(avatarProviders)) {\n\t\tconst avatar = await avatarProvider(user);\n\t\tif (avatar) {\n\t\t\tif (Array.isArray(avatar)) {\n\t\t\t\tavatars.push(...avatar);\n\t\t\t} else {\n\t\t\t\tavatars.push(avatar);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst validAvatars: Record<string, { blob: string; contentType: string; service: string; url: string }> = {};\n\tfor await (const avatar of avatars) {\n\t\ttry {\n\t\t\tconst response = await fetch(avatar.url);\n\t\t\tconst newAvatar: { service: string; url: string; blob: string; contentType: string } = {\n\t\t\t\tservice: avatar.service,\n\t\t\t\turl: avatar.url,\n\t\t\t\tblob: '',\n\t\t\t\tcontentType: '',\n\t\t\t};\n\n\t\t\tif (response.status === 200) {\n\t\t\t\tlet blob = `data:${response.headers.get('content-type')};base64,`;\n\t\t\t\tblob += Buffer.from(await response.arrayBuffer()).toString('base64');\n\t\t\t\tnewAvatar.blob = blob;\n\t\t\t\tnewAvatar.contentType = response.headers.get('content-type') as string;\n\t\t\t\tvalidAvatars[avatar.service] = newAvatar;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// error;\n\t\t}\n\t}\n\treturn validAvatars;\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/getAvatarSuggestionForUser.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/getAvatarSuggestionForUser.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/getAvatarSuggestionForUser.ts","sourceRoot":"","sources":["app/lib/server/functions/getAvatarSuggestionForUser.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\nimport Gravatar from 'gravatar';\nimport { check } from 'meteor/check';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\n\nimport { settings } from '../../../settings/server';\n\nconst avatarProviders = {\n\tfacebook(user: IUser) {\n\t\tif (user.services?.facebook?.id && settings.get('Accounts_OAuth_Facebook')) {\n\t\t\treturn {\n\t\t\t\tservice: 'facebook',\n\t\t\t\turl: `https://graph.facebook.com/${user.services.facebook.id}/picture?type=large`,\n\t\t\t};\n\t\t}\n\t},\n\n\tgoogle(user: IUser) {\n\t\tif (\n\t\t\tuser.services?.google?.picture &&\n\t\t\tuser.services.google.picture !== 'https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg' &&\n\t\t\tsettings.get('Accounts_OAuth_Google')\n\t\t) {\n\t\t\treturn {\n\t\t\t\tservice: 'google',\n\t\t\t\turl: user.services.google.picture,\n\t\t\t};\n\t\t}\n\t},\n\n\tgithub(user: IUser) {\n\t\tif (user.services?.github?.username && settings.get('Accounts_OAuth_Github')) {\n\t\t\treturn {\n\t\t\t\tservice: 'github',\n\t\t\t\turl: `https://avatars.githubusercontent.com/${user.services.github.username}?s=200`,\n\t\t\t};\n\t\t}\n\t},\n\n\tlinkedin(user: IUser) {\n\t\tif (\n\t\t\tuser.services?.linkedin?.profilePicture?.identifiersUrl &&\n\t\t\tuser.services.linkedin.profilePicture.identifiersUrl.length > 0 &&\n\t\t\tsettings.get('Accounts_OAuth_Linkedin')\n\t\t) {\n\t\t\tconst total = user.services.linkedin.profilePicture.identifiersUrl.length;\n\t\t\treturn {\n\t\t\t\tservice: 'linkedin',\n\t\t\t\turl: user.services.linkedin.profilePicture.identifiersUrl[total - 1],\n\t\t\t};\n\t\t}\n\t},\n\n\ttwitter(user: IUser) {\n\t\tif (user.services?.twitter?.profile_image_url_https && settings.get('Accounts_OAuth_Twitter')) {\n\t\t\treturn {\n\t\t\t\tservice: 'twitter',\n\t\t\t\turl: user.services.twitter.profile_image_url_https.replace(/_normal|_bigger/, ''),\n\t\t\t};\n\t\t}\n\t},\n\n\tgitlab(user: IUser) {\n\t\tif (user.services?.gitlab?.avatar_url && settings.get('Accounts_OAuth_Gitlab')) {\n\t\t\treturn {\n\t\t\t\tservice: 'gitlab',\n\t\t\t\turl: user.services.gitlab.avatar_url,\n\t\t\t};\n\t\t}\n\t},\n\n\tasync customOAuth(user: IUser) {\n\t\tconst avatars: { service: string; url: string }[] = [];\n\t\tif (!user.services) {\n\t\t\treturn avatars;\n\t\t}\n\n\t\tawait Promise.all(\n\t\t\tObject.keys(user.services).map(async (service) => {\n\t\t\t\tif (!user.services) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (user.services[service as keyof typeof user.services]._OAuthCustom) {\n\t\t\t\t\tconst services = await ServiceConfiguration.configurations.find({ service }, { fields: { secret: 0 } }).fetchAsync();\n\n\t\t\t\t\tif (services.length > 0) {\n\t\t\t\t\t\tif (user.services[service as keyof typeof user.services].avatarUrl) {\n\t\t\t\t\t\t\tavatars.push({\n\t\t\t\t\t\t\t\tservice,\n\t\t\t\t\t\t\t\turl: user.services[service as keyof typeof user.services].avatarUrl,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\treturn avatars;\n\t},\n\n\temails(user: IUser) {\n\t\tconst avatars = [];\n\t\tif (user.emails && user.emails.length > 0) {\n\t\t\tfor (const email of user.emails) {\n\t\t\t\tif (email.verified === true) {\n\t\t\t\t\tavatars.push({\n\t\t\t\t\t\tservice: 'gravatar',\n\t\t\t\t\t\turl: Gravatar.url(email.address, {\n\t\t\t\t\t\t\tdefault: '404',\n\t\t\t\t\t\t\tsize: '200',\n\t\t\t\t\t\t\tprotocol: 'https',\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (email.verified !== true) {\n\t\t\t\t\tavatars.push({\n\t\t\t\t\t\tservice: 'gravatar',\n\t\t\t\t\t\turl: Gravatar.url(email.address, {\n\t\t\t\t\t\t\tdefault: '404',\n\t\t\t\t\t\t\tsize: '200',\n\t\t\t\t\t\t\tprotocol: 'https',\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn avatars;\n\t},\n};\n\n/**\n * @return {Object}\n */\nexport async function getAvatarSuggestionForUser(\n\tuser: IUser,\n): Promise<Record<string, { blob: string; contentType: string; service: string; url: string }>> {\n\tcheck(user, Object);\n\n\tconst avatars = [];\n\n\tfor await (const avatarProvider of Object.values(avatarProviders)) {\n\t\tconst avatar = await avatarProvider(user);\n\t\tif (avatar) {\n\t\t\tif (Array.isArray(avatar)) {\n\t\t\t\tavatars.push(...avatar);\n\t\t\t} else {\n\t\t\t\tavatars.push(avatar);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst validAvatars: Record<string, { blob: string; contentType: string; service: string; url: string }> = {};\n\tfor await (const avatar of avatars) {\n\t\ttry {\n\t\t\tconst response = await fetch(avatar.url);\n\t\t\tconst newAvatar: { service: string; url: string; blob: string; contentType: string } = {\n\t\t\t\tservice: avatar.service,\n\t\t\t\turl: avatar.url,\n\t\t\t\tblob: '',\n\t\t\t\tcontentType: '',\n\t\t\t};\n\n\t\t\tif (response.status === 200) {\n\t\t\t\tlet blob = `data:${response.headers.get('content-type')};base64,`;\n\t\t\t\tblob += Buffer.from(await response.arrayBuffer()).toString('base64');\n\t\t\t\tnewAvatar.blob = blob;\n\t\t\t\tnewAvatar.contentType = response.headers.get('content-type') as string;\n\t\t\t\tvalidAvatars[avatar.service] = newAvatar;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// error;\n\t\t}\n\t}\n\treturn validAvatars;\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      getAvatarSuggestionForUser: () => getAvatarSuggestionForUser\n    });\n    let fetch;\n    module.link(\"@rocket.chat/server-fetch\", {\n      serverFetch(v) {\n        fetch = v;\n      }\n    }, 0);\n    let Gravatar;\n    module.link(\"gravatar\", {\n      default(v) {\n        Gravatar = v;\n      }\n    }, 1);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 2);\n    let ServiceConfiguration;\n    module.link(\"meteor/service-configuration\", {\n      ServiceConfiguration(v) {\n        ServiceConfiguration = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const avatarProviders = {\n      facebook(user) {\n        var _user$services, _user$services$facebo;\n        if ((_user$services = user.services) !== null && _user$services !== void 0 && (_user$services$facebo = _user$services.facebook) !== null && _user$services$facebo !== void 0 && _user$services$facebo.id && settings.get('Accounts_OAuth_Facebook')) {\n          return {\n            service: 'facebook',\n            url: \"https://graph.facebook.com/\".concat(user.services.facebook.id, \"/picture?type=large\")\n          };\n        }\n      },\n      google(user) {\n        var _user$services2, _user$services2$googl;\n        if ((_user$services2 = user.services) !== null && _user$services2 !== void 0 && (_user$services2$googl = _user$services2.google) !== null && _user$services2$googl !== void 0 && _user$services2$googl.picture && user.services.google.picture !== 'https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg' && settings.get('Accounts_OAuth_Google')) {\n          return {\n            service: 'google',\n            url: user.services.google.picture\n          };\n        }\n      },\n      github(user) {\n        var _user$services3, _user$services3$githu;\n        if ((_user$services3 = user.services) !== null && _user$services3 !== void 0 && (_user$services3$githu = _user$services3.github) !== null && _user$services3$githu !== void 0 && _user$services3$githu.username && settings.get('Accounts_OAuth_Github')) {\n          return {\n            service: 'github',\n            url: \"https://avatars.githubusercontent.com/\".concat(user.services.github.username, \"?s=200\")\n          };\n        }\n      },\n      linkedin(user) {\n        var _user$services4, _user$services4$linke, _user$services4$linke2;\n        if ((_user$services4 = user.services) !== null && _user$services4 !== void 0 && (_user$services4$linke = _user$services4.linkedin) !== null && _user$services4$linke !== void 0 && (_user$services4$linke2 = _user$services4$linke.profilePicture) !== null && _user$services4$linke2 !== void 0 && _user$services4$linke2.identifiersUrl && user.services.linkedin.profilePicture.identifiersUrl.length > 0 && settings.get('Accounts_OAuth_Linkedin')) {\n          const total = user.services.linkedin.profilePicture.identifiersUrl.length;\n          return {\n            service: 'linkedin',\n            url: user.services.linkedin.profilePicture.identifiersUrl[total - 1]\n          };\n        }\n      },\n      twitter(user) {\n        var _user$services5, _user$services5$twitt;\n        if ((_user$services5 = user.services) !== null && _user$services5 !== void 0 && (_user$services5$twitt = _user$services5.twitter) !== null && _user$services5$twitt !== void 0 && _user$services5$twitt.profile_image_url_https && settings.get('Accounts_OAuth_Twitter')) {\n          return {\n            service: 'twitter',\n            url: user.services.twitter.profile_image_url_https.replace(/_normal|_bigger/, '')\n          };\n        }\n      },\n      gitlab(user) {\n        var _user$services6, _user$services6$gitla;\n        if ((_user$services6 = user.services) !== null && _user$services6 !== void 0 && (_user$services6$gitla = _user$services6.gitlab) !== null && _user$services6$gitla !== void 0 && _user$services6$gitla.avatar_url && settings.get('Accounts_OAuth_Gitlab')) {\n          return {\n            service: 'gitlab',\n            url: user.services.gitlab.avatar_url\n          };\n        }\n      },\n      async customOAuth(user) {\n        const avatars = [];\n        if (!user.services) {\n          return avatars;\n        }\n        await Promise.all(Object.keys(user.services).map(async service => {\n          if (!user.services) {\n            return;\n          }\n          if (user.services[service]._OAuthCustom) {\n            const services = await ServiceConfiguration.configurations.find({\n              service\n            }, {\n              fields: {\n                secret: 0\n              }\n            }).fetchAsync();\n            if (services.length > 0) {\n              if (user.services[service].avatarUrl) {\n                avatars.push({\n                  service,\n                  url: user.services[service].avatarUrl\n                });\n              }\n            }\n          }\n        }));\n        return avatars;\n      },\n      emails(user) {\n        const avatars = [];\n        if (user.emails && user.emails.length > 0) {\n          for (const email of user.emails) {\n            if (email.verified === true) {\n              avatars.push({\n                service: 'gravatar',\n                url: Gravatar.url(email.address, {\n                  default: '404',\n                  size: '200',\n                  protocol: 'https'\n                })\n              });\n            }\n            if (email.verified !== true) {\n              avatars.push({\n                service: 'gravatar',\n                url: Gravatar.url(email.address, {\n                  default: '404',\n                  size: '200',\n                  protocol: 'https'\n                })\n              });\n            }\n          }\n        }\n        return avatars;\n      }\n    };\n    /**\n     * @return {Object}\n     */\n    async function getAvatarSuggestionForUser(user) {\n      check(user, Object);\n      const avatars = [];\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(Object.values(avatarProviders)), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const avatarProvider = _step.value;\n          {\n            const avatar = await avatarProvider(user);\n            if (avatar) {\n              if (Array.isArray(avatar)) {\n                avatars.push(...avatar);\n              } else {\n                avatars.push(avatar);\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      const validAvatars = {};\n      var _iteratorAbruptCompletion2 = false;\n      var _didIteratorError2 = false;\n      var _iteratorError2;\n      try {\n        for (var _iterator2 = _asyncIterator(avatars), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n          const avatar = _step2.value;\n          {\n            try {\n              const response = await fetch(avatar.url);\n              const newAvatar = {\n                service: avatar.service,\n                url: avatar.url,\n                blob: '',\n                contentType: ''\n              };\n              if (response.status === 200) {\n                let blob = \"data:\".concat(response.headers.get('content-type'), \";base64,\");\n                blob += Buffer.from(await response.arrayBuffer()).toString('base64');\n                newAvatar.blob = blob;\n                newAvatar.contentType = response.headers.get('content-type');\n                validAvatars[avatar.service] = newAvatar;\n              }\n            } catch (error) {\n              // error;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n            await _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n      return validAvatars;\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","getAvatarSuggestionForUser","fetch","serverFetch","Gravatar","check","ServiceConfiguration","settings","__reifyWaitForDeps__","avatarProviders","facebook","user","_user$services","_user$services$facebo","services","id","get","service","url","concat","google","_user$services2","_user$services2$googl","picture","github","_user$services3","_user$services3$githu","username","linkedin","_user$services4","_user$services4$linke","_user$services4$linke2","profilePicture","identifiersUrl","length","total","twitter","_user$services5","_user$services5$twitt","profile_image_url_https","replace","gitlab","_user$services6","_user$services6$gitla","avatar_url","customOAuth","avatars","Promise","all","Object","keys","map","_OAuthCustom","configurations","find","fields","secret","fetchAsync","avatarUrl","push","emails","email","verified","address","size","protocol","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","values","_step","next","done","avatarProvider","value","avatar","Array","isArray","err","return","validAvatars","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","response","newAvatar","blob","contentType","status","headers","Buffer","from","arrayBuffer","toString","error","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/getAvatarSuggestionForUser.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\nimport Gravatar from 'gravatar';\nimport { check } from 'meteor/check';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\n\nimport { settings } from '../../../settings/server';\n\nconst avatarProviders = {\n\tfacebook(user: IUser) {\n\t\tif (user.services?.facebook?.id && settings.get('Accounts_OAuth_Facebook')) {\n\t\t\treturn {\n\t\t\t\tservice: 'facebook',\n\t\t\t\turl: `https://graph.facebook.com/${user.services.facebook.id}/picture?type=large`,\n\t\t\t};\n\t\t}\n\t},\n\n\tgoogle(user: IUser) {\n\t\tif (\n\t\t\tuser.services?.google?.picture &&\n\t\t\tuser.services.google.picture !== 'https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg' &&\n\t\t\tsettings.get('Accounts_OAuth_Google')\n\t\t) {\n\t\t\treturn {\n\t\t\t\tservice: 'google',\n\t\t\t\turl: user.services.google.picture,\n\t\t\t};\n\t\t}\n\t},\n\n\tgithub(user: IUser) {\n\t\tif (user.services?.github?.username && settings.get('Accounts_OAuth_Github')) {\n\t\t\treturn {\n\t\t\t\tservice: 'github',\n\t\t\t\turl: `https://avatars.githubusercontent.com/${user.services.github.username}?s=200`,\n\t\t\t};\n\t\t}\n\t},\n\n\tlinkedin(user: IUser) {\n\t\tif (\n\t\t\tuser.services?.linkedin?.profilePicture?.identifiersUrl &&\n\t\t\tuser.services.linkedin.profilePicture.identifiersUrl.length > 0 &&\n\t\t\tsettings.get('Accounts_OAuth_Linkedin')\n\t\t) {\n\t\t\tconst total = user.services.linkedin.profilePicture.identifiersUrl.length;\n\t\t\treturn {\n\t\t\t\tservice: 'linkedin',\n\t\t\t\turl: user.services.linkedin.profilePicture.identifiersUrl[total - 1],\n\t\t\t};\n\t\t}\n\t},\n\n\ttwitter(user: IUser) {\n\t\tif (user.services?.twitter?.profile_image_url_https && settings.get('Accounts_OAuth_Twitter')) {\n\t\t\treturn {\n\t\t\t\tservice: 'twitter',\n\t\t\t\turl: user.services.twitter.profile_image_url_https.replace(/_normal|_bigger/, ''),\n\t\t\t};\n\t\t}\n\t},\n\n\tgitlab(user: IUser) {\n\t\tif (user.services?.gitlab?.avatar_url && settings.get('Accounts_OAuth_Gitlab')) {\n\t\t\treturn {\n\t\t\t\tservice: 'gitlab',\n\t\t\t\turl: user.services.gitlab.avatar_url,\n\t\t\t};\n\t\t}\n\t},\n\n\tasync customOAuth(user: IUser) {\n\t\tconst avatars: { service: string; url: string }[] = [];\n\t\tif (!user.services) {\n\t\t\treturn avatars;\n\t\t}\n\n\t\tawait Promise.all(\n\t\t\tObject.keys(user.services).map(async (service) => {\n\t\t\t\tif (!user.services) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (user.services[service as keyof typeof user.services]._OAuthCustom) {\n\t\t\t\t\tconst services = await ServiceConfiguration.configurations.find({ service }, { fields: { secret: 0 } }).fetchAsync();\n\n\t\t\t\t\tif (services.length > 0) {\n\t\t\t\t\t\tif (user.services[service as keyof typeof user.services].avatarUrl) {\n\t\t\t\t\t\t\tavatars.push({\n\t\t\t\t\t\t\t\tservice,\n\t\t\t\t\t\t\t\turl: user.services[service as keyof typeof user.services].avatarUrl,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\treturn avatars;\n\t},\n\n\temails(user: IUser) {\n\t\tconst avatars = [];\n\t\tif (user.emails && user.emails.length > 0) {\n\t\t\tfor (const email of user.emails) {\n\t\t\t\tif (email.verified === true) {\n\t\t\t\t\tavatars.push({\n\t\t\t\t\t\tservice: 'gravatar',\n\t\t\t\t\t\turl: Gravatar.url(email.address, {\n\t\t\t\t\t\t\tdefault: '404',\n\t\t\t\t\t\t\tsize: '200',\n\t\t\t\t\t\t\tprotocol: 'https',\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (email.verified !== true) {\n\t\t\t\t\tavatars.push({\n\t\t\t\t\t\tservice: 'gravatar',\n\t\t\t\t\t\turl: Gravatar.url(email.address, {\n\t\t\t\t\t\t\tdefault: '404',\n\t\t\t\t\t\t\tsize: '200',\n\t\t\t\t\t\t\tprotocol: 'https',\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn avatars;\n\t},\n};\n\n/**\n * @return {Object}\n */\nexport async function getAvatarSuggestionForUser(\n\tuser: IUser,\n): Promise<Record<string, { blob: string; contentType: string; service: string; url: string }>> {\n\tcheck(user, Object);\n\n\tconst avatars = [];\n\n\tfor await (const avatarProvider of Object.values(avatarProviders)) {\n\t\tconst avatar = await avatarProvider(user);\n\t\tif (avatar) {\n\t\t\tif (Array.isArray(avatar)) {\n\t\t\t\tavatars.push(...avatar);\n\t\t\t} else {\n\t\t\t\tavatars.push(avatar);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst validAvatars: Record<string, { blob: string; contentType: string; service: string; url: string }> = {};\n\tfor await (const avatar of avatars) {\n\t\ttry {\n\t\t\tconst response = await fetch(avatar.url);\n\t\t\tconst newAvatar: { service: string; url: string; blob: string; contentType: string } = {\n\t\t\t\tservice: avatar.service,\n\t\t\t\turl: avatar.url,\n\t\t\t\tblob: '',\n\t\t\t\tcontentType: '',\n\t\t\t};\n\n\t\t\tif (response.status === 200) {\n\t\t\t\tlet blob = `data:${response.headers.get('content-type')};base64,`;\n\t\t\t\tblob += Buffer.from(await response.arrayBuffer()).toString('base64');\n\t\t\t\tnewAvatar.blob = blob;\n\t\t\t\tnewAvatar.contentType = response.headers.get('content-type') as string;\n\t\t\t\tvalidAvatars[avatar.service] = newAvatar;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// error;\n\t\t}\n\t}\n\treturn validAvatars;\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"677b5ec50a901f1b9cfccb76c2f30df3333b49c2"}
