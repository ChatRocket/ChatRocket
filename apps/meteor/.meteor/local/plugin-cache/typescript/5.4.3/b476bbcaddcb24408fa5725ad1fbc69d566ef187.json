{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/roles.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/startup/roles.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/roles.ts","inputSourceMap":{"version":3,"file":"client/startup/roles.ts","sourceRoot":"","sources":["client/startup/roles.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAC;AAChD,OAAO,EAAE,GAAG,EAAE,MAAM,sCAAsC,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAE7C,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,UAAU,CAAC,KAAK,IAAI,EAAE;QACrB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QACvD,qFAAqF;QACrF,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1H,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;QAExG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IAIH,MAAM,MAAM,GAAkF;QAC7F,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE;YACjB,OAAO,IAAI,CAAC,IAAI,CAAC;YACjB,KAAK,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;QACvC,CAAC;QACD,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE;YACjB,KAAK,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACjC,CAAC;KACD,CAAC;IAEF,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;QACrB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC;YACtB,OAAO;QACR,CAAC;QAED,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE;YACvB,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE;gBACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC,IAAI,EAAE,CAAC;IACV,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import type { IRole } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { Roles } from '../../app/models/client';\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { onLoggedIn } from '../lib/loggedIn';\n\nMeteor.startup(() => {\n\tonLoggedIn(async () => {\n\t\tconst { roles } = await sdk.rest.get('/v1/roles.list');\n\t\t// if a role is checked before this collection is populated, it will return undefined\n\t\tRoles._collection._docs._map = new Map(roles.map((record) => [Roles._collection._docs._idStringify(record._id), record]));\n\t\tObject.values(Roles._collection.queries).forEach((query) => Roles._collection._recomputeResults(query));\n\n\t\tRoles.ready.set(true);\n\t});\n\n\ttype ClientAction = 'inserted' | 'updated' | 'removed' | 'changed';\n\n\tconst events: Record<string, ((role: IRole & { type?: ClientAction }) => void) | undefined> = {\n\t\tchanged: (role) => {\n\t\t\tdelete role.type;\n\t\t\tRoles.upsert({ _id: role._id }, role);\n\t\t},\n\t\tremoved: (role) => {\n\t\t\tRoles.remove({ _id: role._id });\n\t\t},\n\t};\n\n\tTracker.autorun((c) => {\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tTracker.afterFlush(() => {\n\t\t\tsdk.stream('roles', ['roles'], (role) => {\n\t\t\t\tevents[role.type]?.(role);\n\t\t\t});\n\t\t});\n\n\t\tc.stop();\n\t});\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/roles.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/startup/roles.ts","inputSourceMap":{"version":3,"file":"client/startup/roles.ts","sourceRoot":"","sources":["client/startup/roles.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAC;AAChD,OAAO,EAAE,GAAG,EAAE,MAAM,sCAAsC,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAE7C,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,UAAU,CAAC,KAAK,IAAI,EAAE;QACrB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QACvD,qFAAqF;QACrF,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1H,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;QAExG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IAIH,MAAM,MAAM,GAAkF;QAC7F,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE;YACjB,OAAO,IAAI,CAAC,IAAI,CAAC;YACjB,KAAK,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;QACvC,CAAC;QACD,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE;YACjB,KAAK,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACjC,CAAC;KACD,CAAC;IAEF,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;QACrB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC;YACtB,OAAO;QACR,CAAC;QAED,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE;YACvB,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE;gBACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,CAAC,CAAC,IAAI,EAAE,CAAC;IACV,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import type { IRole } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { Roles } from '../../app/models/client';\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { onLoggedIn } from '../lib/loggedIn';\n\nMeteor.startup(() => {\n\tonLoggedIn(async () => {\n\t\tconst { roles } = await sdk.rest.get('/v1/roles.list');\n\t\t// if a role is checked before this collection is populated, it will return undefined\n\t\tRoles._collection._docs._map = new Map(roles.map((record) => [Roles._collection._docs._idStringify(record._id), record]));\n\t\tObject.values(Roles._collection.queries).forEach((query) => Roles._collection._recomputeResults(query));\n\n\t\tRoles.ready.set(true);\n\t});\n\n\ttype ClientAction = 'inserted' | 'updated' | 'removed' | 'changed';\n\n\tconst events: Record<string, ((role: IRole & { type?: ClientAction }) => void) | undefined> = {\n\t\tchanged: (role) => {\n\t\t\tdelete role.type;\n\t\t\tRoles.upsert({ _id: role._id }, role);\n\t\t},\n\t\tremoved: (role) => {\n\t\t\tRoles.remove({ _id: role._id });\n\t\t},\n\t};\n\n\tTracker.autorun((c) => {\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tTracker.afterFlush(() => {\n\t\t\tsdk.stream('roles', ['roles'], (role) => {\n\t\t\t\tevents[role.type]?.(role);\n\t\t\t});\n\t\t});\n\n\t\tc.stop();\n\t});\n});\n"]}}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 0);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n}, 1);\nlet Roles;\nmodule.link(\"../../app/models/client\", {\n  Roles(v) {\n    Roles = v;\n  }\n}, 2);\nlet sdk;\nmodule.link(\"../../app/utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 3);\nlet onLoggedIn;\nmodule.link(\"../lib/loggedIn\", {\n  onLoggedIn(v) {\n    onLoggedIn = v;\n  }\n}, 4);\nMeteor.startup(() => {\n  onLoggedIn(async () => {\n    const {\n      roles\n    } = await sdk.rest.get('/v1/roles.list');\n    // if a role is checked before this collection is populated, it will return undefined\n    Roles._collection._docs._map = new Map(roles.map(record => [Roles._collection._docs._idStringify(record._id), record]));\n    Object.values(Roles._collection.queries).forEach(query => Roles._collection._recomputeResults(query));\n    Roles.ready.set(true);\n  });\n  const events = {\n    changed: role => {\n      delete role.type;\n      Roles.upsert({\n        _id: role._id\n      }, role);\n    },\n    removed: role => {\n      Roles.remove({\n        _id: role._id\n      });\n    }\n  };\n  Tracker.autorun(c => {\n    if (!Meteor.userId()) {\n      return;\n    }\n    Tracker.afterFlush(() => {\n      sdk.stream('roles', ['roles'], role => {\n        var _events$role$type;\n        (_events$role$type = events[role.type]) === null || _events$role$type === void 0 ? void 0 : _events$role$type.call(events, role);\n      });\n    });\n    c.stop();\n  });\n});","map":{"version":3,"names":["Meteor","module","link","v","Tracker","Roles","sdk","onLoggedIn","startup","roles","rest","get","_collection","_docs","_map","Map","map","record","_idStringify","_id","Object","values","queries","forEach","query","_recomputeResults","ready","set","events","changed","role","type","upsert","removed","remove","autorun","c","userId","afterFlush","stream","_events$role$type","call","stop"],"sources":["client/startup/roles.ts"],"sourcesContent":["import type { IRole } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { Roles } from '../../app/models/client';\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { onLoggedIn } from '../lib/loggedIn';\n\nMeteor.startup(() => {\n\tonLoggedIn(async () => {\n\t\tconst { roles } = await sdk.rest.get('/v1/roles.list');\n\t\t// if a role is checked before this collection is populated, it will return undefined\n\t\tRoles._collection._docs._map = new Map(roles.map((record) => [Roles._collection._docs._idStringify(record._id), record]));\n\t\tObject.values(Roles._collection.queries).forEach((query) => Roles._collection._recomputeResults(query));\n\n\t\tRoles.ready.set(true);\n\t});\n\n\ttype ClientAction = 'inserted' | 'updated' | 'removed' | 'changed';\n\n\tconst events: Record<string, ((role: IRole & { type?: ClientAction }) => void) | undefined> = {\n\t\tchanged: (role) => {\n\t\t\tdelete role.type;\n\t\t\tRoles.upsert({ _id: role._id }, role);\n\t\t},\n\t\tremoved: (role) => {\n\t\t\tRoles.remove({ _id: role._id });\n\t\t},\n\t};\n\n\tTracker.autorun((c) => {\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tTracker.afterFlush(() => {\n\t\t\tsdk.stream('roles', ['roles'], (role) => {\n\t\t\t\tevents[role.type]?.(role);\n\t\t\t});\n\t\t});\n\n\t\tc.stop();\n\t});\n});\n"],"mappings":"AACA,IAAAA,MAAS;AAAAC,MAAQ,CAAAC,IAAA,CAAM,eAAe,EAAC;EAAAF,OAAAG,CAAA;IAAAH,MAAA,GAAAG,CAAA;EAAA;AAAA;AAAA,IAAAC,OAAA;AAAAH,MAAA,CAAAC,IAAA;EAAAE,QAAAD,CAAA;IAAAC,OAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,KAAA;AAAAJ,MAAA,CAAAC,IAAA;EAAAG,MAAAF,CAAA;IAAAE,KAAA,GAAAF,CAAA;EAAA;AAAA;AAAA,IAAAG,GAAA;AAAAL,MAAA,CAAAC,IAAA;EAAAI,IAAAH,CAAA;IAAAG,GAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAI,UAAA;AAAAN,MAAA,CAAAC,IAAA;EAAAK,WAAAJ,CAAA;IAAAI,UAAA,GAAAJ,CAAA;EAAA;AAAA;AAOvCH,MAAM,CAACQ,OAAO,CAAC,MAAK;EACnBD,UAAU,CAAC,YAAW;IACrB,MAAM;MAAEE;IAAK,CAAE,GAAG,MAAMH,GAAG,CAACI,IAAI,CAACC,GAAG,CAAC,gBAAgB,CAAC;IACtD;IACAN,KAAK,CAACO,WAAW,CAACC,KAAK,CAACC,IAAI,GAAG,IAAIC,GAAG,CAACN,KAAK,CAACO,GAAG,CAAEC,MAAM,IAAK,CAACZ,KAAK,CAACO,WAAW,CAACC,KAAK,CAACK,YAAY,CAACD,MAAM,CAACE,GAAG,CAAC,EAAEF,MAAM,CAAC,CAAC,CAAC;IACzHG,MAAM,CAACC,MAAM,CAAChB,KAAK,CAACO,WAAW,CAACU,OAAO,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAKnB,KAAK,CAACO,WAAW,CAACa,iBAAiB,CAACD,KAAK,CAAC,CAAC;IAEvGnB,KAAK,CAACqB,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC;EACtB,CAAC,CAAC;EAIF,MAAMC,MAAM,GAAkF;IAC7FC,OAAO,EAAGC,IAAI,IAAI;MACjB,OAAOA,IAAI,CAACC,IAAI;MAChB1B,KAAK,CAAC2B,MAAM,CAAC;QAAEb,GAAG,EAAEW,IAAI,CAACX;MAAG,CAAE,EAAEW,IAAI,CAAC;IACtC,CAAC;IACDG,OAAO,EAAGH,IAAI,IAAI;MACjBzB,KAAK,CAAC6B,MAAM,CAAC;QAAEf,GAAG,EAAEW,IAAI,CAACX;MAAG,CAAE,CAAC;IAChC;GACA;EAEDf,OAAO,CAAC+B,OAAO,CAAEC,CAAC,IAAI;IACrB,IAAI,CAACpC,MAAM,CAACqC,MAAM,EAAE,EAAE;MACrB;IACD;IAEAjC,OAAO,CAACkC,UAAU,CAAC,MAAK;MACvBhC,GAAG,CAACiC,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,EAAGT,IAAI,IAAI;QAAA,IAAAU,iBAAA;QACvC,CAAAA,iBAAA,GAAAZ,MAAM,CAACE,IAAI,CAACC,IAAI,CAAC,cAAAS,iBAAA,uBAAjBA,iBAAA,CAAAC,IAAA,CAAAb,MAAM,EAAcE,IAAI,CAAC;MAC1B,CAAC,CAAC;IACH,CAAC,CAAC;IAEFM,CAAC,CAACM,IAAI,EAAE;EACT,CAAC,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b476bbcaddcb24408fa5725ad1fbc69d566ef187"}
