{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/loginHandler.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/meteor-accounts-saml/server/loginHandler.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/loginHandler.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/loginHandler.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/loginHandler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,MAAM,mCAAmC,CAAC;AACjE,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC,MAAM,SAAS,GAAG,CAAC,OAAe,EAAuB,EAAE,CAAC,CAAC;IAC5D,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,mBAAmB,CAAC,YAAY,EAAE,OAAO,CAAC;CAC3E,CAAC,CAAC;AAEH,QAAQ,CAAC,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE;IAC5D,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,eAAe,IAAI,OAAO,YAAY,CAAC,eAAe,KAAK,QAAQ,EAAE,CAAC;QAC7G,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;IAChF,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;IAE9C,IAAI,CAAC,WAAW,EAAE,CAAC;QAClB,OAAO,SAAS,CAAC,iCAAiC,CAAC,CAAC;IACrD,CAAC;IAED,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC1B,OAAO,SAAS,CAAC,8BAA8B,CAAC,CAAC;IAClD,CAAC;IAED,IAAI,CAAC;QACJ,MAAM,UAAU,GAAG,SAAS,CAAC,sBAAsB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACzE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAClE,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;QAEtE,OAAO,WAAW,CAAC;IACpB,CAAC;IAAC,OAAO,KAAU,EAAE,CAAC;QACrB,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,SAAS,GAAG,EAAE,CAAC;QAEnB,IAAI,KAAK,YAAY,MAAM,CAAC,KAAK,EAAE,CAAC;YACnC,SAAS,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAW,CAAC;QACtD,CAAC;aAAM,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;YACnC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC;QAC3B,CAAC;QAED,IAAI,SAAS,EAAE,CAAC;YACf,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,gBAAgB,IAAI,gBAAgB,KAAK,SAAS,EAAE,CAAC;gBACxD,OAAO,GAAG,gBAAgB,CAAC;YAC5B,CAAC;QACF,CAAC;QAED,OAAO,SAAS,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;AACF,CAAC,CAAC,CAAC","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport { i18n } from '../../../server/lib/i18n';\nimport { SystemLogger } from '../../../server/lib/logger/system';\nimport { SAML } from './lib/SAML';\nimport { SAMLUtils } from './lib/Utils';\n\nconst makeError = (message: string): Record<string, any> => ({\n\ttype: 'saml',\n\terror: new Meteor.Error(Accounts.LoginCancelledError.numericError, message),\n});\n\nAccounts.registerLoginHandler('saml', async (loginRequest) => {\n\tif (!loginRequest.saml || !loginRequest.credentialToken || typeof loginRequest.credentialToken !== 'string') {\n\t\treturn undefined;\n\t}\n\n\tconst loginResult = await SAML.retrieveCredential(loginRequest.credentialToken);\n\tSAMLUtils.log({ msg: 'RESULT', loginResult });\n\n\tif (!loginResult) {\n\t\treturn makeError('No matching login attempt found');\n\t}\n\n\tif (!loginResult.profile) {\n\t\treturn makeError('No profile information found');\n\t}\n\n\ttry {\n\t\tconst userObject = SAMLUtils.mapProfileToUserObject(loginResult.profile);\n\t\tconst updatedUser = await SAML.insertOrUpdateSAMLUser(userObject);\n\t\tSAMLUtils.events.emit('updateCustomFields', loginResult, updatedUser);\n\n\t\treturn updatedUser;\n\t} catch (error: any) {\n\t\tSystemLogger.error(error);\n\n\t\tlet message = error.toString();\n\t\tlet errorCode = '';\n\n\t\tif (error instanceof Meteor.Error) {\n\t\t\terrorCode = (error.error || error.message) as string;\n\t\t} else if (error instanceof Error) {\n\t\t\terrorCode = error.message;\n\t\t}\n\n\t\tif (errorCode) {\n\t\t\tconst localizedMessage = i18n.t(errorCode);\n\t\t\tif (localizedMessage && localizedMessage !== errorCode) {\n\t\t\t\tmessage = localizedMessage;\n\t\t\t}\n\t\t}\n\n\t\treturn makeError(message);\n\t}\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/loginHandler.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-accounts-saml/server/loginHandler.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/loginHandler.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/loginHandler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,MAAM,mCAAmC,CAAC;AACjE,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC,MAAM,SAAS,GAAG,CAAC,OAAe,EAAuB,EAAE,CAAC,CAAC;IAC5D,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,mBAAmB,CAAC,YAAY,EAAE,OAAO,CAAC;CAC3E,CAAC,CAAC;AAEH,QAAQ,CAAC,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE;IAC5D,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,eAAe,IAAI,OAAO,YAAY,CAAC,eAAe,KAAK,QAAQ,EAAE,CAAC;QAC7G,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;IAChF,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC,CAAC;IAE9C,IAAI,CAAC,WAAW,EAAE,CAAC;QAClB,OAAO,SAAS,CAAC,iCAAiC,CAAC,CAAC;IACrD,CAAC;IAED,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC1B,OAAO,SAAS,CAAC,8BAA8B,CAAC,CAAC;IAClD,CAAC;IAED,IAAI,CAAC;QACJ,MAAM,UAAU,GAAG,SAAS,CAAC,sBAAsB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACzE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAClE,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;QAEtE,OAAO,WAAW,CAAC;IACpB,CAAC;IAAC,OAAO,KAAU,EAAE,CAAC;QACrB,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,SAAS,GAAG,EAAE,CAAC;QAEnB,IAAI,KAAK,YAAY,MAAM,CAAC,KAAK,EAAE,CAAC;YACnC,SAAS,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAW,CAAC;QACtD,CAAC;aAAM,IAAI,KAAK,YAAY,KAAK,EAAE,CAAC;YACnC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC;QAC3B,CAAC;QAED,IAAI,SAAS,EAAE,CAAC;YACf,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAI,gBAAgB,IAAI,gBAAgB,KAAK,SAAS,EAAE,CAAC;gBACxD,OAAO,GAAG,gBAAgB,CAAC;YAC5B,CAAC;QACF,CAAC;QAED,OAAO,SAAS,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;AACF,CAAC,CAAC,CAAC","sourcesContent":["import { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport { i18n } from '../../../server/lib/i18n';\nimport { SystemLogger } from '../../../server/lib/logger/system';\nimport { SAML } from './lib/SAML';\nimport { SAMLUtils } from './lib/Utils';\n\nconst makeError = (message: string): Record<string, any> => ({\n\ttype: 'saml',\n\terror: new Meteor.Error(Accounts.LoginCancelledError.numericError, message),\n});\n\nAccounts.registerLoginHandler('saml', async (loginRequest) => {\n\tif (!loginRequest.saml || !loginRequest.credentialToken || typeof loginRequest.credentialToken !== 'string') {\n\t\treturn undefined;\n\t}\n\n\tconst loginResult = await SAML.retrieveCredential(loginRequest.credentialToken);\n\tSAMLUtils.log({ msg: 'RESULT', loginResult });\n\n\tif (!loginResult) {\n\t\treturn makeError('No matching login attempt found');\n\t}\n\n\tif (!loginResult.profile) {\n\t\treturn makeError('No profile information found');\n\t}\n\n\ttry {\n\t\tconst userObject = SAMLUtils.mapProfileToUserObject(loginResult.profile);\n\t\tconst updatedUser = await SAML.insertOrUpdateSAMLUser(userObject);\n\t\tSAMLUtils.events.emit('updateCustomFields', loginResult, updatedUser);\n\n\t\treturn updatedUser;\n\t} catch (error: any) {\n\t\tSystemLogger.error(error);\n\n\t\tlet message = error.toString();\n\t\tlet errorCode = '';\n\n\t\tif (error instanceof Meteor.Error) {\n\t\t\terrorCode = (error.error || error.message) as string;\n\t\t} else if (error instanceof Error) {\n\t\t\terrorCode = error.message;\n\t\t}\n\n\t\tif (errorCode) {\n\t\t\tconst localizedMessage = i18n.t(errorCode);\n\t\t\tif (localizedMessage && localizedMessage !== errorCode) {\n\t\t\t\tmessage = localizedMessage;\n\t\t\t}\n\t\t}\n\n\t\treturn makeError(message);\n\t}\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let i18n;\n    module.link(\"../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 2);\n    let SystemLogger;\n    module.link(\"../../../server/lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 3);\n    let SAML;\n    module.link(\"./lib/SAML\", {\n      SAML(v) {\n        SAML = v;\n      }\n    }, 4);\n    let SAMLUtils;\n    module.link(\"./lib/Utils\", {\n      SAMLUtils(v) {\n        SAMLUtils = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const makeError = message => ({\n      type: 'saml',\n      error: new Meteor.Error(Accounts.LoginCancelledError.numericError, message)\n    });\n    Accounts.registerLoginHandler('saml', async loginRequest => {\n      if (!loginRequest.saml || !loginRequest.credentialToken || typeof loginRequest.credentialToken !== 'string') {\n        return undefined;\n      }\n      const loginResult = await SAML.retrieveCredential(loginRequest.credentialToken);\n      SAMLUtils.log({\n        msg: 'RESULT',\n        loginResult\n      });\n      if (!loginResult) {\n        return makeError('No matching login attempt found');\n      }\n      if (!loginResult.profile) {\n        return makeError('No profile information found');\n      }\n      try {\n        const userObject = SAMLUtils.mapProfileToUserObject(loginResult.profile);\n        const updatedUser = await SAML.insertOrUpdateSAMLUser(userObject);\n        SAMLUtils.events.emit('updateCustomFields', loginResult, updatedUser);\n        return updatedUser;\n      } catch (error) {\n        SystemLogger.error(error);\n        let message = error.toString();\n        let errorCode = '';\n        if (error instanceof Meteor.Error) {\n          errorCode = error.error || error.message;\n        } else if (error instanceof Error) {\n          errorCode = error.message;\n        }\n        if (errorCode) {\n          const localizedMessage = i18n.t(errorCode);\n          if (localizedMessage && localizedMessage !== errorCode) {\n            message = localizedMessage;\n          }\n        }\n        return makeError(message);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Accounts","module","link","v","Meteor","i18n","SystemLogger","SAML","SAMLUtils","__reifyWaitForDeps__","makeError","message","type","error","Error","LoginCancelledError","numericError","registerLoginHandler","loginRequest","saml","credentialToken","undefined","loginResult","retrieveCredential","log","msg","profile","userObject","mapProfileToUserObject","updatedUser","insertOrUpdateSAMLUser","events","emit","toString","errorCode","localizedMessage","t","__reify_async_result__","_reifyError","self","async"],"sources":["app/meteor-accounts-saml/server/loginHandler.ts"],"sourcesContent":["import { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport { i18n } from '../../../server/lib/i18n';\nimport { SystemLogger } from '../../../server/lib/logger/system';\nimport { SAML } from './lib/SAML';\nimport { SAMLUtils } from './lib/Utils';\n\nconst makeError = (message: string): Record<string, any> => ({\n\ttype: 'saml',\n\terror: new Meteor.Error(Accounts.LoginCancelledError.numericError, message),\n});\n\nAccounts.registerLoginHandler('saml', async (loginRequest) => {\n\tif (!loginRequest.saml || !loginRequest.credentialToken || typeof loginRequest.credentialToken !== 'string') {\n\t\treturn undefined;\n\t}\n\n\tconst loginResult = await SAML.retrieveCredential(loginRequest.credentialToken);\n\tSAMLUtils.log({ msg: 'RESULT', loginResult });\n\n\tif (!loginResult) {\n\t\treturn makeError('No matching login attempt found');\n\t}\n\n\tif (!loginResult.profile) {\n\t\treturn makeError('No profile information found');\n\t}\n\n\ttry {\n\t\tconst userObject = SAMLUtils.mapProfileToUserObject(loginResult.profile);\n\t\tconst updatedUser = await SAML.insertOrUpdateSAMLUser(userObject);\n\t\tSAMLUtils.events.emit('updateCustomFields', loginResult, updatedUser);\n\n\t\treturn updatedUser;\n\t} catch (error: any) {\n\t\tSystemLogger.error(error);\n\n\t\tlet message = error.toString();\n\t\tlet errorCode = '';\n\n\t\tif (error instanceof Meteor.Error) {\n\t\t\terrorCode = (error.error || error.message) as string;\n\t\t} else if (error instanceof Error) {\n\t\t\terrorCode = error.message;\n\t\t}\n\n\t\tif (errorCode) {\n\t\t\tconst localizedMessage = i18n.t(errorCode);\n\t\t\tif (localizedMessage && localizedMessage !== errorCode) {\n\t\t\t\tmessage = localizedMessage;\n\t\t\t}\n\t\t}\n\n\t\treturn makeError(message);\n\t}\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8f9aae1fcfb5a01b7a1d572ffed8105a07448694"}
