{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/user-status/server/methods/setUserStatus.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/user-status/server/methods/setUserStatus.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/user-status/server/methods/setUserStatus.ts","inputSourceMap":{"version":3,"file":"app/user-status/server/methods/setUserStatus.ts","sourceRoot":"","sources":["app/user-status/server/methods/setUserStatus.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAGtD,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,6CAA6C,CAAC;AAC5E,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AASpD,MAAM,CAAC,MAAM,mBAAmB,GAAG,KAAK,EAAE,MAAc,EAAE,UAA2B,EAAE,UAA+B,EAAiB,EAAE;IACxI,IAAI,UAAU,EAAE,CAAC;QAChB,IAAI,UAAU,KAAK,SAAS,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,qCAAqC,CAAC,EAAE,CAAC;YACtF,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,0BAA0B,EAAE,8BAA8B,EAAE;gBAClF,MAAM,EAAE,eAAe;aACvB,CAAC,CAAC;QACJ,CAAC;QACD,MAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,UAAU,IAAI,UAAU,KAAK,EAAE,EAAE,CAAC;QACrC,KAAK,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAE1B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,uCAAuC,CAAC,EAAE,CAAC;YAC5D,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,aAAa,EAAE;gBAC1D,MAAM,EAAE,eAAe;aACvB,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IACzC,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO,CAAgB;IAC7B,aAAa,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,EAAE;QAC/C,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC,CAAC;QAC3F,CAAC;QAED,MAAM,mBAAmB,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IAC3D,CAAC;CACD,CAAC,CAAC;AAEH,WAAW,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE;IACjD,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI;CAClB,CAAC,CAAC","sourcesContent":["import { Presence } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { RateLimiter } from '../../../lib/server';\nimport { setStatusText } from '../../../lib/server/functions/setStatusText';\nimport { settings } from '../../../settings/server';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsetUserStatus(statusType: IUser['status'], statusText: IUser['statusText']): void;\n\t}\n}\n\nexport const setUserStatusMethod = async (userId: string, statusType: IUser['status'], statusText: IUser['statusText']): Promise<void> => {\n\tif (statusType) {\n\t\tif (statusType === 'offline' && !settings.get('Accounts_AllowInvisibleStatusOption')) {\n\t\t\tthrow new Meteor.Error('error-status-not-allowed', 'Invisible status is disabled', {\n\t\t\t\tmethod: 'setUserStatus',\n\t\t\t});\n\t\t}\n\t\tawait Presence.setStatus(userId, statusType);\n\t}\n\n\tif (statusText || statusText === '') {\n\t\tcheck(statusText, String);\n\n\t\tif (!settings.get('Accounts_AllowUserStatusMessageChange')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'setUserStatus',\n\t\t\t});\n\t\t}\n\n\t\tawait setStatusText(userId, statusText);\n\t}\n};\n\nMeteor.methods<ServerMethods>({\n\tsetUserStatus: async (statusType, statusText) => {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setUserStatus' });\n\t\t}\n\n\t\tawait setUserStatusMethod(userId, statusType, statusText);\n\t},\n});\n\nRateLimiter.limitMethod('setUserStatus', 1, 1000, {\n\tuserId: () => true,\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/user-status/server/methods/setUserStatus.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/user-status/server/methods/setUserStatus.ts","inputSourceMap":{"version":3,"file":"app/user-status/server/methods/setUserStatus.ts","sourceRoot":"","sources":["app/user-status/server/methods/setUserStatus.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAGtD,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,aAAa,EAAE,MAAM,6CAA6C,CAAC;AAC5E,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AASpD,MAAM,CAAC,MAAM,mBAAmB,GAAG,KAAK,EAAE,MAAc,EAAE,UAA2B,EAAE,UAA+B,EAAiB,EAAE;IACxI,IAAI,UAAU,EAAE,CAAC;QAChB,IAAI,UAAU,KAAK,SAAS,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,qCAAqC,CAAC,EAAE,CAAC;YACtF,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,0BAA0B,EAAE,8BAA8B,EAAE;gBAClF,MAAM,EAAE,eAAe;aACvB,CAAC,CAAC;QACJ,CAAC;QACD,MAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,UAAU,IAAI,UAAU,KAAK,EAAE,EAAE,CAAC;QACrC,KAAK,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAE1B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,uCAAuC,CAAC,EAAE,CAAC;YAC5D,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,aAAa,EAAE;gBAC1D,MAAM,EAAE,eAAe;aACvB,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IACzC,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO,CAAgB;IAC7B,aAAa,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,EAAE;QAC/C,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC,CAAC;QAC3F,CAAC;QAED,MAAM,mBAAmB,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IAC3D,CAAC;CACD,CAAC,CAAC;AAEH,WAAW,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE;IACjD,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI;CAClB,CAAC,CAAC","sourcesContent":["import { Presence } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { RateLimiter } from '../../../lib/server';\nimport { setStatusText } from '../../../lib/server/functions/setStatusText';\nimport { settings } from '../../../settings/server';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsetUserStatus(statusType: IUser['status'], statusText: IUser['statusText']): void;\n\t}\n}\n\nexport const setUserStatusMethod = async (userId: string, statusType: IUser['status'], statusText: IUser['statusText']): Promise<void> => {\n\tif (statusType) {\n\t\tif (statusType === 'offline' && !settings.get('Accounts_AllowInvisibleStatusOption')) {\n\t\t\tthrow new Meteor.Error('error-status-not-allowed', 'Invisible status is disabled', {\n\t\t\t\tmethod: 'setUserStatus',\n\t\t\t});\n\t\t}\n\t\tawait Presence.setStatus(userId, statusType);\n\t}\n\n\tif (statusText || statusText === '') {\n\t\tcheck(statusText, String);\n\n\t\tif (!settings.get('Accounts_AllowUserStatusMessageChange')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'setUserStatus',\n\t\t\t});\n\t\t}\n\n\t\tawait setStatusText(userId, statusText);\n\t}\n};\n\nMeteor.methods<ServerMethods>({\n\tsetUserStatus: async (statusType, statusText) => {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setUserStatus' });\n\t\t}\n\n\t\tawait setUserStatusMethod(userId, statusType, statusText);\n\t},\n});\n\nRateLimiter.limitMethod('setUserStatus', 1, 1000, {\n\tuserId: () => true,\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      setUserStatusMethod: () => setUserStatusMethod\n    });\n    let Presence;\n    module.link(\"@rocket.chat/core-services\", {\n      Presence(v) {\n        Presence = v;\n      }\n    }, 0);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let RateLimiter;\n    module.link(\"../../../lib/server\", {\n      RateLimiter(v) {\n        RateLimiter = v;\n      }\n    }, 3);\n    let setStatusText;\n    module.link(\"../../../lib/server/functions/setStatusText\", {\n      setStatusText(v) {\n        setStatusText = v;\n      }\n    }, 4);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const setUserStatusMethod = async (userId, statusType, statusText) => {\n      if (statusType) {\n        if (statusType === 'offline' && !settings.get('Accounts_AllowInvisibleStatusOption')) {\n          throw new Meteor.Error('error-status-not-allowed', 'Invisible status is disabled', {\n            method: 'setUserStatus'\n          });\n        }\n        await Presence.setStatus(userId, statusType);\n      }\n      if (statusText || statusText === '') {\n        check(statusText, String);\n        if (!settings.get('Accounts_AllowUserStatusMessageChange')) {\n          throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n            method: 'setUserStatus'\n          });\n        }\n        await setStatusText(userId, statusText);\n      }\n    };\n    Meteor.methods({\n      setUserStatus: async (statusType, statusText) => {\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'setUserStatus'\n          });\n        }\n        await setUserStatusMethod(userId, statusType, statusText);\n      }\n    });\n    RateLimiter.limitMethod('setUserStatus', 1, 1000, {\n      userId: () => true\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","setUserStatusMethod","Presence","link","v","check","Meteor","RateLimiter","setStatusText","settings","__reifyWaitForDeps__","userId","statusType","statusText","get","Error","method","setStatus","String","methods","setUserStatus","limitMethod","__reify_async_result__","_reifyError","self","async"],"sources":["app/user-status/server/methods/setUserStatus.ts"],"sourcesContent":["import { Presence } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { RateLimiter } from '../../../lib/server';\nimport { setStatusText } from '../../../lib/server/functions/setStatusText';\nimport { settings } from '../../../settings/server';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsetUserStatus(statusType: IUser['status'], statusText: IUser['statusText']): void;\n\t}\n}\n\nexport const setUserStatusMethod = async (userId: string, statusType: IUser['status'], statusText: IUser['statusText']): Promise<void> => {\n\tif (statusType) {\n\t\tif (statusType === 'offline' && !settings.get('Accounts_AllowInvisibleStatusOption')) {\n\t\t\tthrow new Meteor.Error('error-status-not-allowed', 'Invisible status is disabled', {\n\t\t\t\tmethod: 'setUserStatus',\n\t\t\t});\n\t\t}\n\t\tawait Presence.setStatus(userId, statusType);\n\t}\n\n\tif (statusText || statusText === '') {\n\t\tcheck(statusText, String);\n\n\t\tif (!settings.get('Accounts_AllowUserStatusMessageChange')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t\tmethod: 'setUserStatus',\n\t\t\t});\n\t\t}\n\n\t\tawait setStatusText(userId, statusText);\n\t}\n};\n\nMeteor.methods<ServerMethods>({\n\tsetUserStatus: async (statusType, statusText) => {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setUserStatus' });\n\t\t}\n\n\t\tawait setUserStatusMethod(userId, statusType, statusText);\n\t},\n});\n\nRateLimiter.limitMethod('setUserStatus', 1, 1000, {\n\tuserId: () => true,\n});\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAE;MAAAC,mBAAgB,EAAAA,CAAA,KAAAA;IAA6B;IAAA,IAAAC,QAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,SAAAE,CAAA;QAAAF,QAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA;IAAAN,MAAA,CAAAI,IAAA;MAAAE,MAAAD,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,MAAA;IAAAP,MAAA,CAAAI,IAAA;MAAAG,OAAAF,CAAA;QAAAE,MAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,WAAA;IAAAR,MAAA,CAAAI,IAAA;MAAAI,YAAAH,CAAA;QAAAG,WAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,aAAA;IAAAT,MAAA,CAAAI,IAAA;MAAAK,cAAAJ,CAAA;QAAAI,aAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,QAAA;IAAAV,MAAA,CAAAI,IAAA;MAAAM,SAAAL,CAAA;QAAAK,QAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,oBAAA,WAAAA,oBAAA;IAiB/C,MAAMT,mBAAmB,GAAG,MAAAA,CAAOU,MAAc,EAAEC,UAA2B,EAAEC,UAA+B,KAAmB;MACxI,IAAID,UAAU,EAAE;QACf,IAAIA,UAAU,KAAK,SAAS,IAAI,CAACH,QAAQ,CAACK,GAAG,CAAC,qCAAqC,CAAC,EAAE;UACrF,MAAM,IAAIR,MAAM,CAACS,KAAK,CAAC,0BAA0B,EAAE,8BAA8B,EAAE;YAClFC,MAAM,EAAE;WACR,CAAC;QACH;QACA,MAAMd,QAAQ,CAACe,SAAS,CAACN,MAAM,EAAEC,UAAU,CAAC;MAC7C;MAEA,IAAIC,UAAU,IAAIA,UAAU,KAAK,EAAE,EAAE;QACpCR,KAAK,CAACQ,UAAU,EAAEK,MAAM,CAAC;QAEzB,IAAI,CAACT,QAAQ,CAACK,GAAG,CAAC,uCAAuC,CAAC,EAAE;UAC3D,MAAM,IAAIR,MAAM,CAACS,KAAK,CAAC,mBAAmB,EAAE,aAAa,EAAE;YAC1DC,MAAM,EAAE;WACR,CAAC;QACH;QAEA,MAAMR,aAAa,CAACG,MAAM,EAAEE,UAAU,CAAC;MACxC;IACD,CAAC;IAEDP,MAAM,CAACa,OAAO,CAAgB;MAC7BC,aAAa,EAAE,MAAAA,CAAOR,UAAU,EAAEC,UAAU,KAAI;QAC/C,MAAMF,MAAM,GAAGL,MAAM,CAACK,MAAM,EAAE;QAC9B,IAAI,CAACA,MAAM,EAAE;UACZ,MAAM,IAAIL,MAAM,CAACS,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAAEC,MAAM,EAAE;UAAe,CAAE,CAAC;QAC1F;QAEA,MAAMf,mBAAmB,CAACU,MAAM,EAAEC,UAAU,EAAEC,UAAU,CAAC;MAC1D;KACA,CAAC;IAEFN,WAAW,CAACc,WAAW,CAAC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE;MACjDV,MAAM,EAAEA,CAAA,KAAM;KACd,CAAC;IAACW,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b301a62525919b99b1dab01a5d0154405d36bd56"}
