{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/PrepareChannels.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/admin/import/PrepareChannels.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/PrepareChannels.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/import/PrepareChannels.tsx","sourceRoot":"","sources":["client/views/admin/import/PrepareChannels.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CheckBox, Table, Tag, Pagination, TableHead, TableRow, TableCell, TableBody } from '@rocket.chat/fuselage';\nimport type { Dispatch, SetStateAction, ChangeEvent } from 'react';\nimport React, { useState, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport type { ChannelDescriptor } from './ChannelDescriptor';\n\ntype PrepareChannelsProps = {\n\tchannelsCount: number;\n\tchannels: ChannelDescriptor[];\n\tsetChannels: Dispatch<SetStateAction<ChannelDescriptor[]>>;\n};\n\n// TODO: review inner logic\nconst PrepareChannels = ({ channels, channelsCount, setChannels }: PrepareChannelsProps) => {\n\tconst { t } = useTranslation();\n\tconst [current, setCurrent] = useState(0);\n\tconst [itemsPerPage, setItemsPerPage] = useState<25 | 50 | 100>(25);\n\tconst showingResultsLabel = useCallback(\n\t\t({ count, current, itemsPerPage }) =>\n\t\t\tt('Showing_results_of', { postProcess: 'sprintf', sprintf: [current + 1, Math.min(current + itemsPerPage, count), count] }),\n\t\t[t],\n\t);\n\tconst itemsPerPageLabel = useCallback(() => t('Items_per_page:'), [t]);\n\n\tif (!channels.length) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\tchecked={channelsCount > 0}\n\t\t\t\t\t\t\t\tindeterminate={channelsCount > 0 && channelsCount !== channels.length}\n\t\t\t\t\t\t\t\tonChange={(): void => {\n\t\t\t\t\t\t\t\t\tsetChannels((channels) => {\n\t\t\t\t\t\t\t\t\t\tconst hasCheckedArchivedChannels = channels.some(({ is_archived, do_import }) => is_archived && do_import);\n\t\t\t\t\t\t\t\t\t\tconst isChecking = channelsCount === 0;\n\n\t\t\t\t\t\t\t\t\t\tif (isChecking) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: true }));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (hasCheckedArchivedChannels) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => (channel.is_archived ? { ...channel, do_import: false } : channel));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: false }));\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell is='th'>{t('Name')}</TableCell>\n\t\t\t\t\t\t<TableCell is='th' align='end'></TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{channels.slice(current, current + itemsPerPage).map((channel) => (\n\t\t\t\t\t\t<TableRow key={channel.channel_id}>\n\t\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\t\tchecked={channel.do_import}\n\t\t\t\t\t\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>): void => {\n\t\t\t\t\t\t\t\t\t\tconst { checked } = event.currentTarget;\n\t\t\t\t\t\t\t\t\t\tsetChannels((channels) =>\n\t\t\t\t\t\t\t\t\t\t\tchannels.map((_channel) => (_channel === channel ? { ..._channel, do_import: checked } : _channel)),\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{channel.name}</TableCell>\n\t\t\t\t\t\t\t<TableCell align='end'>{channel.is_archived && <Tag variant='danger'>{t('Importer_Archived')}</Tag>}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t\t<Pagination\n\t\t\t\tcurrent={current}\n\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\titemsPerPageLabel={itemsPerPageLabel}\n\t\t\t\tshowingResultsLabel={showingResultsLabel}\n\t\t\t\tcount={channels.length || 0}\n\t\t\t\tonSetItemsPerPage={setItemsPerPage}\n\t\t\t\tonSetCurrent={setCurrent}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default PrepareChannels;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/PrepareChannels.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/import/PrepareChannels.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/import/PrepareChannels.tsx","sourceRoot":"","sources":["client/views/admin/import/PrepareChannels.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CheckBox, Table, Tag, Pagination, TableHead, TableRow, TableCell, TableBody } from '@rocket.chat/fuselage';\nimport type { Dispatch, SetStateAction, ChangeEvent } from 'react';\nimport React, { useState, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport type { ChannelDescriptor } from './ChannelDescriptor';\n\ntype PrepareChannelsProps = {\n\tchannelsCount: number;\n\tchannels: ChannelDescriptor[];\n\tsetChannels: Dispatch<SetStateAction<ChannelDescriptor[]>>;\n};\n\n// TODO: review inner logic\nconst PrepareChannels = ({ channels, channelsCount, setChannels }: PrepareChannelsProps) => {\n\tconst { t } = useTranslation();\n\tconst [current, setCurrent] = useState(0);\n\tconst [itemsPerPage, setItemsPerPage] = useState<25 | 50 | 100>(25);\n\tconst showingResultsLabel = useCallback(\n\t\t({ count, current, itemsPerPage }) =>\n\t\t\tt('Showing_results_of', { postProcess: 'sprintf', sprintf: [current + 1, Math.min(current + itemsPerPage, count), count] }),\n\t\t[t],\n\t);\n\tconst itemsPerPageLabel = useCallback(() => t('Items_per_page:'), [t]);\n\n\tif (!channels.length) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\tchecked={channelsCount > 0}\n\t\t\t\t\t\t\t\tindeterminate={channelsCount > 0 && channelsCount !== channels.length}\n\t\t\t\t\t\t\t\tonChange={(): void => {\n\t\t\t\t\t\t\t\t\tsetChannels((channels) => {\n\t\t\t\t\t\t\t\t\t\tconst hasCheckedArchivedChannels = channels.some(({ is_archived, do_import }) => is_archived && do_import);\n\t\t\t\t\t\t\t\t\t\tconst isChecking = channelsCount === 0;\n\n\t\t\t\t\t\t\t\t\t\tif (isChecking) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: true }));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (hasCheckedArchivedChannels) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => (channel.is_archived ? { ...channel, do_import: false } : channel));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: false }));\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell is='th'>{t('Name')}</TableCell>\n\t\t\t\t\t\t<TableCell is='th' align='end'></TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{channels.slice(current, current + itemsPerPage).map((channel) => (\n\t\t\t\t\t\t<TableRow key={channel.channel_id}>\n\t\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\t\tchecked={channel.do_import}\n\t\t\t\t\t\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>): void => {\n\t\t\t\t\t\t\t\t\t\tconst { checked } = event.currentTarget;\n\t\t\t\t\t\t\t\t\t\tsetChannels((channels) =>\n\t\t\t\t\t\t\t\t\t\t\tchannels.map((_channel) => (_channel === channel ? { ..._channel, do_import: checked } : _channel)),\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{channel.name}</TableCell>\n\t\t\t\t\t\t\t<TableCell align='end'>{channel.is_archived && <Tag variant='danger'>{t('Importer_Archived')}</Tag>}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t\t<Pagination\n\t\t\t\tcurrent={current}\n\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\titemsPerPageLabel={itemsPerPageLabel}\n\t\t\t\tshowingResultsLabel={showingResultsLabel}\n\t\t\t\tcount={channels.length || 0}\n\t\t\t\tonSetItemsPerPage={setItemsPerPage}\n\t\t\t\tonSetCurrent={setCurrent}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default PrepareChannels;\n"]}}},"code":"var _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nvar _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 1);\nvar CheckBox, Table, Tag, Pagination, TableHead, TableRow, TableCell, TableBody;\nmodule.link(\"@rocket.chat/fuselage\", {\n  CheckBox: function (v) {\n    CheckBox = v;\n  },\n  Table: function (v) {\n    Table = v;\n  },\n  Tag: function (v) {\n    Tag = v;\n  },\n  Pagination: function (v) {\n    Pagination = v;\n  },\n  TableHead: function (v) {\n    TableHead = v;\n  },\n  TableRow: function (v) {\n    TableRow = v;\n  },\n  TableCell: function (v) {\n    TableCell = v;\n  },\n  TableBody: function (v) {\n    TableBody = v;\n  }\n}, 0);\nvar React, useState, useCallback;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  useState: function (v) {\n    useState = v;\n  },\n  useCallback: function (v) {\n    useCallback = v;\n  }\n}, 1);\nvar useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation: function (v) {\n    useTranslation = v;\n  }\n}, 2);\n// TODO: review inner logic\nvar PrepareChannels = function (_ref) {\n  var channels = _ref.channels,\n    channelsCount = _ref.channelsCount,\n    setChannels = _ref.setChannels;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    current = _useState2[0],\n    setCurrent = _useState2[1];\n  var _useState3 = useState(25),\n    _useState4 = _slicedToArray(_useState3, 2),\n    itemsPerPage = _useState4[0],\n    setItemsPerPage = _useState4[1];\n  var showingResultsLabel = useCallback(function (_ref2) {\n    var count = _ref2.count,\n      current = _ref2.current,\n      itemsPerPage = _ref2.itemsPerPage;\n    return t('Showing_results_of', {\n      postProcess: 'sprintf',\n      sprintf: [current + 1, Math.min(current + itemsPerPage, count), count]\n    });\n  }, [t]);\n  var itemsPerPageLabel = useCallback(function () {\n    return t('Items_per_page:');\n  }, [t]);\n  if (!channels.length) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    width: \"x36\"\n  }, /*#__PURE__*/React.createElement(CheckBox, {\n    checked: channelsCount > 0,\n    indeterminate: channelsCount > 0 && channelsCount !== channels.length,\n    onChange: function () {\n      setChannels(function (channels) {\n        var hasCheckedArchivedChannels = channels.some(function (_ref3) {\n          var is_archived = _ref3.is_archived,\n            do_import = _ref3.do_import;\n          return is_archived && do_import;\n        });\n        var isChecking = channelsCount === 0;\n        if (isChecking) {\n          return channels.map(function (channel) {\n            return _objectSpread(_objectSpread({}, channel), {}, {\n              do_import: true\n            });\n          });\n        }\n        if (hasCheckedArchivedChannels) {\n          return channels.map(function (channel) {\n            return channel.is_archived ? _objectSpread(_objectSpread({}, channel), {}, {\n              do_import: false\n            }) : channel;\n          });\n        }\n        return channels.map(function (channel) {\n          return _objectSpread(_objectSpread({}, channel), {}, {\n            do_import: false\n          });\n        });\n      });\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    is: \"th\"\n  }, t('Name')), /*#__PURE__*/React.createElement(TableCell, {\n    is: \"th\",\n    align: \"end\"\n  }))), /*#__PURE__*/React.createElement(TableBody, null, channels.slice(current, current + itemsPerPage).map(function (channel) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: channel.channel_id\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      width: \"x36\"\n    }, /*#__PURE__*/React.createElement(CheckBox, {\n      checked: channel.do_import,\n      onChange: function (event) {\n        var checked = event.currentTarget.checked;\n        setChannels(function (channels) {\n          return channels.map(function (_channel) {\n            return _channel === channel ? _objectSpread(_objectSpread({}, _channel), {}, {\n              do_import: checked\n            }) : _channel;\n          });\n        });\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, null, channel.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"end\"\n    }, channel.is_archived && /*#__PURE__*/React.createElement(Tag, {\n      variant: \"danger\"\n    }, t('Importer_Archived'))));\n  }))), /*#__PURE__*/React.createElement(Pagination, {\n    current: current,\n    itemsPerPage: itemsPerPage,\n    itemsPerPageLabel: itemsPerPageLabel,\n    showingResultsLabel: showingResultsLabel,\n    count: channels.length || 0,\n    onSetItemsPerPage: setItemsPerPage,\n    onSetCurrent: setCurrent\n  }));\n};\nmodule.exportDefault(PrepareChannels);","map":{"version":3,"names":["_objectSpread","module","link","default","v","_slicedToArray","CheckBox","Table","Tag","Pagination","TableHead","TableRow","TableCell","TableBody","React","useState","useCallback","useTranslation","PrepareChannels","_ref","channels","channelsCount","setChannels","_useTranslation","t","_useState","_useState2","current","setCurrent","_useState3","_useState4","itemsPerPage","setItemsPerPage","showingResultsLabel","_ref2","count","postProcess","sprintf","Math","min","itemsPerPageLabel","length","createElement","Fragment","width","checked","indeterminate","onChange","hasCheckedArchivedChannels","some","_ref3","is_archived","do_import","isChecking","map","channel","is","align","slice","key","channel_id","event","currentTarget","_channel","name","variant","onSetItemsPerPage","onSetCurrent","exportDefault"],"sources":["client/views/admin/import/PrepareChannels.tsx"],"sourcesContent":["import { CheckBox, Table, Tag, Pagination, TableHead, TableRow, TableCell, TableBody } from '@rocket.chat/fuselage';\nimport type { Dispatch, SetStateAction, ChangeEvent } from 'react';\nimport React, { useState, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport type { ChannelDescriptor } from './ChannelDescriptor';\n\ntype PrepareChannelsProps = {\n\tchannelsCount: number;\n\tchannels: ChannelDescriptor[];\n\tsetChannels: Dispatch<SetStateAction<ChannelDescriptor[]>>;\n};\n\n// TODO: review inner logic\nconst PrepareChannels = ({ channels, channelsCount, setChannels }: PrepareChannelsProps) => {\n\tconst { t } = useTranslation();\n\tconst [current, setCurrent] = useState(0);\n\tconst [itemsPerPage, setItemsPerPage] = useState<25 | 50 | 100>(25);\n\tconst showingResultsLabel = useCallback(\n\t\t({ count, current, itemsPerPage }) =>\n\t\t\tt('Showing_results_of', { postProcess: 'sprintf', sprintf: [current + 1, Math.min(current + itemsPerPage, count), count] }),\n\t\t[t],\n\t);\n\tconst itemsPerPageLabel = useCallback(() => t('Items_per_page:'), [t]);\n\n\tif (!channels.length) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\tchecked={channelsCount > 0}\n\t\t\t\t\t\t\t\tindeterminate={channelsCount > 0 && channelsCount !== channels.length}\n\t\t\t\t\t\t\t\tonChange={(): void => {\n\t\t\t\t\t\t\t\t\tsetChannels((channels) => {\n\t\t\t\t\t\t\t\t\t\tconst hasCheckedArchivedChannels = channels.some(({ is_archived, do_import }) => is_archived && do_import);\n\t\t\t\t\t\t\t\t\t\tconst isChecking = channelsCount === 0;\n\n\t\t\t\t\t\t\t\t\t\tif (isChecking) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: true }));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (hasCheckedArchivedChannels) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => (channel.is_archived ? { ...channel, do_import: false } : channel));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: false }));\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell is='th'>{t('Name')}</TableCell>\n\t\t\t\t\t\t<TableCell is='th' align='end'></TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{channels.slice(current, current + itemsPerPage).map((channel) => (\n\t\t\t\t\t\t<TableRow key={channel.channel_id}>\n\t\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\t\tchecked={channel.do_import}\n\t\t\t\t\t\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>): void => {\n\t\t\t\t\t\t\t\t\t\tconst { checked } = event.currentTarget;\n\t\t\t\t\t\t\t\t\t\tsetChannels((channels) =>\n\t\t\t\t\t\t\t\t\t\t\tchannels.map((_channel) => (_channel === channel ? { ..._channel, do_import: checked } : _channel)),\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{channel.name}</TableCell>\n\t\t\t\t\t\t\t<TableCell align='end'>{channel.is_archived && <Tag variant='danger'>{t('Importer_Archived')}</Tag>}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t\t<Pagination\n\t\t\t\tcurrent={current}\n\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\titemsPerPageLabel={itemsPerPageLabel}\n\t\t\t\tshowingResultsLabel={showingResultsLabel}\n\t\t\t\tcount={channels.length || 0}\n\t\t\t\tonSetItemsPerPage={setItemsPerPage}\n\t\t\t\tonSetCurrent={setCurrent}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default PrepareChannels;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"5fc60dcf4fd2ce4cffd778efe1e142877ed45f23"}
