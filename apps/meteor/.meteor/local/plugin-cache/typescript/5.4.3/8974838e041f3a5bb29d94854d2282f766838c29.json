{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-cached-collection/client/models/CachedCollection.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/ui-cached-collection/client/models/CachedCollection.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-cached-collection/client/models/CachedCollection.ts","inputSourceMap":{"version":3,"file":"app/ui-cached-collection/client/models/CachedCollection.ts","sourceRoot":"","sources":["app/ui-cached-collection/client/models/CachedCollection.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,WAAW,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAGlD,OAAO,EAAE,OAAO,EAAE,MAAM,gCAAgC,CAAC;AACzD,OAAO,EAAE,SAAS,EAAE,MAAM,wCAAwC,CAAC;AACnE,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,cAAc,EAAE,MAAM,0CAA0C,CAAC;AAC1E,OAAO,EAAE,GAAG,EAAE,MAAM,qCAAqC,CAAC;AAC1D,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAMpE,MAAM,KAAK,GAAG,CAAI,MAAS,EAAiC,EAAE,CAAC,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC;AAChI,MAAM,YAAY,GAAG,CAAI,MAAS,EAAsC,EAAE,CACzE,OAAO,MAAM,KAAK,QAAQ;IAC1B,MAAM,KAAK,IAAI;IACf,YAAY,IAAI,MAAM;IACrB,MAA6C,CAAC,UAAU,YAAY,IAAI,CAAC;AAC3E,MAAM,YAAY,GAAG,CAAI,MAAS,EAAsC,EAAE,CACzE,OAAO,MAAM,KAAK,QAAQ;IAC1B,MAAM,KAAK,IAAI;IACf,YAAY,IAAI,MAAM;IACrB,MAA6C,CAAC,UAAU,YAAY,IAAI,CAAC;AAC3E,MAAM,wBAAwB,GAAG,CAAI,MAAS,EAAuE,EAAE,CACtH,OAAO,MAAM,KAAK,QAAQ;IAC1B,MAAM,KAAK,IAAI;IACf,YAAY,IAAI,MAAM;IACtB,CAAC,CAAE,MAA6C,CAAC,UAAU,YAAY,IAAI,CAAC,CAAC;AAE9E,WAAW,CAAC,MAAM,CAAC;IAClB,IAAI,EAAE,OAAO;CACb,CAAC,CAAC;AAEH,MAAM,OAAO,gBAAmD,SAAQ,OAAmC;IAClG,MAAM,CAAC,cAAc,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAE3C,UAAU,CAAyB;IAEnC,KAAK,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;IAE/B,IAAI,CAAO;IAEX,SAAS,CAAc;IAEvB,OAAO,GAAG,EAAE,CAAC;IAEb,WAAW,CAAU;IAErB,SAAS,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAExB,GAAG,CAA2B;IAE9B,KAAK,CAAgC;IAE5C,YAAY,EAAE,IAAI,EAAE,SAAS,GAAG,aAAa,EAAE,WAAW,GAAG,IAAI,EAAkE;QAClI,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAA2B,CAAC;QAEvE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,IAAI,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,yBAAyB,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,SAAS,CAAC,uBAAuB,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;YACpI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,sBAAsB,IAAI,CAAC,IAAI,EAAE,EAAE,iCAAiC,CAAC;YACjG,CAAC,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC;QAEnB,uBAAuB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEvC,IAAI,CAAC,WAAW,EAAE,CAAC;YAClB,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;YACjB,OAAO;QACR,CAAC;QAED,uBAAuB,CAAC,OAAO,CAAC,GAAG,EAAE;YACpC,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,IAAc,SAAS;QACtB,IAAI,IAAI,CAAC,SAAS,KAAK,aAAa,EAAE,CAAC;YACtC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,IAAI,UAAU,CAAC;QAClD,CAAC;QACD,OAAO,GAAG,IAAI,CAAC,IAAI,UAAU,CAAC;IAC/B,CAAC;IAED,QAAQ;QACP,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE,CAAC;YAChC,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,OAAO,QAAQ,CAAC,iBAAiB,EAAE,CAAC;IACrC,CAAC;IAEO,KAAK,CAAC,aAAa;QAC1B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,OAAO,CAAoF,IAAI,CAAC,IAAI,CAAC,CAAC;QAErI,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACnE,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC;QACd,CAAC;QAED,gFAAgF;QAChF,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,YAAY,IAAI,CAAC,EAAE,CAAC;YACvC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,IAAI,GAAG,gBAAgB,CAAC,cAAc,EAAE,CAAC;YACrF,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,4BAA4B,CAAC,CAAC;QAE7D,MAAM,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE7G,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,mBAAmB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAE3H,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,CAAC;YAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QACtC,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,CAC/C,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CACvH,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;QAElD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;QAE5H,OAAO,IAAI,CAAC;IACb,CAAC;IAES,oBAAoB,CAAC,MAAe;QAC7C,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;YACnD,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,OAAO;YACN,GAAI,MAAuB;YAC3B,GAAG,CAAC,wBAAwB,CAAC,MAAM,CAAC,IAAI;gBACvC,UAAU,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;aACvC,CAAC;SACF,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,QAAQ;QACrB,6CAA6C;QAC7C,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC;QAChD,OAAO,IAAsB,CAAC;IAC/B,CAAC;IAEO,KAAK,CAAC,QAAQ,CAAC,YAAkB;QACxC,6CAA6C;QAC7C,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAAM,EAAE,YAAY,CAAC,CAAC;QAC9D,OAAO,IAA+C,CAAC;IACxD,CAAC;IAEO,KAAK,CAAC,cAAc;QAC3B,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,6BAA6B,CAAC,CAAC;QAEtD,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YACvB,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;gBACvB,OAAO;YACR,CAAC;YAED,MAAM,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,GAAG,EAAuB,EAAE,SAAS,CAAC,CAAC;YAChE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,SAAgB,CAAC,CAAC,CAAC,uCAAuC;YAE/E,IAAI,YAAY,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBACtE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,UAAU,CAAC;YACvC,CAAC;QACF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;IAC3E,CAAC;IAES,oBAAoB,CAAC,MAAS;QACvC,OAAO,MAAsB,CAAC;IAC/B,CAAC;IAES,cAAc,CAAC,MAAS,EAAE,OAA8B;QACjE,OAAO,MAAsB,CAAC;IAC/B,CAAC;IAES,UAAU,CAAC,MAAS,EAAE,OAA8B;QAC7D,OAAO,MAAsB,CAAC;IAC/B,CAAC;IAEO,KAAK,CAAC,yBAAyB;QACtC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;IAED,IAAI,GAAG,cAAc,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;QAChD,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACzB,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;QAC5C,MAAM,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;YACpC,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE;YACtB,OAAO,EAAE,IAAI;SACb,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,kBAAkB;QACjB,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE,CAAC;YAC/B,KAAK,IAAI,CAAC,UAAU,EAAE,CAAC;QACxB,CAAC;IACF,CAAC;IAED,KAAK,CAAC,UAAU;QACf,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC3B,MAAM,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK,CAAC,aAAa;QAClB,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,EAAE,MAA6B,EAAE,MAAW,EAAE,EAAE;YAClG,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;YAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAEtD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;gBACvB,OAAO;YACR,CAAC;YAED,IAAI,MAAM,KAAK,SAAS,EAAE,CAAC;gBAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACvC,CAAC;iBAAM,CAAC;gBACP,MAAM,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC;gBAC1B,IAAI,CAAC,GAAG,EAAE,CAAC;oBACV,OAAO;gBACR,CAAC;gBACD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,GAAG,EAAS,EAAE,SAAS,CAAC,CAAC;YACnD,CAAC;YACD,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAiC,CAAC,CAAC;IACrC,CAAC;IAED,OAAO,CAAC,KAAK,GAAG,EAAE;QACjB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,sDAAsD;QACtD,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,IAAI,EAAE;YAClC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;gBAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC;YACD,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,EAAE,KAAK,CAAC,CAAC;IACX,CAAC;IAED,KAAK,CAAC,IAAI;QACT,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,wBAAwB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAClH,OAAO,KAAK,CAAC;QACd,CAAC;QAED,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAEhC,IAAI,CAAC,GAAG,CAAC,gBAAgB,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAE3C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjD,MAAM,OAAO,GAAG,EAAE,CAAC;QAEnB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3C,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,0BAA0B,CAAC,CAAC;YAC1D,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClC,MAAM,MAAM,GAAG,SAAS,CAAC;gBACzB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAElD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;oBACvB,SAAS;gBACV,CAAC;gBAED,MAAM,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC9E,OAAO,CAAC,IAAI,CAAC;oBACZ,MAAM,EAAE,GAAG,EAAE;wBACZ,MAAM,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC;wBAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,GAAG,EAAuB,EAAE,SAAS,CAAC,CAAC;wBAChE,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;4BACjC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;wBAC7B,CAAC;wBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,SAAgB,CAAC,CAAC,CAAC,uCAAuC;oBAC7E,CAAC;oBACD,SAAS,EAAE,UAAU,CAAC,OAAO,EAAE;iBAC/B,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3C,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,0BAA0B,CAAC,CAAC;YAC1D,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClC,MAAM,MAAM,GAAG,SAAS,CAAC;gBACzB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAElD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC;oBACnD,SAAS;gBACV,CAAC;gBAED,MAAM,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;gBACxC,OAAO,CAAC,IAAI,CAAC;oBACZ,MAAM,EAAE,GAAG,EAAE;wBACZ,MAAM,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC;wBAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,GAAG,EAAuB,CAAC,CAAC;wBACrD,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;4BACjC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;wBAC7B,CAAC;wBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,SAAgB,CAAC,CAAC,CAAC,uCAAuC;oBAC7E,CAAC;oBACD,SAAS,EAAE,UAAU,CAAC,OAAO,EAAE;iBAC/B,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAED,OAAO;aACL,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;aACzC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACd,CAAC,CAAC,MAAM,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QAE1E,OAAO,IAAI,CAAC;IACb,CAAC;IAED,KAAK,CAAC,IAAI;QACT,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEtB,IAAI,MAAM,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC;YAChC,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC;aAAM,CAAC;YACP,MAAM,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACxC,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAErB,uBAAuB,CAAC,WAAW,CAAC,GAAG,EAAE;YACxC,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC","sourcesContent":["import type { StreamNames } from '@rocket.chat/ddp-client';\nimport { Emitter } from '@rocket.chat/emitter';\nimport localforage from 'localforage';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport type { MinimongoCollection } from '../../../../client/definitions/MinimongoCollection';\nimport { baseURI } from '../../../../client/lib/baseURI';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { withDebouncing } from '../../../../lib/utils/highOrderFunctions';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { CachedCollectionManager } from './CachedCollectionManager';\n\nexport type EventType = 'notify-logged' | 'notify-all' | 'notify-user';\n\ntype Name = 'rooms' | 'subscriptions' | 'permissions' | 'public-settings' | 'private-settings';\n\nconst hasId = <T>(record: T): record is T & { _id: string } => typeof record === 'object' && record !== null && '_id' in record;\nconst hasUpdatedAt = <T>(record: T): record is T & { _updatedAt: Date } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_updatedAt' in record &&\n\t(record as unknown as { _updatedAt: unknown })._updatedAt instanceof Date;\nconst hasDeletedAt = <T>(record: T): record is T & { _deletedAt: Date } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_deletedAt' in record &&\n\t(record as unknown as { _deletedAt: unknown })._deletedAt instanceof Date;\nconst hasUnserializedUpdatedAt = <T>(record: T): record is T & { _updatedAt: ConstructorParameters<typeof Date>[0] } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_updatedAt' in record &&\n\t!((record as unknown as { _updatedAt: unknown })._updatedAt instanceof Date);\n\nlocalforage.config({\n\tname: baseURI,\n});\n\nexport class CachedCollection<T extends { _id: string }, U = T> extends Emitter<{ changed: T; removed: T }> {\n\tprivate static MAX_CACHE_TIME = 60 * 60 * 24 * 30;\n\n\tpublic collection: MinimongoCollection<T>;\n\n\tpublic ready = new ReactiveVar(false);\n\n\tpublic name: Name;\n\n\tpublic eventType: StreamNames;\n\n\tpublic version = 18;\n\n\tpublic userRelated: boolean;\n\n\tpublic updatedAt = new Date(0);\n\n\tpublic log: (...args: any[]) => void;\n\n\tpublic timer: ReturnType<typeof setTimeout>;\n\n\tconstructor({ name, eventType = 'notify-user', userRelated = true }: { name: Name; eventType?: StreamNames; userRelated?: boolean }) {\n\t\tsuper();\n\n\t\tthis.collection = new Mongo.Collection(null) as MinimongoCollection<T>;\n\n\t\tthis.name = name;\n\t\tthis.eventType = eventType;\n\t\tthis.userRelated = userRelated;\n\n\t\tthis.log = [getConfig(`debugCachedCollection-${this.name}`), getConfig('debugCachedCollection'), getConfig('debug')].includes('true')\n\t\t\t? console.log.bind(console, `%cCachedCollection ${this.name}`, `color: navy; font-weight: bold;`)\n\t\t\t: () => undefined;\n\n\t\tCachedCollectionManager.register(this);\n\n\t\tif (!userRelated) {\n\t\t\tvoid this.init();\n\t\t\treturn;\n\t\t}\n\n\t\tCachedCollectionManager.onLogin(() => {\n\t\t\tvoid this.init();\n\t\t});\n\t}\n\n\tprotected get eventName(): `${Name}-changed` | `${string}/${Name}-changed` {\n\t\tif (this.eventType === 'notify-user') {\n\t\t\treturn `${Meteor.userId()}/${this.name}-changed`;\n\t\t}\n\t\treturn `${this.name}-changed`;\n\t}\n\n\tgetToken() {\n\t\tif (this.userRelated === false) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Accounts._storedLoginToken();\n\t}\n\n\tprivate async loadFromCache() {\n\t\tconst data = await localforage.getItem<{ version: number; token: unknown; records: unknown[]; updatedAt: Date | string }>(this.name);\n\n\t\tif (!data) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (data.version < this.version || data.token !== this.getToken()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (data.records.length <= 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// updatedAt may be a Date or a string depending on the used localForage backend\n\t\tif (!(data.updatedAt instanceof Date)) {\n\t\t\tdata.updatedAt = new Date(data.updatedAt);\n\t\t}\n\n\t\tif (Date.now() - data.updatedAt.getTime() >= 1000 * CachedCollection.MAX_CACHE_TIME) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.log(`${data.records.length} records loaded from cache`);\n\n\t\tconst deserializedRecords = data.records.map((record) => this.deserializeFromCache(record)).filter(isTruthy);\n\n\t\tconst updatedAt = Math.max(...deserializedRecords.filter(hasUpdatedAt).map((record) => record?._updatedAt.getTime() ?? 0));\n\n\t\tif (updatedAt > this.updatedAt.getTime()) {\n\t\t\tthis.updatedAt = new Date(updatedAt);\n\t\t}\n\n\t\tthis.collection._collection._docs._map = new Map(\n\t\t\tdeserializedRecords.filter(hasId).map((record) => [this.collection._collection._docs._idStringify(record._id), record]),\n\t\t);\n\n\t\tthis.updatedAt = data.updatedAt || this.updatedAt;\n\n\t\tObject.values(this.collection._collection.queries).forEach((query) => this.collection._collection._recomputeResults(query));\n\n\t\treturn true;\n\t}\n\n\tprotected deserializeFromCache(record: unknown): T | undefined {\n\t\tif (typeof record !== 'object' || record === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\t...(record as unknown as T),\n\t\t\t...(hasUnserializedUpdatedAt(record) && {\n\t\t\t\t_updatedAt: new Date(record._updatedAt),\n\t\t\t}),\n\t\t};\n\t}\n\n\tprivate async callLoad() {\n\t\t// TODO: workaround for bad function overload\n\t\tconst data = await sdk.call(`${this.name}/get`);\n\t\treturn data as unknown as U[];\n\t}\n\n\tprivate async callSync(updatedSince: Date) {\n\t\t// TODO: workaround for bad function overload\n\t\tconst data = await sdk.call(`${this.name}/get`, updatedSince);\n\t\treturn data as unknown as { update: U[]; remove: U[] };\n\t}\n\n\tprivate async loadFromServer() {\n\t\tconst startTime = new Date();\n\t\tconst lastTime = this.updatedAt;\n\t\tconst data = await this.callLoad();\n\t\tthis.log(`${data.length} records loaded from server`);\n\n\t\tdata.forEach((record) => {\n\t\t\tconst newRecord = this.handleLoadFromServer(record);\n\t\t\tif (!hasId(newRecord)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { _id } = newRecord;\n\t\t\tthis.collection.upsert({ _id } as Mongo.Selector<T>, newRecord);\n\t\t\tthis.emit('changed', newRecord as any); // TODO: investigate why this is needed\n\n\t\t\tif (hasUpdatedAt(newRecord) && newRecord._updatedAt > this.updatedAt) {\n\t\t\t\tthis.updatedAt = newRecord._updatedAt;\n\t\t\t}\n\t\t});\n\t\tthis.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n\t}\n\n\tprotected handleLoadFromServer(record: U): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprotected handleReceived(record: U, _action: 'removed' | 'changed'): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprotected handleSync(record: U, _action: 'removed' | 'changed'): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprivate async loadFromServerAndPopulate() {\n\t\tawait this.loadFromServer();\n\t\tawait this.save();\n\t}\n\n\tsave = withDebouncing({ wait: 1000 })(async () => {\n\t\tthis.log('saving cache');\n\t\tconst data = this.collection.find().fetch();\n\t\tawait localforage.setItem(this.name, {\n\t\t\tupdatedAt: this.updatedAt,\n\t\t\tversion: this.version,\n\t\t\ttoken: this.getToken(),\n\t\t\trecords: data,\n\t\t});\n\t\tthis.log('saving cache (done)');\n\t});\n\n\tclearCacheOnLogout() {\n\t\tif (this.userRelated === true) {\n\t\t\tvoid this.clearCache();\n\t\t}\n\t}\n\n\tasync clearCache() {\n\t\tthis.log('clearing cache');\n\t\tawait localforage.removeItem(this.name);\n\t\tthis.collection.remove({});\n\t}\n\n\tasync setupListener() {\n\t\tsdk.stream(this.eventType, [this.eventName], (async (action: 'removed' | 'changed', record: any) => {\n\t\t\tthis.log('record received', action, record);\n\t\t\tconst newRecord = this.handleReceived(record, action);\n\n\t\t\tif (!hasId(newRecord)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (action === 'removed') {\n\t\t\t\tthis.collection.remove(newRecord._id);\n\t\t\t} else {\n\t\t\t\tconst { _id } = newRecord;\n\t\t\t\tif (!_id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.collection.upsert({ _id } as any, newRecord);\n\t\t\t}\n\t\t\tawait this.save();\n\t\t}) as (...args: unknown[]) => void);\n\t}\n\n\ttrySync(delay = 10) {\n\t\tclearTimeout(this.timer);\n\t\t// Wait for an empty queue to load data again and sync\n\t\tthis.timer = setTimeout(async () => {\n\t\t\tif (!(await this.sync())) {\n\t\t\t\treturn this.trySync(delay);\n\t\t\t}\n\t\t\tawait this.save();\n\t\t}, delay);\n\t}\n\n\tasync sync() {\n\t\tif (!this.updatedAt || this.updatedAt.getTime() === 0 || Meteor.connection._outstandingMethodBlocks.length !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst startTime = new Date();\n\t\tconst lastTime = this.updatedAt;\n\n\t\tthis.log(`syncing from ${this.updatedAt}`);\n\n\t\tconst data = await this.callSync(this.updatedAt);\n\t\tconst changes = [];\n\n\t\tif (data.update && data.update.length > 0) {\n\t\t\tthis.log(`${data.update.length} records updated in sync`);\n\t\t\tfor (const record of data.update) {\n\t\t\t\tconst action = 'changed';\n\t\t\t\tconst newRecord = this.handleSync(record, action);\n\n\t\t\t\tif (!hasId(newRecord)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst actionTime = hasUpdatedAt(newRecord) ? newRecord._updatedAt : startTime;\n\t\t\t\tchanges.push({\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tconst { _id } = newRecord;\n\t\t\t\t\t\tthis.collection.upsert({ _id } as Mongo.Selector<T>, newRecord);\n\t\t\t\t\t\tif (actionTime > this.updatedAt) {\n\t\t\t\t\t\t\tthis.updatedAt = actionTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(action, newRecord as any); // TODO: investigate why this is needed\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: actionTime.getTime(),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (data.remove && data.remove.length > 0) {\n\t\t\tthis.log(`${data.remove.length} records removed in sync`);\n\t\t\tfor (const record of data.remove) {\n\t\t\t\tconst action = 'removed';\n\t\t\t\tconst newRecord = this.handleSync(record, action);\n\n\t\t\t\tif (!hasId(newRecord) || !hasDeletedAt(newRecord)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst actionTime = newRecord._deletedAt;\n\t\t\t\tchanges.push({\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tconst { _id } = newRecord;\n\t\t\t\t\t\tthis.collection.remove({ _id } as Mongo.Selector<T>);\n\t\t\t\t\t\tif (actionTime > this.updatedAt) {\n\t\t\t\t\t\t\tthis.updatedAt = actionTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(action, newRecord as any); // TODO: investigate why this is needed\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: actionTime.getTime(),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tchanges\n\t\t\t.sort((a, b) => a.timestamp - b.timestamp)\n\t\t\t.forEach((c) => {\n\t\t\t\tc.action();\n\t\t\t});\n\n\t\tthis.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n\n\t\treturn true;\n\t}\n\n\tasync init() {\n\t\tthis.ready.set(false);\n\n\t\tif (await this.loadFromCache()) {\n\t\t\tthis.trySync();\n\t\t} else {\n\t\t\tawait this.loadFromServerAndPopulate();\n\t\t}\n\n\t\tthis.ready.set(true);\n\n\t\tCachedCollectionManager.onReconnect(() => {\n\t\t\tthis.trySync();\n\t\t});\n\n\t\treturn this.setupListener();\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-cached-collection/client/models/CachedCollection.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-cached-collection/client/models/CachedCollection.ts","inputSourceMap":{"version":3,"file":"app/ui-cached-collection/client/models/CachedCollection.ts","sourceRoot":"","sources":["app/ui-cached-collection/client/models/CachedCollection.ts"],"names":[],"mappings":"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","sourcesContent":["import type { StreamNames } from '@rocket.chat/ddp-client';\nimport { Emitter } from '@rocket.chat/emitter';\nimport localforage from 'localforage';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport type { MinimongoCollection } from '../../../../client/definitions/MinimongoCollection';\nimport { baseURI } from '../../../../client/lib/baseURI';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { withDebouncing } from '../../../../lib/utils/highOrderFunctions';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { CachedCollectionManager } from './CachedCollectionManager';\n\nexport type EventType = 'notify-logged' | 'notify-all' | 'notify-user';\n\ntype Name = 'rooms' | 'subscriptions' | 'permissions' | 'public-settings' | 'private-settings';\n\nconst hasId = <T>(record: T): record is T & { _id: string } => typeof record === 'object' && record !== null && '_id' in record;\nconst hasUpdatedAt = <T>(record: T): record is T & { _updatedAt: Date } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_updatedAt' in record &&\n\t(record as unknown as { _updatedAt: unknown })._updatedAt instanceof Date;\nconst hasDeletedAt = <T>(record: T): record is T & { _deletedAt: Date } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_deletedAt' in record &&\n\t(record as unknown as { _deletedAt: unknown })._deletedAt instanceof Date;\nconst hasUnserializedUpdatedAt = <T>(record: T): record is T & { _updatedAt: ConstructorParameters<typeof Date>[0] } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_updatedAt' in record &&\n\t!((record as unknown as { _updatedAt: unknown })._updatedAt instanceof Date);\n\nlocalforage.config({\n\tname: baseURI,\n});\n\nexport class CachedCollection<T extends { _id: string }, U = T> extends Emitter<{ changed: T; removed: T }> {\n\tprivate static MAX_CACHE_TIME = 60 * 60 * 24 * 30;\n\n\tpublic collection: MinimongoCollection<T>;\n\n\tpublic ready = new ReactiveVar(false);\n\n\tpublic name: Name;\n\n\tpublic eventType: StreamNames;\n\n\tpublic version = 18;\n\n\tpublic userRelated: boolean;\n\n\tpublic updatedAt = new Date(0);\n\n\tpublic log: (...args: any[]) => void;\n\n\tpublic timer: ReturnType<typeof setTimeout>;\n\n\tconstructor({ name, eventType = 'notify-user', userRelated = true }: { name: Name; eventType?: StreamNames; userRelated?: boolean }) {\n\t\tsuper();\n\n\t\tthis.collection = new Mongo.Collection(null) as MinimongoCollection<T>;\n\n\t\tthis.name = name;\n\t\tthis.eventType = eventType;\n\t\tthis.userRelated = userRelated;\n\n\t\tthis.log = [getConfig(`debugCachedCollection-${this.name}`), getConfig('debugCachedCollection'), getConfig('debug')].includes('true')\n\t\t\t? console.log.bind(console, `%cCachedCollection ${this.name}`, `color: navy; font-weight: bold;`)\n\t\t\t: () => undefined;\n\n\t\tCachedCollectionManager.register(this);\n\n\t\tif (!userRelated) {\n\t\t\tvoid this.init();\n\t\t\treturn;\n\t\t}\n\n\t\tCachedCollectionManager.onLogin(() => {\n\t\t\tvoid this.init();\n\t\t});\n\t}\n\n\tprotected get eventName(): `${Name}-changed` | `${string}/${Name}-changed` {\n\t\tif (this.eventType === 'notify-user') {\n\t\t\treturn `${Meteor.userId()}/${this.name}-changed`;\n\t\t}\n\t\treturn `${this.name}-changed`;\n\t}\n\n\tgetToken() {\n\t\tif (this.userRelated === false) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Accounts._storedLoginToken();\n\t}\n\n\tprivate async loadFromCache() {\n\t\tconst data = await localforage.getItem<{ version: number; token: unknown; records: unknown[]; updatedAt: Date | string }>(this.name);\n\n\t\tif (!data) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (data.version < this.version || data.token !== this.getToken()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (data.records.length <= 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// updatedAt may be a Date or a string depending on the used localForage backend\n\t\tif (!(data.updatedAt instanceof Date)) {\n\t\t\tdata.updatedAt = new Date(data.updatedAt);\n\t\t}\n\n\t\tif (Date.now() - data.updatedAt.getTime() >= 1000 * CachedCollection.MAX_CACHE_TIME) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.log(`${data.records.length} records loaded from cache`);\n\n\t\tconst deserializedRecords = data.records.map((record) => this.deserializeFromCache(record)).filter(isTruthy);\n\n\t\tconst updatedAt = Math.max(...deserializedRecords.filter(hasUpdatedAt).map((record) => record?._updatedAt.getTime() ?? 0));\n\n\t\tif (updatedAt > this.updatedAt.getTime()) {\n\t\t\tthis.updatedAt = new Date(updatedAt);\n\t\t}\n\n\t\tthis.collection._collection._docs._map = new Map(\n\t\t\tdeserializedRecords.filter(hasId).map((record) => [this.collection._collection._docs._idStringify(record._id), record]),\n\t\t);\n\n\t\tthis.updatedAt = data.updatedAt || this.updatedAt;\n\n\t\tObject.values(this.collection._collection.queries).forEach((query) => this.collection._collection._recomputeResults(query));\n\n\t\treturn true;\n\t}\n\n\tprotected deserializeFromCache(record: unknown): T | undefined {\n\t\tif (typeof record !== 'object' || record === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\t...(record as unknown as T),\n\t\t\t...(hasUnserializedUpdatedAt(record) && {\n\t\t\t\t_updatedAt: new Date(record._updatedAt),\n\t\t\t}),\n\t\t};\n\t}\n\n\tprivate async callLoad() {\n\t\t// TODO: workaround for bad function overload\n\t\tconst data = await sdk.call(`${this.name}/get`);\n\t\treturn data as unknown as U[];\n\t}\n\n\tprivate async callSync(updatedSince: Date) {\n\t\t// TODO: workaround for bad function overload\n\t\tconst data = await sdk.call(`${this.name}/get`, updatedSince);\n\t\treturn data as unknown as { update: U[]; remove: U[] };\n\t}\n\n\tprivate async loadFromServer() {\n\t\tconst startTime = new Date();\n\t\tconst lastTime = this.updatedAt;\n\t\tconst data = await this.callLoad();\n\t\tthis.log(`${data.length} records loaded from server`);\n\n\t\tdata.forEach((record) => {\n\t\t\tconst newRecord = this.handleLoadFromServer(record);\n\t\t\tif (!hasId(newRecord)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { _id } = newRecord;\n\t\t\tthis.collection.upsert({ _id } as Mongo.Selector<T>, newRecord);\n\t\t\tthis.emit('changed', newRecord as any); // TODO: investigate why this is needed\n\n\t\t\tif (hasUpdatedAt(newRecord) && newRecord._updatedAt > this.updatedAt) {\n\t\t\t\tthis.updatedAt = newRecord._updatedAt;\n\t\t\t}\n\t\t});\n\t\tthis.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n\t}\n\n\tprotected handleLoadFromServer(record: U): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprotected handleReceived(record: U, _action: 'removed' | 'changed'): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprotected handleSync(record: U, _action: 'removed' | 'changed'): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprivate async loadFromServerAndPopulate() {\n\t\tawait this.loadFromServer();\n\t\tawait this.save();\n\t}\n\n\tsave = withDebouncing({ wait: 1000 })(async () => {\n\t\tthis.log('saving cache');\n\t\tconst data = this.collection.find().fetch();\n\t\tawait localforage.setItem(this.name, {\n\t\t\tupdatedAt: this.updatedAt,\n\t\t\tversion: this.version,\n\t\t\ttoken: this.getToken(),\n\t\t\trecords: data,\n\t\t});\n\t\tthis.log('saving cache (done)');\n\t});\n\n\tclearCacheOnLogout() {\n\t\tif (this.userRelated === true) {\n\t\t\tvoid this.clearCache();\n\t\t}\n\t}\n\n\tasync clearCache() {\n\t\tthis.log('clearing cache');\n\t\tawait localforage.removeItem(this.name);\n\t\tthis.collection.remove({});\n\t}\n\n\tasync setupListener() {\n\t\tsdk.stream(this.eventType, [this.eventName], (async (action: 'removed' | 'changed', record: any) => {\n\t\t\tthis.log('record received', action, record);\n\t\t\tconst newRecord = this.handleReceived(record, action);\n\n\t\t\tif (!hasId(newRecord)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (action === 'removed') {\n\t\t\t\tthis.collection.remove(newRecord._id);\n\t\t\t} else {\n\t\t\t\tconst { _id } = newRecord;\n\t\t\t\tif (!_id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.collection.upsert({ _id } as any, newRecord);\n\t\t\t}\n\t\t\tawait this.save();\n\t\t}) as (...args: unknown[]) => void);\n\t}\n\n\ttrySync(delay = 10) {\n\t\tclearTimeout(this.timer);\n\t\t// Wait for an empty queue to load data again and sync\n\t\tthis.timer = setTimeout(async () => {\n\t\t\tif (!(await this.sync())) {\n\t\t\t\treturn this.trySync(delay);\n\t\t\t}\n\t\t\tawait this.save();\n\t\t}, delay);\n\t}\n\n\tasync sync() {\n\t\tif (!this.updatedAt || this.updatedAt.getTime() === 0 || Meteor.connection._outstandingMethodBlocks.length !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst startTime = new Date();\n\t\tconst lastTime = this.updatedAt;\n\n\t\tthis.log(`syncing from ${this.updatedAt}`);\n\n\t\tconst data = await this.callSync(this.updatedAt);\n\t\tconst changes = [];\n\n\t\tif (data.update && data.update.length > 0) {\n\t\t\tthis.log(`${data.update.length} records updated in sync`);\n\t\t\tfor (const record of data.update) {\n\t\t\t\tconst action = 'changed';\n\t\t\t\tconst newRecord = this.handleSync(record, action);\n\n\t\t\t\tif (!hasId(newRecord)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst actionTime = hasUpdatedAt(newRecord) ? newRecord._updatedAt : startTime;\n\t\t\t\tchanges.push({\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tconst { _id } = newRecord;\n\t\t\t\t\t\tthis.collection.upsert({ _id } as Mongo.Selector<T>, newRecord);\n\t\t\t\t\t\tif (actionTime > this.updatedAt) {\n\t\t\t\t\t\t\tthis.updatedAt = actionTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(action, newRecord as any); // TODO: investigate why this is needed\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: actionTime.getTime(),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (data.remove && data.remove.length > 0) {\n\t\t\tthis.log(`${data.remove.length} records removed in sync`);\n\t\t\tfor (const record of data.remove) {\n\t\t\t\tconst action = 'removed';\n\t\t\t\tconst newRecord = this.handleSync(record, action);\n\n\t\t\t\tif (!hasId(newRecord) || !hasDeletedAt(newRecord)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst actionTime = newRecord._deletedAt;\n\t\t\t\tchanges.push({\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tconst { _id } = newRecord;\n\t\t\t\t\t\tthis.collection.remove({ _id } as Mongo.Selector<T>);\n\t\t\t\t\t\tif (actionTime > this.updatedAt) {\n\t\t\t\t\t\t\tthis.updatedAt = actionTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(action, newRecord as any); // TODO: investigate why this is needed\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: actionTime.getTime(),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tchanges\n\t\t\t.sort((a, b) => a.timestamp - b.timestamp)\n\t\t\t.forEach((c) => {\n\t\t\t\tc.action();\n\t\t\t});\n\n\t\tthis.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n\n\t\treturn true;\n\t}\n\n\tasync init() {\n\t\tthis.ready.set(false);\n\n\t\tif (await this.loadFromCache()) {\n\t\t\tthis.trySync();\n\t\t} else {\n\t\t\tawait this.loadFromServerAndPopulate();\n\t\t}\n\n\t\tthis.ready.set(true);\n\n\t\tCachedCollectionManager.onReconnect(() => {\n\t\t\tthis.trySync();\n\t\t});\n\n\t\treturn this.setupListener();\n\t}\n}\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _createForOfIteratorHelperLoose;\nmodule.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\", {\n  default: function (v) {\n    _createForOfIteratorHelperLoose = v;\n  }\n}, 1);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 2);\nvar _toConsumableArray;\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 3);\nvar _createClass;\nmodule.link(\"@babel/runtime/helpers/createClass\", {\n  default: function (v) {\n    _createClass = v;\n  }\n}, 4);\nvar _assertThisInitialized;\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 5);\nvar _inheritsLoose;\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 6);\nvar _typeof;\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 7);\nmodule.export({\n  CachedCollection: function () {\n    return CachedCollection;\n  }\n});\nvar Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter: function (v) {\n    Emitter = v;\n  }\n}, 0);\nvar localforage;\nmodule.link(\"localforage\", {\n  \"default\": function (v) {\n    localforage = v;\n  }\n}, 1);\nvar Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 2);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 3);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 4);\nvar ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 5);\nvar baseURI;\nmodule.link(\"../../../../client/lib/baseURI\", {\n  baseURI: function (v) {\n    baseURI = v;\n  }\n}, 6);\nvar getConfig;\nmodule.link(\"../../../../client/lib/utils/getConfig\", {\n  getConfig: function (v) {\n    getConfig = v;\n  }\n}, 7);\nvar isTruthy;\nmodule.link(\"../../../../lib/isTruthy\", {\n  isTruthy: function (v) {\n    isTruthy = v;\n  }\n}, 8);\nvar withDebouncing;\nmodule.link(\"../../../../lib/utils/highOrderFunctions\", {\n  withDebouncing: function (v) {\n    withDebouncing = v;\n  }\n}, 9);\nvar sdk;\nmodule.link(\"../../../utils/client/lib/SDKClient\", {\n  sdk: function (v) {\n    sdk = v;\n  }\n}, 10);\nvar CachedCollectionManager;\nmodule.link(\"./CachedCollectionManager\", {\n  CachedCollectionManager: function (v) {\n    CachedCollectionManager = v;\n  }\n}, 11);\nvar hasId = function (record) {\n  return _typeof(record) === 'object' && record !== null && '_id' in record;\n};\nvar hasUpdatedAt = function (record) {\n  return _typeof(record) === 'object' && record !== null && '_updatedAt' in record && record._updatedAt instanceof Date;\n};\nvar hasDeletedAt = function (record) {\n  return _typeof(record) === 'object' && record !== null && '_deletedAt' in record && record._deletedAt instanceof Date;\n};\nvar hasUnserializedUpdatedAt = function (record) {\n  return _typeof(record) === 'object' && record !== null && '_updatedAt' in record && !(record._updatedAt instanceof Date);\n};\nlocalforage.config({\n  name: baseURI\n});\nvar CachedCollection = /*#__PURE__*/function (_Emitter) {\n  function CachedCollection(_ref) {\n    var _this;\n    var name = _ref.name,\n      _ref$eventType = _ref.eventType,\n      eventType = _ref$eventType === void 0 ? 'notify-user' : _ref$eventType,\n      _ref$userRelated = _ref.userRelated,\n      userRelated = _ref$userRelated === void 0 ? true : _ref$userRelated;\n    _this = _Emitter.call(this) || this;\n    _this.collection = void 0;\n    _this.ready = new ReactiveVar(false);\n    _this.name = void 0;\n    _this.eventType = void 0;\n    _this.version = 18;\n    _this.userRelated = void 0;\n    _this.updatedAt = new Date(0);\n    _this.log = void 0;\n    _this.timer = void 0;\n    _this.save = withDebouncing({\n      wait: 1000\n    })(function () {\n      function _callee() {\n        var data;\n        return _regeneratorRuntime.async(function () {\n          function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _this.log('saving cache');\n                data = _this.collection.find().fetch();\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(localforage.setItem(_this.name, {\n                  updatedAt: _this.updatedAt,\n                  version: _this.version,\n                  token: _this.getToken(),\n                  records: data\n                }));\n              case 4:\n                _this.log('saving cache (done)');\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n          return _callee$;\n        }(), null, null, null, Promise);\n      }\n      return _callee;\n    }());\n    _this.collection = new Mongo.Collection(null);\n    _this.name = name;\n    _this.eventType = eventType;\n    _this.userRelated = userRelated;\n    _this.log = [getConfig(\"debugCachedCollection-\" + _this.name), getConfig('debugCachedCollection'), getConfig('debug')].includes('true') ? console.log.bind(console, \"%cCachedCollection \" + _this.name, \"color: navy; font-weight: bold;\") : function () {\n      return undefined;\n    };\n    CachedCollectionManager.register(_this);\n    if (!userRelated) {\n      void _this.init();\n      return _assertThisInitialized(_this);\n    }\n    CachedCollectionManager.onLogin(function () {\n      void _this.init();\n    });\n    return _this;\n  }\n  _inheritsLoose(CachedCollection, _Emitter);\n  var _proto = CachedCollection.prototype;\n  _proto.getToken = function () {\n    function getToken() {\n      if (this.userRelated === false) {\n        return undefined;\n      }\n      return Accounts._storedLoginToken();\n    }\n    return getToken;\n  }();\n  _proto.loadFromCache = function () {\n    function loadFromCache() {\n      var _this2 = this;\n      var data, deserializedRecords, updatedAt;\n      return _regeneratorRuntime.async(function () {\n        function loadFromCache$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(localforage.getItem(this.name));\n            case 2:\n              data = _context2.sent;\n              if (data) {\n                _context2.next = 5;\n                break;\n              }\n              return _context2.abrupt(\"return\", false);\n            case 5:\n              if (!(data.version < this.version || data.token !== this.getToken())) {\n                _context2.next = 7;\n                break;\n              }\n              return _context2.abrupt(\"return\", false);\n            case 7:\n              if (!(data.records.length <= 0)) {\n                _context2.next = 9;\n                break;\n              }\n              return _context2.abrupt(\"return\", false);\n            case 9:\n              // updatedAt may be a Date or a string depending on the used localForage backend\n              if (!(data.updatedAt instanceof Date)) {\n                data.updatedAt = new Date(data.updatedAt);\n              }\n              if (!(Date.now() - data.updatedAt.getTime() >= 1000 * CachedCollection.MAX_CACHE_TIME)) {\n                _context2.next = 12;\n                break;\n              }\n              return _context2.abrupt(\"return\", false);\n            case 12:\n              this.log(data.records.length + \" records loaded from cache\");\n              deserializedRecords = data.records.map(function (record) {\n                return _this2.deserializeFromCache(record);\n              }).filter(isTruthy);\n              updatedAt = Math.max.apply(Math, _toConsumableArray(deserializedRecords.filter(hasUpdatedAt).map(function (record) {\n                var _record$_updatedAt$ge;\n                return (_record$_updatedAt$ge = record === null || record === void 0 ? void 0 : record._updatedAt.getTime()) !== null && _record$_updatedAt$ge !== void 0 ? _record$_updatedAt$ge : 0;\n              })));\n              if (updatedAt > this.updatedAt.getTime()) {\n                this.updatedAt = new Date(updatedAt);\n              }\n              this.collection._collection._docs._map = new Map(deserializedRecords.filter(hasId).map(function (record) {\n                return [_this2.collection._collection._docs._idStringify(record._id), record];\n              }));\n              this.updatedAt = data.updatedAt || this.updatedAt;\n              Object.values(this.collection._collection.queries).forEach(function (query) {\n                return _this2.collection._collection._recomputeResults(query);\n              });\n              return _context2.abrupt(\"return\", true);\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n        return loadFromCache$;\n      }(), null, this, null, Promise);\n    }\n    return loadFromCache;\n  }();\n  _proto.deserializeFromCache = function () {\n    function deserializeFromCache(record) {\n      if (_typeof(record) !== 'object' || record === null) {\n        return undefined;\n      }\n      return _objectSpread(_objectSpread({}, record), hasUnserializedUpdatedAt(record) && {\n        _updatedAt: new Date(record._updatedAt)\n      });\n    }\n    return deserializeFromCache;\n  }();\n  _proto.callLoad = function () {\n    function callLoad() {\n      var data;\n      return _regeneratorRuntime.async(function () {\n        function callLoad$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(sdk.call(this.name + \"/get\"));\n            case 2:\n              data = _context3.sent;\n              return _context3.abrupt(\"return\", data);\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n        return callLoad$;\n      }(), null, this, null, Promise);\n    }\n    return callLoad;\n  }();\n  _proto.callSync = function () {\n    function callSync(updatedSince) {\n      var data;\n      return _regeneratorRuntime.async(function () {\n        function callSync$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(sdk.call(this.name + \"/get\", updatedSince));\n            case 2:\n              data = _context4.sent;\n              return _context4.abrupt(\"return\", data);\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n        return callSync$;\n      }(), null, this, null, Promise);\n    }\n    return callSync;\n  }();\n  _proto.loadFromServer = function () {\n    function loadFromServer() {\n      var _this3 = this;\n      var startTime, lastTime, data;\n      return _regeneratorRuntime.async(function () {\n        function loadFromServer$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              startTime = new Date();\n              lastTime = this.updatedAt;\n              _context5.next = 4;\n              return _regeneratorRuntime.awrap(this.callLoad());\n            case 4:\n              data = _context5.sent;\n              this.log(data.length + \" records loaded from server\");\n              data.forEach(function (record) {\n                var newRecord = _this3.handleLoadFromServer(record);\n                if (!hasId(newRecord)) {\n                  return;\n                }\n                var _id = newRecord._id;\n                _this3.collection.upsert({\n                  _id: _id\n                }, newRecord);\n                _this3.emit('changed', newRecord); // TODO: investigate why this is needed\n                if (hasUpdatedAt(newRecord) && newRecord._updatedAt > _this3.updatedAt) {\n                  _this3.updatedAt = newRecord._updatedAt;\n                }\n              });\n              this.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n        return loadFromServer$;\n      }(), null, this, null, Promise);\n    }\n    return loadFromServer;\n  }();\n  _proto.handleLoadFromServer = function () {\n    function handleLoadFromServer(record) {\n      return record;\n    }\n    return handleLoadFromServer;\n  }();\n  _proto.handleReceived = function () {\n    function handleReceived(record, _action) {\n      return record;\n    }\n    return handleReceived;\n  }();\n  _proto.handleSync = function () {\n    function handleSync(record, _action) {\n      return record;\n    }\n    return handleSync;\n  }();\n  _proto.loadFromServerAndPopulate = function () {\n    function loadFromServerAndPopulate() {\n      return _regeneratorRuntime.async(function () {\n        function loadFromServerAndPopulate$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(this.loadFromServer());\n            case 2:\n              _context6.next = 4;\n              return _regeneratorRuntime.awrap(this.save());\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n        return loadFromServerAndPopulate$;\n      }(), null, this, null, Promise);\n    }\n    return loadFromServerAndPopulate;\n  }();\n  _proto.clearCacheOnLogout = function () {\n    function clearCacheOnLogout() {\n      if (this.userRelated === true) {\n        void this.clearCache();\n      }\n    }\n    return clearCacheOnLogout;\n  }();\n  _proto.clearCache = function () {\n    function clearCache() {\n      return _regeneratorRuntime.async(function () {\n        function clearCache$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              this.log('clearing cache');\n              _context7.next = 3;\n              return _regeneratorRuntime.awrap(localforage.removeItem(this.name));\n            case 3:\n              this.collection.remove({});\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n        return clearCache$;\n      }(), null, this, null, Promise);\n    }\n    return clearCache;\n  }();\n  _proto.setupListener = function () {\n    function setupListener() {\n      var _this4 = this;\n      return _regeneratorRuntime.async(function () {\n        function setupListener$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              sdk.stream(this.eventType, [this.eventName], function () {\n                function _callee2(action, record) {\n                  var newRecord, _id;\n                  return _regeneratorRuntime.async(function () {\n                    function _callee2$(_context8) {\n                      while (1) switch (_context8.prev = _context8.next) {\n                        case 0:\n                          _this4.log('record received', action, record);\n                          newRecord = _this4.handleReceived(record, action);\n                          if (hasId(newRecord)) {\n                            _context8.next = 4;\n                            break;\n                          }\n                          return _context8.abrupt(\"return\");\n                        case 4:\n                          if (!(action === 'removed')) {\n                            _context8.next = 8;\n                            break;\n                          }\n                          _this4.collection.remove(newRecord._id);\n                          _context8.next = 12;\n                          break;\n                        case 8:\n                          _id = newRecord._id;\n                          if (_id) {\n                            _context8.next = 11;\n                            break;\n                          }\n                          return _context8.abrupt(\"return\");\n                        case 11:\n                          _this4.collection.upsert({\n                            _id: _id\n                          }, newRecord);\n                        case 12:\n                          _context8.next = 14;\n                          return _regeneratorRuntime.awrap(_this4.save());\n                        case 14:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                    return _callee2$;\n                  }(), null, null, null, Promise);\n                }\n                return _callee2;\n              }());\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n        return setupListener$;\n      }(), null, this, null, Promise);\n    }\n    return setupListener;\n  }();\n  _proto.trySync = function () {\n    function trySync() {\n      var _this5 = this;\n      var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      clearTimeout(this.timer);\n      // Wait for an empty queue to load data again and sync\n      this.timer = setTimeout(function () {\n        function _callee3() {\n          return _regeneratorRuntime.async(function () {\n            function _callee3$(_context10) {\n              while (1) switch (_context10.prev = _context10.next) {\n                case 0:\n                  _context10.next = 2;\n                  return _regeneratorRuntime.awrap(_this5.sync());\n                case 2:\n                  if (_context10.sent) {\n                    _context10.next = 4;\n                    break;\n                  }\n                  return _context10.abrupt(\"return\", _this5.trySync(delay));\n                case 4:\n                  _context10.next = 6;\n                  return _regeneratorRuntime.awrap(_this5.save());\n                case 6:\n                case \"end\":\n                  return _context10.stop();\n              }\n            }\n            return _callee3$;\n          }(), null, null, null, Promise);\n        }\n        return _callee3;\n      }(), delay);\n    }\n    return trySync;\n  }();\n  _proto.sync = function () {\n    function sync() {\n      var _this6 = this;\n      var startTime, lastTime, data, changes, _loop, _iterator, _step, record, _loop2, _iterator2, _step2, _record;\n      return _regeneratorRuntime.async(function () {\n        function sync$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              if (!(!this.updatedAt || this.updatedAt.getTime() === 0 || Meteor.connection._outstandingMethodBlocks.length !== 0)) {\n                _context13.next = 2;\n                break;\n              }\n              return _context13.abrupt(\"return\", false);\n            case 2:\n              startTime = new Date();\n              lastTime = this.updatedAt;\n              this.log(\"syncing from \" + this.updatedAt);\n              _context13.next = 7;\n              return _regeneratorRuntime.awrap(this.callSync(this.updatedAt));\n            case 7:\n              data = _context13.sent;\n              changes = [];\n              if (!(data.update && data.update.length > 0)) {\n                _context13.next = 21;\n                break;\n              }\n              this.log(data.update.length + \" records updated in sync\");\n              _loop = function () {\n                function _callee4() {\n                  var action, newRecord, actionTime;\n                  return _regeneratorRuntime.async(function () {\n                    function _callee4$(_context11) {\n                      while (1) switch (_context11.prev = _context11.next) {\n                        case 0:\n                          action = 'changed';\n                          newRecord = _this6.handleSync(record, action);\n                          if (hasId(newRecord)) {\n                            _context11.next = 4;\n                            break;\n                          }\n                          return _context11.abrupt(\"return\", 1);\n                        case 4:\n                          actionTime = hasUpdatedAt(newRecord) ? newRecord._updatedAt : startTime;\n                          changes.push({\n                            action: function () {\n                              var _id = newRecord._id;\n                              _this6.collection.upsert({\n                                _id: _id\n                              }, newRecord);\n                              if (actionTime > _this6.updatedAt) {\n                                _this6.updatedAt = actionTime;\n                              }\n                              _this6.emit(action, newRecord); // TODO: investigate why this is needed\n                            },\n                            timestamp: actionTime.getTime()\n                          });\n                        case 6:\n                        case \"end\":\n                          return _context11.stop();\n                      }\n                    }\n                    return _callee4$;\n                  }(), null, null, null, Promise);\n                }\n                return _callee4;\n              }();\n              _iterator = _createForOfIteratorHelperLoose(data.update);\n            case 13:\n              if ((_step = _iterator()).done) {\n                _context13.next = 21;\n                break;\n              }\n              record = _step.value;\n              _context13.next = 17;\n              return _regeneratorRuntime.awrap(_loop());\n            case 17:\n              if (!_context13.sent) {\n                _context13.next = 19;\n                break;\n              }\n              return _context13.abrupt(\"continue\", 19);\n            case 19:\n              _context13.next = 13;\n              break;\n            case 21:\n              if (!(data.remove && data.remove.length > 0)) {\n                _context13.next = 33;\n                break;\n              }\n              this.log(data.remove.length + \" records removed in sync\");\n              _loop2 = function () {\n                function _callee5() {\n                  var action, newRecord, actionTime;\n                  return _regeneratorRuntime.async(function () {\n                    function _callee5$(_context12) {\n                      while (1) switch (_context12.prev = _context12.next) {\n                        case 0:\n                          action = 'removed';\n                          newRecord = _this6.handleSync(_record, action);\n                          if (!(!hasId(newRecord) || !hasDeletedAt(newRecord))) {\n                            _context12.next = 4;\n                            break;\n                          }\n                          return _context12.abrupt(\"return\", 1);\n                        case 4:\n                          actionTime = newRecord._deletedAt;\n                          changes.push({\n                            action: function () {\n                              var _id = newRecord._id;\n                              _this6.collection.remove({\n                                _id: _id\n                              });\n                              if (actionTime > _this6.updatedAt) {\n                                _this6.updatedAt = actionTime;\n                              }\n                              _this6.emit(action, newRecord); // TODO: investigate why this is needed\n                            },\n                            timestamp: actionTime.getTime()\n                          });\n                        case 6:\n                        case \"end\":\n                          return _context12.stop();\n                      }\n                    }\n                    return _callee5$;\n                  }(), null, null, null, Promise);\n                }\n                return _callee5;\n              }();\n              _iterator2 = _createForOfIteratorHelperLoose(data.remove);\n            case 25:\n              if ((_step2 = _iterator2()).done) {\n                _context13.next = 33;\n                break;\n              }\n              _record = _step2.value;\n              _context13.next = 29;\n              return _regeneratorRuntime.awrap(_loop2());\n            case 29:\n              if (!_context13.sent) {\n                _context13.next = 31;\n                break;\n              }\n              return _context13.abrupt(\"continue\", 31);\n            case 31:\n              _context13.next = 25;\n              break;\n            case 33:\n              changes.sort(function (a, b) {\n                return a.timestamp - b.timestamp;\n              }).forEach(function (c) {\n                c.action();\n              });\n              this.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n              return _context13.abrupt(\"return\", true);\n            case 36:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n        return sync$;\n      }(), null, this, null, Promise);\n    }\n    return sync;\n  }();\n  _proto.init = function () {\n    function init() {\n      var _this7 = this;\n      return _regeneratorRuntime.async(function () {\n        function init$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              this.ready.set(false);\n              _context14.next = 3;\n              return _regeneratorRuntime.awrap(this.loadFromCache());\n            case 3:\n              if (!_context14.sent) {\n                _context14.next = 7;\n                break;\n              }\n              this.trySync();\n              _context14.next = 9;\n              break;\n            case 7:\n              _context14.next = 9;\n              return _regeneratorRuntime.awrap(this.loadFromServerAndPopulate());\n            case 9:\n              this.ready.set(true);\n              CachedCollectionManager.onReconnect(function () {\n                _this7.trySync();\n              });\n              return _context14.abrupt(\"return\", this.setupListener());\n            case 12:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n        return init$;\n      }(), null, this, null, Promise);\n    }\n    return init;\n  }();\n  return _createClass(CachedCollection, [{\n    key: \"eventName\",\n    get: function () {\n      if (this.eventType === 'notify-user') {\n        return Meteor.userId() + \"/\" + this.name + \"-changed\";\n      }\n      return this.name + \"-changed\";\n    }\n  }]);\n}(Emitter);\nCachedCollection.MAX_CACHE_TIME = 60 * 60 * 24 * 30;","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_createForOfIteratorHelperLoose","_objectSpread","_toConsumableArray","_createClass","_assertThisInitialized","_inheritsLoose","_typeof","export","CachedCollection","Emitter","localforage","Accounts","Meteor","Mongo","ReactiveVar","baseURI","getConfig","isTruthy","withDebouncing","sdk","CachedCollectionManager","hasId","record","hasUpdatedAt","_updatedAt","Date","hasDeletedAt","_deletedAt","hasUnserializedUpdatedAt","config","name","_Emitter","_ref","_this","_ref$eventType","eventType","_ref$userRelated","userRelated","call","collection","ready","version","updatedAt","log","timer","save","wait","_callee","data","async","_callee$","_context","prev","next","find","fetch","awrap","setItem","token","getToken","records","stop","Promise","Collection","includes","console","bind","undefined","register","init","onLogin","_proto","prototype","_storedLoginToken","loadFromCache","_this2","deserializedRecords","loadFromCache$","_context2","getItem","sent","abrupt","length","now","getTime","MAX_CACHE_TIME","map","deserializeFromCache","filter","Math","max","apply","_record$_updatedAt$ge","_collection","_docs","_map","Map","_idStringify","_id","Object","values","queries","forEach","query","_recomputeResults","callLoad","callLoad$","_context3","callSync","updatedSince","callSync$","_context4","loadFromServer","_this3","startTime","lastTime","loadFromServer$","_context5","newRecord","handleLoadFromServer","upsert","emit","handleReceived","_action","handleSync","loadFromServerAndPopulate","loadFromServerAndPopulate$","_context6","clearCacheOnLogout","clearCache","clearCache$","_context7","removeItem","remove","setupListener","_this4","setupListener$","_context9","stream","eventName","_callee2","action","_callee2$","_context8","trySync","_this5","delay","arguments","clearTimeout","setTimeout","_callee3","_callee3$","_context10","sync","_this6","changes","_loop","_iterator","_step","_loop2","_iterator2","_step2","_record","sync$","_context13","connection","_outstandingMethodBlocks","update","_callee4","actionTime","_callee4$","_context11","push","timestamp","done","value","_callee5","_callee5$","_context12","sort","a","b","c","_this7","init$","_context14","set","onReconnect","key","get","userId"],"sources":["app/ui-cached-collection/client/models/CachedCollection.ts"],"sourcesContent":["import type { StreamNames } from '@rocket.chat/ddp-client';\nimport { Emitter } from '@rocket.chat/emitter';\nimport localforage from 'localforage';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport type { MinimongoCollection } from '../../../../client/definitions/MinimongoCollection';\nimport { baseURI } from '../../../../client/lib/baseURI';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { withDebouncing } from '../../../../lib/utils/highOrderFunctions';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { CachedCollectionManager } from './CachedCollectionManager';\n\nexport type EventType = 'notify-logged' | 'notify-all' | 'notify-user';\n\ntype Name = 'rooms' | 'subscriptions' | 'permissions' | 'public-settings' | 'private-settings';\n\nconst hasId = <T>(record: T): record is T & { _id: string } => typeof record === 'object' && record !== null && '_id' in record;\nconst hasUpdatedAt = <T>(record: T): record is T & { _updatedAt: Date } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_updatedAt' in record &&\n\t(record as unknown as { _updatedAt: unknown })._updatedAt instanceof Date;\nconst hasDeletedAt = <T>(record: T): record is T & { _deletedAt: Date } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_deletedAt' in record &&\n\t(record as unknown as { _deletedAt: unknown })._deletedAt instanceof Date;\nconst hasUnserializedUpdatedAt = <T>(record: T): record is T & { _updatedAt: ConstructorParameters<typeof Date>[0] } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_updatedAt' in record &&\n\t!((record as unknown as { _updatedAt: unknown })._updatedAt instanceof Date);\n\nlocalforage.config({\n\tname: baseURI,\n});\n\nexport class CachedCollection<T extends { _id: string }, U = T> extends Emitter<{ changed: T; removed: T }> {\n\tprivate static MAX_CACHE_TIME = 60 * 60 * 24 * 30;\n\n\tpublic collection: MinimongoCollection<T>;\n\n\tpublic ready = new ReactiveVar(false);\n\n\tpublic name: Name;\n\n\tpublic eventType: StreamNames;\n\n\tpublic version = 18;\n\n\tpublic userRelated: boolean;\n\n\tpublic updatedAt = new Date(0);\n\n\tpublic log: (...args: any[]) => void;\n\n\tpublic timer: ReturnType<typeof setTimeout>;\n\n\tconstructor({ name, eventType = 'notify-user', userRelated = true }: { name: Name; eventType?: StreamNames; userRelated?: boolean }) {\n\t\tsuper();\n\n\t\tthis.collection = new Mongo.Collection(null) as MinimongoCollection<T>;\n\n\t\tthis.name = name;\n\t\tthis.eventType = eventType;\n\t\tthis.userRelated = userRelated;\n\n\t\tthis.log = [getConfig(`debugCachedCollection-${this.name}`), getConfig('debugCachedCollection'), getConfig('debug')].includes('true')\n\t\t\t? console.log.bind(console, `%cCachedCollection ${this.name}`, `color: navy; font-weight: bold;`)\n\t\t\t: () => undefined;\n\n\t\tCachedCollectionManager.register(this);\n\n\t\tif (!userRelated) {\n\t\t\tvoid this.init();\n\t\t\treturn;\n\t\t}\n\n\t\tCachedCollectionManager.onLogin(() => {\n\t\t\tvoid this.init();\n\t\t});\n\t}\n\n\tprotected get eventName(): `${Name}-changed` | `${string}/${Name}-changed` {\n\t\tif (this.eventType === 'notify-user') {\n\t\t\treturn `${Meteor.userId()}/${this.name}-changed`;\n\t\t}\n\t\treturn `${this.name}-changed`;\n\t}\n\n\tgetToken() {\n\t\tif (this.userRelated === false) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Accounts._storedLoginToken();\n\t}\n\n\tprivate async loadFromCache() {\n\t\tconst data = await localforage.getItem<{ version: number; token: unknown; records: unknown[]; updatedAt: Date | string }>(this.name);\n\n\t\tif (!data) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (data.version < this.version || data.token !== this.getToken()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (data.records.length <= 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// updatedAt may be a Date or a string depending on the used localForage backend\n\t\tif (!(data.updatedAt instanceof Date)) {\n\t\t\tdata.updatedAt = new Date(data.updatedAt);\n\t\t}\n\n\t\tif (Date.now() - data.updatedAt.getTime() >= 1000 * CachedCollection.MAX_CACHE_TIME) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.log(`${data.records.length} records loaded from cache`);\n\n\t\tconst deserializedRecords = data.records.map((record) => this.deserializeFromCache(record)).filter(isTruthy);\n\n\t\tconst updatedAt = Math.max(...deserializedRecords.filter(hasUpdatedAt).map((record) => record?._updatedAt.getTime() ?? 0));\n\n\t\tif (updatedAt > this.updatedAt.getTime()) {\n\t\t\tthis.updatedAt = new Date(updatedAt);\n\t\t}\n\n\t\tthis.collection._collection._docs._map = new Map(\n\t\t\tdeserializedRecords.filter(hasId).map((record) => [this.collection._collection._docs._idStringify(record._id), record]),\n\t\t);\n\n\t\tthis.updatedAt = data.updatedAt || this.updatedAt;\n\n\t\tObject.values(this.collection._collection.queries).forEach((query) => this.collection._collection._recomputeResults(query));\n\n\t\treturn true;\n\t}\n\n\tprotected deserializeFromCache(record: unknown): T | undefined {\n\t\tif (typeof record !== 'object' || record === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\t...(record as unknown as T),\n\t\t\t...(hasUnserializedUpdatedAt(record) && {\n\t\t\t\t_updatedAt: new Date(record._updatedAt),\n\t\t\t}),\n\t\t};\n\t}\n\n\tprivate async callLoad() {\n\t\t// TODO: workaround for bad function overload\n\t\tconst data = await sdk.call(`${this.name}/get`);\n\t\treturn data as unknown as U[];\n\t}\n\n\tprivate async callSync(updatedSince: Date) {\n\t\t// TODO: workaround for bad function overload\n\t\tconst data = await sdk.call(`${this.name}/get`, updatedSince);\n\t\treturn data as unknown as { update: U[]; remove: U[] };\n\t}\n\n\tprivate async loadFromServer() {\n\t\tconst startTime = new Date();\n\t\tconst lastTime = this.updatedAt;\n\t\tconst data = await this.callLoad();\n\t\tthis.log(`${data.length} records loaded from server`);\n\n\t\tdata.forEach((record) => {\n\t\t\tconst newRecord = this.handleLoadFromServer(record);\n\t\t\tif (!hasId(newRecord)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { _id } = newRecord;\n\t\t\tthis.collection.upsert({ _id } as Mongo.Selector<T>, newRecord);\n\t\t\tthis.emit('changed', newRecord as any); // TODO: investigate why this is needed\n\n\t\t\tif (hasUpdatedAt(newRecord) && newRecord._updatedAt > this.updatedAt) {\n\t\t\t\tthis.updatedAt = newRecord._updatedAt;\n\t\t\t}\n\t\t});\n\t\tthis.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n\t}\n\n\tprotected handleLoadFromServer(record: U): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprotected handleReceived(record: U, _action: 'removed' | 'changed'): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprotected handleSync(record: U, _action: 'removed' | 'changed'): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprivate async loadFromServerAndPopulate() {\n\t\tawait this.loadFromServer();\n\t\tawait this.save();\n\t}\n\n\tsave = withDebouncing({ wait: 1000 })(async () => {\n\t\tthis.log('saving cache');\n\t\tconst data = this.collection.find().fetch();\n\t\tawait localforage.setItem(this.name, {\n\t\t\tupdatedAt: this.updatedAt,\n\t\t\tversion: this.version,\n\t\t\ttoken: this.getToken(),\n\t\t\trecords: data,\n\t\t});\n\t\tthis.log('saving cache (done)');\n\t});\n\n\tclearCacheOnLogout() {\n\t\tif (this.userRelated === true) {\n\t\t\tvoid this.clearCache();\n\t\t}\n\t}\n\n\tasync clearCache() {\n\t\tthis.log('clearing cache');\n\t\tawait localforage.removeItem(this.name);\n\t\tthis.collection.remove({});\n\t}\n\n\tasync setupListener() {\n\t\tsdk.stream(this.eventType, [this.eventName], (async (action: 'removed' | 'changed', record: any) => {\n\t\t\tthis.log('record received', action, record);\n\t\t\tconst newRecord = this.handleReceived(record, action);\n\n\t\t\tif (!hasId(newRecord)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (action === 'removed') {\n\t\t\t\tthis.collection.remove(newRecord._id);\n\t\t\t} else {\n\t\t\t\tconst { _id } = newRecord;\n\t\t\t\tif (!_id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.collection.upsert({ _id } as any, newRecord);\n\t\t\t}\n\t\t\tawait this.save();\n\t\t}) as (...args: unknown[]) => void);\n\t}\n\n\ttrySync(delay = 10) {\n\t\tclearTimeout(this.timer);\n\t\t// Wait for an empty queue to load data again and sync\n\t\tthis.timer = setTimeout(async () => {\n\t\t\tif (!(await this.sync())) {\n\t\t\t\treturn this.trySync(delay);\n\t\t\t}\n\t\t\tawait this.save();\n\t\t}, delay);\n\t}\n\n\tasync sync() {\n\t\tif (!this.updatedAt || this.updatedAt.getTime() === 0 || Meteor.connection._outstandingMethodBlocks.length !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst startTime = new Date();\n\t\tconst lastTime = this.updatedAt;\n\n\t\tthis.log(`syncing from ${this.updatedAt}`);\n\n\t\tconst data = await this.callSync(this.updatedAt);\n\t\tconst changes = [];\n\n\t\tif (data.update && data.update.length > 0) {\n\t\t\tthis.log(`${data.update.length} records updated in sync`);\n\t\t\tfor (const record of data.update) {\n\t\t\t\tconst action = 'changed';\n\t\t\t\tconst newRecord = this.handleSync(record, action);\n\n\t\t\t\tif (!hasId(newRecord)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst actionTime = hasUpdatedAt(newRecord) ? newRecord._updatedAt : startTime;\n\t\t\t\tchanges.push({\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tconst { _id } = newRecord;\n\t\t\t\t\t\tthis.collection.upsert({ _id } as Mongo.Selector<T>, newRecord);\n\t\t\t\t\t\tif (actionTime > this.updatedAt) {\n\t\t\t\t\t\t\tthis.updatedAt = actionTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(action, newRecord as any); // TODO: investigate why this is needed\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: actionTime.getTime(),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (data.remove && data.remove.length > 0) {\n\t\t\tthis.log(`${data.remove.length} records removed in sync`);\n\t\t\tfor (const record of data.remove) {\n\t\t\t\tconst action = 'removed';\n\t\t\t\tconst newRecord = this.handleSync(record, action);\n\n\t\t\t\tif (!hasId(newRecord) || !hasDeletedAt(newRecord)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst actionTime = newRecord._deletedAt;\n\t\t\t\tchanges.push({\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tconst { _id } = newRecord;\n\t\t\t\t\t\tthis.collection.remove({ _id } as Mongo.Selector<T>);\n\t\t\t\t\t\tif (actionTime > this.updatedAt) {\n\t\t\t\t\t\t\tthis.updatedAt = actionTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(action, newRecord as any); // TODO: investigate why this is needed\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: actionTime.getTime(),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tchanges\n\t\t\t.sort((a, b) => a.timestamp - b.timestamp)\n\t\t\t.forEach((c) => {\n\t\t\t\tc.action();\n\t\t\t});\n\n\t\tthis.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n\n\t\treturn true;\n\t}\n\n\tasync init() {\n\t\tthis.ready.set(false);\n\n\t\tif (await this.loadFromCache()) {\n\t\t\tthis.trySync();\n\t\t} else {\n\t\t\tawait this.loadFromServerAndPopulate();\n\t\t}\n\n\t\tthis.ready.set(true);\n\n\t\tCachedCollectionManager.onReconnect(() => {\n\t\t\tthis.trySync();\n\t\t});\n\n\t\treturn this.setupListener();\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8974838e041f3a5bb29d94854d2282f766838c29"}
