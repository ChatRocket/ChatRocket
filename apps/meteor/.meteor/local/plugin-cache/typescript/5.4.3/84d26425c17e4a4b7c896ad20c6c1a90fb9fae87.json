{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/notifications/client/lib/Presence.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/notifications/client/lib/Presence.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/notifications/client/lib/Presence.ts","inputSourceMap":{"version":3,"file":"app/notifications/client/lib/Presence.ts","sourceRoot":"","sources":["app/notifications/client/lib/Presence.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AACvD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,QAAQ,EAAE,MAAM,iCAAiC,CAAC;AAE3D,2EAA2E;AAC3E,iFAAiF;AAEjF,IAAI,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;AAIrC,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;AAEzH,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,sBAAsB,EAAE,CAAC,GAAW,EAAE,CAAC,QAAQ,EAAE,aAAa,EAAE,UAAU,CAAO,EAAE,EAAE;IAC9G,QAAQ,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,aAAoB,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;AAC/F,CAAC,CAAC,CAAC","sourcesContent":["import { UserStatus } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Presence } from '../../../../client/lib/presence';\n\n// TODO implement API on Streamer to be able to listen to all streamed data\n// this is a hacky way to listen to all streamed data from user-presence Streamer\n\nnew Meteor.Streamer('user-presence');\n\ntype args = [username: string, statusChanged?: UserStatus, statusText?: string];\n\nexport const STATUS_MAP = [UserStatus.OFFLINE, UserStatus.ONLINE, UserStatus.AWAY, UserStatus.BUSY, UserStatus.DISABLED];\n\nMeteor.StreamerCentral.on('stream-user-presence', (uid: string, [username, statusChanged, statusText]: args) => {\n\tPresence.notify({ _id: uid, username, status: STATUS_MAP[statusChanged as any], statusText });\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/notifications/client/lib/Presence.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/notifications/client/lib/Presence.ts","inputSourceMap":{"version":3,"file":"app/notifications/client/lib/Presence.ts","sourceRoot":"","sources":["app/notifications/client/lib/Presence.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AACvD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,QAAQ,EAAE,MAAM,iCAAiC,CAAC;AAE3D,2EAA2E;AAC3E,iFAAiF;AAEjF,IAAI,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;AAIrC,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;AAEzH,MAAM,CAAC,eAAe,CAAC,EAAE,CAAC,sBAAsB,EAAE,CAAC,GAAW,EAAE,CAAC,QAAQ,EAAE,aAAa,EAAE,UAAU,CAAO,EAAE,EAAE;IAC9G,QAAQ,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,aAAoB,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;AAC/F,CAAC,CAAC,CAAC","sourcesContent":["import { UserStatus } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Presence } from '../../../../client/lib/presence';\n\n// TODO implement API on Streamer to be able to listen to all streamed data\n// this is a hacky way to listen to all streamed data from user-presence Streamer\n\nnew Meteor.Streamer('user-presence');\n\ntype args = [username: string, statusChanged?: UserStatus, statusText?: string];\n\nexport const STATUS_MAP = [UserStatus.OFFLINE, UserStatus.ONLINE, UserStatus.AWAY, UserStatus.BUSY, UserStatus.DISABLED];\n\nMeteor.StreamerCentral.on('stream-user-presence', (uid: string, [username, statusChanged, statusText]: args) => {\n\tPresence.notify({ _id: uid, username, status: STATUS_MAP[statusChanged as any], statusText });\n});\n"]}}},"code":"module.export({\n  STATUS_MAP: () => STATUS_MAP\n});\nlet UserStatus;\nmodule.link(\"@rocket.chat/core-typings\", {\n  UserStatus(v) {\n    UserStatus = v;\n  }\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 1);\nlet Presence;\nmodule.link(\"../../../../client/lib/presence\", {\n  Presence(v) {\n    Presence = v;\n  }\n}, 2);\n// TODO implement API on Streamer to be able to listen to all streamed data\n// this is a hacky way to listen to all streamed data from user-presence Streamer\nnew Meteor.Streamer('user-presence');\nconst STATUS_MAP = [UserStatus.OFFLINE, UserStatus.ONLINE, UserStatus.AWAY, UserStatus.BUSY, UserStatus.DISABLED];\nMeteor.StreamerCentral.on('stream-user-presence', (uid, _ref) => {\n  let [username, statusChanged, statusText] = _ref;\n  Presence.notify({\n    _id: uid,\n    username,\n    status: STATUS_MAP[statusChanged],\n    statusText\n  });\n});","map":{"version":3,"names":["module","export","STATUS_MAP","UserStatus","link","v","Meteor","Presence","Streamer","OFFLINE","ONLINE","AWAY","BUSY","DISABLED","StreamerCentral","on","uid","_ref","username","statusChanged","statusText","notify","_id","status"],"sources":["app/notifications/client/lib/Presence.ts"],"sourcesContent":["import { UserStatus } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Presence } from '../../../../client/lib/presence';\n\n// TODO implement API on Streamer to be able to listen to all streamed data\n// this is a hacky way to listen to all streamed data from user-presence Streamer\n\nnew Meteor.Streamer('user-presence');\n\ntype args = [username: string, statusChanged?: UserStatus, statusText?: string];\n\nexport const STATUS_MAP = [UserStatus.OFFLINE, UserStatus.ONLINE, UserStatus.AWAY, UserStatus.BUSY, UserStatus.DISABLED];\n\nMeteor.StreamerCentral.on('stream-user-presence', (uid: string, [username, statusChanged, statusText]: args) => {\n\tPresence.notify({ _id: uid, username, status: STATUS_MAP[statusChanged as any], statusText });\n});\n"],"mappings":"AAAAA,MAAA,CAAOC,MAAE;EAAAC,UAAY,EAAAA,CAAA,KAAMA;AAAA;AAAA,IAAAC,UAA4B;AAAAH,MAAA,CAAAI,IAAA;EAAAD,WAAAE,CAAA;IAAAF,UAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,MAAA;AAAAN,MAAA,CAAAI,IAAA;EAAAE,OAAAD,CAAA;IAAAC,MAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,QAAA;AAAAP,MAAA,CAAAI,IAAA;EAAAG,SAAAF,CAAA;IAAAE,QAAA,GAAAF,CAAA;EAAA;AAAA;AAKvD;AACA;AAEA,IAAIC,MAAM,CAACE,QAAQ,CAAC,eAAe,CAAC;AAI7B,MAAMN,UAAU,GAAG,CAACC,UAAU,CAACM,OAAO,EAAEN,UAAU,CAACO,MAAM,EAAEP,UAAU,CAACQ,IAAI,EAAER,UAAU,CAACS,IAAI,EAAET,UAAU,CAACU,QAAQ,CAAC;AAExHP,MAAM,CAACQ,eAAe,CAACC,EAAE,CAAC,sBAAsB,EAAE,CAACC,GAAW,EAAAC,IAAA,KAAiD;EAAA,IAA/C,CAACC,QAAQ,EAAEC,aAAa,EAAEC,UAAU,CAAO,GAAAH,IAAA;EAC1GV,QAAQ,CAACc,MAAM,CAAC;IAAEC,GAAG,EAAEN,GAAG;IAAEE,QAAQ;IAAEK,MAAM,EAAErB,UAAU,CAACiB,aAAoB,CAAC;IAAEC;EAAU,CAAE,CAAC;AAC9F,CAAC,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"84d26425c17e4a4b7c896ad20c6c1a90fb9fae87"}
