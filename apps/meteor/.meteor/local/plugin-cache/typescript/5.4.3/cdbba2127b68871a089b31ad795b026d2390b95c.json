{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveCustomFieldsWithoutValidation.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/saveCustomFieldsWithoutValidation.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveCustomFieldsWithoutValidation.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/saveCustomFieldsWithoutValidation.ts","sourceRoot":"","sources":["app/lib/server/functions/saveCustomFieldsWithoutValidation.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC3D,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,IAAI,EAAE,MAAM,mCAAmC,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,8CAA8C,EAAE,MAAM,uBAAuB,CAAC;AAEvF,MAAM,CAAC,MAAM,iCAAiC,GAAG,KAAK,WAAW,MAAc,EAAE,QAA6B;IAC7G,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC;QACxD,IAAI,gBAAgB,CAAC;QACrB,IAAI,CAAC;YACJ,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC;QACtE,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,gCAAgC,EAAE,gCAAgC,CAAC,CAAC;QAC5F,CAAC;QAED,MAAM,YAAY,GAAwB,EAAE,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7C,YAAY,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,MAAM,KAAK,CAAC,eAAe,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAElD,+DAA+D;QAC/D,MAAM,uBAAuB,GAAG,MAAM,aAAa,CAAC,qCAAqC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAChH,IAAI,uBAAuB,CAAC,aAAa,EAAE,CAAC;YAC3C,KAAK,8CAA8C,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAClE,CAAC;QAED,IAAI,KAAK,EAAE,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YACzD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,iBAAiB,EAAE,CAAC;gBACpD,OAAO;YACR,CAAC;YAED,MAAM,EAAE,iBAAiB,EAAE,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;YAC1D,MAAM,MAAM,GAAsC,EAAE,CAAC;YACrD,IAAI,iBAAiB,CAAC,KAAK,EAAE,CAAC;gBAC7B,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;gBACtB,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;YACrE,CAAC;iBAAM,CAAC;gBACP,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;gBACjB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;YAChE,CAAC;YAED,MAAM,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC;QAChD,CAAC;IACF,CAAC;AACF,CAAC,CAAC","sourcesContent":["import type { IUser, DeepWritable } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport type { UpdateFilter } from 'mongodb';\n\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { settings } from '../../../settings/server';\nimport { notifyOnSubscriptionChangedByUserIdAndRoomType } from '../lib/notifyListener';\n\nexport const saveCustomFieldsWithoutValidation = async function (userId: string, formData: Record<string, any>): Promise<void> {\n\tif (trim(settings.get('Accounts_CustomFields')) !== '') {\n\t\tlet customFieldsMeta;\n\t\ttry {\n\t\t\tcustomFieldsMeta = JSON.parse(settings.get('Accounts_CustomFields'));\n\t\t} catch (e) {\n\t\t\tthrow new Meteor.Error('error-invalid-customfield-json', 'Invalid JSON for Custom Fields');\n\t\t}\n\n\t\tconst customFields: Record<string, any> = {};\n\t\tObject.keys(customFieldsMeta).forEach((key) => {\n\t\t\tcustomFields[key] = formData[key];\n\t\t});\n\t\tawait Users.setCustomFields(userId, customFields);\n\n\t\t// Update customFields of all Direct Messages' Rooms for userId\n\t\tconst setCustomFieldsResponse = await Subscriptions.setCustomFieldsDirectMessagesByUserId(userId, customFields);\n\t\tif (setCustomFieldsResponse.modifiedCount) {\n\t\t\tvoid notifyOnSubscriptionChangedByUserIdAndRoomType(userId, 'd');\n\t\t}\n\n\t\tfor await (const fieldName of Object.keys(customFields)) {\n\t\t\tif (!customFieldsMeta[fieldName].modifyRecordField) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { modifyRecordField } = customFieldsMeta[fieldName];\n\t\t\tconst update: DeepWritable<UpdateFilter<IUser>> = {};\n\t\t\tif (modifyRecordField.array) {\n\t\t\t\tupdate.$addToSet = {};\n\t\t\t\tupdate.$addToSet[modifyRecordField.field] = customFields[fieldName];\n\t\t\t} else {\n\t\t\t\tupdate.$set = {};\n\t\t\t\tupdate.$set[modifyRecordField.field] = customFields[fieldName];\n\t\t\t}\n\n\t\t\tawait Users.updateOne({ _id: userId }, update);\n\t\t}\n\t}\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveCustomFieldsWithoutValidation.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/saveCustomFieldsWithoutValidation.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/saveCustomFieldsWithoutValidation.ts","sourceRoot":"","sources":["app/lib/server/functions/saveCustomFieldsWithoutValidation.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC3D,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,IAAI,EAAE,MAAM,mCAAmC,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,8CAA8C,EAAE,MAAM,uBAAuB,CAAC;AAEvF,MAAM,CAAC,MAAM,iCAAiC,GAAG,KAAK,WAAW,MAAc,EAAE,QAA6B;IAC7G,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC;QACxD,IAAI,gBAAgB,CAAC;QACrB,IAAI,CAAC;YACJ,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC;QACtE,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,gCAAgC,EAAE,gCAAgC,CAAC,CAAC;QAC5F,CAAC;QAED,MAAM,YAAY,GAAwB,EAAE,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC7C,YAAY,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,MAAM,KAAK,CAAC,eAAe,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAElD,+DAA+D;QAC/D,MAAM,uBAAuB,GAAG,MAAM,aAAa,CAAC,qCAAqC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAChH,IAAI,uBAAuB,CAAC,aAAa,EAAE,CAAC;YAC3C,KAAK,8CAA8C,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAClE,CAAC;QAED,IAAI,KAAK,EAAE,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;YACzD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,iBAAiB,EAAE,CAAC;gBACpD,OAAO;YACR,CAAC;YAED,MAAM,EAAE,iBAAiB,EAAE,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;YAC1D,MAAM,MAAM,GAAsC,EAAE,CAAC;YACrD,IAAI,iBAAiB,CAAC,KAAK,EAAE,CAAC;gBAC7B,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;gBACtB,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;YACrE,CAAC;iBAAM,CAAC;gBACP,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;gBACjB,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;YAChE,CAAC;YAED,MAAM,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC;QAChD,CAAC;IACF,CAAC;AACF,CAAC,CAAC","sourcesContent":["import type { IUser, DeepWritable } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport type { UpdateFilter } from 'mongodb';\n\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { settings } from '../../../settings/server';\nimport { notifyOnSubscriptionChangedByUserIdAndRoomType } from '../lib/notifyListener';\n\nexport const saveCustomFieldsWithoutValidation = async function (userId: string, formData: Record<string, any>): Promise<void> {\n\tif (trim(settings.get('Accounts_CustomFields')) !== '') {\n\t\tlet customFieldsMeta;\n\t\ttry {\n\t\t\tcustomFieldsMeta = JSON.parse(settings.get('Accounts_CustomFields'));\n\t\t} catch (e) {\n\t\t\tthrow new Meteor.Error('error-invalid-customfield-json', 'Invalid JSON for Custom Fields');\n\t\t}\n\n\t\tconst customFields: Record<string, any> = {};\n\t\tObject.keys(customFieldsMeta).forEach((key) => {\n\t\t\tcustomFields[key] = formData[key];\n\t\t});\n\t\tawait Users.setCustomFields(userId, customFields);\n\n\t\t// Update customFields of all Direct Messages' Rooms for userId\n\t\tconst setCustomFieldsResponse = await Subscriptions.setCustomFieldsDirectMessagesByUserId(userId, customFields);\n\t\tif (setCustomFieldsResponse.modifiedCount) {\n\t\t\tvoid notifyOnSubscriptionChangedByUserIdAndRoomType(userId, 'd');\n\t\t}\n\n\t\tfor await (const fieldName of Object.keys(customFields)) {\n\t\t\tif (!customFieldsMeta[fieldName].modifyRecordField) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { modifyRecordField } = customFieldsMeta[fieldName];\n\t\t\tconst update: DeepWritable<UpdateFilter<IUser>> = {};\n\t\t\tif (modifyRecordField.array) {\n\t\t\t\tupdate.$addToSet = {};\n\t\t\t\tupdate.$addToSet[modifyRecordField.field] = customFields[fieldName];\n\t\t\t} else {\n\t\t\t\tupdate.$set = {};\n\t\t\t\tupdate.$set[modifyRecordField.field] = customFields[fieldName];\n\t\t\t}\n\n\t\t\tawait Users.updateOne({ _id: userId }, update);\n\t\t}\n\t}\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      saveCustomFieldsWithoutValidation: () => saveCustomFieldsWithoutValidation\n    });\n    let Subscriptions, Users;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let trim;\n    module.link(\"../../../../lib/utils/stringUtils\", {\n      trim(v) {\n        trim = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    let notifyOnSubscriptionChangedByUserIdAndRoomType;\n    module.link(\"../lib/notifyListener\", {\n      notifyOnSubscriptionChangedByUserIdAndRoomType(v) {\n        notifyOnSubscriptionChangedByUserIdAndRoomType = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const saveCustomFieldsWithoutValidation = async function (userId, formData) {\n      if (trim(settings.get('Accounts_CustomFields')) !== '') {\n        let customFieldsMeta;\n        try {\n          customFieldsMeta = JSON.parse(settings.get('Accounts_CustomFields'));\n        } catch (e) {\n          throw new Meteor.Error('error-invalid-customfield-json', 'Invalid JSON for Custom Fields');\n        }\n        const customFields = {};\n        Object.keys(customFieldsMeta).forEach(key => {\n          customFields[key] = formData[key];\n        });\n        await Users.setCustomFields(userId, customFields);\n        // Update customFields of all Direct Messages' Rooms for userId\n        const setCustomFieldsResponse = await Subscriptions.setCustomFieldsDirectMessagesByUserId(userId, customFields);\n        if (setCustomFieldsResponse.modifiedCount) {\n          void notifyOnSubscriptionChangedByUserIdAndRoomType(userId, 'd');\n        }\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(Object.keys(customFields)), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const fieldName = _step.value;\n            {\n              if (!customFieldsMeta[fieldName].modifyRecordField) {\n                return;\n              }\n              const {\n                modifyRecordField\n              } = customFieldsMeta[fieldName];\n              const update = {};\n              if (modifyRecordField.array) {\n                update.$addToSet = {};\n                update.$addToSet[modifyRecordField.field] = customFields[fieldName];\n              } else {\n                update.$set = {};\n                update.$set[modifyRecordField.field] = customFields[fieldName];\n              }\n              await Users.updateOne({\n                _id: userId\n              }, update);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","saveCustomFieldsWithoutValidation","Subscriptions","Users","Meteor","trim","settings","notifyOnSubscriptionChangedByUserIdAndRoomType","__reifyWaitForDeps__","userId","formData","get","customFieldsMeta","JSON","parse","e","Error","customFields","Object","keys","forEach","key","setCustomFields","setCustomFieldsResponse","setCustomFieldsDirectMessagesByUserId","modifiedCount","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","fieldName","value","modifyRecordField","update","array","$addToSet","field","$set","updateOne","_id","err","return","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/saveCustomFieldsWithoutValidation.ts"],"sourcesContent":["import type { IUser, DeepWritable } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport type { UpdateFilter } from 'mongodb';\n\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { settings } from '../../../settings/server';\nimport { notifyOnSubscriptionChangedByUserIdAndRoomType } from '../lib/notifyListener';\n\nexport const saveCustomFieldsWithoutValidation = async function (userId: string, formData: Record<string, any>): Promise<void> {\n\tif (trim(settings.get('Accounts_CustomFields')) !== '') {\n\t\tlet customFieldsMeta;\n\t\ttry {\n\t\t\tcustomFieldsMeta = JSON.parse(settings.get('Accounts_CustomFields'));\n\t\t} catch (e) {\n\t\t\tthrow new Meteor.Error('error-invalid-customfield-json', 'Invalid JSON for Custom Fields');\n\t\t}\n\n\t\tconst customFields: Record<string, any> = {};\n\t\tObject.keys(customFieldsMeta).forEach((key) => {\n\t\t\tcustomFields[key] = formData[key];\n\t\t});\n\t\tawait Users.setCustomFields(userId, customFields);\n\n\t\t// Update customFields of all Direct Messages' Rooms for userId\n\t\tconst setCustomFieldsResponse = await Subscriptions.setCustomFieldsDirectMessagesByUserId(userId, customFields);\n\t\tif (setCustomFieldsResponse.modifiedCount) {\n\t\t\tvoid notifyOnSubscriptionChangedByUserIdAndRoomType(userId, 'd');\n\t\t}\n\n\t\tfor await (const fieldName of Object.keys(customFields)) {\n\t\t\tif (!customFieldsMeta[fieldName].modifyRecordField) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { modifyRecordField } = customFieldsMeta[fieldName];\n\t\t\tconst update: DeepWritable<UpdateFilter<IUser>> = {};\n\t\t\tif (modifyRecordField.array) {\n\t\t\t\tupdate.$addToSet = {};\n\t\t\t\tupdate.$addToSet[modifyRecordField.field] = customFields[fieldName];\n\t\t\t} else {\n\t\t\t\tupdate.$set = {};\n\t\t\t\tupdate.$set[modifyRecordField.field] = customFields[fieldName];\n\t\t\t}\n\n\t\t\tawait Users.updateOne({ _id: userId }, update);\n\t\t}\n\t}\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"cdbba2127b68871a089b31ad795b026d2390b95c"}
