{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/otr/server/methods/updateOTRAck.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/otr/server/methods/updateOTRAck.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/otr/server/methods/updateOTRAck.ts","inputSourceMap":{"version":3,"file":"app/otr/server/methods/updateOTRAck.ts","sourceRoot":"","sources":["app/otr/server/methods/updateOTRAck.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AAGjD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,uDAAuD,CAAC;AAS3F,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,YAAY,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE;QAClC,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QAC1F,CAAC;QAED,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACnB,KAAK,CAAC,OAAO,EAAE;YACd,GAAG,EAAE,MAAM;YACX,GAAG,EAAE,MAAM;YACX,GAAG,EAAE,MAAM;YACX,CAAC,EAAE,MAAM;YACT,EAAE,EAAE,IAAI;YACR,CAAC,EAAE;gBACF,GAAG,EAAE,MAAM;gBACX,QAAQ,EAAE,MAAM;gBAChB,IAAI,EAAE,MAAM;aACZ;SACD,CAAC,CAAC;QAEH,IAAI,OAAO,EAAE,CAAC,KAAK,KAAK,EAAE,CAAC;YAC1B,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,sBAAsB,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QACrG,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAEzG,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QAC1F,CAAC;QAED,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9H,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,2BAA2B,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QACvG,CAAC;QAED,MAAM,kBAAkB,GAAgB,EAAE,GAAG,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;QACpE,KAAK,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,kBAAkB,EAAE,CAAC,CAAC;IACjF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IOTRMessage } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomAsync } from '../../../authorization/server/functions/canAccessRoom';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tupdateOTRAck({ message, ack }: { message: IOTRMessage; ack: string }): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync updateOTRAck({ message, ack }) {\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'updateOTRAck' });\n\t\t}\n\n\t\tcheck(ack, String);\n\t\tcheck(message, {\n\t\t\t_id: String,\n\t\t\trid: String,\n\t\t\tmsg: String,\n\t\t\tt: String,\n\t\t\tts: Date,\n\t\t\tu: {\n\t\t\t\t_id: String,\n\t\t\t\tusername: String,\n\t\t\t\tname: String,\n\t\t\t},\n\t\t});\n\n\t\tif (message?.t !== 'otr') {\n\t\t\tthrow new Meteor.Error('error-invalid-message', 'Invalid message type', { method: 'updateOTRAck' });\n\t\t}\n\n\t\tconst room = await Rooms.findOneByIdAndType(message.rid, 'd', { projection: { t: 1, _id: 1, uids: 1 } });\n\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'updateOTRAck' });\n\t\t}\n\n\t\tif (!(await canAccessRoomAsync(room, { _id: uid })) || (room.uids && (!message.u._id || !room.uids.includes(message.u._id)))) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user, not in room', { method: 'updateOTRAck' });\n\t\t}\n\n\t\tconst acknowledgeMessage: IOTRMessage = { ...message, otrAck: ack };\n\t\tvoid api.broadcast('otrAckUpdate', { roomId: message.rid, acknowledgeMessage });\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/otr/server/methods/updateOTRAck.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/otr/server/methods/updateOTRAck.ts","inputSourceMap":{"version":3,"file":"app/otr/server/methods/updateOTRAck.ts","sourceRoot":"","sources":["app/otr/server/methods/updateOTRAck.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AAGjD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,uDAAuD,CAAC;AAS3F,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,YAAY,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE;QAClC,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QAC1F,CAAC;QAED,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACnB,KAAK,CAAC,OAAO,EAAE;YACd,GAAG,EAAE,MAAM;YACX,GAAG,EAAE,MAAM;YACX,GAAG,EAAE,MAAM;YACX,CAAC,EAAE,MAAM;YACT,EAAE,EAAE,IAAI;YACR,CAAC,EAAE;gBACF,GAAG,EAAE,MAAM;gBACX,QAAQ,EAAE,MAAM;gBAChB,IAAI,EAAE,MAAM;aACZ;SACD,CAAC,CAAC;QAEH,IAAI,OAAO,EAAE,CAAC,KAAK,KAAK,EAAE,CAAC;YAC1B,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,sBAAsB,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QACrG,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAEzG,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QAC1F,CAAC;QAED,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9H,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,2BAA2B,EAAE,EAAE,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QACvG,CAAC;QAED,MAAM,kBAAkB,GAAgB,EAAE,GAAG,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;QACpE,KAAK,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,kBAAkB,EAAE,CAAC,CAAC;IACjF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IOTRMessage } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomAsync } from '../../../authorization/server/functions/canAccessRoom';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tupdateOTRAck({ message, ack }: { message: IOTRMessage; ack: string }): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync updateOTRAck({ message, ack }) {\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'updateOTRAck' });\n\t\t}\n\n\t\tcheck(ack, String);\n\t\tcheck(message, {\n\t\t\t_id: String,\n\t\t\trid: String,\n\t\t\tmsg: String,\n\t\t\tt: String,\n\t\t\tts: Date,\n\t\t\tu: {\n\t\t\t\t_id: String,\n\t\t\t\tusername: String,\n\t\t\t\tname: String,\n\t\t\t},\n\t\t});\n\n\t\tif (message?.t !== 'otr') {\n\t\t\tthrow new Meteor.Error('error-invalid-message', 'Invalid message type', { method: 'updateOTRAck' });\n\t\t}\n\n\t\tconst room = await Rooms.findOneByIdAndType(message.rid, 'd', { projection: { t: 1, _id: 1, uids: 1 } });\n\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'updateOTRAck' });\n\t\t}\n\n\t\tif (!(await canAccessRoomAsync(room, { _id: uid })) || (room.uids && (!message.u._id || !room.uids.includes(message.u._id)))) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user, not in room', { method: 'updateOTRAck' });\n\t\t}\n\n\t\tconst acknowledgeMessage: IOTRMessage = { ...message, otrAck: ack };\n\t\tvoid api.broadcast('otrAckUpdate', { roomId: message.rid, acknowledgeMessage });\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 1);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let canAccessRoomAsync;\n    module.link(\"../../../authorization/server/functions/canAccessRoom\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async updateOTRAck(_ref) {\n        let {\n          message,\n          ack\n        } = _ref;\n        const uid = Meteor.userId();\n        if (!uid) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'updateOTRAck'\n          });\n        }\n        check(ack, String);\n        check(message, {\n          _id: String,\n          rid: String,\n          msg: String,\n          t: String,\n          ts: Date,\n          u: {\n            _id: String,\n            username: String,\n            name: String\n          }\n        });\n        if ((message === null || message === void 0 ? void 0 : message.t) !== 'otr') {\n          throw new Meteor.Error('error-invalid-message', 'Invalid message type', {\n            method: 'updateOTRAck'\n          });\n        }\n        const room = await Rooms.findOneByIdAndType(message.rid, 'd', {\n          projection: {\n            t: 1,\n            _id: 1,\n            uids: 1\n          }\n        });\n        if (!room) {\n          throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n            method: 'updateOTRAck'\n          });\n        }\n        if (!(await canAccessRoomAsync(room, {\n          _id: uid\n        })) || room.uids && (!message.u._id || !room.uids.includes(message.u._id))) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user, not in room', {\n            method: 'updateOTRAck'\n          });\n        }\n        const acknowledgeMessage = _objectSpread(_objectSpread({}, message), {}, {\n          otrAck: ack\n        });\n        void api.broadcast('otrAckUpdate', {\n          roomId: message.rid,\n          acknowledgeMessage\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","api","Rooms","check","Meteor","canAccessRoomAsync","__reifyWaitForDeps__","methods","updateOTRAck","_ref","message","ack","uid","userId","Error","method","String","_id","rid","msg","t","ts","Date","u","username","name","room","findOneByIdAndType","projection","uids","includes","acknowledgeMessage","otrAck","broadcast","roomId","__reify_async_result__","_reifyError","self","async"],"sources":["app/otr/server/methods/updateOTRAck.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IOTRMessage } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomAsync } from '../../../authorization/server/functions/canAccessRoom';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tupdateOTRAck({ message, ack }: { message: IOTRMessage; ack: string }): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync updateOTRAck({ message, ack }) {\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'updateOTRAck' });\n\t\t}\n\n\t\tcheck(ack, String);\n\t\tcheck(message, {\n\t\t\t_id: String,\n\t\t\trid: String,\n\t\t\tmsg: String,\n\t\t\tt: String,\n\t\t\tts: Date,\n\t\t\tu: {\n\t\t\t\t_id: String,\n\t\t\t\tusername: String,\n\t\t\t\tname: String,\n\t\t\t},\n\t\t});\n\n\t\tif (message?.t !== 'otr') {\n\t\t\tthrow new Meteor.Error('error-invalid-message', 'Invalid message type', { method: 'updateOTRAck' });\n\t\t}\n\n\t\tconst room = await Rooms.findOneByIdAndType(message.rid, 'd', { projection: { t: 1, _id: 1, uids: 1 } });\n\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'updateOTRAck' });\n\t\t}\n\n\t\tif (!(await canAccessRoomAsync(room, { _id: uid })) || (room.uids && (!message.u._id || !room.uids.includes(message.u._id)))) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user, not in room', { method: 'updateOTRAck' });\n\t\t}\n\n\t\tconst acknowledgeMessage: IOTRMessage = { ...message, otrAck: ack };\n\t\tvoid api.broadcast('otrAckUpdate', { roomId: message.rid, acknowledgeMessage });\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"5c37478793145e2035e5187a0f2864f80373b9b7"}
