{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/VideoConfManager.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/VideoConfManager.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/VideoConfManager.ts","inputSourceMap":{"version":3,"file":"client/lib/VideoConfManager.ts","sourceRoot":"","sources":["client/lib/VideoConfManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { getConfig } from './utils/getConfig';\n\nconst debug = !!(getConfig('debug') || getConfig('debug-VideoConf'));\n\n// The interval between attempts to call the remote user\nconst CALL_INTERVAL = 3000;\n// How many attempts to call we're gonna make\nconst CALL_ATTEMPT_LIMIT = 10;\n// The amount of time we'll assume an incoming call is still valid without any updates from the remote user\nconst CALL_TIMEOUT = 10000;\n// How long are we gonna wait for a link after accepting an incoming call\nconst ACCEPT_TIMEOUT = 5000;\n\ntype DirectCallParams = {\n\tuid: IUser['_id'];\n\trid: IRoom['_id'];\n\tcallId: string;\n};\n\nexport type DirectCallData = DirectCallParams & {\n\tdismissed: boolean;\n};\n\ntype IncomingDirectCall = DirectCallParams & {\n\ttimeout: ReturnType<typeof setTimeout> | undefined;\n\tacceptTimeout?: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport type CallPreferences = {\n\tmic?: boolean;\n\tcam?: boolean;\n};\n\nexport type ProviderCapabilities = {\n\tmic?: boolean;\n\tcam?: boolean;\n\ttitle?: boolean;\n};\n\ntype CurrentCallParams = {\n\tcallId: string;\n\turl: string;\n\tproviderName?: string;\n};\n\ntype VideoConfEvents = {\n\t// We gave up on calling a remote user or they rejected our call\n\t'direct/cancel': DirectCallParams;\n\n\t// A remote user is calling us\n\t'direct/ringing': DirectCallParams;\n\n\t// An incoming call was lost, either by timeout or because the remote user canceled\n\t'direct/lost': DirectCallParams;\n\n\t// We tried to accept an incoming call but the process failed\n\t'direct/failed': DirectCallParams;\n\n\t// A remote user accepted our call\n\t'direct/accepted': DirectCallParams;\n\n\t// We stopped calling a remote user\n\t'direct/stopped': DirectCallParams;\n\n\t'preference/changed': { key: keyof CallPreferences; value: boolean };\n\n\t// The list of incoming calls has changed in some way\n\t'incoming/changed': void;\n\n\t// The list of ringing incoming calls may have changed\n\t'ringing/changed': void;\n\n\t// The value of `isCalling` may have changed\n\t'calling/changed': void;\n\n\t'calling/ended': void;\n\n\t// When join call\n\t'call/join': CurrentCallParams;\n\n\t'join/error': { error: string };\n\n\t'start/error': { error: string };\n\n\t'capabilities/changed': void;\n};\n\nexport const VideoConfManager = new (class VideoConfManager extends Emitter<VideoConfEvents> {\n\tprivate userId: string | undefined;\n\n\tprivate currentCallHandler: ReturnType<typeof setTimeout> | undefined;\n\n\tprivate currentCallData: (DirectCallParams & { joined?: boolean }) | undefined;\n\n\tprivate startingNewCall = false;\n\n\tprivate hooks: (() => void)[] = [];\n\n\tprivate incomingDirectCalls: Map<string, IncomingDirectCall>;\n\n\tprivate dismissedCalls: Set<string>;\n\n\tprivate _preferences: CallPreferences;\n\n\tprivate _capabilities: ProviderCapabilities;\n\n\tpublic get preferences(): CallPreferences {\n\t\treturn this._preferences;\n\t}\n\n\tpublic get capabilities(): ProviderCapabilities {\n\t\treturn this._capabilities;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.incomingDirectCalls = new Map<string, IncomingDirectCall>();\n\t\tthis.dismissedCalls = new Set<string>();\n\t\tthis._preferences = { mic: true, cam: false };\n\t\tthis._capabilities = {};\n\t}\n\n\tpublic isBusy(): boolean {\n\t\tif (this.startingNewCall) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isCalling();\n\t}\n\n\tpublic isRinging(): boolean {\n\t\treturn [...this.incomingDirectCalls.values()].some(({ callId }) => !this.isCallDismissed(callId));\n\t}\n\n\tpublic isCalling(): boolean {\n\t\tif (this.currentCallHandler || (this.currentCallData && !this.currentCallData.joined)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic getIncomingDirectCalls(): DirectCallData[] {\n\t\treturn (\n\t\t\t[...this.incomingDirectCalls.values()]\n\t\t\t\t// Filter out any calls that we're in the process of accepting, so they're already hidden from the UI\n\t\t\t\t.filter((call) => !call.acceptTimeout)\n\t\t\t\t.map(({ timeout: _, acceptTimeout: _t, ...call }) => ({ ...call, dismissed: this.isCallDismissed(call.callId) }))\n\t\t);\n\t}\n\n\tpublic async startCall(roomId: IRoom['_id'], title?: string): Promise<void> {\n\t\tif (!this.userId || this.isBusy()) {\n\t\t\tthrow new Error('Video manager is busy.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Starting new call on room ${roomId}`);\n\t\tthis.startingNewCall = true;\n\t\tthis.emit('calling/changed');\n\n\t\tconst { data } = await sdk.rest.post('/v1/video-conference.start', { roomId, title, allowRinging: true }).catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to start new call on room ${roomId}`);\n\t\t\tthis.startingNewCall = false;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('start/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis.startingNewCall = false;\n\t\tthis.emit('calling/changed');\n\n\t\tif (data.type !== 'direct') {\n\t\t\tthis.emit('calling/ended');\n\t\t}\n\n\t\tswitch (data.type) {\n\t\t\tcase 'direct':\n\t\t\t\treturn this.callUser({ uid: data.calleeId, rid: roomId, callId: data.callId });\n\t\t\tcase 'videoconference':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t\tcase 'livechat':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t}\n\t}\n\n\tpublic acceptIncomingCall(callId: string): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tthrow new Error('Unable to find accepted call information.');\n\t\t}\n\t\tif (callData.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] We're already trying to accept call ${callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Accepting incoming call ${callId}.`);\n\n\t\tif (callData.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'timeout', undefined);\n\t\t}\n\n\t\t// Mute this call Id so any lingering notifications don't trigger it again\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tthis.setIncomingCallAttribute(\n\t\t\tcallId,\n\t\t\t'acceptTimeout',\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst updatedCallData = this.incomingDirectCalls.get(callId);\n\t\t\t\tif (!updatedCallData?.acceptTimeout) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdebug && console.log(`[VideoConf] Attempt to accept call has timed out.`);\n\t\t\t\tthis.removeIncomingCall(callId);\n\n\t\t\t\tthis.emit('direct/failed', { callId, uid: callData.uid, rid: callData.rid });\n\t\t\t}, ACCEPT_TIMEOUT),\n\t\t);\n\t\tthis.emit('incoming/changed');\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that we accept their call.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'accepted', { callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tpublic rejectIncomingCall(callId: string): void {\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.userId && this.notifyUser(callData.uid, 'rejected', { callId, uid: this.userId, rid: callData.rid });\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tpublic dismissedIncomingCalls(): void {\n\t\t// Mute all calls that are currently ringing\n\t\tif ([...this.incomingDirectCalls.keys()].some((callId) => this.dismissedIncomingCallHelper(callId))) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t}\n\t}\n\n\tpublic async loadCapabilities(): Promise<void> {\n\t\tconst { capabilities } = await sdk.rest.get('/v1/video-conference.capabilities').catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to load video conference capabilities`);\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis._capabilities = capabilities || {};\n\t\tthis.emit('capabilities/changed');\n\t}\n\n\tprivate setIncomingCallAttribute<T extends keyof IncomingDirectCall>(\n\t\tcallId: string,\n\t\tattributeName: T,\n\t\tvalue: IncomingDirectCall[T] | undefined,\n\t): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tdebug && console.error(`[VideoConf] Cannot change attribute \"${attributeName}\" of unknown call \"${callId}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newData: IncomingDirectCall = {\n\t\t\t...callData,\n\t\t};\n\n\t\tif (value === undefined) {\n\t\t\tdelete newData[attributeName];\n\t\t} else {\n\t\t\tnewData[attributeName] = value;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Updating attribute \"${attributeName}\" of call \"${callId}\".`);\n\t\tthis.incomingDirectCalls.set(callId, newData);\n\t}\n\n\tprivate dismissedIncomingCallHelper(callId: string): boolean {\n\t\t// Muting will stop a callId from ringing, but it doesn't affect any part of the existing workflow\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Dismissing call ${callId}`);\n\t\tthis.dismissedCalls.add(callId);\n\t\t// We don't need to hold on to the dismissed callIds forever because the server won't let anyone call us with it for very long\n\t\tsetTimeout(() => this.dismissedCalls.delete(callId), CALL_TIMEOUT * 20);\n\t\t// Only change the state if this call is actually in our list\n\t\treturn this.incomingDirectCalls.has(callId);\n\t}\n\n\tpublic dismissIncomingCall(callId: string): boolean {\n\t\tif (this.dismissedIncomingCallHelper(callId)) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic updateUser(): void {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (this.userId === userId) {\n\t\t\tdebug && console.log(`[VideoConf] Logged user has not changed, so we're not changing the hooks.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Logged user has changed.`);\n\n\t\tif (this.userId) {\n\t\t\tthis.disconnect();\n\t\t}\n\n\t\tif (userId) {\n\t\t\tthis.connectUser(userId);\n\t\t}\n\t}\n\n\tpublic changePreference(key: keyof CallPreferences, value: boolean): void {\n\t\tthis._preferences[key] = value;\n\t\tthis.emit('preference/changed', { key, value });\n\t}\n\n\tpublic setPreferences(prefs: Partial<CallPreferences>): void {\n\t\tfor (const key in prefs) {\n\t\t\tif (prefs.hasOwnProperty(key)) {\n\t\t\t\tconst prefKey = key as keyof CallPreferences;\n\t\t\t\tthis.changePreference(prefKey, prefs[prefKey] as boolean);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async joinCall(callId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] Joining call ${callId}.`);\n\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tconst data = this.incomingDirectCalls.get(callId);\n\t\t\tif (data?.acceptTimeout) {\n\t\t\t\tdebug && console.log('[VideoConf] Clearing acceptance timeout');\n\t\t\t\tclearTimeout(data.acceptTimeout);\n\t\t\t}\n\t\t\tthis.removeIncomingCall(callId);\n\t\t}\n\n\t\tconst params = {\n\t\t\tcallId,\n\t\t\tstate: {\n\t\t\t\t...(this._preferences.mic !== undefined ? { mic: this._preferences.mic } : {}),\n\t\t\t\t...(this._preferences.cam !== undefined ? { cam: this._preferences.cam } : {}),\n\t\t\t},\n\t\t};\n\n\t\tconst { url, providerName } = await sdk.rest.post('/v1/video-conference.join', params).catch((e) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to join call ${callId}`);\n\t\t\tthis.emit('join/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tif (!url) {\n\t\t\tthrow new Error('Failed to get video conference URL.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Opening ${url}.`);\n\t\tthis.emit('call/join', { url, callId, providerName });\n\t}\n\n\tpublic abortCall(): void {\n\t\tif (!this.currentCallData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.giveUp(this.currentCallData);\n\t}\n\n\tprivate rejectIncomingCallsFromUser(userId: string): void {\n\t\tfor (const [, { callId, uid }] of this.incomingDirectCalls) {\n\t\t\tif (userId === uid) {\n\t\t\t\tdebug && console.log(`[VideoConf] Rejecting old incoming call from user ${userId}`);\n\t\t\t\tthis.rejectIncomingCall(callId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async callUser({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tif (this.currentCallHandler || this.currentCallData) {\n\t\t\tthrow new Error('Video Conference State Error.');\n\t\t}\n\n\t\tlet attempt = 1;\n\t\tthis.currentCallData = { callId, rid, uid };\n\t\tthis.currentCallHandler = setInterval(() => {\n\t\t\tif (!this.currentCallHandler) {\n\t\t\t\tdebug && console.warn(`[VideoConf] Ringing interval was not properly cleared.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattempt++;\n\n\t\t\tif (attempt > CALL_ATTEMPT_LIMIT) {\n\t\t\t\tthis.giveUp({ uid, rid, callId });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdebug && console.log(`[VideoConf] Ringing user ${uid}, attempt number ${attempt}.`);\n\t\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t\t}, CALL_INTERVAL);\n\t\tthis.emit('calling/changed');\n\n\t\tdebug && console.log(`[VideoConf] Ringing user ${uid} for the first time.`);\n\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t}\n\n\tprivate async giveUp({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tconst joined = this.currentCallData?.joined;\n\n\t\tdebug && console.log(`[VideoConf] Stop ringing user ${uid}.`);\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.currentCallData = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${uid} that we are no longer calling.`);\n\t\tthis.userId && this.notifyUser(uid, 'canceled', { uid: this.userId, rid, callId });\n\n\t\tthis.emit('direct/cancel', { uid, rid, callId });\n\t\tthis.emit('direct/stopped', { uid, rid, callId });\n\n\t\tif (joined) {\n\t\t\treturn;\n\t\t}\n\n\t\tsdk.rest.post('/v1/video-conference.cancel', { callId });\n\t}\n\n\tprivate disconnect(): void {\n\t\tdebug && console.log(`[VideoConf] disconnecting user ${this.userId}`);\n\t\tfor (const hook of this.hooks) {\n\t\t\thook();\n\t\t}\n\t\tthis.hooks = [];\n\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tthis.incomingDirectCalls.forEach((call) => {\n\t\t\tif (call.timeout) {\n\t\t\t\tclearTimeout(call.timeout);\n\t\t\t}\n\t\t\tif (call.acceptTimeout) {\n\t\t\t\tclearTimeout(call.acceptTimeout);\n\t\t\t}\n\t\t});\n\t\tthis.incomingDirectCalls.clear();\n\t\tthis.dismissedCalls.clear();\n\t\tthis.currentCallData = undefined;\n\t\tthis._preferences = {};\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('calling/changed');\n\t}\n\n\tprivate async onVideoConfNotification({ action, params }: { action: string; params: DirectCallParams }): Promise<void> {\n\t\tif (!action || typeof action !== 'string') {\n\t\t\tdebug && console.error('[VideoConf] Invalid action received.');\n\t\t\treturn;\n\t\t}\n\t\tif (!params || typeof params !== 'object' || !params.callId || !params.uid || !params.rid) {\n\t\t\tdebug && console.error('[VideoConf] Invalid params received.');\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (action) {\n\t\t\tcase 'call':\n\t\t\t\treturn this.onDirectCall(params);\n\t\t\tcase 'canceled':\n\t\t\t\treturn this.onDirectCallCanceled(params);\n\t\t\tcase 'accepted':\n\t\t\t\treturn this.onDirectCallAccepted(params);\n\t\t\tcase 'rejected':\n\t\t\t\treturn this.onDirectCallRejected(params);\n\t\t\tcase 'confirmed':\n\t\t\t\treturn this.onDirectCallConfirmed(params);\n\t\t\tcase 'join':\n\t\t\t\treturn this.onDirectCallJoined(params);\n\t\t\tcase 'end':\n\t\t\t\treturn this.onDirectCallEnded(params);\n\t\t}\n\t}\n\n\tprivate async notifyUser(uid: IUser['_id'], action: string, params: DirectCallParams): Promise<void> {\n\t\treturn sdk.publish('notify-user', [`${uid}/video-conference`, { action, params }]);\n\t}\n\n\tprivate async connectUser(userId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] connecting user ${userId}`);\n\t\tthis.userId = userId;\n\n\t\tconst { stop, ready } = sdk.stream('notify-user', [`${userId}/video-conference`], (data) => this.onVideoConfNotification(data));\n\n\t\tawait ready();\n\n\t\tthis.hooks.push(stop);\n\t}\n\n\tprivate abortIncomingCall(callId: string): void {\n\t\t// If we just accepted this call, then ignore the timeout\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Canceling call ${callId} due to ringing timeout.`);\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate loseIncomingCall(callId: string): void {\n\t\tconst lostCall = this.incomingDirectCalls.get(callId);\n\t\tif (!lostCall) {\n\t\t\tdebug && console.warn(`[VideoConf] Unable to cancel ${callId} because we have no information about it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeIncomingCall(callId);\n\n\t\tdebug && console.log(`[VideoConf] Call ${callId} from ${lostCall.uid} was lost.`);\n\t\tthis.emit('direct/lost', { callId, uid: lostCall.uid, rid: lostCall.rid });\n\t}\n\n\tprivate removeIncomingCall(callId: string): void {\n\t\tdebug && console.log(`[VideoConf] Removing call with id \"${callId}\" from Incoming Calls list.`);\n\t\tif (!this.incomingDirectCalls.has(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isRinging = this.isRinging();\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t}\n\n\t\tthis.incomingDirectCalls.delete(callId);\n\t\tthis.emit('incoming/changed');\n\n\t\tif (isRinging !== this.isRinging()) {\n\t\t\tthis.emit('ringing/changed');\n\t\t}\n\t}\n\n\tprivate createAbortTimeout(callId: string): ReturnType<typeof setTimeout> {\n\t\treturn setTimeout(() => this.abortIncomingCall(callId), CALL_TIMEOUT);\n\t}\n\n\tprivate startNewIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\tdebug && console.log(`[VideoConf] Ignoring dismissed call.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Reject any currently ringing call from the user before registering the new one.\n\t\tthis.rejectIncomingCallsFromUser(uid);\n\n\t\tdebug && console.log(`[VideoConf] Storing this new call information.`);\n\t\tthis.incomingDirectCalls.set(callId, {\n\t\t\tcallId,\n\t\t\tuid,\n\t\t\trid,\n\t\t\ttimeout: this.createAbortTimeout(callId),\n\t\t});\n\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t}\n\n\tprivate refreshExistingIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tconst existingData = this.incomingDirectCalls.get(callId);\n\t\tif (!existingData) {\n\t\t\tthrow new Error('Video Conference Manager State Error');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Resetting call timeout.`);\n\t\tif (existingData.timeout) {\n\t\t\tclearTimeout(existingData.timeout);\n\t\t}\n\t\texistingData.timeout = this.createAbortTimeout(callId);\n\n\t\tif (!this.isCallDismissed(callId)) {\n\t\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCall({ callId, uid, rid }: DirectCallParams): void {\n\t\t// If we already accepted this call, then don't ring again\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${uid} is ringing with call ${callId}.`);\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tthis.refreshExistingIncomingCall({ callId, uid, rid });\n\t\t} else {\n\t\t\tthis.startNewIncomingCall({ callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCallCanceled({ callId }: DirectCallParams): void {\n\t\tdebug && console.log(`[VideoConf] Call ${callId} was canceled by the remote user.`);\n\n\t\t// We had just accepted this call, but the remote user hang up before they got the notification, so cancel our acceptance\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.acceptTimeout) {\n\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'acceptTimeout', undefined);\n\t\t}\n\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate onDirectCallAccepted(params: DirectCallParams, skipConfirmation = false): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst callData = this.currentCallData;\n\n\t\tthis.emit('direct/accepted', params);\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('calling/changed');\n\n\t\tif (!callData.joined) {\n\t\t\tthis.joinCall(params.callId);\n\t\t}\n\n\t\tif (skipConfirmation) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that they can join the call now.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'confirmed', { callId: callData.callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tprivate onDirectCallConfirmed(params: DirectCallParams): void {\n\t\tif (!params.callId || !this.incomingDirectCalls.get(params.callId)?.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} confirmed we can join ${params.callId} but we aren't trying to join it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.joinCall(params.callId);\n\t}\n\n\tprivate onDirectCallJoined(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.join' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (params.uid === this.userId) {\n\t\t\tif (this.currentCallData?.callId === params.callId) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined our own call (${this.userId}) from somewhere else. Flagging the call appropriatelly.`);\n\t\t\t\tthis.currentCallData.joined = true;\n\t\t\t\tthis.emit('calling/changed');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.incomingDirectCalls.has(params.callId)) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined the call ${params.callId} from somewhere else. Dismissing it.`);\n\t\t\t\tthis.dismissIncomingCall(params.callId);\n\t\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has joined a call we started ${params.callId}.`);\n\t\tthis.onDirectCallAccepted(params, true);\n\t}\n\n\tprivate onDirectCallEnded(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.end' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst callData = this.incomingDirectCalls.get(params.callId);\n\t\tif (callData) {\n\t\t\tdebug && console.log(`[VideoConf] Incoming call ended by the server: ${params.callId}.`);\n\t\t\tif (callData.acceptTimeout) {\n\t\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\t\tthis.setIncomingCallAttribute(params.callId, 'acceptTimeout', undefined);\n\t\t\t}\n\n\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.currentCallData?.callId !== params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Server sent a call ended event for a call we're not aware of: ${params.callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Outgoing call ended by the server: ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tthis.currentCallData = undefined;\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('direct/stopped', params);\n\t\t}\n\t}\n\n\tprivate onDirectCallRejected(params: DirectCallParams): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst { joined } = this.currentCallData;\n\n\t\tthis.emit('direct/cancel', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.emit('calling/changed');\n\n\t\tif (!joined) {\n\t\t\tsdk.rest.post('/v1/video-conference.cancel', { callId: params.callId });\n\t\t}\n\t}\n\n\tprivate isCallDismissed(callId: string): boolean {\n\t\treturn this.dismissedCalls.has(callId);\n\t}\n})();\n\nMeteor.startup(() => Tracker.autorun(() => VideoConfManager.updateUser()));\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/VideoConfManager.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/VideoConfManager.ts","inputSourceMap":{"version":3,"file":"client/lib/VideoConfManager.ts","sourceRoot":"","sources":["client/lib/VideoConfManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { getConfig } from './utils/getConfig';\n\nconst debug = !!(getConfig('debug') || getConfig('debug-VideoConf'));\n\n// The interval between attempts to call the remote user\nconst CALL_INTERVAL = 3000;\n// How many attempts to call we're gonna make\nconst CALL_ATTEMPT_LIMIT = 10;\n// The amount of time we'll assume an incoming call is still valid without any updates from the remote user\nconst CALL_TIMEOUT = 10000;\n// How long are we gonna wait for a link after accepting an incoming call\nconst ACCEPT_TIMEOUT = 5000;\n\ntype DirectCallParams = {\n\tuid: IUser['_id'];\n\trid: IRoom['_id'];\n\tcallId: string;\n};\n\nexport type DirectCallData = DirectCallParams & {\n\tdismissed: boolean;\n};\n\ntype IncomingDirectCall = DirectCallParams & {\n\ttimeout: ReturnType<typeof setTimeout> | undefined;\n\tacceptTimeout?: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport type CallPreferences = {\n\tmic?: boolean;\n\tcam?: boolean;\n};\n\nexport type ProviderCapabilities = {\n\tmic?: boolean;\n\tcam?: boolean;\n\ttitle?: boolean;\n};\n\ntype CurrentCallParams = {\n\tcallId: string;\n\turl: string;\n\tproviderName?: string;\n};\n\ntype VideoConfEvents = {\n\t// We gave up on calling a remote user or they rejected our call\n\t'direct/cancel': DirectCallParams;\n\n\t// A remote user is calling us\n\t'direct/ringing': DirectCallParams;\n\n\t// An incoming call was lost, either by timeout or because the remote user canceled\n\t'direct/lost': DirectCallParams;\n\n\t// We tried to accept an incoming call but the process failed\n\t'direct/failed': DirectCallParams;\n\n\t// A remote user accepted our call\n\t'direct/accepted': DirectCallParams;\n\n\t// We stopped calling a remote user\n\t'direct/stopped': DirectCallParams;\n\n\t'preference/changed': { key: keyof CallPreferences; value: boolean };\n\n\t// The list of incoming calls has changed in some way\n\t'incoming/changed': void;\n\n\t// The list of ringing incoming calls may have changed\n\t'ringing/changed': void;\n\n\t// The value of `isCalling` may have changed\n\t'calling/changed': void;\n\n\t'calling/ended': void;\n\n\t// When join call\n\t'call/join': CurrentCallParams;\n\n\t'join/error': { error: string };\n\n\t'start/error': { error: string };\n\n\t'capabilities/changed': void;\n};\n\nexport const VideoConfManager = new (class VideoConfManager extends Emitter<VideoConfEvents> {\n\tprivate userId: string | undefined;\n\n\tprivate currentCallHandler: ReturnType<typeof setTimeout> | undefined;\n\n\tprivate currentCallData: (DirectCallParams & { joined?: boolean }) | undefined;\n\n\tprivate startingNewCall = false;\n\n\tprivate hooks: (() => void)[] = [];\n\n\tprivate incomingDirectCalls: Map<string, IncomingDirectCall>;\n\n\tprivate dismissedCalls: Set<string>;\n\n\tprivate _preferences: CallPreferences;\n\n\tprivate _capabilities: ProviderCapabilities;\n\n\tpublic get preferences(): CallPreferences {\n\t\treturn this._preferences;\n\t}\n\n\tpublic get capabilities(): ProviderCapabilities {\n\t\treturn this._capabilities;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.incomingDirectCalls = new Map<string, IncomingDirectCall>();\n\t\tthis.dismissedCalls = new Set<string>();\n\t\tthis._preferences = { mic: true, cam: false };\n\t\tthis._capabilities = {};\n\t}\n\n\tpublic isBusy(): boolean {\n\t\tif (this.startingNewCall) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isCalling();\n\t}\n\n\tpublic isRinging(): boolean {\n\t\treturn [...this.incomingDirectCalls.values()].some(({ callId }) => !this.isCallDismissed(callId));\n\t}\n\n\tpublic isCalling(): boolean {\n\t\tif (this.currentCallHandler || (this.currentCallData && !this.currentCallData.joined)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic getIncomingDirectCalls(): DirectCallData[] {\n\t\treturn (\n\t\t\t[...this.incomingDirectCalls.values()]\n\t\t\t\t// Filter out any calls that we're in the process of accepting, so they're already hidden from the UI\n\t\t\t\t.filter((call) => !call.acceptTimeout)\n\t\t\t\t.map(({ timeout: _, acceptTimeout: _t, ...call }) => ({ ...call, dismissed: this.isCallDismissed(call.callId) }))\n\t\t);\n\t}\n\n\tpublic async startCall(roomId: IRoom['_id'], title?: string): Promise<void> {\n\t\tif (!this.userId || this.isBusy()) {\n\t\t\tthrow new Error('Video manager is busy.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Starting new call on room ${roomId}`);\n\t\tthis.startingNewCall = true;\n\t\tthis.emit('calling/changed');\n\n\t\tconst { data } = await sdk.rest.post('/v1/video-conference.start', { roomId, title, allowRinging: true }).catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to start new call on room ${roomId}`);\n\t\t\tthis.startingNewCall = false;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('start/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis.startingNewCall = false;\n\t\tthis.emit('calling/changed');\n\n\t\tif (data.type !== 'direct') {\n\t\t\tthis.emit('calling/ended');\n\t\t}\n\n\t\tswitch (data.type) {\n\t\t\tcase 'direct':\n\t\t\t\treturn this.callUser({ uid: data.calleeId, rid: roomId, callId: data.callId });\n\t\t\tcase 'videoconference':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t\tcase 'livechat':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t}\n\t}\n\n\tpublic acceptIncomingCall(callId: string): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tthrow new Error('Unable to find accepted call information.');\n\t\t}\n\t\tif (callData.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] We're already trying to accept call ${callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Accepting incoming call ${callId}.`);\n\n\t\tif (callData.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'timeout', undefined);\n\t\t}\n\n\t\t// Mute this call Id so any lingering notifications don't trigger it again\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tthis.setIncomingCallAttribute(\n\t\t\tcallId,\n\t\t\t'acceptTimeout',\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst updatedCallData = this.incomingDirectCalls.get(callId);\n\t\t\t\tif (!updatedCallData?.acceptTimeout) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdebug && console.log(`[VideoConf] Attempt to accept call has timed out.`);\n\t\t\t\tthis.removeIncomingCall(callId);\n\n\t\t\t\tthis.emit('direct/failed', { callId, uid: callData.uid, rid: callData.rid });\n\t\t\t}, ACCEPT_TIMEOUT),\n\t\t);\n\t\tthis.emit('incoming/changed');\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that we accept their call.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'accepted', { callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tpublic rejectIncomingCall(callId: string): void {\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.userId && this.notifyUser(callData.uid, 'rejected', { callId, uid: this.userId, rid: callData.rid });\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tpublic dismissedIncomingCalls(): void {\n\t\t// Mute all calls that are currently ringing\n\t\tif ([...this.incomingDirectCalls.keys()].some((callId) => this.dismissedIncomingCallHelper(callId))) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t}\n\t}\n\n\tpublic async loadCapabilities(): Promise<void> {\n\t\tconst { capabilities } = await sdk.rest.get('/v1/video-conference.capabilities').catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to load video conference capabilities`);\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis._capabilities = capabilities || {};\n\t\tthis.emit('capabilities/changed');\n\t}\n\n\tprivate setIncomingCallAttribute<T extends keyof IncomingDirectCall>(\n\t\tcallId: string,\n\t\tattributeName: T,\n\t\tvalue: IncomingDirectCall[T] | undefined,\n\t): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tdebug && console.error(`[VideoConf] Cannot change attribute \"${attributeName}\" of unknown call \"${callId}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newData: IncomingDirectCall = {\n\t\t\t...callData,\n\t\t};\n\n\t\tif (value === undefined) {\n\t\t\tdelete newData[attributeName];\n\t\t} else {\n\t\t\tnewData[attributeName] = value;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Updating attribute \"${attributeName}\" of call \"${callId}\".`);\n\t\tthis.incomingDirectCalls.set(callId, newData);\n\t}\n\n\tprivate dismissedIncomingCallHelper(callId: string): boolean {\n\t\t// Muting will stop a callId from ringing, but it doesn't affect any part of the existing workflow\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Dismissing call ${callId}`);\n\t\tthis.dismissedCalls.add(callId);\n\t\t// We don't need to hold on to the dismissed callIds forever because the server won't let anyone call us with it for very long\n\t\tsetTimeout(() => this.dismissedCalls.delete(callId), CALL_TIMEOUT * 20);\n\t\t// Only change the state if this call is actually in our list\n\t\treturn this.incomingDirectCalls.has(callId);\n\t}\n\n\tpublic dismissIncomingCall(callId: string): boolean {\n\t\tif (this.dismissedIncomingCallHelper(callId)) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic updateUser(): void {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (this.userId === userId) {\n\t\t\tdebug && console.log(`[VideoConf] Logged user has not changed, so we're not changing the hooks.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Logged user has changed.`);\n\n\t\tif (this.userId) {\n\t\t\tthis.disconnect();\n\t\t}\n\n\t\tif (userId) {\n\t\t\tthis.connectUser(userId);\n\t\t}\n\t}\n\n\tpublic changePreference(key: keyof CallPreferences, value: boolean): void {\n\t\tthis._preferences[key] = value;\n\t\tthis.emit('preference/changed', { key, value });\n\t}\n\n\tpublic setPreferences(prefs: Partial<CallPreferences>): void {\n\t\tfor (const key in prefs) {\n\t\t\tif (prefs.hasOwnProperty(key)) {\n\t\t\t\tconst prefKey = key as keyof CallPreferences;\n\t\t\t\tthis.changePreference(prefKey, prefs[prefKey] as boolean);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async joinCall(callId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] Joining call ${callId}.`);\n\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tconst data = this.incomingDirectCalls.get(callId);\n\t\t\tif (data?.acceptTimeout) {\n\t\t\t\tdebug && console.log('[VideoConf] Clearing acceptance timeout');\n\t\t\t\tclearTimeout(data.acceptTimeout);\n\t\t\t}\n\t\t\tthis.removeIncomingCall(callId);\n\t\t}\n\n\t\tconst params = {\n\t\t\tcallId,\n\t\t\tstate: {\n\t\t\t\t...(this._preferences.mic !== undefined ? { mic: this._preferences.mic } : {}),\n\t\t\t\t...(this._preferences.cam !== undefined ? { cam: this._preferences.cam } : {}),\n\t\t\t},\n\t\t};\n\n\t\tconst { url, providerName } = await sdk.rest.post('/v1/video-conference.join', params).catch((e) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to join call ${callId}`);\n\t\t\tthis.emit('join/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tif (!url) {\n\t\t\tthrow new Error('Failed to get video conference URL.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Opening ${url}.`);\n\t\tthis.emit('call/join', { url, callId, providerName });\n\t}\n\n\tpublic abortCall(): void {\n\t\tif (!this.currentCallData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.giveUp(this.currentCallData);\n\t}\n\n\tprivate rejectIncomingCallsFromUser(userId: string): void {\n\t\tfor (const [, { callId, uid }] of this.incomingDirectCalls) {\n\t\t\tif (userId === uid) {\n\t\t\t\tdebug && console.log(`[VideoConf] Rejecting old incoming call from user ${userId}`);\n\t\t\t\tthis.rejectIncomingCall(callId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async callUser({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tif (this.currentCallHandler || this.currentCallData) {\n\t\t\tthrow new Error('Video Conference State Error.');\n\t\t}\n\n\t\tlet attempt = 1;\n\t\tthis.currentCallData = { callId, rid, uid };\n\t\tthis.currentCallHandler = setInterval(() => {\n\t\t\tif (!this.currentCallHandler) {\n\t\t\t\tdebug && console.warn(`[VideoConf] Ringing interval was not properly cleared.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattempt++;\n\n\t\t\tif (attempt > CALL_ATTEMPT_LIMIT) {\n\t\t\t\tthis.giveUp({ uid, rid, callId });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdebug && console.log(`[VideoConf] Ringing user ${uid}, attempt number ${attempt}.`);\n\t\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t\t}, CALL_INTERVAL);\n\t\tthis.emit('calling/changed');\n\n\t\tdebug && console.log(`[VideoConf] Ringing user ${uid} for the first time.`);\n\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t}\n\n\tprivate async giveUp({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tconst joined = this.currentCallData?.joined;\n\n\t\tdebug && console.log(`[VideoConf] Stop ringing user ${uid}.`);\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.currentCallData = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${uid} that we are no longer calling.`);\n\t\tthis.userId && this.notifyUser(uid, 'canceled', { uid: this.userId, rid, callId });\n\n\t\tthis.emit('direct/cancel', { uid, rid, callId });\n\t\tthis.emit('direct/stopped', { uid, rid, callId });\n\n\t\tif (joined) {\n\t\t\treturn;\n\t\t}\n\n\t\tsdk.rest.post('/v1/video-conference.cancel', { callId });\n\t}\n\n\tprivate disconnect(): void {\n\t\tdebug && console.log(`[VideoConf] disconnecting user ${this.userId}`);\n\t\tfor (const hook of this.hooks) {\n\t\t\thook();\n\t\t}\n\t\tthis.hooks = [];\n\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tthis.incomingDirectCalls.forEach((call) => {\n\t\t\tif (call.timeout) {\n\t\t\t\tclearTimeout(call.timeout);\n\t\t\t}\n\t\t\tif (call.acceptTimeout) {\n\t\t\t\tclearTimeout(call.acceptTimeout);\n\t\t\t}\n\t\t});\n\t\tthis.incomingDirectCalls.clear();\n\t\tthis.dismissedCalls.clear();\n\t\tthis.currentCallData = undefined;\n\t\tthis._preferences = {};\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('calling/changed');\n\t}\n\n\tprivate async onVideoConfNotification({ action, params }: { action: string; params: DirectCallParams }): Promise<void> {\n\t\tif (!action || typeof action !== 'string') {\n\t\t\tdebug && console.error('[VideoConf] Invalid action received.');\n\t\t\treturn;\n\t\t}\n\t\tif (!params || typeof params !== 'object' || !params.callId || !params.uid || !params.rid) {\n\t\t\tdebug && console.error('[VideoConf] Invalid params received.');\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (action) {\n\t\t\tcase 'call':\n\t\t\t\treturn this.onDirectCall(params);\n\t\t\tcase 'canceled':\n\t\t\t\treturn this.onDirectCallCanceled(params);\n\t\t\tcase 'accepted':\n\t\t\t\treturn this.onDirectCallAccepted(params);\n\t\t\tcase 'rejected':\n\t\t\t\treturn this.onDirectCallRejected(params);\n\t\t\tcase 'confirmed':\n\t\t\t\treturn this.onDirectCallConfirmed(params);\n\t\t\tcase 'join':\n\t\t\t\treturn this.onDirectCallJoined(params);\n\t\t\tcase 'end':\n\t\t\t\treturn this.onDirectCallEnded(params);\n\t\t}\n\t}\n\n\tprivate async notifyUser(uid: IUser['_id'], action: string, params: DirectCallParams): Promise<void> {\n\t\treturn sdk.publish('notify-user', [`${uid}/video-conference`, { action, params }]);\n\t}\n\n\tprivate async connectUser(userId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] connecting user ${userId}`);\n\t\tthis.userId = userId;\n\n\t\tconst { stop, ready } = sdk.stream('notify-user', [`${userId}/video-conference`], (data) => this.onVideoConfNotification(data));\n\n\t\tawait ready();\n\n\t\tthis.hooks.push(stop);\n\t}\n\n\tprivate abortIncomingCall(callId: string): void {\n\t\t// If we just accepted this call, then ignore the timeout\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Canceling call ${callId} due to ringing timeout.`);\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate loseIncomingCall(callId: string): void {\n\t\tconst lostCall = this.incomingDirectCalls.get(callId);\n\t\tif (!lostCall) {\n\t\t\tdebug && console.warn(`[VideoConf] Unable to cancel ${callId} because we have no information about it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeIncomingCall(callId);\n\n\t\tdebug && console.log(`[VideoConf] Call ${callId} from ${lostCall.uid} was lost.`);\n\t\tthis.emit('direct/lost', { callId, uid: lostCall.uid, rid: lostCall.rid });\n\t}\n\n\tprivate removeIncomingCall(callId: string): void {\n\t\tdebug && console.log(`[VideoConf] Removing call with id \"${callId}\" from Incoming Calls list.`);\n\t\tif (!this.incomingDirectCalls.has(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isRinging = this.isRinging();\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t}\n\n\t\tthis.incomingDirectCalls.delete(callId);\n\t\tthis.emit('incoming/changed');\n\n\t\tif (isRinging !== this.isRinging()) {\n\t\t\tthis.emit('ringing/changed');\n\t\t}\n\t}\n\n\tprivate createAbortTimeout(callId: string): ReturnType<typeof setTimeout> {\n\t\treturn setTimeout(() => this.abortIncomingCall(callId), CALL_TIMEOUT);\n\t}\n\n\tprivate startNewIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\tdebug && console.log(`[VideoConf] Ignoring dismissed call.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Reject any currently ringing call from the user before registering the new one.\n\t\tthis.rejectIncomingCallsFromUser(uid);\n\n\t\tdebug && console.log(`[VideoConf] Storing this new call information.`);\n\t\tthis.incomingDirectCalls.set(callId, {\n\t\t\tcallId,\n\t\t\tuid,\n\t\t\trid,\n\t\t\ttimeout: this.createAbortTimeout(callId),\n\t\t});\n\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t}\n\n\tprivate refreshExistingIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tconst existingData = this.incomingDirectCalls.get(callId);\n\t\tif (!existingData) {\n\t\t\tthrow new Error('Video Conference Manager State Error');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Resetting call timeout.`);\n\t\tif (existingData.timeout) {\n\t\t\tclearTimeout(existingData.timeout);\n\t\t}\n\t\texistingData.timeout = this.createAbortTimeout(callId);\n\n\t\tif (!this.isCallDismissed(callId)) {\n\t\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCall({ callId, uid, rid }: DirectCallParams): void {\n\t\t// If we already accepted this call, then don't ring again\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${uid} is ringing with call ${callId}.`);\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tthis.refreshExistingIncomingCall({ callId, uid, rid });\n\t\t} else {\n\t\t\tthis.startNewIncomingCall({ callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCallCanceled({ callId }: DirectCallParams): void {\n\t\tdebug && console.log(`[VideoConf] Call ${callId} was canceled by the remote user.`);\n\n\t\t// We had just accepted this call, but the remote user hang up before they got the notification, so cancel our acceptance\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.acceptTimeout) {\n\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'acceptTimeout', undefined);\n\t\t}\n\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate onDirectCallAccepted(params: DirectCallParams, skipConfirmation = false): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst callData = this.currentCallData;\n\n\t\tthis.emit('direct/accepted', params);\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('calling/changed');\n\n\t\tif (!callData.joined) {\n\t\t\tthis.joinCall(params.callId);\n\t\t}\n\n\t\tif (skipConfirmation) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that they can join the call now.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'confirmed', { callId: callData.callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tprivate onDirectCallConfirmed(params: DirectCallParams): void {\n\t\tif (!params.callId || !this.incomingDirectCalls.get(params.callId)?.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} confirmed we can join ${params.callId} but we aren't trying to join it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.joinCall(params.callId);\n\t}\n\n\tprivate onDirectCallJoined(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.join' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (params.uid === this.userId) {\n\t\t\tif (this.currentCallData?.callId === params.callId) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined our own call (${this.userId}) from somewhere else. Flagging the call appropriatelly.`);\n\t\t\t\tthis.currentCallData.joined = true;\n\t\t\t\tthis.emit('calling/changed');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.incomingDirectCalls.has(params.callId)) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined the call ${params.callId} from somewhere else. Dismissing it.`);\n\t\t\t\tthis.dismissIncomingCall(params.callId);\n\t\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has joined a call we started ${params.callId}.`);\n\t\tthis.onDirectCallAccepted(params, true);\n\t}\n\n\tprivate onDirectCallEnded(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.end' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst callData = this.incomingDirectCalls.get(params.callId);\n\t\tif (callData) {\n\t\t\tdebug && console.log(`[VideoConf] Incoming call ended by the server: ${params.callId}.`);\n\t\t\tif (callData.acceptTimeout) {\n\t\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\t\tthis.setIncomingCallAttribute(params.callId, 'acceptTimeout', undefined);\n\t\t\t}\n\n\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.currentCallData?.callId !== params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Server sent a call ended event for a call we're not aware of: ${params.callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Outgoing call ended by the server: ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tthis.currentCallData = undefined;\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('direct/stopped', params);\n\t\t}\n\t}\n\n\tprivate onDirectCallRejected(params: DirectCallParams): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst { joined } = this.currentCallData;\n\n\t\tthis.emit('direct/cancel', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.emit('calling/changed');\n\n\t\tif (!joined) {\n\t\t\tsdk.rest.post('/v1/video-conference.cancel', { callId: params.callId });\n\t\t}\n\t}\n\n\tprivate isCallDismissed(callId: string): boolean {\n\t\treturn this.dismissedCalls.has(callId);\n\t}\n})();\n\nMeteor.startup(() => Tracker.autorun(() => VideoConfManager.updateUser()));\n"]}}},"code":"var _excluded = [\"timeout\", \"acceptTimeout\"];\nvar _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _typeof;\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 1);\nvar _createForOfIteratorHelperLoose;\nmodule.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\", {\n  default: function (v) {\n    _createForOfIteratorHelperLoose = v;\n  }\n}, 2);\nvar _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 3);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 4);\nvar _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 5);\nvar _toConsumableArray;\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 6);\nvar _createClass;\nmodule.link(\"@babel/runtime/helpers/createClass\", {\n  default: function (v) {\n    _createClass = v;\n  }\n}, 7);\nvar _inheritsLoose;\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 8);\nmodule.export({\n  VideoConfManager: function () {\n    return VideoConfManager;\n  }\n});\nvar Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter: function (v) {\n    Emitter = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 2);\nvar sdk;\nmodule.link(\"../../app/utils/client/lib/SDKClient\", {\n  sdk: function (v) {\n    sdk = v;\n  }\n}, 3);\nvar getConfig;\nmodule.link(\"./utils/getConfig\", {\n  getConfig: function (v) {\n    getConfig = v;\n  }\n}, 4);\nvar debug = !!(getConfig('debug') || getConfig('debug-VideoConf'));\n// The interval between attempts to call the remote user\nvar CALL_INTERVAL = 3000;\n// How many attempts to call we're gonna make\nvar CALL_ATTEMPT_LIMIT = 10;\n// The amount of time we'll assume an incoming call is still valid without any updates from the remote user\nvar CALL_TIMEOUT = 10000;\n// How long are we gonna wait for a link after accepting an incoming call\nvar ACCEPT_TIMEOUT = 5000;\nvar VideoConfManager = new ( /*#__PURE__*/function (_Emitter) {\n  function VideoConfManager() {\n    var _this;\n    _this = _Emitter.call(this) || this;\n    _this.userId = void 0;\n    _this.currentCallHandler = void 0;\n    _this.currentCallData = void 0;\n    _this.startingNewCall = false;\n    _this.hooks = [];\n    _this.incomingDirectCalls = void 0;\n    _this.dismissedCalls = void 0;\n    _this._preferences = void 0;\n    _this._capabilities = void 0;\n    _this.incomingDirectCalls = new Map();\n    _this.dismissedCalls = new Set();\n    _this._preferences = {\n      mic: true,\n      cam: false\n    };\n    _this._capabilities = {};\n    return _this;\n  }\n  _inheritsLoose(VideoConfManager, _Emitter);\n  var _proto = VideoConfManager.prototype;\n  _proto.isBusy = function () {\n    function isBusy() {\n      if (this.startingNewCall) {\n        return true;\n      }\n      return this.isCalling();\n    }\n    return isBusy;\n  }();\n  _proto.isRinging = function () {\n    function isRinging() {\n      var _this2 = this;\n      return _toConsumableArray(this.incomingDirectCalls.values()).some(function (_ref) {\n        var callId = _ref.callId;\n        return !_this2.isCallDismissed(callId);\n      });\n    }\n    return isRinging;\n  }();\n  _proto.isCalling = function () {\n    function isCalling() {\n      if (this.currentCallHandler || this.currentCallData && !this.currentCallData.joined) {\n        return true;\n      }\n      return false;\n    }\n    return isCalling;\n  }();\n  _proto.getIncomingDirectCalls = function () {\n    function getIncomingDirectCalls() {\n      var _this3 = this;\n      return _toConsumableArray(this.incomingDirectCalls.values()) // Filter out any calls that we're in the process of accepting, so they're already hidden from the UI\n      .filter(function (call) {\n        return !call.acceptTimeout;\n      }).map(function (_ref2) {\n        var _ = _ref2.timeout,\n          _t = _ref2.acceptTimeout,\n          call = _objectWithoutProperties(_ref2, _excluded);\n        return _objectSpread(_objectSpread({}, call), {}, {\n          dismissed: _this3.isCallDismissed(call.callId)\n        });\n      });\n    }\n    return getIncomingDirectCalls;\n  }();\n  _proto.startCall = function () {\n    function startCall(roomId, title) {\n      var _this4 = this;\n      var _await$sdk$rest$post$, data;\n      return _regeneratorRuntime.async(function () {\n        function startCall$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!this.userId || this.isBusy())) {\n                _context.next = 2;\n                break;\n              }\n              throw new Error('Video manager is busy.');\n            case 2:\n              debug && console.log(\"[VideoConf] Starting new call on room \" + roomId);\n              this.startingNewCall = true;\n              this.emit('calling/changed');\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(sdk.rest.post('/v1/video-conference.start', {\n                roomId: roomId,\n                title: title,\n                allowRinging: true\n              }).catch(function (e) {\n                var _e$xhr, _e$xhr$responseJSON;\n                debug && console.error(\"[VideoConf] Failed to start new call on room \" + roomId);\n                _this4.startingNewCall = false;\n                _this4.emit('calling/changed');\n                _this4.emit('start/error', {\n                  error: (e === null || e === void 0 ? void 0 : (_e$xhr = e.xhr) === null || _e$xhr === void 0 ? void 0 : (_e$xhr$responseJSON = _e$xhr.responseJSON) === null || _e$xhr$responseJSON === void 0 ? void 0 : _e$xhr$responseJSON.error) || 'unknown-error'\n                });\n                return Promise.reject(e);\n              }));\n            case 7:\n              _await$sdk$rest$post$ = _context.sent;\n              data = _await$sdk$rest$post$.data;\n              this.startingNewCall = false;\n              this.emit('calling/changed');\n              if (data.type !== 'direct') {\n                this.emit('calling/ended');\n              }\n              _context.t0 = data.type;\n              _context.next = _context.t0 === 'direct' ? 15 : _context.t0 === 'videoconference' ? 16 : _context.t0 === 'livechat' ? 17 : 18;\n              break;\n            case 15:\n              return _context.abrupt(\"return\", this.callUser({\n                uid: data.calleeId,\n                rid: roomId,\n                callId: data.callId\n              }));\n            case 16:\n              return _context.abrupt(\"return\", this.joinCall(data.callId));\n            case 17:\n              return _context.abrupt(\"return\", this.joinCall(data.callId));\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return startCall$;\n      }(), null, this, null, Promise);\n    }\n    return startCall;\n  }();\n  _proto.acceptIncomingCall = function () {\n    function acceptIncomingCall(callId) {\n      var _this5 = this;\n      var callData = this.incomingDirectCalls.get(callId);\n      if (!callData) {\n        throw new Error('Unable to find accepted call information.');\n      }\n      if (callData.acceptTimeout) {\n        debug && console.log(\"[VideoConf] We're already trying to accept call \" + callId + \".\");\n        return;\n      }\n      debug && console.log(\"[VideoConf] Accepting incoming call \" + callId + \".\");\n      if (callData.timeout) {\n        clearTimeout(callData.timeout);\n        this.setIncomingCallAttribute(callId, 'timeout', undefined);\n      }\n      // Mute this call Id so any lingering notifications don't trigger it again\n      this.dismissIncomingCall(callId);\n      this.setIncomingCallAttribute(callId, 'acceptTimeout', setTimeout(function () {\n        var updatedCallData = _this5.incomingDirectCalls.get(callId);\n        if (!(updatedCallData !== null && updatedCallData !== void 0 && updatedCallData.acceptTimeout)) {\n          return;\n        }\n        debug && console.log(\"[VideoConf] Attempt to accept call has timed out.\");\n        _this5.removeIncomingCall(callId);\n        _this5.emit('direct/failed', {\n          callId: callId,\n          uid: callData.uid,\n          rid: callData.rid\n        });\n      }, ACCEPT_TIMEOUT));\n      this.emit('incoming/changed');\n      debug && console.log(\"[VideoConf] Notifying user \" + callData.uid + \" that we accept their call.\");\n      this.userId && this.notifyUser(callData.uid, 'accepted', {\n        callId: callId,\n        uid: this.userId,\n        rid: callData.rid\n      });\n    }\n    return acceptIncomingCall;\n  }();\n  _proto.rejectIncomingCall = function () {\n    function rejectIncomingCall(callId) {\n      this.dismissIncomingCall(callId);\n      var callData = this.incomingDirectCalls.get(callId);\n      if (!callData) {\n        return;\n      }\n      this.userId && this.notifyUser(callData.uid, 'rejected', {\n        callId: callId,\n        uid: this.userId,\n        rid: callData.rid\n      });\n      this.loseIncomingCall(callId);\n    }\n    return rejectIncomingCall;\n  }();\n  _proto.dismissedIncomingCalls = function () {\n    function dismissedIncomingCalls() {\n      var _this6 = this;\n      // Mute all calls that are currently ringing\n      if (_toConsumableArray(this.incomingDirectCalls.keys()).some(function (callId) {\n        return _this6.dismissedIncomingCallHelper(callId);\n      })) {\n        this.emit('ringing/changed');\n        this.emit('incoming/changed');\n      }\n    }\n    return dismissedIncomingCalls;\n  }();\n  _proto.loadCapabilities = function () {\n    function loadCapabilities() {\n      var _await$sdk$rest$get$c, capabilities;\n      return _regeneratorRuntime.async(function () {\n        function loadCapabilities$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(sdk.rest.get('/v1/video-conference.capabilities').catch(function (e) {\n                debug && console.error(\"[VideoConf] Failed to load video conference capabilities\");\n                return Promise.reject(e);\n              }));\n            case 2:\n              _await$sdk$rest$get$c = _context2.sent;\n              capabilities = _await$sdk$rest$get$c.capabilities;\n              this._capabilities = capabilities || {};\n              this.emit('capabilities/changed');\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n        return loadCapabilities$;\n      }(), null, this, null, Promise);\n    }\n    return loadCapabilities;\n  }();\n  _proto.setIncomingCallAttribute = function () {\n    function setIncomingCallAttribute(callId, attributeName, value) {\n      var callData = this.incomingDirectCalls.get(callId);\n      if (!callData) {\n        debug && console.error(\"[VideoConf] Cannot change attribute \\\"\" + attributeName + \"\\\" of unknown call \\\"\" + callId + \"\\\".\");\n        return;\n      }\n      var newData = _objectSpread({}, callData);\n      if (value === undefined) {\n        delete newData[attributeName];\n      } else {\n        newData[attributeName] = value;\n      }\n      debug && console.log(\"[VideoConf] Updating attribute \\\"\" + attributeName + \"\\\" of call \\\"\" + callId + \"\\\".\");\n      this.incomingDirectCalls.set(callId, newData);\n    }\n    return setIncomingCallAttribute;\n  }();\n  _proto.dismissedIncomingCallHelper = function () {\n    function dismissedIncomingCallHelper(callId) {\n      var _this7 = this;\n      // Muting will stop a callId from ringing, but it doesn't affect any part of the existing workflow\n      if (this.isCallDismissed(callId)) {\n        return false;\n      }\n      debug && console.log(\"[VideoConf] Dismissing call \" + callId);\n      this.dismissedCalls.add(callId);\n      // We don't need to hold on to the dismissed callIds forever because the server won't let anyone call us with it for very long\n      setTimeout(function () {\n        return _this7.dismissedCalls.delete(callId);\n      }, CALL_TIMEOUT * 20);\n      // Only change the state if this call is actually in our list\n      return this.incomingDirectCalls.has(callId);\n    }\n    return dismissedIncomingCallHelper;\n  }();\n  _proto.dismissIncomingCall = function () {\n    function dismissIncomingCall(callId) {\n      if (this.dismissedIncomingCallHelper(callId)) {\n        this.emit('ringing/changed');\n        this.emit('incoming/changed');\n        return true;\n      }\n      return false;\n    }\n    return dismissIncomingCall;\n  }();\n  _proto.updateUser = function () {\n    function updateUser() {\n      var userId = Meteor.userId();\n      if (this.userId === userId) {\n        debug && console.log(\"[VideoConf] Logged user has not changed, so we're not changing the hooks.\");\n        return;\n      }\n      debug && console.log(\"[VideoConf] Logged user has changed.\");\n      if (this.userId) {\n        this.disconnect();\n      }\n      if (userId) {\n        this.connectUser(userId);\n      }\n    }\n    return updateUser;\n  }();\n  _proto.changePreference = function () {\n    function changePreference(key, value) {\n      this._preferences[key] = value;\n      this.emit('preference/changed', {\n        key: key,\n        value: value\n      });\n    }\n    return changePreference;\n  }();\n  _proto.setPreferences = function () {\n    function setPreferences(prefs) {\n      for (var key in meteorBabelHelpers.sanitizeForInObject(prefs)) {\n        if (prefs.hasOwnProperty(key)) {\n          var prefKey = key;\n          this.changePreference(prefKey, prefs[prefKey]);\n        }\n      }\n    }\n    return setPreferences;\n  }();\n  _proto.joinCall = function () {\n    function joinCall(callId) {\n      var _this8 = this;\n      var data, params, _await$sdk$rest$post$2, url, providerName;\n      return _regeneratorRuntime.async(function () {\n        function joinCall$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              debug && console.log(\"[VideoConf] Joining call \" + callId + \".\");\n              if (this.incomingDirectCalls.has(callId)) {\n                data = this.incomingDirectCalls.get(callId);\n                if (data !== null && data !== void 0 && data.acceptTimeout) {\n                  debug && console.log('[VideoConf] Clearing acceptance timeout');\n                  clearTimeout(data.acceptTimeout);\n                }\n                this.removeIncomingCall(callId);\n              }\n              params = {\n                callId: callId,\n                state: _objectSpread(_objectSpread({}, this._preferences.mic !== undefined ? {\n                  mic: this._preferences.mic\n                } : {}), this._preferences.cam !== undefined ? {\n                  cam: this._preferences.cam\n                } : {})\n              };\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(sdk.rest.post('/v1/video-conference.join', params).catch(function (e) {\n                var _e$xhr2, _e$xhr2$responseJSON;\n                debug && console.error(\"[VideoConf] Failed to join call \" + callId);\n                _this8.emit('join/error', {\n                  error: (e === null || e === void 0 ? void 0 : (_e$xhr2 = e.xhr) === null || _e$xhr2 === void 0 ? void 0 : (_e$xhr2$responseJSON = _e$xhr2.responseJSON) === null || _e$xhr2$responseJSON === void 0 ? void 0 : _e$xhr2$responseJSON.error) || 'unknown-error'\n                });\n                return Promise.reject(e);\n              }));\n            case 5:\n              _await$sdk$rest$post$2 = _context3.sent;\n              url = _await$sdk$rest$post$2.url;\n              providerName = _await$sdk$rest$post$2.providerName;\n              if (url) {\n                _context3.next = 10;\n                break;\n              }\n              throw new Error('Failed to get video conference URL.');\n            case 10:\n              debug && console.log(\"[VideoConf] Opening \" + url + \".\");\n              this.emit('call/join', {\n                url: url,\n                callId: callId,\n                providerName: providerName\n              });\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n        return joinCall$;\n      }(), null, this, null, Promise);\n    }\n    return joinCall;\n  }();\n  _proto.abortCall = function () {\n    function abortCall() {\n      if (!this.currentCallData) {\n        return;\n      }\n      this.giveUp(this.currentCallData);\n    }\n    return abortCall;\n  }();\n  _proto.rejectIncomingCallsFromUser = function () {\n    function rejectIncomingCallsFromUser(userId) {\n      for (var _iterator = _createForOfIteratorHelperLoose(this.incomingDirectCalls), _step; !(_step = _iterator()).done;) {\n        var _ref3 = _step.value;\n        var _ref4 = _slicedToArray(_ref3, 2);\n        var _ref4$ = _ref4[1];\n        var callId = _ref4$.callId;\n        var uid = _ref4$.uid;\n        if (userId === uid) {\n          debug && console.log(\"[VideoConf] Rejecting old incoming call from user \" + userId);\n          this.rejectIncomingCall(callId);\n        }\n      }\n    }\n    return rejectIncomingCallsFromUser;\n  }();\n  _proto.callUser = function () {\n    function callUser(_ref5) {\n      var _this9 = this;\n      var uid, rid, callId, attempt;\n      return _regeneratorRuntime.async(function () {\n        function callUser$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              uid = _ref5.uid, rid = _ref5.rid, callId = _ref5.callId;\n              if (!(this.currentCallHandler || this.currentCallData)) {\n                _context4.next = 3;\n                break;\n              }\n              throw new Error('Video Conference State Error.');\n            case 3:\n              attempt = 1;\n              this.currentCallData = {\n                callId: callId,\n                rid: rid,\n                uid: uid\n              };\n              this.currentCallHandler = setInterval(function () {\n                if (!_this9.currentCallHandler) {\n                  debug && console.warn(\"[VideoConf] Ringing interval was not properly cleared.\");\n                  return;\n                }\n                attempt++;\n                if (attempt > CALL_ATTEMPT_LIMIT) {\n                  _this9.giveUp({\n                    uid: uid,\n                    rid: rid,\n                    callId: callId\n                  });\n                  return;\n                }\n                debug && console.log(\"[VideoConf] Ringing user \" + uid + \", attempt number \" + attempt + \".\");\n                _this9.userId && _this9.notifyUser(uid, 'call', {\n                  uid: _this9.userId,\n                  rid: rid,\n                  callId: callId\n                });\n              }, CALL_INTERVAL);\n              this.emit('calling/changed');\n              debug && console.log(\"[VideoConf] Ringing user \" + uid + \" for the first time.\");\n              this.userId && this.notifyUser(uid, 'call', {\n                uid: this.userId,\n                rid: rid,\n                callId: callId\n              });\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n        return callUser$;\n      }(), null, this, null, Promise);\n    }\n    return callUser;\n  }();\n  _proto.giveUp = function () {\n    function giveUp(_ref6) {\n      var _this$currentCallData;\n      var uid, rid, callId, joined;\n      return _regeneratorRuntime.async(function () {\n        function giveUp$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              uid = _ref6.uid, rid = _ref6.rid, callId = _ref6.callId;\n              joined = (_this$currentCallData = this.currentCallData) === null || _this$currentCallData === void 0 ? void 0 : _this$currentCallData.joined;\n              debug && console.log(\"[VideoConf] Stop ringing user \" + uid + \".\");\n              if (this.currentCallHandler) {\n                clearInterval(this.currentCallHandler);\n                this.currentCallHandler = undefined;\n                this.currentCallData = undefined;\n                this.emit('calling/changed');\n              }\n              debug && console.log(\"[VideoConf] Notifying user \" + uid + \" that we are no longer calling.\");\n              this.userId && this.notifyUser(uid, 'canceled', {\n                uid: this.userId,\n                rid: rid,\n                callId: callId\n              });\n              this.emit('direct/cancel', {\n                uid: uid,\n                rid: rid,\n                callId: callId\n              });\n              this.emit('direct/stopped', {\n                uid: uid,\n                rid: rid,\n                callId: callId\n              });\n              if (!joined) {\n                _context5.next = 10;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 10:\n              sdk.rest.post('/v1/video-conference.cancel', {\n                callId: callId\n              });\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n        return giveUp$;\n      }(), null, this, null, Promise);\n    }\n    return giveUp;\n  }();\n  _proto.disconnect = function () {\n    function disconnect() {\n      debug && console.log(\"[VideoConf] disconnecting user \" + this.userId);\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.hooks), _step2; !(_step2 = _iterator2()).done;) {\n        var hook = _step2.value;\n        hook();\n      }\n      this.hooks = [];\n      if (this.currentCallHandler) {\n        clearInterval(this.currentCallHandler);\n        this.currentCallHandler = undefined;\n      }\n      this.incomingDirectCalls.forEach(function (call) {\n        if (call.timeout) {\n          clearTimeout(call.timeout);\n        }\n        if (call.acceptTimeout) {\n          clearTimeout(call.acceptTimeout);\n        }\n      });\n      this.incomingDirectCalls.clear();\n      this.dismissedCalls.clear();\n      this.currentCallData = undefined;\n      this._preferences = {};\n      this.emit('incoming/changed');\n      this.emit('ringing/changed');\n      this.emit('calling/changed');\n    }\n    return disconnect;\n  }();\n  _proto.onVideoConfNotification = function () {\n    function onVideoConfNotification(_ref7) {\n      var action, params;\n      return _regeneratorRuntime.async(function () {\n        function onVideoConfNotification$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              action = _ref7.action, params = _ref7.params;\n              if (!(!action || typeof action !== 'string')) {\n                _context6.next = 4;\n                break;\n              }\n              debug && console.error('[VideoConf] Invalid action received.');\n              return _context6.abrupt(\"return\");\n            case 4:\n              if (!(!params || _typeof(params) !== 'object' || !params.callId || !params.uid || !params.rid)) {\n                _context6.next = 7;\n                break;\n              }\n              debug && console.error('[VideoConf] Invalid params received.');\n              return _context6.abrupt(\"return\");\n            case 7:\n              _context6.t0 = action;\n              _context6.next = _context6.t0 === 'call' ? 10 : _context6.t0 === 'canceled' ? 11 : _context6.t0 === 'accepted' ? 12 : _context6.t0 === 'rejected' ? 13 : _context6.t0 === 'confirmed' ? 14 : _context6.t0 === 'join' ? 15 : _context6.t0 === 'end' ? 16 : 17;\n              break;\n            case 10:\n              return _context6.abrupt(\"return\", this.onDirectCall(params));\n            case 11:\n              return _context6.abrupt(\"return\", this.onDirectCallCanceled(params));\n            case 12:\n              return _context6.abrupt(\"return\", this.onDirectCallAccepted(params));\n            case 13:\n              return _context6.abrupt(\"return\", this.onDirectCallRejected(params));\n            case 14:\n              return _context6.abrupt(\"return\", this.onDirectCallConfirmed(params));\n            case 15:\n              return _context6.abrupt(\"return\", this.onDirectCallJoined(params));\n            case 16:\n              return _context6.abrupt(\"return\", this.onDirectCallEnded(params));\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n        return onVideoConfNotification$;\n      }(), null, this, null, Promise);\n    }\n    return onVideoConfNotification;\n  }();\n  _proto.notifyUser = function () {\n    function notifyUser(uid, action, params) {\n      return _regeneratorRuntime.async(function () {\n        function notifyUser$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", sdk.publish('notify-user', [uid + \"/video-conference\", {\n                action: action,\n                params: params\n              }]));\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n        return notifyUser$;\n      }(), null, null, null, Promise);\n    }\n    return notifyUser;\n  }();\n  _proto.connectUser = function () {\n    function connectUser(userId) {\n      var _this10 = this;\n      var _sdk$stream, stop, ready;\n      return _regeneratorRuntime.async(function () {\n        function connectUser$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              debug && console.log(\"[VideoConf] connecting user \" + userId);\n              this.userId = userId;\n              _sdk$stream = sdk.stream('notify-user', [userId + \"/video-conference\"], function (data) {\n                return _this10.onVideoConfNotification(data);\n              }), stop = _sdk$stream.stop, ready = _sdk$stream.ready;\n              _context8.next = 5;\n              return _regeneratorRuntime.awrap(ready());\n            case 5:\n              this.hooks.push(stop);\n            case 6:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n        return connectUser$;\n      }(), null, this, null, Promise);\n    }\n    return connectUser;\n  }();\n  _proto.abortIncomingCall = function () {\n    function abortIncomingCall(callId) {\n      var _this$incomingDirectC;\n      // If we just accepted this call, then ignore the timeout\n      if ((_this$incomingDirectC = this.incomingDirectCalls.get(callId)) !== null && _this$incomingDirectC !== void 0 && _this$incomingDirectC.acceptTimeout) {\n        return;\n      }\n      debug && console.log(\"[VideoConf] Canceling call \" + callId + \" due to ringing timeout.\");\n      this.loseIncomingCall(callId);\n    }\n    return abortIncomingCall;\n  }();\n  _proto.loseIncomingCall = function () {\n    function loseIncomingCall(callId) {\n      var lostCall = this.incomingDirectCalls.get(callId);\n      if (!lostCall) {\n        debug && console.warn(\"[VideoConf] Unable to cancel \" + callId + \" because we have no information about it.\");\n        return;\n      }\n      this.removeIncomingCall(callId);\n      debug && console.log(\"[VideoConf] Call \" + callId + \" from \" + lostCall.uid + \" was lost.\");\n      this.emit('direct/lost', {\n        callId: callId,\n        uid: lostCall.uid,\n        rid: lostCall.rid\n      });\n    }\n    return loseIncomingCall;\n  }();\n  _proto.removeIncomingCall = function () {\n    function removeIncomingCall(callId) {\n      debug && console.log(\"[VideoConf] Removing call with id \\\"\" + callId + \"\\\" from Incoming Calls list.\");\n      if (!this.incomingDirectCalls.has(callId)) {\n        return;\n      }\n      var isRinging = this.isRinging();\n      var callData = this.incomingDirectCalls.get(callId);\n      if (callData !== null && callData !== void 0 && callData.timeout) {\n        clearTimeout(callData.timeout);\n      }\n      this.incomingDirectCalls.delete(callId);\n      this.emit('incoming/changed');\n      if (isRinging !== this.isRinging()) {\n        this.emit('ringing/changed');\n      }\n    }\n    return removeIncomingCall;\n  }();\n  _proto.createAbortTimeout = function () {\n    function createAbortTimeout(callId) {\n      var _this11 = this;\n      return setTimeout(function () {\n        return _this11.abortIncomingCall(callId);\n      }, CALL_TIMEOUT);\n    }\n    return createAbortTimeout;\n  }();\n  _proto.startNewIncomingCall = function () {\n    function startNewIncomingCall(_ref8) {\n      var callId = _ref8.callId,\n        uid = _ref8.uid,\n        rid = _ref8.rid;\n      if (this.isCallDismissed(callId)) {\n        debug && console.log(\"[VideoConf] Ignoring dismissed call.\");\n        return;\n      }\n      // Reject any currently ringing call from the user before registering the new one.\n      this.rejectIncomingCallsFromUser(uid);\n      debug && console.log(\"[VideoConf] Storing this new call information.\");\n      this.incomingDirectCalls.set(callId, {\n        callId: callId,\n        uid: uid,\n        rid: rid,\n        timeout: this.createAbortTimeout(callId)\n      });\n      this.emit('incoming/changed');\n      this.emit('ringing/changed');\n      this.emit('direct/ringing', {\n        callId: callId,\n        uid: uid,\n        rid: rid\n      });\n    }\n    return startNewIncomingCall;\n  }();\n  _proto.refreshExistingIncomingCall = function () {\n    function refreshExistingIncomingCall(_ref9) {\n      var callId = _ref9.callId,\n        uid = _ref9.uid,\n        rid = _ref9.rid;\n      var existingData = this.incomingDirectCalls.get(callId);\n      if (!existingData) {\n        throw new Error('Video Conference Manager State Error');\n      }\n      debug && console.log(\"[VideoConf] Resetting call timeout.\");\n      if (existingData.timeout) {\n        clearTimeout(existingData.timeout);\n      }\n      existingData.timeout = this.createAbortTimeout(callId);\n      if (!this.isCallDismissed(callId)) {\n        this.emit('direct/ringing', {\n          callId: callId,\n          uid: uid,\n          rid: rid\n        });\n      }\n    }\n    return refreshExistingIncomingCall;\n  }();\n  _proto.onDirectCall = function () {\n    function onDirectCall(_ref10) {\n      var _this$incomingDirectC2;\n      var callId = _ref10.callId,\n        uid = _ref10.uid,\n        rid = _ref10.rid;\n      // If we already accepted this call, then don't ring again\n      if ((_this$incomingDirectC2 = this.incomingDirectCalls.get(callId)) !== null && _this$incomingDirectC2 !== void 0 && _this$incomingDirectC2.acceptTimeout) {\n        return;\n      }\n      debug && console.log(\"[VideoConf] User \" + uid + \" is ringing with call \" + callId + \".\");\n      if (this.incomingDirectCalls.has(callId)) {\n        this.refreshExistingIncomingCall({\n          callId: callId,\n          uid: uid,\n          rid: rid\n        });\n      } else {\n        this.startNewIncomingCall({\n          callId: callId,\n          uid: uid,\n          rid: rid\n        });\n      }\n    }\n    return onDirectCall;\n  }();\n  _proto.onDirectCallCanceled = function () {\n    function onDirectCallCanceled(_ref11) {\n      var callId = _ref11.callId;\n      debug && console.log(\"[VideoConf] Call \" + callId + \" was canceled by the remote user.\");\n      // We had just accepted this call, but the remote user hang up before they got the notification, so cancel our acceptance\n      var callData = this.incomingDirectCalls.get(callId);\n      if (callData !== null && callData !== void 0 && callData.acceptTimeout) {\n        clearTimeout(callData.acceptTimeout);\n        this.setIncomingCallAttribute(callId, 'acceptTimeout', undefined);\n      }\n      this.loseIncomingCall(callId);\n    }\n    return onDirectCallCanceled;\n  }();\n  _proto.onDirectCallAccepted = function () {\n    function onDirectCallAccepted(params) {\n      var _this$currentCallData2;\n      var skipConfirmation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!params.callId || params.callId !== ((_this$currentCallData2 = this.currentCallData) === null || _this$currentCallData2 === void 0 ? void 0 : _this$currentCallData2.callId)) {\n        debug && console.log(\"[VideoConf] User \" + params.uid + \" has accepted a call \" + params.callId + \" from us, but we're not calling.\");\n        return;\n      }\n      debug && console.log(\"[VideoConf] User \" + params.uid + \" has accepted our call \" + params.callId + \".\");\n      // Stop ringing\n      if (this.currentCallHandler) {\n        clearInterval(this.currentCallHandler);\n        this.currentCallHandler = undefined;\n      }\n      var callData = this.currentCallData;\n      this.emit('direct/accepted', params);\n      this.emit('direct/stopped', params);\n      this.currentCallData = undefined;\n      this.emit('calling/changed');\n      if (!callData.joined) {\n        this.joinCall(params.callId);\n      }\n      if (skipConfirmation) {\n        return;\n      }\n      debug && console.log(\"[VideoConf] Notifying user \" + callData.uid + \" that they can join the call now.\");\n      this.userId && this.notifyUser(callData.uid, 'confirmed', {\n        callId: callData.callId,\n        uid: this.userId,\n        rid: callData.rid\n      });\n    }\n    return onDirectCallAccepted;\n  }();\n  _proto.onDirectCallConfirmed = function () {\n    function onDirectCallConfirmed(params) {\n      var _this$incomingDirectC3;\n      if (!params.callId || !((_this$incomingDirectC3 = this.incomingDirectCalls.get(params.callId)) !== null && _this$incomingDirectC3 !== void 0 && _this$incomingDirectC3.acceptTimeout)) {\n        debug && console.log(\"[VideoConf] User \" + params.uid + \" confirmed we can join \" + params.callId + \" but we aren't trying to join it.\");\n        return;\n      }\n      this.joinCall(params.callId);\n    }\n    return onDirectCallConfirmed;\n  }();\n  _proto.onDirectCallJoined = function () {\n    function onDirectCallJoined(params) {\n      if (!params.callId) {\n        debug && console.log(\"[VideoConf] Invalid 'video-conference.join' event received: \" + params.callId + \", \" + params.uid + \".\");\n        return;\n      }\n      if (params.uid === this.userId) {\n        var _this$currentCallData3;\n        if (((_this$currentCallData3 = this.currentCallData) === null || _this$currentCallData3 === void 0 ? void 0 : _this$currentCallData3.callId) === params.callId) {\n          debug && console.log(\"[VideoConf] We joined our own call (\" + this.userId + \") from somewhere else. Flagging the call appropriatelly.\");\n          this.currentCallData.joined = true;\n          this.emit('calling/changed');\n          return;\n        }\n        if (this.incomingDirectCalls.has(params.callId)) {\n          debug && console.log(\"[VideoConf] We joined the call \" + params.callId + \" from somewhere else. Dismissing it.\");\n          this.dismissIncomingCall(params.callId);\n          this.loseIncomingCall(params.callId);\n        }\n        return;\n      }\n      debug && console.log(\"[VideoConf] User \" + params.uid + \" has joined a call we started \" + params.callId + \".\");\n      this.onDirectCallAccepted(params, true);\n    }\n    return onDirectCallJoined;\n  }();\n  _proto.onDirectCallEnded = function () {\n    function onDirectCallEnded(params) {\n      var _this$currentCallData4;\n      if (!params.callId) {\n        debug && console.log(\"[VideoConf] Invalid 'video-conference.end' event received: \" + params.callId + \", \" + params.uid + \".\");\n        return;\n      }\n      var callData = this.incomingDirectCalls.get(params.callId);\n      if (callData) {\n        debug && console.log(\"[VideoConf] Incoming call ended by the server: \" + params.callId + \".\");\n        if (callData.acceptTimeout) {\n          clearTimeout(callData.acceptTimeout);\n          this.setIncomingCallAttribute(params.callId, 'acceptTimeout', undefined);\n        }\n        this.loseIncomingCall(params.callId);\n        return;\n      }\n      if (((_this$currentCallData4 = this.currentCallData) === null || _this$currentCallData4 === void 0 ? void 0 : _this$currentCallData4.callId) !== params.callId) {\n        debug && console.log(\"[VideoConf] Server sent a call ended event for a call we're not aware of: \" + params.callId + \".\");\n        return;\n      }\n      debug && console.log(\"[VideoConf] Outgoing call ended by the server: \" + params.callId + \".\");\n      // Stop ringing\n      this.currentCallData = undefined;\n      if (this.currentCallHandler) {\n        clearInterval(this.currentCallHandler);\n        this.currentCallHandler = undefined;\n        this.emit('calling/changed');\n        this.emit('direct/stopped', params);\n      }\n    }\n    return onDirectCallEnded;\n  }();\n  _proto.onDirectCallRejected = function () {\n    function onDirectCallRejected(params) {\n      var _this$currentCallData5;\n      if (!params.callId || params.callId !== ((_this$currentCallData5 = this.currentCallData) === null || _this$currentCallData5 === void 0 ? void 0 : _this$currentCallData5.callId)) {\n        debug && console.log(\"[VideoConf] User \" + params.uid + \" has rejected a call \" + params.callId + \" from us, but we're not calling.\");\n        return;\n      }\n      debug && console.log(\"[VideoConf] User \" + params.uid + \" has rejected our call \" + params.callId + \".\");\n      // Stop ringing\n      if (this.currentCallHandler) {\n        clearInterval(this.currentCallHandler);\n        this.currentCallHandler = undefined;\n      }\n      var joined = this.currentCallData.joined;\n      this.emit('direct/cancel', params);\n      this.currentCallData = undefined;\n      this.emit('direct/stopped', params);\n      this.emit('calling/changed');\n      if (!joined) {\n        sdk.rest.post('/v1/video-conference.cancel', {\n          callId: params.callId\n        });\n      }\n    }\n    return onDirectCallRejected;\n  }();\n  _proto.isCallDismissed = function () {\n    function isCallDismissed(callId) {\n      return this.dismissedCalls.has(callId);\n    }\n    return isCallDismissed;\n  }();\n  return _createClass(VideoConfManager, [{\n    key: \"preferences\",\n    get: function () {\n      return this._preferences;\n    }\n  }, {\n    key: \"capabilities\",\n    get: function () {\n      return this._capabilities;\n    }\n  }]);\n}(Emitter))();\nMeteor.startup(function () {\n  return Tracker.autorun(function () {\n    return VideoConfManager.updateUser();\n  });\n});","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_typeof","_createForOfIteratorHelperLoose","_slicedToArray","_objectSpread","_objectWithoutProperties","_toConsumableArray","_createClass","_inheritsLoose","export","VideoConfManager","Emitter","Meteor","Tracker","sdk","getConfig","debug","CALL_INTERVAL","CALL_ATTEMPT_LIMIT","CALL_TIMEOUT","ACCEPT_TIMEOUT","_Emitter","_this","call","userId","currentCallHandler","currentCallData","startingNewCall","hooks","incomingDirectCalls","dismissedCalls","_preferences","_capabilities","Map","Set","mic","cam","_proto","prototype","isBusy","isCalling","isRinging","_this2","values","some","_ref","callId","isCallDismissed","joined","getIncomingDirectCalls","_this3","filter","acceptTimeout","map","_ref2","_","timeout","_t","_excluded","dismissed","startCall","roomId","title","_this4","_await$sdk$rest$post$","data","async","startCall$","_context","prev","next","Error","console","log","emit","awrap","rest","post","allowRinging","catch","e","_e$xhr","_e$xhr$responseJSON","error","xhr","responseJSON","Promise","reject","sent","type","t0","abrupt","callUser","uid","calleeId","rid","joinCall","stop","acceptIncomingCall","_this5","callData","get","clearTimeout","setIncomingCallAttribute","undefined","dismissIncomingCall","setTimeout","updatedCallData","removeIncomingCall","notifyUser","rejectIncomingCall","loseIncomingCall","dismissedIncomingCalls","_this6","keys","dismissedIncomingCallHelper","loadCapabilities","_await$sdk$rest$get$c","capabilities","loadCapabilities$","_context2","attributeName","value","newData","set","_this7","add","delete","has","updateUser","disconnect","connectUser","changePreference","key","setPreferences","prefs","meteorBabelHelpers","sanitizeForInObject","hasOwnProperty","prefKey","_this8","params","_await$sdk$rest$post$2","url","providerName","joinCall$","_context3","state","_e$xhr2","_e$xhr2$responseJSON","abortCall","giveUp","rejectIncomingCallsFromUser","_iterator","_step","done","_ref3","_ref4","_ref4$","_ref5","_this9","attempt","callUser$","_context4","setInterval","warn","_ref6","_this$currentCallData","giveUp$","_context5","clearInterval","_iterator2","_step2","hook","forEach","clear","onVideoConfNotification","_ref7","action","onVideoConfNotification$","_context6","onDirectCall","onDirectCallCanceled","onDirectCallAccepted","onDirectCallRejected","onDirectCallConfirmed","onDirectCallJoined","onDirectCallEnded","notifyUser$","_context7","publish","_this10","_sdk$stream","ready","connectUser$","_context8","stream","push","abortIncomingCall","_this$incomingDirectC","lostCall","createAbortTimeout","_this11","startNewIncomingCall","_ref8","refreshExistingIncomingCall","_ref9","existingData","_ref10","_this$incomingDirectC2","_ref11","_this$currentCallData2","skipConfirmation","arguments","length","_this$incomingDirectC3","_this$currentCallData3","_this$currentCallData4","_this$currentCallData5","startup","autorun"],"sources":["client/lib/VideoConfManager.ts"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { getConfig } from './utils/getConfig';\n\nconst debug = !!(getConfig('debug') || getConfig('debug-VideoConf'));\n\n// The interval between attempts to call the remote user\nconst CALL_INTERVAL = 3000;\n// How many attempts to call we're gonna make\nconst CALL_ATTEMPT_LIMIT = 10;\n// The amount of time we'll assume an incoming call is still valid without any updates from the remote user\nconst CALL_TIMEOUT = 10000;\n// How long are we gonna wait for a link after accepting an incoming call\nconst ACCEPT_TIMEOUT = 5000;\n\ntype DirectCallParams = {\n\tuid: IUser['_id'];\n\trid: IRoom['_id'];\n\tcallId: string;\n};\n\nexport type DirectCallData = DirectCallParams & {\n\tdismissed: boolean;\n};\n\ntype IncomingDirectCall = DirectCallParams & {\n\ttimeout: ReturnType<typeof setTimeout> | undefined;\n\tacceptTimeout?: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport type CallPreferences = {\n\tmic?: boolean;\n\tcam?: boolean;\n};\n\nexport type ProviderCapabilities = {\n\tmic?: boolean;\n\tcam?: boolean;\n\ttitle?: boolean;\n};\n\ntype CurrentCallParams = {\n\tcallId: string;\n\turl: string;\n\tproviderName?: string;\n};\n\ntype VideoConfEvents = {\n\t// We gave up on calling a remote user or they rejected our call\n\t'direct/cancel': DirectCallParams;\n\n\t// A remote user is calling us\n\t'direct/ringing': DirectCallParams;\n\n\t// An incoming call was lost, either by timeout or because the remote user canceled\n\t'direct/lost': DirectCallParams;\n\n\t// We tried to accept an incoming call but the process failed\n\t'direct/failed': DirectCallParams;\n\n\t// A remote user accepted our call\n\t'direct/accepted': DirectCallParams;\n\n\t// We stopped calling a remote user\n\t'direct/stopped': DirectCallParams;\n\n\t'preference/changed': { key: keyof CallPreferences; value: boolean };\n\n\t// The list of incoming calls has changed in some way\n\t'incoming/changed': void;\n\n\t// The list of ringing incoming calls may have changed\n\t'ringing/changed': void;\n\n\t// The value of `isCalling` may have changed\n\t'calling/changed': void;\n\n\t'calling/ended': void;\n\n\t// When join call\n\t'call/join': CurrentCallParams;\n\n\t'join/error': { error: string };\n\n\t'start/error': { error: string };\n\n\t'capabilities/changed': void;\n};\n\nexport const VideoConfManager = new (class VideoConfManager extends Emitter<VideoConfEvents> {\n\tprivate userId: string | undefined;\n\n\tprivate currentCallHandler: ReturnType<typeof setTimeout> | undefined;\n\n\tprivate currentCallData: (DirectCallParams & { joined?: boolean }) | undefined;\n\n\tprivate startingNewCall = false;\n\n\tprivate hooks: (() => void)[] = [];\n\n\tprivate incomingDirectCalls: Map<string, IncomingDirectCall>;\n\n\tprivate dismissedCalls: Set<string>;\n\n\tprivate _preferences: CallPreferences;\n\n\tprivate _capabilities: ProviderCapabilities;\n\n\tpublic get preferences(): CallPreferences {\n\t\treturn this._preferences;\n\t}\n\n\tpublic get capabilities(): ProviderCapabilities {\n\t\treturn this._capabilities;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.incomingDirectCalls = new Map<string, IncomingDirectCall>();\n\t\tthis.dismissedCalls = new Set<string>();\n\t\tthis._preferences = { mic: true, cam: false };\n\t\tthis._capabilities = {};\n\t}\n\n\tpublic isBusy(): boolean {\n\t\tif (this.startingNewCall) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isCalling();\n\t}\n\n\tpublic isRinging(): boolean {\n\t\treturn [...this.incomingDirectCalls.values()].some(({ callId }) => !this.isCallDismissed(callId));\n\t}\n\n\tpublic isCalling(): boolean {\n\t\tif (this.currentCallHandler || (this.currentCallData && !this.currentCallData.joined)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic getIncomingDirectCalls(): DirectCallData[] {\n\t\treturn (\n\t\t\t[...this.incomingDirectCalls.values()]\n\t\t\t\t// Filter out any calls that we're in the process of accepting, so they're already hidden from the UI\n\t\t\t\t.filter((call) => !call.acceptTimeout)\n\t\t\t\t.map(({ timeout: _, acceptTimeout: _t, ...call }) => ({ ...call, dismissed: this.isCallDismissed(call.callId) }))\n\t\t);\n\t}\n\n\tpublic async startCall(roomId: IRoom['_id'], title?: string): Promise<void> {\n\t\tif (!this.userId || this.isBusy()) {\n\t\t\tthrow new Error('Video manager is busy.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Starting new call on room ${roomId}`);\n\t\tthis.startingNewCall = true;\n\t\tthis.emit('calling/changed');\n\n\t\tconst { data } = await sdk.rest.post('/v1/video-conference.start', { roomId, title, allowRinging: true }).catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to start new call on room ${roomId}`);\n\t\t\tthis.startingNewCall = false;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('start/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis.startingNewCall = false;\n\t\tthis.emit('calling/changed');\n\n\t\tif (data.type !== 'direct') {\n\t\t\tthis.emit('calling/ended');\n\t\t}\n\n\t\tswitch (data.type) {\n\t\t\tcase 'direct':\n\t\t\t\treturn this.callUser({ uid: data.calleeId, rid: roomId, callId: data.callId });\n\t\t\tcase 'videoconference':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t\tcase 'livechat':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t}\n\t}\n\n\tpublic acceptIncomingCall(callId: string): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tthrow new Error('Unable to find accepted call information.');\n\t\t}\n\t\tif (callData.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] We're already trying to accept call ${callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Accepting incoming call ${callId}.`);\n\n\t\tif (callData.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'timeout', undefined);\n\t\t}\n\n\t\t// Mute this call Id so any lingering notifications don't trigger it again\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tthis.setIncomingCallAttribute(\n\t\t\tcallId,\n\t\t\t'acceptTimeout',\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst updatedCallData = this.incomingDirectCalls.get(callId);\n\t\t\t\tif (!updatedCallData?.acceptTimeout) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdebug && console.log(`[VideoConf] Attempt to accept call has timed out.`);\n\t\t\t\tthis.removeIncomingCall(callId);\n\n\t\t\t\tthis.emit('direct/failed', { callId, uid: callData.uid, rid: callData.rid });\n\t\t\t}, ACCEPT_TIMEOUT),\n\t\t);\n\t\tthis.emit('incoming/changed');\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that we accept their call.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'accepted', { callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tpublic rejectIncomingCall(callId: string): void {\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.userId && this.notifyUser(callData.uid, 'rejected', { callId, uid: this.userId, rid: callData.rid });\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tpublic dismissedIncomingCalls(): void {\n\t\t// Mute all calls that are currently ringing\n\t\tif ([...this.incomingDirectCalls.keys()].some((callId) => this.dismissedIncomingCallHelper(callId))) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t}\n\t}\n\n\tpublic async loadCapabilities(): Promise<void> {\n\t\tconst { capabilities } = await sdk.rest.get('/v1/video-conference.capabilities').catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to load video conference capabilities`);\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis._capabilities = capabilities || {};\n\t\tthis.emit('capabilities/changed');\n\t}\n\n\tprivate setIncomingCallAttribute<T extends keyof IncomingDirectCall>(\n\t\tcallId: string,\n\t\tattributeName: T,\n\t\tvalue: IncomingDirectCall[T] | undefined,\n\t): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tdebug && console.error(`[VideoConf] Cannot change attribute \"${attributeName}\" of unknown call \"${callId}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newData: IncomingDirectCall = {\n\t\t\t...callData,\n\t\t};\n\n\t\tif (value === undefined) {\n\t\t\tdelete newData[attributeName];\n\t\t} else {\n\t\t\tnewData[attributeName] = value;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Updating attribute \"${attributeName}\" of call \"${callId}\".`);\n\t\tthis.incomingDirectCalls.set(callId, newData);\n\t}\n\n\tprivate dismissedIncomingCallHelper(callId: string): boolean {\n\t\t// Muting will stop a callId from ringing, but it doesn't affect any part of the existing workflow\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Dismissing call ${callId}`);\n\t\tthis.dismissedCalls.add(callId);\n\t\t// We don't need to hold on to the dismissed callIds forever because the server won't let anyone call us with it for very long\n\t\tsetTimeout(() => this.dismissedCalls.delete(callId), CALL_TIMEOUT * 20);\n\t\t// Only change the state if this call is actually in our list\n\t\treturn this.incomingDirectCalls.has(callId);\n\t}\n\n\tpublic dismissIncomingCall(callId: string): boolean {\n\t\tif (this.dismissedIncomingCallHelper(callId)) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic updateUser(): void {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (this.userId === userId) {\n\t\t\tdebug && console.log(`[VideoConf] Logged user has not changed, so we're not changing the hooks.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Logged user has changed.`);\n\n\t\tif (this.userId) {\n\t\t\tthis.disconnect();\n\t\t}\n\n\t\tif (userId) {\n\t\t\tthis.connectUser(userId);\n\t\t}\n\t}\n\n\tpublic changePreference(key: keyof CallPreferences, value: boolean): void {\n\t\tthis._preferences[key] = value;\n\t\tthis.emit('preference/changed', { key, value });\n\t}\n\n\tpublic setPreferences(prefs: Partial<CallPreferences>): void {\n\t\tfor (const key in prefs) {\n\t\t\tif (prefs.hasOwnProperty(key)) {\n\t\t\t\tconst prefKey = key as keyof CallPreferences;\n\t\t\t\tthis.changePreference(prefKey, prefs[prefKey] as boolean);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async joinCall(callId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] Joining call ${callId}.`);\n\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tconst data = this.incomingDirectCalls.get(callId);\n\t\t\tif (data?.acceptTimeout) {\n\t\t\t\tdebug && console.log('[VideoConf] Clearing acceptance timeout');\n\t\t\t\tclearTimeout(data.acceptTimeout);\n\t\t\t}\n\t\t\tthis.removeIncomingCall(callId);\n\t\t}\n\n\t\tconst params = {\n\t\t\tcallId,\n\t\t\tstate: {\n\t\t\t\t...(this._preferences.mic !== undefined ? { mic: this._preferences.mic } : {}),\n\t\t\t\t...(this._preferences.cam !== undefined ? { cam: this._preferences.cam } : {}),\n\t\t\t},\n\t\t};\n\n\t\tconst { url, providerName } = await sdk.rest.post('/v1/video-conference.join', params).catch((e) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to join call ${callId}`);\n\t\t\tthis.emit('join/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tif (!url) {\n\t\t\tthrow new Error('Failed to get video conference URL.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Opening ${url}.`);\n\t\tthis.emit('call/join', { url, callId, providerName });\n\t}\n\n\tpublic abortCall(): void {\n\t\tif (!this.currentCallData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.giveUp(this.currentCallData);\n\t}\n\n\tprivate rejectIncomingCallsFromUser(userId: string): void {\n\t\tfor (const [, { callId, uid }] of this.incomingDirectCalls) {\n\t\t\tif (userId === uid) {\n\t\t\t\tdebug && console.log(`[VideoConf] Rejecting old incoming call from user ${userId}`);\n\t\t\t\tthis.rejectIncomingCall(callId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async callUser({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tif (this.currentCallHandler || this.currentCallData) {\n\t\t\tthrow new Error('Video Conference State Error.');\n\t\t}\n\n\t\tlet attempt = 1;\n\t\tthis.currentCallData = { callId, rid, uid };\n\t\tthis.currentCallHandler = setInterval(() => {\n\t\t\tif (!this.currentCallHandler) {\n\t\t\t\tdebug && console.warn(`[VideoConf] Ringing interval was not properly cleared.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattempt++;\n\n\t\t\tif (attempt > CALL_ATTEMPT_LIMIT) {\n\t\t\t\tthis.giveUp({ uid, rid, callId });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdebug && console.log(`[VideoConf] Ringing user ${uid}, attempt number ${attempt}.`);\n\t\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t\t}, CALL_INTERVAL);\n\t\tthis.emit('calling/changed');\n\n\t\tdebug && console.log(`[VideoConf] Ringing user ${uid} for the first time.`);\n\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t}\n\n\tprivate async giveUp({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tconst joined = this.currentCallData?.joined;\n\n\t\tdebug && console.log(`[VideoConf] Stop ringing user ${uid}.`);\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.currentCallData = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${uid} that we are no longer calling.`);\n\t\tthis.userId && this.notifyUser(uid, 'canceled', { uid: this.userId, rid, callId });\n\n\t\tthis.emit('direct/cancel', { uid, rid, callId });\n\t\tthis.emit('direct/stopped', { uid, rid, callId });\n\n\t\tif (joined) {\n\t\t\treturn;\n\t\t}\n\n\t\tsdk.rest.post('/v1/video-conference.cancel', { callId });\n\t}\n\n\tprivate disconnect(): void {\n\t\tdebug && console.log(`[VideoConf] disconnecting user ${this.userId}`);\n\t\tfor (const hook of this.hooks) {\n\t\t\thook();\n\t\t}\n\t\tthis.hooks = [];\n\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tthis.incomingDirectCalls.forEach((call) => {\n\t\t\tif (call.timeout) {\n\t\t\t\tclearTimeout(call.timeout);\n\t\t\t}\n\t\t\tif (call.acceptTimeout) {\n\t\t\t\tclearTimeout(call.acceptTimeout);\n\t\t\t}\n\t\t});\n\t\tthis.incomingDirectCalls.clear();\n\t\tthis.dismissedCalls.clear();\n\t\tthis.currentCallData = undefined;\n\t\tthis._preferences = {};\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('calling/changed');\n\t}\n\n\tprivate async onVideoConfNotification({ action, params }: { action: string; params: DirectCallParams }): Promise<void> {\n\t\tif (!action || typeof action !== 'string') {\n\t\t\tdebug && console.error('[VideoConf] Invalid action received.');\n\t\t\treturn;\n\t\t}\n\t\tif (!params || typeof params !== 'object' || !params.callId || !params.uid || !params.rid) {\n\t\t\tdebug && console.error('[VideoConf] Invalid params received.');\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (action) {\n\t\t\tcase 'call':\n\t\t\t\treturn this.onDirectCall(params);\n\t\t\tcase 'canceled':\n\t\t\t\treturn this.onDirectCallCanceled(params);\n\t\t\tcase 'accepted':\n\t\t\t\treturn this.onDirectCallAccepted(params);\n\t\t\tcase 'rejected':\n\t\t\t\treturn this.onDirectCallRejected(params);\n\t\t\tcase 'confirmed':\n\t\t\t\treturn this.onDirectCallConfirmed(params);\n\t\t\tcase 'join':\n\t\t\t\treturn this.onDirectCallJoined(params);\n\t\t\tcase 'end':\n\t\t\t\treturn this.onDirectCallEnded(params);\n\t\t}\n\t}\n\n\tprivate async notifyUser(uid: IUser['_id'], action: string, params: DirectCallParams): Promise<void> {\n\t\treturn sdk.publish('notify-user', [`${uid}/video-conference`, { action, params }]);\n\t}\n\n\tprivate async connectUser(userId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] connecting user ${userId}`);\n\t\tthis.userId = userId;\n\n\t\tconst { stop, ready } = sdk.stream('notify-user', [`${userId}/video-conference`], (data) => this.onVideoConfNotification(data));\n\n\t\tawait ready();\n\n\t\tthis.hooks.push(stop);\n\t}\n\n\tprivate abortIncomingCall(callId: string): void {\n\t\t// If we just accepted this call, then ignore the timeout\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Canceling call ${callId} due to ringing timeout.`);\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate loseIncomingCall(callId: string): void {\n\t\tconst lostCall = this.incomingDirectCalls.get(callId);\n\t\tif (!lostCall) {\n\t\t\tdebug && console.warn(`[VideoConf] Unable to cancel ${callId} because we have no information about it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeIncomingCall(callId);\n\n\t\tdebug && console.log(`[VideoConf] Call ${callId} from ${lostCall.uid} was lost.`);\n\t\tthis.emit('direct/lost', { callId, uid: lostCall.uid, rid: lostCall.rid });\n\t}\n\n\tprivate removeIncomingCall(callId: string): void {\n\t\tdebug && console.log(`[VideoConf] Removing call with id \"${callId}\" from Incoming Calls list.`);\n\t\tif (!this.incomingDirectCalls.has(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isRinging = this.isRinging();\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t}\n\n\t\tthis.incomingDirectCalls.delete(callId);\n\t\tthis.emit('incoming/changed');\n\n\t\tif (isRinging !== this.isRinging()) {\n\t\t\tthis.emit('ringing/changed');\n\t\t}\n\t}\n\n\tprivate createAbortTimeout(callId: string): ReturnType<typeof setTimeout> {\n\t\treturn setTimeout(() => this.abortIncomingCall(callId), CALL_TIMEOUT);\n\t}\n\n\tprivate startNewIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\tdebug && console.log(`[VideoConf] Ignoring dismissed call.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Reject any currently ringing call from the user before registering the new one.\n\t\tthis.rejectIncomingCallsFromUser(uid);\n\n\t\tdebug && console.log(`[VideoConf] Storing this new call information.`);\n\t\tthis.incomingDirectCalls.set(callId, {\n\t\t\tcallId,\n\t\t\tuid,\n\t\t\trid,\n\t\t\ttimeout: this.createAbortTimeout(callId),\n\t\t});\n\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t}\n\n\tprivate refreshExistingIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tconst existingData = this.incomingDirectCalls.get(callId);\n\t\tif (!existingData) {\n\t\t\tthrow new Error('Video Conference Manager State Error');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Resetting call timeout.`);\n\t\tif (existingData.timeout) {\n\t\t\tclearTimeout(existingData.timeout);\n\t\t}\n\t\texistingData.timeout = this.createAbortTimeout(callId);\n\n\t\tif (!this.isCallDismissed(callId)) {\n\t\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCall({ callId, uid, rid }: DirectCallParams): void {\n\t\t// If we already accepted this call, then don't ring again\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${uid} is ringing with call ${callId}.`);\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tthis.refreshExistingIncomingCall({ callId, uid, rid });\n\t\t} else {\n\t\t\tthis.startNewIncomingCall({ callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCallCanceled({ callId }: DirectCallParams): void {\n\t\tdebug && console.log(`[VideoConf] Call ${callId} was canceled by the remote user.`);\n\n\t\t// We had just accepted this call, but the remote user hang up before they got the notification, so cancel our acceptance\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.acceptTimeout) {\n\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'acceptTimeout', undefined);\n\t\t}\n\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate onDirectCallAccepted(params: DirectCallParams, skipConfirmation = false): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst callData = this.currentCallData;\n\n\t\tthis.emit('direct/accepted', params);\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('calling/changed');\n\n\t\tif (!callData.joined) {\n\t\t\tthis.joinCall(params.callId);\n\t\t}\n\n\t\tif (skipConfirmation) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that they can join the call now.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'confirmed', { callId: callData.callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tprivate onDirectCallConfirmed(params: DirectCallParams): void {\n\t\tif (!params.callId || !this.incomingDirectCalls.get(params.callId)?.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} confirmed we can join ${params.callId} but we aren't trying to join it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.joinCall(params.callId);\n\t}\n\n\tprivate onDirectCallJoined(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.join' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (params.uid === this.userId) {\n\t\t\tif (this.currentCallData?.callId === params.callId) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined our own call (${this.userId}) from somewhere else. Flagging the call appropriatelly.`);\n\t\t\t\tthis.currentCallData.joined = true;\n\t\t\t\tthis.emit('calling/changed');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.incomingDirectCalls.has(params.callId)) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined the call ${params.callId} from somewhere else. Dismissing it.`);\n\t\t\t\tthis.dismissIncomingCall(params.callId);\n\t\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has joined a call we started ${params.callId}.`);\n\t\tthis.onDirectCallAccepted(params, true);\n\t}\n\n\tprivate onDirectCallEnded(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.end' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst callData = this.incomingDirectCalls.get(params.callId);\n\t\tif (callData) {\n\t\t\tdebug && console.log(`[VideoConf] Incoming call ended by the server: ${params.callId}.`);\n\t\t\tif (callData.acceptTimeout) {\n\t\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\t\tthis.setIncomingCallAttribute(params.callId, 'acceptTimeout', undefined);\n\t\t\t}\n\n\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.currentCallData?.callId !== params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Server sent a call ended event for a call we're not aware of: ${params.callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Outgoing call ended by the server: ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tthis.currentCallData = undefined;\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('direct/stopped', params);\n\t\t}\n\t}\n\n\tprivate onDirectCallRejected(params: DirectCallParams): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst { joined } = this.currentCallData;\n\n\t\tthis.emit('direct/cancel', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.emit('calling/changed');\n\n\t\tif (!joined) {\n\t\t\tsdk.rest.post('/v1/video-conference.cancel', { callId: params.callId });\n\t\t}\n\t}\n\n\tprivate isCallDismissed(callId: string): boolean {\n\t\treturn this.dismissedCalls.has(callId);\n\t}\n})();\n\nMeteor.startup(() => Tracker.autorun(() => VideoConfManager.updateUser()));\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"712aa43585c6ae14be98e1a37939c52a4f7794c4"}
