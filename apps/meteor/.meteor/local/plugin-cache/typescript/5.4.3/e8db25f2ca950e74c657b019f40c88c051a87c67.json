{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveJumpToMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/messages/hooks/BeforeSaveJumpToMessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveJumpToMessage.ts","inputSourceMap":{"version":3,"file":"server/services/messages/hooks/BeforeSaveJumpToMessage.ts","sourceRoot":"","sources":["server/services/messages/hooks/BeforeSaveJumpToMessage.ts"],"names":[],"mappings":"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","sourcesContent":["import QueryString from 'querystring';\nimport URL from 'url';\n\nimport type { MessageAttachment, IMessage, IUser, IOmnichannelRoom, IRoom } from '@rocket.chat/core-typings';\nimport { isOmnichannelRoom, isQuoteAttachment } from '@rocket.chat/core-typings';\n\nimport { createQuoteAttachment } from '../../../../lib/createQuoteAttachment';\n\nconst recursiveRemoveAttachments = (attachments: MessageAttachment, deep = 1, quoteChainLimit: number): MessageAttachment => {\n\tif (attachments && isQuoteAttachment(attachments)) {\n\t\tif (deep < quoteChainLimit - 1) {\n\t\t\tattachments.attachments?.map((msg) => recursiveRemoveAttachments(msg, deep + 1, quoteChainLimit));\n\t\t} else {\n\t\t\tdelete attachments.attachments;\n\t\t}\n\t}\n\n\treturn attachments;\n};\n\nconst validateAttachmentDeepness = (message: IMessage, quoteChainLimit: number): IMessage => {\n\tif (!message?.attachments) {\n\t\treturn message;\n\t}\n\n\tif ((message.attachments && quoteChainLimit < 2) || isNaN(quoteChainLimit)) {\n\t\tdelete message.attachments;\n\t}\n\n\tmessage.attachments = message.attachments?.map((attachment) => recursiveRemoveAttachments(attachment, 1, quoteChainLimit));\n\n\treturn message;\n};\n\nconst removeQuoteAttachments = (message: IMessage) => {\n\tif (!message.attachments) {\n\t\treturn;\n\t}\n\tmessage.attachments = message.attachments.filter((attachment) => !isQuoteAttachment(attachment));\n};\n\ntype JumpToMessageInit = {\n\tgetMessages(messageIds: IMessage['_id'][]): Promise<IMessage[]>;\n\tgetRooms(roomIds: IRoom['_id'][]): Promise<IRoom[] | IOmnichannelRoom[] | null>;\n\tcanAccessRoom(room: IRoom, user: Pick<IUser, '_id' | 'username' | 'name' | 'language'>): Promise<boolean>;\n\tgetUserAvatarURL(user?: string): string;\n};\n\n/**\n * Transform URLs in messages into quote attachments\n */\nexport class BeforeSaveJumpToMessage {\n\tprivate getMessages: JumpToMessageInit['getMessages'];\n\n\tprivate getRooms: JumpToMessageInit['getRooms'];\n\n\tprivate canAccessRoom: JumpToMessageInit['canAccessRoom'];\n\n\tprivate getUserAvatarURL: JumpToMessageInit['getUserAvatarURL'];\n\n\tconstructor(options: JumpToMessageInit) {\n\t\tthis.getMessages = options.getMessages;\n\t\tthis.getRooms = options.getRooms;\n\t\tthis.canAccessRoom = options.canAccessRoom;\n\t\tthis.getUserAvatarURL = options.getUserAvatarURL;\n\t}\n\n\tasync createAttachmentForMessageURLs({\n\t\tmessage,\n\t\tuser: currentUser,\n\t\tconfig,\n\t}: {\n\t\tmessage: IMessage;\n\t\tuser: Pick<IUser, '_id' | 'username' | 'name' | 'language'>;\n\t\tconfig: {\n\t\t\tchainLimit: number;\n\t\t\tsiteUrl: string;\n\t\t\tuseRealName: boolean;\n\t\t};\n\t}): Promise<IMessage> {\n\t\t// Quote attachments are always rebuilt. Do not keep old ones since they may not still be linked to the message\n\t\tremoveQuoteAttachments(message);\n\n\t\t// if no message is present, or the message doesn't have any URL, skip\n\t\tif (!message?.urls?.length) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst linkedMessages = message.urls\n\t\t\t.filter((item) => item.url.includes(config.siteUrl))\n\t\t\t.map((item) => {\n\t\t\t\tconst urlObj = URL.parse(item.url);\n\n\t\t\t\t// if the URL doesn't have query params (doesn't reference message) skip\n\t\t\t\tif (!urlObj.query) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { msg: msgId } = QueryString.parse(urlObj.query);\n\n\t\t\t\tif (typeof msgId !== 'string') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn { msgId, url: item.url };\n\t\t\t})\n\t\t\t.filter(Boolean);\n\n\t\tconst msgs = await this.getMessages(linkedMessages.map((linkedMsg) => linkedMsg?.msgId) as string[]);\n\n\t\tconst validMessages = msgs.filter((msg) => validateAttachmentDeepness(msg, config.chainLimit));\n\n\t\tconst rooms = await this.getRooms(validMessages.map((msg) => msg.rid));\n\n\t\tconst roomsWithPermission =\n\t\t\trooms &&\n\t\t\t(await Promise.all(\n\t\t\t\trooms.map(async (room) => {\n\t\t\t\t\tif (!!message.token && isOmnichannelRoom(room) && !!room.v?.token && message.token === room.v.token) {\n\t\t\t\t\t\treturn room;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentUser && (await this.canAccessRoom(room, currentUser))) {\n\t\t\t\t\t\treturn room;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t));\n\n\t\tconst validRooms = roomsWithPermission?.filter((room) => !!room);\n\n\t\tconst { useRealName } = config;\n\n\t\tconst quotes = [];\n\n\t\tfor (const item of message.urls) {\n\t\t\tif (!item.url.includes(config.siteUrl)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst linkedMessage = linkedMessages.find((msg) => msg?.url === item.url);\n\t\t\tif (!linkedMessage) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst messageFromUrl = validMessages.find((msg) => msg._id === linkedMessage.msgId);\n\t\t\tif (!messageFromUrl) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!validRooms?.find((room) => room?._id === messageFromUrl.rid)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem.ignoreParse = true;\n\n\t\t\tquotes.push(createQuoteAttachment(messageFromUrl, item.url, useRealName, this.getUserAvatarURL(messageFromUrl.u.username)));\n\t\t}\n\n\t\tif (quotes.length > 0) {\n\t\t\tconst currentAttachments = message.attachments || [];\n\t\t\tmessage.attachments = [...currentAttachments, ...quotes];\n\t\t}\n\n\t\treturn message;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveJumpToMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/messages/hooks/BeforeSaveJumpToMessage.ts","inputSourceMap":{"version":3,"file":"server/services/messages/hooks/BeforeSaveJumpToMessage.ts","sourceRoot":"","sources":["server/services/messages/hooks/BeforeSaveJumpToMessage.ts"],"names":[],"mappings":"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","sourcesContent":["import QueryString from 'querystring';\nimport URL from 'url';\n\nimport type { MessageAttachment, IMessage, IUser, IOmnichannelRoom, IRoom } from '@rocket.chat/core-typings';\nimport { isOmnichannelRoom, isQuoteAttachment } from '@rocket.chat/core-typings';\n\nimport { createQuoteAttachment } from '../../../../lib/createQuoteAttachment';\n\nconst recursiveRemoveAttachments = (attachments: MessageAttachment, deep = 1, quoteChainLimit: number): MessageAttachment => {\n\tif (attachments && isQuoteAttachment(attachments)) {\n\t\tif (deep < quoteChainLimit - 1) {\n\t\t\tattachments.attachments?.map((msg) => recursiveRemoveAttachments(msg, deep + 1, quoteChainLimit));\n\t\t} else {\n\t\t\tdelete attachments.attachments;\n\t\t}\n\t}\n\n\treturn attachments;\n};\n\nconst validateAttachmentDeepness = (message: IMessage, quoteChainLimit: number): IMessage => {\n\tif (!message?.attachments) {\n\t\treturn message;\n\t}\n\n\tif ((message.attachments && quoteChainLimit < 2) || isNaN(quoteChainLimit)) {\n\t\tdelete message.attachments;\n\t}\n\n\tmessage.attachments = message.attachments?.map((attachment) => recursiveRemoveAttachments(attachment, 1, quoteChainLimit));\n\n\treturn message;\n};\n\nconst removeQuoteAttachments = (message: IMessage) => {\n\tif (!message.attachments) {\n\t\treturn;\n\t}\n\tmessage.attachments = message.attachments.filter((attachment) => !isQuoteAttachment(attachment));\n};\n\ntype JumpToMessageInit = {\n\tgetMessages(messageIds: IMessage['_id'][]): Promise<IMessage[]>;\n\tgetRooms(roomIds: IRoom['_id'][]): Promise<IRoom[] | IOmnichannelRoom[] | null>;\n\tcanAccessRoom(room: IRoom, user: Pick<IUser, '_id' | 'username' | 'name' | 'language'>): Promise<boolean>;\n\tgetUserAvatarURL(user?: string): string;\n};\n\n/**\n * Transform URLs in messages into quote attachments\n */\nexport class BeforeSaveJumpToMessage {\n\tprivate getMessages: JumpToMessageInit['getMessages'];\n\n\tprivate getRooms: JumpToMessageInit['getRooms'];\n\n\tprivate canAccessRoom: JumpToMessageInit['canAccessRoom'];\n\n\tprivate getUserAvatarURL: JumpToMessageInit['getUserAvatarURL'];\n\n\tconstructor(options: JumpToMessageInit) {\n\t\tthis.getMessages = options.getMessages;\n\t\tthis.getRooms = options.getRooms;\n\t\tthis.canAccessRoom = options.canAccessRoom;\n\t\tthis.getUserAvatarURL = options.getUserAvatarURL;\n\t}\n\n\tasync createAttachmentForMessageURLs({\n\t\tmessage,\n\t\tuser: currentUser,\n\t\tconfig,\n\t}: {\n\t\tmessage: IMessage;\n\t\tuser: Pick<IUser, '_id' | 'username' | 'name' | 'language'>;\n\t\tconfig: {\n\t\t\tchainLimit: number;\n\t\t\tsiteUrl: string;\n\t\t\tuseRealName: boolean;\n\t\t};\n\t}): Promise<IMessage> {\n\t\t// Quote attachments are always rebuilt. Do not keep old ones since they may not still be linked to the message\n\t\tremoveQuoteAttachments(message);\n\n\t\t// if no message is present, or the message doesn't have any URL, skip\n\t\tif (!message?.urls?.length) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst linkedMessages = message.urls\n\t\t\t.filter((item) => item.url.includes(config.siteUrl))\n\t\t\t.map((item) => {\n\t\t\t\tconst urlObj = URL.parse(item.url);\n\n\t\t\t\t// if the URL doesn't have query params (doesn't reference message) skip\n\t\t\t\tif (!urlObj.query) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { msg: msgId } = QueryString.parse(urlObj.query);\n\n\t\t\t\tif (typeof msgId !== 'string') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn { msgId, url: item.url };\n\t\t\t})\n\t\t\t.filter(Boolean);\n\n\t\tconst msgs = await this.getMessages(linkedMessages.map((linkedMsg) => linkedMsg?.msgId) as string[]);\n\n\t\tconst validMessages = msgs.filter((msg) => validateAttachmentDeepness(msg, config.chainLimit));\n\n\t\tconst rooms = await this.getRooms(validMessages.map((msg) => msg.rid));\n\n\t\tconst roomsWithPermission =\n\t\t\trooms &&\n\t\t\t(await Promise.all(\n\t\t\t\trooms.map(async (room) => {\n\t\t\t\t\tif (!!message.token && isOmnichannelRoom(room) && !!room.v?.token && message.token === room.v.token) {\n\t\t\t\t\t\treturn room;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentUser && (await this.canAccessRoom(room, currentUser))) {\n\t\t\t\t\t\treturn room;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t));\n\n\t\tconst validRooms = roomsWithPermission?.filter((room) => !!room);\n\n\t\tconst { useRealName } = config;\n\n\t\tconst quotes = [];\n\n\t\tfor (const item of message.urls) {\n\t\t\tif (!item.url.includes(config.siteUrl)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst linkedMessage = linkedMessages.find((msg) => msg?.url === item.url);\n\t\t\tif (!linkedMessage) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst messageFromUrl = validMessages.find((msg) => msg._id === linkedMessage.msgId);\n\t\t\tif (!messageFromUrl) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!validRooms?.find((room) => room?._id === messageFromUrl.rid)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem.ignoreParse = true;\n\n\t\t\tquotes.push(createQuoteAttachment(messageFromUrl, item.url, useRealName, this.getUserAvatarURL(messageFromUrl.u.username)));\n\t\t}\n\n\t\tif (quotes.length > 0) {\n\t\t\tconst currentAttachments = message.attachments || [];\n\t\t\tmessage.attachments = [...currentAttachments, ...quotes];\n\t\t}\n\n\t\treturn message;\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      BeforeSaveJumpToMessage: () => BeforeSaveJumpToMessage\n    });\n    let QueryString;\n    module.link(\"querystring\", {\n      default(v) {\n        QueryString = v;\n      }\n    }, 0);\n    let URL;\n    module.link(\"url\", {\n      default(v) {\n        URL = v;\n      }\n    }, 1);\n    let isOmnichannelRoom, isQuoteAttachment;\n    module.link(\"@rocket.chat/core-typings\", {\n      isOmnichannelRoom(v) {\n        isOmnichannelRoom = v;\n      },\n      isQuoteAttachment(v) {\n        isQuoteAttachment = v;\n      }\n    }, 2);\n    let createQuoteAttachment;\n    module.link(\"../../../../lib/createQuoteAttachment\", {\n      createQuoteAttachment(v) {\n        createQuoteAttachment = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const recursiveRemoveAttachments = function (attachments) {\n      let deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      let quoteChainLimit = arguments.length > 2 ? arguments[2] : undefined;\n      if (attachments && isQuoteAttachment(attachments)) {\n        if (deep < quoteChainLimit - 1) {\n          var _attachments$attachme;\n          (_attachments$attachme = attachments.attachments) === null || _attachments$attachme === void 0 ? void 0 : _attachments$attachme.map(msg => recursiveRemoveAttachments(msg, deep + 1, quoteChainLimit));\n        } else {\n          delete attachments.attachments;\n        }\n      }\n      return attachments;\n    };\n    const validateAttachmentDeepness = (message, quoteChainLimit) => {\n      var _message$attachments;\n      if (!(message !== null && message !== void 0 && message.attachments)) {\n        return message;\n      }\n      if (message.attachments && quoteChainLimit < 2 || isNaN(quoteChainLimit)) {\n        delete message.attachments;\n      }\n      message.attachments = (_message$attachments = message.attachments) === null || _message$attachments === void 0 ? void 0 : _message$attachments.map(attachment => recursiveRemoveAttachments(attachment, 1, quoteChainLimit));\n      return message;\n    };\n    const removeQuoteAttachments = message => {\n      if (!message.attachments) {\n        return;\n      }\n      message.attachments = message.attachments.filter(attachment => !isQuoteAttachment(attachment));\n    };\n    /**\n     * Transform URLs in messages into quote attachments\n     */\n    class BeforeSaveJumpToMessage {\n      constructor(options) {\n        this.getMessages = void 0;\n        this.getRooms = void 0;\n        this.canAccessRoom = void 0;\n        this.getUserAvatarURL = void 0;\n        this.getMessages = options.getMessages;\n        this.getRooms = options.getRooms;\n        this.canAccessRoom = options.canAccessRoom;\n        this.getUserAvatarURL = options.getUserAvatarURL;\n      }\n      async createAttachmentForMessageURLs(_ref) {\n        var _message$urls;\n        let {\n          message,\n          user: currentUser,\n          config\n        } = _ref;\n        // Quote attachments are always rebuilt. Do not keep old ones since they may not still be linked to the message\n        removeQuoteAttachments(message);\n        // if no message is present, or the message doesn't have any URL, skip\n        if (!(message !== null && message !== void 0 && (_message$urls = message.urls) !== null && _message$urls !== void 0 && _message$urls.length)) {\n          return message;\n        }\n        const linkedMessages = message.urls.filter(item => item.url.includes(config.siteUrl)).map(item => {\n          const urlObj = URL.parse(item.url);\n          // if the URL doesn't have query params (doesn't reference message) skip\n          if (!urlObj.query) {\n            return;\n          }\n          const {\n            msg: msgId\n          } = QueryString.parse(urlObj.query);\n          if (typeof msgId !== 'string') {\n            return;\n          }\n          return {\n            msgId,\n            url: item.url\n          };\n        }).filter(Boolean);\n        const msgs = await this.getMessages(linkedMessages.map(linkedMsg => linkedMsg === null || linkedMsg === void 0 ? void 0 : linkedMsg.msgId));\n        const validMessages = msgs.filter(msg => validateAttachmentDeepness(msg, config.chainLimit));\n        const rooms = await this.getRooms(validMessages.map(msg => msg.rid));\n        const roomsWithPermission = rooms && (await Promise.all(rooms.map(async room => {\n          var _room$v;\n          if (!!message.token && isOmnichannelRoom(room) && !!((_room$v = room.v) !== null && _room$v !== void 0 && _room$v.token) && message.token === room.v.token) {\n            return room;\n          }\n          if (currentUser && (await this.canAccessRoom(room, currentUser))) {\n            return room;\n          }\n        })));\n        const validRooms = roomsWithPermission === null || roomsWithPermission === void 0 ? void 0 : roomsWithPermission.filter(room => !!room);\n        const {\n          useRealName\n        } = config;\n        const quotes = [];\n        for (const item of message.urls) {\n          if (!item.url.includes(config.siteUrl)) {\n            continue;\n          }\n          const linkedMessage = linkedMessages.find(msg => (msg === null || msg === void 0 ? void 0 : msg.url) === item.url);\n          if (!linkedMessage) {\n            continue;\n          }\n          const messageFromUrl = validMessages.find(msg => msg._id === linkedMessage.msgId);\n          if (!messageFromUrl) {\n            continue;\n          }\n          if (!(validRooms !== null && validRooms !== void 0 && validRooms.find(room => (room === null || room === void 0 ? void 0 : room._id) === messageFromUrl.rid))) {\n            continue;\n          }\n          item.ignoreParse = true;\n          quotes.push(createQuoteAttachment(messageFromUrl, item.url, useRealName, this.getUserAvatarURL(messageFromUrl.u.username)));\n        }\n        if (quotes.length > 0) {\n          const currentAttachments = message.attachments || [];\n          message.attachments = [...currentAttachments, ...quotes];\n        }\n        return message;\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","BeforeSaveJumpToMessage","QueryString","link","default","v","URL","isOmnichannelRoom","isQuoteAttachment","createQuoteAttachment","__reifyWaitForDeps__","recursiveRemoveAttachments","attachments","deep","arguments","length","undefined","quoteChainLimit","_attachments$attachme","map","msg","validateAttachmentDeepness","message","_message$attachments","isNaN","attachment","removeQuoteAttachments","filter","constructor","options","getMessages","getRooms","canAccessRoom","getUserAvatarURL","createAttachmentForMessageURLs","_ref","_message$urls","user","currentUser","config","urls","linkedMessages","item","url","includes","siteUrl","urlObj","parse","query","msgId","Boolean","msgs","linkedMsg","validMessages","chainLimit","rooms","rid","roomsWithPermission","Promise","all","room","_room$v","token","validRooms","useRealName","quotes","linkedMessage","find","messageFromUrl","_id","ignoreParse","push","u","username","currentAttachments","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/messages/hooks/BeforeSaveJumpToMessage.ts"],"sourcesContent":["import QueryString from 'querystring';\nimport URL from 'url';\n\nimport type { MessageAttachment, IMessage, IUser, IOmnichannelRoom, IRoom } from '@rocket.chat/core-typings';\nimport { isOmnichannelRoom, isQuoteAttachment } from '@rocket.chat/core-typings';\n\nimport { createQuoteAttachment } from '../../../../lib/createQuoteAttachment';\n\nconst recursiveRemoveAttachments = (attachments: MessageAttachment, deep = 1, quoteChainLimit: number): MessageAttachment => {\n\tif (attachments && isQuoteAttachment(attachments)) {\n\t\tif (deep < quoteChainLimit - 1) {\n\t\t\tattachments.attachments?.map((msg) => recursiveRemoveAttachments(msg, deep + 1, quoteChainLimit));\n\t\t} else {\n\t\t\tdelete attachments.attachments;\n\t\t}\n\t}\n\n\treturn attachments;\n};\n\nconst validateAttachmentDeepness = (message: IMessage, quoteChainLimit: number): IMessage => {\n\tif (!message?.attachments) {\n\t\treturn message;\n\t}\n\n\tif ((message.attachments && quoteChainLimit < 2) || isNaN(quoteChainLimit)) {\n\t\tdelete message.attachments;\n\t}\n\n\tmessage.attachments = message.attachments?.map((attachment) => recursiveRemoveAttachments(attachment, 1, quoteChainLimit));\n\n\treturn message;\n};\n\nconst removeQuoteAttachments = (message: IMessage) => {\n\tif (!message.attachments) {\n\t\treturn;\n\t}\n\tmessage.attachments = message.attachments.filter((attachment) => !isQuoteAttachment(attachment));\n};\n\ntype JumpToMessageInit = {\n\tgetMessages(messageIds: IMessage['_id'][]): Promise<IMessage[]>;\n\tgetRooms(roomIds: IRoom['_id'][]): Promise<IRoom[] | IOmnichannelRoom[] | null>;\n\tcanAccessRoom(room: IRoom, user: Pick<IUser, '_id' | 'username' | 'name' | 'language'>): Promise<boolean>;\n\tgetUserAvatarURL(user?: string): string;\n};\n\n/**\n * Transform URLs in messages into quote attachments\n */\nexport class BeforeSaveJumpToMessage {\n\tprivate getMessages: JumpToMessageInit['getMessages'];\n\n\tprivate getRooms: JumpToMessageInit['getRooms'];\n\n\tprivate canAccessRoom: JumpToMessageInit['canAccessRoom'];\n\n\tprivate getUserAvatarURL: JumpToMessageInit['getUserAvatarURL'];\n\n\tconstructor(options: JumpToMessageInit) {\n\t\tthis.getMessages = options.getMessages;\n\t\tthis.getRooms = options.getRooms;\n\t\tthis.canAccessRoom = options.canAccessRoom;\n\t\tthis.getUserAvatarURL = options.getUserAvatarURL;\n\t}\n\n\tasync createAttachmentForMessageURLs({\n\t\tmessage,\n\t\tuser: currentUser,\n\t\tconfig,\n\t}: {\n\t\tmessage: IMessage;\n\t\tuser: Pick<IUser, '_id' | 'username' | 'name' | 'language'>;\n\t\tconfig: {\n\t\t\tchainLimit: number;\n\t\t\tsiteUrl: string;\n\t\t\tuseRealName: boolean;\n\t\t};\n\t}): Promise<IMessage> {\n\t\t// Quote attachments are always rebuilt. Do not keep old ones since they may not still be linked to the message\n\t\tremoveQuoteAttachments(message);\n\n\t\t// if no message is present, or the message doesn't have any URL, skip\n\t\tif (!message?.urls?.length) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst linkedMessages = message.urls\n\t\t\t.filter((item) => item.url.includes(config.siteUrl))\n\t\t\t.map((item) => {\n\t\t\t\tconst urlObj = URL.parse(item.url);\n\n\t\t\t\t// if the URL doesn't have query params (doesn't reference message) skip\n\t\t\t\tif (!urlObj.query) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { msg: msgId } = QueryString.parse(urlObj.query);\n\n\t\t\t\tif (typeof msgId !== 'string') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn { msgId, url: item.url };\n\t\t\t})\n\t\t\t.filter(Boolean);\n\n\t\tconst msgs = await this.getMessages(linkedMessages.map((linkedMsg) => linkedMsg?.msgId) as string[]);\n\n\t\tconst validMessages = msgs.filter((msg) => validateAttachmentDeepness(msg, config.chainLimit));\n\n\t\tconst rooms = await this.getRooms(validMessages.map((msg) => msg.rid));\n\n\t\tconst roomsWithPermission =\n\t\t\trooms &&\n\t\t\t(await Promise.all(\n\t\t\t\trooms.map(async (room) => {\n\t\t\t\t\tif (!!message.token && isOmnichannelRoom(room) && !!room.v?.token && message.token === room.v.token) {\n\t\t\t\t\t\treturn room;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentUser && (await this.canAccessRoom(room, currentUser))) {\n\t\t\t\t\t\treturn room;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t));\n\n\t\tconst validRooms = roomsWithPermission?.filter((room) => !!room);\n\n\t\tconst { useRealName } = config;\n\n\t\tconst quotes = [];\n\n\t\tfor (const item of message.urls) {\n\t\t\tif (!item.url.includes(config.siteUrl)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst linkedMessage = linkedMessages.find((msg) => msg?.url === item.url);\n\t\t\tif (!linkedMessage) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst messageFromUrl = validMessages.find((msg) => msg._id === linkedMessage.msgId);\n\t\t\tif (!messageFromUrl) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!validRooms?.find((room) => room?._id === messageFromUrl.rid)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem.ignoreParse = true;\n\n\t\t\tquotes.push(createQuoteAttachment(messageFromUrl, item.url, useRealName, this.getUserAvatarURL(messageFromUrl.u.username)));\n\t\t}\n\n\t\tif (quotes.length > 0) {\n\t\t\tconst currentAttachments = message.attachments || [];\n\t\t\tmessage.attachments = [...currentAttachments, ...quotes];\n\t\t}\n\n\t\treturn message;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e8db25f2ca950e74c657b019f40c88c051a87c67"}
