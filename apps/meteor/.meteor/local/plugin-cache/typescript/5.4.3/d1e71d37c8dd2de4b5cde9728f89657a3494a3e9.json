{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/upload/service.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/upload/service.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/upload/service.ts","inputSourceMap":{"version":3,"file":"server/services/upload/service.ts","sourceRoot":"","sources":["server/services/upload/service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAIlE,OAAO,EAAE,UAAU,EAAE,MAAM,iCAAiC,CAAC;AAC7D,OAAO,EAAE,+BAA+B,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;AAC3H,OAAO,EAAE,uBAAuB,EAAE,MAAM,8DAA8D,CAAC;AAEvG,MAAM,OAAO,aAAc,SAAQ,oBAAoB;IAC5C,IAAI,GAAG,QAAQ,CAAC;IAE1B,KAAK,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,OAAO,EAAqB;QACtD,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACjD,OAAO,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAA0B;QAC9E,OAAO,eAAe,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACpE,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAkC;QACpG,OAAO,uBAAuB,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClF,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,EAAE,IAAI,EAAqB;QAC9C,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAEhD,IAAI,CAAC,CAAC,MAAM,YAAY,MAAM,CAAC,EAAE,CAAC;YACjC,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;QACD,OAAO,MAAM,CAAC;IACf,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,IAAa;QAClC,OAAO,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,KAAK,CAAC,+BAA+B,CAAC,IAAsB,EAAE,MAAc,EAAE,IAAW;QACxF,OAAO,+BAA+B,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;CACD","sourcesContent":["import { ServiceClassInternal } from '@rocket.chat/core-services';\nimport type { ISendFileLivechatMessageParams, ISendFileMessageParams, IUploadFileParams, IUploadService } from '@rocket.chat/core-services';\nimport type { IUpload, IUser, FilesAndAttachments } from '@rocket.chat/core-typings';\n\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { parseFileIntoMessageAttachments, sendFileMessage } from '../../../app/file-upload/server/methods/sendFileMessage';\nimport { sendFileLivechatMessage } from '../../../app/livechat/server/methods/sendFileLivechatMessage';\n\nexport class UploadService extends ServiceClassInternal implements IUploadService {\n\tprotected name = 'upload';\n\n\tasync uploadFile({ buffer, details }: IUploadFileParams): Promise<IUpload> {\n\t\tconst fileStore = FileUpload.getStore('Uploads');\n\t\treturn fileStore.insert(details, buffer);\n\t}\n\n\tasync sendFileMessage({ roomId, file, userId, message }: ISendFileMessageParams): Promise<boolean | undefined> {\n\t\treturn sendFileMessage(userId, { roomId, file, msgData: message });\n\t}\n\n\tasync sendFileLivechatMessage({ roomId, visitorToken, file, message }: ISendFileLivechatMessageParams): Promise<boolean> {\n\t\treturn sendFileLivechatMessage({ roomId, visitorToken, file, msgData: message });\n\t}\n\n\tasync getFileBuffer({ file }: { file: IUpload }): Promise<Buffer> {\n\t\tconst buffer = await FileUpload.getBuffer(file);\n\n\t\tif (!(buffer instanceof Buffer)) {\n\t\t\tthrow new Error('Unknown error');\n\t\t}\n\t\treturn buffer;\n\t}\n\n\tasync extractMetadata(file: IUpload): Promise<{ height?: number; width?: number; format?: string }> {\n\t\treturn FileUpload.extractMetadata(file);\n\t}\n\n\tasync parseFileIntoMessageAttachments(file: Partial<IUpload>, roomId: string, user: IUser): Promise<FilesAndAttachments> {\n\t\treturn parseFileIntoMessageAttachments(file, roomId, user);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/upload/service.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/upload/service.ts","inputSourceMap":{"version":3,"file":"server/services/upload/service.ts","sourceRoot":"","sources":["server/services/upload/service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAIlE,OAAO,EAAE,UAAU,EAAE,MAAM,iCAAiC,CAAC;AAC7D,OAAO,EAAE,+BAA+B,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;AAC3H,OAAO,EAAE,uBAAuB,EAAE,MAAM,8DAA8D,CAAC;AAEvG,MAAM,OAAO,aAAc,SAAQ,oBAAoB;IAC5C,IAAI,GAAG,QAAQ,CAAC;IAE1B,KAAK,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,OAAO,EAAqB;QACtD,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACjD,OAAO,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAA0B;QAC9E,OAAO,eAAe,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACpE,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAkC;QACpG,OAAO,uBAAuB,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClF,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,EAAE,IAAI,EAAqB;QAC9C,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAEhD,IAAI,CAAC,CAAC,MAAM,YAAY,MAAM,CAAC,EAAE,CAAC;YACjC,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;QACD,OAAO,MAAM,CAAC;IACf,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,IAAa;QAClC,OAAO,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,KAAK,CAAC,+BAA+B,CAAC,IAAsB,EAAE,MAAc,EAAE,IAAW;QACxF,OAAO,+BAA+B,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;CACD","sourcesContent":["import { ServiceClassInternal } from '@rocket.chat/core-services';\nimport type { ISendFileLivechatMessageParams, ISendFileMessageParams, IUploadFileParams, IUploadService } from '@rocket.chat/core-services';\nimport type { IUpload, IUser, FilesAndAttachments } from '@rocket.chat/core-typings';\n\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { parseFileIntoMessageAttachments, sendFileMessage } from '../../../app/file-upload/server/methods/sendFileMessage';\nimport { sendFileLivechatMessage } from '../../../app/livechat/server/methods/sendFileLivechatMessage';\n\nexport class UploadService extends ServiceClassInternal implements IUploadService {\n\tprotected name = 'upload';\n\n\tasync uploadFile({ buffer, details }: IUploadFileParams): Promise<IUpload> {\n\t\tconst fileStore = FileUpload.getStore('Uploads');\n\t\treturn fileStore.insert(details, buffer);\n\t}\n\n\tasync sendFileMessage({ roomId, file, userId, message }: ISendFileMessageParams): Promise<boolean | undefined> {\n\t\treturn sendFileMessage(userId, { roomId, file, msgData: message });\n\t}\n\n\tasync sendFileLivechatMessage({ roomId, visitorToken, file, message }: ISendFileLivechatMessageParams): Promise<boolean> {\n\t\treturn sendFileLivechatMessage({ roomId, visitorToken, file, msgData: message });\n\t}\n\n\tasync getFileBuffer({ file }: { file: IUpload }): Promise<Buffer> {\n\t\tconst buffer = await FileUpload.getBuffer(file);\n\n\t\tif (!(buffer instanceof Buffer)) {\n\t\t\tthrow new Error('Unknown error');\n\t\t}\n\t\treturn buffer;\n\t}\n\n\tasync extractMetadata(file: IUpload): Promise<{ height?: number; width?: number; format?: string }> {\n\t\treturn FileUpload.extractMetadata(file);\n\t}\n\n\tasync parseFileIntoMessageAttachments(file: Partial<IUpload>, roomId: string, user: IUser): Promise<FilesAndAttachments> {\n\t\treturn parseFileIntoMessageAttachments(file, roomId, user);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      UploadService: () => UploadService\n    });\n    let ServiceClassInternal;\n    module.link(\"@rocket.chat/core-services\", {\n      ServiceClassInternal(v) {\n        ServiceClassInternal = v;\n      }\n    }, 0);\n    let FileUpload;\n    module.link(\"../../../app/file-upload/server\", {\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 1);\n    let parseFileIntoMessageAttachments, sendFileMessage;\n    module.link(\"../../../app/file-upload/server/methods/sendFileMessage\", {\n      parseFileIntoMessageAttachments(v) {\n        parseFileIntoMessageAttachments = v;\n      },\n      sendFileMessage(v) {\n        sendFileMessage = v;\n      }\n    }, 2);\n    let sendFileLivechatMessage;\n    module.link(\"../../../app/livechat/server/methods/sendFileLivechatMessage\", {\n      sendFileLivechatMessage(v) {\n        sendFileLivechatMessage = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class UploadService extends ServiceClassInternal {\n      constructor() {\n        super(...arguments);\n        this.name = 'upload';\n      }\n      async uploadFile(_ref) {\n        let {\n          buffer,\n          details\n        } = _ref;\n        const fileStore = FileUpload.getStore('Uploads');\n        return fileStore.insert(details, buffer);\n      }\n      async sendFileMessage(_ref2) {\n        let {\n          roomId,\n          file,\n          userId,\n          message\n        } = _ref2;\n        return sendFileMessage(userId, {\n          roomId,\n          file,\n          msgData: message\n        });\n      }\n      async sendFileLivechatMessage(_ref3) {\n        let {\n          roomId,\n          visitorToken,\n          file,\n          message\n        } = _ref3;\n        return sendFileLivechatMessage({\n          roomId,\n          visitorToken,\n          file,\n          msgData: message\n        });\n      }\n      async getFileBuffer(_ref4) {\n        let {\n          file\n        } = _ref4;\n        const buffer = await FileUpload.getBuffer(file);\n        if (!(buffer instanceof Buffer)) {\n          throw new Error('Unknown error');\n        }\n        return buffer;\n      }\n      async extractMetadata(file) {\n        return FileUpload.extractMetadata(file);\n      }\n      async parseFileIntoMessageAttachments(file, roomId, user) {\n        return parseFileIntoMessageAttachments(file, roomId, user);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","UploadService","ServiceClassInternal","link","v","FileUpload","parseFileIntoMessageAttachments","sendFileMessage","sendFileLivechatMessage","__reifyWaitForDeps__","constructor","arguments","name","uploadFile","_ref","buffer","details","fileStore","getStore","insert","_ref2","roomId","file","userId","message","msgData","_ref3","visitorToken","getFileBuffer","_ref4","getBuffer","Buffer","Error","extractMetadata","user","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/upload/service.ts"],"sourcesContent":["import { ServiceClassInternal } from '@rocket.chat/core-services';\nimport type { ISendFileLivechatMessageParams, ISendFileMessageParams, IUploadFileParams, IUploadService } from '@rocket.chat/core-services';\nimport type { IUpload, IUser, FilesAndAttachments } from '@rocket.chat/core-typings';\n\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { parseFileIntoMessageAttachments, sendFileMessage } from '../../../app/file-upload/server/methods/sendFileMessage';\nimport { sendFileLivechatMessage } from '../../../app/livechat/server/methods/sendFileLivechatMessage';\n\nexport class UploadService extends ServiceClassInternal implements IUploadService {\n\tprotected name = 'upload';\n\n\tasync uploadFile({ buffer, details }: IUploadFileParams): Promise<IUpload> {\n\t\tconst fileStore = FileUpload.getStore('Uploads');\n\t\treturn fileStore.insert(details, buffer);\n\t}\n\n\tasync sendFileMessage({ roomId, file, userId, message }: ISendFileMessageParams): Promise<boolean | undefined> {\n\t\treturn sendFileMessage(userId, { roomId, file, msgData: message });\n\t}\n\n\tasync sendFileLivechatMessage({ roomId, visitorToken, file, message }: ISendFileLivechatMessageParams): Promise<boolean> {\n\t\treturn sendFileLivechatMessage({ roomId, visitorToken, file, msgData: message });\n\t}\n\n\tasync getFileBuffer({ file }: { file: IUpload }): Promise<Buffer> {\n\t\tconst buffer = await FileUpload.getBuffer(file);\n\n\t\tif (!(buffer instanceof Buffer)) {\n\t\t\tthrow new Error('Unknown error');\n\t\t}\n\t\treturn buffer;\n\t}\n\n\tasync extractMetadata(file: IUpload): Promise<{ height?: number; width?: number; format?: string }> {\n\t\treturn FileUpload.extractMetadata(file);\n\t}\n\n\tasync parseFileIntoMessageAttachments(file: Partial<IUpload>, roomId: string, user: IUser): Promise<FilesAndAttachments> {\n\t\treturn parseFileIntoMessageAttachments(file, roomId, user);\n\t}\n}\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAE;MAAAC,aAAA,EAAoBA,CAAA,KAAEA;IAAM;IAAA,IAAAC,oBAA6B;IAAAH,MAAA,CAAAI,IAAA;MAAAD,qBAAAE,CAAA;QAAAF,oBAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,UAAA;IAAAN,MAAA,CAAAI,IAAA;MAAAE,WAAAD,CAAA;QAAAC,UAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,+BAAA,EAAAC,eAAA;IAAAR,MAAA,CAAAI,IAAA;MAAAG,gCAAAF,CAAA;QAAAE,+BAAA,GAAAF,CAAA;MAAA;MAAAG,gBAAAH,CAAA;QAAAG,eAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,uBAAA;IAAAT,MAAA,CAAAI,IAAA;MAAAK,wBAAAJ,CAAA;QAAAI,uBAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,oBAAA,WAAAA,oBAAA;IAQ5D,MAAOR,aAAc,SAAQC,oBAAoB;MAAAQ,YAAA;QAAA,SAAAC,SAAA;QAAA,KAC5CC,IAAI,GAAG,QAAQ;MAAA;MAEzB,MAAMC,UAAUA,CAAAC,IAAA,EAAuC;QAAA,IAAtC;UAAEC,MAAM;UAAEC;QAAO,CAAqB,GAAAF,IAAA;QACtD,MAAMG,SAAS,GAAGZ,UAAU,CAACa,QAAQ,CAAC,SAAS,CAAC;QAChD,OAAOD,SAAS,CAACE,MAAM,CAACH,OAAO,EAAED,MAAM,CAAC;MACzC;MAEA,MAAMR,eAAeA,CAAAa,KAAA,EAA0D;QAAA,IAAzD;UAAEC,MAAM;UAAEC,IAAI;UAAEC,MAAM;UAAEC;QAAO,CAA0B,GAAAJ,KAAA;QAC9E,OAAOb,eAAe,CAACgB,MAAM,EAAE;UAAEF,MAAM;UAAEC,IAAI;UAAEG,OAAO,EAAED;QAAO,CAAE,CAAC;MACnE;MAEA,MAAMhB,uBAAuBA,CAAAkB,KAAA,EAAwE;QAAA,IAAvE;UAAEL,MAAM;UAAEM,YAAY;UAAEL,IAAI;UAAEE;QAAO,CAAkC,GAAAE,KAAA;QACpG,OAAOlB,uBAAuB,CAAC;UAAEa,MAAM;UAAEM,YAAY;UAAEL,IAAI;UAAEG,OAAO,EAAED;QAAO,CAAE,CAAC;MACjF;MAEA,MAAMI,aAAaA,CAAAC,KAAA,EAA4B;QAAA,IAA3B;UAAEP;QAAI,CAAqB,GAAAO,KAAA;QAC9C,MAAMd,MAAM,GAAG,MAAMV,UAAU,CAACyB,SAAS,CAACR,IAAI,CAAC;QAE/C,IAAI,EAAEP,MAAM,YAAYgB,MAAM,CAAC,EAAE;UAChC,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;QACjC;QACA,OAAOjB,MAAM;MACd;MAEA,MAAMkB,eAAeA,CAACX,IAAa;QAClC,OAAOjB,UAAU,CAAC4B,eAAe,CAACX,IAAI,CAAC;MACxC;MAEA,MAAMhB,+BAA+BA,CAACgB,IAAsB,EAAED,MAAc,EAAEa,IAAW;QACxF,OAAO5B,+BAA+B,CAACgB,IAAI,EAAED,MAAM,EAAEa,IAAI,CAAC;MAC3D;;IACAC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d1e71d37c8dd2de4b5cde9728f89657a3494a3e9"}
