{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/useVoipClient.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/hooks/useVoipClient.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/useVoipClient.ts","inputSourceMap":{"version":3,"file":"client/hooks/useVoipClient.ts","sourceRoot":"","sources":["client/hooks/useVoipClient.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRegistrationInfo } from '@rocket.chat/core-typings';\nimport { WorkflowTypes } from '@rocket.chat/core-typings';\nimport { useSafely } from '@rocket.chat/fuselage-hooks';\nimport { useUser, useSetting, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\nimport { KJUR } from 'jsrsasign';\nimport { useEffect, useState } from 'react';\n\nimport { EEVoipClient } from '../lib/voip/EEVoipClient';\nimport { VoIPUser } from '../lib/voip/VoIPUser';\nimport { useWebRtcServers } from '../providers/CallProvider/hooks/useWebRtcServers';\nimport { useHasLicenseModule } from './useHasLicenseModule';\n\ntype UseVoipClientResult = {\n\tvoipClient?: VoIPUser;\n\tregistrationInfo?: IRegistrationInfo;\n\terror?: Error | unknown;\n};\n\nconst empty = {};\n\nconst isSignedResponse = (data: any): data is { result: string } => typeof data?.result === 'string';\n\n// Currently we only support the websocket connection and the SIP proxy connection being from the same host,\n// we need to add a new setting for SIP proxy if we want to support different hosts for them.\nexport const useVoipClient = (): UseVoipClientResult => {\n\tconst settingVoipEnabled = useSetting('VoIP_Enabled', false);\n\n\tconst [voipConnectorEnabled, setVoipConnectorEnabled] = useSafely(useState(true));\n\n\tconst voipRetryCount = useSetting('VoIP_Retry_Count');\n\tconst enableKeepAlive = useSetting('VoIP_Enable_Keep_Alive_For_Unstable_Networks');\n\tconst registrationInfo = useEndpoint('GET', '/v1/connector.extension.getRegistrationInfoByUserId');\n\tconst membership = useEndpoint('GET', '/v1/voip/queues.getMembershipSubscription');\n\tconst user = useUser();\n\tconst subscribeToNotifyLoggedIn = useStream('notify-logged');\n\tconst iceServers = useWebRtcServers();\n\tconst [result, setResult] = useSafely(useState<UseVoipClientResult>({}));\n\n\tconst isEE = useHasLicenseModule('voip-enterprise');\n\tconst voipEnabled = settingVoipEnabled && voipConnectorEnabled;\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\treturn subscribeToNotifyLoggedIn(`voip.statuschanged`, (enabled: boolean): void => {\n\t\t\t\tsetVoipConnectorEnabled(enabled);\n\t\t\t});\n\t\t}\n\t}, [setResult, setVoipConnectorEnabled, subscribeToNotifyLoggedIn, user]);\n\n\tuseEffect(() => {\n\t\tconst uid = user?._id;\n\t\tconst userExtension = user?.extension;\n\n\t\tif (!uid || !userExtension || !voipEnabled) {\n\t\t\tsetResult(empty);\n\t\t\treturn;\n\t\t}\n\t\tlet client: VoIPUser;\n\t\tregistrationInfo({ id: uid }).then(\n\t\t\t(data) => {\n\t\t\t\tlet parsedData: IRegistrationInfo;\n\t\t\t\tif (isSignedResponse(data)) {\n\t\t\t\t\tconst result = KJUR.jws.JWS.parse(data.result);\n\t\t\t\t\tparsedData = (result.payloadObj as any)?.context as IRegistrationInfo;\n\t\t\t\t} else {\n\t\t\t\t\tparsedData = data;\n\t\t\t\t}\n\n\t\t\t\tconst {\n\t\t\t\t\textensionDetails: { extension, password },\n\t\t\t\t\tcallServerConfig: { websocketPath },\n\t\t\t\t} = parsedData;\n\n\t\t\t\t(async (): Promise<void> => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst wsURL = new URL(websocketPath);\n\t\t\t\t\t\tconst subscription = await membership({ extension });\n\n\t\t\t\t\t\tconst config = {\n\t\t\t\t\t\t\tauthUserName: extension,\n\t\t\t\t\t\t\tauthPassword: password,\n\t\t\t\t\t\t\tsipRegistrarHostnameOrIP: wsURL.host,\n\t\t\t\t\t\t\twebSocketURI: websocketPath,\n\t\t\t\t\t\t\tenableVideo: true,\n\t\t\t\t\t\t\ticeServers,\n\t\t\t\t\t\t\tconnectionRetryCount: Number(voipRetryCount),\n\t\t\t\t\t\t\tenableKeepAliveUsingOptionsForUnstableNetworks: Boolean(enableKeepAlive),\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tclient = await (isEE ? EEVoipClient.create(config) : VoIPUser.create(config));\n\n\t\t\t\t\t\t// Today we are hardcoding workflow mode.\n\t\t\t\t\t\t// In future, this should be ready from configuration\n\t\t\t\t\t\tclient.setWorkflowMode(WorkflowTypes.CONTACT_CENTER_USER);\n\t\t\t\t\t\tclient.setMembershipSubscription(subscription);\n\t\t\t\t\t\tsetResult({ voipClient: client, registrationInfo: parsedData });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tsetResult({ error });\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\t\t\t(error: Error) => {\n\t\t\t\tsetResult({ error });\n\t\t\t},\n\t\t);\n\t\treturn (): void => {\n\t\t\tif (client) {\n\t\t\t\tclient.clear();\n\t\t\t}\n\t\t};\n\t}, [iceServers, registrationInfo, setResult, membership, voipEnabled, user?._id, user?.extension, voipRetryCount, enableKeepAlive, isEE]);\n\n\treturn result;\n};\n\nexport const isOutboundClient = (client: VoIPUser | undefined): client is EEVoipClient => client instanceof EEVoipClient;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/useVoipClient.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/useVoipClient.ts","inputSourceMap":{"version":3,"file":"client/hooks/useVoipClient.ts","sourceRoot":"","sources":["client/hooks/useVoipClient.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRegistrationInfo } from '@rocket.chat/core-typings';\nimport { WorkflowTypes } from '@rocket.chat/core-typings';\nimport { useSafely } from '@rocket.chat/fuselage-hooks';\nimport { useUser, useSetting, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\nimport { KJUR } from 'jsrsasign';\nimport { useEffect, useState } from 'react';\n\nimport { EEVoipClient } from '../lib/voip/EEVoipClient';\nimport { VoIPUser } from '../lib/voip/VoIPUser';\nimport { useWebRtcServers } from '../providers/CallProvider/hooks/useWebRtcServers';\nimport { useHasLicenseModule } from './useHasLicenseModule';\n\ntype UseVoipClientResult = {\n\tvoipClient?: VoIPUser;\n\tregistrationInfo?: IRegistrationInfo;\n\terror?: Error | unknown;\n};\n\nconst empty = {};\n\nconst isSignedResponse = (data: any): data is { result: string } => typeof data?.result === 'string';\n\n// Currently we only support the websocket connection and the SIP proxy connection being from the same host,\n// we need to add a new setting for SIP proxy if we want to support different hosts for them.\nexport const useVoipClient = (): UseVoipClientResult => {\n\tconst settingVoipEnabled = useSetting('VoIP_Enabled', false);\n\n\tconst [voipConnectorEnabled, setVoipConnectorEnabled] = useSafely(useState(true));\n\n\tconst voipRetryCount = useSetting('VoIP_Retry_Count');\n\tconst enableKeepAlive = useSetting('VoIP_Enable_Keep_Alive_For_Unstable_Networks');\n\tconst registrationInfo = useEndpoint('GET', '/v1/connector.extension.getRegistrationInfoByUserId');\n\tconst membership = useEndpoint('GET', '/v1/voip/queues.getMembershipSubscription');\n\tconst user = useUser();\n\tconst subscribeToNotifyLoggedIn = useStream('notify-logged');\n\tconst iceServers = useWebRtcServers();\n\tconst [result, setResult] = useSafely(useState<UseVoipClientResult>({}));\n\n\tconst isEE = useHasLicenseModule('voip-enterprise');\n\tconst voipEnabled = settingVoipEnabled && voipConnectorEnabled;\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\treturn subscribeToNotifyLoggedIn(`voip.statuschanged`, (enabled: boolean): void => {\n\t\t\t\tsetVoipConnectorEnabled(enabled);\n\t\t\t});\n\t\t}\n\t}, [setResult, setVoipConnectorEnabled, subscribeToNotifyLoggedIn, user]);\n\n\tuseEffect(() => {\n\t\tconst uid = user?._id;\n\t\tconst userExtension = user?.extension;\n\n\t\tif (!uid || !userExtension || !voipEnabled) {\n\t\t\tsetResult(empty);\n\t\t\treturn;\n\t\t}\n\t\tlet client: VoIPUser;\n\t\tregistrationInfo({ id: uid }).then(\n\t\t\t(data) => {\n\t\t\t\tlet parsedData: IRegistrationInfo;\n\t\t\t\tif (isSignedResponse(data)) {\n\t\t\t\t\tconst result = KJUR.jws.JWS.parse(data.result);\n\t\t\t\t\tparsedData = (result.payloadObj as any)?.context as IRegistrationInfo;\n\t\t\t\t} else {\n\t\t\t\t\tparsedData = data;\n\t\t\t\t}\n\n\t\t\t\tconst {\n\t\t\t\t\textensionDetails: { extension, password },\n\t\t\t\t\tcallServerConfig: { websocketPath },\n\t\t\t\t} = parsedData;\n\n\t\t\t\t(async (): Promise<void> => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst wsURL = new URL(websocketPath);\n\t\t\t\t\t\tconst subscription = await membership({ extension });\n\n\t\t\t\t\t\tconst config = {\n\t\t\t\t\t\t\tauthUserName: extension,\n\t\t\t\t\t\t\tauthPassword: password,\n\t\t\t\t\t\t\tsipRegistrarHostnameOrIP: wsURL.host,\n\t\t\t\t\t\t\twebSocketURI: websocketPath,\n\t\t\t\t\t\t\tenableVideo: true,\n\t\t\t\t\t\t\ticeServers,\n\t\t\t\t\t\t\tconnectionRetryCount: Number(voipRetryCount),\n\t\t\t\t\t\t\tenableKeepAliveUsingOptionsForUnstableNetworks: Boolean(enableKeepAlive),\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tclient = await (isEE ? EEVoipClient.create(config) : VoIPUser.create(config));\n\n\t\t\t\t\t\t// Today we are hardcoding workflow mode.\n\t\t\t\t\t\t// In future, this should be ready from configuration\n\t\t\t\t\t\tclient.setWorkflowMode(WorkflowTypes.CONTACT_CENTER_USER);\n\t\t\t\t\t\tclient.setMembershipSubscription(subscription);\n\t\t\t\t\t\tsetResult({ voipClient: client, registrationInfo: parsedData });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tsetResult({ error });\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\t\t\t(error: Error) => {\n\t\t\t\tsetResult({ error });\n\t\t\t},\n\t\t);\n\t\treturn (): void => {\n\t\t\tif (client) {\n\t\t\t\tclient.clear();\n\t\t\t}\n\t\t};\n\t}, [iceServers, registrationInfo, setResult, membership, voipEnabled, user?._id, user?.extension, voipRetryCount, enableKeepAlive, isEE]);\n\n\treturn result;\n};\n\nexport const isOutboundClient = (client: VoIPUser | undefined): client is EEVoipClient => client instanceof EEVoipClient;\n"]}}},"code":"module.export({\n  useVoipClient: () => useVoipClient,\n  isOutboundClient: () => isOutboundClient\n});\nlet WorkflowTypes;\nmodule.link(\"@rocket.chat/core-typings\", {\n  WorkflowTypes(v) {\n    WorkflowTypes = v;\n  }\n}, 0);\nlet useSafely;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useSafely(v) {\n    useSafely = v;\n  }\n}, 1);\nlet useUser, useSetting, useEndpoint, useStream;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useUser(v) {\n    useUser = v;\n  },\n  useSetting(v) {\n    useSetting = v;\n  },\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n  useStream(v) {\n    useStream = v;\n  }\n}, 2);\nlet KJUR;\nmodule.link(\"jsrsasign\", {\n  KJUR(v) {\n    KJUR = v;\n  }\n}, 3);\nlet useEffect, useState;\nmodule.link(\"react\", {\n  useEffect(v) {\n    useEffect = v;\n  },\n  useState(v) {\n    useState = v;\n  }\n}, 4);\nlet EEVoipClient;\nmodule.link(\"../lib/voip/EEVoipClient\", {\n  EEVoipClient(v) {\n    EEVoipClient = v;\n  }\n}, 5);\nlet VoIPUser;\nmodule.link(\"../lib/voip/VoIPUser\", {\n  VoIPUser(v) {\n    VoIPUser = v;\n  }\n}, 6);\nlet useWebRtcServers;\nmodule.link(\"../providers/CallProvider/hooks/useWebRtcServers\", {\n  useWebRtcServers(v) {\n    useWebRtcServers = v;\n  }\n}, 7);\nlet useHasLicenseModule;\nmodule.link(\"./useHasLicenseModule\", {\n  useHasLicenseModule(v) {\n    useHasLicenseModule = v;\n  }\n}, 8);\nconst empty = {};\nconst isSignedResponse = data => typeof (data === null || data === void 0 ? void 0 : data.result) === 'string';\n// Currently we only support the websocket connection and the SIP proxy connection being from the same host,\n// we need to add a new setting for SIP proxy if we want to support different hosts for them.\nconst useVoipClient = () => {\n  const settingVoipEnabled = useSetting('VoIP_Enabled', false);\n  const [voipConnectorEnabled, setVoipConnectorEnabled] = useSafely(useState(true));\n  const voipRetryCount = useSetting('VoIP_Retry_Count');\n  const enableKeepAlive = useSetting('VoIP_Enable_Keep_Alive_For_Unstable_Networks');\n  const registrationInfo = useEndpoint('GET', '/v1/connector.extension.getRegistrationInfoByUserId');\n  const membership = useEndpoint('GET', '/v1/voip/queues.getMembershipSubscription');\n  const user = useUser();\n  const subscribeToNotifyLoggedIn = useStream('notify-logged');\n  const iceServers = useWebRtcServers();\n  const [result, setResult] = useSafely(useState({}));\n  const isEE = useHasLicenseModule('voip-enterprise');\n  const voipEnabled = settingVoipEnabled && voipConnectorEnabled;\n  useEffect(() => {\n    if (user) {\n      return subscribeToNotifyLoggedIn(\"voip.statuschanged\", enabled => {\n        setVoipConnectorEnabled(enabled);\n      });\n    }\n  }, [setResult, setVoipConnectorEnabled, subscribeToNotifyLoggedIn, user]);\n  useEffect(() => {\n    const uid = user === null || user === void 0 ? void 0 : user._id;\n    const userExtension = user === null || user === void 0 ? void 0 : user.extension;\n    if (!uid || !userExtension || !voipEnabled) {\n      setResult(empty);\n      return;\n    }\n    let client;\n    registrationInfo({\n      id: uid\n    }).then(data => {\n      let parsedData;\n      if (isSignedResponse(data)) {\n        var _result$payloadObj;\n        const result = KJUR.jws.JWS.parse(data.result);\n        parsedData = (_result$payloadObj = result.payloadObj) === null || _result$payloadObj === void 0 ? void 0 : _result$payloadObj.context;\n      } else {\n        parsedData = data;\n      }\n      const {\n        extensionDetails: {\n          extension,\n          password\n        },\n        callServerConfig: {\n          websocketPath\n        }\n      } = parsedData;\n      (async () => {\n        try {\n          const wsURL = new URL(websocketPath);\n          const subscription = await membership({\n            extension\n          });\n          const config = {\n            authUserName: extension,\n            authPassword: password,\n            sipRegistrarHostnameOrIP: wsURL.host,\n            webSocketURI: websocketPath,\n            enableVideo: true,\n            iceServers,\n            connectionRetryCount: Number(voipRetryCount),\n            enableKeepAliveUsingOptionsForUnstableNetworks: Boolean(enableKeepAlive)\n          };\n          client = await (isEE ? EEVoipClient.create(config) : VoIPUser.create(config));\n          // Today we are hardcoding workflow mode.\n          // In future, this should be ready from configuration\n          client.setWorkflowMode(WorkflowTypes.CONTACT_CENTER_USER);\n          client.setMembershipSubscription(subscription);\n          setResult({\n            voipClient: client,\n            registrationInfo: parsedData\n          });\n        } catch (error) {\n          setResult({\n            error\n          });\n        }\n      })();\n    }, error => {\n      setResult({\n        error\n      });\n    });\n    return () => {\n      if (client) {\n        client.clear();\n      }\n    };\n  }, [iceServers, registrationInfo, setResult, membership, voipEnabled, user === null || user === void 0 ? void 0 : user._id, user === null || user === void 0 ? void 0 : user.extension, voipRetryCount, enableKeepAlive, isEE]);\n  return result;\n};\nconst isOutboundClient = client => client instanceof EEVoipClient;","map":{"version":3,"names":["module","export","useVoipClient","isOutboundClient","WorkflowTypes","link","v","useSafely","useUser","useSetting","useEndpoint","useStream","KJUR","useEffect","useState","EEVoipClient","VoIPUser","useWebRtcServers","useHasLicenseModule","empty","isSignedResponse","data","result","settingVoipEnabled","voipConnectorEnabled","setVoipConnectorEnabled","voipRetryCount","enableKeepAlive","registrationInfo","membership","user","subscribeToNotifyLoggedIn","iceServers","setResult","isEE","voipEnabled","enabled","uid","_id","userExtension","extension","client","id","then","parsedData","_result$payloadObj","jws","JWS","parse","payloadObj","context","extensionDetails","password","callServerConfig","websocketPath","wsURL","URL","subscription","config","authUserName","authPassword","sipRegistrarHostnameOrIP","host","webSocketURI","enableVideo","connectionRetryCount","Number","enableKeepAliveUsingOptionsForUnstableNetworks","Boolean","create","setWorkflowMode","CONTACT_CENTER_USER","setMembershipSubscription","voipClient","error","clear"],"sources":["client/hooks/useVoipClient.ts"],"sourcesContent":["import type { IRegistrationInfo } from '@rocket.chat/core-typings';\nimport { WorkflowTypes } from '@rocket.chat/core-typings';\nimport { useSafely } from '@rocket.chat/fuselage-hooks';\nimport { useUser, useSetting, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\nimport { KJUR } from 'jsrsasign';\nimport { useEffect, useState } from 'react';\n\nimport { EEVoipClient } from '../lib/voip/EEVoipClient';\nimport { VoIPUser } from '../lib/voip/VoIPUser';\nimport { useWebRtcServers } from '../providers/CallProvider/hooks/useWebRtcServers';\nimport { useHasLicenseModule } from './useHasLicenseModule';\n\ntype UseVoipClientResult = {\n\tvoipClient?: VoIPUser;\n\tregistrationInfo?: IRegistrationInfo;\n\terror?: Error | unknown;\n};\n\nconst empty = {};\n\nconst isSignedResponse = (data: any): data is { result: string } => typeof data?.result === 'string';\n\n// Currently we only support the websocket connection and the SIP proxy connection being from the same host,\n// we need to add a new setting for SIP proxy if we want to support different hosts for them.\nexport const useVoipClient = (): UseVoipClientResult => {\n\tconst settingVoipEnabled = useSetting('VoIP_Enabled', false);\n\n\tconst [voipConnectorEnabled, setVoipConnectorEnabled] = useSafely(useState(true));\n\n\tconst voipRetryCount = useSetting('VoIP_Retry_Count');\n\tconst enableKeepAlive = useSetting('VoIP_Enable_Keep_Alive_For_Unstable_Networks');\n\tconst registrationInfo = useEndpoint('GET', '/v1/connector.extension.getRegistrationInfoByUserId');\n\tconst membership = useEndpoint('GET', '/v1/voip/queues.getMembershipSubscription');\n\tconst user = useUser();\n\tconst subscribeToNotifyLoggedIn = useStream('notify-logged');\n\tconst iceServers = useWebRtcServers();\n\tconst [result, setResult] = useSafely(useState<UseVoipClientResult>({}));\n\n\tconst isEE = useHasLicenseModule('voip-enterprise');\n\tconst voipEnabled = settingVoipEnabled && voipConnectorEnabled;\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\treturn subscribeToNotifyLoggedIn(`voip.statuschanged`, (enabled: boolean): void => {\n\t\t\t\tsetVoipConnectorEnabled(enabled);\n\t\t\t});\n\t\t}\n\t}, [setResult, setVoipConnectorEnabled, subscribeToNotifyLoggedIn, user]);\n\n\tuseEffect(() => {\n\t\tconst uid = user?._id;\n\t\tconst userExtension = user?.extension;\n\n\t\tif (!uid || !userExtension || !voipEnabled) {\n\t\t\tsetResult(empty);\n\t\t\treturn;\n\t\t}\n\t\tlet client: VoIPUser;\n\t\tregistrationInfo({ id: uid }).then(\n\t\t\t(data) => {\n\t\t\t\tlet parsedData: IRegistrationInfo;\n\t\t\t\tif (isSignedResponse(data)) {\n\t\t\t\t\tconst result = KJUR.jws.JWS.parse(data.result);\n\t\t\t\t\tparsedData = (result.payloadObj as any)?.context as IRegistrationInfo;\n\t\t\t\t} else {\n\t\t\t\t\tparsedData = data;\n\t\t\t\t}\n\n\t\t\t\tconst {\n\t\t\t\t\textensionDetails: { extension, password },\n\t\t\t\t\tcallServerConfig: { websocketPath },\n\t\t\t\t} = parsedData;\n\n\t\t\t\t(async (): Promise<void> => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst wsURL = new URL(websocketPath);\n\t\t\t\t\t\tconst subscription = await membership({ extension });\n\n\t\t\t\t\t\tconst config = {\n\t\t\t\t\t\t\tauthUserName: extension,\n\t\t\t\t\t\t\tauthPassword: password,\n\t\t\t\t\t\t\tsipRegistrarHostnameOrIP: wsURL.host,\n\t\t\t\t\t\t\twebSocketURI: websocketPath,\n\t\t\t\t\t\t\tenableVideo: true,\n\t\t\t\t\t\t\ticeServers,\n\t\t\t\t\t\t\tconnectionRetryCount: Number(voipRetryCount),\n\t\t\t\t\t\t\tenableKeepAliveUsingOptionsForUnstableNetworks: Boolean(enableKeepAlive),\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tclient = await (isEE ? EEVoipClient.create(config) : VoIPUser.create(config));\n\n\t\t\t\t\t\t// Today we are hardcoding workflow mode.\n\t\t\t\t\t\t// In future, this should be ready from configuration\n\t\t\t\t\t\tclient.setWorkflowMode(WorkflowTypes.CONTACT_CENTER_USER);\n\t\t\t\t\t\tclient.setMembershipSubscription(subscription);\n\t\t\t\t\t\tsetResult({ voipClient: client, registrationInfo: parsedData });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tsetResult({ error });\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\t\t\t(error: Error) => {\n\t\t\t\tsetResult({ error });\n\t\t\t},\n\t\t);\n\t\treturn (): void => {\n\t\t\tif (client) {\n\t\t\t\tclient.clear();\n\t\t\t}\n\t\t};\n\t}, [iceServers, registrationInfo, setResult, membership, voipEnabled, user?._id, user?.extension, voipRetryCount, enableKeepAlive, isEE]);\n\n\treturn result;\n};\n\nexport const isOutboundClient = (client: VoIPUser | undefined): client is EEVoipClient => client instanceof EEVoipClient;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"47fd3cf2064068b1382fb8324f9a37e6dee5d7df"}
