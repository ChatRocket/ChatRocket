{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/lib/ldap/copyCustomFieldsLDAP.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/lib/ldap/copyCustomFieldsLDAP.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/lib/ldap/copyCustomFieldsLDAP.ts","inputSourceMap":{"version":3,"file":"ee/server/lib/ldap/copyCustomFieldsLDAP.ts","sourceRoot":"","sources":["ee/server/lib/ldap/copyCustomFieldsLDAP.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,kBAAkB,EAAE,MAAM,8CAA8C,CAAC;AAClF,OAAO,EAAE,aAAa,EAAE,MAAM,sCAAsC,CAAC;AACrE,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAE9D,MAAM,CAAC,MAAM,oBAAoB,GAAG,CACnC,EACC,QAAQ,EACR,QAAQ,EACR,oBAAoB,EACpB,eAAe,EACf,gBAAgB,GAOhB,EACD,MAAc,EACP,EAAE;IACT,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACvB,OAAO;IACR,CAAC;IAED,IAAI,CAAC,eAAe,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC/C,IAAI,eAAe,EAAE,CAAC;YACrB,MAAM,CAAC,KAAK,CAAC,gFAAgF,CAAC,CAAC;YAC/F,OAAO;QACR,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,4EAA4E,CAAC,CAAC;QAC3F,OAAO;IACR,CAAC;IAED,MAAM,GAAG,GAA2B,CAAC,GAAG,EAAE;QACzC,IAAI,CAAC;YACJ,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QACpC,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACd,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,uCAAuC,EAAE,GAAG,EAAE,CAAC,CAAC;QACrE,CAAC;IACF,CAAC,CAAC,EAAE,CAAC;IAEL,IAAI,CAAC,GAAG,EAAE,CAAC;QACV,OAAO;IACR,CAAC;IAED,IAAI,YAAiC,CAAC;IACtC,IAAI,CAAC;QACJ,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAwB,CAAC;IACxE,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACd,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,+BAA+B,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5D,OAAO;IACR,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,EAAE;QACtD,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,SAAS,CAAC,EAAE,CAAC;YAC7C,MAAM,CAAC,KAAK,CAAC,kCAAkC,SAAS,EAAE,CAAC,CAAC;YAC5D,OAAO;QACR,CAAC;QAED,MAAM,KAAK,GAAG,kBAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAEtD,IAAI,CAAC,KAAK,EAAE,CAAC;YACZ,OAAO;QACR,CAAC;QAED,QAAQ,CAAC,YAAY,GAAG,oBAAoB,CAAC,EAAE,GAAG,QAAQ,CAAC,YAAY,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IAC9F,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { IImportUser, ILDAPEntry } from '@rocket.chat/core-typings';\nimport type { Logger } from '@rocket.chat/logger';\n\nimport { templateVarHandler } from '../../../../app/utils/lib/templateVarHandler';\nimport { getNestedProp } from '../../../../server/lib/getNestedProp';\nimport { replacesNestedValues } from './replacesNestedValues';\n\nexport const copyCustomFieldsLDAP = (\n\t{\n\t\tldapUser,\n\t\tuserData,\n\t\tcustomFieldsSettings,\n\t\tcustomFieldsMap,\n\t\tsyncCustomFields,\n\t}: {\n\t\tldapUser: ILDAPEntry;\n\t\tuserData: IImportUser;\n\t\tsyncCustomFields: boolean;\n\t\tcustomFieldsSettings: string;\n\t\tcustomFieldsMap: string;\n\t},\n\tlogger: Logger,\n): void => {\n\tif (!syncCustomFields) {\n\t\treturn;\n\t}\n\n\tif (!customFieldsMap || !customFieldsSettings) {\n\t\tif (customFieldsMap) {\n\t\t\tlogger.debug('Skipping LDAP custom fields because there are no custom map fields configured.');\n\t\t\treturn;\n\t\t}\n\t\tlogger.debug('Skipping LDAP custom fields because there are no custom fields configured.');\n\t\treturn;\n\t}\n\n\tconst map: Record<string, string> = (() => {\n\t\ttry {\n\t\t\treturn JSON.parse(customFieldsMap);\n\t\t} catch (err) {\n\t\t\tlogger.error({ msg: 'Error parsing LDAP custom fields map.', err });\n\t\t}\n\t})();\n\n\tif (!map) {\n\t\treturn;\n\t}\n\n\tlet customFields: Record<string, any>;\n\ttry {\n\t\tcustomFields = JSON.parse(customFieldsSettings) as Record<string, any>;\n\t} catch (err) {\n\t\tlogger.error({ msg: 'Failed to parse Custom Fields', err });\n\t\treturn;\n\t}\n\n\tObject.entries(map).forEach(([ldapField, userField]) => {\n\t\tif (!getNestedProp(customFields, userField)) {\n\t\t\tlogger.debug(`User attribute does not exist: ${userField}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = templateVarHandler(ldapField, ldapUser);\n\n\t\tif (!value) {\n\t\t\treturn;\n\t\t}\n\n\t\tuserData.customFields = replacesNestedValues({ ...userData.customFields }, userField, value);\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/lib/ldap/copyCustomFieldsLDAP.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/lib/ldap/copyCustomFieldsLDAP.ts","inputSourceMap":{"version":3,"file":"ee/server/lib/ldap/copyCustomFieldsLDAP.ts","sourceRoot":"","sources":["ee/server/lib/ldap/copyCustomFieldsLDAP.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,kBAAkB,EAAE,MAAM,8CAA8C,CAAC;AAClF,OAAO,EAAE,aAAa,EAAE,MAAM,sCAAsC,CAAC;AACrE,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAE9D,MAAM,CAAC,MAAM,oBAAoB,GAAG,CACnC,EACC,QAAQ,EACR,QAAQ,EACR,oBAAoB,EACpB,eAAe,EACf,gBAAgB,GAOhB,EACD,MAAc,EACP,EAAE;IACT,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACvB,OAAO;IACR,CAAC;IAED,IAAI,CAAC,eAAe,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC/C,IAAI,eAAe,EAAE,CAAC;YACrB,MAAM,CAAC,KAAK,CAAC,gFAAgF,CAAC,CAAC;YAC/F,OAAO;QACR,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,4EAA4E,CAAC,CAAC;QAC3F,OAAO;IACR,CAAC;IAED,MAAM,GAAG,GAA2B,CAAC,GAAG,EAAE;QACzC,IAAI,CAAC;YACJ,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QACpC,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACd,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,uCAAuC,EAAE,GAAG,EAAE,CAAC,CAAC;QACrE,CAAC;IACF,CAAC,CAAC,EAAE,CAAC;IAEL,IAAI,CAAC,GAAG,EAAE,CAAC;QACV,OAAO;IACR,CAAC;IAED,IAAI,YAAiC,CAAC;IACtC,IAAI,CAAC;QACJ,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAwB,CAAC;IACxE,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACd,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,+BAA+B,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5D,OAAO;IACR,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,EAAE;QACtD,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,SAAS,CAAC,EAAE,CAAC;YAC7C,MAAM,CAAC,KAAK,CAAC,kCAAkC,SAAS,EAAE,CAAC,CAAC;YAC5D,OAAO;QACR,CAAC;QAED,MAAM,KAAK,GAAG,kBAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAEtD,IAAI,CAAC,KAAK,EAAE,CAAC;YACZ,OAAO;QACR,CAAC;QAED,QAAQ,CAAC,YAAY,GAAG,oBAAoB,CAAC,EAAE,GAAG,QAAQ,CAAC,YAAY,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IAC9F,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { IImportUser, ILDAPEntry } from '@rocket.chat/core-typings';\nimport type { Logger } from '@rocket.chat/logger';\n\nimport { templateVarHandler } from '../../../../app/utils/lib/templateVarHandler';\nimport { getNestedProp } from '../../../../server/lib/getNestedProp';\nimport { replacesNestedValues } from './replacesNestedValues';\n\nexport const copyCustomFieldsLDAP = (\n\t{\n\t\tldapUser,\n\t\tuserData,\n\t\tcustomFieldsSettings,\n\t\tcustomFieldsMap,\n\t\tsyncCustomFields,\n\t}: {\n\t\tldapUser: ILDAPEntry;\n\t\tuserData: IImportUser;\n\t\tsyncCustomFields: boolean;\n\t\tcustomFieldsSettings: string;\n\t\tcustomFieldsMap: string;\n\t},\n\tlogger: Logger,\n): void => {\n\tif (!syncCustomFields) {\n\t\treturn;\n\t}\n\n\tif (!customFieldsMap || !customFieldsSettings) {\n\t\tif (customFieldsMap) {\n\t\t\tlogger.debug('Skipping LDAP custom fields because there are no custom map fields configured.');\n\t\t\treturn;\n\t\t}\n\t\tlogger.debug('Skipping LDAP custom fields because there are no custom fields configured.');\n\t\treturn;\n\t}\n\n\tconst map: Record<string, string> = (() => {\n\t\ttry {\n\t\t\treturn JSON.parse(customFieldsMap);\n\t\t} catch (err) {\n\t\t\tlogger.error({ msg: 'Error parsing LDAP custom fields map.', err });\n\t\t}\n\t})();\n\n\tif (!map) {\n\t\treturn;\n\t}\n\n\tlet customFields: Record<string, any>;\n\ttry {\n\t\tcustomFields = JSON.parse(customFieldsSettings) as Record<string, any>;\n\t} catch (err) {\n\t\tlogger.error({ msg: 'Failed to parse Custom Fields', err });\n\t\treturn;\n\t}\n\n\tObject.entries(map).forEach(([ldapField, userField]) => {\n\t\tif (!getNestedProp(customFields, userField)) {\n\t\t\tlogger.debug(`User attribute does not exist: ${userField}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = templateVarHandler(ldapField, ldapUser);\n\n\t\tif (!value) {\n\t\t\treturn;\n\t\t}\n\n\t\tuserData.customFields = replacesNestedValues({ ...userData.customFields }, userField, value);\n\t});\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      copyCustomFieldsLDAP: () => copyCustomFieldsLDAP\n    });\n    let templateVarHandler;\n    module.link(\"../../../../app/utils/lib/templateVarHandler\", {\n      templateVarHandler(v) {\n        templateVarHandler = v;\n      }\n    }, 0);\n    let getNestedProp;\n    module.link(\"../../../../server/lib/getNestedProp\", {\n      getNestedProp(v) {\n        getNestedProp = v;\n      }\n    }, 1);\n    let replacesNestedValues;\n    module.link(\"./replacesNestedValues\", {\n      replacesNestedValues(v) {\n        replacesNestedValues = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const copyCustomFieldsLDAP = (_ref, logger) => {\n      let {\n        ldapUser,\n        userData,\n        customFieldsSettings,\n        customFieldsMap,\n        syncCustomFields\n      } = _ref;\n      if (!syncCustomFields) {\n        return;\n      }\n      if (!customFieldsMap || !customFieldsSettings) {\n        if (customFieldsMap) {\n          logger.debug('Skipping LDAP custom fields because there are no custom map fields configured.');\n          return;\n        }\n        logger.debug('Skipping LDAP custom fields because there are no custom fields configured.');\n        return;\n      }\n      const map = (() => {\n        try {\n          return JSON.parse(customFieldsMap);\n        } catch (err) {\n          logger.error({\n            msg: 'Error parsing LDAP custom fields map.',\n            err\n          });\n        }\n      })();\n      if (!map) {\n        return;\n      }\n      let customFields;\n      try {\n        customFields = JSON.parse(customFieldsSettings);\n      } catch (err) {\n        logger.error({\n          msg: 'Failed to parse Custom Fields',\n          err\n        });\n        return;\n      }\n      Object.entries(map).forEach(_ref2 => {\n        let [ldapField, userField] = _ref2;\n        if (!getNestedProp(customFields, userField)) {\n          logger.debug(\"User attribute does not exist: \".concat(userField));\n          return;\n        }\n        const value = templateVarHandler(ldapField, ldapUser);\n        if (!value) {\n          return;\n        }\n        userData.customFields = replacesNestedValues(_objectSpread({}, userData.customFields), userField, value);\n      });\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","copyCustomFieldsLDAP","templateVarHandler","getNestedProp","replacesNestedValues","__reifyWaitForDeps__","_ref","logger","ldapUser","userData","customFieldsSettings","customFieldsMap","syncCustomFields","debug","map","JSON","parse","err","error","msg","customFields","Object","entries","forEach","_ref2","ldapField","userField","concat","value","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/lib/ldap/copyCustomFieldsLDAP.ts"],"sourcesContent":["import type { IImportUser, ILDAPEntry } from '@rocket.chat/core-typings';\nimport type { Logger } from '@rocket.chat/logger';\n\nimport { templateVarHandler } from '../../../../app/utils/lib/templateVarHandler';\nimport { getNestedProp } from '../../../../server/lib/getNestedProp';\nimport { replacesNestedValues } from './replacesNestedValues';\n\nexport const copyCustomFieldsLDAP = (\n\t{\n\t\tldapUser,\n\t\tuserData,\n\t\tcustomFieldsSettings,\n\t\tcustomFieldsMap,\n\t\tsyncCustomFields,\n\t}: {\n\t\tldapUser: ILDAPEntry;\n\t\tuserData: IImportUser;\n\t\tsyncCustomFields: boolean;\n\t\tcustomFieldsSettings: string;\n\t\tcustomFieldsMap: string;\n\t},\n\tlogger: Logger,\n): void => {\n\tif (!syncCustomFields) {\n\t\treturn;\n\t}\n\n\tif (!customFieldsMap || !customFieldsSettings) {\n\t\tif (customFieldsMap) {\n\t\t\tlogger.debug('Skipping LDAP custom fields because there are no custom map fields configured.');\n\t\t\treturn;\n\t\t}\n\t\tlogger.debug('Skipping LDAP custom fields because there are no custom fields configured.');\n\t\treturn;\n\t}\n\n\tconst map: Record<string, string> = (() => {\n\t\ttry {\n\t\t\treturn JSON.parse(customFieldsMap);\n\t\t} catch (err) {\n\t\t\tlogger.error({ msg: 'Error parsing LDAP custom fields map.', err });\n\t\t}\n\t})();\n\n\tif (!map) {\n\t\treturn;\n\t}\n\n\tlet customFields: Record<string, any>;\n\ttry {\n\t\tcustomFields = JSON.parse(customFieldsSettings) as Record<string, any>;\n\t} catch (err) {\n\t\tlogger.error({ msg: 'Failed to parse Custom Fields', err });\n\t\treturn;\n\t}\n\n\tObject.entries(map).forEach(([ldapField, userField]) => {\n\t\tif (!getNestedProp(customFields, userField)) {\n\t\t\tlogger.debug(`User attribute does not exist: ${userField}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = templateVarHandler(ldapField, ldapUser);\n\n\t\tif (!value) {\n\t\t\treturn;\n\t\t}\n\n\t\tuserData.customFields = replacesNestedValues({ ...userData.customFields }, userField, value);\n\t});\n};\n"],"mappings":";;;IAGA,IAAAA,aAAS;IAAAC,MAAA,CAAAC,IAAoB,uCAAM;MAAAC,QAAAC,CAAA;QAA8CJ,aAAC,GAAAI,CAAA;MAAA;IAAA;IAAlFH,MAAA,CAAOI,MAAE;MAAAC,oBAA0B,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,kBAA+C;IAAAN,MAAA,CAAAC,IAAA;MAAAK,mBAAAH,CAAA;QAAAG,kBAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,aAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAM,cAAAJ,CAAA;QAAAI,aAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,oBAAA;IAAAR,MAAA,CAAAC,IAAA;MAAAO,qBAAAL,CAAA;QAAAK,oBAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,oBAAA,WAAAA,oBAAA;IAI3E,MAAMJ,oBAAoB,GAAGA,CAAAK,IAAA,EAcnCC,MAAc,KACL;MAAA,IAdT;QACCC,QAAQ;QACRC,QAAQ;QACRC,oBAAoB;QACpBC,eAAe;QACfC;MAAgB,CAOhB,GAAAN,IAAA;MAGD,IAAI,CAACM,gBAAgB,EAAE;QACtB;MACD;MAEA,IAAI,CAACD,eAAe,IAAI,CAACD,oBAAoB,EAAE;QAC9C,IAAIC,eAAe,EAAE;UACpBJ,MAAM,CAACM,KAAK,CAAC,gFAAgF,CAAC;UAC9F;QACD;QACAN,MAAM,CAACM,KAAK,CAAC,4EAA4E,CAAC;QAC1F;MACD;MAEA,MAAMC,GAAG,GAA2B,CAAC,MAAK;QACzC,IAAI;UACH,OAAOC,IAAI,CAACC,KAAK,CAACL,eAAe,CAAC;QACnC,CAAC,CAAC,OAAOM,GAAG,EAAE;UACbV,MAAM,CAACW,KAAK,CAAC;YAAEC,GAAG,EAAE,uCAAuC;YAAEF;UAAG,CAAE,CAAC;QACpE;MACD,CAAC,EAAC,CAAE;MAEJ,IAAI,CAACH,GAAG,EAAE;QACT;MACD;MAEA,IAAIM,YAAiC;MACrC,IAAI;QACHA,YAAY,GAAGL,IAAI,CAACC,KAAK,CAACN,oBAAoB,CAAwB;MACvE,CAAC,CAAC,OAAOO,GAAG,EAAE;QACbV,MAAM,CAACW,KAAK,CAAC;UAAEC,GAAG,EAAE,+BAA+B;UAAEF;QAAG,CAAE,CAAC;QAC3D;MACD;MAEAI,MAAM,CAACC,OAAO,CAACR,GAAG,CAAC,CAACS,OAAO,CAACC,KAAA,IAA2B;QAAA,IAA1B,CAACC,SAAS,EAAEC,SAAS,CAAC,GAAAF,KAAA;QAClD,IAAI,CAACrB,aAAa,CAACiB,YAAY,EAAEM,SAAS,CAAC,EAAE;UAC5CnB,MAAM,CAACM,KAAK,mCAAAc,MAAA,CAAmCD,SAAS,CAAE,CAAC;UAC3D;QACD;QAEA,MAAME,KAAK,GAAG1B,kBAAkB,CAACuB,SAAS,EAAEjB,QAAQ,CAAC;QAErD,IAAI,CAACoB,KAAK,EAAE;UACX;QACD;QAEAnB,QAAQ,CAACW,YAAY,GAAGhB,oBAAoB,CAAAT,aAAA,KAAMc,QAAQ,CAACW,YAAY,GAAIM,SAAS,EAAEE,KAAK,CAAC;MAC7F,CAAC,CAAC;IACH,CAAC;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"3047efa6d1f911a4309914dd6b14ae137c60f3c1"}
