{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/markdown/lib/parser/original/token.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/markdown/lib/parser/original/token.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/markdown/lib/parser/original/token.ts","inputSourceMap":{"version":3,"file":"app/markdown/lib/parser/original/token.ts","sourceRoot":"","sources":["app/markdown/lib/parser/original/token.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAE7C,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,OAAiB,EAAE,IAAY,EAAE,IAAe,EAAE,KAAkB,EAAU,EAAE;IAC1G,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACrB,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC;IACrC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;QACnB,KAAK;QACL,IAAI;QACJ,IAAI,EAAE,IAAI;QACV,GAAG,CAAC,KAAK,IAAI,EAAE,GAAG,KAAK,EAAE,CAAC;KAC1B,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,GAAW,EAAW,EAAE,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAE3F,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,OAAiB,EAAE,EAAU,EAAE,aAA0B,EAAW,EAAE;IAC3G,MAAM,MAAM,GAAa,EAAE,CAAC,KAAK,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;IAClE,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;IACxF,OAAO,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACnH,CAAC,CAAC","sourcesContent":["/*\n * Markdown is a named function that will parse markdown syntax\n * @param {String} msg - The message html\n */\nimport type { IMessage, TokenType, TokenExtra } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\n\nexport const addAsToken = (message: IMessage, html: string, type: TokenType, extra?: TokenExtra): string => {\n\tif (!message.tokens) {\n\t\tmessage.tokens = [];\n\t}\n\tconst token = `=!=${Random.id()}=!=`;\n\tmessage.tokens.push({\n\t\ttoken,\n\t\ttype,\n\t\ttext: html,\n\t\t...(extra && { ...extra }),\n\t});\n\n\treturn token;\n};\n\nexport const isToken = (msg: string): boolean => /=!=[.a-z0-9]{17}=!=/gim.test(msg.trim());\n\nexport const validateAllowedTokens = (message: IMessage, id: string, desiredTokens: TokenType[]): boolean => {\n\tconst tokens: string[] = id.match(/=!=[.a-z0-9]{17}=!=/gim) || [];\n\tconst tokensFound = message.tokens?.filter(({ token }) => tokens.includes(token)) || [];\n\treturn tokensFound.length === 0 || tokensFound.every((token) => token.type && desiredTokens.includes(token.type));\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/markdown/lib/parser/original/token.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/markdown/lib/parser/original/token.ts","inputSourceMap":{"version":3,"file":"app/markdown/lib/parser/original/token.ts","sourceRoot":"","sources":["app/markdown/lib/parser/original/token.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAE7C,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,OAAiB,EAAE,IAAY,EAAE,IAAe,EAAE,KAAkB,EAAU,EAAE;IAC1G,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACrB,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IACD,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC;IACrC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;QACnB,KAAK;QACL,IAAI;QACJ,IAAI,EAAE,IAAI;QACV,GAAG,CAAC,KAAK,IAAI,EAAE,GAAG,KAAK,EAAE,CAAC;KAC1B,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,GAAW,EAAW,EAAE,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAE3F,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,OAAiB,EAAE,EAAU,EAAE,aAA0B,EAAW,EAAE;IAC3G,MAAM,MAAM,GAAa,EAAE,CAAC,KAAK,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;IAClE,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;IACxF,OAAO,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AACnH,CAAC,CAAC","sourcesContent":["/*\n * Markdown is a named function that will parse markdown syntax\n * @param {String} msg - The message html\n */\nimport type { IMessage, TokenType, TokenExtra } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\n\nexport const addAsToken = (message: IMessage, html: string, type: TokenType, extra?: TokenExtra): string => {\n\tif (!message.tokens) {\n\t\tmessage.tokens = [];\n\t}\n\tconst token = `=!=${Random.id()}=!=`;\n\tmessage.tokens.push({\n\t\ttoken,\n\t\ttype,\n\t\ttext: html,\n\t\t...(extra && { ...extra }),\n\t});\n\n\treturn token;\n};\n\nexport const isToken = (msg: string): boolean => /=!=[.a-z0-9]{17}=!=/gim.test(msg.trim());\n\nexport const validateAllowedTokens = (message: IMessage, id: string, desiredTokens: TokenType[]): boolean => {\n\tconst tokens: string[] = id.match(/=!=[.a-z0-9]{17}=!=/gim) || [];\n\tconst tokensFound = message.tokens?.filter(({ token }) => tokens.includes(token)) || [];\n\treturn tokensFound.length === 0 || tokensFound.every((token) => token.type && desiredTokens.includes(token.type));\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      addAsToken: () => addAsToken,\n      isToken: () => isToken,\n      validateAllowedTokens: () => validateAllowedTokens\n    });\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const addAsToken = (message, html, type, extra) => {\n      if (!message.tokens) {\n        message.tokens = [];\n      }\n      const token = \"=!=\".concat(Random.id(), \"=!=\");\n      message.tokens.push(_objectSpread({\n        token,\n        type,\n        text: html\n      }, extra && _objectSpread({}, extra)));\n      return token;\n    };\n    const isToken = msg => /=!=[.a-z0-9]{17}=!=/gim.test(msg.trim());\n    const validateAllowedTokens = (message, id, desiredTokens) => {\n      var _message$tokens;\n      const tokens = id.match(/=!=[.a-z0-9]{17}=!=/gim) || [];\n      const tokensFound = ((_message$tokens = message.tokens) === null || _message$tokens === void 0 ? void 0 : _message$tokens.filter(_ref => {\n        let {\n          token\n        } = _ref;\n        return tokens.includes(token);\n      })) || [];\n      return tokensFound.length === 0 || tokensFound.every(token => token.type && desiredTokens.includes(token.type));\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","addAsToken","isToken","validateAllowedTokens","Random","__reifyWaitForDeps__","message","html","type","extra","tokens","token","concat","id","push","text","msg","test","trim","desiredTokens","_message$tokens","match","tokensFound","filter","_ref","includes","length","every","__reify_async_result__","_reifyError","self","async"],"sources":["app/markdown/lib/parser/original/token.ts"],"sourcesContent":["/*\n * Markdown is a named function that will parse markdown syntax\n * @param {String} msg - The message html\n */\nimport type { IMessage, TokenType, TokenExtra } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\n\nexport const addAsToken = (message: IMessage, html: string, type: TokenType, extra?: TokenExtra): string => {\n\tif (!message.tokens) {\n\t\tmessage.tokens = [];\n\t}\n\tconst token = `=!=${Random.id()}=!=`;\n\tmessage.tokens.push({\n\t\ttoken,\n\t\ttype,\n\t\ttext: html,\n\t\t...(extra && { ...extra }),\n\t});\n\n\treturn token;\n};\n\nexport const isToken = (msg: string): boolean => /=!=[.a-z0-9]{17}=!=/gim.test(msg.trim());\n\nexport const validateAllowedTokens = (message: IMessage, id: string, desiredTokens: TokenType[]): boolean => {\n\tconst tokens: string[] = id.match(/=!=[.a-z0-9]{17}=!=/gim) || [];\n\tconst tokensFound = message.tokens?.filter(({ token }) => tokens.includes(token)) || [];\n\treturn tokensFound.length === 0 || tokensFound.every((token) => token.type && desiredTokens.includes(token.type));\n};\n"],"mappings":";;;IAKA,IAAAA,aAAiB;IAAAC,MAAM,CAAAC,IAAA,uCAAsB;MAAAC,QAAAC,CAAA;QAAAJ,aAAA,GAAAI,CAAA;MAAA;IAAA;IAA7CH,MAAA,CAAOI,MAAE;MAAMC,UAAQ,EAAAA,CAAA,KAAAA,UAAA;MAAAC,OAAsB,EAAAA,CAAA,KAAAA,OAAA;MAAAC,qBAAA,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,MAAA;IAAAR,MAAA,CAAAC,IAAA;MAAAO,OAAAL,CAAA;QAAAK,MAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,oBAAA,WAAAA,oBAAA;IAEtC,MAAMJ,UAAU,GAAGA,CAACK,OAAiB,EAAEC,IAAY,EAAEC,IAAe,EAAEC,KAAkB,KAAY;MAC1G,IAAI,CAACH,OAAO,CAACI,MAAM,EAAE;QACpBJ,OAAO,CAACI,MAAM,GAAG,EAAE;MACpB;MACA,MAAMC,KAAK,SAAAC,MAAA,CAASR,MAAM,CAACS,EAAE,EAAE,QAAK;MACpCP,OAAO,CAACI,MAAM,CAACI,IAAI,CAAAnB,aAAA;QAClBgB,KAAK;QACLH,IAAI;QACJO,IAAI,EAAER;MAAI,GACNE,KAAK,IAAAd,aAAA,KAASc,KAAK,CAAE,CACzB,CAAC;MAEF,OAAOE,KAAK;IACb,CAAC;IAEM,MAAMT,OAAO,GAAIc,GAAW,IAAc,wBAAwB,CAACC,IAAI,CAACD,GAAG,CAACE,IAAI,EAAE,CAAC;IAEnF,MAAMf,qBAAqB,GAAGA,CAACG,OAAiB,EAAEO,EAAU,EAAEM,aAA0B,KAAa;MAAA,IAAAC,eAAA;MAC3G,MAAMV,MAAM,GAAaG,EAAE,CAACQ,KAAK,CAAC,wBAAwB,CAAC,IAAI,EAAE;MACjE,MAAMC,WAAW,GAAG,EAAAF,eAAA,GAAAd,OAAO,CAACI,MAAM,cAAAU,eAAA,uBAAdA,eAAA,CAAgBG,MAAM,CAACC,IAAA;QAAA,IAAC;UAAEb;QAAK,CAAE,GAAAa,IAAA;QAAA,OAAKd,MAAM,CAACe,QAAQ,CAACd,KAAK,CAAC;MAAA,EAAC,KAAI,EAAE;MACvF,OAAOW,WAAW,CAACI,MAAM,KAAK,CAAC,IAAIJ,WAAW,CAACK,KAAK,CAAEhB,KAAK,IAAKA,KAAK,CAACH,IAAI,IAAIW,aAAa,CAACM,QAAQ,CAACd,KAAK,CAACH,IAAI,CAAC,CAAC;IAClH,CAAC;IAACoB,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2682e2b1d2950b88b97a848e14340981eaddf193"}
