{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/footer/voip/hooks/useOmnichannelContactLabel.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/sidebarv2/footer/voip/hooks/useOmnichannelContactLabel.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/footer/voip/hooks/useOmnichannelContactLabel.ts","inputSourceMap":{"version":3,"file":"client/sidebarv2/footer/voip/hooks/useOmnichannelContactLabel.ts","sourceRoot":"","sources":["client/sidebarv2/footer/voip/hooks/useOmnichannelContactLabel.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,wBAAwB,EAAE,MAAM,+CAA+C,CAAC;AAEzF,MAAM,CAAC,MAAM,0BAA0B,GAAG,CAAC,MAAmB,EAAU,EAAE;IACzE,MAAM,YAAY,GAAG,WAAW,CAAC,KAAK,EAAE,gCAAgC,CAAC,CAAC;IAC1E,MAAM,KAAK,GAAG,wBAAwB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAExD,MAAM,EAAE,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,oBAAoB,EAAE,KAAK,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE;QAC5H,OAAO,EAAE,CAAC,CAAC,KAAK;KAChB,CAAC,CAAC;IAEH,OAAO,IAAI,EAAE,IAAI,IAAI,MAAM,CAAC,UAAU,IAAI,KAAK,CAAC;AACjD,CAAC,CAAC","sourcesContent":["import type { ICallerInfo } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { parseOutboundPhoneNumber } from '../../../../lib/voip/parseOutboundPhoneNumber';\n\nexport const useOmnichannelContactLabel = (caller: ICallerInfo): string => {\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst phone = parseOutboundPhoneNumber(caller.callerId);\n\n\tconst { data } = useQuery(['getContactsByPhone', phone], async () => getContactBy({ phone }).then(({ contact }) => contact), {\n\t\tenabled: !!phone,\n\t});\n\n\treturn data?.name || caller.callerName || phone;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/footer/voip/hooks/useOmnichannelContactLabel.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/sidebarv2/footer/voip/hooks/useOmnichannelContactLabel.ts","inputSourceMap":{"version":3,"file":"client/sidebarv2/footer/voip/hooks/useOmnichannelContactLabel.ts","sourceRoot":"","sources":["client/sidebarv2/footer/voip/hooks/useOmnichannelContactLabel.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,wBAAwB,EAAE,MAAM,+CAA+C,CAAC;AAEzF,MAAM,CAAC,MAAM,0BAA0B,GAAG,CAAC,MAAmB,EAAU,EAAE;IACzE,MAAM,YAAY,GAAG,WAAW,CAAC,KAAK,EAAE,gCAAgC,CAAC,CAAC;IAC1E,MAAM,KAAK,GAAG,wBAAwB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAExD,MAAM,EAAE,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,oBAAoB,EAAE,KAAK,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE;QAC5H,OAAO,EAAE,CAAC,CAAC,KAAK;KAChB,CAAC,CAAC;IAEH,OAAO,IAAI,EAAE,IAAI,IAAI,MAAM,CAAC,UAAU,IAAI,KAAK,CAAC;AACjD,CAAC,CAAC","sourcesContent":["import type { ICallerInfo } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { parseOutboundPhoneNumber } from '../../../../lib/voip/parseOutboundPhoneNumber';\n\nexport const useOmnichannelContactLabel = (caller: ICallerInfo): string => {\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst phone = parseOutboundPhoneNumber(caller.callerId);\n\n\tconst { data } = useQuery(['getContactsByPhone', phone], async () => getContactBy({ phone }).then(({ contact }) => contact), {\n\t\tenabled: !!phone,\n\t});\n\n\treturn data?.name || caller.callerName || phone;\n};\n"]}}},"code":"module.export({\n  useOmnichannelContactLabel: () => useOmnichannelContactLabel\n});\nlet useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n}, 0);\nlet useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  }\n}, 1);\nlet parseOutboundPhoneNumber;\nmodule.link(\"../../../../lib/voip/parseOutboundPhoneNumber\", {\n  parseOutboundPhoneNumber(v) {\n    parseOutboundPhoneNumber = v;\n  }\n}, 2);\nconst useOmnichannelContactLabel = caller => {\n  const getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n  const phone = parseOutboundPhoneNumber(caller.callerId);\n  const {\n    data\n  } = useQuery(['getContactsByPhone', phone], async () => getContactBy({\n    phone\n  }).then(_ref => {\n    let {\n      contact\n    } = _ref;\n    return contact;\n  }), {\n    enabled: !!phone\n  });\n  return (data === null || data === void 0 ? void 0 : data.name) || caller.callerName || phone;\n};","map":{"version":3,"names":["module","export","useOmnichannelContactLabel","useEndpoint","link","v","useQuery","parseOutboundPhoneNumber","caller","getContactBy","phone","callerId","data","then","_ref","contact","enabled","name","callerName"],"sources":["client/sidebarv2/footer/voip/hooks/useOmnichannelContactLabel.ts"],"sourcesContent":["import type { ICallerInfo } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { parseOutboundPhoneNumber } from '../../../../lib/voip/parseOutboundPhoneNumber';\n\nexport const useOmnichannelContactLabel = (caller: ICallerInfo): string => {\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst phone = parseOutboundPhoneNumber(caller.callerId);\n\n\tconst { data } = useQuery(['getContactsByPhone', phone], async () => getContactBy({ phone }).then(({ contact }) => contact), {\n\t\tenabled: !!phone,\n\t});\n\n\treturn data?.name || caller.callerName || phone;\n};\n"],"mappings":"AACAA,MAAA,CAAOC,MAAE;EAAAC,0BAAmB,EAAAA,CAAA,KAAAA;AAA2B;AAAA,IAAAC,WAAA;AAAAH,MAAA,CAAAI,IAAA;EAAAD,YAAAE,CAAA;IAAAF,WAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,QAAA;AAAAN,MAAA,CAAAI,IAAA;EAAAE,SAAAD,CAAA;IAAAC,QAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,wBAAA;AAAAP,MAAA,CAAAI,IAAA;EAAAG,yBAAAF,CAAA;IAAAE,wBAAA,GAAAF,CAAA;EAAA;AAAA;AAKhD,MAAMH,0BAA0B,GAAIM,MAAmB,IAAY;EACzE,MAAMC,YAAY,GAAGN,WAAW,CAAC,KAAK,EAAE,gCAAgC,CAAC;EACzE,MAAMO,KAAK,GAAGH,wBAAwB,CAACC,MAAM,CAACG,QAAQ,CAAC;EAEvD,MAAM;IAAEC;EAAI,CAAE,GAAGN,QAAQ,CAAC,CAAC,oBAAoB,EAAEI,KAAK,CAAC,EAAE,YAAYD,YAAY,CAAC;IAAEC;EAAK,CAAE,CAAC,CAACG,IAAI,CAACC,IAAA;IAAA,IAAC;MAAEC;IAAO,CAAE,GAAAD,IAAA;IAAA,OAAKC,OAAO;EAAA,EAAC,EAAE;IAC5HC,OAAO,EAAE,CAAC,CAACN;GACX,CAAC;EAEF,OAAO,CAAAE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,IAAI,KAAIT,MAAM,CAACU,UAAU,IAAIR,KAAK;AAChD,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d2596386e19204e7c163eb62323e75014fcdc16f"}
