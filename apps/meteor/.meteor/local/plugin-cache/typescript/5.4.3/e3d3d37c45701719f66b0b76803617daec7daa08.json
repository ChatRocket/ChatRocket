{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/setUsername.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/setUsername.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/setUsername.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/setUsername.ts","sourceRoot":"","sources":["app/lib/server/functions/setUsername.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { Invites, Users } from '@rocket.chat/models';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\nimport { RateLimiter } from '../lib';\nimport { notifyOnUserChange } from '../lib/notifyListener';\nimport { addUserToRoom } from './addUserToRoom';\nimport { checkUsernameAvailability } from './checkUsernameAvailability';\nimport { getAvatarSuggestionForUser } from './getAvatarSuggestionForUser';\nimport { joinDefaultChannels } from './joinDefaultChannels';\nimport { saveUserIdentity } from './saveUserIdentity';\nimport { setUserAvatar } from './setUserAvatar';\nimport { validateUsername } from './validateUsername';\n\nexport const setUsernameWithValidation = async (userId: string, username: string, joinDefaultChannelsSilenced?: boolean): Promise<void> => {\n\tif (!username) {\n\t\tthrow new Meteor.Error('error-invalid-username', 'Invalid username', { method: 'setUsername' });\n\t}\n\n\tconst user = await Users.findOneById(userId);\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setUsername' });\n\t}\n\n\tif (user.username && !settings.get('Accounts_AllowUsernameChange')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t}\n\n\tif (user.username === username || (user.username && user.username.toLowerCase() === username.toLowerCase())) {\n\t\treturn;\n\t}\n\n\tif (!validateUsername(username)) {\n\t\tthrow new Meteor.Error(\n\t\t\t'username-invalid',\n\t\t\t`${_.escape(username)} is not a valid username, use only letters, numbers, dots, hyphens and underscores`,\n\t\t);\n\t}\n\n\tif (!(await checkUsernameAvailability(username))) {\n\t\tthrow new Meteor.Error('error-field-unavailable', `<strong>${_.escape(username)}</strong> is already in use :(`, {\n\t\t\tmethod: 'setUsername',\n\t\t\tfield: username,\n\t\t});\n\t}\n\n\tif (!(await saveUserIdentity({ _id: user._id, username }))) {\n\t\tthrow new Meteor.Error('error-could-not-change-username', 'Could not change username', {\n\t\t\tmethod: 'setUsername',\n\t\t});\n\t}\n\n\tif (!user.username) {\n\t\tawait joinDefaultChannels(user._id, joinDefaultChannelsSilenced);\n\t\tsetImmediate(async () => callbacks.run('afterCreateUser', user));\n\t}\n\n\tvoid notifyOnUserChange({ clientAction: 'updated', id: user._id, diff: { username } });\n};\n\nexport const _setUsername = async function (userId: string, u: string, fullUser: IUser): Promise<unknown> {\n\tconst username = u.trim();\n\n\tif (!userId || !username) {\n\t\treturn false;\n\t}\n\n\tif (!validateUsername(username)) {\n\t\treturn false;\n\t}\n\n\tconst user = fullUser || (await Users.findOneById(userId));\n\t// User already has desired username, return\n\tif (user.username === username) {\n\t\treturn user;\n\t}\n\tconst previousUsername = user.username;\n\t// Check username availability or if the user already owns a different casing of the name\n\tif (!previousUsername || !(username.toLowerCase() === previousUsername.toLowerCase())) {\n\t\tif (!(await checkUsernameAvailability(username))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t// If first time setting username, send Enrollment Email\n\ttry {\n\t\tif (!previousUsername && user.emails && user.emails.length > 0 && settings.get('Accounts_Enrollment_Email')) {\n\t\t\tsetImmediate(() => {\n\t\t\t\tAccounts.sendEnrollmentEmail(user._id);\n\t\t\t});\n\t\t}\n\t} catch (e: any) {\n\t\tSystemLogger.error(e);\n\t}\n\t// Set new username*\n\tawait Users.setUsername(user._id, username);\n\tuser.username = username;\n\n\tif (!previousUsername && settings.get('Accounts_SetDefaultAvatar') === true) {\n\t\tconst avatarSuggestions = await getAvatarSuggestionForUser(user);\n\t\tlet avatarData;\n\t\tlet serviceName = 'gravatar';\n\n\t\tfor (const service of Object.keys(avatarSuggestions)) {\n\t\t\tavatarData = avatarSuggestions[service];\n\t\t\tif (service !== 'gravatar') {\n\t\t\t\tserviceName = service;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (avatarData) {\n\t\t\tawait setUserAvatar(user, avatarData.blob, avatarData.contentType, serviceName);\n\t\t}\n\t}\n\n\t// If it's the first username and the user has an invite Token, then join the invite room\n\tif (!previousUsername && user.inviteToken) {\n\t\tconst inviteData = await Invites.findOneById(user.inviteToken);\n\t\tif (inviteData?.rid) {\n\t\t\tawait addUserToRoom(inviteData.rid, user);\n\t\t}\n\t}\n\n\tvoid api.broadcast('user.nameChanged', {\n\t\t_id: user._id,\n\t\tname: user.name,\n\t\tusername: user.username,\n\t});\n\n\treturn user;\n};\n\nexport const setUsername = RateLimiter.limitFunction(_setUsername, 1, 60000, {\n\tasync 0() {\n\t\tconst userId = Meteor.userId();\n\t\treturn !userId || !(await hasPermissionAsync(userId, 'edit-other-user-info'));\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/setUsername.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/setUsername.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/setUsername.ts","sourceRoot":"","sources":["app/lib/server/functions/setUsername.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AAEjD,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,CAAC,MAAM,YAAY,CAAC;AAE3B,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,YAAY,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,kBAAkB,EAAE,MAAM,uDAAuD,CAAC;AAC3F,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAC;AACrC,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAC3D,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AACxE,OAAO,EAAE,0BAA0B,EAAE,MAAM,8BAA8B,CAAC;AAC1E,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAChD,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAEtD,MAAM,CAAC,MAAM,yBAAyB,GAAG,KAAK,EAAE,MAAc,EAAE,QAAgB,EAAE,2BAAqC,EAAiB,EAAE;IACzI,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,wBAAwB,EAAE,kBAAkB,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC;IACjG,CAAC;IAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAE7C,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC;IACzF,CAAC;IAED,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,8BAA8B,CAAC,EAAE,CAAC;QACpE,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC;IAC5D,CAAC;IAED,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;QAC7G,OAAO;IACR,CAAC;IAED,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC;QACjC,MAAM,IAAI,MAAM,CAAC,KAAK,CACrB,kBAAkB,EAClB,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,oFAAoF,CACzG,CAAC;IACH,CAAC;IAED,IAAI,CAAC,CAAC,MAAM,yBAAyB,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;QAClD,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,yBAAyB,EAAE,WAAW,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,gCAAgC,EAAE;YAChH,MAAM,EAAE,aAAa;YACrB,KAAK,EAAE,QAAQ;SACf,CAAC,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,CAAC,MAAM,gBAAgB,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC;QAC5D,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,iCAAiC,EAAE,2BAA2B,EAAE;YACtF,MAAM,EAAE,aAAa;SACrB,CAAC,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,MAAM,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,2BAA2B,CAAC,CAAC;QACjE,YAAY,CAAC,KAAK,IAAI,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,KAAK,kBAAkB,CAAC,EAAE,YAAY,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;AACxF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,KAAK,WAAW,MAAc,EAAE,CAAS,EAAE,QAAe;IACrF,MAAM,QAAQ,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IAE1B,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC1B,OAAO,KAAK,CAAC;IACd,CAAC;IAED,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC;QACjC,OAAO,KAAK,CAAC;IACd,CAAC;IAED,MAAM,IAAI,GAAG,QAAQ,IAAI,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3D,4CAA4C;IAC5C,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE,CAAC;QAChC,OAAO,IAAI,CAAC;IACb,CAAC;IACD,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC;IACvC,yFAAyF;IACzF,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,gBAAgB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;QACvF,IAAI,CAAC,CAAC,MAAM,yBAAyB,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;YAClD,OAAO,KAAK,CAAC;QACd,CAAC;IACF,CAAC;IACD,wDAAwD;IACxD,IAAI,CAAC;QACJ,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,2BAA2B,CAAC,EAAE,CAAC;YAC7G,YAAY,CAAC,GAAG,EAAE;gBACjB,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;IAAC,OAAO,CAAM,EAAE,CAAC;QACjB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;IACD,oBAAoB;IACpB,MAAM,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC5C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAEzB,IAAI,CAAC,gBAAgB,IAAI,QAAQ,CAAC,GAAG,CAAC,2BAA2B,CAAC,KAAK,IAAI,EAAE,CAAC;QAC7E,MAAM,iBAAiB,GAAG,MAAM,0BAA0B,CAAC,IAAI,CAAC,CAAC;QACjE,IAAI,UAAU,CAAC;QACf,IAAI,WAAW,GAAG,UAAU,CAAC;QAE7B,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC;YACtD,UAAU,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC;YACxC,IAAI,OAAO,KAAK,UAAU,EAAE,CAAC;gBAC5B,WAAW,GAAG,OAAO,CAAC;gBACtB,MAAM;YACP,CAAC;QACF,CAAC;QAED,IAAI,UAAU,EAAE,CAAC;YAChB,MAAM,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QACjF,CAAC;IACF,CAAC;IAED,yFAAyF;IACzF,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;QAC3C,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/D,IAAI,UAAU,EAAE,GAAG,EAAE,CAAC;YACrB,MAAM,aAAa,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC;IACF,CAAC;IAED,KAAK,GAAG,CAAC,SAAS,CAAC,kBAAkB,EAAE;QACtC,GAAG,EAAE,IAAI,CAAC,GAAG;QACb,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;KACvB,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,WAAW,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE;IAC5E,KAAK,CAAC,CAAC;QACN,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC,CAAC;IAC/E,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { Invites, Users } from '@rocket.chat/models';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\nimport { RateLimiter } from '../lib';\nimport { notifyOnUserChange } from '../lib/notifyListener';\nimport { addUserToRoom } from './addUserToRoom';\nimport { checkUsernameAvailability } from './checkUsernameAvailability';\nimport { getAvatarSuggestionForUser } from './getAvatarSuggestionForUser';\nimport { joinDefaultChannels } from './joinDefaultChannels';\nimport { saveUserIdentity } from './saveUserIdentity';\nimport { setUserAvatar } from './setUserAvatar';\nimport { validateUsername } from './validateUsername';\n\nexport const setUsernameWithValidation = async (userId: string, username: string, joinDefaultChannelsSilenced?: boolean): Promise<void> => {\n\tif (!username) {\n\t\tthrow new Meteor.Error('error-invalid-username', 'Invalid username', { method: 'setUsername' });\n\t}\n\n\tconst user = await Users.findOneById(userId);\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setUsername' });\n\t}\n\n\tif (user.username && !settings.get('Accounts_AllowUsernameChange')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t}\n\n\tif (user.username === username || (user.username && user.username.toLowerCase() === username.toLowerCase())) {\n\t\treturn;\n\t}\n\n\tif (!validateUsername(username)) {\n\t\tthrow new Meteor.Error(\n\t\t\t'username-invalid',\n\t\t\t`${_.escape(username)} is not a valid username, use only letters, numbers, dots, hyphens and underscores`,\n\t\t);\n\t}\n\n\tif (!(await checkUsernameAvailability(username))) {\n\t\tthrow new Meteor.Error('error-field-unavailable', `<strong>${_.escape(username)}</strong> is already in use :(`, {\n\t\t\tmethod: 'setUsername',\n\t\t\tfield: username,\n\t\t});\n\t}\n\n\tif (!(await saveUserIdentity({ _id: user._id, username }))) {\n\t\tthrow new Meteor.Error('error-could-not-change-username', 'Could not change username', {\n\t\t\tmethod: 'setUsername',\n\t\t});\n\t}\n\n\tif (!user.username) {\n\t\tawait joinDefaultChannels(user._id, joinDefaultChannelsSilenced);\n\t\tsetImmediate(async () => callbacks.run('afterCreateUser', user));\n\t}\n\n\tvoid notifyOnUserChange({ clientAction: 'updated', id: user._id, diff: { username } });\n};\n\nexport const _setUsername = async function (userId: string, u: string, fullUser: IUser): Promise<unknown> {\n\tconst username = u.trim();\n\n\tif (!userId || !username) {\n\t\treturn false;\n\t}\n\n\tif (!validateUsername(username)) {\n\t\treturn false;\n\t}\n\n\tconst user = fullUser || (await Users.findOneById(userId));\n\t// User already has desired username, return\n\tif (user.username === username) {\n\t\treturn user;\n\t}\n\tconst previousUsername = user.username;\n\t// Check username availability or if the user already owns a different casing of the name\n\tif (!previousUsername || !(username.toLowerCase() === previousUsername.toLowerCase())) {\n\t\tif (!(await checkUsernameAvailability(username))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t// If first time setting username, send Enrollment Email\n\ttry {\n\t\tif (!previousUsername && user.emails && user.emails.length > 0 && settings.get('Accounts_Enrollment_Email')) {\n\t\t\tsetImmediate(() => {\n\t\t\t\tAccounts.sendEnrollmentEmail(user._id);\n\t\t\t});\n\t\t}\n\t} catch (e: any) {\n\t\tSystemLogger.error(e);\n\t}\n\t// Set new username*\n\tawait Users.setUsername(user._id, username);\n\tuser.username = username;\n\n\tif (!previousUsername && settings.get('Accounts_SetDefaultAvatar') === true) {\n\t\tconst avatarSuggestions = await getAvatarSuggestionForUser(user);\n\t\tlet avatarData;\n\t\tlet serviceName = 'gravatar';\n\n\t\tfor (const service of Object.keys(avatarSuggestions)) {\n\t\t\tavatarData = avatarSuggestions[service];\n\t\t\tif (service !== 'gravatar') {\n\t\t\t\tserviceName = service;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (avatarData) {\n\t\t\tawait setUserAvatar(user, avatarData.blob, avatarData.contentType, serviceName);\n\t\t}\n\t}\n\n\t// If it's the first username and the user has an invite Token, then join the invite room\n\tif (!previousUsername && user.inviteToken) {\n\t\tconst inviteData = await Invites.findOneById(user.inviteToken);\n\t\tif (inviteData?.rid) {\n\t\t\tawait addUserToRoom(inviteData.rid, user);\n\t\t}\n\t}\n\n\tvoid api.broadcast('user.nameChanged', {\n\t\t_id: user._id,\n\t\tname: user.name,\n\t\tusername: user.username,\n\t});\n\n\treturn user;\n};\n\nexport const setUsername = RateLimiter.limitFunction(_setUsername, 1, 60000, {\n\tasync 0() {\n\t\tconst userId = Meteor.userId();\n\t\treturn !userId || !(await hasPermissionAsync(userId, 'edit-other-user-info'));\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      setUsernameWithValidation: () => setUsernameWithValidation,\n      _setUsername: () => _setUsername,\n      setUsername: () => setUsername\n    });\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let Invites, Users;\n    module.link(\"@rocket.chat/models\", {\n      Invites(v) {\n        Invites = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let _;\n    module.link(\"underscore\", {\n      default(v) {\n        _ = v;\n      }\n    }, 4);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 5);\n    let SystemLogger;\n    module.link(\"../../../../server/lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 6);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 7);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 8);\n    let RateLimiter;\n    module.link(\"../lib\", {\n      RateLimiter(v) {\n        RateLimiter = v;\n      }\n    }, 9);\n    let notifyOnUserChange;\n    module.link(\"../lib/notifyListener\", {\n      notifyOnUserChange(v) {\n        notifyOnUserChange = v;\n      }\n    }, 10);\n    let addUserToRoom;\n    module.link(\"./addUserToRoom\", {\n      addUserToRoom(v) {\n        addUserToRoom = v;\n      }\n    }, 11);\n    let checkUsernameAvailability;\n    module.link(\"./checkUsernameAvailability\", {\n      checkUsernameAvailability(v) {\n        checkUsernameAvailability = v;\n      }\n    }, 12);\n    let getAvatarSuggestionForUser;\n    module.link(\"./getAvatarSuggestionForUser\", {\n      getAvatarSuggestionForUser(v) {\n        getAvatarSuggestionForUser = v;\n      }\n    }, 13);\n    let joinDefaultChannels;\n    module.link(\"./joinDefaultChannels\", {\n      joinDefaultChannels(v) {\n        joinDefaultChannels = v;\n      }\n    }, 14);\n    let saveUserIdentity;\n    module.link(\"./saveUserIdentity\", {\n      saveUserIdentity(v) {\n        saveUserIdentity = v;\n      }\n    }, 15);\n    let setUserAvatar;\n    module.link(\"./setUserAvatar\", {\n      setUserAvatar(v) {\n        setUserAvatar = v;\n      }\n    }, 16);\n    let validateUsername;\n    module.link(\"./validateUsername\", {\n      validateUsername(v) {\n        validateUsername = v;\n      }\n    }, 17);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const setUsernameWithValidation = async (userId, username, joinDefaultChannelsSilenced) => {\n      if (!username) {\n        throw new Meteor.Error('error-invalid-username', 'Invalid username', {\n          method: 'setUsername'\n        });\n      }\n      const user = await Users.findOneById(userId);\n      if (!user) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'setUsername'\n        });\n      }\n      if (user.username && !settings.get('Accounts_AllowUsernameChange')) {\n        throw new Meteor.Error('error-not-allowed', 'Not allowed');\n      }\n      if (user.username === username || user.username && user.username.toLowerCase() === username.toLowerCase()) {\n        return;\n      }\n      if (!validateUsername(username)) {\n        throw new Meteor.Error('username-invalid', \"\".concat(_.escape(username), \" is not a valid username, use only letters, numbers, dots, hyphens and underscores\"));\n      }\n      if (!(await checkUsernameAvailability(username))) {\n        throw new Meteor.Error('error-field-unavailable', \"<strong>\".concat(_.escape(username), \"</strong> is already in use :(\"), {\n          method: 'setUsername',\n          field: username\n        });\n      }\n      if (!(await saveUserIdentity({\n        _id: user._id,\n        username\n      }))) {\n        throw new Meteor.Error('error-could-not-change-username', 'Could not change username', {\n          method: 'setUsername'\n        });\n      }\n      if (!user.username) {\n        await joinDefaultChannels(user._id, joinDefaultChannelsSilenced);\n        setImmediate(async () => callbacks.run('afterCreateUser', user));\n      }\n      void notifyOnUserChange({\n        clientAction: 'updated',\n        id: user._id,\n        diff: {\n          username\n        }\n      });\n    };\n    const _setUsername = async function (userId, u, fullUser) {\n      const username = u.trim();\n      if (!userId || !username) {\n        return false;\n      }\n      if (!validateUsername(username)) {\n        return false;\n      }\n      const user = fullUser || (await Users.findOneById(userId));\n      // User already has desired username, return\n      if (user.username === username) {\n        return user;\n      }\n      const previousUsername = user.username;\n      // Check username availability or if the user already owns a different casing of the name\n      if (!previousUsername || !(username.toLowerCase() === previousUsername.toLowerCase())) {\n        if (!(await checkUsernameAvailability(username))) {\n          return false;\n        }\n      }\n      // If first time setting username, send Enrollment Email\n      try {\n        if (!previousUsername && user.emails && user.emails.length > 0 && settings.get('Accounts_Enrollment_Email')) {\n          setImmediate(() => {\n            Accounts.sendEnrollmentEmail(user._id);\n          });\n        }\n      } catch (e) {\n        SystemLogger.error(e);\n      }\n      // Set new username*\n      await Users.setUsername(user._id, username);\n      user.username = username;\n      if (!previousUsername && settings.get('Accounts_SetDefaultAvatar') === true) {\n        const avatarSuggestions = await getAvatarSuggestionForUser(user);\n        let avatarData;\n        let serviceName = 'gravatar';\n        for (const service of Object.keys(avatarSuggestions)) {\n          avatarData = avatarSuggestions[service];\n          if (service !== 'gravatar') {\n            serviceName = service;\n            break;\n          }\n        }\n        if (avatarData) {\n          await setUserAvatar(user, avatarData.blob, avatarData.contentType, serviceName);\n        }\n      }\n      // If it's the first username and the user has an invite Token, then join the invite room\n      if (!previousUsername && user.inviteToken) {\n        const inviteData = await Invites.findOneById(user.inviteToken);\n        if (inviteData !== null && inviteData !== void 0 && inviteData.rid) {\n          await addUserToRoom(inviteData.rid, user);\n        }\n      }\n      void api.broadcast('user.nameChanged', {\n        _id: user._id,\n        name: user.name,\n        username: user.username\n      });\n      return user;\n    };\n    const setUsername = RateLimiter.limitFunction(_setUsername, 1, 60000, {\n      async 0() {\n        const userId = Meteor.userId();\n        return !userId || !(await hasPermissionAsync(userId, 'edit-other-user-info'));\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","setUsernameWithValidation","_setUsername","setUsername","api","link","v","Invites","Users","Accounts","Meteor","_","default","callbacks","SystemLogger","hasPermissionAsync","settings","RateLimiter","notifyOnUserChange","addUserToRoom","checkUsernameAvailability","getAvatarSuggestionForUser","joinDefaultChannels","saveUserIdentity","setUserAvatar","validateUsername","__reifyWaitForDeps__","userId","username","joinDefaultChannelsSilenced","Error","method","user","findOneById","get","toLowerCase","concat","escape","field","_id","setImmediate","run","clientAction","id","diff","u","fullUser","trim","previousUsername","emails","length","sendEnrollmentEmail","e","error","avatarSuggestions","avatarData","serviceName","service","Object","keys","blob","contentType","inviteToken","inviteData","rid","broadcast","name","limitFunction","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/setUsername.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { Invites, Users } from '@rocket.chat/models';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\nimport { RateLimiter } from '../lib';\nimport { notifyOnUserChange } from '../lib/notifyListener';\nimport { addUserToRoom } from './addUserToRoom';\nimport { checkUsernameAvailability } from './checkUsernameAvailability';\nimport { getAvatarSuggestionForUser } from './getAvatarSuggestionForUser';\nimport { joinDefaultChannels } from './joinDefaultChannels';\nimport { saveUserIdentity } from './saveUserIdentity';\nimport { setUserAvatar } from './setUserAvatar';\nimport { validateUsername } from './validateUsername';\n\nexport const setUsernameWithValidation = async (userId: string, username: string, joinDefaultChannelsSilenced?: boolean): Promise<void> => {\n\tif (!username) {\n\t\tthrow new Meteor.Error('error-invalid-username', 'Invalid username', { method: 'setUsername' });\n\t}\n\n\tconst user = await Users.findOneById(userId);\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setUsername' });\n\t}\n\n\tif (user.username && !settings.get('Accounts_AllowUsernameChange')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed');\n\t}\n\n\tif (user.username === username || (user.username && user.username.toLowerCase() === username.toLowerCase())) {\n\t\treturn;\n\t}\n\n\tif (!validateUsername(username)) {\n\t\tthrow new Meteor.Error(\n\t\t\t'username-invalid',\n\t\t\t`${_.escape(username)} is not a valid username, use only letters, numbers, dots, hyphens and underscores`,\n\t\t);\n\t}\n\n\tif (!(await checkUsernameAvailability(username))) {\n\t\tthrow new Meteor.Error('error-field-unavailable', `<strong>${_.escape(username)}</strong> is already in use :(`, {\n\t\t\tmethod: 'setUsername',\n\t\t\tfield: username,\n\t\t});\n\t}\n\n\tif (!(await saveUserIdentity({ _id: user._id, username }))) {\n\t\tthrow new Meteor.Error('error-could-not-change-username', 'Could not change username', {\n\t\t\tmethod: 'setUsername',\n\t\t});\n\t}\n\n\tif (!user.username) {\n\t\tawait joinDefaultChannels(user._id, joinDefaultChannelsSilenced);\n\t\tsetImmediate(async () => callbacks.run('afterCreateUser', user));\n\t}\n\n\tvoid notifyOnUserChange({ clientAction: 'updated', id: user._id, diff: { username } });\n};\n\nexport const _setUsername = async function (userId: string, u: string, fullUser: IUser): Promise<unknown> {\n\tconst username = u.trim();\n\n\tif (!userId || !username) {\n\t\treturn false;\n\t}\n\n\tif (!validateUsername(username)) {\n\t\treturn false;\n\t}\n\n\tconst user = fullUser || (await Users.findOneById(userId));\n\t// User already has desired username, return\n\tif (user.username === username) {\n\t\treturn user;\n\t}\n\tconst previousUsername = user.username;\n\t// Check username availability or if the user already owns a different casing of the name\n\tif (!previousUsername || !(username.toLowerCase() === previousUsername.toLowerCase())) {\n\t\tif (!(await checkUsernameAvailability(username))) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t// If first time setting username, send Enrollment Email\n\ttry {\n\t\tif (!previousUsername && user.emails && user.emails.length > 0 && settings.get('Accounts_Enrollment_Email')) {\n\t\t\tsetImmediate(() => {\n\t\t\t\tAccounts.sendEnrollmentEmail(user._id);\n\t\t\t});\n\t\t}\n\t} catch (e: any) {\n\t\tSystemLogger.error(e);\n\t}\n\t// Set new username*\n\tawait Users.setUsername(user._id, username);\n\tuser.username = username;\n\n\tif (!previousUsername && settings.get('Accounts_SetDefaultAvatar') === true) {\n\t\tconst avatarSuggestions = await getAvatarSuggestionForUser(user);\n\t\tlet avatarData;\n\t\tlet serviceName = 'gravatar';\n\n\t\tfor (const service of Object.keys(avatarSuggestions)) {\n\t\t\tavatarData = avatarSuggestions[service];\n\t\t\tif (service !== 'gravatar') {\n\t\t\t\tserviceName = service;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (avatarData) {\n\t\t\tawait setUserAvatar(user, avatarData.blob, avatarData.contentType, serviceName);\n\t\t}\n\t}\n\n\t// If it's the first username and the user has an invite Token, then join the invite room\n\tif (!previousUsername && user.inviteToken) {\n\t\tconst inviteData = await Invites.findOneById(user.inviteToken);\n\t\tif (inviteData?.rid) {\n\t\t\tawait addUserToRoom(inviteData.rid, user);\n\t\t}\n\t}\n\n\tvoid api.broadcast('user.nameChanged', {\n\t\t_id: user._id,\n\t\tname: user.name,\n\t\tusername: user.username,\n\t});\n\n\treturn user;\n};\n\nexport const setUsername = RateLimiter.limitFunction(_setUsername, 1, 60000, {\n\tasync 0() {\n\t\tconst userId = Meteor.userId();\n\t\treturn !userId || !(await hasPermissionAsync(userId, 'edit-other-user-info'));\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e3d3d37c45701719f66b0b76803617daec7daa08"}
