{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/meteorOverrides/login/saml.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/meteorOverrides/login/saml.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/meteorOverrides/login/saml.ts","inputSourceMap":{"version":3,"file":"client/meteorOverrides/login/saml.ts","sourceRoot":"","sources":["client/meteorOverrides/login/saml.ts"],"names":[],"mappings":"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","sourcesContent":["import { Random } from '@rocket.chat/random';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../app/settings/client';\nimport { type LoginCallback, callLoginMethod, handleLogin } from '../../lib/2fa/overrideLoginMethod';\n\ndeclare module 'meteor/meteor' {\n\t// eslint-disable-next-line @typescript-eslint/no-namespace\n\tnamespace Meteor {\n\t\tfunction loginWithSamlToken(credentialToken: string, callback?: LoginCallback): void;\n\n\t\tfunction loginWithSaml(options: { provider: string; credentialToken?: string }): void;\n\t}\n}\n\ndeclare module 'meteor/accounts-base' {\n\t// eslint-disable-next-line @typescript-eslint/no-namespace\n\tnamespace Accounts {\n\t\texport let saml: {\n\t\t\tcredentialToken?: string;\n\t\t\tcredentialSecret?: string;\n\t\t};\n\n\t\t/**\n\t\t * There is one case where the onlogout event is triggered with no user:\n\t\t * during the deletion, the user is logged out, and the framework try to get the user from the database.\n\t\t */\n\t\tfunction onLogout(func: (options: { user?: Meteor.User; connection: Meteor.Connection }) => void): void;\n\t}\n}\n\ndeclare module 'meteor/service-configuration' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Configuration {\n\t\tlogoutBehaviour?: 'SAML' | 'Local';\n\t\tidpSLORedirectURL?: string;\n\t}\n}\n\nif (!Accounts.saml) {\n\tAccounts.saml = {};\n}\n\nconst { logout } = Meteor;\n\nMeteor.logout = async function (...args) {\n\tconst standardLogout = () => logout.apply(Meteor, args);\n\n\tif (!settings.get('SAML_Custom_Default')) {\n\t\treturn standardLogout();\n\t}\n\n\tif (settings.get('SAML_Custom_Default_logout_behaviour') === 'Local') {\n\t\tconsole.info('SAML session not terminated, only the Rocket.Chat session is going to be killed');\n\t\treturn standardLogout();\n\t}\n\n\tconst provider = settings.get('SAML_Custom_Default_provider');\n\n\tif (provider && settings.get('SAML_Custom_Default_idp_slo_redirect_url')) {\n\t\tconsole.info('SAML session terminated via SLO');\n\n\t\tconst { sdk } = await import('../../../app/utils/client/lib/SDKClient');\n\t\tsdk\n\t\t\t.call('samlLogout', provider)\n\t\t\t.then((result) => {\n\t\t\t\tif (!result) {\n\t\t\t\t\tlogout.apply(Meteor);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove the userId from the client to prevent calls to the server while the logout is processed.\n\t\t\t\t// If the logout fails, the userId will be reloaded on the resume call\n\t\t\t\tAccounts.storageLocation.removeItem(Accounts.USER_ID_KEY);\n\n\t\t\t\t// A nasty bounce: 'result' has the SAML LogoutRequest but we need a proper 302 to redirected from the server.\n\t\t\t\twindow.location.replace(Meteor.absoluteUrl(`_saml/sloRedirect/${provider}/?redirect=${encodeURIComponent(result)}`));\n\t\t\t})\n\t\t\t.catch(() => logout.apply(Meteor));\n\t\treturn;\n\t}\n\n\treturn standardLogout();\n};\n\nMeteor.loginWithSaml = (options) => {\n\toptions = options || {};\n\tconst credentialToken = `id-${Random.id()}`;\n\toptions.credentialToken = credentialToken;\n\n\twindow.location.href = `_saml/authorize/${options.provider}/${options.credentialToken}`;\n};\n\nconst loginWithSamlToken = (credentialToken: string) =>\n\tcallLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\tsaml: true,\n\t\t\t\tcredentialToken,\n\t\t\t},\n\t\t],\n\t});\n\nconst loginWithSamlTokenAndTOTP = (credentialToken: string, code: string) =>\n\tcallLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\ttotp: {\n\t\t\t\t\tlogin: {\n\t\t\t\t\t\tsaml: true,\n\t\t\t\t\t\tcredentialToken,\n\t\t\t\t\t},\n\t\t\t\t\tcode,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t});\n\nMeteor.loginWithSamlToken = handleLogin(loginWithSamlToken, loginWithSamlTokenAndTOTP);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/meteorOverrides/login/saml.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/meteorOverrides/login/saml.ts","inputSourceMap":{"version":3,"file":"client/meteorOverrides/login/saml.ts","sourceRoot":"","sources":["client/meteorOverrides/login/saml.ts"],"names":[],"mappings":"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","sourcesContent":["import { Random } from '@rocket.chat/random';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../app/settings/client';\nimport { type LoginCallback, callLoginMethod, handleLogin } from '../../lib/2fa/overrideLoginMethod';\n\ndeclare module 'meteor/meteor' {\n\t// eslint-disable-next-line @typescript-eslint/no-namespace\n\tnamespace Meteor {\n\t\tfunction loginWithSamlToken(credentialToken: string, callback?: LoginCallback): void;\n\n\t\tfunction loginWithSaml(options: { provider: string; credentialToken?: string }): void;\n\t}\n}\n\ndeclare module 'meteor/accounts-base' {\n\t// eslint-disable-next-line @typescript-eslint/no-namespace\n\tnamespace Accounts {\n\t\texport let saml: {\n\t\t\tcredentialToken?: string;\n\t\t\tcredentialSecret?: string;\n\t\t};\n\n\t\t/**\n\t\t * There is one case where the onlogout event is triggered with no user:\n\t\t * during the deletion, the user is logged out, and the framework try to get the user from the database.\n\t\t */\n\t\tfunction onLogout(func: (options: { user?: Meteor.User; connection: Meteor.Connection }) => void): void;\n\t}\n}\n\ndeclare module 'meteor/service-configuration' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Configuration {\n\t\tlogoutBehaviour?: 'SAML' | 'Local';\n\t\tidpSLORedirectURL?: string;\n\t}\n}\n\nif (!Accounts.saml) {\n\tAccounts.saml = {};\n}\n\nconst { logout } = Meteor;\n\nMeteor.logout = async function (...args) {\n\tconst standardLogout = () => logout.apply(Meteor, args);\n\n\tif (!settings.get('SAML_Custom_Default')) {\n\t\treturn standardLogout();\n\t}\n\n\tif (settings.get('SAML_Custom_Default_logout_behaviour') === 'Local') {\n\t\tconsole.info('SAML session not terminated, only the Rocket.Chat session is going to be killed');\n\t\treturn standardLogout();\n\t}\n\n\tconst provider = settings.get('SAML_Custom_Default_provider');\n\n\tif (provider && settings.get('SAML_Custom_Default_idp_slo_redirect_url')) {\n\t\tconsole.info('SAML session terminated via SLO');\n\n\t\tconst { sdk } = await import('../../../app/utils/client/lib/SDKClient');\n\t\tsdk\n\t\t\t.call('samlLogout', provider)\n\t\t\t.then((result) => {\n\t\t\t\tif (!result) {\n\t\t\t\t\tlogout.apply(Meteor);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove the userId from the client to prevent calls to the server while the logout is processed.\n\t\t\t\t// If the logout fails, the userId will be reloaded on the resume call\n\t\t\t\tAccounts.storageLocation.removeItem(Accounts.USER_ID_KEY);\n\n\t\t\t\t// A nasty bounce: 'result' has the SAML LogoutRequest but we need a proper 302 to redirected from the server.\n\t\t\t\twindow.location.replace(Meteor.absoluteUrl(`_saml/sloRedirect/${provider}/?redirect=${encodeURIComponent(result)}`));\n\t\t\t})\n\t\t\t.catch(() => logout.apply(Meteor));\n\t\treturn;\n\t}\n\n\treturn standardLogout();\n};\n\nMeteor.loginWithSaml = (options) => {\n\toptions = options || {};\n\tconst credentialToken = `id-${Random.id()}`;\n\toptions.credentialToken = credentialToken;\n\n\twindow.location.href = `_saml/authorize/${options.provider}/${options.credentialToken}`;\n};\n\nconst loginWithSamlToken = (credentialToken: string) =>\n\tcallLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\tsaml: true,\n\t\t\t\tcredentialToken,\n\t\t\t},\n\t\t],\n\t});\n\nconst loginWithSamlTokenAndTOTP = (credentialToken: string, code: string) =>\n\tcallLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\ttotp: {\n\t\t\t\t\tlogin: {\n\t\t\t\t\t\tsaml: true,\n\t\t\t\t\t\tcredentialToken,\n\t\t\t\t\t},\n\t\t\t\t\tcode,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t});\n\nMeteor.loginWithSamlToken = handleLogin(loginWithSamlToken, loginWithSamlTokenAndTOTP);\n"]}}},"code":"let Random;\nmodule.link(\"@rocket.chat/random\", {\n  Random(v) {\n    Random = v;\n  }\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 2);\nlet settings;\nmodule.link(\"../../../app/settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n}, 3);\nlet callLoginMethod, handleLogin;\nmodule.link(\"../../lib/2fa/overrideLoginMethod\", {\n  callLoginMethod(v) {\n    callLoginMethod = v;\n  },\n  handleLogin(v) {\n    handleLogin = v;\n  }\n}, 4);\nif (!Accounts.saml) {\n  Accounts.saml = {};\n}\nconst {\n  logout\n} = Meteor;\nMeteor.logout = async function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  const standardLogout = () => logout.apply(Meteor, args);\n  if (!settings.get('SAML_Custom_Default')) {\n    return standardLogout();\n  }\n  if (settings.get('SAML_Custom_Default_logout_behaviour') === 'Local') {\n    console.info('SAML session not terminated, only the Rocket.Chat session is going to be killed');\n    return standardLogout();\n  }\n  const provider = settings.get('SAML_Custom_Default_provider');\n  if (provider && settings.get('SAML_Custom_Default_idp_slo_redirect_url')) {\n    console.info('SAML session terminated via SLO');\n    const {\n      sdk\n    } = await module.dynamicImport('../../../app/utils/client/lib/SDKClient');\n    sdk.call('samlLogout', provider).then(result => {\n      if (!result) {\n        logout.apply(Meteor);\n        return;\n      }\n      // Remove the userId from the client to prevent calls to the server while the logout is processed.\n      // If the logout fails, the userId will be reloaded on the resume call\n      Accounts.storageLocation.removeItem(Accounts.USER_ID_KEY);\n      // A nasty bounce: 'result' has the SAML LogoutRequest but we need a proper 302 to redirected from the server.\n      window.location.replace(Meteor.absoluteUrl(\"_saml/sloRedirect/\".concat(provider, \"/?redirect=\").concat(encodeURIComponent(result))));\n    }).catch(() => logout.apply(Meteor));\n    return;\n  }\n  return standardLogout();\n};\nMeteor.loginWithSaml = options => {\n  options = options || {};\n  const credentialToken = \"id-\".concat(Random.id());\n  options.credentialToken = credentialToken;\n  window.location.href = \"_saml/authorize/\".concat(options.provider, \"/\").concat(options.credentialToken);\n};\nconst loginWithSamlToken = credentialToken => callLoginMethod({\n  methodArguments: [{\n    saml: true,\n    credentialToken\n  }]\n});\nconst loginWithSamlTokenAndTOTP = (credentialToken, code) => callLoginMethod({\n  methodArguments: [{\n    totp: {\n      login: {\n        saml: true,\n        credentialToken\n      },\n      code\n    }\n  }]\n});\nMeteor.loginWithSamlToken = handleLogin(loginWithSamlToken, loginWithSamlTokenAndTOTP);","map":{"version":3,"names":["Random","module","link","v","Accounts","Meteor","settings","callLoginMethod","handleLogin","saml","logout","_len","arguments","length","args","Array","_key","standardLogout","apply","get","console","info","provider","sdk","dynamicImport","call","then","result","storageLocation","removeItem","USER_ID_KEY","window","location","replace","absoluteUrl","concat","encodeURIComponent","catch","loginWithSaml","options","credentialToken","id","href","loginWithSamlToken","methodArguments","loginWithSamlTokenAndTOTP","code","totp","login"],"sources":["client/meteorOverrides/login/saml.ts"],"sourcesContent":["import { Random } from '@rocket.chat/random';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../app/settings/client';\nimport { type LoginCallback, callLoginMethod, handleLogin } from '../../lib/2fa/overrideLoginMethod';\n\ndeclare module 'meteor/meteor' {\n\t// eslint-disable-next-line @typescript-eslint/no-namespace\n\tnamespace Meteor {\n\t\tfunction loginWithSamlToken(credentialToken: string, callback?: LoginCallback): void;\n\n\t\tfunction loginWithSaml(options: { provider: string; credentialToken?: string }): void;\n\t}\n}\n\ndeclare module 'meteor/accounts-base' {\n\t// eslint-disable-next-line @typescript-eslint/no-namespace\n\tnamespace Accounts {\n\t\texport let saml: {\n\t\t\tcredentialToken?: string;\n\t\t\tcredentialSecret?: string;\n\t\t};\n\n\t\t/**\n\t\t * There is one case where the onlogout event is triggered with no user:\n\t\t * during the deletion, the user is logged out, and the framework try to get the user from the database.\n\t\t */\n\t\tfunction onLogout(func: (options: { user?: Meteor.User; connection: Meteor.Connection }) => void): void;\n\t}\n}\n\ndeclare module 'meteor/service-configuration' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Configuration {\n\t\tlogoutBehaviour?: 'SAML' | 'Local';\n\t\tidpSLORedirectURL?: string;\n\t}\n}\n\nif (!Accounts.saml) {\n\tAccounts.saml = {};\n}\n\nconst { logout } = Meteor;\n\nMeteor.logout = async function (...args) {\n\tconst standardLogout = () => logout.apply(Meteor, args);\n\n\tif (!settings.get('SAML_Custom_Default')) {\n\t\treturn standardLogout();\n\t}\n\n\tif (settings.get('SAML_Custom_Default_logout_behaviour') === 'Local') {\n\t\tconsole.info('SAML session not terminated, only the Rocket.Chat session is going to be killed');\n\t\treturn standardLogout();\n\t}\n\n\tconst provider = settings.get('SAML_Custom_Default_provider');\n\n\tif (provider && settings.get('SAML_Custom_Default_idp_slo_redirect_url')) {\n\t\tconsole.info('SAML session terminated via SLO');\n\n\t\tconst { sdk } = await import('../../../app/utils/client/lib/SDKClient');\n\t\tsdk\n\t\t\t.call('samlLogout', provider)\n\t\t\t.then((result) => {\n\t\t\t\tif (!result) {\n\t\t\t\t\tlogout.apply(Meteor);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove the userId from the client to prevent calls to the server while the logout is processed.\n\t\t\t\t// If the logout fails, the userId will be reloaded on the resume call\n\t\t\t\tAccounts.storageLocation.removeItem(Accounts.USER_ID_KEY);\n\n\t\t\t\t// A nasty bounce: 'result' has the SAML LogoutRequest but we need a proper 302 to redirected from the server.\n\t\t\t\twindow.location.replace(Meteor.absoluteUrl(`_saml/sloRedirect/${provider}/?redirect=${encodeURIComponent(result)}`));\n\t\t\t})\n\t\t\t.catch(() => logout.apply(Meteor));\n\t\treturn;\n\t}\n\n\treturn standardLogout();\n};\n\nMeteor.loginWithSaml = (options) => {\n\toptions = options || {};\n\tconst credentialToken = `id-${Random.id()}`;\n\toptions.credentialToken = credentialToken;\n\n\twindow.location.href = `_saml/authorize/${options.provider}/${options.credentialToken}`;\n};\n\nconst loginWithSamlToken = (credentialToken: string) =>\n\tcallLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\tsaml: true,\n\t\t\t\tcredentialToken,\n\t\t\t},\n\t\t],\n\t});\n\nconst loginWithSamlTokenAndTOTP = (credentialToken: string, code: string) =>\n\tcallLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\ttotp: {\n\t\t\t\t\tlogin: {\n\t\t\t\t\t\tsaml: true,\n\t\t\t\t\t\tcredentialToken,\n\t\t\t\t\t},\n\t\t\t\t\tcode,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t});\n\nMeteor.loginWithSamlToken = handleLogin(loginWithSamlToken, loginWithSamlTokenAndTOTP);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a4cb5bc5183a67ac2bcc85c61676c0d23a21f0d4"}
