{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/slashcommands-archiveroom/server/server.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/slashcommands-archiveroom/server/server.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/slashcommands-archiveroom/server/server.ts","inputSourceMap":{"version":3,"file":"app/slashcommands-archiveroom/server/server.ts","sourceRoot":"","sources":["app/slashcommands-archiveroom/server/server.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { SlashCommandCallbackParams } from '@rocket.chat/core-typings';\nimport { isRegisterUser } from '@rocket.chat/core-typings';\nimport { Users, Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { RoomMemberActions } from '../../../definition/IRoomTypeConfig';\nimport { i18n } from '../../../server/lib/i18n';\nimport { roomCoordinator } from '../../../server/lib/rooms/roomCoordinator';\nimport { hasPermissionAsync } from '../../authorization/server/functions/hasPermission';\nimport { archiveRoom } from '../../lib/server/functions/archiveRoom';\nimport { settings } from '../../settings/server';\nimport { slashCommands } from '../../utils/server/slashCommand';\n\nslashCommands.add({\n\tcommand: 'archive',\n\tcallback: async function Archive({ params, message, userId }: SlashCommandCallbackParams<'archive'>): Promise<void> {\n\t\tlet channel = params.trim();\n\n\t\tlet room;\n\n\t\tif (channel === '') {\n\t\t\troom = await Rooms.findOneById(message.rid);\n\t\t\tif (room?.name) {\n\t\t\t\tchannel = room.name;\n\t\t\t}\n\t\t} else {\n\t\t\tchannel = channel.replace('#', '');\n\t\t\troom = await Rooms.findOneByName(channel);\n\t\t}\n\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = await Users.findOneById(userId, { projection: { username: 1, name: 1 } });\n\t\tif (!user || !isRegisterUser(user)) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'archiveRoom' });\n\t\t}\n\n\t\tif (!room) {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Channel_doesnt_exist', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t\t}),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(await roomCoordinator.getRoomDirectives(room.t).allowMemberAction(room, RoomMemberActions.ARCHIVE, userId))) {\n\t\t\tthrow new Meteor.Error('error-room-type-not-archivable', `Room type: ${room.t} can not be archived`);\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'archive-room', room._id))) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized');\n\t\t}\n\n\t\tif (room.archived) {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Duplicate_archived_channel_name', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t\t}),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tawait archiveRoom(room._id, user);\n\n\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\tmsg: i18n.t('Channel_Archived', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel],\n\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t}),\n\t\t});\n\t},\n\toptions: {\n\t\tdescription: 'Archive',\n\t\tparams: '#channel',\n\t\tpermission: 'archive-room',\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/slashcommands-archiveroom/server/server.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/slashcommands-archiveroom/server/server.ts","inputSourceMap":{"version":3,"file":"app/slashcommands-archiveroom/server/server.ts","sourceRoot":"","sources":["app/slashcommands-archiveroom/server/server.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { SlashCommandCallbackParams } from '@rocket.chat/core-typings';\nimport { isRegisterUser } from '@rocket.chat/core-typings';\nimport { Users, Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { RoomMemberActions } from '../../../definition/IRoomTypeConfig';\nimport { i18n } from '../../../server/lib/i18n';\nimport { roomCoordinator } from '../../../server/lib/rooms/roomCoordinator';\nimport { hasPermissionAsync } from '../../authorization/server/functions/hasPermission';\nimport { archiveRoom } from '../../lib/server/functions/archiveRoom';\nimport { settings } from '../../settings/server';\nimport { slashCommands } from '../../utils/server/slashCommand';\n\nslashCommands.add({\n\tcommand: 'archive',\n\tcallback: async function Archive({ params, message, userId }: SlashCommandCallbackParams<'archive'>): Promise<void> {\n\t\tlet channel = params.trim();\n\n\t\tlet room;\n\n\t\tif (channel === '') {\n\t\t\troom = await Rooms.findOneById(message.rid);\n\t\t\tif (room?.name) {\n\t\t\t\tchannel = room.name;\n\t\t\t}\n\t\t} else {\n\t\t\tchannel = channel.replace('#', '');\n\t\t\troom = await Rooms.findOneByName(channel);\n\t\t}\n\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = await Users.findOneById(userId, { projection: { username: 1, name: 1 } });\n\t\tif (!user || !isRegisterUser(user)) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'archiveRoom' });\n\t\t}\n\n\t\tif (!room) {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Channel_doesnt_exist', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t\t}),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(await roomCoordinator.getRoomDirectives(room.t).allowMemberAction(room, RoomMemberActions.ARCHIVE, userId))) {\n\t\t\tthrow new Meteor.Error('error-room-type-not-archivable', `Room type: ${room.t} can not be archived`);\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'archive-room', room._id))) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized');\n\t\t}\n\n\t\tif (room.archived) {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Duplicate_archived_channel_name', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t\t}),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tawait archiveRoom(room._id, user);\n\n\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\tmsg: i18n.t('Channel_Archived', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel],\n\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t}),\n\t\t});\n\t},\n\toptions: {\n\t\tdescription: 'Archive',\n\t\tparams: '#channel',\n\t\tpermission: 'archive-room',\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let isRegisterUser;\n    module.link(\"@rocket.chat/core-typings\", {\n      isRegisterUser(v) {\n        isRegisterUser = v;\n      }\n    }, 1);\n    let Users, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let RoomMemberActions;\n    module.link(\"../../../definition/IRoomTypeConfig\", {\n      RoomMemberActions(v) {\n        RoomMemberActions = v;\n      }\n    }, 4);\n    let i18n;\n    module.link(\"../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 5);\n    let roomCoordinator;\n    module.link(\"../../../server/lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 6);\n    let hasPermissionAsync;\n    module.link(\"../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 7);\n    let archiveRoom;\n    module.link(\"../../lib/server/functions/archiveRoom\", {\n      archiveRoom(v) {\n        archiveRoom = v;\n      }\n    }, 8);\n    let settings;\n    module.link(\"../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 9);\n    let slashCommands;\n    module.link(\"../../utils/server/slashCommand\", {\n      slashCommands(v) {\n        slashCommands = v;\n      }\n    }, 10);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    slashCommands.add({\n      command: 'archive',\n      callback: async function Archive(_ref) {\n        let {\n          params,\n          message,\n          userId\n        } = _ref;\n        let channel = params.trim();\n        let room;\n        if (channel === '') {\n          var _room;\n          room = await Rooms.findOneById(message.rid);\n          if ((_room = room) !== null && _room !== void 0 && _room.name) {\n            channel = room.name;\n          }\n        } else {\n          channel = channel.replace('#', '');\n          room = await Rooms.findOneByName(channel);\n        }\n        if (!userId) {\n          return;\n        }\n        const user = await Users.findOneById(userId, {\n          projection: {\n            username: 1,\n            name: 1\n          }\n        });\n        if (!user || !isRegisterUser(user)) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'archiveRoom'\n          });\n        }\n        if (!room) {\n          void api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n            msg: i18n.t('Channel_doesnt_exist', {\n              postProcess: 'sprintf',\n              sprintf: [channel],\n              lng: settings.get('Language') || 'en'\n            })\n          });\n          return;\n        }\n        if (!(await roomCoordinator.getRoomDirectives(room.t).allowMemberAction(room, RoomMemberActions.ARCHIVE, userId))) {\n          throw new Meteor.Error('error-room-type-not-archivable', \"Room type: \".concat(room.t, \" can not be archived\"));\n        }\n        if (!(await hasPermissionAsync(userId, 'archive-room', room._id))) {\n          throw new Meteor.Error('error-not-authorized', 'Not authorized');\n        }\n        if (room.archived) {\n          void api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n            msg: i18n.t('Duplicate_archived_channel_name', {\n              postProcess: 'sprintf',\n              sprintf: [channel],\n              lng: settings.get('Language') || 'en'\n            })\n          });\n          return;\n        }\n        await archiveRoom(room._id, user);\n        void api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n          msg: i18n.t('Channel_Archived', {\n            postProcess: 'sprintf',\n            sprintf: [channel],\n            lng: settings.get('Language') || 'en'\n          })\n        });\n      },\n      options: {\n        description: 'Archive',\n        params: '#channel',\n        permission: 'archive-room'\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["api","module","link","v","isRegisterUser","Users","Rooms","Meteor","RoomMemberActions","i18n","roomCoordinator","hasPermissionAsync","archiveRoom","settings","slashCommands","__reifyWaitForDeps__","add","command","callback","Archive","_ref","params","message","userId","channel","trim","room","_room","findOneById","rid","name","replace","findOneByName","user","projection","username","Error","method","broadcast","msg","t","postProcess","sprintf","lng","get","getRoomDirectives","allowMemberAction","ARCHIVE","concat","_id","archived","options","description","permission","__reify_async_result__","_reifyError","self","async"],"sources":["app/slashcommands-archiveroom/server/server.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { SlashCommandCallbackParams } from '@rocket.chat/core-typings';\nimport { isRegisterUser } from '@rocket.chat/core-typings';\nimport { Users, Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { RoomMemberActions } from '../../../definition/IRoomTypeConfig';\nimport { i18n } from '../../../server/lib/i18n';\nimport { roomCoordinator } from '../../../server/lib/rooms/roomCoordinator';\nimport { hasPermissionAsync } from '../../authorization/server/functions/hasPermission';\nimport { archiveRoom } from '../../lib/server/functions/archiveRoom';\nimport { settings } from '../../settings/server';\nimport { slashCommands } from '../../utils/server/slashCommand';\n\nslashCommands.add({\n\tcommand: 'archive',\n\tcallback: async function Archive({ params, message, userId }: SlashCommandCallbackParams<'archive'>): Promise<void> {\n\t\tlet channel = params.trim();\n\n\t\tlet room;\n\n\t\tif (channel === '') {\n\t\t\troom = await Rooms.findOneById(message.rid);\n\t\t\tif (room?.name) {\n\t\t\t\tchannel = room.name;\n\t\t\t}\n\t\t} else {\n\t\t\tchannel = channel.replace('#', '');\n\t\t\troom = await Rooms.findOneByName(channel);\n\t\t}\n\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = await Users.findOneById(userId, { projection: { username: 1, name: 1 } });\n\t\tif (!user || !isRegisterUser(user)) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'archiveRoom' });\n\t\t}\n\n\t\tif (!room) {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Channel_doesnt_exist', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t\t}),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(await roomCoordinator.getRoomDirectives(room.t).allowMemberAction(room, RoomMemberActions.ARCHIVE, userId))) {\n\t\t\tthrow new Meteor.Error('error-room-type-not-archivable', `Room type: ${room.t} can not be archived`);\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'archive-room', room._id))) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized');\n\t\t}\n\n\t\tif (room.archived) {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Duplicate_archived_channel_name', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t\t}),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tawait archiveRoom(room._id, user);\n\n\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\tmsg: i18n.t('Channel_Archived', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel],\n\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t}),\n\t\t});\n\t},\n\toptions: {\n\t\tdescription: 'Archive',\n\t\tparams: '#channel',\n\t\tpermission: 'archive-room',\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0b09104f4c319d2a0f23bfae111866f84a03a4e3"}
