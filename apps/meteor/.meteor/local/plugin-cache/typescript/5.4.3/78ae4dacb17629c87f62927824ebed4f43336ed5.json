{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/integrations/server/lib/mountQueriesBasedOnPermission.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/integrations/server/lib/mountQueriesBasedOnPermission.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/integrations/server/lib/mountQueriesBasedOnPermission.ts","inputSourceMap":{"version":3,"file":"app/integrations/server/lib/mountQueriesBasedOnPermission.ts","sourceRoot":"","sources":["app/integrations/server/lib/mountQueriesBasedOnPermission.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,uDAAuD,CAAC;AAE3F,MAAM,CAAC,MAAM,uCAAuC,GAAG,KAAK,EAAE,MAAc,EAAE,EAAE;IAC/E,IAAI,CAAC,MAAM,EAAE,CAAC;QACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,wFAAwF,CAAC,CAAC;IAClH,CAAC;IACD,MAAM,8BAA8B,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,8BAA8B,CAAC,CAAC;IACxG,MAAM,8BAA8B,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,8BAA8B,CAAC,CAAC;IACxG,MAAM,kCAAkC,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,kCAAkC,CAAC,CAAC;IAChH,MAAM,kCAAkC,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,kCAAkC,CAAC,CAAC;IAEhH,MAAM,KAAK,GAA8B,EAAE,CAAC;IAE5C,IAAI,8BAA8B,IAAI,8BAA8B,EAAE,CAAC;QACtE,OAAO,KAAK,CAAC;IACd,CAAC;IACD,IAAI,kCAAkC,IAAI,kCAAkC,EAAE,CAAC;QAC9E,OAAO,EAAE,gBAAgB,EAAE,MAAM,EAAE,CAAC;IACrC,CAAC;IACD,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;IAEf,IAAI,8BAA8B,EAAE,CAAC;QACpC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC9C,CAAC;IACD,IAAI,8BAA8B,EAAE,CAAC;QACpC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC9C,CAAC;IACD,IAAI,kCAAkC,EAAE,CAAC;QACxC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC1E,CAAC;IACD,IAAI,kCAAkC,EAAE,CAAC;QACxC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC1E,CAAC;IACD,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,8CAA8C,GAAG,KAAK,EAAE,MAAc,EAAE,aAAqB,EAAE,EAAE;IAC7G,IAAI,CAAC,MAAM,EAAE,CAAC;QACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,+FAA+F,CAAC,CAAC;IACzH,CAAC;IACD,IAAI,CAAC,aAAa,EAAE,CAAC;QACpB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,sGAAsG,CAAC,CAAC;IAChI,CAAC;IAED,MAAM,kCAAkC,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,kCAAkC,CAAC,CAAC;IAChH,MAAM,8BAA8B,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,8BAA8B,CAAC,CAAC;IACxG,IAAI,CAAC,8BAA8B,IAAI,kCAAkC,EAAE,CAAC;QAC3E,OAAO,EAAE,iBAAiB,EAAE,aAAa,EAAE,4BAA4B,EAAE,MAAM,EAAE,CAAC;IACnF,CAAC;IACD,OAAO,EAAE,iBAAiB,EAAE,aAAa,EAAE,CAAC;AAC7C,CAAC,CAAC","sourcesContent":["import type { DeepWritable } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter } from 'mongodb';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\n\nexport const mountIntegrationQueryBasedOnPermissions = async (userId: string) => {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('You must provide the userId to the \"mountIntegrationQueryBasedOnPermissions\" function.');\n\t}\n\tconst canViewAllOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-outgoing-integrations');\n\tconst canViewAllIncomingIntegrations = await hasPermissionAsync(userId, 'manage-incoming-integrations');\n\tconst canViewOnlyOwnOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-own-outgoing-integrations');\n\tconst canViewOnlyOwnIncomingIntegrations = await hasPermissionAsync(userId, 'manage-own-incoming-integrations');\n\n\tconst query: DeepWritable<Filter<any>> = {};\n\n\tif (canViewAllOutgoingIntegrations && canViewAllIncomingIntegrations) {\n\t\treturn query;\n\t}\n\tif (canViewOnlyOwnOutgoingIntegrations && canViewOnlyOwnIncomingIntegrations) {\n\t\treturn { '_createdBy._id': userId };\n\t}\n\tquery.$or = [];\n\n\tif (canViewAllOutgoingIntegrations) {\n\t\tquery.$or.push({ type: 'webhook-outgoing' });\n\t}\n\tif (canViewAllIncomingIntegrations) {\n\t\tquery.$or.push({ type: 'webhook-incoming' });\n\t}\n\tif (canViewOnlyOwnOutgoingIntegrations) {\n\t\tquery.$or.push({ '_createdBy._id': userId, 'type': 'webhook-outgoing' });\n\t}\n\tif (canViewOnlyOwnIncomingIntegrations) {\n\t\tquery.$or.push({ '_createdBy._id': userId, 'type': 'webhook-incoming' });\n\t}\n\treturn query;\n};\n\nexport const mountIntegrationHistoryQueryBasedOnPermissions = async (userId: string, integrationId: string) => {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('You must provide the userId to the \"mountIntegrationHistoryQueryBasedOnPermissions\" fucntion.');\n\t}\n\tif (!integrationId) {\n\t\tthrow new Meteor.Error('You must provide the integrationId to the \"mountIntegrationHistoryQueryBasedOnPermissions\" fucntion.');\n\t}\n\n\tconst canViewOnlyOwnOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-own-outgoing-integrations');\n\tconst canViewAllOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-outgoing-integrations');\n\tif (!canViewAllOutgoingIntegrations && canViewOnlyOwnOutgoingIntegrations) {\n\t\treturn { 'integration._id': integrationId, 'integration._createdBy._id': userId };\n\t}\n\treturn { 'integration._id': integrationId };\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/integrations/server/lib/mountQueriesBasedOnPermission.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/integrations/server/lib/mountQueriesBasedOnPermission.ts","inputSourceMap":{"version":3,"file":"app/integrations/server/lib/mountQueriesBasedOnPermission.ts","sourceRoot":"","sources":["app/integrations/server/lib/mountQueriesBasedOnPermission.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,uDAAuD,CAAC;AAE3F,MAAM,CAAC,MAAM,uCAAuC,GAAG,KAAK,EAAE,MAAc,EAAE,EAAE;IAC/E,IAAI,CAAC,MAAM,EAAE,CAAC;QACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,wFAAwF,CAAC,CAAC;IAClH,CAAC;IACD,MAAM,8BAA8B,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,8BAA8B,CAAC,CAAC;IACxG,MAAM,8BAA8B,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,8BAA8B,CAAC,CAAC;IACxG,MAAM,kCAAkC,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,kCAAkC,CAAC,CAAC;IAChH,MAAM,kCAAkC,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,kCAAkC,CAAC,CAAC;IAEhH,MAAM,KAAK,GAA8B,EAAE,CAAC;IAE5C,IAAI,8BAA8B,IAAI,8BAA8B,EAAE,CAAC;QACtE,OAAO,KAAK,CAAC;IACd,CAAC;IACD,IAAI,kCAAkC,IAAI,kCAAkC,EAAE,CAAC;QAC9E,OAAO,EAAE,gBAAgB,EAAE,MAAM,EAAE,CAAC;IACrC,CAAC;IACD,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;IAEf,IAAI,8BAA8B,EAAE,CAAC;QACpC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC9C,CAAC;IACD,IAAI,8BAA8B,EAAE,CAAC;QACpC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC9C,CAAC;IACD,IAAI,kCAAkC,EAAE,CAAC;QACxC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC1E,CAAC;IACD,IAAI,kCAAkC,EAAE,CAAC;QACxC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC1E,CAAC;IACD,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,8CAA8C,GAAG,KAAK,EAAE,MAAc,EAAE,aAAqB,EAAE,EAAE;IAC7G,IAAI,CAAC,MAAM,EAAE,CAAC;QACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,+FAA+F,CAAC,CAAC;IACzH,CAAC;IACD,IAAI,CAAC,aAAa,EAAE,CAAC;QACpB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,sGAAsG,CAAC,CAAC;IAChI,CAAC;IAED,MAAM,kCAAkC,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,kCAAkC,CAAC,CAAC;IAChH,MAAM,8BAA8B,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,8BAA8B,CAAC,CAAC;IACxG,IAAI,CAAC,8BAA8B,IAAI,kCAAkC,EAAE,CAAC;QAC3E,OAAO,EAAE,iBAAiB,EAAE,aAAa,EAAE,4BAA4B,EAAE,MAAM,EAAE,CAAC;IACnF,CAAC;IACD,OAAO,EAAE,iBAAiB,EAAE,aAAa,EAAE,CAAC;AAC7C,CAAC,CAAC","sourcesContent":["import type { DeepWritable } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter } from 'mongodb';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\n\nexport const mountIntegrationQueryBasedOnPermissions = async (userId: string) => {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('You must provide the userId to the \"mountIntegrationQueryBasedOnPermissions\" function.');\n\t}\n\tconst canViewAllOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-outgoing-integrations');\n\tconst canViewAllIncomingIntegrations = await hasPermissionAsync(userId, 'manage-incoming-integrations');\n\tconst canViewOnlyOwnOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-own-outgoing-integrations');\n\tconst canViewOnlyOwnIncomingIntegrations = await hasPermissionAsync(userId, 'manage-own-incoming-integrations');\n\n\tconst query: DeepWritable<Filter<any>> = {};\n\n\tif (canViewAllOutgoingIntegrations && canViewAllIncomingIntegrations) {\n\t\treturn query;\n\t}\n\tif (canViewOnlyOwnOutgoingIntegrations && canViewOnlyOwnIncomingIntegrations) {\n\t\treturn { '_createdBy._id': userId };\n\t}\n\tquery.$or = [];\n\n\tif (canViewAllOutgoingIntegrations) {\n\t\tquery.$or.push({ type: 'webhook-outgoing' });\n\t}\n\tif (canViewAllIncomingIntegrations) {\n\t\tquery.$or.push({ type: 'webhook-incoming' });\n\t}\n\tif (canViewOnlyOwnOutgoingIntegrations) {\n\t\tquery.$or.push({ '_createdBy._id': userId, 'type': 'webhook-outgoing' });\n\t}\n\tif (canViewOnlyOwnIncomingIntegrations) {\n\t\tquery.$or.push({ '_createdBy._id': userId, 'type': 'webhook-incoming' });\n\t}\n\treturn query;\n};\n\nexport const mountIntegrationHistoryQueryBasedOnPermissions = async (userId: string, integrationId: string) => {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('You must provide the userId to the \"mountIntegrationHistoryQueryBasedOnPermissions\" fucntion.');\n\t}\n\tif (!integrationId) {\n\t\tthrow new Meteor.Error('You must provide the integrationId to the \"mountIntegrationHistoryQueryBasedOnPermissions\" fucntion.');\n\t}\n\n\tconst canViewOnlyOwnOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-own-outgoing-integrations');\n\tconst canViewAllOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-outgoing-integrations');\n\tif (!canViewAllOutgoingIntegrations && canViewOnlyOwnOutgoingIntegrations) {\n\t\treturn { 'integration._id': integrationId, 'integration._createdBy._id': userId };\n\t}\n\treturn { 'integration._id': integrationId };\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      mountIntegrationQueryBasedOnPermissions: () => mountIntegrationQueryBasedOnPermissions,\n      mountIntegrationHistoryQueryBasedOnPermissions: () => mountIntegrationHistoryQueryBasedOnPermissions\n    });\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 0);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const mountIntegrationQueryBasedOnPermissions = async userId => {\n      if (!userId) {\n        throw new Meteor.Error('You must provide the userId to the \"mountIntegrationQueryBasedOnPermissions\" function.');\n      }\n      const canViewAllOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-outgoing-integrations');\n      const canViewAllIncomingIntegrations = await hasPermissionAsync(userId, 'manage-incoming-integrations');\n      const canViewOnlyOwnOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-own-outgoing-integrations');\n      const canViewOnlyOwnIncomingIntegrations = await hasPermissionAsync(userId, 'manage-own-incoming-integrations');\n      const query = {};\n      if (canViewAllOutgoingIntegrations && canViewAllIncomingIntegrations) {\n        return query;\n      }\n      if (canViewOnlyOwnOutgoingIntegrations && canViewOnlyOwnIncomingIntegrations) {\n        return {\n          '_createdBy._id': userId\n        };\n      }\n      query.$or = [];\n      if (canViewAllOutgoingIntegrations) {\n        query.$or.push({\n          type: 'webhook-outgoing'\n        });\n      }\n      if (canViewAllIncomingIntegrations) {\n        query.$or.push({\n          type: 'webhook-incoming'\n        });\n      }\n      if (canViewOnlyOwnOutgoingIntegrations) {\n        query.$or.push({\n          '_createdBy._id': userId,\n          'type': 'webhook-outgoing'\n        });\n      }\n      if (canViewOnlyOwnIncomingIntegrations) {\n        query.$or.push({\n          '_createdBy._id': userId,\n          'type': 'webhook-incoming'\n        });\n      }\n      return query;\n    };\n    const mountIntegrationHistoryQueryBasedOnPermissions = async (userId, integrationId) => {\n      if (!userId) {\n        throw new Meteor.Error('You must provide the userId to the \"mountIntegrationHistoryQueryBasedOnPermissions\" fucntion.');\n      }\n      if (!integrationId) {\n        throw new Meteor.Error('You must provide the integrationId to the \"mountIntegrationHistoryQueryBasedOnPermissions\" fucntion.');\n      }\n      const canViewOnlyOwnOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-own-outgoing-integrations');\n      const canViewAllOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-outgoing-integrations');\n      if (!canViewAllOutgoingIntegrations && canViewOnlyOwnOutgoingIntegrations) {\n        return {\n          'integration._id': integrationId,\n          'integration._createdBy._id': userId\n        };\n      }\n      return {\n        'integration._id': integrationId\n      };\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","mountIntegrationQueryBasedOnPermissions","mountIntegrationHistoryQueryBasedOnPermissions","Meteor","link","v","hasPermissionAsync","__reifyWaitForDeps__","userId","Error","canViewAllOutgoingIntegrations","canViewAllIncomingIntegrations","canViewOnlyOwnOutgoingIntegrations","canViewOnlyOwnIncomingIntegrations","query","$or","push","type","integrationId","__reify_async_result__","_reifyError","self","async"],"sources":["app/integrations/server/lib/mountQueriesBasedOnPermission.ts"],"sourcesContent":["import type { DeepWritable } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter } from 'mongodb';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\n\nexport const mountIntegrationQueryBasedOnPermissions = async (userId: string) => {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('You must provide the userId to the \"mountIntegrationQueryBasedOnPermissions\" function.');\n\t}\n\tconst canViewAllOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-outgoing-integrations');\n\tconst canViewAllIncomingIntegrations = await hasPermissionAsync(userId, 'manage-incoming-integrations');\n\tconst canViewOnlyOwnOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-own-outgoing-integrations');\n\tconst canViewOnlyOwnIncomingIntegrations = await hasPermissionAsync(userId, 'manage-own-incoming-integrations');\n\n\tconst query: DeepWritable<Filter<any>> = {};\n\n\tif (canViewAllOutgoingIntegrations && canViewAllIncomingIntegrations) {\n\t\treturn query;\n\t}\n\tif (canViewOnlyOwnOutgoingIntegrations && canViewOnlyOwnIncomingIntegrations) {\n\t\treturn { '_createdBy._id': userId };\n\t}\n\tquery.$or = [];\n\n\tif (canViewAllOutgoingIntegrations) {\n\t\tquery.$or.push({ type: 'webhook-outgoing' });\n\t}\n\tif (canViewAllIncomingIntegrations) {\n\t\tquery.$or.push({ type: 'webhook-incoming' });\n\t}\n\tif (canViewOnlyOwnOutgoingIntegrations) {\n\t\tquery.$or.push({ '_createdBy._id': userId, 'type': 'webhook-outgoing' });\n\t}\n\tif (canViewOnlyOwnIncomingIntegrations) {\n\t\tquery.$or.push({ '_createdBy._id': userId, 'type': 'webhook-incoming' });\n\t}\n\treturn query;\n};\n\nexport const mountIntegrationHistoryQueryBasedOnPermissions = async (userId: string, integrationId: string) => {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('You must provide the userId to the \"mountIntegrationHistoryQueryBasedOnPermissions\" fucntion.');\n\t}\n\tif (!integrationId) {\n\t\tthrow new Meteor.Error('You must provide the integrationId to the \"mountIntegrationHistoryQueryBasedOnPermissions\" fucntion.');\n\t}\n\n\tconst canViewOnlyOwnOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-own-outgoing-integrations');\n\tconst canViewAllOutgoingIntegrations = await hasPermissionAsync(userId, 'manage-outgoing-integrations');\n\tif (!canViewAllOutgoingIntegrations && canViewOnlyOwnOutgoingIntegrations) {\n\t\treturn { 'integration._id': integrationId, 'integration._createdBy._id': userId };\n\t}\n\treturn { 'integration._id': integrationId };\n};\n"],"mappings":";;;IACAA,MAAA,CAAOC,MAAE;MAAMC,uCAAwB,EAAAA,CAAA,KAAAA,uCAAA;MAAAC,8CAAA,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,MAAA;IAAAJ,MAAA,CAAAK,IAAA;MAAAD,OAAAE,CAAA;QAAAF,MAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,kBAAA;IAAAP,MAAA,CAAAK,IAAA;MAAAE,mBAAAD,CAAA;QAAAC,kBAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,oBAAA,WAAAA,oBAAA;IAKhC,MAAMN,uCAAuC,GAAG,MAAOO,MAAc,IAAI;MAC/E,IAAI,CAACA,MAAM,EAAE;QACZ,MAAM,IAAIL,MAAM,CAACM,KAAK,CAAC,wFAAwF,CAAC;MACjH;MACA,MAAMC,8BAA8B,GAAG,MAAMJ,kBAAkB,CAACE,MAAM,EAAE,8BAA8B,CAAC;MACvG,MAAMG,8BAA8B,GAAG,MAAML,kBAAkB,CAACE,MAAM,EAAE,8BAA8B,CAAC;MACvG,MAAMI,kCAAkC,GAAG,MAAMN,kBAAkB,CAACE,MAAM,EAAE,kCAAkC,CAAC;MAC/G,MAAMK,kCAAkC,GAAG,MAAMP,kBAAkB,CAACE,MAAM,EAAE,kCAAkC,CAAC;MAE/G,MAAMM,KAAK,GAA8B,EAAE;MAE3C,IAAIJ,8BAA8B,IAAIC,8BAA8B,EAAE;QACrE,OAAOG,KAAK;MACb;MACA,IAAIF,kCAAkC,IAAIC,kCAAkC,EAAE;QAC7E,OAAO;UAAE,gBAAgB,EAAEL;QAAM,CAAE;MACpC;MACAM,KAAK,CAACC,GAAG,GAAG,EAAE;MAEd,IAAIL,8BAA8B,EAAE;QACnCI,KAAK,CAACC,GAAG,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAkB,CAAE,CAAC;MAC7C;MACA,IAAIN,8BAA8B,EAAE;QACnCG,KAAK,CAACC,GAAG,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAkB,CAAE,CAAC;MAC7C;MACA,IAAIL,kCAAkC,EAAE;QACvCE,KAAK,CAACC,GAAG,CAACC,IAAI,CAAC;UAAE,gBAAgB,EAAER,MAAM;UAAE,MAAM,EAAE;QAAkB,CAAE,CAAC;MACzE;MACA,IAAIK,kCAAkC,EAAE;QACvCC,KAAK,CAACC,GAAG,CAACC,IAAI,CAAC;UAAE,gBAAgB,EAAER,MAAM;UAAE,MAAM,EAAE;QAAkB,CAAE,CAAC;MACzE;MACA,OAAOM,KAAK;IACb,CAAC;IAEM,MAAMZ,8CAA8C,GAAG,MAAAA,CAAOM,MAAc,EAAEU,aAAqB,KAAI;MAC7G,IAAI,CAACV,MAAM,EAAE;QACZ,MAAM,IAAIL,MAAM,CAACM,KAAK,CAAC,+FAA+F,CAAC;MACxH;MACA,IAAI,CAACS,aAAa,EAAE;QACnB,MAAM,IAAIf,MAAM,CAACM,KAAK,CAAC,sGAAsG,CAAC;MAC/H;MAEA,MAAMG,kCAAkC,GAAG,MAAMN,kBAAkB,CAACE,MAAM,EAAE,kCAAkC,CAAC;MAC/G,MAAME,8BAA8B,GAAG,MAAMJ,kBAAkB,CAACE,MAAM,EAAE,8BAA8B,CAAC;MACvG,IAAI,CAACE,8BAA8B,IAAIE,kCAAkC,EAAE;QAC1E,OAAO;UAAE,iBAAiB,EAAEM,aAAa;UAAE,4BAA4B,EAAEV;QAAM,CAAE;MAClF;MACA,OAAO;QAAE,iBAAiB,EAAEU;MAAa,CAAE;IAC5C,CAAC;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"78ae4dacb17629c87f62927824ebed4f43336ed5"}
