{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/RoomHistoryManager.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/ui-utils/client/lib/RoomHistoryManager.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/RoomHistoryManager.ts","inputSourceMap":{"version":3,"file":"app/ui-utils/client/lib/RoomHistoryManager.ts","sourceRoot":"","sources":["app/ui-utils/client/lib/RoomHistoryManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\nimport type { MutableRefObject } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport type { MinimongoCollection } from '../../../../client/definitions/MinimongoCollection';\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { waitForElement } from '../../../../client/lib/utils/waitForElement';\nimport { ChatMessage, ChatSubscription } from '../../../models/client';\nimport { getUserPreference } from '../../../utils/client';\n\nexport async function upsertMessage(\n\t{\n\t\tmsg,\n\t\tsubscription,\n\t}: {\n\t\tmsg: IMessage & { ignored?: boolean };\n\t\tsubscription?: ISubscription;\n\t},\n\tcollection: MinimongoCollection<IMessage> = ChatMessage,\n) {\n\tconst userId = msg.u?._id;\n\n\tif (subscription?.ignored?.includes(userId)) {\n\t\tmsg.ignored = true;\n\t}\n\n\tif (msg.t === 'e2e' && !msg.file) {\n\t\tmsg.e2e = 'pending';\n\t}\n\tmsg = (await onClientMessageReceived(msg)) || msg;\n\n\tconst { _id } = msg;\n\n\treturn collection.upsert({ _id }, msg);\n}\n\nexport function upsertMessageBulk(\n\t{ msgs, subscription }: { msgs: IMessage[]; subscription?: ISubscription },\n\tcollection: MinimongoCollection<IMessage> = ChatMessage,\n) {\n\tconst { queries } = collection;\n\tcollection.queries = [];\n\tmsgs.forEach((msg, index) => {\n\t\tif (index === msgs.length - 1) {\n\t\t\tcollection.queries = queries;\n\t\t}\n\t\tvoid upsertMessage({ msg, subscription }, collection);\n\t});\n}\n\nconst defaultLimit = parseInt(getConfig('roomListLimit') ?? '50') || 50;\n\nconst waitAfterFlush = (fn: () => void) => setTimeout(() => Tracker.afterFlush(fn), 10);\n\nclass RoomHistoryManagerClass extends Emitter {\n\tprivate lastRequest?: Date;\n\n\tprivate histories: Record<\n\t\tIRoom['_id'],\n\t\t{\n\t\t\thasMore: ReactiveVar<boolean>;\n\t\t\thasMoreNext: ReactiveVar<boolean>;\n\t\t\tisLoading: ReactiveVar<boolean>;\n\t\t\tunreadNotLoaded: ReactiveVar<number>;\n\t\t\tfirstUnread: ReactiveVar<IMessage | undefined>;\n\t\t\tloaded: number | undefined;\n\t\t\toldestTs?: Date;\n\t\t}\n\t> = {};\n\n\tprivate requestsList: string[] = [];\n\n\tpublic getRoom(rid: IRoom['_id']) {\n\t\tif (!this.histories[rid]) {\n\t\t\tthis.histories[rid] = {\n\t\t\t\thasMore: new ReactiveVar(true),\n\t\t\t\thasMoreNext: new ReactiveVar(false),\n\t\t\t\tisLoading: new ReactiveVar(false),\n\t\t\t\tunreadNotLoaded: new ReactiveVar(0),\n\t\t\t\tfirstUnread: new ReactiveVar(undefined),\n\t\t\t\tloaded: undefined,\n\t\t\t};\n\t\t}\n\n\t\treturn this.histories[rid];\n\t}\n\n\tprivate async queue(): Promise<void> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst requestId = uuidv4();\n\t\t\tconst done = () => {\n\t\t\t\tthis.lastRequest = new Date();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tif (this.requestsList.length === 0) {\n\t\t\t\treturn this.run(done);\n\t\t\t}\n\t\t\tthis.requestsList.push(requestId);\n\t\t\tthis.once(requestId, done);\n\t\t});\n\t}\n\n\tprivate run(fn: () => void) {\n\t\tconst difference = this.lastRequest ? differenceInMilliseconds(new Date(), this.lastRequest) : Infinity;\n\t\tif (difference > 500) {\n\t\t\treturn fn();\n\t\t}\n\t\treturn setTimeout(fn, 500 - difference);\n\t}\n\n\tprivate unqueue() {\n\t\tconst requestId = this.requestsList.pop();\n\t\tif (!requestId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.run(() => this.emit(requestId));\n\t}\n\n\tpublic async getMore(rid: IRoom['_id'], limit = defaultLimit): Promise<void> {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (Tracker.nonreactive(() => room.hasMore.get()) !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\troom.isLoading.set(true);\n\n\t\tawait this.queue();\n\n\t\tlet ls = undefined;\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\tif (subscription) {\n\t\t\t({ ls } = subscription);\n\t\t}\n\n\t\tconst showThreadsInMainChannel = getUserPreference(Meteor.userId(), 'showThreadsInMainChannel', false);\n\t\tconst result = await callWithErrorHandling(\n\t\t\t'loadHistory',\n\t\t\trid,\n\t\t\troom.oldestTs,\n\t\t\tlimit,\n\t\t\tls ? String(ls) : undefined,\n\t\t\tshowThreadsInMainChannel,\n\t\t);\n\n\t\tif (!result) {\n\t\t\tthrow new Error('loadHistory returned nothing');\n\t\t}\n\n\t\tthis.unqueue();\n\n\t\tlet previousHeight: number | undefined;\n\t\tlet scroll: number | undefined;\n\t\tconst { messages = [] } = result;\n\t\troom.unreadNotLoaded.set(result.unreadNotLoaded);\n\t\troom.firstUnread.set(result.firstUnread);\n\n\t\tif (messages.length > 0) {\n\t\t\troom.oldestTs = messages[messages.length - 1].ts;\n\t\t}\n\n\t\tconst wrapper = await waitForElement('.messages-box .wrapper .rc-scrollbars-view');\n\n\t\tif (wrapper) {\n\t\t\tpreviousHeight = wrapper.scrollHeight;\n\t\t\tscroll = wrapper.scrollTop;\n\t\t}\n\n\t\tupsertMessageBulk({\n\t\t\tmsgs: messages.filter((msg) => msg.t !== 'command'),\n\t\t\tsubscription,\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\n\t\tconst visibleMessages = messages.filter((msg) => !msg.tmid || showThreadsInMainChannel || msg.tshow);\n\n\t\troom.loaded += visibleMessages.length;\n\n\t\tif (messages.length < limit) {\n\t\t\troom.hasMore.set(false);\n\t\t}\n\n\t\tif (room.hasMore.get() && (visibleMessages.length === 0 || room.loaded < limit)) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\n\t\twaitAfterFlush(() => {\n\t\t\tthis.emit('loaded-messages');\n\t\t\tconst heightDiff = wrapper.scrollHeight - (previousHeight ?? NaN);\n\t\t\twrapper.scrollTop = (scroll ?? NaN) + heightDiff;\n\t\t});\n\n\t\troom.isLoading.set(false);\n\t}\n\n\tpublic async getMoreNext(rid: IRoom['_id'], atBottomRef: MutableRefObject<boolean>) {\n\t\tconst room = this.getRoom(rid);\n\t\tif (Tracker.nonreactive(() => room.hasMoreNext.get()) !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.queue();\n\t\tatBottomRef.current = false;\n\n\t\troom.isLoading.set(true);\n\n\t\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true } }, { sort: { ts: -1 } });\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\n\t\tif (lastMessage?.ts) {\n\t\t\tconst { ts } = lastMessage;\n\t\t\tconst result = await callWithErrorHandling('loadNextMessages', rid, ts, defaultLimit);\n\t\t\tupsertMessageBulk({\n\t\t\t\tmsgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'),\n\t\t\t\tsubscription,\n\t\t\t});\n\n\t\t\troom.isLoading.set(false);\n\t\t\tif (!room.loaded) {\n\t\t\t\troom.loaded = 0;\n\t\t\t}\n\n\t\t\troom.loaded += result.messages.length;\n\t\t\tif (result.messages.length < defaultLimit) {\n\t\t\t\troom.hasMoreNext.set(false);\n\t\t\t}\n\t\t}\n\t\tthis.unqueue();\n\t}\n\n\tpublic hasMore(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMore.get();\n\t}\n\n\tpublic hasMoreNext(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMoreNext.get();\n\t}\n\n\tpublic getMoreIfIsEmpty(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (room.loaded === undefined) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\t}\n\n\tpublic isLoading(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.isLoading.get();\n\t}\n\n\tpublic async clear(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\tChatMessage.remove({ rid });\n\t\troom.isLoading.set(true);\n\t\troom.hasMore.set(true);\n\t\troom.hasMoreNext.set(false);\n\t\troom.oldestTs = undefined;\n\t\troom.loaded = undefined;\n\t}\n\n\tpublic async getSurroundingMessages(message?: Pick<IMessage, '_id' | 'rid'> & { ts?: Date }) {\n\t\tif (!message?.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst messageAlreadyLoaded = Boolean(ChatMessage.findOne({ _id: message._id, _hidden: { $ne: true } }));\n\n\t\tif (messageAlreadyLoaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = this.getRoom(message.rid);\n\t\tvoid this.clear(message.rid);\n\n\t\tconst subscription = ChatSubscription.findOne({ rid: message.rid });\n\n\t\tconst result = await callWithErrorHandling('loadSurroundingMessages', message, defaultLimit);\n\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tupsertMessageBulk({ msgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'), subscription });\n\n\t\tTracker.afterFlush(async () => {\n\t\t\tthis.emit('loaded-messages');\n\t\t\troom.isLoading.set(false);\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\t\troom.loaded += result.messages.length;\n\t\troom.hasMore.set(result.moreBefore);\n\t\troom.hasMoreNext.set(result.moreAfter);\n\t}\n}\n\nexport const RoomHistoryManager = new RoomHistoryManagerClass();\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/RoomHistoryManager.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/RoomHistoryManager.ts","inputSourceMap":{"version":3,"file":"app/ui-utils/client/lib/RoomHistoryManager.ts","sourceRoot":"","sources":["app/ui-utils/client/lib/RoomHistoryManager.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,wBAAwB,MAAM,mCAAmC,CAAC;AACzE,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC,OAAO,EAAE,EAAE,IAAI,MAAM,EAAE,MAAM,MAAM,CAAC;AAGpC,OAAO,EAAE,uBAAuB,EAAE,MAAM,gDAAgD,CAAC;AACzF,OAAO,EAAE,qBAAqB,EAAE,MAAM,oDAAoD,CAAC;AAC3F,OAAO,EAAE,SAAS,EAAE,MAAM,wCAAwC,CAAC;AACnE,OAAO,EAAE,cAAc,EAAE,MAAM,6CAA6C,CAAC;AAC7E,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AACvE,OAAO,EAAE,iBAAiB,EAAE,MAAM,uBAAuB,CAAC;AAE1D,MAAM,CAAC,KAAK,UAAU,aAAa,CAClC,EACC,GAAG,EACH,YAAY,GAIZ,EACD,aAA4C,WAAW;IAEvD,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;IAE1B,IAAI,YAAY,EAAE,OAAO,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC7C,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,IAAI,GAAG,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAClC,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC;IACrB,CAAC;IACD,GAAG,GAAG,CAAC,MAAM,uBAAuB,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC;IAElD,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;IAEpB,OAAO,UAAU,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;AACxC,CAAC;AAED,MAAM,UAAU,iBAAiB,CAChC,EAAE,IAAI,EAAE,YAAY,EAAsD,EAC1E,aAA4C,WAAW;IAEvD,MAAM,EAAE,OAAO,EAAE,GAAG,UAAU,CAAC;IAC/B,UAAU,CAAC,OAAO,GAAG,EAAE,CAAC;IACxB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;QAC3B,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC/B,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9B,CAAC;QACD,KAAK,aAAa,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,EAAE,UAAU,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,YAAY,GAAG,QAAQ,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;AAExE,MAAM,cAAc,GAAG,CAAC,EAAc,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AAExF,MAAM,uBAAwB,SAAQ,OAAO;IACpC,WAAW,CAAQ;IAEnB,SAAS,GAWb,EAAE,CAAC;IAEC,YAAY,GAAa,EAAE,CAAC;IAE7B,OAAO,CAAC,GAAiB;QAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG;gBACrB,OAAO,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC;gBAC9B,WAAW,EAAE,IAAI,WAAW,CAAC,KAAK,CAAC;gBACnC,SAAS,EAAE,IAAI,WAAW,CAAC,KAAK,CAAC;gBACjC,eAAe,EAAE,IAAI,WAAW,CAAC,CAAC,CAAC;gBACnC,WAAW,EAAE,IAAI,WAAW,CAAC,SAAS,CAAC;gBACvC,MAAM,EAAE,SAAS;aACjB,CAAC;QACH,CAAC;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAEO,KAAK,CAAC,KAAK;QAClB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9B,MAAM,SAAS,GAAG,MAAM,EAAE,CAAC;YAC3B,MAAM,IAAI,GAAG,GAAG,EAAE;gBACjB,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC9B,OAAO,EAAE,CAAC;YACX,CAAC,CAAC;YACF,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACpC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC;YACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACJ,CAAC;IAEO,GAAG,CAAC,EAAc;QACzB,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,wBAAwB,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;QACxG,IAAI,UAAU,GAAG,GAAG,EAAE,CAAC;YACtB,OAAO,EAAE,EAAE,CAAC;QACb,CAAC;QACD,OAAO,UAAU,CAAC,EAAE,EAAE,GAAG,GAAG,UAAU,CAAC,CAAC;IACzC,CAAC;IAEO,OAAO;QACd,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,SAAS,EAAE,CAAC;YAChB,OAAO;QACR,CAAC;QACD,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACtC,CAAC;IAEM,KAAK,CAAC,OAAO,CAAC,GAAiB,EAAE,KAAK,GAAG,YAAY;QAC3D,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAE/B,IAAI,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC;YAC5D,OAAO;QACR,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEzB,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;QAEnB,IAAI,EAAE,GAAG,SAAS,CAAC;QAEnB,MAAM,YAAY,GAAG,gBAAgB,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QACvD,IAAI,YAAY,EAAE,CAAC;YAClB,CAAC,EAAE,EAAE,EAAE,GAAG,YAAY,CAAC,CAAC;QACzB,CAAC;QAED,MAAM,wBAAwB,GAAG,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,0BAA0B,EAAE,KAAK,CAAC,CAAC;QACvG,MAAM,MAAM,GAAG,MAAM,qBAAqB,CACzC,aAAa,EACb,GAAG,EACH,IAAI,CAAC,QAAQ,EACb,KAAK,EACL,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,EAC3B,wBAAwB,CACxB,CAAC;QAEF,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QACjD,CAAC;QAED,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,IAAI,cAAkC,CAAC;QACvC,IAAI,MAA0B,CAAC;QAC/B,MAAM,EAAE,QAAQ,GAAG,EAAE,EAAE,GAAG,MAAM,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAEzC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QAClD,CAAC;QAED,MAAM,OAAO,GAAG,MAAM,cAAc,CAAC,4CAA4C,CAAC,CAAC;QAEnF,IAAI,OAAO,EAAE,CAAC;YACb,cAAc,GAAG,OAAO,CAAC,YAAY,CAAC;YACtC,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC;QAC5B,CAAC;QAED,iBAAiB,CAAC;YACjB,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,SAAS,CAAC;YACnD,YAAY;SACZ,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACjB,CAAC;QAED,MAAM,eAAe,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,wBAAwB,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;QAErG,IAAI,CAAC,MAAM,IAAI,eAAe,CAAC,MAAM,CAAC;QAEtC,IAAI,QAAQ,CAAC,MAAM,GAAG,KAAK,EAAE,CAAC;YAC7B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,EAAE,CAAC;YACjF,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;QAED,cAAc,CAAC,GAAG,EAAE;YACnB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC7B,MAAM,UAAU,GAAG,OAAO,CAAC,YAAY,GAAG,CAAC,cAAc,IAAI,GAAG,CAAC,CAAC;YAClE,OAAO,CAAC,SAAS,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,GAAG,UAAU,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAEM,KAAK,CAAC,WAAW,CAAC,GAAiB,EAAE,WAAsC;QACjF,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC;YAChE,OAAO;QACR,CAAC;QAED,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;QACnB,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC;QAE5B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEzB,MAAM,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAE/F,MAAM,YAAY,GAAG,gBAAgB,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAEvD,IAAI,WAAW,EAAE,EAAE,EAAE,CAAC;YACrB,MAAM,EAAE,EAAE,EAAE,GAAG,WAAW,CAAC;YAC3B,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,kBAAkB,EAAE,GAAG,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC;YACtF,iBAAiB,CAAC;gBACjB,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,SAAS,CAAC;gBACtE,YAAY;aACZ,CAAC,CAAC;YAEH,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YACjB,CAAC;YAED,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YACtC,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,YAAY,EAAE,CAAC;gBAC3C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;QACF,CAAC;QACD,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAEM,OAAO,CAAC,GAAiB;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IAC3B,CAAC;IAEM,WAAW,CAAC,GAAiB;QACnC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;IAC/B,CAAC;IAEM,gBAAgB,CAAC,GAAiB;QACxC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAE/B,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;YAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;IACF,CAAC;IAEM,SAAS,CAAC,GAAiB;QACjC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;IAC7B,CAAC;IAEM,KAAK,CAAC,KAAK,CAAC,GAAiB;QACnC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC/B,WAAW,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;IACzB,CAAC;IAEM,KAAK,CAAC,sBAAsB,CAAC,OAAuD;QAC1F,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC;YACnB,OAAO;QACR,CAAC;QAED,MAAM,oBAAoB,GAAG,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAExG,IAAI,oBAAoB,EAAE,CAAC;YAC1B,OAAO;QACR,CAAC;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACvC,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAE7B,MAAM,YAAY,GAAG,gBAAgB,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;QAEpE,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,yBAAyB,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QAE7F,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,OAAO;QACR,CAAC;QAED,iBAAiB,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,SAAS,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC;QAE5G,OAAO,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACjB,CAAC;QACD,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACxC,CAAC;CACD;AAED,MAAM,CAAC,MAAM,kBAAkB,GAAG,IAAI,uBAAuB,EAAE,CAAC","sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\nimport type { MutableRefObject } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport type { MinimongoCollection } from '../../../../client/definitions/MinimongoCollection';\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { waitForElement } from '../../../../client/lib/utils/waitForElement';\nimport { ChatMessage, ChatSubscription } from '../../../models/client';\nimport { getUserPreference } from '../../../utils/client';\n\nexport async function upsertMessage(\n\t{\n\t\tmsg,\n\t\tsubscription,\n\t}: {\n\t\tmsg: IMessage & { ignored?: boolean };\n\t\tsubscription?: ISubscription;\n\t},\n\tcollection: MinimongoCollection<IMessage> = ChatMessage,\n) {\n\tconst userId = msg.u?._id;\n\n\tif (subscription?.ignored?.includes(userId)) {\n\t\tmsg.ignored = true;\n\t}\n\n\tif (msg.t === 'e2e' && !msg.file) {\n\t\tmsg.e2e = 'pending';\n\t}\n\tmsg = (await onClientMessageReceived(msg)) || msg;\n\n\tconst { _id } = msg;\n\n\treturn collection.upsert({ _id }, msg);\n}\n\nexport function upsertMessageBulk(\n\t{ msgs, subscription }: { msgs: IMessage[]; subscription?: ISubscription },\n\tcollection: MinimongoCollection<IMessage> = ChatMessage,\n) {\n\tconst { queries } = collection;\n\tcollection.queries = [];\n\tmsgs.forEach((msg, index) => {\n\t\tif (index === msgs.length - 1) {\n\t\t\tcollection.queries = queries;\n\t\t}\n\t\tvoid upsertMessage({ msg, subscription }, collection);\n\t});\n}\n\nconst defaultLimit = parseInt(getConfig('roomListLimit') ?? '50') || 50;\n\nconst waitAfterFlush = (fn: () => void) => setTimeout(() => Tracker.afterFlush(fn), 10);\n\nclass RoomHistoryManagerClass extends Emitter {\n\tprivate lastRequest?: Date;\n\n\tprivate histories: Record<\n\t\tIRoom['_id'],\n\t\t{\n\t\t\thasMore: ReactiveVar<boolean>;\n\t\t\thasMoreNext: ReactiveVar<boolean>;\n\t\t\tisLoading: ReactiveVar<boolean>;\n\t\t\tunreadNotLoaded: ReactiveVar<number>;\n\t\t\tfirstUnread: ReactiveVar<IMessage | undefined>;\n\t\t\tloaded: number | undefined;\n\t\t\toldestTs?: Date;\n\t\t}\n\t> = {};\n\n\tprivate requestsList: string[] = [];\n\n\tpublic getRoom(rid: IRoom['_id']) {\n\t\tif (!this.histories[rid]) {\n\t\t\tthis.histories[rid] = {\n\t\t\t\thasMore: new ReactiveVar(true),\n\t\t\t\thasMoreNext: new ReactiveVar(false),\n\t\t\t\tisLoading: new ReactiveVar(false),\n\t\t\t\tunreadNotLoaded: new ReactiveVar(0),\n\t\t\t\tfirstUnread: new ReactiveVar(undefined),\n\t\t\t\tloaded: undefined,\n\t\t\t};\n\t\t}\n\n\t\treturn this.histories[rid];\n\t}\n\n\tprivate async queue(): Promise<void> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst requestId = uuidv4();\n\t\t\tconst done = () => {\n\t\t\t\tthis.lastRequest = new Date();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tif (this.requestsList.length === 0) {\n\t\t\t\treturn this.run(done);\n\t\t\t}\n\t\t\tthis.requestsList.push(requestId);\n\t\t\tthis.once(requestId, done);\n\t\t});\n\t}\n\n\tprivate run(fn: () => void) {\n\t\tconst difference = this.lastRequest ? differenceInMilliseconds(new Date(), this.lastRequest) : Infinity;\n\t\tif (difference > 500) {\n\t\t\treturn fn();\n\t\t}\n\t\treturn setTimeout(fn, 500 - difference);\n\t}\n\n\tprivate unqueue() {\n\t\tconst requestId = this.requestsList.pop();\n\t\tif (!requestId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.run(() => this.emit(requestId));\n\t}\n\n\tpublic async getMore(rid: IRoom['_id'], limit = defaultLimit): Promise<void> {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (Tracker.nonreactive(() => room.hasMore.get()) !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\troom.isLoading.set(true);\n\n\t\tawait this.queue();\n\n\t\tlet ls = undefined;\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\tif (subscription) {\n\t\t\t({ ls } = subscription);\n\t\t}\n\n\t\tconst showThreadsInMainChannel = getUserPreference(Meteor.userId(), 'showThreadsInMainChannel', false);\n\t\tconst result = await callWithErrorHandling(\n\t\t\t'loadHistory',\n\t\t\trid,\n\t\t\troom.oldestTs,\n\t\t\tlimit,\n\t\t\tls ? String(ls) : undefined,\n\t\t\tshowThreadsInMainChannel,\n\t\t);\n\n\t\tif (!result) {\n\t\t\tthrow new Error('loadHistory returned nothing');\n\t\t}\n\n\t\tthis.unqueue();\n\n\t\tlet previousHeight: number | undefined;\n\t\tlet scroll: number | undefined;\n\t\tconst { messages = [] } = result;\n\t\troom.unreadNotLoaded.set(result.unreadNotLoaded);\n\t\troom.firstUnread.set(result.firstUnread);\n\n\t\tif (messages.length > 0) {\n\t\t\troom.oldestTs = messages[messages.length - 1].ts;\n\t\t}\n\n\t\tconst wrapper = await waitForElement('.messages-box .wrapper .rc-scrollbars-view');\n\n\t\tif (wrapper) {\n\t\t\tpreviousHeight = wrapper.scrollHeight;\n\t\t\tscroll = wrapper.scrollTop;\n\t\t}\n\n\t\tupsertMessageBulk({\n\t\t\tmsgs: messages.filter((msg) => msg.t !== 'command'),\n\t\t\tsubscription,\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\n\t\tconst visibleMessages = messages.filter((msg) => !msg.tmid || showThreadsInMainChannel || msg.tshow);\n\n\t\troom.loaded += visibleMessages.length;\n\n\t\tif (messages.length < limit) {\n\t\t\troom.hasMore.set(false);\n\t\t}\n\n\t\tif (room.hasMore.get() && (visibleMessages.length === 0 || room.loaded < limit)) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\n\t\twaitAfterFlush(() => {\n\t\t\tthis.emit('loaded-messages');\n\t\t\tconst heightDiff = wrapper.scrollHeight - (previousHeight ?? NaN);\n\t\t\twrapper.scrollTop = (scroll ?? NaN) + heightDiff;\n\t\t});\n\n\t\troom.isLoading.set(false);\n\t}\n\n\tpublic async getMoreNext(rid: IRoom['_id'], atBottomRef: MutableRefObject<boolean>) {\n\t\tconst room = this.getRoom(rid);\n\t\tif (Tracker.nonreactive(() => room.hasMoreNext.get()) !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.queue();\n\t\tatBottomRef.current = false;\n\n\t\troom.isLoading.set(true);\n\n\t\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true } }, { sort: { ts: -1 } });\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\n\t\tif (lastMessage?.ts) {\n\t\t\tconst { ts } = lastMessage;\n\t\t\tconst result = await callWithErrorHandling('loadNextMessages', rid, ts, defaultLimit);\n\t\t\tupsertMessageBulk({\n\t\t\t\tmsgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'),\n\t\t\t\tsubscription,\n\t\t\t});\n\n\t\t\troom.isLoading.set(false);\n\t\t\tif (!room.loaded) {\n\t\t\t\troom.loaded = 0;\n\t\t\t}\n\n\t\t\troom.loaded += result.messages.length;\n\t\t\tif (result.messages.length < defaultLimit) {\n\t\t\t\troom.hasMoreNext.set(false);\n\t\t\t}\n\t\t}\n\t\tthis.unqueue();\n\t}\n\n\tpublic hasMore(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMore.get();\n\t}\n\n\tpublic hasMoreNext(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMoreNext.get();\n\t}\n\n\tpublic getMoreIfIsEmpty(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (room.loaded === undefined) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\t}\n\n\tpublic isLoading(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.isLoading.get();\n\t}\n\n\tpublic async clear(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\tChatMessage.remove({ rid });\n\t\troom.isLoading.set(true);\n\t\troom.hasMore.set(true);\n\t\troom.hasMoreNext.set(false);\n\t\troom.oldestTs = undefined;\n\t\troom.loaded = undefined;\n\t}\n\n\tpublic async getSurroundingMessages(message?: Pick<IMessage, '_id' | 'rid'> & { ts?: Date }) {\n\t\tif (!message?.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst messageAlreadyLoaded = Boolean(ChatMessage.findOne({ _id: message._id, _hidden: { $ne: true } }));\n\n\t\tif (messageAlreadyLoaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = this.getRoom(message.rid);\n\t\tvoid this.clear(message.rid);\n\n\t\tconst subscription = ChatSubscription.findOne({ rid: message.rid });\n\n\t\tconst result = await callWithErrorHandling('loadSurroundingMessages', message, defaultLimit);\n\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tupsertMessageBulk({ msgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'), subscription });\n\n\t\tTracker.afterFlush(async () => {\n\t\t\tthis.emit('loaded-messages');\n\t\t\troom.isLoading.set(false);\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\t\troom.loaded += result.messages.length;\n\t\troom.hasMore.set(result.moreBefore);\n\t\troom.hasMoreNext.set(result.moreAfter);\n\t}\n}\n\nexport const RoomHistoryManager = new RoomHistoryManagerClass();\n"]}}},"code":"var _getConfig;\nvar _inheritsLoose;\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 0);\nvar _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 1);\nmodule.export({\n  upsertMessage: function () {\n    return upsertMessage;\n  },\n  upsertMessageBulk: function () {\n    return upsertMessageBulk;\n  },\n  RoomHistoryManager: function () {\n    return RoomHistoryManager;\n  }\n});\nvar Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter: function (v) {\n    Emitter = v;\n  }\n}, 0);\nvar differenceInMilliseconds;\nmodule.link(\"date-fns/differenceInMilliseconds\", {\n  \"default\": function (v) {\n    differenceInMilliseconds = v;\n  }\n}, 1);\nvar ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 2);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 3);\nvar uuidv4;\nmodule.link(\"uuid\", {\n  v4: function (v) {\n    uuidv4 = v;\n  }\n}, 4);\nvar onClientMessageReceived;\nmodule.link(\"../../../../client/lib/onClientMessageReceived\", {\n  onClientMessageReceived: function (v) {\n    onClientMessageReceived = v;\n  }\n}, 5);\nvar callWithErrorHandling;\nmodule.link(\"../../../../client/lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling: function (v) {\n    callWithErrorHandling = v;\n  }\n}, 6);\nvar getConfig;\nmodule.link(\"../../../../client/lib/utils/getConfig\", {\n  getConfig: function (v) {\n    getConfig = v;\n  }\n}, 7);\nvar waitForElement;\nmodule.link(\"../../../../client/lib/utils/waitForElement\", {\n  waitForElement: function (v) {\n    waitForElement = v;\n  }\n}, 8);\nvar ChatMessage, ChatSubscription;\nmodule.link(\"../../../models/client\", {\n  ChatMessage: function (v) {\n    ChatMessage = v;\n  },\n  ChatSubscription: function (v) {\n    ChatSubscription = v;\n  }\n}, 9);\nvar getUserPreference;\nmodule.link(\"../../../utils/client\", {\n  getUserPreference: function (v) {\n    getUserPreference = v;\n  }\n}, 10);\nfunction upsertMessage(_ref) {\n  var _msg$u, _subscription$ignored;\n  var msg,\n    subscription,\n    collection,\n    userId,\n    _msg,\n    _id,\n    _args = arguments;\n  return _regeneratorRuntime.async(function () {\n    function upsertMessage$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          msg = _ref.msg, subscription = _ref.subscription;\n          collection = _args.length > 1 && _args[1] !== undefined ? _args[1] : ChatMessage;\n          userId = (_msg$u = msg.u) === null || _msg$u === void 0 ? void 0 : _msg$u._id;\n          if (subscription !== null && subscription !== void 0 && (_subscription$ignored = subscription.ignored) !== null && _subscription$ignored !== void 0 && _subscription$ignored.includes(userId)) {\n            msg.ignored = true;\n          }\n          if (msg.t === 'e2e' && !msg.file) {\n            msg.e2e = 'pending';\n          }\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(onClientMessageReceived(msg));\n        case 7:\n          _context.t0 = _context.sent;\n          if (_context.t0) {\n            _context.next = 10;\n            break;\n          }\n          _context.t0 = msg;\n        case 10:\n          msg = _context.t0;\n          _msg = msg, _id = _msg._id;\n          return _context.abrupt(\"return\", collection.upsert({\n            _id: _id\n          }, msg));\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n    return upsertMessage$;\n  }(), null, null, null, Promise);\n}\nfunction upsertMessageBulk(_ref2) {\n  var msgs = _ref2.msgs,\n    subscription = _ref2.subscription;\n  var collection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ChatMessage;\n  var queries = collection.queries;\n  collection.queries = [];\n  msgs.forEach(function (msg, index) {\n    if (index === msgs.length - 1) {\n      collection.queries = queries;\n    }\n    void upsertMessage({\n      msg: msg,\n      subscription: subscription\n    }, collection);\n  });\n}\nvar defaultLimit = parseInt((_getConfig = getConfig('roomListLimit')) !== null && _getConfig !== void 0 ? _getConfig : '50') || 50;\nvar waitAfterFlush = function (fn) {\n  return setTimeout(function () {\n    return Tracker.afterFlush(fn);\n  }, 10);\n};\nvar RoomHistoryManagerClass = /*#__PURE__*/function (_Emitter) {\n  function RoomHistoryManagerClass() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _Emitter.call.apply(_Emitter, [this].concat(args)) || this;\n    _this.lastRequest = void 0;\n    _this.histories = {};\n    _this.requestsList = [];\n    return _this;\n  }\n  _inheritsLoose(RoomHistoryManagerClass, _Emitter);\n  var _proto = RoomHistoryManagerClass.prototype;\n  _proto.getRoom = function () {\n    function getRoom(rid) {\n      if (!this.histories[rid]) {\n        this.histories[rid] = {\n          hasMore: new ReactiveVar(true),\n          hasMoreNext: new ReactiveVar(false),\n          isLoading: new ReactiveVar(false),\n          unreadNotLoaded: new ReactiveVar(0),\n          firstUnread: new ReactiveVar(undefined),\n          loaded: undefined\n        };\n      }\n      return this.histories[rid];\n    }\n    return getRoom;\n  }();\n  _proto.queue = function () {\n    function queue() {\n      var _this2 = this;\n      return _regeneratorRuntime.async(function () {\n        function queue$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", new Promise(function (resolve) {\n                var requestId = uuidv4();\n                var done = function () {\n                  _this2.lastRequest = new Date();\n                  resolve();\n                };\n                if (_this2.requestsList.length === 0) {\n                  return _this2.run(done);\n                }\n                _this2.requestsList.push(requestId);\n                _this2.once(requestId, done);\n              }));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n        return queue$;\n      }(), null, null, null, Promise);\n    }\n    return queue;\n  }();\n  _proto.run = function () {\n    function run(fn) {\n      var difference = this.lastRequest ? differenceInMilliseconds(new Date(), this.lastRequest) : Infinity;\n      if (difference > 500) {\n        return fn();\n      }\n      return setTimeout(fn, 500 - difference);\n    }\n    return run;\n  }();\n  _proto.unqueue = function () {\n    function unqueue() {\n      var _this3 = this;\n      var requestId = this.requestsList.pop();\n      if (!requestId) {\n        return;\n      }\n      this.run(function () {\n        return _this3.emit(requestId);\n      });\n    }\n    return unqueue;\n  }();\n  _proto.getMore = function () {\n    function getMore(rid) {\n      var _this4 = this;\n      var limit,\n        room,\n        ls,\n        subscription,\n        showThreadsInMainChannel,\n        result,\n        previousHeight,\n        scroll,\n        _result$messages,\n        messages,\n        wrapper,\n        visibleMessages,\n        _args3 = arguments;\n      return _regeneratorRuntime.async(function () {\n        function getMore$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              limit = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : defaultLimit;\n              room = this.getRoom(rid);\n              if (!(Tracker.nonreactive(function () {\n                return room.hasMore.get();\n              }) !== true)) {\n                _context3.next = 4;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 4:\n              room.isLoading.set(true);\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(this.queue());\n            case 7:\n              ls = undefined;\n              subscription = ChatSubscription.findOne({\n                rid: rid\n              });\n              if (subscription) {\n                ls = subscription.ls;\n              }\n              showThreadsInMainChannel = getUserPreference(Meteor.userId(), 'showThreadsInMainChannel', false);\n              _context3.next = 13;\n              return _regeneratorRuntime.awrap(callWithErrorHandling('loadHistory', rid, room.oldestTs, limit, ls ? String(ls) : undefined, showThreadsInMainChannel));\n            case 13:\n              result = _context3.sent;\n              if (result) {\n                _context3.next = 16;\n                break;\n              }\n              throw new Error('loadHistory returned nothing');\n            case 16:\n              this.unqueue();\n              _result$messages = result.messages, messages = _result$messages === void 0 ? [] : _result$messages;\n              room.unreadNotLoaded.set(result.unreadNotLoaded);\n              room.firstUnread.set(result.firstUnread);\n              if (messages.length > 0) {\n                room.oldestTs = messages[messages.length - 1].ts;\n              }\n              _context3.next = 23;\n              return _regeneratorRuntime.awrap(waitForElement('.messages-box .wrapper .rc-scrollbars-view'));\n            case 23:\n              wrapper = _context3.sent;\n              if (wrapper) {\n                previousHeight = wrapper.scrollHeight;\n                scroll = wrapper.scrollTop;\n              }\n              upsertMessageBulk({\n                msgs: messages.filter(function (msg) {\n                  return msg.t !== 'command';\n                }),\n                subscription: subscription\n              });\n              if (!room.loaded) {\n                room.loaded = 0;\n              }\n              visibleMessages = messages.filter(function (msg) {\n                return !msg.tmid || showThreadsInMainChannel || msg.tshow;\n              });\n              room.loaded += visibleMessages.length;\n              if (messages.length < limit) {\n                room.hasMore.set(false);\n              }\n              if (!(room.hasMore.get() && (visibleMessages.length === 0 || room.loaded < limit))) {\n                _context3.next = 32;\n                break;\n              }\n              return _context3.abrupt(\"return\", this.getMore(rid));\n            case 32:\n              waitAfterFlush(function () {\n                var _previousHeight, _scroll;\n                _this4.emit('loaded-messages');\n                var heightDiff = wrapper.scrollHeight - ((_previousHeight = previousHeight) !== null && _previousHeight !== void 0 ? _previousHeight : NaN);\n                wrapper.scrollTop = ((_scroll = scroll) !== null && _scroll !== void 0 ? _scroll : NaN) + heightDiff;\n              });\n              room.isLoading.set(false);\n            case 34:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n        return getMore$;\n      }(), null, this, null, Promise);\n    }\n    return getMore;\n  }();\n  _proto.getMoreNext = function () {\n    function getMoreNext(rid, atBottomRef) {\n      var room, lastMessage, subscription, ts, result;\n      return _regeneratorRuntime.async(function () {\n        function getMoreNext$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              room = this.getRoom(rid);\n              if (!(Tracker.nonreactive(function () {\n                return room.hasMoreNext.get();\n              }) !== true)) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 3:\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(this.queue());\n            case 5:\n              atBottomRef.current = false;\n              room.isLoading.set(true);\n              lastMessage = ChatMessage.findOne({\n                rid: rid,\n                _hidden: {\n                  $ne: true\n                }\n              }, {\n                sort: {\n                  ts: -1\n                }\n              });\n              subscription = ChatSubscription.findOne({\n                rid: rid\n              });\n              if (!(lastMessage !== null && lastMessage !== void 0 && lastMessage.ts)) {\n                _context4.next = 19;\n                break;\n              }\n              ts = lastMessage.ts;\n              _context4.next = 13;\n              return _regeneratorRuntime.awrap(callWithErrorHandling('loadNextMessages', rid, ts, defaultLimit));\n            case 13:\n              result = _context4.sent;\n              upsertMessageBulk({\n                msgs: Array.from(result.messages).filter(function (msg) {\n                  return msg.t !== 'command';\n                }),\n                subscription: subscription\n              });\n              room.isLoading.set(false);\n              if (!room.loaded) {\n                room.loaded = 0;\n              }\n              room.loaded += result.messages.length;\n              if (result.messages.length < defaultLimit) {\n                room.hasMoreNext.set(false);\n              }\n            case 19:\n              this.unqueue();\n            case 20:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n        return getMoreNext$;\n      }(), null, this, null, Promise);\n    }\n    return getMoreNext;\n  }();\n  _proto.hasMore = function () {\n    function hasMore(rid) {\n      var room = this.getRoom(rid);\n      return room.hasMore.get();\n    }\n    return hasMore;\n  }();\n  _proto.hasMoreNext = function () {\n    function hasMoreNext(rid) {\n      var room = this.getRoom(rid);\n      return room.hasMoreNext.get();\n    }\n    return hasMoreNext;\n  }();\n  _proto.getMoreIfIsEmpty = function () {\n    function getMoreIfIsEmpty(rid) {\n      var room = this.getRoom(rid);\n      if (room.loaded === undefined) {\n        return this.getMore(rid);\n      }\n    }\n    return getMoreIfIsEmpty;\n  }();\n  _proto.isLoading = function () {\n    function isLoading(rid) {\n      var room = this.getRoom(rid);\n      return room.isLoading.get();\n    }\n    return isLoading;\n  }();\n  _proto.clear = function () {\n    function clear(rid) {\n      var room;\n      return _regeneratorRuntime.async(function () {\n        function clear$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              room = this.getRoom(rid);\n              ChatMessage.remove({\n                rid: rid\n              });\n              room.isLoading.set(true);\n              room.hasMore.set(true);\n              room.hasMoreNext.set(false);\n              room.oldestTs = undefined;\n              room.loaded = undefined;\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n        return clear$;\n      }(), null, this, null, Promise);\n    }\n    return clear;\n  }();\n  _proto.getSurroundingMessages = function () {\n    function getSurroundingMessages(message) {\n      var _this5 = this;\n      var messageAlreadyLoaded, room, subscription, result;\n      return _regeneratorRuntime.async(function () {\n        function getSurroundingMessages$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (message !== null && message !== void 0 && message.rid) {\n                _context7.next = 2;\n                break;\n              }\n              return _context7.abrupt(\"return\");\n            case 2:\n              messageAlreadyLoaded = Boolean(ChatMessage.findOne({\n                _id: message._id,\n                _hidden: {\n                  $ne: true\n                }\n              }));\n              if (!messageAlreadyLoaded) {\n                _context7.next = 5;\n                break;\n              }\n              return _context7.abrupt(\"return\");\n            case 5:\n              room = this.getRoom(message.rid);\n              void this.clear(message.rid);\n              subscription = ChatSubscription.findOne({\n                rid: message.rid\n              });\n              _context7.next = 10;\n              return _regeneratorRuntime.awrap(callWithErrorHandling('loadSurroundingMessages', message, defaultLimit));\n            case 10:\n              result = _context7.sent;\n              if (result) {\n                _context7.next = 13;\n                break;\n              }\n              return _context7.abrupt(\"return\");\n            case 13:\n              upsertMessageBulk({\n                msgs: Array.from(result.messages).filter(function (msg) {\n                  return msg.t !== 'command';\n                }),\n                subscription: subscription\n              });\n              Tracker.afterFlush(function () {\n                function _callee() {\n                  return _regeneratorRuntime.async(function () {\n                    function _callee$(_context6) {\n                      while (1) switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _this5.emit('loaded-messages');\n                          room.isLoading.set(false);\n                        case 2:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                    return _callee$;\n                  }(), null, null, null, Promise);\n                }\n                return _callee;\n              }());\n              if (!room.loaded) {\n                room.loaded = 0;\n              }\n              room.loaded += result.messages.length;\n              room.hasMore.set(result.moreBefore);\n              room.hasMoreNext.set(result.moreAfter);\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n        return getSurroundingMessages$;\n      }(), null, this, null, Promise);\n    }\n    return getSurroundingMessages;\n  }();\n  return RoomHistoryManagerClass;\n}(Emitter);\nvar RoomHistoryManager = new RoomHistoryManagerClass();","map":{"version":3,"names":["_inheritsLoose","module","link","default","v","_regeneratorRuntime","export","upsertMessage","upsertMessageBulk","RoomHistoryManager","Emitter","differenceInMilliseconds","ReactiveVar","Tracker","uuidv4","v4","onClientMessageReceived","callWithErrorHandling","getConfig","waitForElement","ChatMessage","ChatSubscription","getUserPreference","_ref","_msg$u","_subscription$ignored","msg","subscription","collection","userId","_msg","_id","_args","arguments","async","upsertMessage$","_context","prev","next","length","undefined","u","ignored","includes","t","file","e2e","awrap","t0","sent","abrupt","upsert","stop","Promise","_ref2","msgs","queries","forEach","index","defaultLimit","parseInt","_getConfig","waitAfterFlush","fn","setTimeout","afterFlush","RoomHistoryManagerClass","_Emitter","_this","_len","args","Array","_key","call","apply","concat","lastRequest","histories","requestsList","_proto","prototype","getRoom","rid","hasMore","hasMoreNext","isLoading","unreadNotLoaded","firstUnread","loaded","queue","_this2","queue$","_context2","resolve","requestId","done","Date","run","push","once","difference","Infinity","unqueue","_this3","pop","emit","getMore","_this4","limit","room","ls","showThreadsInMainChannel","result","previousHeight","scroll","_result$messages","messages","wrapper","visibleMessages","_args3","getMore$","_context3","nonreactive","get","set","findOne","Meteor","oldestTs","String","Error","ts","scrollHeight","scrollTop","filter","tmid","tshow","_previousHeight","_scroll","heightDiff","NaN","getMoreNext","atBottomRef","lastMessage","getMoreNext$","_context4","current","_hidden","$ne","sort","from","getMoreIfIsEmpty","clear","clear$","_context5","remove","getSurroundingMessages","message","_this5","messageAlreadyLoaded","getSurroundingMessages$","_context7","Boolean","_callee","_callee$","_context6","moreBefore","moreAfter"],"sources":["app/ui-utils/client/lib/RoomHistoryManager.ts"],"sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\nimport type { MutableRefObject } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport type { MinimongoCollection } from '../../../../client/definitions/MinimongoCollection';\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { waitForElement } from '../../../../client/lib/utils/waitForElement';\nimport { ChatMessage, ChatSubscription } from '../../../models/client';\nimport { getUserPreference } from '../../../utils/client';\n\nexport async function upsertMessage(\n\t{\n\t\tmsg,\n\t\tsubscription,\n\t}: {\n\t\tmsg: IMessage & { ignored?: boolean };\n\t\tsubscription?: ISubscription;\n\t},\n\tcollection: MinimongoCollection<IMessage> = ChatMessage,\n) {\n\tconst userId = msg.u?._id;\n\n\tif (subscription?.ignored?.includes(userId)) {\n\t\tmsg.ignored = true;\n\t}\n\n\tif (msg.t === 'e2e' && !msg.file) {\n\t\tmsg.e2e = 'pending';\n\t}\n\tmsg = (await onClientMessageReceived(msg)) || msg;\n\n\tconst { _id } = msg;\n\n\treturn collection.upsert({ _id }, msg);\n}\n\nexport function upsertMessageBulk(\n\t{ msgs, subscription }: { msgs: IMessage[]; subscription?: ISubscription },\n\tcollection: MinimongoCollection<IMessage> = ChatMessage,\n) {\n\tconst { queries } = collection;\n\tcollection.queries = [];\n\tmsgs.forEach((msg, index) => {\n\t\tif (index === msgs.length - 1) {\n\t\t\tcollection.queries = queries;\n\t\t}\n\t\tvoid upsertMessage({ msg, subscription }, collection);\n\t});\n}\n\nconst defaultLimit = parseInt(getConfig('roomListLimit') ?? '50') || 50;\n\nconst waitAfterFlush = (fn: () => void) => setTimeout(() => Tracker.afterFlush(fn), 10);\n\nclass RoomHistoryManagerClass extends Emitter {\n\tprivate lastRequest?: Date;\n\n\tprivate histories: Record<\n\t\tIRoom['_id'],\n\t\t{\n\t\t\thasMore: ReactiveVar<boolean>;\n\t\t\thasMoreNext: ReactiveVar<boolean>;\n\t\t\tisLoading: ReactiveVar<boolean>;\n\t\t\tunreadNotLoaded: ReactiveVar<number>;\n\t\t\tfirstUnread: ReactiveVar<IMessage | undefined>;\n\t\t\tloaded: number | undefined;\n\t\t\toldestTs?: Date;\n\t\t}\n\t> = {};\n\n\tprivate requestsList: string[] = [];\n\n\tpublic getRoom(rid: IRoom['_id']) {\n\t\tif (!this.histories[rid]) {\n\t\t\tthis.histories[rid] = {\n\t\t\t\thasMore: new ReactiveVar(true),\n\t\t\t\thasMoreNext: new ReactiveVar(false),\n\t\t\t\tisLoading: new ReactiveVar(false),\n\t\t\t\tunreadNotLoaded: new ReactiveVar(0),\n\t\t\t\tfirstUnread: new ReactiveVar(undefined),\n\t\t\t\tloaded: undefined,\n\t\t\t};\n\t\t}\n\n\t\treturn this.histories[rid];\n\t}\n\n\tprivate async queue(): Promise<void> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst requestId = uuidv4();\n\t\t\tconst done = () => {\n\t\t\t\tthis.lastRequest = new Date();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tif (this.requestsList.length === 0) {\n\t\t\t\treturn this.run(done);\n\t\t\t}\n\t\t\tthis.requestsList.push(requestId);\n\t\t\tthis.once(requestId, done);\n\t\t});\n\t}\n\n\tprivate run(fn: () => void) {\n\t\tconst difference = this.lastRequest ? differenceInMilliseconds(new Date(), this.lastRequest) : Infinity;\n\t\tif (difference > 500) {\n\t\t\treturn fn();\n\t\t}\n\t\treturn setTimeout(fn, 500 - difference);\n\t}\n\n\tprivate unqueue() {\n\t\tconst requestId = this.requestsList.pop();\n\t\tif (!requestId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.run(() => this.emit(requestId));\n\t}\n\n\tpublic async getMore(rid: IRoom['_id'], limit = defaultLimit): Promise<void> {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (Tracker.nonreactive(() => room.hasMore.get()) !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\troom.isLoading.set(true);\n\n\t\tawait this.queue();\n\n\t\tlet ls = undefined;\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\tif (subscription) {\n\t\t\t({ ls } = subscription);\n\t\t}\n\n\t\tconst showThreadsInMainChannel = getUserPreference(Meteor.userId(), 'showThreadsInMainChannel', false);\n\t\tconst result = await callWithErrorHandling(\n\t\t\t'loadHistory',\n\t\t\trid,\n\t\t\troom.oldestTs,\n\t\t\tlimit,\n\t\t\tls ? String(ls) : undefined,\n\t\t\tshowThreadsInMainChannel,\n\t\t);\n\n\t\tif (!result) {\n\t\t\tthrow new Error('loadHistory returned nothing');\n\t\t}\n\n\t\tthis.unqueue();\n\n\t\tlet previousHeight: number | undefined;\n\t\tlet scroll: number | undefined;\n\t\tconst { messages = [] } = result;\n\t\troom.unreadNotLoaded.set(result.unreadNotLoaded);\n\t\troom.firstUnread.set(result.firstUnread);\n\n\t\tif (messages.length > 0) {\n\t\t\troom.oldestTs = messages[messages.length - 1].ts;\n\t\t}\n\n\t\tconst wrapper = await waitForElement('.messages-box .wrapper .rc-scrollbars-view');\n\n\t\tif (wrapper) {\n\t\t\tpreviousHeight = wrapper.scrollHeight;\n\t\t\tscroll = wrapper.scrollTop;\n\t\t}\n\n\t\tupsertMessageBulk({\n\t\t\tmsgs: messages.filter((msg) => msg.t !== 'command'),\n\t\t\tsubscription,\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\n\t\tconst visibleMessages = messages.filter((msg) => !msg.tmid || showThreadsInMainChannel || msg.tshow);\n\n\t\troom.loaded += visibleMessages.length;\n\n\t\tif (messages.length < limit) {\n\t\t\troom.hasMore.set(false);\n\t\t}\n\n\t\tif (room.hasMore.get() && (visibleMessages.length === 0 || room.loaded < limit)) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\n\t\twaitAfterFlush(() => {\n\t\t\tthis.emit('loaded-messages');\n\t\t\tconst heightDiff = wrapper.scrollHeight - (previousHeight ?? NaN);\n\t\t\twrapper.scrollTop = (scroll ?? NaN) + heightDiff;\n\t\t});\n\n\t\troom.isLoading.set(false);\n\t}\n\n\tpublic async getMoreNext(rid: IRoom['_id'], atBottomRef: MutableRefObject<boolean>) {\n\t\tconst room = this.getRoom(rid);\n\t\tif (Tracker.nonreactive(() => room.hasMoreNext.get()) !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.queue();\n\t\tatBottomRef.current = false;\n\n\t\troom.isLoading.set(true);\n\n\t\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true } }, { sort: { ts: -1 } });\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\n\t\tif (lastMessage?.ts) {\n\t\t\tconst { ts } = lastMessage;\n\t\t\tconst result = await callWithErrorHandling('loadNextMessages', rid, ts, defaultLimit);\n\t\t\tupsertMessageBulk({\n\t\t\t\tmsgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'),\n\t\t\t\tsubscription,\n\t\t\t});\n\n\t\t\troom.isLoading.set(false);\n\t\t\tif (!room.loaded) {\n\t\t\t\troom.loaded = 0;\n\t\t\t}\n\n\t\t\troom.loaded += result.messages.length;\n\t\t\tif (result.messages.length < defaultLimit) {\n\t\t\t\troom.hasMoreNext.set(false);\n\t\t\t}\n\t\t}\n\t\tthis.unqueue();\n\t}\n\n\tpublic hasMore(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMore.get();\n\t}\n\n\tpublic hasMoreNext(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMoreNext.get();\n\t}\n\n\tpublic getMoreIfIsEmpty(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (room.loaded === undefined) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\t}\n\n\tpublic isLoading(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.isLoading.get();\n\t}\n\n\tpublic async clear(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\tChatMessage.remove({ rid });\n\t\troom.isLoading.set(true);\n\t\troom.hasMore.set(true);\n\t\troom.hasMoreNext.set(false);\n\t\troom.oldestTs = undefined;\n\t\troom.loaded = undefined;\n\t}\n\n\tpublic async getSurroundingMessages(message?: Pick<IMessage, '_id' | 'rid'> & { ts?: Date }) {\n\t\tif (!message?.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst messageAlreadyLoaded = Boolean(ChatMessage.findOne({ _id: message._id, _hidden: { $ne: true } }));\n\n\t\tif (messageAlreadyLoaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = this.getRoom(message.rid);\n\t\tvoid this.clear(message.rid);\n\n\t\tconst subscription = ChatSubscription.findOne({ rid: message.rid });\n\n\t\tconst result = await callWithErrorHandling('loadSurroundingMessages', message, defaultLimit);\n\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tupsertMessageBulk({ msgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'), subscription });\n\n\t\tTracker.afterFlush(async () => {\n\t\t\tthis.emit('loaded-messages');\n\t\t\troom.isLoading.set(false);\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\t\troom.loaded += result.messages.length;\n\t\troom.hasMore.set(result.moreBefore);\n\t\troom.hasMoreNext.set(result.moreAfter);\n\t}\n}\n\nexport const RoomHistoryManager = new RoomHistoryManagerClass();\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f499ffe010349125e2e55c25cafec0cd4b621014"}
