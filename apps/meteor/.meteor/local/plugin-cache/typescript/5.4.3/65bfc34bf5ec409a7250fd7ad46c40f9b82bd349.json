{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/contactHistory/useHistoryList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/contactHistory/useHistoryList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/contactHistory/useHistoryList.ts","inputSourceMap":{"version":3,"file":"client/views/omnichannel/contactHistory/useHistoryList.ts","sourceRoot":"","sources":["client/views/omnichannel/contactHistory/useHistoryList.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE9C,OAAO,EAAE,uBAAuB,EAAE,MAAM,8CAA8C,CAAC;AACvF,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAC;AAC7E,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAC3D,OAAO,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AAQzE,MAAM,CAAC,MAAM,cAAc,GAAG,CAC7B,OAA2B,EAK1B,EAAE;IACH,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,UAAU,EAAmD,CAAC,CAAC;IACpH,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,UAAU,EAAmD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEtH,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,EAAE,mEAAmE,EAAE;QAC1G,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,SAAS,EAAE,OAAO,CAAC,SAAS;KAC5B,CAAC,CAAC;IAEH,qBAAqB,CAAC,GAAG,EAAE;QAC1B,OAAO,IAAI,MAAM,EAAE,CAAC;IACrB,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEtB,MAAM,SAAS,GAAG,WAAW,CAC5B,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;QACpB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,MAAM,UAAU,CAAC;YAC3C,GAAG,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC;YACrD,eAAe,EAAE,MAAM;YACvB,eAAe,EAAE,OAAO;YACxB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,GAAG,GAAG,KAAK;SAClB,CAAC,CAAC;QACH,OAAO;YACN,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;gBAChC,GAAG,OAAO;gBACV,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBACxB,UAAU,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBAChC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;gBACnE,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;gBACnG,cAAc,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS;aAC9F,CAAC,CAAC;YACH,SAAS,EAAE,KAAK;SAChB,CAAC;IACH,CAAC,EACD,CAAC,UAAU,EAAE,OAAO,CAAC,CACrB,CAAC;IAEF,MAAM,EAAE,aAAa,EAAE,gBAAgB,EAAE,GAAG,uBAAuB,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;IAE9F,OAAO;QACN,SAAS;QACT,aAAa;QACb,gBAAgB;KAChB,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { VisitorSearchChatsResult } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\nimport { mapMessageFromApi } from '../../../lib/utils/mapMessageFromApi';\n\ntype HistoryListOptions = {\n\tfilter: string;\n\troomId: string;\n\tvisitorId: string;\n};\n\nexport const useHistoryList = (\n\toptions: HistoryListOptions,\n): {\n\titemsList: RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>()), []);\n\n\tconst getHistory = useEndpoint('GET', '/v1/livechat/visitors.searchChats/room/:roomId/visitor/:visitorId', {\n\t\troomId: options.roomId,\n\t\tvisitorId: options.visitorId,\n\t});\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { history, total } = await getHistory({\n\t\t\t\t...(options.filter && { searchText: options.filter }),\n\t\t\t\tclosedChatsOnly: 'true',\n\t\t\t\tservedChatsOnly: 'false',\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\t\t\treturn {\n\t\t\t\titems: history.map((history) => ({\n\t\t\t\t\t...history,\n\t\t\t\t\tts: new Date(history.ts),\n\t\t\t\t\t_updatedAt: new Date(history.ts),\n\t\t\t\t\tclosedAt: history.closedAt ? new Date(history.closedAt) : undefined,\n\t\t\t\t\tservedBy: history.servedBy ? { ...history.servedBy, ts: new Date(history.servedBy.ts) } : undefined,\n\t\t\t\t\tclosingMessage: history.closingMessage ? mapMessageFromApi(history.closingMessage) : undefined,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getHistory, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/contactHistory/useHistoryList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/contactHistory/useHistoryList.ts","inputSourceMap":{"version":3,"file":"client/views/omnichannel/contactHistory/useHistoryList.ts","sourceRoot":"","sources":["client/views/omnichannel/contactHistory/useHistoryList.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE9C,OAAO,EAAE,uBAAuB,EAAE,MAAM,8CAA8C,CAAC;AACvF,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAC;AAC7E,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAC3D,OAAO,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AAQzE,MAAM,CAAC,MAAM,cAAc,GAAG,CAC7B,OAA2B,EAK1B,EAAE;IACH,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,UAAU,EAAmD,CAAC,CAAC;IACpH,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,UAAU,EAAmD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEtH,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,EAAE,mEAAmE,EAAE;QAC1G,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,SAAS,EAAE,OAAO,CAAC,SAAS;KAC5B,CAAC,CAAC;IAEH,qBAAqB,CAAC,GAAG,EAAE;QAC1B,OAAO,IAAI,MAAM,EAAE,CAAC;IACrB,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEtB,MAAM,SAAS,GAAG,WAAW,CAC5B,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;QACpB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,MAAM,UAAU,CAAC;YAC3C,GAAG,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC;YACrD,eAAe,EAAE,MAAM;YACvB,eAAe,EAAE,OAAO;YACxB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,GAAG,GAAG,KAAK;SAClB,CAAC,CAAC;QACH,OAAO;YACN,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;gBAChC,GAAG,OAAO;gBACV,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBACxB,UAAU,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBAChC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;gBACnE,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;gBACnG,cAAc,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS;aAC9F,CAAC,CAAC;YACH,SAAS,EAAE,KAAK;SAChB,CAAC;IACH,CAAC,EACD,CAAC,UAAU,EAAE,OAAO,CAAC,CACrB,CAAC;IAEF,MAAM,EAAE,aAAa,EAAE,gBAAgB,EAAE,GAAG,uBAAuB,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;IAE9F,OAAO;QACN,SAAS;QACT,aAAa;QACb,gBAAgB;KAChB,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { VisitorSearchChatsResult } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\nimport { mapMessageFromApi } from '../../../lib/utils/mapMessageFromApi';\n\ntype HistoryListOptions = {\n\tfilter: string;\n\troomId: string;\n\tvisitorId: string;\n};\n\nexport const useHistoryList = (\n\toptions: HistoryListOptions,\n): {\n\titemsList: RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>()), []);\n\n\tconst getHistory = useEndpoint('GET', '/v1/livechat/visitors.searchChats/room/:roomId/visitor/:visitorId', {\n\t\troomId: options.roomId,\n\t\tvisitorId: options.visitorId,\n\t});\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { history, total } = await getHistory({\n\t\t\t\t...(options.filter && { searchText: options.filter }),\n\t\t\t\tclosedChatsOnly: 'true',\n\t\t\t\tservedChatsOnly: 'false',\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\t\t\treturn {\n\t\t\t\titems: history.map((history) => ({\n\t\t\t\t\t...history,\n\t\t\t\t\tts: new Date(history.ts),\n\t\t\t\t\t_updatedAt: new Date(history.ts),\n\t\t\t\t\tclosedAt: history.closedAt ? new Date(history.closedAt) : undefined,\n\t\t\t\t\tservedBy: history.servedBy ? { ...history.servedBy, ts: new Date(history.servedBy.ts) } : undefined,\n\t\t\t\t\tclosingMessage: history.closingMessage ? mapMessageFromApi(history.closingMessage) : undefined,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getHistory, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  useHistoryList: () => useHistoryList\n});\nlet useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n}, 0);\nlet useCallback, useState;\nmodule.link(\"react\", {\n  useCallback(v) {\n    useCallback = v;\n  },\n  useState(v) {\n    useState = v;\n  }\n}, 1);\nlet useScrollableRecordList;\nmodule.link(\"../../../hooks/lists/useScrollableRecordList\", {\n  useScrollableRecordList(v) {\n    useScrollableRecordList = v;\n  }\n}, 2);\nlet useComponentDidUpdate;\nmodule.link(\"../../../hooks/useComponentDidUpdate\", {\n  useComponentDidUpdate(v) {\n    useComponentDidUpdate = v;\n  }\n}, 3);\nlet RecordList;\nmodule.link(\"../../../lib/lists/RecordList\", {\n  RecordList(v) {\n    RecordList = v;\n  }\n}, 4);\nlet mapMessageFromApi;\nmodule.link(\"../../../lib/utils/mapMessageFromApi\", {\n  mapMessageFromApi(v) {\n    mapMessageFromApi = v;\n  }\n}, 5);\nconst useHistoryList = options => {\n  const [itemsList, setItemsList] = useState(() => new RecordList());\n  const reload = useCallback(() => setItemsList(new RecordList()), []);\n  const getHistory = useEndpoint('GET', '/v1/livechat/visitors.searchChats/room/:roomId/visitor/:visitorId', {\n    roomId: options.roomId,\n    visitorId: options.visitorId\n  });\n  useComponentDidUpdate(() => {\n    options && reload();\n  }, [options, reload]);\n  const fetchData = useCallback(async (start, end) => {\n    const {\n      history,\n      total\n    } = await getHistory(_objectSpread(_objectSpread({}, options.filter && {\n      searchText: options.filter\n    }), {}, {\n      closedChatsOnly: 'true',\n      servedChatsOnly: 'false',\n      offset: start,\n      count: end + start\n    }));\n    return {\n      items: history.map(history => _objectSpread(_objectSpread({}, history), {}, {\n        ts: new Date(history.ts),\n        _updatedAt: new Date(history.ts),\n        closedAt: history.closedAt ? new Date(history.closedAt) : undefined,\n        servedBy: history.servedBy ? _objectSpread(_objectSpread({}, history.servedBy), {}, {\n          ts: new Date(history.servedBy.ts)\n        }) : undefined,\n        closingMessage: history.closingMessage ? mapMessageFromApi(history.closingMessage) : undefined\n      })),\n      itemCount: total\n    };\n  }, [getHistory, options]);\n  const {\n    loadMoreItems,\n    initialItemCount\n  } = useScrollableRecordList(itemsList, fetchData, 25);\n  return {\n    itemsList,\n    loadMoreItems,\n    initialItemCount\n  };\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","useHistoryList","useEndpoint","useCallback","useState","useScrollableRecordList","useComponentDidUpdate","RecordList","mapMessageFromApi","options","itemsList","setItemsList","reload","getHistory","roomId","visitorId","fetchData","start","end","history","total","filter","searchText","closedChatsOnly","servedChatsOnly","offset","count","items","map","ts","Date","_updatedAt","closedAt","undefined","servedBy","closingMessage","itemCount","loadMoreItems","initialItemCount"],"sources":["client/views/omnichannel/contactHistory/useHistoryList.ts"],"sourcesContent":["import type { VisitorSearchChatsResult } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\nimport { mapMessageFromApi } from '../../../lib/utils/mapMessageFromApi';\n\ntype HistoryListOptions = {\n\tfilter: string;\n\troomId: string;\n\tvisitorId: string;\n};\n\nexport const useHistoryList = (\n\toptions: HistoryListOptions,\n): {\n\titemsList: RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>()), []);\n\n\tconst getHistory = useEndpoint('GET', '/v1/livechat/visitors.searchChats/room/:roomId/visitor/:visitorId', {\n\t\troomId: options.roomId,\n\t\tvisitorId: options.visitorId,\n\t});\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { history, total } = await getHistory({\n\t\t\t\t...(options.filter && { searchText: options.filter }),\n\t\t\t\tclosedChatsOnly: 'true',\n\t\t\t\tservedChatsOnly: 'false',\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\t\t\treturn {\n\t\t\t\titems: history.map((history) => ({\n\t\t\t\t\t...history,\n\t\t\t\t\tts: new Date(history.ts),\n\t\t\t\t\t_updatedAt: new Date(history.ts),\n\t\t\t\t\tclosedAt: history.closedAt ? new Date(history.closedAt) : undefined,\n\t\t\t\t\tservedBy: history.servedBy ? { ...history.servedBy, ts: new Date(history.servedBy.ts) } : undefined,\n\t\t\t\t\tclosingMessage: history.closingMessage ? mapMessageFromApi(history.closingMessage) : undefined,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getHistory, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"65bfc34bf5ec409a7250fd7ad46c40f9b82bd349"}
