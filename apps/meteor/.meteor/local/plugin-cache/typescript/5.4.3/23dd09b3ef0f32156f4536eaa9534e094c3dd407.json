{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/reactions/server/setReaction.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/reactions/server/setReaction.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/reactions/server/setReaction.ts","inputSourceMap":{"version":3,"file":"app/reactions/server/setReaction.ts","sourceRoot":"","sources":["app/reactions/server/setReaction.ts"],"names":[],"mappings":"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","sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport { api, Message } from '@rocket.chat/core-services';\nimport type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Messages, EmojiCustom, Rooms, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../lib/callbacks';\nimport { i18n } from '../../../server/lib/i18n';\nimport { canAccessRoomAsync } from '../../authorization/server';\nimport { hasPermissionAsync } from '../../authorization/server/functions/hasPermission';\nimport { emoji } from '../../emoji/server';\nimport { isTheLastMessage } from '../../lib/server/functions/isTheLastMessage';\nimport { notifyOnMessageChange } from '../../lib/server/lib/notifyListener';\n\nexport const removeUserReaction = (message: IMessage, reaction: string, username: string) => {\n\tif (!message.reactions) {\n\t\treturn message;\n\t}\n\n\tconst idx = message.reactions[reaction].usernames.indexOf(username);\n\n\t// user not found in reaction array\n\tif (idx === -1) {\n\t\treturn message;\n\t}\n\n\tmessage.reactions[reaction].usernames.splice(idx, 1);\n\tif (!message.reactions[reaction].usernames.length) {\n\t\tdelete message.reactions[reaction];\n\t}\n\treturn message;\n};\n\nexport async function setReaction(\n\troom: Pick<IRoom, '_id' | 'muted' | 'unmuted' | 'reactWhenReadOnly' | 'ro' | 'lastMessage' | 'federated'>,\n\tuser: IUser,\n\tmessage: IMessage,\n\treaction: string,\n\tuserAlreadyReacted?: boolean,\n) {\n\tawait Message.beforeReacted(message, room);\n\n\tif (Array.isArray(room.muted) && room.muted.includes(user.username as string)) {\n\t\tthrow new Meteor.Error('error-not-allowed', i18n.t('You_have_been_muted', { lng: user.language }), {\n\t\t\trid: room._id,\n\t\t});\n\t}\n\n\tif (room.ro === true && !room.reactWhenReadOnly && !(await hasPermissionAsync(user._id, 'post-readonly', room._id))) {\n\t\t// Unless the user was manually unmuted\n\t\tif (!(room.unmuted || []).includes(user.username as string)) {\n\t\t\tthrow new Error(\"You can't send messages because the room is readonly.\");\n\t\t}\n\t}\n\n\tlet isReacted;\n\tif (userAlreadyReacted) {\n\t\tconst oldMessage = JSON.parse(JSON.stringify(message));\n\t\tremoveUserReaction(message, reaction, user.username as string);\n\t\tif (Object.keys(message.reactions || {}).length === 0) {\n\t\t\tdelete message.reactions;\n\t\t\tawait Messages.unsetReactions(message._id);\n\t\t\tif (isTheLastMessage(room, message)) {\n\t\t\t\tawait Rooms.unsetReactionsInLastMessage(room._id);\n\t\t\t}\n\t\t} else {\n\t\t\tawait Messages.setReactions(message._id, message.reactions);\n\t\t\tif (isTheLastMessage(room, message)) {\n\t\t\t\tawait Rooms.setReactionsInLastMessage(room._id, message.reactions);\n\t\t\t}\n\t\t}\n\t\tvoid callbacks.run('afterUnsetReaction', message, { user, reaction, shouldReact: false, oldMessage });\n\n\t\tisReacted = false;\n\t} else {\n\t\tif (!message.reactions) {\n\t\t\tmessage.reactions = {};\n\t\t}\n\t\tif (!message.reactions[reaction]) {\n\t\t\tmessage.reactions[reaction] = {\n\t\t\t\tusernames: [],\n\t\t\t};\n\t\t}\n\t\tmessage.reactions[reaction].usernames.push(user.username as string);\n\t\tawait Messages.setReactions(message._id, message.reactions);\n\t\tif (isTheLastMessage(room, message)) {\n\t\t\tawait Rooms.setReactionsInLastMessage(room._id, message.reactions);\n\t\t}\n\n\t\tvoid callbacks.run('afterSetReaction', message, { user, reaction, shouldReact: true });\n\n\t\tisReacted = true;\n\t}\n\n\tvoid Apps.self?.triggerEvent(AppEvents.IPostMessageReacted, message, user, reaction, isReacted);\n\n\tvoid notifyOnMessageChange({\n\t\tid: message._id,\n\t});\n}\n\nexport async function executeSetReaction(\n\tuserId: string,\n\treaction: string,\n\tmessageParam: IMessage['_id'] | IMessage,\n\tshouldReact?: boolean,\n) {\n\t// Check if the emoji is valid before proceeding\n\tconst reactionWithoutColons = reaction.replace(/:/g, '');\n\treaction = `:${reactionWithoutColons}:`;\n\n\tif (!emoji.list[reaction] && (await EmojiCustom.countByNameOrAlias(reactionWithoutColons)) === 0) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Invalid emoji provided.', {\n\t\t\tmethod: 'setReaction',\n\t\t});\n\t}\n\n\tconst user = await Users.findOneById(userId);\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setReaction' });\n\t}\n\n\tconst message = typeof messageParam === 'string' ? await Messages.findOneById(messageParam) : messageParam;\n\tif (!message) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'setReaction' });\n\t}\n\n\tconst userAlreadyReacted =\n\t\tmessage.reactions && Boolean(message.reactions[reaction]) && message.reactions[reaction].usernames.includes(user.username as string);\n\n\t// When shouldReact was not informed, toggle the reaction.\n\tif (shouldReact === undefined) {\n\t\tshouldReact = !userAlreadyReacted;\n\t}\n\n\tif (userAlreadyReacted === shouldReact) {\n\t\treturn;\n\t}\n\n\tconst room = await Rooms.findOneById<\n\t\tPick<IRoom, '_id' | 'ro' | 'muted' | 'reactWhenReadOnly' | 'lastMessage' | 't' | 'prid' | 'federated'>\n\t>(message.rid, { projection: { _id: 1, ro: 1, muted: 1, reactWhenReadOnly: 1, lastMessage: 1, t: 1, prid: 1, federated: 1 } });\n\tif (!room) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'setReaction' });\n\t}\n\n\tif (!(await canAccessRoomAsync(room, user))) {\n\t\tthrow new Meteor.Error('not-authorized', 'Not Authorized', { method: 'setReaction' });\n\t}\n\n\treturn setReaction(room, user, message, reaction, userAlreadyReacted);\n}\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsetReaction(reaction: string, messageId: IMessage['_id'], shouldReact?: boolean): boolean | undefined;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync setReaction(reaction, messageId, shouldReact) {\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setReaction' });\n\t\t}\n\n\t\ttry {\n\t\t\tawait executeSetReaction(uid, reaction, messageId, shouldReact);\n\t\t} catch (e: any) {\n\t\t\tif (e.error === 'error-not-allowed' && e.reason && e.details && e.details.rid) {\n\t\t\t\tvoid api.broadcast('notify.ephemeralMessage', uid, e.details.rid, {\n\t\t\t\t\tmsg: e.reason,\n\t\t\t\t});\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthrow e;\n\t\t}\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/reactions/server/setReaction.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/reactions/server/setReaction.ts","inputSourceMap":{"version":3,"file":"app/reactions/server/setReaction.ts","sourceRoot":"","sources":["app/reactions/server/setReaction.ts"],"names":[],"mappings":"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","sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport { api, Message } from '@rocket.chat/core-services';\nimport type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Messages, EmojiCustom, Rooms, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../lib/callbacks';\nimport { i18n } from '../../../server/lib/i18n';\nimport { canAccessRoomAsync } from '../../authorization/server';\nimport { hasPermissionAsync } from '../../authorization/server/functions/hasPermission';\nimport { emoji } from '../../emoji/server';\nimport { isTheLastMessage } from '../../lib/server/functions/isTheLastMessage';\nimport { notifyOnMessageChange } from '../../lib/server/lib/notifyListener';\n\nexport const removeUserReaction = (message: IMessage, reaction: string, username: string) => {\n\tif (!message.reactions) {\n\t\treturn message;\n\t}\n\n\tconst idx = message.reactions[reaction].usernames.indexOf(username);\n\n\t// user not found in reaction array\n\tif (idx === -1) {\n\t\treturn message;\n\t}\n\n\tmessage.reactions[reaction].usernames.splice(idx, 1);\n\tif (!message.reactions[reaction].usernames.length) {\n\t\tdelete message.reactions[reaction];\n\t}\n\treturn message;\n};\n\nexport async function setReaction(\n\troom: Pick<IRoom, '_id' | 'muted' | 'unmuted' | 'reactWhenReadOnly' | 'ro' | 'lastMessage' | 'federated'>,\n\tuser: IUser,\n\tmessage: IMessage,\n\treaction: string,\n\tuserAlreadyReacted?: boolean,\n) {\n\tawait Message.beforeReacted(message, room);\n\n\tif (Array.isArray(room.muted) && room.muted.includes(user.username as string)) {\n\t\tthrow new Meteor.Error('error-not-allowed', i18n.t('You_have_been_muted', { lng: user.language }), {\n\t\t\trid: room._id,\n\t\t});\n\t}\n\n\tif (room.ro === true && !room.reactWhenReadOnly && !(await hasPermissionAsync(user._id, 'post-readonly', room._id))) {\n\t\t// Unless the user was manually unmuted\n\t\tif (!(room.unmuted || []).includes(user.username as string)) {\n\t\t\tthrow new Error(\"You can't send messages because the room is readonly.\");\n\t\t}\n\t}\n\n\tlet isReacted;\n\tif (userAlreadyReacted) {\n\t\tconst oldMessage = JSON.parse(JSON.stringify(message));\n\t\tremoveUserReaction(message, reaction, user.username as string);\n\t\tif (Object.keys(message.reactions || {}).length === 0) {\n\t\t\tdelete message.reactions;\n\t\t\tawait Messages.unsetReactions(message._id);\n\t\t\tif (isTheLastMessage(room, message)) {\n\t\t\t\tawait Rooms.unsetReactionsInLastMessage(room._id);\n\t\t\t}\n\t\t} else {\n\t\t\tawait Messages.setReactions(message._id, message.reactions);\n\t\t\tif (isTheLastMessage(room, message)) {\n\t\t\t\tawait Rooms.setReactionsInLastMessage(room._id, message.reactions);\n\t\t\t}\n\t\t}\n\t\tvoid callbacks.run('afterUnsetReaction', message, { user, reaction, shouldReact: false, oldMessage });\n\n\t\tisReacted = false;\n\t} else {\n\t\tif (!message.reactions) {\n\t\t\tmessage.reactions = {};\n\t\t}\n\t\tif (!message.reactions[reaction]) {\n\t\t\tmessage.reactions[reaction] = {\n\t\t\t\tusernames: [],\n\t\t\t};\n\t\t}\n\t\tmessage.reactions[reaction].usernames.push(user.username as string);\n\t\tawait Messages.setReactions(message._id, message.reactions);\n\t\tif (isTheLastMessage(room, message)) {\n\t\t\tawait Rooms.setReactionsInLastMessage(room._id, message.reactions);\n\t\t}\n\n\t\tvoid callbacks.run('afterSetReaction', message, { user, reaction, shouldReact: true });\n\n\t\tisReacted = true;\n\t}\n\n\tvoid Apps.self?.triggerEvent(AppEvents.IPostMessageReacted, message, user, reaction, isReacted);\n\n\tvoid notifyOnMessageChange({\n\t\tid: message._id,\n\t});\n}\n\nexport async function executeSetReaction(\n\tuserId: string,\n\treaction: string,\n\tmessageParam: IMessage['_id'] | IMessage,\n\tshouldReact?: boolean,\n) {\n\t// Check if the emoji is valid before proceeding\n\tconst reactionWithoutColons = reaction.replace(/:/g, '');\n\treaction = `:${reactionWithoutColons}:`;\n\n\tif (!emoji.list[reaction] && (await EmojiCustom.countByNameOrAlias(reactionWithoutColons)) === 0) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Invalid emoji provided.', {\n\t\t\tmethod: 'setReaction',\n\t\t});\n\t}\n\n\tconst user = await Users.findOneById(userId);\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setReaction' });\n\t}\n\n\tconst message = typeof messageParam === 'string' ? await Messages.findOneById(messageParam) : messageParam;\n\tif (!message) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'setReaction' });\n\t}\n\n\tconst userAlreadyReacted =\n\t\tmessage.reactions && Boolean(message.reactions[reaction]) && message.reactions[reaction].usernames.includes(user.username as string);\n\n\t// When shouldReact was not informed, toggle the reaction.\n\tif (shouldReact === undefined) {\n\t\tshouldReact = !userAlreadyReacted;\n\t}\n\n\tif (userAlreadyReacted === shouldReact) {\n\t\treturn;\n\t}\n\n\tconst room = await Rooms.findOneById<\n\t\tPick<IRoom, '_id' | 'ro' | 'muted' | 'reactWhenReadOnly' | 'lastMessage' | 't' | 'prid' | 'federated'>\n\t>(message.rid, { projection: { _id: 1, ro: 1, muted: 1, reactWhenReadOnly: 1, lastMessage: 1, t: 1, prid: 1, federated: 1 } });\n\tif (!room) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'setReaction' });\n\t}\n\n\tif (!(await canAccessRoomAsync(room, user))) {\n\t\tthrow new Meteor.Error('not-authorized', 'Not Authorized', { method: 'setReaction' });\n\t}\n\n\treturn setReaction(room, user, message, reaction, userAlreadyReacted);\n}\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsetReaction(reaction: string, messageId: IMessage['_id'], shouldReact?: boolean): boolean | undefined;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync setReaction(reaction, messageId, shouldReact) {\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setReaction' });\n\t\t}\n\n\t\ttry {\n\t\t\tawait executeSetReaction(uid, reaction, messageId, shouldReact);\n\t\t} catch (e: any) {\n\t\t\tif (e.error === 'error-not-allowed' && e.reason && e.details && e.details.rid) {\n\t\t\t\tvoid api.broadcast('notify.ephemeralMessage', uid, e.details.rid, {\n\t\t\t\t\tmsg: e.reason,\n\t\t\t\t});\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthrow e;\n\t\t}\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      removeUserReaction: () => removeUserReaction,\n      setReaction: () => setReaction,\n      executeSetReaction: () => executeSetReaction\n    });\n    let Apps, AppEvents;\n    module.link(\"@rocket.chat/apps\", {\n      Apps(v) {\n        Apps = v;\n      },\n      AppEvents(v) {\n        AppEvents = v;\n      }\n    }, 0);\n    let api, Message;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      },\n      Message(v) {\n        Message = v;\n      }\n    }, 1);\n    let Messages, EmojiCustom, Rooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      EmojiCustom(v) {\n        EmojiCustom = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let callbacks;\n    module.link(\"../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 4);\n    let i18n;\n    module.link(\"../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 5);\n    let canAccessRoomAsync;\n    module.link(\"../../authorization/server\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 6);\n    let hasPermissionAsync;\n    module.link(\"../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 7);\n    let emoji;\n    module.link(\"../../emoji/server\", {\n      emoji(v) {\n        emoji = v;\n      }\n    }, 8);\n    let isTheLastMessage;\n    module.link(\"../../lib/server/functions/isTheLastMessage\", {\n      isTheLastMessage(v) {\n        isTheLastMessage = v;\n      }\n    }, 9);\n    let notifyOnMessageChange;\n    module.link(\"../../lib/server/lib/notifyListener\", {\n      notifyOnMessageChange(v) {\n        notifyOnMessageChange = v;\n      }\n    }, 10);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const removeUserReaction = (message, reaction, username) => {\n      if (!message.reactions) {\n        return message;\n      }\n      const idx = message.reactions[reaction].usernames.indexOf(username);\n      // user not found in reaction array\n      if (idx === -1) {\n        return message;\n      }\n      message.reactions[reaction].usernames.splice(idx, 1);\n      if (!message.reactions[reaction].usernames.length) {\n        delete message.reactions[reaction];\n      }\n      return message;\n    };\n    async function setReaction(room, user, message, reaction, userAlreadyReacted) {\n      var _Apps$self;\n      await Message.beforeReacted(message, room);\n      if (Array.isArray(room.muted) && room.muted.includes(user.username)) {\n        throw new Meteor.Error('error-not-allowed', i18n.t('You_have_been_muted', {\n          lng: user.language\n        }), {\n          rid: room._id\n        });\n      }\n      if (room.ro === true && !room.reactWhenReadOnly && !(await hasPermissionAsync(user._id, 'post-readonly', room._id))) {\n        // Unless the user was manually unmuted\n        if (!(room.unmuted || []).includes(user.username)) {\n          throw new Error(\"You can't send messages because the room is readonly.\");\n        }\n      }\n      let isReacted;\n      if (userAlreadyReacted) {\n        const oldMessage = JSON.parse(JSON.stringify(message));\n        removeUserReaction(message, reaction, user.username);\n        if (Object.keys(message.reactions || {}).length === 0) {\n          delete message.reactions;\n          await Messages.unsetReactions(message._id);\n          if (isTheLastMessage(room, message)) {\n            await Rooms.unsetReactionsInLastMessage(room._id);\n          }\n        } else {\n          await Messages.setReactions(message._id, message.reactions);\n          if (isTheLastMessage(room, message)) {\n            await Rooms.setReactionsInLastMessage(room._id, message.reactions);\n          }\n        }\n        void callbacks.run('afterUnsetReaction', message, {\n          user,\n          reaction,\n          shouldReact: false,\n          oldMessage\n        });\n        isReacted = false;\n      } else {\n        if (!message.reactions) {\n          message.reactions = {};\n        }\n        if (!message.reactions[reaction]) {\n          message.reactions[reaction] = {\n            usernames: []\n          };\n        }\n        message.reactions[reaction].usernames.push(user.username);\n        await Messages.setReactions(message._id, message.reactions);\n        if (isTheLastMessage(room, message)) {\n          await Rooms.setReactionsInLastMessage(room._id, message.reactions);\n        }\n        void callbacks.run('afterSetReaction', message, {\n          user,\n          reaction,\n          shouldReact: true\n        });\n        isReacted = true;\n      }\n      void ((_Apps$self = Apps.self) === null || _Apps$self === void 0 ? void 0 : _Apps$self.triggerEvent(AppEvents.IPostMessageReacted, message, user, reaction, isReacted));\n      void notifyOnMessageChange({\n        id: message._id\n      });\n    }\n    async function executeSetReaction(userId, reaction, messageParam, shouldReact) {\n      // Check if the emoji is valid before proceeding\n      const reactionWithoutColons = reaction.replace(/:/g, '');\n      reaction = \":\".concat(reactionWithoutColons, \":\");\n      if (!emoji.list[reaction] && (await EmojiCustom.countByNameOrAlias(reactionWithoutColons)) === 0) {\n        throw new Meteor.Error('error-not-allowed', 'Invalid emoji provided.', {\n          method: 'setReaction'\n        });\n      }\n      const user = await Users.findOneById(userId);\n      if (!user) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'setReaction'\n        });\n      }\n      const message = typeof messageParam === 'string' ? await Messages.findOneById(messageParam) : messageParam;\n      if (!message) {\n        throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n          method: 'setReaction'\n        });\n      }\n      const userAlreadyReacted = message.reactions && Boolean(message.reactions[reaction]) && message.reactions[reaction].usernames.includes(user.username);\n      // When shouldReact was not informed, toggle the reaction.\n      if (shouldReact === undefined) {\n        shouldReact = !userAlreadyReacted;\n      }\n      if (userAlreadyReacted === shouldReact) {\n        return;\n      }\n      const room = await Rooms.findOneById(message.rid, {\n        projection: {\n          _id: 1,\n          ro: 1,\n          muted: 1,\n          reactWhenReadOnly: 1,\n          lastMessage: 1,\n          t: 1,\n          prid: 1,\n          federated: 1\n        }\n      });\n      if (!room) {\n        throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n          method: 'setReaction'\n        });\n      }\n      if (!(await canAccessRoomAsync(room, user))) {\n        throw new Meteor.Error('not-authorized', 'Not Authorized', {\n          method: 'setReaction'\n        });\n      }\n      return setReaction(room, user, message, reaction, userAlreadyReacted);\n    }\n    Meteor.methods({\n      async setReaction(reaction, messageId, shouldReact) {\n        const uid = Meteor.userId();\n        if (!uid) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'setReaction'\n          });\n        }\n        try {\n          await executeSetReaction(uid, reaction, messageId, shouldReact);\n        } catch (e) {\n          if (e.error === 'error-not-allowed' && e.reason && e.details && e.details.rid) {\n            void api.broadcast('notify.ephemeralMessage', uid, e.details.rid, {\n              msg: e.reason\n            });\n            return false;\n          }\n          throw e;\n        }\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","removeUserReaction","setReaction","executeSetReaction","Apps","AppEvents","link","v","api","Message","Messages","EmojiCustom","Rooms","Users","Meteor","callbacks","i18n","canAccessRoomAsync","hasPermissionAsync","emoji","isTheLastMessage","notifyOnMessageChange","__reifyWaitForDeps__","message","reaction","username","reactions","idx","usernames","indexOf","splice","length","room","user","userAlreadyReacted","_Apps$self","beforeReacted","Array","isArray","muted","includes","Error","t","lng","language","rid","_id","ro","reactWhenReadOnly","unmuted","isReacted","oldMessage","JSON","parse","stringify","Object","keys","unsetReactions","unsetReactionsInLastMessage","setReactions","setReactionsInLastMessage","run","shouldReact","push","self","triggerEvent","IPostMessageReacted","id","userId","messageParam","reactionWithoutColons","replace","concat","list","countByNameOrAlias","method","findOneById","Boolean","undefined","projection","lastMessage","prid","federated","methods","messageId","uid","e","error","reason","details","broadcast","msg","__reify_async_result__","_reifyError","async"],"sources":["app/reactions/server/setReaction.ts"],"sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport { api, Message } from '@rocket.chat/core-services';\nimport type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Messages, EmojiCustom, Rooms, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { callbacks } from '../../../lib/callbacks';\nimport { i18n } from '../../../server/lib/i18n';\nimport { canAccessRoomAsync } from '../../authorization/server';\nimport { hasPermissionAsync } from '../../authorization/server/functions/hasPermission';\nimport { emoji } from '../../emoji/server';\nimport { isTheLastMessage } from '../../lib/server/functions/isTheLastMessage';\nimport { notifyOnMessageChange } from '../../lib/server/lib/notifyListener';\n\nexport const removeUserReaction = (message: IMessage, reaction: string, username: string) => {\n\tif (!message.reactions) {\n\t\treturn message;\n\t}\n\n\tconst idx = message.reactions[reaction].usernames.indexOf(username);\n\n\t// user not found in reaction array\n\tif (idx === -1) {\n\t\treturn message;\n\t}\n\n\tmessage.reactions[reaction].usernames.splice(idx, 1);\n\tif (!message.reactions[reaction].usernames.length) {\n\t\tdelete message.reactions[reaction];\n\t}\n\treturn message;\n};\n\nexport async function setReaction(\n\troom: Pick<IRoom, '_id' | 'muted' | 'unmuted' | 'reactWhenReadOnly' | 'ro' | 'lastMessage' | 'federated'>,\n\tuser: IUser,\n\tmessage: IMessage,\n\treaction: string,\n\tuserAlreadyReacted?: boolean,\n) {\n\tawait Message.beforeReacted(message, room);\n\n\tif (Array.isArray(room.muted) && room.muted.includes(user.username as string)) {\n\t\tthrow new Meteor.Error('error-not-allowed', i18n.t('You_have_been_muted', { lng: user.language }), {\n\t\t\trid: room._id,\n\t\t});\n\t}\n\n\tif (room.ro === true && !room.reactWhenReadOnly && !(await hasPermissionAsync(user._id, 'post-readonly', room._id))) {\n\t\t// Unless the user was manually unmuted\n\t\tif (!(room.unmuted || []).includes(user.username as string)) {\n\t\t\tthrow new Error(\"You can't send messages because the room is readonly.\");\n\t\t}\n\t}\n\n\tlet isReacted;\n\tif (userAlreadyReacted) {\n\t\tconst oldMessage = JSON.parse(JSON.stringify(message));\n\t\tremoveUserReaction(message, reaction, user.username as string);\n\t\tif (Object.keys(message.reactions || {}).length === 0) {\n\t\t\tdelete message.reactions;\n\t\t\tawait Messages.unsetReactions(message._id);\n\t\t\tif (isTheLastMessage(room, message)) {\n\t\t\t\tawait Rooms.unsetReactionsInLastMessage(room._id);\n\t\t\t}\n\t\t} else {\n\t\t\tawait Messages.setReactions(message._id, message.reactions);\n\t\t\tif (isTheLastMessage(room, message)) {\n\t\t\t\tawait Rooms.setReactionsInLastMessage(room._id, message.reactions);\n\t\t\t}\n\t\t}\n\t\tvoid callbacks.run('afterUnsetReaction', message, { user, reaction, shouldReact: false, oldMessage });\n\n\t\tisReacted = false;\n\t} else {\n\t\tif (!message.reactions) {\n\t\t\tmessage.reactions = {};\n\t\t}\n\t\tif (!message.reactions[reaction]) {\n\t\t\tmessage.reactions[reaction] = {\n\t\t\t\tusernames: [],\n\t\t\t};\n\t\t}\n\t\tmessage.reactions[reaction].usernames.push(user.username as string);\n\t\tawait Messages.setReactions(message._id, message.reactions);\n\t\tif (isTheLastMessage(room, message)) {\n\t\t\tawait Rooms.setReactionsInLastMessage(room._id, message.reactions);\n\t\t}\n\n\t\tvoid callbacks.run('afterSetReaction', message, { user, reaction, shouldReact: true });\n\n\t\tisReacted = true;\n\t}\n\n\tvoid Apps.self?.triggerEvent(AppEvents.IPostMessageReacted, message, user, reaction, isReacted);\n\n\tvoid notifyOnMessageChange({\n\t\tid: message._id,\n\t});\n}\n\nexport async function executeSetReaction(\n\tuserId: string,\n\treaction: string,\n\tmessageParam: IMessage['_id'] | IMessage,\n\tshouldReact?: boolean,\n) {\n\t// Check if the emoji is valid before proceeding\n\tconst reactionWithoutColons = reaction.replace(/:/g, '');\n\treaction = `:${reactionWithoutColons}:`;\n\n\tif (!emoji.list[reaction] && (await EmojiCustom.countByNameOrAlias(reactionWithoutColons)) === 0) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Invalid emoji provided.', {\n\t\t\tmethod: 'setReaction',\n\t\t});\n\t}\n\n\tconst user = await Users.findOneById(userId);\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setReaction' });\n\t}\n\n\tconst message = typeof messageParam === 'string' ? await Messages.findOneById(messageParam) : messageParam;\n\tif (!message) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'setReaction' });\n\t}\n\n\tconst userAlreadyReacted =\n\t\tmessage.reactions && Boolean(message.reactions[reaction]) && message.reactions[reaction].usernames.includes(user.username as string);\n\n\t// When shouldReact was not informed, toggle the reaction.\n\tif (shouldReact === undefined) {\n\t\tshouldReact = !userAlreadyReacted;\n\t}\n\n\tif (userAlreadyReacted === shouldReact) {\n\t\treturn;\n\t}\n\n\tconst room = await Rooms.findOneById<\n\t\tPick<IRoom, '_id' | 'ro' | 'muted' | 'reactWhenReadOnly' | 'lastMessage' | 't' | 'prid' | 'federated'>\n\t>(message.rid, { projection: { _id: 1, ro: 1, muted: 1, reactWhenReadOnly: 1, lastMessage: 1, t: 1, prid: 1, federated: 1 } });\n\tif (!room) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'setReaction' });\n\t}\n\n\tif (!(await canAccessRoomAsync(room, user))) {\n\t\tthrow new Meteor.Error('not-authorized', 'Not Authorized', { method: 'setReaction' });\n\t}\n\n\treturn setReaction(room, user, message, reaction, userAlreadyReacted);\n}\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsetReaction(reaction: string, messageId: IMessage['_id'], shouldReact?: boolean): boolean | undefined;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync setReaction(reaction, messageId, shouldReact) {\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'setReaction' });\n\t\t}\n\n\t\ttry {\n\t\t\tawait executeSetReaction(uid, reaction, messageId, shouldReact);\n\t\t} catch (e: any) {\n\t\t\tif (e.error === 'error-not-allowed' && e.reason && e.details && e.details.rid) {\n\t\t\t\tvoid api.broadcast('notify.ephemeralMessage', uid, e.details.rid, {\n\t\t\t\t\tmsg: e.reason,\n\t\t\t\t});\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthrow e;\n\t\t}\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"23dd09b3ef0f32156f4536eaa9534e094c3dd407"}
