{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useOpenRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/hooks/useOpenRoom.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useOpenRoom.ts","inputSourceMap":{"version":3,"file":"client/views/room/hooks/useOpenRoom.ts","sourceRoot":"","sources":["client/views/room/hooks/useOpenRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, RoomType } from '@rocket.chat/core-typings';\nimport { useMethod, useRoute, useSetting, useUser } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useRef } from 'react';\n\nimport { roomFields } from '../../../../lib/publishFields';\nimport { omit } from '../../../../lib/utils/omit';\nimport { NotAuthorizedError } from '../../../lib/errors/NotAuthorizedError';\nimport { OldUrlRoomError } from '../../../lib/errors/OldUrlRoomError';\nimport { RoomNotFoundError } from '../../../lib/errors/RoomNotFoundError';\nimport { queryClient } from '../../../lib/queryClient';\n\nexport function useOpenRoom({ type, reference }: { type: RoomType; reference: string }) {\n\tconst user = useUser();\n\tconst allowAnonymousRead = useSetting('Accounts_AllowAnonymousRead', true);\n\tconst getRoomByTypeAndName = useMethod('getRoomByTypeAndName');\n\tconst createDirectMessage = useMethod('createDirectMessage');\n\tconst openRoom = useMethod('openRoom');\n\tconst directRoute = useRoute('direct');\n\n\tconst unsubscribeFromRoomOpenedEvent = useRef<() => void>(() => undefined);\n\n\treturn useQuery(\n\t\t// we need to add uid and username here because `user` is not loaded all at once (see UserProvider -> Meteor.user())\n\t\t['rooms', { reference, type }, { uid: user?._id, username: user?.username }] as const,\n\t\tasync (): Promise<{ rid: IRoom['_id'] }> => {\n\t\t\tif ((user && !user.username) || (!user && !allowAnonymousRead)) {\n\t\t\t\tthrow new NotAuthorizedError();\n\t\t\t}\n\n\t\t\tlet roomData;\n\t\t\ttry {\n\t\t\t\troomData = await getRoomByTypeAndName(type, reference);\n\t\t\t} catch (error) {\n\t\t\t\tif (type !== 'd') {\n\t\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { rid } = await createDirectMessage(...reference.split(', '));\n\t\t\t\t\tconst { ChatSubscription } = await import('../../../../app/models/client');\n\t\t\t\t\tconst { waitUntilFind } = await import('../../../lib/utils/waitUntilFind');\n\t\t\t\t\tawait waitUntilFind(() => ChatSubscription.findOne({ rid }));\n\t\t\t\t\tdirectRoute.push({ rid }, (prev) => prev);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t\t}\n\n\t\t\t\tthrow new OldUrlRoomError(undefined, { type, reference });\n\t\t\t}\n\n\t\t\tif (!roomData._id) {\n\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t}\n\n\t\t\tconst $set: any = {};\n\t\t\tconst $unset: any = {};\n\n\t\t\tfor (const key of Object.keys(roomFields)) {\n\t\t\t\tif (key in roomData) {\n\t\t\t\t\t$set[key] = roomData[key as keyof typeof roomData];\n\t\t\t\t} else {\n\t\t\t\t\t$unset[key] = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst { ChatRoom, ChatSubscription } = await import('../../../../app/models/client');\n\n\t\t\tChatRoom.upsert({ _id: roomData._id }, { $set, $unset });\n\t\t\tconst room = ChatRoom.findOne({ _id: roomData._id });\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new TypeError('room is undefined');\n\t\t\t}\n\n\t\t\tconst { LegacyRoomManager } = await import('../../../../app/ui-utils/client');\n\n\t\t\tif (reference !== undefined && room._id !== reference && type === 'd') {\n\t\t\t\t// Redirect old url using username to rid\n\t\t\t\tawait LegacyRoomManager.close(type + reference);\n\t\t\t\tdirectRoute.push({ rid: room._id }, (prev) => prev);\n\t\t\t\tthrow new OldUrlRoomError(undefined, { rid: room._id });\n\t\t\t}\n\n\t\t\tconst { RoomManager } = await import('../../../lib/RoomManager');\n\t\t\tconst { fireGlobalEvent } = await import('../../../lib/utils/fireGlobalEvent');\n\n\t\t\tunsubscribeFromRoomOpenedEvent.current();\n\t\t\tunsubscribeFromRoomOpenedEvent.current = RoomManager.once('opened', () => fireGlobalEvent('room-opened', omit(room, 'usernames')));\n\n\t\t\tLegacyRoomManager.open({ typeName: type + reference, rid: room._id });\n\n\t\t\tif (room._id === RoomManager.opened) {\n\t\t\t\treturn { rid: room._id };\n\t\t\t}\n\n\t\t\t// update user's room subscription\n\t\t\tconst sub = ChatSubscription.findOne({ rid: room._id });\n\t\t\tif (sub && !sub.open) {\n\t\t\t\tawait openRoom(room._id);\n\t\t\t}\n\t\t\treturn { rid: room._id };\n\t\t},\n\t\t{\n\t\t\tretry: 0,\n\t\t\tonError: async (error) => {\n\t\t\t\tif (['l', 'v'].includes(type) && error instanceof RoomNotFoundError) {\n\t\t\t\t\tconst { ChatRoom } = await import('../../../../app/models/client');\n\n\t\t\t\t\tChatRoom.remove(reference);\n\t\t\t\t\tqueryClient.removeQueries(['rooms', reference]);\n\t\t\t\t\tqueryClient.removeQueries(['/v1/rooms.info', reference]);\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t);\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useOpenRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/hooks/useOpenRoom.ts","inputSourceMap":{"version":3,"file":"client/views/room/hooks/useOpenRoom.ts","sourceRoot":"","sources":["client/views/room/hooks/useOpenRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, RoomType } from '@rocket.chat/core-typings';\nimport { useMethod, useRoute, useSetting, useUser } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useRef } from 'react';\n\nimport { roomFields } from '../../../../lib/publishFields';\nimport { omit } from '../../../../lib/utils/omit';\nimport { NotAuthorizedError } from '../../../lib/errors/NotAuthorizedError';\nimport { OldUrlRoomError } from '../../../lib/errors/OldUrlRoomError';\nimport { RoomNotFoundError } from '../../../lib/errors/RoomNotFoundError';\nimport { queryClient } from '../../../lib/queryClient';\n\nexport function useOpenRoom({ type, reference }: { type: RoomType; reference: string }) {\n\tconst user = useUser();\n\tconst allowAnonymousRead = useSetting('Accounts_AllowAnonymousRead', true);\n\tconst getRoomByTypeAndName = useMethod('getRoomByTypeAndName');\n\tconst createDirectMessage = useMethod('createDirectMessage');\n\tconst openRoom = useMethod('openRoom');\n\tconst directRoute = useRoute('direct');\n\n\tconst unsubscribeFromRoomOpenedEvent = useRef<() => void>(() => undefined);\n\n\treturn useQuery(\n\t\t// we need to add uid and username here because `user` is not loaded all at once (see UserProvider -> Meteor.user())\n\t\t['rooms', { reference, type }, { uid: user?._id, username: user?.username }] as const,\n\t\tasync (): Promise<{ rid: IRoom['_id'] }> => {\n\t\t\tif ((user && !user.username) || (!user && !allowAnonymousRead)) {\n\t\t\t\tthrow new NotAuthorizedError();\n\t\t\t}\n\n\t\t\tlet roomData;\n\t\t\ttry {\n\t\t\t\troomData = await getRoomByTypeAndName(type, reference);\n\t\t\t} catch (error) {\n\t\t\t\tif (type !== 'd') {\n\t\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { rid } = await createDirectMessage(...reference.split(', '));\n\t\t\t\t\tconst { ChatSubscription } = await import('../../../../app/models/client');\n\t\t\t\t\tconst { waitUntilFind } = await import('../../../lib/utils/waitUntilFind');\n\t\t\t\t\tawait waitUntilFind(() => ChatSubscription.findOne({ rid }));\n\t\t\t\t\tdirectRoute.push({ rid }, (prev) => prev);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t\t}\n\n\t\t\t\tthrow new OldUrlRoomError(undefined, { type, reference });\n\t\t\t}\n\n\t\t\tif (!roomData._id) {\n\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t}\n\n\t\t\tconst $set: any = {};\n\t\t\tconst $unset: any = {};\n\n\t\t\tfor (const key of Object.keys(roomFields)) {\n\t\t\t\tif (key in roomData) {\n\t\t\t\t\t$set[key] = roomData[key as keyof typeof roomData];\n\t\t\t\t} else {\n\t\t\t\t\t$unset[key] = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst { ChatRoom, ChatSubscription } = await import('../../../../app/models/client');\n\n\t\t\tChatRoom.upsert({ _id: roomData._id }, { $set, $unset });\n\t\t\tconst room = ChatRoom.findOne({ _id: roomData._id });\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new TypeError('room is undefined');\n\t\t\t}\n\n\t\t\tconst { LegacyRoomManager } = await import('../../../../app/ui-utils/client');\n\n\t\t\tif (reference !== undefined && room._id !== reference && type === 'd') {\n\t\t\t\t// Redirect old url using username to rid\n\t\t\t\tawait LegacyRoomManager.close(type + reference);\n\t\t\t\tdirectRoute.push({ rid: room._id }, (prev) => prev);\n\t\t\t\tthrow new OldUrlRoomError(undefined, { rid: room._id });\n\t\t\t}\n\n\t\t\tconst { RoomManager } = await import('../../../lib/RoomManager');\n\t\t\tconst { fireGlobalEvent } = await import('../../../lib/utils/fireGlobalEvent');\n\n\t\t\tunsubscribeFromRoomOpenedEvent.current();\n\t\t\tunsubscribeFromRoomOpenedEvent.current = RoomManager.once('opened', () => fireGlobalEvent('room-opened', omit(room, 'usernames')));\n\n\t\t\tLegacyRoomManager.open({ typeName: type + reference, rid: room._id });\n\n\t\t\tif (room._id === RoomManager.opened) {\n\t\t\t\treturn { rid: room._id };\n\t\t\t}\n\n\t\t\t// update user's room subscription\n\t\t\tconst sub = ChatSubscription.findOne({ rid: room._id });\n\t\t\tif (sub && !sub.open) {\n\t\t\t\tawait openRoom(room._id);\n\t\t\t}\n\t\t\treturn { rid: room._id };\n\t\t},\n\t\t{\n\t\t\tretry: 0,\n\t\t\tonError: async (error) => {\n\t\t\t\tif (['l', 'v'].includes(type) && error instanceof RoomNotFoundError) {\n\t\t\t\t\tconst { ChatRoom } = await import('../../../../app/models/client');\n\n\t\t\t\t\tChatRoom.remove(reference);\n\t\t\t\t\tqueryClient.removeQueries(['rooms', reference]);\n\t\t\t\t\tqueryClient.removeQueries(['/v1/rooms.info', reference]);\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t);\n}\n"]}}},"code":"module.export({\n  useOpenRoom: () => useOpenRoom\n});\nlet useMethod, useRoute, useSetting, useUser;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useMethod(v) {\n    useMethod = v;\n  },\n  useRoute(v) {\n    useRoute = v;\n  },\n  useSetting(v) {\n    useSetting = v;\n  },\n  useUser(v) {\n    useUser = v;\n  }\n}, 0);\nlet useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  }\n}, 1);\nlet useRef;\nmodule.link(\"react\", {\n  useRef(v) {\n    useRef = v;\n  }\n}, 2);\nlet roomFields;\nmodule.link(\"../../../../lib/publishFields\", {\n  roomFields(v) {\n    roomFields = v;\n  }\n}, 3);\nlet omit;\nmodule.link(\"../../../../lib/utils/omit\", {\n  omit(v) {\n    omit = v;\n  }\n}, 4);\nlet NotAuthorizedError;\nmodule.link(\"../../../lib/errors/NotAuthorizedError\", {\n  NotAuthorizedError(v) {\n    NotAuthorizedError = v;\n  }\n}, 5);\nlet OldUrlRoomError;\nmodule.link(\"../../../lib/errors/OldUrlRoomError\", {\n  OldUrlRoomError(v) {\n    OldUrlRoomError = v;\n  }\n}, 6);\nlet RoomNotFoundError;\nmodule.link(\"../../../lib/errors/RoomNotFoundError\", {\n  RoomNotFoundError(v) {\n    RoomNotFoundError = v;\n  }\n}, 7);\nlet queryClient;\nmodule.link(\"../../../lib/queryClient\", {\n  queryClient(v) {\n    queryClient = v;\n  }\n}, 8);\nfunction useOpenRoom(_ref) {\n  let {\n    type,\n    reference\n  } = _ref;\n  const user = useUser();\n  const allowAnonymousRead = useSetting('Accounts_AllowAnonymousRead', true);\n  const getRoomByTypeAndName = useMethod('getRoomByTypeAndName');\n  const createDirectMessage = useMethod('createDirectMessage');\n  const openRoom = useMethod('openRoom');\n  const directRoute = useRoute('direct');\n  const unsubscribeFromRoomOpenedEvent = useRef(() => undefined);\n  return useQuery(\n  // we need to add uid and username here because `user` is not loaded all at once (see UserProvider -> Meteor.user())\n  ['rooms', {\n    reference,\n    type\n  }, {\n    uid: user === null || user === void 0 ? void 0 : user._id,\n    username: user === null || user === void 0 ? void 0 : user.username\n  }], async () => {\n    if (user && !user.username || !user && !allowAnonymousRead) {\n      throw new NotAuthorizedError();\n    }\n    let roomData;\n    try {\n      roomData = await getRoomByTypeAndName(type, reference);\n    } catch (error) {\n      if (type !== 'd') {\n        throw new RoomNotFoundError(undefined, {\n          type,\n          reference\n        });\n      }\n      try {\n        const {\n          rid\n        } = await createDirectMessage(...reference.split(', '));\n        const {\n          ChatSubscription\n        } = await module.dynamicImport('../../../../app/models/client');\n        const {\n          waitUntilFind\n        } = await module.dynamicImport('../../../lib/utils/waitUntilFind');\n        await waitUntilFind(() => ChatSubscription.findOne({\n          rid\n        }));\n        directRoute.push({\n          rid\n        }, prev => prev);\n      } catch (error) {\n        throw new RoomNotFoundError(undefined, {\n          type,\n          reference\n        });\n      }\n      throw new OldUrlRoomError(undefined, {\n        type,\n        reference\n      });\n    }\n    if (!roomData._id) {\n      throw new RoomNotFoundError(undefined, {\n        type,\n        reference\n      });\n    }\n    const $set = {};\n    const $unset = {};\n    for (const key of Object.keys(roomFields)) {\n      if (key in roomData) {\n        $set[key] = roomData[key];\n      } else {\n        $unset[key] = '';\n      }\n    }\n    const {\n      ChatRoom,\n      ChatSubscription\n    } = await module.dynamicImport('../../../../app/models/client');\n    ChatRoom.upsert({\n      _id: roomData._id\n    }, {\n      $set,\n      $unset\n    });\n    const room = ChatRoom.findOne({\n      _id: roomData._id\n    });\n    if (!room) {\n      throw new TypeError('room is undefined');\n    }\n    const {\n      LegacyRoomManager\n    } = await module.dynamicImport('../../../../app/ui-utils/client');\n    if (reference !== undefined && room._id !== reference && type === 'd') {\n      // Redirect old url using username to rid\n      await LegacyRoomManager.close(type + reference);\n      directRoute.push({\n        rid: room._id\n      }, prev => prev);\n      throw new OldUrlRoomError(undefined, {\n        rid: room._id\n      });\n    }\n    const {\n      RoomManager\n    } = await module.dynamicImport('../../../lib/RoomManager');\n    const {\n      fireGlobalEvent\n    } = await module.dynamicImport('../../../lib/utils/fireGlobalEvent');\n    unsubscribeFromRoomOpenedEvent.current();\n    unsubscribeFromRoomOpenedEvent.current = RoomManager.once('opened', () => fireGlobalEvent('room-opened', omit(room, 'usernames')));\n    LegacyRoomManager.open({\n      typeName: type + reference,\n      rid: room._id\n    });\n    if (room._id === RoomManager.opened) {\n      return {\n        rid: room._id\n      };\n    }\n    // update user's room subscription\n    const sub = ChatSubscription.findOne({\n      rid: room._id\n    });\n    if (sub && !sub.open) {\n      await openRoom(room._id);\n    }\n    return {\n      rid: room._id\n    };\n  }, {\n    retry: 0,\n    onError: async error => {\n      if (['l', 'v'].includes(type) && error instanceof RoomNotFoundError) {\n        const {\n          ChatRoom\n        } = await module.dynamicImport('../../../../app/models/client');\n        ChatRoom.remove(reference);\n        queryClient.removeQueries(['rooms', reference]);\n        queryClient.removeQueries(['/v1/rooms.info', reference]);\n      }\n    }\n  });\n}","map":{"version":3,"names":["module","export","useOpenRoom","useMethod","useRoute","useSetting","useUser","link","v","useQuery","useRef","roomFields","omit","NotAuthorizedError","OldUrlRoomError","RoomNotFoundError","queryClient","_ref","type","reference","user","allowAnonymousRead","getRoomByTypeAndName","createDirectMessage","openRoom","directRoute","unsubscribeFromRoomOpenedEvent","undefined","uid","_id","username","roomData","error","rid","split","ChatSubscription","dynamicImport","waitUntilFind","findOne","push","prev","$set","$unset","key","Object","keys","ChatRoom","upsert","room","TypeError","LegacyRoomManager","close","RoomManager","fireGlobalEvent","current","once","open","typeName","opened","sub","retry","onError","includes","remove","removeQueries"],"sources":["client/views/room/hooks/useOpenRoom.ts"],"sourcesContent":["import type { IRoom, RoomType } from '@rocket.chat/core-typings';\nimport { useMethod, useRoute, useSetting, useUser } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useRef } from 'react';\n\nimport { roomFields } from '../../../../lib/publishFields';\nimport { omit } from '../../../../lib/utils/omit';\nimport { NotAuthorizedError } from '../../../lib/errors/NotAuthorizedError';\nimport { OldUrlRoomError } from '../../../lib/errors/OldUrlRoomError';\nimport { RoomNotFoundError } from '../../../lib/errors/RoomNotFoundError';\nimport { queryClient } from '../../../lib/queryClient';\n\nexport function useOpenRoom({ type, reference }: { type: RoomType; reference: string }) {\n\tconst user = useUser();\n\tconst allowAnonymousRead = useSetting('Accounts_AllowAnonymousRead', true);\n\tconst getRoomByTypeAndName = useMethod('getRoomByTypeAndName');\n\tconst createDirectMessage = useMethod('createDirectMessage');\n\tconst openRoom = useMethod('openRoom');\n\tconst directRoute = useRoute('direct');\n\n\tconst unsubscribeFromRoomOpenedEvent = useRef<() => void>(() => undefined);\n\n\treturn useQuery(\n\t\t// we need to add uid and username here because `user` is not loaded all at once (see UserProvider -> Meteor.user())\n\t\t['rooms', { reference, type }, { uid: user?._id, username: user?.username }] as const,\n\t\tasync (): Promise<{ rid: IRoom['_id'] }> => {\n\t\t\tif ((user && !user.username) || (!user && !allowAnonymousRead)) {\n\t\t\t\tthrow new NotAuthorizedError();\n\t\t\t}\n\n\t\t\tlet roomData;\n\t\t\ttry {\n\t\t\t\troomData = await getRoomByTypeAndName(type, reference);\n\t\t\t} catch (error) {\n\t\t\t\tif (type !== 'd') {\n\t\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { rid } = await createDirectMessage(...reference.split(', '));\n\t\t\t\t\tconst { ChatSubscription } = await import('../../../../app/models/client');\n\t\t\t\t\tconst { waitUntilFind } = await import('../../../lib/utils/waitUntilFind');\n\t\t\t\t\tawait waitUntilFind(() => ChatSubscription.findOne({ rid }));\n\t\t\t\t\tdirectRoute.push({ rid }, (prev) => prev);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t\t}\n\n\t\t\t\tthrow new OldUrlRoomError(undefined, { type, reference });\n\t\t\t}\n\n\t\t\tif (!roomData._id) {\n\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t}\n\n\t\t\tconst $set: any = {};\n\t\t\tconst $unset: any = {};\n\n\t\t\tfor (const key of Object.keys(roomFields)) {\n\t\t\t\tif (key in roomData) {\n\t\t\t\t\t$set[key] = roomData[key as keyof typeof roomData];\n\t\t\t\t} else {\n\t\t\t\t\t$unset[key] = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst { ChatRoom, ChatSubscription } = await import('../../../../app/models/client');\n\n\t\t\tChatRoom.upsert({ _id: roomData._id }, { $set, $unset });\n\t\t\tconst room = ChatRoom.findOne({ _id: roomData._id });\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new TypeError('room is undefined');\n\t\t\t}\n\n\t\t\tconst { LegacyRoomManager } = await import('../../../../app/ui-utils/client');\n\n\t\t\tif (reference !== undefined && room._id !== reference && type === 'd') {\n\t\t\t\t// Redirect old url using username to rid\n\t\t\t\tawait LegacyRoomManager.close(type + reference);\n\t\t\t\tdirectRoute.push({ rid: room._id }, (prev) => prev);\n\t\t\t\tthrow new OldUrlRoomError(undefined, { rid: room._id });\n\t\t\t}\n\n\t\t\tconst { RoomManager } = await import('../../../lib/RoomManager');\n\t\t\tconst { fireGlobalEvent } = await import('../../../lib/utils/fireGlobalEvent');\n\n\t\t\tunsubscribeFromRoomOpenedEvent.current();\n\t\t\tunsubscribeFromRoomOpenedEvent.current = RoomManager.once('opened', () => fireGlobalEvent('room-opened', omit(room, 'usernames')));\n\n\t\t\tLegacyRoomManager.open({ typeName: type + reference, rid: room._id });\n\n\t\t\tif (room._id === RoomManager.opened) {\n\t\t\t\treturn { rid: room._id };\n\t\t\t}\n\n\t\t\t// update user's room subscription\n\t\t\tconst sub = ChatSubscription.findOne({ rid: room._id });\n\t\t\tif (sub && !sub.open) {\n\t\t\t\tawait openRoom(room._id);\n\t\t\t}\n\t\t\treturn { rid: room._id };\n\t\t},\n\t\t{\n\t\t\tretry: 0,\n\t\t\tonError: async (error) => {\n\t\t\t\tif (['l', 'v'].includes(type) && error instanceof RoomNotFoundError) {\n\t\t\t\t\tconst { ChatRoom } = await import('../../../../app/models/client');\n\n\t\t\t\t\tChatRoom.remove(reference);\n\t\t\t\t\tqueryClient.removeQueries(['rooms', reference]);\n\t\t\t\t\tqueryClient.removeQueries(['/v1/rooms.info', reference]);\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c2e3dfc5683221736e4add4a9f86de40f245e71f"}
