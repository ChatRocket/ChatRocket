{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/account/omnichannel/OmnichannelPreferencesPage.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/account/omnichannel/OmnichannelPreferencesPage.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/account/omnichannel/OmnichannelPreferencesPage.tsx","inputSourceMap":{"version":3,"file":"client/views/account/omnichannel/OmnichannelPreferencesPage.tsx","sourceRoot":"","sources":["client/views/account/omnichannel/OmnichannelPreferencesPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ButtonGroup, Button, Box, Accordion } from '@rocket.chat/fuselage';\nimport { useToastMessageDispatch, useTranslation, useEndpoint, useUserPreference, useSetting } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\n\nimport PreferencesConversationTranscript from './PreferencesConversationTranscript';\nimport { PreferencesGeneral } from './PreferencesGeneral';\nimport { Page, PageHeader, PageScrollableContentWithShadow, PageFooter } from '../../../components/Page';\n\ntype FormData = {\n\tomnichannelTranscriptPDF: boolean;\n\tomnichannelTranscriptEmail: boolean;\n};\n\nconst OmnichannelPreferencesPage = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst alwaysSendEmailTranscript = useSetting<boolean>('Livechat_transcript_send_always');\n\tconst omnichannelTranscriptPDF = useUserPreference<boolean>('omnichannelTranscriptPDF') ?? false;\n\tconst omnichannelTranscriptEmail = useUserPreference<boolean>('omnichannelTranscriptEmail') ?? false;\n\tconst omnichannelHideConversationAfterClosing = useUserPreference<boolean>('omnichannelHideConversationAfterClosing') ?? true;\n\n\tconst methods = useForm({\n\t\tdefaultValues: {\n\t\t\tomnichannelTranscriptPDF,\n\t\t\tomnichannelTranscriptEmail: alwaysSendEmailTranscript || omnichannelTranscriptEmail,\n\t\t\tomnichannelHideConversationAfterClosing,\n\t\t},\n\t});\n\n\tconst {\n\t\thandleSubmit,\n\t\tformState: { isDirty },\n\t\treset,\n\t} = methods;\n\n\tconst saveFn = useEndpoint('POST', '/v1/users.setPreferences');\n\n\tconst handleSave = async (data: FormData) => {\n\t\ttry {\n\t\t\tawait saveFn({ data });\n\t\t\treset(data);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Preferences_saved') });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Page>\n\t\t\t<PageHeader title={t('Omnichannel')} />\n\t\t\t<PageScrollableContentWithShadow is='form' onSubmit={handleSubmit(handleSave)}>\n\t\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t\t<Accordion>\n\t\t\t\t\t\t<FormProvider {...methods}>\n\t\t\t\t\t\t\t<PreferencesGeneral />\n\t\t\t\t\t\t\t<PreferencesConversationTranscript />\n\t\t\t\t\t\t</FormProvider>\n\t\t\t\t\t</Accordion>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t\t<PageFooter isDirty={isDirty}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button onClick={() => reset({ omnichannelTranscriptPDF, omnichannelTranscriptEmail })}>{t('Cancel')}</Button>\n\t\t\t\t\t<Button primary disabled={!isDirty} onClick={handleSubmit(handleSave)}>\n\t\t\t\t\t\t{t('Save_changes')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</PageFooter>\n\t\t</Page>\n\t);\n};\n\nexport default OmnichannelPreferencesPage;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/account/omnichannel/OmnichannelPreferencesPage.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/account/omnichannel/OmnichannelPreferencesPage.tsx","inputSourceMap":{"version":3,"file":"client/views/account/omnichannel/OmnichannelPreferencesPage.tsx","sourceRoot":"","sources":["client/views/account/omnichannel/OmnichannelPreferencesPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ButtonGroup, Button, Box, Accordion } from '@rocket.chat/fuselage';\nimport { useToastMessageDispatch, useTranslation, useEndpoint, useUserPreference, useSetting } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\n\nimport PreferencesConversationTranscript from './PreferencesConversationTranscript';\nimport { PreferencesGeneral } from './PreferencesGeneral';\nimport { Page, PageHeader, PageScrollableContentWithShadow, PageFooter } from '../../../components/Page';\n\ntype FormData = {\n\tomnichannelTranscriptPDF: boolean;\n\tomnichannelTranscriptEmail: boolean;\n};\n\nconst OmnichannelPreferencesPage = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst alwaysSendEmailTranscript = useSetting<boolean>('Livechat_transcript_send_always');\n\tconst omnichannelTranscriptPDF = useUserPreference<boolean>('omnichannelTranscriptPDF') ?? false;\n\tconst omnichannelTranscriptEmail = useUserPreference<boolean>('omnichannelTranscriptEmail') ?? false;\n\tconst omnichannelHideConversationAfterClosing = useUserPreference<boolean>('omnichannelHideConversationAfterClosing') ?? true;\n\n\tconst methods = useForm({\n\t\tdefaultValues: {\n\t\t\tomnichannelTranscriptPDF,\n\t\t\tomnichannelTranscriptEmail: alwaysSendEmailTranscript || omnichannelTranscriptEmail,\n\t\t\tomnichannelHideConversationAfterClosing,\n\t\t},\n\t});\n\n\tconst {\n\t\thandleSubmit,\n\t\tformState: { isDirty },\n\t\treset,\n\t} = methods;\n\n\tconst saveFn = useEndpoint('POST', '/v1/users.setPreferences');\n\n\tconst handleSave = async (data: FormData) => {\n\t\ttry {\n\t\t\tawait saveFn({ data });\n\t\t\treset(data);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Preferences_saved') });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Page>\n\t\t\t<PageHeader title={t('Omnichannel')} />\n\t\t\t<PageScrollableContentWithShadow is='form' onSubmit={handleSubmit(handleSave)}>\n\t\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t\t<Accordion>\n\t\t\t\t\t\t<FormProvider {...methods}>\n\t\t\t\t\t\t\t<PreferencesGeneral />\n\t\t\t\t\t\t\t<PreferencesConversationTranscript />\n\t\t\t\t\t\t</FormProvider>\n\t\t\t\t\t</Accordion>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t\t<PageFooter isDirty={isDirty}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button onClick={() => reset({ omnichannelTranscriptPDF, omnichannelTranscriptEmail })}>{t('Cancel')}</Button>\n\t\t\t\t\t<Button primary disabled={!isDirty} onClick={handleSubmit(handleSave)}>\n\t\t\t\t\t\t{t('Save_changes')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</PageFooter>\n\t\t</Page>\n\t);\n};\n\nexport default OmnichannelPreferencesPage;\n"]}}},"code":"let ButtonGroup, Button, Box, Accordion;\nmodule.link(\"@rocket.chat/fuselage\", {\n  ButtonGroup(v) {\n    ButtonGroup = v;\n  },\n  Button(v) {\n    Button = v;\n  },\n  Box(v) {\n    Box = v;\n  },\n  Accordion(v) {\n    Accordion = v;\n  }\n}, 0);\nlet useToastMessageDispatch, useTranslation, useEndpoint, useUserPreference, useSetting;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  },\n  useTranslation(v) {\n    useTranslation = v;\n  },\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n  useUserPreference(v) {\n    useUserPreference = v;\n  },\n  useSetting(v) {\n    useSetting = v;\n  }\n}, 1);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n}, 2);\nlet useForm, FormProvider;\nmodule.link(\"react-hook-form\", {\n  useForm(v) {\n    useForm = v;\n  },\n  FormProvider(v) {\n    FormProvider = v;\n  }\n}, 3);\nlet PreferencesConversationTranscript;\nmodule.link(\"./PreferencesConversationTranscript\", {\n  default(v) {\n    PreferencesConversationTranscript = v;\n  }\n}, 4);\nlet PreferencesGeneral;\nmodule.link(\"./PreferencesGeneral\", {\n  PreferencesGeneral(v) {\n    PreferencesGeneral = v;\n  }\n}, 5);\nlet Page, PageHeader, PageScrollableContentWithShadow, PageFooter;\nmodule.link(\"../../../components/Page\", {\n  Page(v) {\n    Page = v;\n  },\n  PageHeader(v) {\n    PageHeader = v;\n  },\n  PageScrollableContentWithShadow(v) {\n    PageScrollableContentWithShadow = v;\n  },\n  PageFooter(v) {\n    PageFooter = v;\n  }\n}, 6);\nconst OmnichannelPreferencesPage = () => {\n  var _useUserPreference, _useUserPreference2, _useUserPreference3;\n  const t = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const alwaysSendEmailTranscript = useSetting('Livechat_transcript_send_always');\n  const omnichannelTranscriptPDF = (_useUserPreference = useUserPreference('omnichannelTranscriptPDF')) !== null && _useUserPreference !== void 0 ? _useUserPreference : false;\n  const omnichannelTranscriptEmail = (_useUserPreference2 = useUserPreference('omnichannelTranscriptEmail')) !== null && _useUserPreference2 !== void 0 ? _useUserPreference2 : false;\n  const omnichannelHideConversationAfterClosing = (_useUserPreference3 = useUserPreference('omnichannelHideConversationAfterClosing')) !== null && _useUserPreference3 !== void 0 ? _useUserPreference3 : true;\n  const methods = useForm({\n    defaultValues: {\n      omnichannelTranscriptPDF,\n      omnichannelTranscriptEmail: alwaysSendEmailTranscript || omnichannelTranscriptEmail,\n      omnichannelHideConversationAfterClosing\n    }\n  });\n  const {\n    handleSubmit,\n    formState: {\n      isDirty\n    },\n    reset\n  } = methods;\n  const saveFn = useEndpoint('POST', '/v1/users.setPreferences');\n  const handleSave = async data => {\n    try {\n      await saveFn({\n        data\n      });\n      reset(data);\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Preferences_saved')\n      });\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(Page, null, /*#__PURE__*/React.createElement(PageHeader, {\n    title: t('Omnichannel')\n  }), /*#__PURE__*/React.createElement(PageScrollableContentWithShadow, {\n    is: \"form\",\n    onSubmit: handleSubmit(handleSave)\n  }, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"x600\",\n    w: \"full\",\n    alignSelf: \"center\"\n  }, /*#__PURE__*/React.createElement(Accordion, null, /*#__PURE__*/React.createElement(FormProvider, methods, /*#__PURE__*/React.createElement(PreferencesGeneral, null), /*#__PURE__*/React.createElement(PreferencesConversationTranscript, null))))), /*#__PURE__*/React.createElement(PageFooter, {\n    isDirty: isDirty\n  }, /*#__PURE__*/React.createElement(ButtonGroup, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => reset({\n      omnichannelTranscriptPDF,\n      omnichannelTranscriptEmail\n    })\n  }, t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    disabled: !isDirty,\n    onClick: handleSubmit(handleSave)\n  }, t('Save_changes')))));\n};\nmodule.exportDefault(OmnichannelPreferencesPage);","map":{"version":3,"names":["ButtonGroup","Button","Box","Accordion","module","link","v","useToastMessageDispatch","useTranslation","useEndpoint","useUserPreference","useSetting","React","default","useForm","FormProvider","PreferencesConversationTranscript","PreferencesGeneral","Page","PageHeader","PageScrollableContentWithShadow","PageFooter","OmnichannelPreferencesPage","_useUserPreference","_useUserPreference2","_useUserPreference3","t","dispatchToastMessage","alwaysSendEmailTranscript","omnichannelTranscriptPDF","omnichannelTranscriptEmail","omnichannelHideConversationAfterClosing","methods","defaultValues","handleSubmit","formState","isDirty","reset","saveFn","handleSave","data","type","message","error","createElement","title","is","onSubmit","maxWidth","w","alignSelf","onClick","primary","disabled","exportDefault"],"sources":["client/views/account/omnichannel/OmnichannelPreferencesPage.tsx"],"sourcesContent":["import { ButtonGroup, Button, Box, Accordion } from '@rocket.chat/fuselage';\nimport { useToastMessageDispatch, useTranslation, useEndpoint, useUserPreference, useSetting } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\n\nimport PreferencesConversationTranscript from './PreferencesConversationTranscript';\nimport { PreferencesGeneral } from './PreferencesGeneral';\nimport { Page, PageHeader, PageScrollableContentWithShadow, PageFooter } from '../../../components/Page';\n\ntype FormData = {\n\tomnichannelTranscriptPDF: boolean;\n\tomnichannelTranscriptEmail: boolean;\n};\n\nconst OmnichannelPreferencesPage = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst alwaysSendEmailTranscript = useSetting<boolean>('Livechat_transcript_send_always');\n\tconst omnichannelTranscriptPDF = useUserPreference<boolean>('omnichannelTranscriptPDF') ?? false;\n\tconst omnichannelTranscriptEmail = useUserPreference<boolean>('omnichannelTranscriptEmail') ?? false;\n\tconst omnichannelHideConversationAfterClosing = useUserPreference<boolean>('omnichannelHideConversationAfterClosing') ?? true;\n\n\tconst methods = useForm({\n\t\tdefaultValues: {\n\t\t\tomnichannelTranscriptPDF,\n\t\t\tomnichannelTranscriptEmail: alwaysSendEmailTranscript || omnichannelTranscriptEmail,\n\t\t\tomnichannelHideConversationAfterClosing,\n\t\t},\n\t});\n\n\tconst {\n\t\thandleSubmit,\n\t\tformState: { isDirty },\n\t\treset,\n\t} = methods;\n\n\tconst saveFn = useEndpoint('POST', '/v1/users.setPreferences');\n\n\tconst handleSave = async (data: FormData) => {\n\t\ttry {\n\t\t\tawait saveFn({ data });\n\t\t\treset(data);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Preferences_saved') });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Page>\n\t\t\t<PageHeader title={t('Omnichannel')} />\n\t\t\t<PageScrollableContentWithShadow is='form' onSubmit={handleSubmit(handleSave)}>\n\t\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t\t<Accordion>\n\t\t\t\t\t\t<FormProvider {...methods}>\n\t\t\t\t\t\t\t<PreferencesGeneral />\n\t\t\t\t\t\t\t<PreferencesConversationTranscript />\n\t\t\t\t\t\t</FormProvider>\n\t\t\t\t\t</Accordion>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t\t<PageFooter isDirty={isDirty}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button onClick={() => reset({ omnichannelTranscriptPDF, omnichannelTranscriptEmail })}>{t('Cancel')}</Button>\n\t\t\t\t\t<Button primary disabled={!isDirty} onClick={handleSubmit(handleSave)}>\n\t\t\t\t\t\t{t('Save_changes')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</PageFooter>\n\t\t</Page>\n\t);\n};\n\nexport default OmnichannelPreferencesPage;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ac989a26b81d67e7f039f1293a75e1ff3349b2a1"}
