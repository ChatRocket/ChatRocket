{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/directory/calls/contextualBar/InfoField.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/directory/calls/contextualBar/InfoField.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/directory/calls/contextualBar/InfoField.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/directory/calls/contextualBar/InfoField.tsx","sourceRoot":"","sources":["client/views/omnichannel/directory/calls/contextualBar/InfoField.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,MAAM,qCAAqC,CAAC;AAOpG,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAsB,EAAgB,EAAE,CAAC,CAC/E,CAAC,cAAc,CACd;EAAA,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,EAAE,cAAc,CACvC;EAAA,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,aAAa,CACrC;CAAA,EAAE,cAAc,CAAC,CACjB,CAAC","sourcesContent":["import type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { InfoPanelField, InfoPanelLabel, InfoPanelText } from '../../../../../components/InfoPanel';\n\ntype InfoFieldPropsType = {\n\tlabel: string;\n\tinfo: string;\n};\n\nexport const InfoField = ({ label, info }: InfoFieldPropsType): ReactElement => (\n\t<InfoPanelField>\n\t\t<InfoPanelLabel>{label}</InfoPanelLabel>\n\t\t<InfoPanelText>{info}</InfoPanelText>\n\t</InfoPanelField>\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/directory/calls/contextualBar/InfoField.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/directory/calls/contextualBar/InfoField.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/directory/calls/contextualBar/InfoField.tsx","sourceRoot":"","sources":["client/views/omnichannel/directory/calls/contextualBar/InfoField.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa,EAAE,MAAM,qCAAqC,CAAC;AAOpG,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAsB,EAAgB,EAAE,CAAC,CAC/E,CAAC,cAAc,CACd;EAAA,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,EAAE,cAAc,CACvC;EAAA,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,aAAa,CACrC;CAAA,EAAE,cAAc,CAAC,CACjB,CAAC","sourcesContent":["import type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { InfoPanelField, InfoPanelLabel, InfoPanelText } from '../../../../../components/InfoPanel';\n\ntype InfoFieldPropsType = {\n\tlabel: string;\n\tinfo: string;\n};\n\nexport const InfoField = ({ label, info }: InfoFieldPropsType): ReactElement => (\n\t<InfoPanelField>\n\t\t<InfoPanelLabel>{label}</InfoPanelLabel>\n\t\t<InfoPanelText>{info}</InfoPanelText>\n\t</InfoPanelField>\n);\n"]}}},"code":"module.export({\n  InfoField: () => InfoField\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n}, 0);\nlet InfoPanelField, InfoPanelLabel, InfoPanelText;\nmodule.link(\"../../../../../components/InfoPanel\", {\n  InfoPanelField(v) {\n    InfoPanelField = v;\n  },\n  InfoPanelLabel(v) {\n    InfoPanelLabel = v;\n  },\n  InfoPanelText(v) {\n    InfoPanelText = v;\n  }\n}, 1);\nconst InfoField = _ref => {\n  let {\n    label,\n    info\n  } = _ref;\n  return /*#__PURE__*/React.createElement(InfoPanelField, null, /*#__PURE__*/React.createElement(InfoPanelLabel, null, label), /*#__PURE__*/React.createElement(InfoPanelText, null, info));\n};","map":{"version":3,"names":["module","export","InfoField","React","link","default","v","InfoPanelField","InfoPanelLabel","InfoPanelText","_ref","label","info","createElement"],"sources":["client/views/omnichannel/directory/calls/contextualBar/InfoField.tsx"],"sourcesContent":["import type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { InfoPanelField, InfoPanelLabel, InfoPanelText } from '../../../../../components/InfoPanel';\n\ntype InfoFieldPropsType = {\n\tlabel: string;\n\tinfo: string;\n};\n\nexport const InfoField = ({ label, info }: InfoFieldPropsType): ReactElement => (\n\t<InfoPanelField>\n\t\t<InfoPanelLabel>{label}</InfoPanelLabel>\n\t\t<InfoPanelText>{info}</InfoPanelText>\n\t</InfoPanelField>\n);\n"],"mappings":"AACAA,MAAA,CAAOC,MAAK;EAAAC,SAAM,EAAOA,CAAA,KAACA;AAAA;AAAA,IAAAC,KAAA;AAAAH,MAAA,CAAAI,IAAA;EAAAC,QAAAC,CAAA;IAAAH,KAAA,GAAAG,CAAA;EAAA;AAAA;AAAA,IAAAC,cAAA,EAAAC,cAAA,EAAAC,aAAA;AAAAT,MAAA,CAAAI,IAAA;EAAAG,eAAAD,CAAA;IAAAC,cAAA,GAAAD,CAAA;EAAA;EAAAE,eAAAF,CAAA;IAAAE,cAAA,GAAAF,CAAA;EAAA;EAAAG,cAAAH,CAAA;IAAAG,aAAA,GAAAH,CAAA;EAAA;AAAA;AASnB,MAAMJ,SAAS,GAAGQ,IAAA;EAAA,IAAC;IAAEC,KAAK;IAAEC;EAAI,CAAsB,GAAAF,IAAA;EAAA,oBAC5DP,KAAA,CAAAU,aAAA,CAACN,cAAc,qBACdJ,KAAA,CAAAU,aAAA,CAACL,cAAc,QAAEG,KAAsB,CACvC,eAAAR,KAAA,CAAAU,aAAA,CAACJ,aAAa,QAAEG,IAAoB,CACrB,CAAC;AAAA,CACjB","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"5f1b8ec7653fd851a60ae08556040fdc726ade37"}
