{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/rooms/roomTypes/livechat.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/rooms/roomTypes/livechat.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/rooms/roomTypes/livechat.ts","inputSourceMap":{"version":3,"file":"client/lib/rooms/roomTypes/livechat.ts","sourceRoot":"","sources":["client/lib/rooms/roomTypes/livechat.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AtLeast, ValueOf } from '@rocket.chat/core-typings';\n\nimport { hasPermission } from '../../../../app/authorization/client';\nimport { ChatRoom, ChatSubscription } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getAvatarURL } from '../../../../app/utils/client/getAvatarURL';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\nimport { getLivechatRoomType } from '../../../../lib/rooms/roomTypes/livechat';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const LivechatRoomType = getLivechatRoomType(roomCoordinator);\n\nroomCoordinator.add(\n\t{\n\t\t...LivechatRoomType,\n\t\tlabel: 'Omnichannel',\n\t},\n\t{\n\t\tallowRoomSettingChange(_room, setting) {\n\t\t\tswitch (setting) {\n\t\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\t\treturn false;\n\t\t\t\tdefault:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\n\t\tallowMemberAction(_room, action) {\n\t\t\treturn ([RoomMemberActions.INVITE, RoomMemberActions.JOIN] as Array<ValueOf<typeof RoomMemberActions>>).includes(action);\n\t\t},\n\n\t\troomName(room) {\n\t\t\treturn room.name || room.fname || (room as any).label;\n\t\t},\n\n\t\tgetUiText(context) {\n\t\t\tswitch (context) {\n\t\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\t\treturn 'Hide_Livechat_Warning';\n\t\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\t\treturn 'Hide_Livechat_Warning';\n\t\t\t\tdefault:\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\n\t\tcondition() {\n\t\t\treturn settings.get('Livechat_enabled') && hasPermission('view-l-room');\n\t\t},\n\n\t\tgetAvatarPath(room) {\n\t\t\treturn getAvatarURL({ username: `@${this.roomName(room)}` }) || '';\n\t\t},\n\n\t\tfindRoom(identifier) {\n\t\t\treturn ChatRoom.findOne({ _id: identifier });\n\t\t},\n\n\t\tisLivechatRoom() {\n\t\t\treturn true;\n\t\t},\n\n\t\tcanSendMessage(rid) {\n\t\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { open: 1 } });\n\t\t\treturn Boolean(room?.open);\n\t\t},\n\n\t\treadOnly(rid, _user) {\n\t\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { open: 1, servedBy: 1 } });\n\t\t\tif (!room?.open) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\t\treturn !subscription;\n\t\t},\n\n\t\tgetIcon() {\n\t\t\treturn 'livechat';\n\t\t},\n\n\t\textractOpenRoomParams({ id }) {\n\t\t\treturn { type: 'l', reference: id };\n\t\t},\n\t} as AtLeast<IRoomTypeClientDirectives, 'roomName'>,\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/rooms/roomTypes/livechat.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/rooms/roomTypes/livechat.ts","inputSourceMap":{"version":3,"file":"client/lib/rooms/roomTypes/livechat.ts","sourceRoot":"","sources":["client/lib/rooms/roomTypes/livechat.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AtLeast, ValueOf } from '@rocket.chat/core-typings';\n\nimport { hasPermission } from '../../../../app/authorization/client';\nimport { ChatRoom, ChatSubscription } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getAvatarURL } from '../../../../app/utils/client/getAvatarURL';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\nimport { getLivechatRoomType } from '../../../../lib/rooms/roomTypes/livechat';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const LivechatRoomType = getLivechatRoomType(roomCoordinator);\n\nroomCoordinator.add(\n\t{\n\t\t...LivechatRoomType,\n\t\tlabel: 'Omnichannel',\n\t},\n\t{\n\t\tallowRoomSettingChange(_room, setting) {\n\t\t\tswitch (setting) {\n\t\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\t\treturn false;\n\t\t\t\tdefault:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\n\t\tallowMemberAction(_room, action) {\n\t\t\treturn ([RoomMemberActions.INVITE, RoomMemberActions.JOIN] as Array<ValueOf<typeof RoomMemberActions>>).includes(action);\n\t\t},\n\n\t\troomName(room) {\n\t\t\treturn room.name || room.fname || (room as any).label;\n\t\t},\n\n\t\tgetUiText(context) {\n\t\t\tswitch (context) {\n\t\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\t\treturn 'Hide_Livechat_Warning';\n\t\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\t\treturn 'Hide_Livechat_Warning';\n\t\t\t\tdefault:\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\n\t\tcondition() {\n\t\t\treturn settings.get('Livechat_enabled') && hasPermission('view-l-room');\n\t\t},\n\n\t\tgetAvatarPath(room) {\n\t\t\treturn getAvatarURL({ username: `@${this.roomName(room)}` }) || '';\n\t\t},\n\n\t\tfindRoom(identifier) {\n\t\t\treturn ChatRoom.findOne({ _id: identifier });\n\t\t},\n\n\t\tisLivechatRoom() {\n\t\t\treturn true;\n\t\t},\n\n\t\tcanSendMessage(rid) {\n\t\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { open: 1 } });\n\t\t\treturn Boolean(room?.open);\n\t\t},\n\n\t\treadOnly(rid, _user) {\n\t\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { open: 1, servedBy: 1 } });\n\t\t\tif (!room?.open) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\t\treturn !subscription;\n\t\t},\n\n\t\tgetIcon() {\n\t\t\treturn 'livechat';\n\t\t},\n\n\t\textractOpenRoomParams({ id }) {\n\t\t\treturn { type: 'l', reference: id };\n\t\t},\n\t} as AtLeast<IRoomTypeClientDirectives, 'roomName'>,\n);\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  LivechatRoomType: () => LivechatRoomType\n});\nlet hasPermission;\nmodule.link(\"../../../../app/authorization/client\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n}, 0);\nlet ChatRoom, ChatSubscription;\nmodule.link(\"../../../../app/models/client\", {\n  ChatRoom(v) {\n    ChatRoom = v;\n  },\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n}, 1);\nlet settings;\nmodule.link(\"../../../../app/settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n}, 2);\nlet getAvatarURL;\nmodule.link(\"../../../../app/utils/client/getAvatarURL\", {\n  getAvatarURL(v) {\n    getAvatarURL = v;\n  }\n}, 3);\nlet RoomSettingsEnum, RoomMemberActions, UiTextContext;\nmodule.link(\"../../../../definition/IRoomTypeConfig\", {\n  RoomSettingsEnum(v) {\n    RoomSettingsEnum = v;\n  },\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  },\n  UiTextContext(v) {\n    UiTextContext = v;\n  }\n}, 4);\nlet getLivechatRoomType;\nmodule.link(\"../../../../lib/rooms/roomTypes/livechat\", {\n  getLivechatRoomType(v) {\n    getLivechatRoomType = v;\n  }\n}, 5);\nlet roomCoordinator;\nmodule.link(\"../roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n}, 6);\nconst LivechatRoomType = getLivechatRoomType(roomCoordinator);\nroomCoordinator.add(_objectSpread(_objectSpread({}, LivechatRoomType), {}, {\n  label: 'Omnichannel'\n}), {\n  allowRoomSettingChange(_room, setting) {\n    switch (setting) {\n      case RoomSettingsEnum.JOIN_CODE:\n        return false;\n      default:\n        return true;\n    }\n  },\n  allowMemberAction(_room, action) {\n    return [RoomMemberActions.INVITE, RoomMemberActions.JOIN].includes(action);\n  },\n  roomName(room) {\n    return room.name || room.fname || room.label;\n  },\n  getUiText(context) {\n    switch (context) {\n      case UiTextContext.HIDE_WARNING:\n        return 'Hide_Livechat_Warning';\n      case UiTextContext.LEAVE_WARNING:\n        return 'Hide_Livechat_Warning';\n      default:\n        return '';\n    }\n  },\n  condition() {\n    return settings.get('Livechat_enabled') && hasPermission('view-l-room');\n  },\n  getAvatarPath(room) {\n    return getAvatarURL({\n      username: \"@\".concat(this.roomName(room))\n    }) || '';\n  },\n  findRoom(identifier) {\n    return ChatRoom.findOne({\n      _id: identifier\n    });\n  },\n  isLivechatRoom() {\n    return true;\n  },\n  canSendMessage(rid) {\n    const room = ChatRoom.findOne({\n      _id: rid\n    }, {\n      fields: {\n        open: 1\n      }\n    });\n    return Boolean(room === null || room === void 0 ? void 0 : room.open);\n  },\n  readOnly(rid, _user) {\n    const room = ChatRoom.findOne({\n      _id: rid\n    }, {\n      fields: {\n        open: 1,\n        servedBy: 1\n      }\n    });\n    if (!(room !== null && room !== void 0 && room.open)) {\n      return true;\n    }\n    const subscription = ChatSubscription.findOne({\n      rid\n    });\n    return !subscription;\n  },\n  getIcon() {\n    return 'livechat';\n  },\n  extractOpenRoomParams(_ref) {\n    let {\n      id\n    } = _ref;\n    return {\n      type: 'l',\n      reference: id\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","LivechatRoomType","hasPermission","ChatRoom","ChatSubscription","settings","getAvatarURL","RoomSettingsEnum","RoomMemberActions","UiTextContext","getLivechatRoomType","roomCoordinator","add","label","allowRoomSettingChange","_room","setting","JOIN_CODE","allowMemberAction","action","INVITE","JOIN","includes","roomName","room","name","fname","getUiText","context","HIDE_WARNING","LEAVE_WARNING","condition","get","getAvatarPath","username","concat","findRoom","identifier","findOne","_id","isLivechatRoom","canSendMessage","rid","fields","open","Boolean","readOnly","_user","servedBy","subscription","getIcon","extractOpenRoomParams","_ref","id","type","reference"],"sources":["client/lib/rooms/roomTypes/livechat.ts"],"sourcesContent":["import type { AtLeast, ValueOf } from '@rocket.chat/core-typings';\n\nimport { hasPermission } from '../../../../app/authorization/client';\nimport { ChatRoom, ChatSubscription } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getAvatarURL } from '../../../../app/utils/client/getAvatarURL';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\nimport { getLivechatRoomType } from '../../../../lib/rooms/roomTypes/livechat';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const LivechatRoomType = getLivechatRoomType(roomCoordinator);\n\nroomCoordinator.add(\n\t{\n\t\t...LivechatRoomType,\n\t\tlabel: 'Omnichannel',\n\t},\n\t{\n\t\tallowRoomSettingChange(_room, setting) {\n\t\t\tswitch (setting) {\n\t\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\t\treturn false;\n\t\t\t\tdefault:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\n\t\tallowMemberAction(_room, action) {\n\t\t\treturn ([RoomMemberActions.INVITE, RoomMemberActions.JOIN] as Array<ValueOf<typeof RoomMemberActions>>).includes(action);\n\t\t},\n\n\t\troomName(room) {\n\t\t\treturn room.name || room.fname || (room as any).label;\n\t\t},\n\n\t\tgetUiText(context) {\n\t\t\tswitch (context) {\n\t\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\t\treturn 'Hide_Livechat_Warning';\n\t\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\t\treturn 'Hide_Livechat_Warning';\n\t\t\t\tdefault:\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\n\t\tcondition() {\n\t\t\treturn settings.get('Livechat_enabled') && hasPermission('view-l-room');\n\t\t},\n\n\t\tgetAvatarPath(room) {\n\t\t\treturn getAvatarURL({ username: `@${this.roomName(room)}` }) || '';\n\t\t},\n\n\t\tfindRoom(identifier) {\n\t\t\treturn ChatRoom.findOne({ _id: identifier });\n\t\t},\n\n\t\tisLivechatRoom() {\n\t\t\treturn true;\n\t\t},\n\n\t\tcanSendMessage(rid) {\n\t\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { open: 1 } });\n\t\t\treturn Boolean(room?.open);\n\t\t},\n\n\t\treadOnly(rid, _user) {\n\t\t\tconst room = ChatRoom.findOne({ _id: rid }, { fields: { open: 1, servedBy: 1 } });\n\t\t\tif (!room?.open) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\t\treturn !subscription;\n\t\t},\n\n\t\tgetIcon() {\n\t\t\treturn 'livechat';\n\t\t},\n\n\t\textractOpenRoomParams({ id }) {\n\t\t\treturn { type: 'l', reference: id };\n\t\t},\n\t} as AtLeast<IRoomTypeClientDirectives, 'roomName'>,\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f8d4dd209ba95a8ade177dba02b054b6b70b66fc"}
