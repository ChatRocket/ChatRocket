{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/emoji/client/emojiParser.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/emoji/client/emojiParser.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/emoji/client/emojiParser.ts","inputSourceMap":{"version":3,"file":"app/emoji/client/emojiParser.ts","sourceRoot":"","sources":["app/emoji/client/emojiParser.ts"],"names":[],"mappings":"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","sourcesContent":["import { isIE11 } from '../../../client/lib/utils/isIE11';\nimport { emoji } from './lib';\n\n/**\n * emojiParser is a function that will replace emojis\n */\nexport const emojiParser = (html: string) => {\n\thtml = html.trim();\n\n\t// &#39; to apostrophe (') for emojis such as :')\n\thtml = html.replace(/&#39;/g, \"'\");\n\n\t// '<br>' to ' <br> ' for emojis such at line breaks\n\thtml = html.replace(/<br>/g, ' <br> ');\n\n\thtml = Object.entries(emoji.packages)\n\t\t.reverse()\n\t\t.reduce((value, [, emojiPackage]) => emojiPackage.render(value), html);\n\n\tconst checkEmojiOnly = document.createElement('div');\n\n\tcheckEmojiOnly.innerHTML = html;\n\n\tconst emojis = Array.from(checkEmojiOnly.querySelectorAll('.emoji:not(:empty), .emojione:not(:empty)'));\n\n\tlet hasText = false;\n\n\tif (!isIE11) {\n\t\tconst isElement = (node: Node): node is Element => node.nodeType === Node.ELEMENT_NODE;\n\n\t\tconst isTextNode = (node: Node): node is Text => node.nodeType === Node.TEXT_NODE;\n\n\t\tconst filter = (node: Node) => {\n\t\t\tif (isElement(node) && (node.classList.contains('emojione') || node.classList.contains('emoji'))) {\n\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t}\n\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t};\n\n\t\tconst walker = document.createTreeWalker(checkEmojiOnly, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT, filter);\n\n\t\twhile (walker.nextNode()) {\n\t\t\tif (isTextNode(walker.currentNode) && walker.currentNode.nodeValue.trim() !== '') {\n\t\t\t\thasText = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst emojiOnly = emojis.length && !hasText;\n\n\t\tif (emojiOnly) {\n\t\t\tfor (let i = 0, len = emojis.length; i < len; i++) {\n\t\t\t\tconst { classList } = emojis[i];\n\t\t\t\tclassList.add('big');\n\t\t\t}\n\t\t\thtml = checkEmojiOnly.innerHTML;\n\t\t}\n\t}\n\n\t// apostrophe (') back to &#39;\n\thtml = html.replace(/\\'/g, '&#39;');\n\n\t// line breaks ' <br> ' back to '<br>'\n\thtml = html.replace(/ <br> /g, '<br>');\n\n\treturn html;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"production","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/emoji/client/emojiParser.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/emoji/client/emojiParser.ts","inputSourceMap":{"version":3,"file":"app/emoji/client/emojiParser.ts","sourceRoot":"","sources":["app/emoji/client/emojiParser.ts"],"names":[],"mappings":"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","sourcesContent":["import { isIE11 } from '../../../client/lib/utils/isIE11';\nimport { emoji } from './lib';\n\n/**\n * emojiParser is a function that will replace emojis\n */\nexport const emojiParser = (html: string) => {\n\thtml = html.trim();\n\n\t// &#39; to apostrophe (') for emojis such as :')\n\thtml = html.replace(/&#39;/g, \"'\");\n\n\t// '<br>' to ' <br> ' for emojis such at line breaks\n\thtml = html.replace(/<br>/g, ' <br> ');\n\n\thtml = Object.entries(emoji.packages)\n\t\t.reverse()\n\t\t.reduce((value, [, emojiPackage]) => emojiPackage.render(value), html);\n\n\tconst checkEmojiOnly = document.createElement('div');\n\n\tcheckEmojiOnly.innerHTML = html;\n\n\tconst emojis = Array.from(checkEmojiOnly.querySelectorAll('.emoji:not(:empty), .emojione:not(:empty)'));\n\n\tlet hasText = false;\n\n\tif (!isIE11) {\n\t\tconst isElement = (node: Node): node is Element => node.nodeType === Node.ELEMENT_NODE;\n\n\t\tconst isTextNode = (node: Node): node is Text => node.nodeType === Node.TEXT_NODE;\n\n\t\tconst filter = (node: Node) => {\n\t\t\tif (isElement(node) && (node.classList.contains('emojione') || node.classList.contains('emoji'))) {\n\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t}\n\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t};\n\n\t\tconst walker = document.createTreeWalker(checkEmojiOnly, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT, filter);\n\n\t\twhile (walker.nextNode()) {\n\t\t\tif (isTextNode(walker.currentNode) && walker.currentNode.nodeValue.trim() !== '') {\n\t\t\t\thasText = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst emojiOnly = emojis.length && !hasText;\n\n\t\tif (emojiOnly) {\n\t\t\tfor (let i = 0, len = emojis.length; i < len; i++) {\n\t\t\t\tconst { classList } = emojis[i];\n\t\t\t\tclassList.add('big');\n\t\t\t}\n\t\t\thtml = checkEmojiOnly.innerHTML;\n\t\t}\n\t}\n\n\t// apostrophe (') back to &#39;\n\thtml = html.replace(/\\'/g, '&#39;');\n\n\t// line breaks ' <br> ' back to '<br>'\n\thtml = html.replace(/ <br> /g, '<br>');\n\n\treturn html;\n};\n"]}}},"code":"var _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 0);\nmodule.export({\n  emojiParser: function () {\n    return emojiParser;\n  }\n});\nvar isIE11;\nmodule.link(\"../../../client/lib/utils/isIE11\", {\n  isIE11: function (v) {\n    isIE11 = v;\n  }\n}, 0);\nvar emoji;\nmodule.link(\"./lib\", {\n  emoji: function (v) {\n    emoji = v;\n  }\n}, 1);\nvar emojiParser = function (html) {\n  html = html.trim();\n  // &#39; to apostrophe (') for emojis such as :')\n  html = html.replace(/&#39;/g, \"'\");\n  // '<br>' to ' <br> ' for emojis such at line breaks\n  html = html.replace(/<br>/g, ' <br> ');\n  html = Object.entries(emoji.packages).reverse().reduce(function (value, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      emojiPackage = _ref2[1];\n    return emojiPackage.render(value);\n  }, html);\n  var checkEmojiOnly = document.createElement('div');\n  checkEmojiOnly.innerHTML = html;\n  var emojis = Array.from(checkEmojiOnly.querySelectorAll('.emoji:not(:empty), .emojione:not(:empty)'));\n  var hasText = false;\n  if (!isIE11) {\n    var isElement = function (node) {\n      return node.nodeType === Node.ELEMENT_NODE;\n    };\n    var isTextNode = function (node) {\n      return node.nodeType === Node.TEXT_NODE;\n    };\n    var filter = function (node) {\n      if (isElement(node) && (node.classList.contains('emojione') || node.classList.contains('emoji'))) {\n        return NodeFilter.FILTER_REJECT;\n      }\n      return NodeFilter.FILTER_ACCEPT;\n    };\n    var walker = document.createTreeWalker(checkEmojiOnly, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT, filter);\n    while (walker.nextNode()) {\n      if (isTextNode(walker.currentNode) && walker.currentNode.nodeValue.trim() !== '') {\n        hasText = true;\n        break;\n      }\n    }\n    var emojiOnly = emojis.length && !hasText;\n    if (emojiOnly) {\n      for (var i = 0, len = emojis.length; i < len; i++) {\n        var classList = emojis[i].classList;\n        classList.add('big');\n      }\n      html = checkEmojiOnly.innerHTML;\n    }\n  }\n  // apostrophe (') back to &#39;\n  html = html.replace(/\\'/g, '&#39;');\n  // line breaks ' <br> ' back to '<br>'\n  html = html.replace(/ <br> /g, '<br>');\n  return html;\n};","map":{"version":3,"names":["_slicedToArray","module","link","default","v","export","emojiParser","isIE11","emoji","html","trim","replace","Object","entries","packages","reverse","reduce","value","_ref","_ref2","emojiPackage","render","checkEmojiOnly","document","createElement","innerHTML","emojis","Array","from","querySelectorAll","hasText","isElement","node","nodeType","Node","ELEMENT_NODE","isTextNode","TEXT_NODE","filter","classList","contains","NodeFilter","FILTER_REJECT","FILTER_ACCEPT","walker","createTreeWalker","SHOW_ELEMENT","SHOW_TEXT","nextNode","currentNode","nodeValue","emojiOnly","length","i","len","add"],"sources":["app/emoji/client/emojiParser.ts"],"sourcesContent":["import { isIE11 } from '../../../client/lib/utils/isIE11';\nimport { emoji } from './lib';\n\n/**\n * emojiParser is a function that will replace emojis\n */\nexport const emojiParser = (html: string) => {\n\thtml = html.trim();\n\n\t// &#39; to apostrophe (') for emojis such as :')\n\thtml = html.replace(/&#39;/g, \"'\");\n\n\t// '<br>' to ' <br> ' for emojis such at line breaks\n\thtml = html.replace(/<br>/g, ' <br> ');\n\n\thtml = Object.entries(emoji.packages)\n\t\t.reverse()\n\t\t.reduce((value, [, emojiPackage]) => emojiPackage.render(value), html);\n\n\tconst checkEmojiOnly = document.createElement('div');\n\n\tcheckEmojiOnly.innerHTML = html;\n\n\tconst emojis = Array.from(checkEmojiOnly.querySelectorAll('.emoji:not(:empty), .emojione:not(:empty)'));\n\n\tlet hasText = false;\n\n\tif (!isIE11) {\n\t\tconst isElement = (node: Node): node is Element => node.nodeType === Node.ELEMENT_NODE;\n\n\t\tconst isTextNode = (node: Node): node is Text => node.nodeType === Node.TEXT_NODE;\n\n\t\tconst filter = (node: Node) => {\n\t\t\tif (isElement(node) && (node.classList.contains('emojione') || node.classList.contains('emoji'))) {\n\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t}\n\t\t\treturn NodeFilter.FILTER_ACCEPT;\n\t\t};\n\n\t\tconst walker = document.createTreeWalker(checkEmojiOnly, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT, filter);\n\n\t\twhile (walker.nextNode()) {\n\t\t\tif (isTextNode(walker.currentNode) && walker.currentNode.nodeValue.trim() !== '') {\n\t\t\t\thasText = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst emojiOnly = emojis.length && !hasText;\n\n\t\tif (emojiOnly) {\n\t\t\tfor (let i = 0, len = emojis.length; i < len; i++) {\n\t\t\t\tconst { classList } = emojis[i];\n\t\t\t\tclassList.add('big');\n\t\t\t}\n\t\t\thtml = checkEmojiOnly.innerHTML;\n\t\t}\n\t}\n\n\t// apostrophe (') back to &#39;\n\thtml = html.replace(/\\'/g, '&#39;');\n\n\t// line breaks ' <br> ' back to '<br>'\n\thtml = html.replace(/ <br> /g, '<br>');\n\n\treturn html;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9a784d1e030b14b9ac31ced8eaa6111100c76a49"}
