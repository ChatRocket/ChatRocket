{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/ImportProgressPage.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/admin/import/ImportProgressPage.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/ImportProgressPage.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/import/ImportProgressPage.tsx","sourceRoot":"","sources":["client/views/admin/import/ImportProgressPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { ProgressStep } from '@rocket.chat/core-typings';\nimport { Box, Margins, ProgressBar, Throbber } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch, useEndpoint, useStream, useRouter } from '@rocket.chat/ui-contexts';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useErrorHandler } from './useErrorHandler';\nimport { ImportingStartedStates } from '../../../../app/importer/lib/ImporterProgressStep';\nimport { numberFormat } from '../../../../lib/utils/stringUtils';\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\n\n// TODO: review inner logic\nconst ImportProgressPage = function ImportProgressPage() {\n\tconst queryClient = useQueryClient();\n\tconst streamer = useStream('importers');\n\tconst { t, i18n } = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst handleError = useErrorHandler();\n\n\tconst router = useRouter();\n\n\tconst getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n\tconst getImportProgress = useEndpoint('GET', '/v1/getImportProgress');\n\n\tconst mutation = useMutation({\n\t\tmutationFn: async (props: { step: ProgressStep; completed: number; total: number }) => {\n\t\t\tqueryClient.setQueryData<{\n\t\t\t\tstep: ProgressStep;\n\t\t\t\tcompleted: number;\n\t\t\t\ttotal: number;\n\t\t\t}>(['importers', 'progress'], props);\n\t\t},\n\t});\n\n\tconst currentOperation = useQuery(\n\t\t['ImportProgressPage', 'currentOperation'],\n\t\tasync () => {\n\t\t\tconst { operation } = await getCurrentImportOperation();\n\t\t\treturn operation;\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 1000,\n\t\t\tonSuccess: ({ valid, status }) => {\n\t\t\t\tif (!valid) {\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (status === 'importer_done') {\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Importer_done') });\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!(ImportingStartedStates as string[]).includes(status)) {\n\t\t\t\t\trouter.navigate('/admin/import/prepare');\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t},\n\t\t},\n\t);\n\n\tconst handleProgressUpdated = useMutableCallback(\n\t\t({ key, step, completed, total }: { key: string; step: ProgressStep; completed: number; total: number }) => {\n\t\t\tif (!currentOperation.isSuccess) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (key.toLowerCase() !== currentOperation.data.importerKey.toLowerCase()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = step[0].toUpperCase() + step.slice(1);\n\n\t\t\tswitch (step) {\n\t\t\t\tcase 'importer_done':\n\t\t\t\t\ti18n.exists(message) &&\n\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tmessage: t(message),\n\t\t\t\t\t\t});\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'importer_import_failed':\n\t\t\t\tcase 'importer_import_cancelled':\n\t\t\t\t\ti18n.exists(message) && handleError(message);\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmutation.mutate({ step, completed, total });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t);\n\n\tconst progress = useQuery(\n\t\t['importers', 'progress'],\n\t\tasync () => {\n\t\t\tconst { key, step, count: { completed = 0, total = 0 } = {} } = await getImportProgress();\n\t\t\treturn {\n\t\t\t\tkey,\n\t\t\t\tstep,\n\t\t\t\tcompleted,\n\t\t\t\ttotal,\n\t\t\t};\n\t\t},\n\t\t{\n\t\t\tenabled: !!currentOperation.isSuccess,\n\t\t\tonSuccess: (progress) => {\n\t\t\t\tif (!progress) {\n\t\t\t\t\tdispatchToastMessage({ type: 'warning', message: t('Importer_not_in_progress') });\n\t\t\t\t\trouter.navigate('/admin/import/prepare');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// do not use the endpoint data to update the completed progress, leave it to the streamer\n\t\t\t\tif (!(ImportingStartedStates as string[]).includes(progress.step)) {\n\t\t\t\t\thandleProgressUpdated({\n\t\t\t\t\t\tkey: progress.key,\n\t\t\t\t\t\tstep: progress.step,\n\t\t\t\t\t\ttotal: progress.total,\n\t\t\t\t\t\tcompleted: progress.completed,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t},\n\t\t},\n\t);\n\n\tuseEffect(() => {\n\t\treturn streamer('progress', (progress) => {\n\t\t\t// There shouldn't be any progress update sending only the rate at this point of the process\n\t\t\tif (!('rate' in progress)) {\n\t\t\t\thandleProgressUpdated({\n\t\t\t\t\tkey: progress.key,\n\t\t\t\t\tstep: progress.step,\n\t\t\t\t\tcompleted: progress.count.completed,\n\t\t\t\t\ttotal: progress.count.total,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}, [handleProgressUpdated, streamer]);\n\n\treturn (\n\t\t<Page>\n\t\t\t<PageHeader title={t('Importing_Data')} />\n\t\t\t<PageScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='neg-x24' width='full' maxWidth='x580'>\n\t\t\t\t\t<Margins block={24}>\n\t\t\t\t\t\t{currentOperation.isLoading && <Throbber justifyContent='center' />}\n\t\t\t\t\t\t{progress.fetchStatus !== 'idle' && progress.isLoading && <Throbber justifyContent='center' />}\n\n\t\t\t\t\t\t{(currentOperation.isError || progress.isError) && <Box is='p'>{t('Failed_To_Load_Import_Data')}</Box>}\n\t\t\t\t\t\t{progress.isSuccess && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Box is='p' fontScale='p2'>\n\t\t\t\t\t\t\t\t\t{t((progress.data.step[0].toUpperCase() + progress.data.step.slice(1)) as any)}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Box display='flex' justifyContent='center'>\n\t\t\t\t\t\t\t\t\t<ProgressBar percentage={(progress.data.completed / progress.data.total) * 100} />\n\t\t\t\t\t\t\t\t\t<Box is='span' fontScale='p2' mis={24}>\n\t\t\t\t\t\t\t\t\t\t{numberFormat((progress.data.completed / progress.data.total) * 100, 0)}%\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t</Page>\n\t);\n};\n\nexport default ImportProgressPage;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/ImportProgressPage.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/import/ImportProgressPage.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/import/ImportProgressPage.tsx","sourceRoot":"","sources":["client/views/admin/import/ImportProgressPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { ProgressStep } from '@rocket.chat/core-typings';\nimport { Box, Margins, ProgressBar, Throbber } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch, useEndpoint, useStream, useRouter } from '@rocket.chat/ui-contexts';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useErrorHandler } from './useErrorHandler';\nimport { ImportingStartedStates } from '../../../../app/importer/lib/ImporterProgressStep';\nimport { numberFormat } from '../../../../lib/utils/stringUtils';\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\n\n// TODO: review inner logic\nconst ImportProgressPage = function ImportProgressPage() {\n\tconst queryClient = useQueryClient();\n\tconst streamer = useStream('importers');\n\tconst { t, i18n } = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst handleError = useErrorHandler();\n\n\tconst router = useRouter();\n\n\tconst getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n\tconst getImportProgress = useEndpoint('GET', '/v1/getImportProgress');\n\n\tconst mutation = useMutation({\n\t\tmutationFn: async (props: { step: ProgressStep; completed: number; total: number }) => {\n\t\t\tqueryClient.setQueryData<{\n\t\t\t\tstep: ProgressStep;\n\t\t\t\tcompleted: number;\n\t\t\t\ttotal: number;\n\t\t\t}>(['importers', 'progress'], props);\n\t\t},\n\t});\n\n\tconst currentOperation = useQuery(\n\t\t['ImportProgressPage', 'currentOperation'],\n\t\tasync () => {\n\t\t\tconst { operation } = await getCurrentImportOperation();\n\t\t\treturn operation;\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 1000,\n\t\t\tonSuccess: ({ valid, status }) => {\n\t\t\t\tif (!valid) {\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (status === 'importer_done') {\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Importer_done') });\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!(ImportingStartedStates as string[]).includes(status)) {\n\t\t\t\t\trouter.navigate('/admin/import/prepare');\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t},\n\t\t},\n\t);\n\n\tconst handleProgressUpdated = useMutableCallback(\n\t\t({ key, step, completed, total }: { key: string; step: ProgressStep; completed: number; total: number }) => {\n\t\t\tif (!currentOperation.isSuccess) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (key.toLowerCase() !== currentOperation.data.importerKey.toLowerCase()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = step[0].toUpperCase() + step.slice(1);\n\n\t\t\tswitch (step) {\n\t\t\t\tcase 'importer_done':\n\t\t\t\t\ti18n.exists(message) &&\n\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tmessage: t(message),\n\t\t\t\t\t\t});\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'importer_import_failed':\n\t\t\t\tcase 'importer_import_cancelled':\n\t\t\t\t\ti18n.exists(message) && handleError(message);\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmutation.mutate({ step, completed, total });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t);\n\n\tconst progress = useQuery(\n\t\t['importers', 'progress'],\n\t\tasync () => {\n\t\t\tconst { key, step, count: { completed = 0, total = 0 } = {} } = await getImportProgress();\n\t\t\treturn {\n\t\t\t\tkey,\n\t\t\t\tstep,\n\t\t\t\tcompleted,\n\t\t\t\ttotal,\n\t\t\t};\n\t\t},\n\t\t{\n\t\t\tenabled: !!currentOperation.isSuccess,\n\t\t\tonSuccess: (progress) => {\n\t\t\t\tif (!progress) {\n\t\t\t\t\tdispatchToastMessage({ type: 'warning', message: t('Importer_not_in_progress') });\n\t\t\t\t\trouter.navigate('/admin/import/prepare');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// do not use the endpoint data to update the completed progress, leave it to the streamer\n\t\t\t\tif (!(ImportingStartedStates as string[]).includes(progress.step)) {\n\t\t\t\t\thandleProgressUpdated({\n\t\t\t\t\t\tkey: progress.key,\n\t\t\t\t\t\tstep: progress.step,\n\t\t\t\t\t\ttotal: progress.total,\n\t\t\t\t\t\tcompleted: progress.completed,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t},\n\t\t},\n\t);\n\n\tuseEffect(() => {\n\t\treturn streamer('progress', (progress) => {\n\t\t\t// There shouldn't be any progress update sending only the rate at this point of the process\n\t\t\tif (!('rate' in progress)) {\n\t\t\t\thandleProgressUpdated({\n\t\t\t\t\tkey: progress.key,\n\t\t\t\t\tstep: progress.step,\n\t\t\t\t\tcompleted: progress.count.completed,\n\t\t\t\t\ttotal: progress.count.total,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}, [handleProgressUpdated, streamer]);\n\n\treturn (\n\t\t<Page>\n\t\t\t<PageHeader title={t('Importing_Data')} />\n\t\t\t<PageScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='neg-x24' width='full' maxWidth='x580'>\n\t\t\t\t\t<Margins block={24}>\n\t\t\t\t\t\t{currentOperation.isLoading && <Throbber justifyContent='center' />}\n\t\t\t\t\t\t{progress.fetchStatus !== 'idle' && progress.isLoading && <Throbber justifyContent='center' />}\n\n\t\t\t\t\t\t{(currentOperation.isError || progress.isError) && <Box is='p'>{t('Failed_To_Load_Import_Data')}</Box>}\n\t\t\t\t\t\t{progress.isSuccess && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Box is='p' fontScale='p2'>\n\t\t\t\t\t\t\t\t\t{t((progress.data.step[0].toUpperCase() + progress.data.step.slice(1)) as any)}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Box display='flex' justifyContent='center'>\n\t\t\t\t\t\t\t\t\t<ProgressBar percentage={(progress.data.completed / progress.data.total) * 100} />\n\t\t\t\t\t\t\t\t\t<Box is='span' fontScale='p2' mis={24}>\n\t\t\t\t\t\t\t\t\t\t{numberFormat((progress.data.completed / progress.data.total) * 100, 0)}%\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t</Page>\n\t);\n};\n\nexport default ImportProgressPage;\n"]}}},"code":"let Box, Margins, ProgressBar, Throbber;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box(v) {\n    Box = v;\n  },\n  Margins(v) {\n    Margins = v;\n  },\n  ProgressBar(v) {\n    ProgressBar = v;\n  },\n  Throbber(v) {\n    Throbber = v;\n  }\n}, 0);\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n}, 1);\nlet useToastMessageDispatch, useEndpoint, useStream, useRouter;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  },\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n  useStream(v) {\n    useStream = v;\n  },\n  useRouter(v) {\n    useRouter = v;\n  }\n}, 2);\nlet useQuery, useMutation, useQueryClient;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  },\n  useMutation(v) {\n    useMutation = v;\n  },\n  useQueryClient(v) {\n    useQueryClient = v;\n  }\n}, 3);\nlet React, useEffect;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useEffect(v) {\n    useEffect = v;\n  }\n}, 4);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 5);\nlet useErrorHandler;\nmodule.link(\"./useErrorHandler\", {\n  useErrorHandler(v) {\n    useErrorHandler = v;\n  }\n}, 6);\nlet ImportingStartedStates;\nmodule.link(\"../../../../app/importer/lib/ImporterProgressStep\", {\n  ImportingStartedStates(v) {\n    ImportingStartedStates = v;\n  }\n}, 7);\nlet numberFormat;\nmodule.link(\"../../../../lib/utils/stringUtils\", {\n  numberFormat(v) {\n    numberFormat = v;\n  }\n}, 8);\nlet Page, PageHeader, PageScrollableContentWithShadow;\nmodule.link(\"../../../components/Page\", {\n  Page(v) {\n    Page = v;\n  },\n  PageHeader(v) {\n    PageHeader = v;\n  },\n  PageScrollableContentWithShadow(v) {\n    PageScrollableContentWithShadow = v;\n  }\n}, 9);\n// TODO: review inner logic\nconst ImportProgressPage = function ImportProgressPage() {\n  const queryClient = useQueryClient();\n  const streamer = useStream('importers');\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const handleError = useErrorHandler();\n  const router = useRouter();\n  const getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n  const getImportProgress = useEndpoint('GET', '/v1/getImportProgress');\n  const mutation = useMutation({\n    mutationFn: async props => {\n      queryClient.setQueryData(['importers', 'progress'], props);\n    }\n  });\n  const currentOperation = useQuery(['ImportProgressPage', 'currentOperation'], async () => {\n    const {\n      operation\n    } = await getCurrentImportOperation();\n    return operation;\n  }, {\n    refetchInterval: 1000,\n    onSuccess: _ref => {\n      let {\n        valid,\n        status\n      } = _ref;\n      if (!valid) {\n        router.navigate('/admin/import');\n        return;\n      }\n      if (status === 'importer_done') {\n        dispatchToastMessage({\n          type: 'success',\n          message: t('Importer_done')\n        });\n        router.navigate('/admin/import');\n        return;\n      }\n      if (!ImportingStartedStates.includes(status)) {\n        router.navigate('/admin/import/prepare');\n      }\n    },\n    onError: error => {\n      handleError(error, t('Failed_To_Load_Import_Data'));\n      router.navigate('/admin/import');\n    }\n  });\n  const handleProgressUpdated = useMutableCallback(_ref2 => {\n    let {\n      key,\n      step,\n      completed,\n      total\n    } = _ref2;\n    if (!currentOperation.isSuccess) {\n      return;\n    }\n    if (key.toLowerCase() !== currentOperation.data.importerKey.toLowerCase()) {\n      return;\n    }\n    const message = step[0].toUpperCase() + step.slice(1);\n    switch (step) {\n      case 'importer_done':\n        i18n.exists(message) && dispatchToastMessage({\n          type: 'success',\n          message: t(message)\n        });\n        router.navigate('/admin/import');\n        return;\n      case 'importer_import_failed':\n      case 'importer_import_cancelled':\n        i18n.exists(message) && handleError(message);\n        router.navigate('/admin/import');\n        return;\n      default:\n        mutation.mutate({\n          step,\n          completed,\n          total\n        });\n        break;\n    }\n  });\n  const progress = useQuery(['importers', 'progress'], async () => {\n    const {\n      key,\n      step,\n      count: {\n        completed = 0,\n        total = 0\n      } = {}\n    } = await getImportProgress();\n    return {\n      key,\n      step,\n      completed,\n      total\n    };\n  }, {\n    enabled: !!currentOperation.isSuccess,\n    onSuccess: progress => {\n      if (!progress) {\n        dispatchToastMessage({\n          type: 'warning',\n          message: t('Importer_not_in_progress')\n        });\n        router.navigate('/admin/import/prepare');\n        return;\n      }\n      // do not use the endpoint data to update the completed progress, leave it to the streamer\n      if (!ImportingStartedStates.includes(progress.step)) {\n        handleProgressUpdated({\n          key: progress.key,\n          step: progress.step,\n          total: progress.total,\n          completed: progress.completed\n        });\n      }\n    },\n    onError: error => {\n      handleError(error, t('Failed_To_Load_Import_Data'));\n      router.navigate('/admin/import');\n    }\n  });\n  useEffect(() => {\n    return streamer('progress', progress => {\n      // There shouldn't be any progress update sending only the rate at this point of the process\n      if (!('rate' in progress)) {\n        handleProgressUpdated({\n          key: progress.key,\n          step: progress.step,\n          completed: progress.count.completed,\n          total: progress.count.total\n        });\n      }\n    });\n  }, [handleProgressUpdated, streamer]);\n  return /*#__PURE__*/React.createElement(Page, null, /*#__PURE__*/React.createElement(PageHeader, {\n    title: t('Importing_Data')\n  }), /*#__PURE__*/React.createElement(PageScrollableContentWithShadow, null, /*#__PURE__*/React.createElement(Box, {\n    marginInline: \"auto\",\n    marginBlock: \"neg-x24\",\n    width: \"full\",\n    maxWidth: \"x580\"\n  }, /*#__PURE__*/React.createElement(Margins, {\n    block: 24\n  }, currentOperation.isLoading && /*#__PURE__*/React.createElement(Throbber, {\n    justifyContent: \"center\"\n  }), progress.fetchStatus !== 'idle' && progress.isLoading && /*#__PURE__*/React.createElement(Throbber, {\n    justifyContent: \"center\"\n  }), (currentOperation.isError || progress.isError) && /*#__PURE__*/React.createElement(Box, {\n    is: \"p\"\n  }, t('Failed_To_Load_Import_Data')), progress.isSuccess && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    is: \"p\",\n    fontScale: \"p2\"\n  }, t(progress.data.step[0].toUpperCase() + progress.data.step.slice(1))), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\"\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    percentage: progress.data.completed / progress.data.total * 100\n  }), /*#__PURE__*/React.createElement(Box, {\n    is: \"span\",\n    fontScale: \"p2\",\n    mis: 24\n  }, numberFormat(progress.data.completed / progress.data.total * 100, 0), \"%\")))))));\n};\nmodule.exportDefault(ImportProgressPage);","map":{"version":3,"names":["Box","Margins","ProgressBar","Throbber","module","link","v","useMutableCallback","useToastMessageDispatch","useEndpoint","useStream","useRouter","useQuery","useMutation","useQueryClient","React","useEffect","default","useTranslation","useErrorHandler","ImportingStartedStates","numberFormat","Page","PageHeader","PageScrollableContentWithShadow","ImportProgressPage","queryClient","streamer","t","i18n","dispatchToastMessage","handleError","router","getCurrentImportOperation","getImportProgress","mutation","mutationFn","props","setQueryData","currentOperation","operation","refetchInterval","onSuccess","_ref","valid","status","navigate","type","message","includes","onError","error","handleProgressUpdated","_ref2","key","step","completed","total","isSuccess","toLowerCase","data","importerKey","toUpperCase","slice","exists","mutate","progress","count","enabled","createElement","title","marginInline","marginBlock","width","maxWidth","block","isLoading","justifyContent","fetchStatus","isError","is","Fragment","fontScale","display","percentage","mis","exportDefault"],"sources":["client/views/admin/import/ImportProgressPage.tsx"],"sourcesContent":["import type { ProgressStep } from '@rocket.chat/core-typings';\nimport { Box, Margins, ProgressBar, Throbber } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch, useEndpoint, useStream, useRouter } from '@rocket.chat/ui-contexts';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useErrorHandler } from './useErrorHandler';\nimport { ImportingStartedStates } from '../../../../app/importer/lib/ImporterProgressStep';\nimport { numberFormat } from '../../../../lib/utils/stringUtils';\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\n\n// TODO: review inner logic\nconst ImportProgressPage = function ImportProgressPage() {\n\tconst queryClient = useQueryClient();\n\tconst streamer = useStream('importers');\n\tconst { t, i18n } = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst handleError = useErrorHandler();\n\n\tconst router = useRouter();\n\n\tconst getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n\tconst getImportProgress = useEndpoint('GET', '/v1/getImportProgress');\n\n\tconst mutation = useMutation({\n\t\tmutationFn: async (props: { step: ProgressStep; completed: number; total: number }) => {\n\t\t\tqueryClient.setQueryData<{\n\t\t\t\tstep: ProgressStep;\n\t\t\t\tcompleted: number;\n\t\t\t\ttotal: number;\n\t\t\t}>(['importers', 'progress'], props);\n\t\t},\n\t});\n\n\tconst currentOperation = useQuery(\n\t\t['ImportProgressPage', 'currentOperation'],\n\t\tasync () => {\n\t\t\tconst { operation } = await getCurrentImportOperation();\n\t\t\treturn operation;\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 1000,\n\t\t\tonSuccess: ({ valid, status }) => {\n\t\t\t\tif (!valid) {\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (status === 'importer_done') {\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Importer_done') });\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!(ImportingStartedStates as string[]).includes(status)) {\n\t\t\t\t\trouter.navigate('/admin/import/prepare');\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t},\n\t\t},\n\t);\n\n\tconst handleProgressUpdated = useMutableCallback(\n\t\t({ key, step, completed, total }: { key: string; step: ProgressStep; completed: number; total: number }) => {\n\t\t\tif (!currentOperation.isSuccess) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (key.toLowerCase() !== currentOperation.data.importerKey.toLowerCase()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = step[0].toUpperCase() + step.slice(1);\n\n\t\t\tswitch (step) {\n\t\t\t\tcase 'importer_done':\n\t\t\t\t\ti18n.exists(message) &&\n\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tmessage: t(message),\n\t\t\t\t\t\t});\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'importer_import_failed':\n\t\t\t\tcase 'importer_import_cancelled':\n\t\t\t\t\ti18n.exists(message) && handleError(message);\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmutation.mutate({ step, completed, total });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t);\n\n\tconst progress = useQuery(\n\t\t['importers', 'progress'],\n\t\tasync () => {\n\t\t\tconst { key, step, count: { completed = 0, total = 0 } = {} } = await getImportProgress();\n\t\t\treturn {\n\t\t\t\tkey,\n\t\t\t\tstep,\n\t\t\t\tcompleted,\n\t\t\t\ttotal,\n\t\t\t};\n\t\t},\n\t\t{\n\t\t\tenabled: !!currentOperation.isSuccess,\n\t\t\tonSuccess: (progress) => {\n\t\t\t\tif (!progress) {\n\t\t\t\t\tdispatchToastMessage({ type: 'warning', message: t('Importer_not_in_progress') });\n\t\t\t\t\trouter.navigate('/admin/import/prepare');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// do not use the endpoint data to update the completed progress, leave it to the streamer\n\t\t\t\tif (!(ImportingStartedStates as string[]).includes(progress.step)) {\n\t\t\t\t\thandleProgressUpdated({\n\t\t\t\t\t\tkey: progress.key,\n\t\t\t\t\t\tstep: progress.step,\n\t\t\t\t\t\ttotal: progress.total,\n\t\t\t\t\t\tcompleted: progress.completed,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t},\n\t\t},\n\t);\n\n\tuseEffect(() => {\n\t\treturn streamer('progress', (progress) => {\n\t\t\t// There shouldn't be any progress update sending only the rate at this point of the process\n\t\t\tif (!('rate' in progress)) {\n\t\t\t\thandleProgressUpdated({\n\t\t\t\t\tkey: progress.key,\n\t\t\t\t\tstep: progress.step,\n\t\t\t\t\tcompleted: progress.count.completed,\n\t\t\t\t\ttotal: progress.count.total,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}, [handleProgressUpdated, streamer]);\n\n\treturn (\n\t\t<Page>\n\t\t\t<PageHeader title={t('Importing_Data')} />\n\t\t\t<PageScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='neg-x24' width='full' maxWidth='x580'>\n\t\t\t\t\t<Margins block={24}>\n\t\t\t\t\t\t{currentOperation.isLoading && <Throbber justifyContent='center' />}\n\t\t\t\t\t\t{progress.fetchStatus !== 'idle' && progress.isLoading && <Throbber justifyContent='center' />}\n\n\t\t\t\t\t\t{(currentOperation.isError || progress.isError) && <Box is='p'>{t('Failed_To_Load_Import_Data')}</Box>}\n\t\t\t\t\t\t{progress.isSuccess && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Box is='p' fontScale='p2'>\n\t\t\t\t\t\t\t\t\t{t((progress.data.step[0].toUpperCase() + progress.data.step.slice(1)) as any)}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Box display='flex' justifyContent='center'>\n\t\t\t\t\t\t\t\t\t<ProgressBar percentage={(progress.data.completed / progress.data.total) * 100} />\n\t\t\t\t\t\t\t\t\t<Box is='span' fontScale='p2' mis={24}>\n\t\t\t\t\t\t\t\t\t\t{numberFormat((progress.data.completed / progress.data.total) * 100, 0)}%\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t</Page>\n\t);\n};\n\nexport default ImportProgressPage;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6b38b50478fa65ef6a6cce0faf2850e1f0096b4d"}
