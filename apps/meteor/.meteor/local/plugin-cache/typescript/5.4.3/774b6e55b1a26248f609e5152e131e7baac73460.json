{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Agenda } from '@rocket.chat/agenda';\nimport type { IUser, IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport type { MainLogger } from '@rocket.chat/logger';\nimport { LivechatRooms, LivechatInquiry as LivechatInquiryRaw, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport { MongoInternals } from 'meteor/mongo';\nimport type { Db } from 'mongodb';\n\nimport { schedulerLogger } from './logger';\nimport { Livechat } from '../../../../../app/livechat/server/lib/LivechatTyped';\nimport { settings } from '../../../../../app/settings/server';\nimport { i18n } from '../../../../../server/lib/i18n';\n\nconst SCHEDULER_NAME = 'omnichannel_queue_inactivity_monitor';\n\nclass OmnichannelQueueInactivityMonitorClass {\n\tscheduler: Agenda;\n\n\trunning: boolean;\n\n\tlogger: MainLogger;\n\n\t_name: string;\n\n\tuser: IUser;\n\n\tmessage: string;\n\n\t_db: Db;\n\n\tbindedCloseRoom: any;\n\n\tconstructor() {\n\t\tthis._db = MongoInternals.defaultRemoteCollectionDriver().mongo.db;\n\t\tthis.running = false;\n\t\tthis._name = 'Omnichannel-Queue-Inactivity-Monitor';\n\t\tthis.logger = schedulerLogger.section(this._name);\n\t\tthis.scheduler = new Agenda({\n\t\t\tmongo: (MongoInternals.defaultRemoteCollectionDriver().mongo as any).client.db(),\n\t\t\tdb: { collection: SCHEDULER_NAME },\n\t\t\tdefaultConcurrency: 1,\n\t\t\tprocessEvery: process.env.TEST_MODE === 'true' ? '3 seconds' : '1 minute',\n\t\t});\n\t\tthis.createIndex();\n\t\tconst language = settings.get<string>('Language') || 'en';\n\t\tthis.message = i18n.t('Closed_automatically_chat_queued_too_long', { lng: language });\n\t\tthis.bindedCloseRoom = this.closeRoom.bind(this);\n\t}\n\n\tprivate async getRocketCatUser(): Promise<IUser | null> {\n\t\treturn Users.findOneById('rocket.cat');\n\t}\n\n\tgetName(inquiryId: string): string {\n\t\treturn `${this._name}-${inquiryId}`;\n\t}\n\n\tcreateIndex(): void {\n\t\tvoid this._db.collection(SCHEDULER_NAME).createIndex(\n\t\t\t{\n\t\t\t\t'data.inquiryId': 1,\n\t\t\t},\n\t\t\t{ unique: true },\n\t\t);\n\t}\n\n\tasync start(): Promise<void> {\n\t\tif (this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.scheduler.start();\n\t\tthis.logger.info('Service started');\n\t\tthis.running = true;\n\t}\n\n\tasync scheduleInquiry(inquiryId: string, time: Date): Promise<void> {\n\t\tawait this.stopInquiry(inquiryId);\n\t\tthis.logger.debug(`Scheduling automatic close of inquiry ${inquiryId} at ${time}`);\n\t\tconst name = this.getName(inquiryId);\n\t\tthis.scheduler.define(name, this.bindedCloseRoom);\n\n\t\tconst job = this.scheduler.create(name, { inquiryId });\n\t\tjob.schedule(time);\n\t\tjob.unique({ 'data.inquiryId': inquiryId });\n\t\tawait job.save();\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tif (!this.running) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.scheduler.cancel({});\n\t}\n\n\tasync stopInquiry(inquiryId: string): Promise<void> {\n\t\tconst name = this.getName(inquiryId);\n\t\tawait this.scheduler.cancel({ name });\n\t}\n\n\tasync closeRoomAction(room: IOmnichannelRoom): Promise<void> {\n\t\tconst comment = this.message;\n\t\treturn Livechat.closeRoom({\n\t\t\tcomment,\n\t\t\troom,\n\t\t\tuser: await this.getRocketCatUser(),\n\t\t});\n\t}\n\n\tasync closeRoom({ attrs: { data } }: any = {}): Promise<void> {\n\t\tconst { inquiryId } = data;\n\t\tconst inquiry = await LivechatInquiryRaw.findOneById(inquiryId);\n\t\tif (!inquiry || inquiry.status !== 'queued') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = await LivechatRooms.findOneById(inquiry.rid);\n\t\tif (!room) {\n\t\t\tthis.logger.error(`Unable to find room ${inquiry.rid} for inquiry ${inquiryId} to close in queue inactivity monitor`);\n\t\t\treturn;\n\t\t}\n\n\t\tawait Promise.all([this.closeRoomAction(room), this.stopInquiry(inquiryId)]);\n\t\tthis.logger.info(`Closed room ${inquiry.rid} for inquiry ${inquiryId} due to inactivity`);\n\t}\n}\n\nexport const OmnichannelQueueInactivityMonitor = new OmnichannelQueueInactivityMonitorClass();\n\nMeteor.startup(async () => {\n\tvoid OmnichannelQueueInactivityMonitor.start();\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Agenda } from '@rocket.chat/agenda';\nimport type { IUser, IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport type { MainLogger } from '@rocket.chat/logger';\nimport { LivechatRooms, LivechatInquiry as LivechatInquiryRaw, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport { MongoInternals } from 'meteor/mongo';\nimport type { Db } from 'mongodb';\n\nimport { schedulerLogger } from './logger';\nimport { Livechat } from '../../../../../app/livechat/server/lib/LivechatTyped';\nimport { settings } from '../../../../../app/settings/server';\nimport { i18n } from '../../../../../server/lib/i18n';\n\nconst SCHEDULER_NAME = 'omnichannel_queue_inactivity_monitor';\n\nclass OmnichannelQueueInactivityMonitorClass {\n\tscheduler: Agenda;\n\n\trunning: boolean;\n\n\tlogger: MainLogger;\n\n\t_name: string;\n\n\tuser: IUser;\n\n\tmessage: string;\n\n\t_db: Db;\n\n\tbindedCloseRoom: any;\n\n\tconstructor() {\n\t\tthis._db = MongoInternals.defaultRemoteCollectionDriver().mongo.db;\n\t\tthis.running = false;\n\t\tthis._name = 'Omnichannel-Queue-Inactivity-Monitor';\n\t\tthis.logger = schedulerLogger.section(this._name);\n\t\tthis.scheduler = new Agenda({\n\t\t\tmongo: (MongoInternals.defaultRemoteCollectionDriver().mongo as any).client.db(),\n\t\t\tdb: { collection: SCHEDULER_NAME },\n\t\t\tdefaultConcurrency: 1,\n\t\t\tprocessEvery: process.env.TEST_MODE === 'true' ? '3 seconds' : '1 minute',\n\t\t});\n\t\tthis.createIndex();\n\t\tconst language = settings.get<string>('Language') || 'en';\n\t\tthis.message = i18n.t('Closed_automatically_chat_queued_too_long', { lng: language });\n\t\tthis.bindedCloseRoom = this.closeRoom.bind(this);\n\t}\n\n\tprivate async getRocketCatUser(): Promise<IUser | null> {\n\t\treturn Users.findOneById('rocket.cat');\n\t}\n\n\tgetName(inquiryId: string): string {\n\t\treturn `${this._name}-${inquiryId}`;\n\t}\n\n\tcreateIndex(): void {\n\t\tvoid this._db.collection(SCHEDULER_NAME).createIndex(\n\t\t\t{\n\t\t\t\t'data.inquiryId': 1,\n\t\t\t},\n\t\t\t{ unique: true },\n\t\t);\n\t}\n\n\tasync start(): Promise<void> {\n\t\tif (this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.scheduler.start();\n\t\tthis.logger.info('Service started');\n\t\tthis.running = true;\n\t}\n\n\tasync scheduleInquiry(inquiryId: string, time: Date): Promise<void> {\n\t\tawait this.stopInquiry(inquiryId);\n\t\tthis.logger.debug(`Scheduling automatic close of inquiry ${inquiryId} at ${time}`);\n\t\tconst name = this.getName(inquiryId);\n\t\tthis.scheduler.define(name, this.bindedCloseRoom);\n\n\t\tconst job = this.scheduler.create(name, { inquiryId });\n\t\tjob.schedule(time);\n\t\tjob.unique({ 'data.inquiryId': inquiryId });\n\t\tawait job.save();\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tif (!this.running) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.scheduler.cancel({});\n\t}\n\n\tasync stopInquiry(inquiryId: string): Promise<void> {\n\t\tconst name = this.getName(inquiryId);\n\t\tawait this.scheduler.cancel({ name });\n\t}\n\n\tasync closeRoomAction(room: IOmnichannelRoom): Promise<void> {\n\t\tconst comment = this.message;\n\t\treturn Livechat.closeRoom({\n\t\t\tcomment,\n\t\t\troom,\n\t\t\tuser: await this.getRocketCatUser(),\n\t\t});\n\t}\n\n\tasync closeRoom({ attrs: { data } }: any = {}): Promise<void> {\n\t\tconst { inquiryId } = data;\n\t\tconst inquiry = await LivechatInquiryRaw.findOneById(inquiryId);\n\t\tif (!inquiry || inquiry.status !== 'queued') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = await LivechatRooms.findOneById(inquiry.rid);\n\t\tif (!room) {\n\t\t\tthis.logger.error(`Unable to find room ${inquiry.rid} for inquiry ${inquiryId} to close in queue inactivity monitor`);\n\t\t\treturn;\n\t\t}\n\n\t\tawait Promise.all([this.closeRoomAction(room), this.stopInquiry(inquiryId)]);\n\t\tthis.logger.info(`Closed room ${inquiry.rid} for inquiry ${inquiryId} due to inactivity`);\n\t}\n}\n\nexport const OmnichannelQueueInactivityMonitor = new OmnichannelQueueInactivityMonitorClass();\n\nMeteor.startup(async () => {\n\tvoid OmnichannelQueueInactivityMonitor.start();\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      OmnichannelQueueInactivityMonitor: () => OmnichannelQueueInactivityMonitor\n    });\n    let Agenda;\n    module.link(\"@rocket.chat/agenda\", {\n      Agenda(v) {\n        Agenda = v;\n      }\n    }, 0);\n    let LivechatRooms, LivechatInquiryRaw, Users;\n    module.link(\"@rocket.chat/models\", {\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      },\n      LivechatInquiry(v) {\n        LivechatInquiryRaw = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let MongoInternals;\n    module.link(\"meteor/mongo\", {\n      MongoInternals(v) {\n        MongoInternals = v;\n      }\n    }, 3);\n    let schedulerLogger;\n    module.link(\"./logger\", {\n      schedulerLogger(v) {\n        schedulerLogger = v;\n      }\n    }, 4);\n    let Livechat;\n    module.link(\"../../../../../app/livechat/server/lib/LivechatTyped\", {\n      Livechat(v) {\n        Livechat = v;\n      }\n    }, 5);\n    let settings;\n    module.link(\"../../../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 6);\n    let i18n;\n    module.link(\"../../../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 7);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const SCHEDULER_NAME = 'omnichannel_queue_inactivity_monitor';\n    class OmnichannelQueueInactivityMonitorClass {\n      constructor() {\n        this.scheduler = void 0;\n        this.running = void 0;\n        this.logger = void 0;\n        this._name = void 0;\n        this.user = void 0;\n        this.message = void 0;\n        this._db = void 0;\n        this.bindedCloseRoom = void 0;\n        this._db = MongoInternals.defaultRemoteCollectionDriver().mongo.db;\n        this.running = false;\n        this._name = 'Omnichannel-Queue-Inactivity-Monitor';\n        this.logger = schedulerLogger.section(this._name);\n        this.scheduler = new Agenda({\n          mongo: MongoInternals.defaultRemoteCollectionDriver().mongo.client.db(),\n          db: {\n            collection: SCHEDULER_NAME\n          },\n          defaultConcurrency: 1,\n          processEvery: process.env.TEST_MODE === 'true' ? '3 seconds' : '1 minute'\n        });\n        this.createIndex();\n        const language = settings.get('Language') || 'en';\n        this.message = i18n.t('Closed_automatically_chat_queued_too_long', {\n          lng: language\n        });\n        this.bindedCloseRoom = this.closeRoom.bind(this);\n      }\n      async getRocketCatUser() {\n        return Users.findOneById('rocket.cat');\n      }\n      getName(inquiryId) {\n        return \"\".concat(this._name, \"-\").concat(inquiryId);\n      }\n      createIndex() {\n        void this._db.collection(SCHEDULER_NAME).createIndex({\n          'data.inquiryId': 1\n        }, {\n          unique: true\n        });\n      }\n      async start() {\n        if (this.running) {\n          return;\n        }\n        await this.scheduler.start();\n        this.logger.info('Service started');\n        this.running = true;\n      }\n      async scheduleInquiry(inquiryId, time) {\n        await this.stopInquiry(inquiryId);\n        this.logger.debug(\"Scheduling automatic close of inquiry \".concat(inquiryId, \" at \").concat(time));\n        const name = this.getName(inquiryId);\n        this.scheduler.define(name, this.bindedCloseRoom);\n        const job = this.scheduler.create(name, {\n          inquiryId\n        });\n        job.schedule(time);\n        job.unique({\n          'data.inquiryId': inquiryId\n        });\n        await job.save();\n      }\n      async stop() {\n        if (!this.running) {\n          return;\n        }\n        await this.scheduler.cancel({});\n      }\n      async stopInquiry(inquiryId) {\n        const name = this.getName(inquiryId);\n        await this.scheduler.cancel({\n          name\n        });\n      }\n      async closeRoomAction(room) {\n        const comment = this.message;\n        return Livechat.closeRoom({\n          comment,\n          room,\n          user: await this.getRocketCatUser()\n        });\n      }\n      async closeRoom() {\n        let {\n          attrs: {\n            data\n          }\n        } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const {\n          inquiryId\n        } = data;\n        const inquiry = await LivechatInquiryRaw.findOneById(inquiryId);\n        if (!inquiry || inquiry.status !== 'queued') {\n          return;\n        }\n        const room = await LivechatRooms.findOneById(inquiry.rid);\n        if (!room) {\n          this.logger.error(\"Unable to find room \".concat(inquiry.rid, \" for inquiry \").concat(inquiryId, \" to close in queue inactivity monitor\"));\n          return;\n        }\n        await Promise.all([this.closeRoomAction(room), this.stopInquiry(inquiryId)]);\n        this.logger.info(\"Closed room \".concat(inquiry.rid, \" for inquiry \").concat(inquiryId, \" due to inactivity\"));\n      }\n    }\n    const OmnichannelQueueInactivityMonitor = new OmnichannelQueueInactivityMonitorClass();\n    Meteor.startup(async () => {\n      void OmnichannelQueueInactivityMonitor.start();\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","OmnichannelQueueInactivityMonitor","Agenda","link","v","LivechatRooms","LivechatInquiryRaw","Users","LivechatInquiry","Meteor","MongoInternals","schedulerLogger","Livechat","settings","i18n","__reifyWaitForDeps__","SCHEDULER_NAME","OmnichannelQueueInactivityMonitorClass","constructor","scheduler","running","logger","_name","user","message","_db","bindedCloseRoom","defaultRemoteCollectionDriver","mongo","db","section","client","collection","defaultConcurrency","processEvery","process","env","TEST_MODE","createIndex","language","get","t","lng","closeRoom","bind","getRocketCatUser","findOneById","getName","inquiryId","concat","unique","start","info","scheduleInquiry","time","stopInquiry","debug","name","define","job","create","schedule","save","stop","cancel","closeRoomAction","room","comment","attrs","data","arguments","length","undefined","inquiry","status","rid","error","Promise","all","startup","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/lib/QueueInactivityMonitor.ts"],"sourcesContent":["import { Agenda } from '@rocket.chat/agenda';\nimport type { IUser, IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport type { MainLogger } from '@rocket.chat/logger';\nimport { LivechatRooms, LivechatInquiry as LivechatInquiryRaw, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport { MongoInternals } from 'meteor/mongo';\nimport type { Db } from 'mongodb';\n\nimport { schedulerLogger } from './logger';\nimport { Livechat } from '../../../../../app/livechat/server/lib/LivechatTyped';\nimport { settings } from '../../../../../app/settings/server';\nimport { i18n } from '../../../../../server/lib/i18n';\n\nconst SCHEDULER_NAME = 'omnichannel_queue_inactivity_monitor';\n\nclass OmnichannelQueueInactivityMonitorClass {\n\tscheduler: Agenda;\n\n\trunning: boolean;\n\n\tlogger: MainLogger;\n\n\t_name: string;\n\n\tuser: IUser;\n\n\tmessage: string;\n\n\t_db: Db;\n\n\tbindedCloseRoom: any;\n\n\tconstructor() {\n\t\tthis._db = MongoInternals.defaultRemoteCollectionDriver().mongo.db;\n\t\tthis.running = false;\n\t\tthis._name = 'Omnichannel-Queue-Inactivity-Monitor';\n\t\tthis.logger = schedulerLogger.section(this._name);\n\t\tthis.scheduler = new Agenda({\n\t\t\tmongo: (MongoInternals.defaultRemoteCollectionDriver().mongo as any).client.db(),\n\t\t\tdb: { collection: SCHEDULER_NAME },\n\t\t\tdefaultConcurrency: 1,\n\t\t\tprocessEvery: process.env.TEST_MODE === 'true' ? '3 seconds' : '1 minute',\n\t\t});\n\t\tthis.createIndex();\n\t\tconst language = settings.get<string>('Language') || 'en';\n\t\tthis.message = i18n.t('Closed_automatically_chat_queued_too_long', { lng: language });\n\t\tthis.bindedCloseRoom = this.closeRoom.bind(this);\n\t}\n\n\tprivate async getRocketCatUser(): Promise<IUser | null> {\n\t\treturn Users.findOneById('rocket.cat');\n\t}\n\n\tgetName(inquiryId: string): string {\n\t\treturn `${this._name}-${inquiryId}`;\n\t}\n\n\tcreateIndex(): void {\n\t\tvoid this._db.collection(SCHEDULER_NAME).createIndex(\n\t\t\t{\n\t\t\t\t'data.inquiryId': 1,\n\t\t\t},\n\t\t\t{ unique: true },\n\t\t);\n\t}\n\n\tasync start(): Promise<void> {\n\t\tif (this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.scheduler.start();\n\t\tthis.logger.info('Service started');\n\t\tthis.running = true;\n\t}\n\n\tasync scheduleInquiry(inquiryId: string, time: Date): Promise<void> {\n\t\tawait this.stopInquiry(inquiryId);\n\t\tthis.logger.debug(`Scheduling automatic close of inquiry ${inquiryId} at ${time}`);\n\t\tconst name = this.getName(inquiryId);\n\t\tthis.scheduler.define(name, this.bindedCloseRoom);\n\n\t\tconst job = this.scheduler.create(name, { inquiryId });\n\t\tjob.schedule(time);\n\t\tjob.unique({ 'data.inquiryId': inquiryId });\n\t\tawait job.save();\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tif (!this.running) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.scheduler.cancel({});\n\t}\n\n\tasync stopInquiry(inquiryId: string): Promise<void> {\n\t\tconst name = this.getName(inquiryId);\n\t\tawait this.scheduler.cancel({ name });\n\t}\n\n\tasync closeRoomAction(room: IOmnichannelRoom): Promise<void> {\n\t\tconst comment = this.message;\n\t\treturn Livechat.closeRoom({\n\t\t\tcomment,\n\t\t\troom,\n\t\t\tuser: await this.getRocketCatUser(),\n\t\t});\n\t}\n\n\tasync closeRoom({ attrs: { data } }: any = {}): Promise<void> {\n\t\tconst { inquiryId } = data;\n\t\tconst inquiry = await LivechatInquiryRaw.findOneById(inquiryId);\n\t\tif (!inquiry || inquiry.status !== 'queued') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = await LivechatRooms.findOneById(inquiry.rid);\n\t\tif (!room) {\n\t\t\tthis.logger.error(`Unable to find room ${inquiry.rid} for inquiry ${inquiryId} to close in queue inactivity monitor`);\n\t\t\treturn;\n\t\t}\n\n\t\tawait Promise.all([this.closeRoomAction(room), this.stopInquiry(inquiryId)]);\n\t\tthis.logger.info(`Closed room ${inquiry.rid} for inquiry ${inquiryId} due to inactivity`);\n\t}\n}\n\nexport const OmnichannelQueueInactivityMonitor = new OmnichannelQueueInactivityMonitorClass();\n\nMeteor.startup(async () => {\n\tvoid OmnichannelQueueInactivityMonitor.start();\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"774b6e55b1a26248f609e5152e131e7baac73460"}
