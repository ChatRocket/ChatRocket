{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/client/rocketchat.e2e.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/e2e/client/rocketchat.e2e.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/client/rocketchat.e2e.ts","inputSourceMap":{"version":3,"file":"app/e2e/client/rocketchat.e2e.ts","sourceRoot":"","sources":["app/e2e/client/rocketchat.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import QueryString from 'querystring';\nimport URL from 'url';\n\nimport type { IE2EEMessage, IMessage, IRoom, ISubscription, IUser, IUploadWithUser, MessageAttachment } from '@rocket.chat/core-typings';\nimport { isE2EEMessage } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport EJSON from 'ejson';\nimport _ from 'lodash';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport * as banners from '../../../client/lib/banners';\nimport type { LegacyBannerPayload } from '../../../client/lib/banners';\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\nimport { dispatchToastMessage } from '../../../client/lib/toast';\nimport { mapMessageFromApi } from '../../../client/lib/utils/mapMessageFromApi';\nimport { waitUntilFind } from '../../../client/lib/utils/waitUntilFind';\nimport EnterE2EPasswordModal from '../../../client/views/e2e/EnterE2EPasswordModal';\nimport SaveE2EPasswordModal from '../../../client/views/e2e/SaveE2EPasswordModal';\nimport { createQuoteAttachment } from '../../../lib/createQuoteAttachment';\nimport { getMessageUrlRegex } from '../../../lib/getMessageUrlRegex';\nimport { isTruthy } from '../../../lib/isTruthy';\nimport { ChatRoom, Subscriptions, Messages } from '../../models/client';\nimport { settings } from '../../settings/client';\nimport { getUserAvatarURL } from '../../utils/client';\nimport { sdk } from '../../utils/client/lib/SDKClient';\nimport { t } from '../../utils/lib/i18n';\nimport { E2EEState } from './E2EEState';\nimport {\n\ttoString,\n\ttoArrayBuffer,\n\tjoinVectorAndEcryptedData,\n\tsplitVectorAndEcryptedData,\n\tencryptAES,\n\tdecryptAES,\n\tgenerateRSAKey,\n\texportJWKKey,\n\timportRSAKey,\n\timportRawKey,\n\tderiveKey,\n\tgenerateMnemonicPhrase,\n} from './helper';\nimport { log, logError } from './logger';\nimport { E2ERoom } from './rocketchat.e2e.room';\n\nimport './events';\n\nlet failedToDecodeKey = false;\n\ntype KeyPair = {\n\tpublic_key: string | null;\n\tprivate_key: string | null;\n};\n\nconst ROOM_KEY_EXCHANGE_SIZE = 10;\nconst E2EEStateDependency = new Tracker.Dependency();\n\nclass E2E extends Emitter {\n\tprivate started: boolean;\n\n\tprivate instancesByRoomId: Record<IRoom['_id'], E2ERoom>;\n\n\tprivate db_public_key: string | null | undefined;\n\n\tprivate db_private_key: string | null | undefined;\n\n\tpublic privateKey: CryptoKey | undefined;\n\n\tpublic publicKey: string | undefined;\n\n\tprivate keyDistributionInterval: ReturnType<typeof setInterval> | null;\n\n\tprivate state: E2EEState;\n\n\tprivate observable: Meteor.LiveQueryHandle | undefined;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.started = false;\n\t\tthis.instancesByRoomId = {};\n\t\tthis.keyDistributionInterval = null;\n\t\tthis.observable = undefined;\n\n\t\tthis.on('E2E_STATE_CHANGED', ({ prevState, nextState }) => {\n\t\t\tthis.log(`${prevState} -> ${nextState}`);\n\t\t});\n\n\t\tthis.on(E2EEState.READY, async () => {\n\t\t\tawait this.onE2EEReady();\n\t\t});\n\n\t\tthis.on(E2EEState.SAVE_PASSWORD, async () => {\n\t\t\tawait this.onE2EEReady();\n\t\t});\n\n\t\tthis.on(E2EEState.DISABLED, () => {\n\t\t\tthis.observable?.stop();\n\t\t});\n\n\t\tthis.on(E2EEState.NOT_STARTED, () => {\n\t\t\tthis.observable?.stop();\n\t\t});\n\n\t\tthis.on(E2EEState.ERROR, () => {\n\t\t\tthis.observable?.stop();\n\t\t});\n\n\t\tthis.setState(E2EEState.NOT_STARTED);\n\t}\n\n\tlog(...msg: unknown[]) {\n\t\tlog('E2E', ...msg);\n\t}\n\n\terror(...msg: unknown[]) {\n\t\tlogError('E2E', ...msg);\n\t}\n\n\tgetState() {\n\t\treturn this.state;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.state !== E2EEState.DISABLED;\n\t}\n\n\tisReady(): boolean {\n\t\tE2EEStateDependency.depend();\n\n\t\t// Save_Password state is also a ready state for E2EE\n\t\treturn this.state === E2EEState.READY || this.state === E2EEState.SAVE_PASSWORD;\n\t}\n\n\tasync onE2EEReady() {\n\t\tthis.log('startClient -> Done');\n\t\tthis.initiateHandshake();\n\t\tawait this.handleAsyncE2EESuggestedKey();\n\t\tthis.log('decryptSubscriptions');\n\t\tawait this.decryptSubscriptions();\n\t\tthis.log('decryptSubscriptions -> Done');\n\t\tawait this.initiateKeyDistribution();\n\t\tthis.log('initiateKeyDistribution -> Done');\n\t\tthis.observeSubscriptions();\n\t\tthis.log('observing subscriptions');\n\t}\n\n\tasync onSubscriptionChanged(sub: ISubscription) {\n\t\tthis.log('Subscription changed', sub);\n\t\tif (!sub.encrypted && !sub.E2EKey) {\n\t\t\tthis.removeInstanceByRoomId(sub.rid);\n\t\t\treturn;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(sub.rid);\n\t\tif (!e2eRoom) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (sub.E2ESuggestedKey) {\n\t\t\tif (await e2eRoom.importGroupKey(sub.E2ESuggestedKey)) {\n\t\t\t\tawait this.acceptSuggestedKey(sub.rid);\n\t\t\t\te2eRoom.keyReceived();\n\t\t\t} else {\n\t\t\t\tconsole.warn('Invalid E2ESuggestedKey, rejecting', sub.E2ESuggestedKey);\n\t\t\t\tawait this.rejectSuggestedKey(sub.rid);\n\t\t\t}\n\t\t}\n\n\t\tsub.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t// Cover private groups and direct messages\n\t\tif (!e2eRoom.isSupportedRoomType(sub.t)) {\n\t\t\te2eRoom.disable();\n\t\t\treturn;\n\t\t}\n\n\t\tif (sub.E2EKey && e2eRoom.isWaitingKeys()) {\n\t\t\te2eRoom.keyReceived();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!e2eRoom.isReady()) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait e2eRoom.decryptSubscription();\n\t}\n\n\tobserveSubscriptions() {\n\t\tthis.observable?.stop();\n\n\t\tthis.observable = Subscriptions.find().observe({\n\t\t\tchanged: (sub: ISubscription) => {\n\t\t\t\tsetTimeout(() => this.onSubscriptionChanged(sub), 0);\n\t\t\t},\n\t\t\tadded: (sub: ISubscription) => {\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tthis.log('Subscription added', sub);\n\t\t\t\t\tif (!sub.encrypted && !sub.E2EKey) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.getInstanceByRoomId(sub.rid);\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\tremoved: (sub: ISubscription) => {\n\t\t\t\tthis.log('Subscription removed', sub);\n\t\t\t\tthis.removeInstanceByRoomId(sub.rid);\n\t\t\t},\n\t\t});\n\t}\n\n\tshouldAskForE2EEPassword() {\n\t\tconst { private_key } = this.getKeysFromLocalStorage();\n\t\treturn this.db_private_key && !private_key;\n\t}\n\n\tsetState(nextState: E2EEState) {\n\t\tconst prevState = this.state;\n\n\t\tthis.state = nextState;\n\n\t\tE2EEStateDependency.changed();\n\n\t\tthis.emit('E2E_STATE_CHANGED', { prevState, nextState });\n\n\t\tthis.emit(nextState);\n\t}\n\n\tasync handleAsyncE2EESuggestedKey() {\n\t\tconst subs = Subscriptions.find({ E2ESuggestedKey: { $exists: true } }).fetch();\n\t\tawait Promise.all(\n\t\t\tsubs\n\t\t\t\t.filter((sub) => sub.E2ESuggestedKey && !sub.E2EKey)\n\t\t\t\t.map(async (sub) => {\n\t\t\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(sub.rid);\n\n\t\t\t\t\tif (!e2eRoom) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (await e2eRoom.importGroupKey(sub.E2ESuggestedKey)) {\n\t\t\t\t\t\tthis.log('Imported valid E2E suggested key');\n\t\t\t\t\t\tawait e2e.acceptSuggestedKey(sub.rid);\n\t\t\t\t\t\te2eRoom.keyReceived();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.error('Invalid E2ESuggestedKey, rejecting', sub.E2ESuggestedKey);\n\t\t\t\t\t\tawait e2e.rejectSuggestedKey(sub.rid);\n\t\t\t\t\t}\n\n\t\t\t\t\tsub.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\t\t\t\t}),\n\t\t);\n\t}\n\n\tasync getInstanceByRoomId(rid: IRoom['_id']): Promise<E2ERoom | null> {\n\t\tconst room = await waitUntilFind(() => ChatRoom.findOne({ _id: rid }));\n\n\t\tif (room.t !== 'd' && room.t !== 'p') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!room.encrypted) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.instancesByRoomId[rid]) {\n\t\t\tthis.instancesByRoomId[rid] = new E2ERoom(Meteor.userId(), room);\n\t\t}\n\n\t\t// When the key was already set and is changed via an update, we update the room instance\n\t\tif (\n\t\t\tthis.instancesByRoomId[rid].keyID !== undefined &&\n\t\t\troom.e2eKeyId !== undefined &&\n\t\t\tthis.instancesByRoomId[rid].keyID !== room.e2eKeyId\n\t\t) {\n\t\t\t// KeyID was changed, update instance with new keyID and put room in waiting keys status\n\t\t\tthis.instancesByRoomId[rid].onRoomKeyReset(room.e2eKeyId);\n\t\t}\n\n\t\treturn this.instancesByRoomId[rid];\n\t}\n\n\tremoveInstanceByRoomId(rid: IRoom['_id']): void {\n\t\tdelete this.instancesByRoomId[rid];\n\t}\n\n\tprivate async persistKeys(\n\t\t{ public_key, private_key }: KeyPair,\n\t\tpassword: string,\n\t\t{ force }: { force: boolean } = { force: false },\n\t): Promise<void> {\n\t\tif (typeof public_key !== 'string' || typeof private_key !== 'string') {\n\t\t\tthrow new Error('Failed to persist keys as they are not strings.');\n\t\t}\n\n\t\tconst encodedPrivateKey = await this.encodePrivateKey(private_key, password);\n\n\t\tif (!encodedPrivateKey) {\n\t\t\tthrow new Error('Failed to encode private key with provided password.');\n\t\t}\n\n\t\tawait sdk.rest.post('/v1/e2e.setUserPublicAndPrivateKeys', {\n\t\t\tpublic_key,\n\t\t\tprivate_key: encodedPrivateKey,\n\t\t\tforce,\n\t\t});\n\t}\n\n\tasync acceptSuggestedKey(rid: string): Promise<void> {\n\t\tawait sdk.rest.post('/v1/e2e.acceptSuggestedGroupKey', {\n\t\t\trid,\n\t\t});\n\t}\n\n\tasync rejectSuggestedKey(rid: string): Promise<void> {\n\t\tawait sdk.rest.post('/v1/e2e.rejectSuggestedGroupKey', {\n\t\t\trid,\n\t\t});\n\t}\n\n\tgetKeysFromLocalStorage(): KeyPair {\n\t\treturn {\n\t\t\tpublic_key: Accounts.storageLocation.getItem('public_key'),\n\t\t\tprivate_key: Accounts.storageLocation.getItem('private_key'),\n\t\t};\n\t}\n\n\tinitiateHandshake() {\n\t\tObject.keys(this.instancesByRoomId).map((key) => this.instancesByRoomId[key].handshake());\n\t}\n\n\topenSaveE2EEPasswordModal(randomPassword: string) {\n\t\timperativeModal.open({\n\t\t\tcomponent: SaveE2EPasswordModal,\n\t\t\tprops: {\n\t\t\t\trandomPassword,\n\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\tonCancel: () => {\n\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t},\n\t\t\t\tonConfirm: () => {\n\t\t\t\t\tAccounts.storageLocation.removeItem('e2e.randomPassword');\n\t\t\t\t\tthis.setState(E2EEState.READY);\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('End_To_End_Encryption_Enabled') });\n\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync startClient(): Promise<void> {\n\t\tif (this.started) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log('startClient -> STARTED');\n\n\t\tthis.started = true;\n\n\t\tlet { public_key, private_key } = this.getKeysFromLocalStorage();\n\n\t\tawait this.loadKeysFromDB();\n\n\t\tif (!public_key && this.db_public_key) {\n\t\t\tpublic_key = this.db_public_key;\n\t\t}\n\n\t\tif (this.shouldAskForE2EEPassword()) {\n\t\t\ttry {\n\t\t\t\tthis.setState(E2EEState.ENTER_PASSWORD);\n\t\t\t\tprivate_key = await this.decodePrivateKey(this.db_private_key as string);\n\t\t\t} catch (error) {\n\t\t\t\tthis.started = false;\n\t\t\t\tfailedToDecodeKey = true;\n\t\t\t\tthis.openAlert({\n\t\t\t\t\ttitle: \"Wasn't possible to decode your encryption key to be imported.\", // TODO: missing translation\n\t\t\t\t\thtml: '<div>Your encryption password seems wrong. Click here to try again.</div>', // TODO: missing translation\n\t\t\t\t\tmodifiers: ['large', 'danger'],\n\t\t\t\t\tclosable: true,\n\t\t\t\t\ticon: 'key',\n\t\t\t\t\taction: async () => {\n\t\t\t\t\t\tawait this.startClient();\n\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (public_key && private_key) {\n\t\t\tawait this.loadKeys({ public_key, private_key });\n\t\t\tthis.setState(E2EEState.READY);\n\t\t} else {\n\t\t\tawait this.createAndLoadKeys();\n\t\t\tthis.setState(E2EEState.READY);\n\t\t}\n\n\t\tif (!this.db_public_key || !this.db_private_key) {\n\t\t\tthis.setState(E2EEState.LOADING_KEYS);\n\t\t\tawait this.persistKeys(this.getKeysFromLocalStorage(), await this.createRandomPassword());\n\t\t}\n\n\t\tconst randomPassword = Accounts.storageLocation.getItem('e2e.randomPassword');\n\t\tif (randomPassword) {\n\t\t\tthis.setState(E2EEState.SAVE_PASSWORD);\n\t\t\tthis.openAlert({\n\t\t\t\ttitle: () => t('Save_your_encryption_password'),\n\t\t\t\thtml: () => t('Click_here_to_view_and_copy_your_password'),\n\t\t\t\tmodifiers: ['large'],\n\t\t\t\tclosable: false,\n\t\t\t\ticon: 'key',\n\t\t\t\taction: () => this.openSaveE2EEPasswordModal(randomPassword),\n\t\t\t});\n\t\t}\n\t}\n\n\tasync stopClient(): Promise<void> {\n\t\tthis.log('-> Stop Client');\n\t\tthis.closeAlert();\n\n\t\tAccounts.storageLocation.removeItem('public_key');\n\t\tAccounts.storageLocation.removeItem('private_key');\n\t\tthis.instancesByRoomId = {};\n\t\tthis.privateKey = undefined;\n\t\tthis.publicKey = undefined;\n\t\tthis.started = false;\n\t\tthis.keyDistributionInterval && clearInterval(this.keyDistributionInterval);\n\t\tthis.keyDistributionInterval = null;\n\t\tthis.setState(E2EEState.DISABLED);\n\t}\n\n\tasync changePassword(newPassword: string): Promise<void> {\n\t\tawait this.persistKeys(this.getKeysFromLocalStorage(), newPassword, { force: true });\n\n\t\tif (Accounts.storageLocation.getItem('e2e.randomPassword')) {\n\t\t\tAccounts.storageLocation.setItem('e2e.randomPassword', newPassword);\n\t\t}\n\t}\n\n\tasync loadKeysFromDB(): Promise<void> {\n\t\ttry {\n\t\t\tthis.setState(E2EEState.LOADING_KEYS);\n\t\t\tconst { public_key, private_key } = await sdk.rest.get('/v1/e2e.fetchMyKeys');\n\n\t\t\tthis.db_public_key = public_key;\n\t\t\tthis.db_private_key = private_key;\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\tthis.error('Error fetching RSA keys: ', error);\n\t\t\t// Stop any process since we can't communicate with the server\n\t\t\t// to get the keys. This prevents new key generation\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync loadKeys({ public_key, private_key }: { public_key: string; private_key: string }): Promise<void> {\n\t\tAccounts.storageLocation.setItem('public_key', public_key);\n\t\tthis.publicKey = public_key;\n\n\t\ttry {\n\t\t\tthis.privateKey = await importRSAKey(EJSON.parse(private_key), ['decrypt']);\n\n\t\t\tAccounts.storageLocation.setItem('private_key', private_key);\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error importing private key: ', error);\n\t\t}\n\t}\n\n\tasync createAndLoadKeys(): Promise<void> {\n\t\t// Could not obtain public-private keypair from server.\n\t\tthis.setState(E2EEState.LOADING_KEYS);\n\t\tlet key;\n\t\ttry {\n\t\t\tkey = await generateRSAKey();\n\t\t\tthis.privateKey = key.privateKey;\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error generating key: ', error);\n\t\t}\n\n\t\ttry {\n\t\t\tconst publicKey = await exportJWKKey(key.publicKey);\n\n\t\t\tthis.publicKey = JSON.stringify(publicKey);\n\t\t\tAccounts.storageLocation.setItem('public_key', JSON.stringify(publicKey));\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error exporting public key: ', error);\n\t\t}\n\n\t\ttry {\n\t\t\tconst privateKey = await exportJWKKey(key.privateKey);\n\n\t\t\tAccounts.storageLocation.setItem('private_key', JSON.stringify(privateKey));\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error exporting private key: ', error);\n\t\t}\n\n\t\tawait this.requestSubscriptionKeys();\n\t}\n\n\tasync requestSubscriptionKeys(): Promise<void> {\n\t\tawait sdk.call('e2e.requestSubscriptionKeys');\n\t}\n\n\tasync createRandomPassword(): Promise<string> {\n\t\tconst randomPassword = await generateMnemonicPhrase(5);\n\t\tAccounts.storageLocation.setItem('e2e.randomPassword', randomPassword);\n\t\treturn randomPassword;\n\t}\n\n\tasync encodePrivateKey(privateKey: string, password: string): Promise<string | void> {\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tconst vector = crypto.getRandomValues(new Uint8Array(16));\n\t\ttry {\n\t\t\tconst encodedPrivateKey = await encryptAES(vector, masterKey, toArrayBuffer(privateKey));\n\n\t\t\treturn EJSON.stringify(joinVectorAndEcryptedData(vector, encodedPrivateKey));\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error encrypting encodedPrivateKey: ', error);\n\t\t}\n\t}\n\n\tasync getMasterKey(password: string): Promise<void | CryptoKey> {\n\t\tif (password == null) {\n\t\t\talert('You should provide a password');\n\t\t}\n\n\t\t// First, create a PBKDF2 \"key\" containing the password\n\t\tlet baseKey;\n\t\ttry {\n\t\t\tbaseKey = await importRawKey(toArrayBuffer(password));\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error creating a key based on user password: ', error);\n\t\t}\n\n\t\t// Derive a key from the password\n\t\ttry {\n\t\t\treturn await deriveKey(toArrayBuffer(Meteor.userId()), baseKey);\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error deriving baseKey: ', error);\n\t\t}\n\t}\n\n\topenEnterE2EEPasswordModal(onEnterE2EEPassword?: (password: string) => void) {\n\t\timperativeModal.open({\n\t\t\tcomponent: EnterE2EPasswordModal,\n\t\t\tprops: {\n\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\tonCancel: () => {\n\t\t\t\t\tfailedToDecodeKey = false;\n\t\t\t\t\tdispatchToastMessage({ type: 'info', message: t('End_To_End_Encryption_Not_Enabled') });\n\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t},\n\t\t\t\tonConfirm: (password) => {\n\t\t\t\t\tonEnterE2EEPassword?.(password);\n\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync requestPasswordAlert(): Promise<string> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst showModal = () => this.openEnterE2EEPasswordModal((password) => resolve(password));\n\n\t\t\tconst showAlert = () => {\n\t\t\t\tthis.openAlert({\n\t\t\t\t\ttitle: () => t('Enter_your_E2E_password'),\n\t\t\t\t\thtml: () => t('Click_here_to_enter_your_encryption_password'),\n\t\t\t\t\tmodifiers: ['large'],\n\t\t\t\t\tclosable: false,\n\t\t\t\t\ticon: 'key',\n\t\t\t\t\taction() {\n\t\t\t\t\t\tshowModal();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (failedToDecodeKey) {\n\t\t\t\tshowModal();\n\t\t\t} else {\n\t\t\t\tshowAlert();\n\t\t\t}\n\t\t});\n\t}\n\n\tasync requestPasswordModal(): Promise<string> {\n\t\treturn new Promise((resolve) => this.openEnterE2EEPasswordModal((password) => resolve(password)));\n\t}\n\n\tasync decodePrivateKeyFlow() {\n\t\tconst password = await this.requestPasswordModal();\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tif (!this.db_private_key) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [vector, cipherText] = splitVectorAndEcryptedData(EJSON.parse(this.db_private_key));\n\n\t\ttry {\n\t\t\tconst privKey = await decryptAES(vector, masterKey, cipherText);\n\t\t\tconst privateKey = toString(privKey) as string;\n\n\t\t\tif (this.db_public_key && privateKey) {\n\t\t\t\tawait this.loadKeys({ public_key: this.db_public_key, private_key: privateKey });\n\t\t\t\tthis.setState(E2EEState.READY);\n\t\t\t} else {\n\t\t\t\tawait this.createAndLoadKeys();\n\t\t\t\tthis.setState(E2EEState.READY);\n\t\t\t}\n\t\t\tdispatchToastMessage({ type: 'success', message: t('End_To_End_Encryption_Enabled') });\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ENTER_PASSWORD);\n\t\t\tdispatchToastMessage({ type: 'error', message: t('Your_E2EE_password_is_incorrect') });\n\t\t\tdispatchToastMessage({ type: 'info', message: t('End_To_End_Encryption_Not_Enabled') });\n\t\t\tthrow new Error('E2E -> Error decrypting private key');\n\t\t}\n\t}\n\n\tasync decodePrivateKey(privateKey: string): Promise<string> {\n\t\tconst password = await this.requestPasswordAlert();\n\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tconst [vector, cipherText] = splitVectorAndEcryptedData(EJSON.parse(privateKey));\n\n\t\ttry {\n\t\t\tconst privKey = await decryptAES(vector, masterKey, cipherText);\n\t\t\treturn toString(privKey);\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ENTER_PASSWORD);\n\t\t\tdispatchToastMessage({ type: 'error', message: t('Your_E2EE_password_is_incorrect') });\n\t\t\tdispatchToastMessage({ type: 'info', message: t('End_To_End_Encryption_Not_Enabled') });\n\t\t\tthrow new Error('E2E -> Error decrypting private key');\n\t\t}\n\t}\n\n\tasync decryptFileContent(file: IUploadWithUser): Promise<IUploadWithUser> {\n\t\tif (!file.rid) {\n\t\t\treturn file;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(file.rid);\n\n\t\tif (!e2eRoom) {\n\t\t\treturn file;\n\t\t}\n\n\t\treturn e2eRoom.decryptContent(file);\n\t}\n\n\tasync decryptMessage(message: IMessage | IE2EEMessage): Promise<IMessage> {\n\t\tif (!isE2EEMessage(message) || message.e2e === 'done') {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(message.rid);\n\n\t\tif (!e2eRoom) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst decryptedMessage: IE2EEMessage = await e2eRoom.decryptMessage(message);\n\n\t\tconst decryptedMessageWithQuote = await this.parseQuoteAttachment(decryptedMessage);\n\n\t\treturn decryptedMessageWithQuote;\n\t}\n\n\tasync decryptPinnedMessage(message: IMessage) {\n\t\tconst pinnedMessage = message?.attachments?.[0]?.text;\n\n\t\tif (!pinnedMessage) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(message.rid);\n\n\t\tif (!e2eRoom) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst data = await e2eRoom.decrypt(pinnedMessage);\n\n\t\tif (!data) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst decryptedPinnedMessage = { ...message } as IMessage & { attachments: MessageAttachment[] };\n\t\tdecryptedPinnedMessage.attachments[0].text = data.text;\n\n\t\treturn decryptedPinnedMessage;\n\t}\n\n\tasync decryptPendingMessages(): Promise<void> {\n\t\treturn Messages.find({ t: 'e2e', e2e: 'pending' }).forEach(async ({ _id, ...msg }: IMessage) => {\n\t\t\tMessages.update({ _id }, await this.decryptMessage(msg as IE2EEMessage));\n\t\t});\n\t}\n\n\tasync decryptSubscription(subscriptionId: ISubscription['_id']): Promise<void> {\n\t\tconst e2eRoom = await this.getInstanceByRoomId(subscriptionId);\n\t\tthis.log('decryptSubscription ->', subscriptionId);\n\t\tawait e2eRoom?.decryptSubscription();\n\t}\n\n\tasync decryptSubscriptions(): Promise<void> {\n\t\tSubscriptions.find({\n\t\t\tencrypted: true,\n\t\t}).forEach((subscription) => this.decryptSubscription(subscription._id));\n\t}\n\n\topenAlert(config: Omit<LegacyBannerPayload, 'id'>): void {\n\t\tbanners.open({ id: 'e2e', ...config });\n\t}\n\n\tcloseAlert(): void {\n\t\tbanners.closeById('e2e');\n\t}\n\n\tasync parseQuoteAttachment(message: IE2EEMessage): Promise<IE2EEMessage> {\n\t\tif (!message?.msg) {\n\t\t\treturn message;\n\t\t}\n\t\tconst urls = message.msg.match(getMessageUrlRegex()) || [];\n\n\t\tawait Promise.all(\n\t\t\turls.map(async (url) => {\n\t\t\t\tif (!url.includes(settings.get('Site_Url'))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst urlObj = URL.parse(url);\n\t\t\t\t// if the URL doesn't have query params (doesn't reference message) skip\n\t\t\t\tif (!urlObj.query) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { msg: msgId } = QueryString.parse(urlObj.query);\n\n\t\t\t\tif (!msgId || Array.isArray(msgId)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst getQuotedMessage = await sdk.rest.get('/v1/chat.getMessage', { msgId });\n\t\t\t\tconst quotedMessage = getQuotedMessage?.message;\n\n\t\t\t\tif (!quotedMessage) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst decryptedQuoteMessage = await this.decryptMessage(mapMessageFromApi(quotedMessage));\n\n\t\t\t\tmessage.attachments = message.attachments || [];\n\n\t\t\t\tconst useRealName = settings.get('UI_Use_Real_Name');\n\t\t\t\tconst quoteAttachment = createQuoteAttachment(\n\t\t\t\t\tdecryptedQuoteMessage,\n\t\t\t\t\turl,\n\t\t\t\t\tuseRealName,\n\t\t\t\t\tgetUserAvatarURL(decryptedQuoteMessage.u.username || '') as string,\n\t\t\t\t);\n\n\t\t\t\tmessage.attachments.push(quoteAttachment);\n\t\t\t}),\n\t\t);\n\n\t\treturn message;\n\t}\n\n\tasync getSuggestedE2EEKeys(usersWaitingForE2EKeys: Record<IRoom['_id'], { _id: IUser['_id']; public_key: string }[]>) {\n\t\tconst roomIds = Object.keys(usersWaitingForE2EKeys);\n\t\treturn Object.fromEntries(\n\t\t\t(\n\t\t\t\tawait Promise.all(\n\t\t\t\t\troomIds.map(async (room) => {\n\t\t\t\t\t\tconst e2eRoom = await this.getInstanceByRoomId(room);\n\n\t\t\t\t\t\tif (!e2eRoom) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst usersWithKeys = await e2eRoom.encryptGroupKeyForParticipantsWaitingForTheKeys(usersWaitingForE2EKeys[room]);\n\n\t\t\t\t\t\tif (!usersWithKeys) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [room, usersWithKeys];\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t).filter(isTruthy),\n\t\t);\n\t}\n\n\tasync getSample(roomIds: string[], limit = 3): Promise<string[]> {\n\t\tif (limit === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst randomRoomIds = _.sampleSize(roomIds, ROOM_KEY_EXCHANGE_SIZE);\n\n\t\tconst sampleIds: string[] = [];\n\t\tfor await (const roomId of randomRoomIds) {\n\t\t\tconst e2eroom = await this.getInstanceByRoomId(roomId);\n\t\t\tif (!e2eroom?.hasSessionKey()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsampleIds.push(roomId);\n\t\t}\n\n\t\tif (!sampleIds.length) {\n\t\t\treturn this.getSample(roomIds, limit - 1);\n\t\t}\n\n\t\treturn sampleIds;\n\t}\n\n\tasync initiateKeyDistribution() {\n\t\tif (this.keyDistributionInterval) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst keyDistribution = async () => {\n\t\t\tconst roomIds = ChatRoom.find({\n\t\t\t\t'usersWaitingForE2EKeys': { $exists: true },\n\t\t\t\t'usersWaitingForE2EKeys.userId': { $ne: Meteor.userId() },\n\t\t\t}).map((room) => room._id);\n\t\t\tif (!roomIds.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prevent function from running and doing nothing when theres something to do\n\t\t\tconst sampleIds = await this.getSample(roomIds);\n\n\t\t\tif (!sampleIds.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { usersWaitingForE2EKeys = {} } = await sdk.rest.get('/v1/e2e.fetchUsersWaitingForGroupKey', { roomIds: sampleIds });\n\n\t\t\tif (!Object.keys(usersWaitingForE2EKeys).length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userKeysWithRooms = await this.getSuggestedE2EEKeys(usersWaitingForE2EKeys);\n\n\t\t\tif (!Object.keys(userKeysWithRooms).length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait sdk.rest.post('/v1/e2e.provideUsersSuggestedGroupKeys', { usersSuggestedGroupKeys: userKeysWithRooms });\n\t\t\t} catch (error) {\n\t\t\t\treturn this.error('Error providing group key to users: ', error);\n\t\t\t}\n\t\t};\n\n\t\t// Run first call right away, then schedule for 10s in the future\n\t\tawait keyDistribution();\n\t\tthis.keyDistributionInterval = setInterval(keyDistribution, 10000);\n\t}\n}\n\nexport const e2e = new E2E();\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"production","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/client/rocketchat.e2e.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/e2e/client/rocketchat.e2e.ts","inputSourceMap":{"version":3,"file":"app/e2e/client/rocketchat.e2e.ts","sourceRoot":"","sources":["app/e2e/client/rocketchat.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import QueryString from 'querystring';\nimport URL from 'url';\n\nimport type { IE2EEMessage, IMessage, IRoom, ISubscription, IUser, IUploadWithUser, MessageAttachment } from '@rocket.chat/core-typings';\nimport { isE2EEMessage } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport EJSON from 'ejson';\nimport _ from 'lodash';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport * as banners from '../../../client/lib/banners';\nimport type { LegacyBannerPayload } from '../../../client/lib/banners';\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\nimport { dispatchToastMessage } from '../../../client/lib/toast';\nimport { mapMessageFromApi } from '../../../client/lib/utils/mapMessageFromApi';\nimport { waitUntilFind } from '../../../client/lib/utils/waitUntilFind';\nimport EnterE2EPasswordModal from '../../../client/views/e2e/EnterE2EPasswordModal';\nimport SaveE2EPasswordModal from '../../../client/views/e2e/SaveE2EPasswordModal';\nimport { createQuoteAttachment } from '../../../lib/createQuoteAttachment';\nimport { getMessageUrlRegex } from '../../../lib/getMessageUrlRegex';\nimport { isTruthy } from '../../../lib/isTruthy';\nimport { ChatRoom, Subscriptions, Messages } from '../../models/client';\nimport { settings } from '../../settings/client';\nimport { getUserAvatarURL } from '../../utils/client';\nimport { sdk } from '../../utils/client/lib/SDKClient';\nimport { t } from '../../utils/lib/i18n';\nimport { E2EEState } from './E2EEState';\nimport {\n\ttoString,\n\ttoArrayBuffer,\n\tjoinVectorAndEcryptedData,\n\tsplitVectorAndEcryptedData,\n\tencryptAES,\n\tdecryptAES,\n\tgenerateRSAKey,\n\texportJWKKey,\n\timportRSAKey,\n\timportRawKey,\n\tderiveKey,\n\tgenerateMnemonicPhrase,\n} from './helper';\nimport { log, logError } from './logger';\nimport { E2ERoom } from './rocketchat.e2e.room';\n\nimport './events';\n\nlet failedToDecodeKey = false;\n\ntype KeyPair = {\n\tpublic_key: string | null;\n\tprivate_key: string | null;\n};\n\nconst ROOM_KEY_EXCHANGE_SIZE = 10;\nconst E2EEStateDependency = new Tracker.Dependency();\n\nclass E2E extends Emitter {\n\tprivate started: boolean;\n\n\tprivate instancesByRoomId: Record<IRoom['_id'], E2ERoom>;\n\n\tprivate db_public_key: string | null | undefined;\n\n\tprivate db_private_key: string | null | undefined;\n\n\tpublic privateKey: CryptoKey | undefined;\n\n\tpublic publicKey: string | undefined;\n\n\tprivate keyDistributionInterval: ReturnType<typeof setInterval> | null;\n\n\tprivate state: E2EEState;\n\n\tprivate observable: Meteor.LiveQueryHandle | undefined;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.started = false;\n\t\tthis.instancesByRoomId = {};\n\t\tthis.keyDistributionInterval = null;\n\t\tthis.observable = undefined;\n\n\t\tthis.on('E2E_STATE_CHANGED', ({ prevState, nextState }) => {\n\t\t\tthis.log(`${prevState} -> ${nextState}`);\n\t\t});\n\n\t\tthis.on(E2EEState.READY, async () => {\n\t\t\tawait this.onE2EEReady();\n\t\t});\n\n\t\tthis.on(E2EEState.SAVE_PASSWORD, async () => {\n\t\t\tawait this.onE2EEReady();\n\t\t});\n\n\t\tthis.on(E2EEState.DISABLED, () => {\n\t\t\tthis.observable?.stop();\n\t\t});\n\n\t\tthis.on(E2EEState.NOT_STARTED, () => {\n\t\t\tthis.observable?.stop();\n\t\t});\n\n\t\tthis.on(E2EEState.ERROR, () => {\n\t\t\tthis.observable?.stop();\n\t\t});\n\n\t\tthis.setState(E2EEState.NOT_STARTED);\n\t}\n\n\tlog(...msg: unknown[]) {\n\t\tlog('E2E', ...msg);\n\t}\n\n\terror(...msg: unknown[]) {\n\t\tlogError('E2E', ...msg);\n\t}\n\n\tgetState() {\n\t\treturn this.state;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.state !== E2EEState.DISABLED;\n\t}\n\n\tisReady(): boolean {\n\t\tE2EEStateDependency.depend();\n\n\t\t// Save_Password state is also a ready state for E2EE\n\t\treturn this.state === E2EEState.READY || this.state === E2EEState.SAVE_PASSWORD;\n\t}\n\n\tasync onE2EEReady() {\n\t\tthis.log('startClient -> Done');\n\t\tthis.initiateHandshake();\n\t\tawait this.handleAsyncE2EESuggestedKey();\n\t\tthis.log('decryptSubscriptions');\n\t\tawait this.decryptSubscriptions();\n\t\tthis.log('decryptSubscriptions -> Done');\n\t\tawait this.initiateKeyDistribution();\n\t\tthis.log('initiateKeyDistribution -> Done');\n\t\tthis.observeSubscriptions();\n\t\tthis.log('observing subscriptions');\n\t}\n\n\tasync onSubscriptionChanged(sub: ISubscription) {\n\t\tthis.log('Subscription changed', sub);\n\t\tif (!sub.encrypted && !sub.E2EKey) {\n\t\t\tthis.removeInstanceByRoomId(sub.rid);\n\t\t\treturn;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(sub.rid);\n\t\tif (!e2eRoom) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (sub.E2ESuggestedKey) {\n\t\t\tif (await e2eRoom.importGroupKey(sub.E2ESuggestedKey)) {\n\t\t\t\tawait this.acceptSuggestedKey(sub.rid);\n\t\t\t\te2eRoom.keyReceived();\n\t\t\t} else {\n\t\t\t\tconsole.warn('Invalid E2ESuggestedKey, rejecting', sub.E2ESuggestedKey);\n\t\t\t\tawait this.rejectSuggestedKey(sub.rid);\n\t\t\t}\n\t\t}\n\n\t\tsub.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t// Cover private groups and direct messages\n\t\tif (!e2eRoom.isSupportedRoomType(sub.t)) {\n\t\t\te2eRoom.disable();\n\t\t\treturn;\n\t\t}\n\n\t\tif (sub.E2EKey && e2eRoom.isWaitingKeys()) {\n\t\t\te2eRoom.keyReceived();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!e2eRoom.isReady()) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait e2eRoom.decryptSubscription();\n\t}\n\n\tobserveSubscriptions() {\n\t\tthis.observable?.stop();\n\n\t\tthis.observable = Subscriptions.find().observe({\n\t\t\tchanged: (sub: ISubscription) => {\n\t\t\t\tsetTimeout(() => this.onSubscriptionChanged(sub), 0);\n\t\t\t},\n\t\t\tadded: (sub: ISubscription) => {\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tthis.log('Subscription added', sub);\n\t\t\t\t\tif (!sub.encrypted && !sub.E2EKey) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.getInstanceByRoomId(sub.rid);\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\tremoved: (sub: ISubscription) => {\n\t\t\t\tthis.log('Subscription removed', sub);\n\t\t\t\tthis.removeInstanceByRoomId(sub.rid);\n\t\t\t},\n\t\t});\n\t}\n\n\tshouldAskForE2EEPassword() {\n\t\tconst { private_key } = this.getKeysFromLocalStorage();\n\t\treturn this.db_private_key && !private_key;\n\t}\n\n\tsetState(nextState: E2EEState) {\n\t\tconst prevState = this.state;\n\n\t\tthis.state = nextState;\n\n\t\tE2EEStateDependency.changed();\n\n\t\tthis.emit('E2E_STATE_CHANGED', { prevState, nextState });\n\n\t\tthis.emit(nextState);\n\t}\n\n\tasync handleAsyncE2EESuggestedKey() {\n\t\tconst subs = Subscriptions.find({ E2ESuggestedKey: { $exists: true } }).fetch();\n\t\tawait Promise.all(\n\t\t\tsubs\n\t\t\t\t.filter((sub) => sub.E2ESuggestedKey && !sub.E2EKey)\n\t\t\t\t.map(async (sub) => {\n\t\t\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(sub.rid);\n\n\t\t\t\t\tif (!e2eRoom) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (await e2eRoom.importGroupKey(sub.E2ESuggestedKey)) {\n\t\t\t\t\t\tthis.log('Imported valid E2E suggested key');\n\t\t\t\t\t\tawait e2e.acceptSuggestedKey(sub.rid);\n\t\t\t\t\t\te2eRoom.keyReceived();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.error('Invalid E2ESuggestedKey, rejecting', sub.E2ESuggestedKey);\n\t\t\t\t\t\tawait e2e.rejectSuggestedKey(sub.rid);\n\t\t\t\t\t}\n\n\t\t\t\t\tsub.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\t\t\t\t}),\n\t\t);\n\t}\n\n\tasync getInstanceByRoomId(rid: IRoom['_id']): Promise<E2ERoom | null> {\n\t\tconst room = await waitUntilFind(() => ChatRoom.findOne({ _id: rid }));\n\n\t\tif (room.t !== 'd' && room.t !== 'p') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!room.encrypted) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.instancesByRoomId[rid]) {\n\t\t\tthis.instancesByRoomId[rid] = new E2ERoom(Meteor.userId(), room);\n\t\t}\n\n\t\t// When the key was already set and is changed via an update, we update the room instance\n\t\tif (\n\t\t\tthis.instancesByRoomId[rid].keyID !== undefined &&\n\t\t\troom.e2eKeyId !== undefined &&\n\t\t\tthis.instancesByRoomId[rid].keyID !== room.e2eKeyId\n\t\t) {\n\t\t\t// KeyID was changed, update instance with new keyID and put room in waiting keys status\n\t\t\tthis.instancesByRoomId[rid].onRoomKeyReset(room.e2eKeyId);\n\t\t}\n\n\t\treturn this.instancesByRoomId[rid];\n\t}\n\n\tremoveInstanceByRoomId(rid: IRoom['_id']): void {\n\t\tdelete this.instancesByRoomId[rid];\n\t}\n\n\tprivate async persistKeys(\n\t\t{ public_key, private_key }: KeyPair,\n\t\tpassword: string,\n\t\t{ force }: { force: boolean } = { force: false },\n\t): Promise<void> {\n\t\tif (typeof public_key !== 'string' || typeof private_key !== 'string') {\n\t\t\tthrow new Error('Failed to persist keys as they are not strings.');\n\t\t}\n\n\t\tconst encodedPrivateKey = await this.encodePrivateKey(private_key, password);\n\n\t\tif (!encodedPrivateKey) {\n\t\t\tthrow new Error('Failed to encode private key with provided password.');\n\t\t}\n\n\t\tawait sdk.rest.post('/v1/e2e.setUserPublicAndPrivateKeys', {\n\t\t\tpublic_key,\n\t\t\tprivate_key: encodedPrivateKey,\n\t\t\tforce,\n\t\t});\n\t}\n\n\tasync acceptSuggestedKey(rid: string): Promise<void> {\n\t\tawait sdk.rest.post('/v1/e2e.acceptSuggestedGroupKey', {\n\t\t\trid,\n\t\t});\n\t}\n\n\tasync rejectSuggestedKey(rid: string): Promise<void> {\n\t\tawait sdk.rest.post('/v1/e2e.rejectSuggestedGroupKey', {\n\t\t\trid,\n\t\t});\n\t}\n\n\tgetKeysFromLocalStorage(): KeyPair {\n\t\treturn {\n\t\t\tpublic_key: Accounts.storageLocation.getItem('public_key'),\n\t\t\tprivate_key: Accounts.storageLocation.getItem('private_key'),\n\t\t};\n\t}\n\n\tinitiateHandshake() {\n\t\tObject.keys(this.instancesByRoomId).map((key) => this.instancesByRoomId[key].handshake());\n\t}\n\n\topenSaveE2EEPasswordModal(randomPassword: string) {\n\t\timperativeModal.open({\n\t\t\tcomponent: SaveE2EPasswordModal,\n\t\t\tprops: {\n\t\t\t\trandomPassword,\n\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\tonCancel: () => {\n\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t},\n\t\t\t\tonConfirm: () => {\n\t\t\t\t\tAccounts.storageLocation.removeItem('e2e.randomPassword');\n\t\t\t\t\tthis.setState(E2EEState.READY);\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('End_To_End_Encryption_Enabled') });\n\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync startClient(): Promise<void> {\n\t\tif (this.started) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log('startClient -> STARTED');\n\n\t\tthis.started = true;\n\n\t\tlet { public_key, private_key } = this.getKeysFromLocalStorage();\n\n\t\tawait this.loadKeysFromDB();\n\n\t\tif (!public_key && this.db_public_key) {\n\t\t\tpublic_key = this.db_public_key;\n\t\t}\n\n\t\tif (this.shouldAskForE2EEPassword()) {\n\t\t\ttry {\n\t\t\t\tthis.setState(E2EEState.ENTER_PASSWORD);\n\t\t\t\tprivate_key = await this.decodePrivateKey(this.db_private_key as string);\n\t\t\t} catch (error) {\n\t\t\t\tthis.started = false;\n\t\t\t\tfailedToDecodeKey = true;\n\t\t\t\tthis.openAlert({\n\t\t\t\t\ttitle: \"Wasn't possible to decode your encryption key to be imported.\", // TODO: missing translation\n\t\t\t\t\thtml: '<div>Your encryption password seems wrong. Click here to try again.</div>', // TODO: missing translation\n\t\t\t\t\tmodifiers: ['large', 'danger'],\n\t\t\t\t\tclosable: true,\n\t\t\t\t\ticon: 'key',\n\t\t\t\t\taction: async () => {\n\t\t\t\t\t\tawait this.startClient();\n\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (public_key && private_key) {\n\t\t\tawait this.loadKeys({ public_key, private_key });\n\t\t\tthis.setState(E2EEState.READY);\n\t\t} else {\n\t\t\tawait this.createAndLoadKeys();\n\t\t\tthis.setState(E2EEState.READY);\n\t\t}\n\n\t\tif (!this.db_public_key || !this.db_private_key) {\n\t\t\tthis.setState(E2EEState.LOADING_KEYS);\n\t\t\tawait this.persistKeys(this.getKeysFromLocalStorage(), await this.createRandomPassword());\n\t\t}\n\n\t\tconst randomPassword = Accounts.storageLocation.getItem('e2e.randomPassword');\n\t\tif (randomPassword) {\n\t\t\tthis.setState(E2EEState.SAVE_PASSWORD);\n\t\t\tthis.openAlert({\n\t\t\t\ttitle: () => t('Save_your_encryption_password'),\n\t\t\t\thtml: () => t('Click_here_to_view_and_copy_your_password'),\n\t\t\t\tmodifiers: ['large'],\n\t\t\t\tclosable: false,\n\t\t\t\ticon: 'key',\n\t\t\t\taction: () => this.openSaveE2EEPasswordModal(randomPassword),\n\t\t\t});\n\t\t}\n\t}\n\n\tasync stopClient(): Promise<void> {\n\t\tthis.log('-> Stop Client');\n\t\tthis.closeAlert();\n\n\t\tAccounts.storageLocation.removeItem('public_key');\n\t\tAccounts.storageLocation.removeItem('private_key');\n\t\tthis.instancesByRoomId = {};\n\t\tthis.privateKey = undefined;\n\t\tthis.publicKey = undefined;\n\t\tthis.started = false;\n\t\tthis.keyDistributionInterval && clearInterval(this.keyDistributionInterval);\n\t\tthis.keyDistributionInterval = null;\n\t\tthis.setState(E2EEState.DISABLED);\n\t}\n\n\tasync changePassword(newPassword: string): Promise<void> {\n\t\tawait this.persistKeys(this.getKeysFromLocalStorage(), newPassword, { force: true });\n\n\t\tif (Accounts.storageLocation.getItem('e2e.randomPassword')) {\n\t\t\tAccounts.storageLocation.setItem('e2e.randomPassword', newPassword);\n\t\t}\n\t}\n\n\tasync loadKeysFromDB(): Promise<void> {\n\t\ttry {\n\t\t\tthis.setState(E2EEState.LOADING_KEYS);\n\t\t\tconst { public_key, private_key } = await sdk.rest.get('/v1/e2e.fetchMyKeys');\n\n\t\t\tthis.db_public_key = public_key;\n\t\t\tthis.db_private_key = private_key;\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\tthis.error('Error fetching RSA keys: ', error);\n\t\t\t// Stop any process since we can't communicate with the server\n\t\t\t// to get the keys. This prevents new key generation\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync loadKeys({ public_key, private_key }: { public_key: string; private_key: string }): Promise<void> {\n\t\tAccounts.storageLocation.setItem('public_key', public_key);\n\t\tthis.publicKey = public_key;\n\n\t\ttry {\n\t\t\tthis.privateKey = await importRSAKey(EJSON.parse(private_key), ['decrypt']);\n\n\t\t\tAccounts.storageLocation.setItem('private_key', private_key);\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error importing private key: ', error);\n\t\t}\n\t}\n\n\tasync createAndLoadKeys(): Promise<void> {\n\t\t// Could not obtain public-private keypair from server.\n\t\tthis.setState(E2EEState.LOADING_KEYS);\n\t\tlet key;\n\t\ttry {\n\t\t\tkey = await generateRSAKey();\n\t\t\tthis.privateKey = key.privateKey;\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error generating key: ', error);\n\t\t}\n\n\t\ttry {\n\t\t\tconst publicKey = await exportJWKKey(key.publicKey);\n\n\t\t\tthis.publicKey = JSON.stringify(publicKey);\n\t\t\tAccounts.storageLocation.setItem('public_key', JSON.stringify(publicKey));\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error exporting public key: ', error);\n\t\t}\n\n\t\ttry {\n\t\t\tconst privateKey = await exportJWKKey(key.privateKey);\n\n\t\t\tAccounts.storageLocation.setItem('private_key', JSON.stringify(privateKey));\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error exporting private key: ', error);\n\t\t}\n\n\t\tawait this.requestSubscriptionKeys();\n\t}\n\n\tasync requestSubscriptionKeys(): Promise<void> {\n\t\tawait sdk.call('e2e.requestSubscriptionKeys');\n\t}\n\n\tasync createRandomPassword(): Promise<string> {\n\t\tconst randomPassword = await generateMnemonicPhrase(5);\n\t\tAccounts.storageLocation.setItem('e2e.randomPassword', randomPassword);\n\t\treturn randomPassword;\n\t}\n\n\tasync encodePrivateKey(privateKey: string, password: string): Promise<string | void> {\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tconst vector = crypto.getRandomValues(new Uint8Array(16));\n\t\ttry {\n\t\t\tconst encodedPrivateKey = await encryptAES(vector, masterKey, toArrayBuffer(privateKey));\n\n\t\t\treturn EJSON.stringify(joinVectorAndEcryptedData(vector, encodedPrivateKey));\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error encrypting encodedPrivateKey: ', error);\n\t\t}\n\t}\n\n\tasync getMasterKey(password: string): Promise<void | CryptoKey> {\n\t\tif (password == null) {\n\t\t\talert('You should provide a password');\n\t\t}\n\n\t\t// First, create a PBKDF2 \"key\" containing the password\n\t\tlet baseKey;\n\t\ttry {\n\t\t\tbaseKey = await importRawKey(toArrayBuffer(password));\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error creating a key based on user password: ', error);\n\t\t}\n\n\t\t// Derive a key from the password\n\t\ttry {\n\t\t\treturn await deriveKey(toArrayBuffer(Meteor.userId()), baseKey);\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error deriving baseKey: ', error);\n\t\t}\n\t}\n\n\topenEnterE2EEPasswordModal(onEnterE2EEPassword?: (password: string) => void) {\n\t\timperativeModal.open({\n\t\t\tcomponent: EnterE2EPasswordModal,\n\t\t\tprops: {\n\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\tonCancel: () => {\n\t\t\t\t\tfailedToDecodeKey = false;\n\t\t\t\t\tdispatchToastMessage({ type: 'info', message: t('End_To_End_Encryption_Not_Enabled') });\n\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t},\n\t\t\t\tonConfirm: (password) => {\n\t\t\t\t\tonEnterE2EEPassword?.(password);\n\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync requestPasswordAlert(): Promise<string> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst showModal = () => this.openEnterE2EEPasswordModal((password) => resolve(password));\n\n\t\t\tconst showAlert = () => {\n\t\t\t\tthis.openAlert({\n\t\t\t\t\ttitle: () => t('Enter_your_E2E_password'),\n\t\t\t\t\thtml: () => t('Click_here_to_enter_your_encryption_password'),\n\t\t\t\t\tmodifiers: ['large'],\n\t\t\t\t\tclosable: false,\n\t\t\t\t\ticon: 'key',\n\t\t\t\t\taction() {\n\t\t\t\t\t\tshowModal();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (failedToDecodeKey) {\n\t\t\t\tshowModal();\n\t\t\t} else {\n\t\t\t\tshowAlert();\n\t\t\t}\n\t\t});\n\t}\n\n\tasync requestPasswordModal(): Promise<string> {\n\t\treturn new Promise((resolve) => this.openEnterE2EEPasswordModal((password) => resolve(password)));\n\t}\n\n\tasync decodePrivateKeyFlow() {\n\t\tconst password = await this.requestPasswordModal();\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tif (!this.db_private_key) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [vector, cipherText] = splitVectorAndEcryptedData(EJSON.parse(this.db_private_key));\n\n\t\ttry {\n\t\t\tconst privKey = await decryptAES(vector, masterKey, cipherText);\n\t\t\tconst privateKey = toString(privKey) as string;\n\n\t\t\tif (this.db_public_key && privateKey) {\n\t\t\t\tawait this.loadKeys({ public_key: this.db_public_key, private_key: privateKey });\n\t\t\t\tthis.setState(E2EEState.READY);\n\t\t\t} else {\n\t\t\t\tawait this.createAndLoadKeys();\n\t\t\t\tthis.setState(E2EEState.READY);\n\t\t\t}\n\t\t\tdispatchToastMessage({ type: 'success', message: t('End_To_End_Encryption_Enabled') });\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ENTER_PASSWORD);\n\t\t\tdispatchToastMessage({ type: 'error', message: t('Your_E2EE_password_is_incorrect') });\n\t\t\tdispatchToastMessage({ type: 'info', message: t('End_To_End_Encryption_Not_Enabled') });\n\t\t\tthrow new Error('E2E -> Error decrypting private key');\n\t\t}\n\t}\n\n\tasync decodePrivateKey(privateKey: string): Promise<string> {\n\t\tconst password = await this.requestPasswordAlert();\n\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tconst [vector, cipherText] = splitVectorAndEcryptedData(EJSON.parse(privateKey));\n\n\t\ttry {\n\t\t\tconst privKey = await decryptAES(vector, masterKey, cipherText);\n\t\t\treturn toString(privKey);\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ENTER_PASSWORD);\n\t\t\tdispatchToastMessage({ type: 'error', message: t('Your_E2EE_password_is_incorrect') });\n\t\t\tdispatchToastMessage({ type: 'info', message: t('End_To_End_Encryption_Not_Enabled') });\n\t\t\tthrow new Error('E2E -> Error decrypting private key');\n\t\t}\n\t}\n\n\tasync decryptFileContent(file: IUploadWithUser): Promise<IUploadWithUser> {\n\t\tif (!file.rid) {\n\t\t\treturn file;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(file.rid);\n\n\t\tif (!e2eRoom) {\n\t\t\treturn file;\n\t\t}\n\n\t\treturn e2eRoom.decryptContent(file);\n\t}\n\n\tasync decryptMessage(message: IMessage | IE2EEMessage): Promise<IMessage> {\n\t\tif (!isE2EEMessage(message) || message.e2e === 'done') {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(message.rid);\n\n\t\tif (!e2eRoom) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst decryptedMessage: IE2EEMessage = await e2eRoom.decryptMessage(message);\n\n\t\tconst decryptedMessageWithQuote = await this.parseQuoteAttachment(decryptedMessage);\n\n\t\treturn decryptedMessageWithQuote;\n\t}\n\n\tasync decryptPinnedMessage(message: IMessage) {\n\t\tconst pinnedMessage = message?.attachments?.[0]?.text;\n\n\t\tif (!pinnedMessage) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(message.rid);\n\n\t\tif (!e2eRoom) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst data = await e2eRoom.decrypt(pinnedMessage);\n\n\t\tif (!data) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst decryptedPinnedMessage = { ...message } as IMessage & { attachments: MessageAttachment[] };\n\t\tdecryptedPinnedMessage.attachments[0].text = data.text;\n\n\t\treturn decryptedPinnedMessage;\n\t}\n\n\tasync decryptPendingMessages(): Promise<void> {\n\t\treturn Messages.find({ t: 'e2e', e2e: 'pending' }).forEach(async ({ _id, ...msg }: IMessage) => {\n\t\t\tMessages.update({ _id }, await this.decryptMessage(msg as IE2EEMessage));\n\t\t});\n\t}\n\n\tasync decryptSubscription(subscriptionId: ISubscription['_id']): Promise<void> {\n\t\tconst e2eRoom = await this.getInstanceByRoomId(subscriptionId);\n\t\tthis.log('decryptSubscription ->', subscriptionId);\n\t\tawait e2eRoom?.decryptSubscription();\n\t}\n\n\tasync decryptSubscriptions(): Promise<void> {\n\t\tSubscriptions.find({\n\t\t\tencrypted: true,\n\t\t}).forEach((subscription) => this.decryptSubscription(subscription._id));\n\t}\n\n\topenAlert(config: Omit<LegacyBannerPayload, 'id'>): void {\n\t\tbanners.open({ id: 'e2e', ...config });\n\t}\n\n\tcloseAlert(): void {\n\t\tbanners.closeById('e2e');\n\t}\n\n\tasync parseQuoteAttachment(message: IE2EEMessage): Promise<IE2EEMessage> {\n\t\tif (!message?.msg) {\n\t\t\treturn message;\n\t\t}\n\t\tconst urls = message.msg.match(getMessageUrlRegex()) || [];\n\n\t\tawait Promise.all(\n\t\t\turls.map(async (url) => {\n\t\t\t\tif (!url.includes(settings.get('Site_Url'))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst urlObj = URL.parse(url);\n\t\t\t\t// if the URL doesn't have query params (doesn't reference message) skip\n\t\t\t\tif (!urlObj.query) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { msg: msgId } = QueryString.parse(urlObj.query);\n\n\t\t\t\tif (!msgId || Array.isArray(msgId)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst getQuotedMessage = await sdk.rest.get('/v1/chat.getMessage', { msgId });\n\t\t\t\tconst quotedMessage = getQuotedMessage?.message;\n\n\t\t\t\tif (!quotedMessage) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst decryptedQuoteMessage = await this.decryptMessage(mapMessageFromApi(quotedMessage));\n\n\t\t\t\tmessage.attachments = message.attachments || [];\n\n\t\t\t\tconst useRealName = settings.get('UI_Use_Real_Name');\n\t\t\t\tconst quoteAttachment = createQuoteAttachment(\n\t\t\t\t\tdecryptedQuoteMessage,\n\t\t\t\t\turl,\n\t\t\t\t\tuseRealName,\n\t\t\t\t\tgetUserAvatarURL(decryptedQuoteMessage.u.username || '') as string,\n\t\t\t\t);\n\n\t\t\t\tmessage.attachments.push(quoteAttachment);\n\t\t\t}),\n\t\t);\n\n\t\treturn message;\n\t}\n\n\tasync getSuggestedE2EEKeys(usersWaitingForE2EKeys: Record<IRoom['_id'], { _id: IUser['_id']; public_key: string }[]>) {\n\t\tconst roomIds = Object.keys(usersWaitingForE2EKeys);\n\t\treturn Object.fromEntries(\n\t\t\t(\n\t\t\t\tawait Promise.all(\n\t\t\t\t\troomIds.map(async (room) => {\n\t\t\t\t\t\tconst e2eRoom = await this.getInstanceByRoomId(room);\n\n\t\t\t\t\t\tif (!e2eRoom) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst usersWithKeys = await e2eRoom.encryptGroupKeyForParticipantsWaitingForTheKeys(usersWaitingForE2EKeys[room]);\n\n\t\t\t\t\t\tif (!usersWithKeys) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [room, usersWithKeys];\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t).filter(isTruthy),\n\t\t);\n\t}\n\n\tasync getSample(roomIds: string[], limit = 3): Promise<string[]> {\n\t\tif (limit === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst randomRoomIds = _.sampleSize(roomIds, ROOM_KEY_EXCHANGE_SIZE);\n\n\t\tconst sampleIds: string[] = [];\n\t\tfor await (const roomId of randomRoomIds) {\n\t\t\tconst e2eroom = await this.getInstanceByRoomId(roomId);\n\t\t\tif (!e2eroom?.hasSessionKey()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsampleIds.push(roomId);\n\t\t}\n\n\t\tif (!sampleIds.length) {\n\t\t\treturn this.getSample(roomIds, limit - 1);\n\t\t}\n\n\t\treturn sampleIds;\n\t}\n\n\tasync initiateKeyDistribution() {\n\t\tif (this.keyDistributionInterval) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst keyDistribution = async () => {\n\t\t\tconst roomIds = ChatRoom.find({\n\t\t\t\t'usersWaitingForE2EKeys': { $exists: true },\n\t\t\t\t'usersWaitingForE2EKeys.userId': { $ne: Meteor.userId() },\n\t\t\t}).map((room) => room._id);\n\t\t\tif (!roomIds.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prevent function from running and doing nothing when theres something to do\n\t\t\tconst sampleIds = await this.getSample(roomIds);\n\n\t\t\tif (!sampleIds.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { usersWaitingForE2EKeys = {} } = await sdk.rest.get('/v1/e2e.fetchUsersWaitingForGroupKey', { roomIds: sampleIds });\n\n\t\t\tif (!Object.keys(usersWaitingForE2EKeys).length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userKeysWithRooms = await this.getSuggestedE2EEKeys(usersWaitingForE2EKeys);\n\n\t\t\tif (!Object.keys(userKeysWithRooms).length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait sdk.rest.post('/v1/e2e.provideUsersSuggestedGroupKeys', { usersSuggestedGroupKeys: userKeysWithRooms });\n\t\t\t} catch (error) {\n\t\t\t\treturn this.error('Error providing group key to users: ', error);\n\t\t\t}\n\t\t};\n\n\t\t// Run first call right away, then schedule for 10s in the future\n\t\tawait keyDistribution();\n\t\tthis.keyDistributionInterval = setInterval(keyDistribution, 10000);\n\t}\n}\n\nexport const e2e = new E2E();\n"]}}},"code":"var _excluded = [\"_id\"];\nvar _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 0);\nvar _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 1);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 2);\nvar _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 3);\nvar _inheritsLoose;\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 4);\nvar _asyncIterator;\nmodule.link(\"@babel/runtime/helpers/asyncIterator\", {\n  default: function (v) {\n    _asyncIterator = v;\n  }\n}, 5);\nmodule.export({\n  e2e: function () {\n    return e2e;\n  }\n});\nvar QueryString;\nmodule.link(\"querystring\", {\n  \"default\": function (v) {\n    QueryString = v;\n  }\n}, 0);\nvar URL;\nmodule.link(\"url\", {\n  \"default\": function (v) {\n    URL = v;\n  }\n}, 1);\nvar isE2EEMessage;\nmodule.link(\"@rocket.chat/core-typings\", {\n  isE2EEMessage: function (v) {\n    isE2EEMessage = v;\n  }\n}, 2);\nvar Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter: function (v) {\n    Emitter = v;\n  }\n}, 3);\nvar EJSON;\nmodule.link(\"ejson\", {\n  \"default\": function (v) {\n    EJSON = v;\n  }\n}, 4);\nvar _;\nmodule.link(\"lodash\", {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 5);\nvar Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 6);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 7);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 8);\nvar banners;\nmodule.link(\"../../../client/lib/banners\", {\n  \"*\": function (v) {\n    banners = v;\n  }\n}, 9);\nvar imperativeModal;\nmodule.link(\"../../../client/lib/imperativeModal\", {\n  imperativeModal: function (v) {\n    imperativeModal = v;\n  }\n}, 10);\nvar dispatchToastMessage;\nmodule.link(\"../../../client/lib/toast\", {\n  dispatchToastMessage: function (v) {\n    dispatchToastMessage = v;\n  }\n}, 11);\nvar mapMessageFromApi;\nmodule.link(\"../../../client/lib/utils/mapMessageFromApi\", {\n  mapMessageFromApi: function (v) {\n    mapMessageFromApi = v;\n  }\n}, 12);\nvar waitUntilFind;\nmodule.link(\"../../../client/lib/utils/waitUntilFind\", {\n  waitUntilFind: function (v) {\n    waitUntilFind = v;\n  }\n}, 13);\nvar EnterE2EPasswordModal;\nmodule.link(\"../../../client/views/e2e/EnterE2EPasswordModal\", {\n  \"default\": function (v) {\n    EnterE2EPasswordModal = v;\n  }\n}, 14);\nvar SaveE2EPasswordModal;\nmodule.link(\"../../../client/views/e2e/SaveE2EPasswordModal\", {\n  \"default\": function (v) {\n    SaveE2EPasswordModal = v;\n  }\n}, 15);\nvar createQuoteAttachment;\nmodule.link(\"../../../lib/createQuoteAttachment\", {\n  createQuoteAttachment: function (v) {\n    createQuoteAttachment = v;\n  }\n}, 16);\nvar getMessageUrlRegex;\nmodule.link(\"../../../lib/getMessageUrlRegex\", {\n  getMessageUrlRegex: function (v) {\n    getMessageUrlRegex = v;\n  }\n}, 17);\nvar isTruthy;\nmodule.link(\"../../../lib/isTruthy\", {\n  isTruthy: function (v) {\n    isTruthy = v;\n  }\n}, 18);\nvar ChatRoom, Subscriptions, Messages;\nmodule.link(\"../../models/client\", {\n  ChatRoom: function (v) {\n    ChatRoom = v;\n  },\n  Subscriptions: function (v) {\n    Subscriptions = v;\n  },\n  Messages: function (v) {\n    Messages = v;\n  }\n}, 19);\nvar settings;\nmodule.link(\"../../settings/client\", {\n  settings: function (v) {\n    settings = v;\n  }\n}, 20);\nvar getUserAvatarURL;\nmodule.link(\"../../utils/client\", {\n  getUserAvatarURL: function (v) {\n    getUserAvatarURL = v;\n  }\n}, 21);\nvar sdk;\nmodule.link(\"../../utils/client/lib/SDKClient\", {\n  sdk: function (v) {\n    sdk = v;\n  }\n}, 22);\nvar t;\nmodule.link(\"../../utils/lib/i18n\", {\n  t: function (v) {\n    t = v;\n  }\n}, 23);\nvar E2EEState;\nmodule.link(\"./E2EEState\", {\n  E2EEState: function (v) {\n    E2EEState = v;\n  }\n}, 24);\nvar toString, toArrayBuffer, joinVectorAndEcryptedData, splitVectorAndEcryptedData, encryptAES, decryptAES, generateRSAKey, exportJWKKey, importRSAKey, importRawKey, deriveKey, generateMnemonicPhrase;\nmodule.link(\"./helper\", {\n  toString: function (v) {\n    toString = v;\n  },\n  toArrayBuffer: function (v) {\n    toArrayBuffer = v;\n  },\n  joinVectorAndEcryptedData: function (v) {\n    joinVectorAndEcryptedData = v;\n  },\n  splitVectorAndEcryptedData: function (v) {\n    splitVectorAndEcryptedData = v;\n  },\n  encryptAES: function (v) {\n    encryptAES = v;\n  },\n  decryptAES: function (v) {\n    decryptAES = v;\n  },\n  generateRSAKey: function (v) {\n    generateRSAKey = v;\n  },\n  exportJWKKey: function (v) {\n    exportJWKKey = v;\n  },\n  importRSAKey: function (v) {\n    importRSAKey = v;\n  },\n  importRawKey: function (v) {\n    importRawKey = v;\n  },\n  deriveKey: function (v) {\n    deriveKey = v;\n  },\n  generateMnemonicPhrase: function (v) {\n    generateMnemonicPhrase = v;\n  }\n}, 25);\nvar _log, logError;\nmodule.link(\"./logger\", {\n  log: function (v) {\n    _log = v;\n  },\n  logError: function (v) {\n    logError = v;\n  }\n}, 26);\nvar E2ERoom;\nmodule.link(\"./rocketchat.e2e.room\", {\n  E2ERoom: function (v) {\n    E2ERoom = v;\n  }\n}, 27);\nmodule.link(\"./events\");\nvar failedToDecodeKey = false;\nvar ROOM_KEY_EXCHANGE_SIZE = 10;\nvar E2EEStateDependency = new Tracker.Dependency();\nvar E2E = /*#__PURE__*/function (_Emitter) {\n  function E2E() {\n    var _this;\n    _this = _Emitter.call(this) || this;\n    _this.started = void 0;\n    _this.instancesByRoomId = void 0;\n    _this.db_public_key = void 0;\n    _this.db_private_key = void 0;\n    _this.privateKey = void 0;\n    _this.publicKey = void 0;\n    _this.keyDistributionInterval = void 0;\n    _this.state = void 0;\n    _this.observable = void 0;\n    _this.started = false;\n    _this.instancesByRoomId = {};\n    _this.keyDistributionInterval = null;\n    _this.observable = undefined;\n    _this.on('E2E_STATE_CHANGED', function (_ref) {\n      var prevState = _ref.prevState,\n        nextState = _ref.nextState;\n      _this.log(prevState + \" -> \" + nextState);\n    });\n    _this.on(E2EEState.READY, function () {\n      function _callee() {\n        return _regeneratorRuntime.async(function () {\n          function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(_this.onE2EEReady());\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n          return _callee$;\n        }(), null, null, null, Promise);\n      }\n      return _callee;\n    }());\n    _this.on(E2EEState.SAVE_PASSWORD, function () {\n      function _callee2() {\n        return _regeneratorRuntime.async(function () {\n          function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(_this.onE2EEReady());\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n          return _callee2$;\n        }(), null, null, null, Promise);\n      }\n      return _callee2;\n    }());\n    _this.on(E2EEState.DISABLED, function () {\n      var _this$observable;\n      (_this$observable = _this.observable) === null || _this$observable === void 0 ? void 0 : _this$observable.stop();\n    });\n    _this.on(E2EEState.NOT_STARTED, function () {\n      var _this$observable2;\n      (_this$observable2 = _this.observable) === null || _this$observable2 === void 0 ? void 0 : _this$observable2.stop();\n    });\n    _this.on(E2EEState.ERROR, function () {\n      var _this$observable3;\n      (_this$observable3 = _this.observable) === null || _this$observable3 === void 0 ? void 0 : _this$observable3.stop();\n    });\n    _this.setState(E2EEState.NOT_STARTED);\n    return _this;\n  }\n  _inheritsLoose(E2E, _Emitter);\n  var _proto = E2E.prototype;\n  _proto.log = function () {\n    function log() {\n      for (var _len = arguments.length, msg = new Array(_len), _key = 0; _key < _len; _key++) {\n        msg[_key] = arguments[_key];\n      }\n      _log.apply(void 0, ['E2E'].concat(msg));\n    }\n    return log;\n  }();\n  _proto.error = function () {\n    function error() {\n      for (var _len2 = arguments.length, msg = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        msg[_key2] = arguments[_key2];\n      }\n      logError.apply(void 0, ['E2E'].concat(msg));\n    }\n    return error;\n  }();\n  _proto.getState = function () {\n    function getState() {\n      return this.state;\n    }\n    return getState;\n  }();\n  _proto.isEnabled = function () {\n    function isEnabled() {\n      return this.state !== E2EEState.DISABLED;\n    }\n    return isEnabled;\n  }();\n  _proto.isReady = function () {\n    function isReady() {\n      E2EEStateDependency.depend();\n      // Save_Password state is also a ready state for E2EE\n      return this.state === E2EEState.READY || this.state === E2EEState.SAVE_PASSWORD;\n    }\n    return isReady;\n  }();\n  _proto.onE2EEReady = function () {\n    function onE2EEReady() {\n      return _regeneratorRuntime.async(function () {\n        function onE2EEReady$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              this.log('startClient -> Done');\n              this.initiateHandshake();\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(this.handleAsyncE2EESuggestedKey());\n            case 4:\n              this.log('decryptSubscriptions');\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(this.decryptSubscriptions());\n            case 7:\n              this.log('decryptSubscriptions -> Done');\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(this.initiateKeyDistribution());\n            case 10:\n              this.log('initiateKeyDistribution -> Done');\n              this.observeSubscriptions();\n              this.log('observing subscriptions');\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n        return onE2EEReady$;\n      }(), null, this, null, Promise);\n    }\n    return onE2EEReady;\n  }();\n  _proto.onSubscriptionChanged = function () {\n    function onSubscriptionChanged(sub) {\n      var e2eRoom;\n      return _regeneratorRuntime.async(function () {\n        function onSubscriptionChanged$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              this.log('Subscription changed', sub);\n              if (!(!sub.encrypted && !sub.E2EKey)) {\n                _context4.next = 4;\n                break;\n              }\n              this.removeInstanceByRoomId(sub.rid);\n              return _context4.abrupt(\"return\");\n            case 4:\n              _context4.next = 6;\n              return _regeneratorRuntime.awrap(this.getInstanceByRoomId(sub.rid));\n            case 6:\n              e2eRoom = _context4.sent;\n              if (e2eRoom) {\n                _context4.next = 9;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 9:\n              if (!sub.E2ESuggestedKey) {\n                _context4.next = 21;\n                break;\n              }\n              _context4.next = 12;\n              return _regeneratorRuntime.awrap(e2eRoom.importGroupKey(sub.E2ESuggestedKey));\n            case 12:\n              if (!_context4.sent) {\n                _context4.next = 18;\n                break;\n              }\n              _context4.next = 15;\n              return _regeneratorRuntime.awrap(this.acceptSuggestedKey(sub.rid));\n            case 15:\n              e2eRoom.keyReceived();\n              _context4.next = 21;\n              break;\n            case 18:\n              console.warn('Invalid E2ESuggestedKey, rejecting', sub.E2ESuggestedKey);\n              _context4.next = 21;\n              return _regeneratorRuntime.awrap(this.rejectSuggestedKey(sub.rid));\n            case 21:\n              sub.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n              // Cover private groups and direct messages\n              if (e2eRoom.isSupportedRoomType(sub.t)) {\n                _context4.next = 25;\n                break;\n              }\n              e2eRoom.disable();\n              return _context4.abrupt(\"return\");\n            case 25:\n              if (!(sub.E2EKey && e2eRoom.isWaitingKeys())) {\n                _context4.next = 28;\n                break;\n              }\n              e2eRoom.keyReceived();\n              return _context4.abrupt(\"return\");\n            case 28:\n              if (e2eRoom.isReady()) {\n                _context4.next = 30;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 30:\n              _context4.next = 32;\n              return _regeneratorRuntime.awrap(e2eRoom.decryptSubscription());\n            case 32:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n        return onSubscriptionChanged$;\n      }(), null, this, null, Promise);\n    }\n    return onSubscriptionChanged;\n  }();\n  _proto.observeSubscriptions = function () {\n    function observeSubscriptions() {\n      var _this$observable4,\n        _this2 = this;\n      (_this$observable4 = this.observable) === null || _this$observable4 === void 0 ? void 0 : _this$observable4.stop();\n      this.observable = Subscriptions.find().observe({\n        changed: function (sub) {\n          setTimeout(function () {\n            return _this2.onSubscriptionChanged(sub);\n          }, 0);\n        },\n        added: function (sub) {\n          setTimeout(function () {\n            function _callee3() {\n              return _regeneratorRuntime.async(function () {\n                function _callee3$(_context5) {\n                  while (1) switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _this2.log('Subscription added', sub);\n                      if (!(!sub.encrypted && !sub.E2EKey)) {\n                        _context5.next = 3;\n                        break;\n                      }\n                      return _context5.abrupt(\"return\");\n                    case 3:\n                      return _context5.abrupt(\"return\", _this2.getInstanceByRoomId(sub.rid));\n                    case 4:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n                return _callee3$;\n              }(), null, null, null, Promise);\n            }\n            return _callee3;\n          }(), 0);\n        },\n        removed: function (sub) {\n          _this2.log('Subscription removed', sub);\n          _this2.removeInstanceByRoomId(sub.rid);\n        }\n      });\n    }\n    return observeSubscriptions;\n  }();\n  _proto.shouldAskForE2EEPassword = function () {\n    function shouldAskForE2EEPassword() {\n      var _this$getKeysFromLoca = this.getKeysFromLocalStorage(),\n        private_key = _this$getKeysFromLoca.private_key;\n      return this.db_private_key && !private_key;\n    }\n    return shouldAskForE2EEPassword;\n  }();\n  _proto.setState = function () {\n    function setState(nextState) {\n      var prevState = this.state;\n      this.state = nextState;\n      E2EEStateDependency.changed();\n      this.emit('E2E_STATE_CHANGED', {\n        prevState: prevState,\n        nextState: nextState\n      });\n      this.emit(nextState);\n    }\n    return setState;\n  }();\n  _proto.handleAsyncE2EESuggestedKey = function () {\n    function handleAsyncE2EESuggestedKey() {\n      var _this3 = this;\n      var subs;\n      return _regeneratorRuntime.async(function () {\n        function handleAsyncE2EESuggestedKey$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              subs = Subscriptions.find({\n                E2ESuggestedKey: {\n                  $exists: true\n                }\n              }).fetch();\n              _context7.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all(subs.filter(function (sub) {\n                return sub.E2ESuggestedKey && !sub.E2EKey;\n              }).map(function () {\n                function _callee4(sub) {\n                  var e2eRoom;\n                  return _regeneratorRuntime.async(function () {\n                    function _callee4$(_context6) {\n                      while (1) switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.next = 2;\n                          return _regeneratorRuntime.awrap(e2e.getInstanceByRoomId(sub.rid));\n                        case 2:\n                          e2eRoom = _context6.sent;\n                          if (e2eRoom) {\n                            _context6.next = 5;\n                            break;\n                          }\n                          return _context6.abrupt(\"return\");\n                        case 5:\n                          _context6.next = 7;\n                          return _regeneratorRuntime.awrap(e2eRoom.importGroupKey(sub.E2ESuggestedKey));\n                        case 7:\n                          if (!_context6.sent) {\n                            _context6.next = 14;\n                            break;\n                          }\n                          _this3.log('Imported valid E2E suggested key');\n                          _context6.next = 11;\n                          return _regeneratorRuntime.awrap(e2e.acceptSuggestedKey(sub.rid));\n                        case 11:\n                          e2eRoom.keyReceived();\n                          _context6.next = 17;\n                          break;\n                        case 14:\n                          _this3.error('Invalid E2ESuggestedKey, rejecting', sub.E2ESuggestedKey);\n                          _context6.next = 17;\n                          return _regeneratorRuntime.awrap(e2e.rejectSuggestedKey(sub.rid));\n                        case 17:\n                          sub.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n                        case 18:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                    return _callee4$;\n                  }(), null, null, null, Promise);\n                }\n                return _callee4;\n              }())));\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n        return handleAsyncE2EESuggestedKey$;\n      }(), null, null, null, Promise);\n    }\n    return handleAsyncE2EESuggestedKey;\n  }();\n  _proto.getInstanceByRoomId = function () {\n    function getInstanceByRoomId(rid) {\n      var room;\n      return _regeneratorRuntime.async(function () {\n        function getInstanceByRoomId$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _regeneratorRuntime.awrap(waitUntilFind(function () {\n                return ChatRoom.findOne({\n                  _id: rid\n                });\n              }));\n            case 2:\n              room = _context8.sent;\n              if (!(room.t !== 'd' && room.t !== 'p')) {\n                _context8.next = 5;\n                break;\n              }\n              return _context8.abrupt(\"return\", null);\n            case 5:\n              if (room.encrypted) {\n                _context8.next = 7;\n                break;\n              }\n              return _context8.abrupt(\"return\", null);\n            case 7:\n              if (!this.instancesByRoomId[rid]) {\n                this.instancesByRoomId[rid] = new E2ERoom(Meteor.userId(), room);\n              }\n              // When the key was already set and is changed via an update, we update the room instance\n              if (this.instancesByRoomId[rid].keyID !== undefined && room.e2eKeyId !== undefined && this.instancesByRoomId[rid].keyID !== room.e2eKeyId) {\n                // KeyID was changed, update instance with new keyID and put room in waiting keys status\n                this.instancesByRoomId[rid].onRoomKeyReset(room.e2eKeyId);\n              }\n              return _context8.abrupt(\"return\", this.instancesByRoomId[rid]);\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n        return getInstanceByRoomId$;\n      }(), null, this, null, Promise);\n    }\n    return getInstanceByRoomId;\n  }();\n  _proto.removeInstanceByRoomId = function () {\n    function removeInstanceByRoomId(rid) {\n      delete this.instancesByRoomId[rid];\n    }\n    return removeInstanceByRoomId;\n  }();\n  _proto.persistKeys = function () {\n    function persistKeys(_ref2, password) {\n      var public_key,\n        private_key,\n        _ref3,\n        force,\n        encodedPrivateKey,\n        _args9 = arguments;\n      return _regeneratorRuntime.async(function () {\n        function persistKeys$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              public_key = _ref2.public_key, private_key = _ref2.private_key;\n              _ref3 = _args9.length > 2 && _args9[2] !== undefined ? _args9[2] : {\n                force: false\n              }, force = _ref3.force;\n              if (!(typeof public_key !== 'string' || typeof private_key !== 'string')) {\n                _context9.next = 4;\n                break;\n              }\n              throw new Error('Failed to persist keys as they are not strings.');\n            case 4:\n              _context9.next = 6;\n              return _regeneratorRuntime.awrap(this.encodePrivateKey(private_key, password));\n            case 6:\n              encodedPrivateKey = _context9.sent;\n              if (encodedPrivateKey) {\n                _context9.next = 9;\n                break;\n              }\n              throw new Error('Failed to encode private key with provided password.');\n            case 9:\n              _context9.next = 11;\n              return _regeneratorRuntime.awrap(sdk.rest.post('/v1/e2e.setUserPublicAndPrivateKeys', {\n                public_key: public_key,\n                private_key: encodedPrivateKey,\n                force: force\n              }));\n            case 11:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n        return persistKeys$;\n      }(), null, this, null, Promise);\n    }\n    return persistKeys;\n  }();\n  _proto.acceptSuggestedKey = function () {\n    function acceptSuggestedKey(rid) {\n      return _regeneratorRuntime.async(function () {\n        function acceptSuggestedKey$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return _regeneratorRuntime.awrap(sdk.rest.post('/v1/e2e.acceptSuggestedGroupKey', {\n                rid: rid\n              }));\n            case 2:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n        return acceptSuggestedKey$;\n      }(), null, null, null, Promise);\n    }\n    return acceptSuggestedKey;\n  }();\n  _proto.rejectSuggestedKey = function () {\n    function rejectSuggestedKey(rid) {\n      return _regeneratorRuntime.async(function () {\n        function rejectSuggestedKey$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return _regeneratorRuntime.awrap(sdk.rest.post('/v1/e2e.rejectSuggestedGroupKey', {\n                rid: rid\n              }));\n            case 2:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n        return rejectSuggestedKey$;\n      }(), null, null, null, Promise);\n    }\n    return rejectSuggestedKey;\n  }();\n  _proto.getKeysFromLocalStorage = function () {\n    function getKeysFromLocalStorage() {\n      return {\n        public_key: Accounts.storageLocation.getItem('public_key'),\n        private_key: Accounts.storageLocation.getItem('private_key')\n      };\n    }\n    return getKeysFromLocalStorage;\n  }();\n  _proto.initiateHandshake = function () {\n    function initiateHandshake() {\n      var _this4 = this;\n      Object.keys(this.instancesByRoomId).map(function (key) {\n        return _this4.instancesByRoomId[key].handshake();\n      });\n    }\n    return initiateHandshake;\n  }();\n  _proto.openSaveE2EEPasswordModal = function () {\n    function openSaveE2EEPasswordModal(randomPassword) {\n      var _this5 = this;\n      imperativeModal.open({\n        component: SaveE2EPasswordModal,\n        props: {\n          randomPassword: randomPassword,\n          onClose: imperativeModal.close,\n          onCancel: function () {\n            _this5.closeAlert();\n            imperativeModal.close();\n          },\n          onConfirm: function () {\n            Accounts.storageLocation.removeItem('e2e.randomPassword');\n            _this5.setState(E2EEState.READY);\n            dispatchToastMessage({\n              type: 'success',\n              message: t('End_To_End_Encryption_Enabled')\n            });\n            _this5.closeAlert();\n            imperativeModal.close();\n          }\n        }\n      });\n    }\n    return openSaveE2EEPasswordModal;\n  }();\n  _proto.startClient = function () {\n    function startClient() {\n      var _this6 = this;\n      var _this$getKeysFromLoca2, public_key, private_key, randomPassword;\n      return _regeneratorRuntime.async(function () {\n        function startClient$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              if (!this.started) {\n                _context13.next = 2;\n                break;\n              }\n              return _context13.abrupt(\"return\");\n            case 2:\n              this.log('startClient -> STARTED');\n              this.started = true;\n              _this$getKeysFromLoca2 = this.getKeysFromLocalStorage(), public_key = _this$getKeysFromLoca2.public_key, private_key = _this$getKeysFromLoca2.private_key;\n              _context13.next = 7;\n              return _regeneratorRuntime.awrap(this.loadKeysFromDB());\n            case 7:\n              if (!public_key && this.db_public_key) {\n                public_key = this.db_public_key;\n              }\n              if (!this.shouldAskForE2EEPassword()) {\n                _context13.next = 22;\n                break;\n              }\n              _context13.prev = 9;\n              this.setState(E2EEState.ENTER_PASSWORD);\n              _context13.next = 13;\n              return _regeneratorRuntime.awrap(this.decodePrivateKey(this.db_private_key));\n            case 13:\n              private_key = _context13.sent;\n              _context13.next = 22;\n              break;\n            case 16:\n              _context13.prev = 16;\n              _context13.t0 = _context13[\"catch\"](9);\n              this.started = false;\n              failedToDecodeKey = true;\n              this.openAlert({\n                title: \"Wasn't possible to decode your encryption key to be imported.\",\n                // TODO: missing translation\n                html: '<div>Your encryption password seems wrong. Click here to try again.</div>',\n                // TODO: missing translation\n                modifiers: ['large', 'danger'],\n                closable: true,\n                icon: 'key',\n                action: function () {\n                  function _callee5() {\n                    return _regeneratorRuntime.async(function () {\n                      function _callee5$(_context12) {\n                        while (1) switch (_context12.prev = _context12.next) {\n                          case 0:\n                            _context12.next = 2;\n                            return _regeneratorRuntime.awrap(_this6.startClient());\n                          case 2:\n                            _this6.closeAlert();\n                          case 3:\n                          case \"end\":\n                            return _context12.stop();\n                        }\n                      }\n                      return _callee5$;\n                    }(), null, null, null, Promise);\n                  }\n                  return _callee5;\n                }()\n              });\n              return _context13.abrupt(\"return\");\n            case 22:\n              if (!(public_key && private_key)) {\n                _context13.next = 28;\n                break;\n              }\n              _context13.next = 25;\n              return _regeneratorRuntime.awrap(this.loadKeys({\n                public_key: public_key,\n                private_key: private_key\n              }));\n            case 25:\n              this.setState(E2EEState.READY);\n              _context13.next = 31;\n              break;\n            case 28:\n              _context13.next = 30;\n              return _regeneratorRuntime.awrap(this.createAndLoadKeys());\n            case 30:\n              this.setState(E2EEState.READY);\n            case 31:\n              if (!(!this.db_public_key || !this.db_private_key)) {\n                _context13.next = 42;\n                break;\n              }\n              this.setState(E2EEState.LOADING_KEYS);\n              _context13.t1 = _regeneratorRuntime;\n              _context13.t2 = this;\n              _context13.t3 = this.getKeysFromLocalStorage();\n              _context13.next = 38;\n              return _regeneratorRuntime.awrap(this.createRandomPassword());\n            case 38:\n              _context13.t4 = _context13.sent;\n              _context13.t5 = _context13.t2.persistKeys.call(_context13.t2, _context13.t3, _context13.t4);\n              _context13.next = 42;\n              return _context13.t1.awrap.call(_context13.t1, _context13.t5);\n            case 42:\n              randomPassword = Accounts.storageLocation.getItem('e2e.randomPassword');\n              if (randomPassword) {\n                this.setState(E2EEState.SAVE_PASSWORD);\n                this.openAlert({\n                  title: function () {\n                    return t('Save_your_encryption_password');\n                  },\n                  html: function () {\n                    return t('Click_here_to_view_and_copy_your_password');\n                  },\n                  modifiers: ['large'],\n                  closable: false,\n                  icon: 'key',\n                  action: function () {\n                    return _this6.openSaveE2EEPasswordModal(randomPassword);\n                  }\n                });\n              }\n            case 44:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n        return startClient$;\n      }(), null, this, [[9, 16]], Promise);\n    }\n    return startClient;\n  }();\n  _proto.stopClient = function () {\n    function stopClient() {\n      return _regeneratorRuntime.async(function () {\n        function stopClient$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              this.log('-> Stop Client');\n              this.closeAlert();\n              Accounts.storageLocation.removeItem('public_key');\n              Accounts.storageLocation.removeItem('private_key');\n              this.instancesByRoomId = {};\n              this.privateKey = undefined;\n              this.publicKey = undefined;\n              this.started = false;\n              this.keyDistributionInterval && clearInterval(this.keyDistributionInterval);\n              this.keyDistributionInterval = null;\n              this.setState(E2EEState.DISABLED);\n            case 11:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n        return stopClient$;\n      }(), null, this, null, Promise);\n    }\n    return stopClient;\n  }();\n  _proto.changePassword = function () {\n    function changePassword(newPassword) {\n      return _regeneratorRuntime.async(function () {\n        function changePassword$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return _regeneratorRuntime.awrap(this.persistKeys(this.getKeysFromLocalStorage(), newPassword, {\n                force: true\n              }));\n            case 2:\n              if (Accounts.storageLocation.getItem('e2e.randomPassword')) {\n                Accounts.storageLocation.setItem('e2e.randomPassword', newPassword);\n              }\n            case 3:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n        return changePassword$;\n      }(), null, this, null, Promise);\n    }\n    return changePassword;\n  }();\n  _proto.loadKeysFromDB = function () {\n    function loadKeysFromDB() {\n      var _await$sdk$rest$get, public_key, private_key;\n      return _regeneratorRuntime.async(function () {\n        function loadKeysFromDB$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              this.setState(E2EEState.LOADING_KEYS);\n              _context16.next = 4;\n              return _regeneratorRuntime.awrap(sdk.rest.get('/v1/e2e.fetchMyKeys'));\n            case 4:\n              _await$sdk$rest$get = _context16.sent;\n              public_key = _await$sdk$rest$get.public_key;\n              private_key = _await$sdk$rest$get.private_key;\n              this.db_public_key = public_key;\n              this.db_private_key = private_key;\n              _context16.next = 16;\n              break;\n            case 11:\n              _context16.prev = 11;\n              _context16.t0 = _context16[\"catch\"](0);\n              this.setState(E2EEState.ERROR);\n              this.error('Error fetching RSA keys: ', _context16.t0);\n              // Stop any process since we can't communicate with the server\n              // to get the keys. This prevents new key generation\n              throw _context16.t0;\n            case 16:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n        return loadKeysFromDB$;\n      }(), null, this, [[0, 11]], Promise);\n    }\n    return loadKeysFromDB;\n  }();\n  _proto.loadKeys = function () {\n    function loadKeys(_ref4) {\n      var public_key, private_key;\n      return _regeneratorRuntime.async(function () {\n        function loadKeys$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              public_key = _ref4.public_key, private_key = _ref4.private_key;\n              Accounts.storageLocation.setItem('public_key', public_key);\n              this.publicKey = public_key;\n              _context17.prev = 3;\n              _context17.next = 6;\n              return _regeneratorRuntime.awrap(importRSAKey(EJSON.parse(private_key), ['decrypt']));\n            case 6:\n              this.privateKey = _context17.sent;\n              Accounts.storageLocation.setItem('private_key', private_key);\n              _context17.next = 14;\n              break;\n            case 10:\n              _context17.prev = 10;\n              _context17.t0 = _context17[\"catch\"](3);\n              this.setState(E2EEState.ERROR);\n              return _context17.abrupt(\"return\", this.error('Error importing private key: ', _context17.t0));\n            case 14:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n        return loadKeys$;\n      }(), null, this, [[3, 10]], Promise);\n    }\n    return loadKeys;\n  }();\n  _proto.createAndLoadKeys = function () {\n    function createAndLoadKeys() {\n      var key, publicKey, privateKey;\n      return _regeneratorRuntime.async(function () {\n        function createAndLoadKeys$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              // Could not obtain public-private keypair from server.\n              this.setState(E2EEState.LOADING_KEYS);\n              _context18.prev = 1;\n              _context18.next = 4;\n              return _regeneratorRuntime.awrap(generateRSAKey());\n            case 4:\n              key = _context18.sent;\n              this.privateKey = key.privateKey;\n              _context18.next = 12;\n              break;\n            case 8:\n              _context18.prev = 8;\n              _context18.t0 = _context18[\"catch\"](1);\n              this.setState(E2EEState.ERROR);\n              return _context18.abrupt(\"return\", this.error('Error generating key: ', _context18.t0));\n            case 12:\n              _context18.prev = 12;\n              _context18.next = 15;\n              return _regeneratorRuntime.awrap(exportJWKKey(key.publicKey));\n            case 15:\n              publicKey = _context18.sent;\n              this.publicKey = JSON.stringify(publicKey);\n              Accounts.storageLocation.setItem('public_key', JSON.stringify(publicKey));\n              _context18.next = 24;\n              break;\n            case 20:\n              _context18.prev = 20;\n              _context18.t1 = _context18[\"catch\"](12);\n              this.setState(E2EEState.ERROR);\n              return _context18.abrupt(\"return\", this.error('Error exporting public key: ', _context18.t1));\n            case 24:\n              _context18.prev = 24;\n              _context18.next = 27;\n              return _regeneratorRuntime.awrap(exportJWKKey(key.privateKey));\n            case 27:\n              privateKey = _context18.sent;\n              Accounts.storageLocation.setItem('private_key', JSON.stringify(privateKey));\n              _context18.next = 35;\n              break;\n            case 31:\n              _context18.prev = 31;\n              _context18.t2 = _context18[\"catch\"](24);\n              this.setState(E2EEState.ERROR);\n              return _context18.abrupt(\"return\", this.error('Error exporting private key: ', _context18.t2));\n            case 35:\n              _context18.next = 37;\n              return _regeneratorRuntime.awrap(this.requestSubscriptionKeys());\n            case 37:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n        return createAndLoadKeys$;\n      }(), null, this, [[1, 8], [12, 20], [24, 31]], Promise);\n    }\n    return createAndLoadKeys;\n  }();\n  _proto.requestSubscriptionKeys = function () {\n    function requestSubscriptionKeys() {\n      return _regeneratorRuntime.async(function () {\n        function requestSubscriptionKeys$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return _regeneratorRuntime.awrap(sdk.call('e2e.requestSubscriptionKeys'));\n            case 2:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n        return requestSubscriptionKeys$;\n      }(), null, null, null, Promise);\n    }\n    return requestSubscriptionKeys;\n  }();\n  _proto.createRandomPassword = function () {\n    function createRandomPassword() {\n      var randomPassword;\n      return _regeneratorRuntime.async(function () {\n        function createRandomPassword$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.next = 2;\n              return _regeneratorRuntime.awrap(generateMnemonicPhrase(5));\n            case 2:\n              randomPassword = _context20.sent;\n              Accounts.storageLocation.setItem('e2e.randomPassword', randomPassword);\n              return _context20.abrupt(\"return\", randomPassword);\n            case 5:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n        return createRandomPassword$;\n      }(), null, null, null, Promise);\n    }\n    return createRandomPassword;\n  }();\n  _proto.encodePrivateKey = function () {\n    function encodePrivateKey(privateKey, password) {\n      var masterKey, vector, encodedPrivateKey;\n      return _regeneratorRuntime.async(function () {\n        function encodePrivateKey$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.next = 2;\n              return _regeneratorRuntime.awrap(this.getMasterKey(password));\n            case 2:\n              masterKey = _context21.sent;\n              vector = crypto.getRandomValues(new Uint8Array(16));\n              _context21.prev = 4;\n              _context21.next = 7;\n              return _regeneratorRuntime.awrap(encryptAES(vector, masterKey, toArrayBuffer(privateKey)));\n            case 7:\n              encodedPrivateKey = _context21.sent;\n              return _context21.abrupt(\"return\", EJSON.stringify(joinVectorAndEcryptedData(vector, encodedPrivateKey)));\n            case 11:\n              _context21.prev = 11;\n              _context21.t0 = _context21[\"catch\"](4);\n              this.setState(E2EEState.ERROR);\n              return _context21.abrupt(\"return\", this.error('Error encrypting encodedPrivateKey: ', _context21.t0));\n            case 15:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n        return encodePrivateKey$;\n      }(), null, this, [[4, 11]], Promise);\n    }\n    return encodePrivateKey;\n  }();\n  _proto.getMasterKey = function () {\n    function getMasterKey(password) {\n      var baseKey;\n      return _regeneratorRuntime.async(function () {\n        function getMasterKey$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              if (password == null) {\n                alert('You should provide a password');\n              }\n              // First, create a PBKDF2 \"key\" containing the password\n              _context22.prev = 1;\n              _context22.next = 4;\n              return _regeneratorRuntime.awrap(importRawKey(toArrayBuffer(password)));\n            case 4:\n              baseKey = _context22.sent;\n              _context22.next = 11;\n              break;\n            case 7:\n              _context22.prev = 7;\n              _context22.t0 = _context22[\"catch\"](1);\n              this.setState(E2EEState.ERROR);\n              return _context22.abrupt(\"return\", this.error('Error creating a key based on user password: ', _context22.t0));\n            case 11:\n              _context22.prev = 11;\n              _context22.next = 14;\n              return _regeneratorRuntime.awrap(deriveKey(toArrayBuffer(Meteor.userId()), baseKey));\n            case 14:\n              return _context22.abrupt(\"return\", _context22.sent);\n            case 17:\n              _context22.prev = 17;\n              _context22.t1 = _context22[\"catch\"](11);\n              this.setState(E2EEState.ERROR);\n              return _context22.abrupt(\"return\", this.error('Error deriving baseKey: ', _context22.t1));\n            case 21:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n        return getMasterKey$;\n      }(), null, this, [[1, 7], [11, 17]], Promise);\n    }\n    return getMasterKey;\n  }();\n  _proto.openEnterE2EEPasswordModal = function () {\n    function openEnterE2EEPasswordModal(onEnterE2EEPassword) {\n      var _this7 = this;\n      imperativeModal.open({\n        component: EnterE2EPasswordModal,\n        props: {\n          onClose: imperativeModal.close,\n          onCancel: function () {\n            failedToDecodeKey = false;\n            dispatchToastMessage({\n              type: 'info',\n              message: t('End_To_End_Encryption_Not_Enabled')\n            });\n            _this7.closeAlert();\n            imperativeModal.close();\n          },\n          onConfirm: function (password) {\n            onEnterE2EEPassword === null || onEnterE2EEPassword === void 0 ? void 0 : onEnterE2EEPassword(password);\n            _this7.closeAlert();\n            imperativeModal.close();\n          }\n        }\n      });\n    }\n    return openEnterE2EEPasswordModal;\n  }();\n  _proto.requestPasswordAlert = function () {\n    function requestPasswordAlert() {\n      var _this8 = this;\n      return _regeneratorRuntime.async(function () {\n        function requestPasswordAlert$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              return _context23.abrupt(\"return\", new Promise(function (resolve) {\n                var showModal = function () {\n                  return _this8.openEnterE2EEPasswordModal(function (password) {\n                    return resolve(password);\n                  });\n                };\n                var showAlert = function () {\n                  _this8.openAlert({\n                    title: function () {\n                      return t('Enter_your_E2E_password');\n                    },\n                    html: function () {\n                      return t('Click_here_to_enter_your_encryption_password');\n                    },\n                    modifiers: ['large'],\n                    closable: false,\n                    icon: 'key',\n                    action: function () {\n                      showModal();\n                    }\n                  });\n                };\n                if (failedToDecodeKey) {\n                  showModal();\n                } else {\n                  showAlert();\n                }\n              }));\n            case 1:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n        return requestPasswordAlert$;\n      }(), null, null, null, Promise);\n    }\n    return requestPasswordAlert;\n  }();\n  _proto.requestPasswordModal = function () {\n    function requestPasswordModal() {\n      var _this9 = this;\n      return _regeneratorRuntime.async(function () {\n        function requestPasswordModal$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              return _context24.abrupt(\"return\", new Promise(function (resolve) {\n                return _this9.openEnterE2EEPasswordModal(function (password) {\n                  return resolve(password);\n                });\n              }));\n            case 1:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n        return requestPasswordModal$;\n      }(), null, null, null, Promise);\n    }\n    return requestPasswordModal;\n  }();\n  _proto.decodePrivateKeyFlow = function () {\n    function decodePrivateKeyFlow() {\n      var password, masterKey, _splitVectorAndEcrypt, _splitVectorAndEcrypt2, vector, cipherText, privKey, privateKey;\n      return _regeneratorRuntime.async(function () {\n        function decodePrivateKeyFlow$(_context25) {\n          while (1) switch (_context25.prev = _context25.next) {\n            case 0:\n              _context25.next = 2;\n              return _regeneratorRuntime.awrap(this.requestPasswordModal());\n            case 2:\n              password = _context25.sent;\n              _context25.next = 5;\n              return _regeneratorRuntime.awrap(this.getMasterKey(password));\n            case 5:\n              masterKey = _context25.sent;\n              if (this.db_private_key) {\n                _context25.next = 8;\n                break;\n              }\n              return _context25.abrupt(\"return\");\n            case 8:\n              _splitVectorAndEcrypt = splitVectorAndEcryptedData(EJSON.parse(this.db_private_key)), _splitVectorAndEcrypt2 = _slicedToArray(_splitVectorAndEcrypt, 2), vector = _splitVectorAndEcrypt2[0], cipherText = _splitVectorAndEcrypt2[1];\n              _context25.prev = 9;\n              _context25.next = 12;\n              return _regeneratorRuntime.awrap(decryptAES(vector, masterKey, cipherText));\n            case 12:\n              privKey = _context25.sent;\n              privateKey = toString(privKey);\n              if (!(this.db_public_key && privateKey)) {\n                _context25.next = 20;\n                break;\n              }\n              _context25.next = 17;\n              return _regeneratorRuntime.awrap(this.loadKeys({\n                public_key: this.db_public_key,\n                private_key: privateKey\n              }));\n            case 17:\n              this.setState(E2EEState.READY);\n              _context25.next = 23;\n              break;\n            case 20:\n              _context25.next = 22;\n              return _regeneratorRuntime.awrap(this.createAndLoadKeys());\n            case 22:\n              this.setState(E2EEState.READY);\n            case 23:\n              dispatchToastMessage({\n                type: 'success',\n                message: t('End_To_End_Encryption_Enabled')\n              });\n              _context25.next = 32;\n              break;\n            case 26:\n              _context25.prev = 26;\n              _context25.t0 = _context25[\"catch\"](9);\n              this.setState(E2EEState.ENTER_PASSWORD);\n              dispatchToastMessage({\n                type: 'error',\n                message: t('Your_E2EE_password_is_incorrect')\n              });\n              dispatchToastMessage({\n                type: 'info',\n                message: t('End_To_End_Encryption_Not_Enabled')\n              });\n              throw new Error('E2E -> Error decrypting private key');\n            case 32:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n        return decodePrivateKeyFlow$;\n      }(), null, this, [[9, 26]], Promise);\n    }\n    return decodePrivateKeyFlow;\n  }();\n  _proto.decodePrivateKey = function () {\n    function decodePrivateKey(privateKey) {\n      var password, masterKey, _splitVectorAndEcrypt3, _splitVectorAndEcrypt4, vector, cipherText, privKey;\n      return _regeneratorRuntime.async(function () {\n        function decodePrivateKey$(_context26) {\n          while (1) switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.next = 2;\n              return _regeneratorRuntime.awrap(this.requestPasswordAlert());\n            case 2:\n              password = _context26.sent;\n              _context26.next = 5;\n              return _regeneratorRuntime.awrap(this.getMasterKey(password));\n            case 5:\n              masterKey = _context26.sent;\n              _splitVectorAndEcrypt3 = splitVectorAndEcryptedData(EJSON.parse(privateKey)), _splitVectorAndEcrypt4 = _slicedToArray(_splitVectorAndEcrypt3, 2), vector = _splitVectorAndEcrypt4[0], cipherText = _splitVectorAndEcrypt4[1];\n              _context26.prev = 7;\n              _context26.next = 10;\n              return _regeneratorRuntime.awrap(decryptAES(vector, masterKey, cipherText));\n            case 10:\n              privKey = _context26.sent;\n              return _context26.abrupt(\"return\", toString(privKey));\n            case 14:\n              _context26.prev = 14;\n              _context26.t0 = _context26[\"catch\"](7);\n              this.setState(E2EEState.ENTER_PASSWORD);\n              dispatchToastMessage({\n                type: 'error',\n                message: t('Your_E2EE_password_is_incorrect')\n              });\n              dispatchToastMessage({\n                type: 'info',\n                message: t('End_To_End_Encryption_Not_Enabled')\n              });\n              throw new Error('E2E -> Error decrypting private key');\n            case 20:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n        return decodePrivateKey$;\n      }(), null, this, [[7, 14]], Promise);\n    }\n    return decodePrivateKey;\n  }();\n  _proto.decryptFileContent = function () {\n    function decryptFileContent(file) {\n      var e2eRoom;\n      return _regeneratorRuntime.async(function () {\n        function decryptFileContent$(_context27) {\n          while (1) switch (_context27.prev = _context27.next) {\n            case 0:\n              if (file.rid) {\n                _context27.next = 2;\n                break;\n              }\n              return _context27.abrupt(\"return\", file);\n            case 2:\n              _context27.next = 4;\n              return _regeneratorRuntime.awrap(this.getInstanceByRoomId(file.rid));\n            case 4:\n              e2eRoom = _context27.sent;\n              if (e2eRoom) {\n                _context27.next = 7;\n                break;\n              }\n              return _context27.abrupt(\"return\", file);\n            case 7:\n              return _context27.abrupt(\"return\", e2eRoom.decryptContent(file));\n            case 8:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n        return decryptFileContent$;\n      }(), null, this, null, Promise);\n    }\n    return decryptFileContent;\n  }();\n  _proto.decryptMessage = function () {\n    function decryptMessage(message) {\n      var e2eRoom, decryptedMessage, decryptedMessageWithQuote;\n      return _regeneratorRuntime.async(function () {\n        function decryptMessage$(_context28) {\n          while (1) switch (_context28.prev = _context28.next) {\n            case 0:\n              if (!(!isE2EEMessage(message) || message.e2e === 'done')) {\n                _context28.next = 2;\n                break;\n              }\n              return _context28.abrupt(\"return\", message);\n            case 2:\n              _context28.next = 4;\n              return _regeneratorRuntime.awrap(this.getInstanceByRoomId(message.rid));\n            case 4:\n              e2eRoom = _context28.sent;\n              if (e2eRoom) {\n                _context28.next = 7;\n                break;\n              }\n              return _context28.abrupt(\"return\", message);\n            case 7:\n              _context28.next = 9;\n              return _regeneratorRuntime.awrap(e2eRoom.decryptMessage(message));\n            case 9:\n              decryptedMessage = _context28.sent;\n              _context28.next = 12;\n              return _regeneratorRuntime.awrap(this.parseQuoteAttachment(decryptedMessage));\n            case 12:\n              decryptedMessageWithQuote = _context28.sent;\n              return _context28.abrupt(\"return\", decryptedMessageWithQuote);\n            case 14:\n            case \"end\":\n              return _context28.stop();\n          }\n        }\n        return decryptMessage$;\n      }(), null, this, null, Promise);\n    }\n    return decryptMessage;\n  }();\n  _proto.decryptPinnedMessage = function () {\n    function decryptPinnedMessage(message) {\n      var _message$attachments, _message$attachments$;\n      var pinnedMessage, e2eRoom, data, decryptedPinnedMessage;\n      return _regeneratorRuntime.async(function () {\n        function decryptPinnedMessage$(_context29) {\n          while (1) switch (_context29.prev = _context29.next) {\n            case 0:\n              pinnedMessage = message === null || message === void 0 ? void 0 : (_message$attachments = message.attachments) === null || _message$attachments === void 0 ? void 0 : (_message$attachments$ = _message$attachments[0]) === null || _message$attachments$ === void 0 ? void 0 : _message$attachments$.text;\n              if (pinnedMessage) {\n                _context29.next = 3;\n                break;\n              }\n              return _context29.abrupt(\"return\", message);\n            case 3:\n              _context29.next = 5;\n              return _regeneratorRuntime.awrap(this.getInstanceByRoomId(message.rid));\n            case 5:\n              e2eRoom = _context29.sent;\n              if (e2eRoom) {\n                _context29.next = 8;\n                break;\n              }\n              return _context29.abrupt(\"return\", message);\n            case 8:\n              _context29.next = 10;\n              return _regeneratorRuntime.awrap(e2eRoom.decrypt(pinnedMessage));\n            case 10:\n              data = _context29.sent;\n              if (data) {\n                _context29.next = 13;\n                break;\n              }\n              return _context29.abrupt(\"return\", message);\n            case 13:\n              decryptedPinnedMessage = _objectSpread({}, message);\n              decryptedPinnedMessage.attachments[0].text = data.text;\n              return _context29.abrupt(\"return\", decryptedPinnedMessage);\n            case 16:\n            case \"end\":\n              return _context29.stop();\n          }\n        }\n        return decryptPinnedMessage$;\n      }(), null, this, null, Promise);\n    }\n    return decryptPinnedMessage;\n  }();\n  _proto.decryptPendingMessages = function () {\n    function decryptPendingMessages() {\n      var _this10 = this;\n      return _regeneratorRuntime.async(function () {\n        function decryptPendingMessages$(_context31) {\n          while (1) switch (_context31.prev = _context31.next) {\n            case 0:\n              return _context31.abrupt(\"return\", Messages.find({\n                t: 'e2e',\n                e2e: 'pending'\n              }).forEach(function () {\n                function _callee6(_ref5) {\n                  var _id, msg;\n                  return _regeneratorRuntime.async(function () {\n                    function _callee6$(_context30) {\n                      while (1) switch (_context30.prev = _context30.next) {\n                        case 0:\n                          _id = _ref5._id, msg = _objectWithoutProperties(_ref5, _excluded);\n                          _context30.t0 = Messages;\n                          _context30.t1 = {\n                            _id: _id\n                          };\n                          _context30.next = 5;\n                          return _regeneratorRuntime.awrap(_this10.decryptMessage(msg));\n                        case 5:\n                          _context30.t2 = _context30.sent;\n                          _context30.t0.update.call(_context30.t0, _context30.t1, _context30.t2);\n                        case 7:\n                        case \"end\":\n                          return _context30.stop();\n                      }\n                    }\n                    return _callee6$;\n                  }(), null, null, null, Promise);\n                }\n                return _callee6;\n              }()));\n            case 1:\n            case \"end\":\n              return _context31.stop();\n          }\n        }\n        return decryptPendingMessages$;\n      }(), null, null, null, Promise);\n    }\n    return decryptPendingMessages;\n  }();\n  _proto.decryptSubscription = function () {\n    function decryptSubscription(subscriptionId) {\n      var e2eRoom;\n      return _regeneratorRuntime.async(function () {\n        function decryptSubscription$(_context32) {\n          while (1) switch (_context32.prev = _context32.next) {\n            case 0:\n              _context32.next = 2;\n              return _regeneratorRuntime.awrap(this.getInstanceByRoomId(subscriptionId));\n            case 2:\n              e2eRoom = _context32.sent;\n              this.log('decryptSubscription ->', subscriptionId);\n              _context32.next = 6;\n              return _regeneratorRuntime.awrap(e2eRoom === null || e2eRoom === void 0 ? void 0 : e2eRoom.decryptSubscription());\n            case 6:\n            case \"end\":\n              return _context32.stop();\n          }\n        }\n        return decryptSubscription$;\n      }(), null, this, null, Promise);\n    }\n    return decryptSubscription;\n  }();\n  _proto.decryptSubscriptions = function () {\n    function decryptSubscriptions() {\n      var _this11 = this;\n      return _regeneratorRuntime.async(function () {\n        function decryptSubscriptions$(_context33) {\n          while (1) switch (_context33.prev = _context33.next) {\n            case 0:\n              Subscriptions.find({\n                encrypted: true\n              }).forEach(function (subscription) {\n                return _this11.decryptSubscription(subscription._id);\n              });\n            case 1:\n            case \"end\":\n              return _context33.stop();\n          }\n        }\n        return decryptSubscriptions$;\n      }(), null, null, null, Promise);\n    }\n    return decryptSubscriptions;\n  }();\n  _proto.openAlert = function () {\n    function openAlert(config) {\n      banners.open(_objectSpread({\n        id: 'e2e'\n      }, config));\n    }\n    return openAlert;\n  }();\n  _proto.closeAlert = function () {\n    function closeAlert() {\n      banners.closeById('e2e');\n    }\n    return closeAlert;\n  }();\n  _proto.parseQuoteAttachment = function () {\n    function parseQuoteAttachment(message) {\n      var _this12 = this;\n      var urls;\n      return _regeneratorRuntime.async(function () {\n        function parseQuoteAttachment$(_context35) {\n          while (1) switch (_context35.prev = _context35.next) {\n            case 0:\n              if (message !== null && message !== void 0 && message.msg) {\n                _context35.next = 2;\n                break;\n              }\n              return _context35.abrupt(\"return\", message);\n            case 2:\n              urls = message.msg.match(getMessageUrlRegex()) || [];\n              _context35.next = 5;\n              return _regeneratorRuntime.awrap(Promise.all(urls.map(function () {\n                function _callee7(url) {\n                  var urlObj, _QueryString$parse, msgId, getQuotedMessage, quotedMessage, decryptedQuoteMessage, useRealName, quoteAttachment;\n                  return _regeneratorRuntime.async(function () {\n                    function _callee7$(_context34) {\n                      while (1) switch (_context34.prev = _context34.next) {\n                        case 0:\n                          if (url.includes(settings.get('Site_Url'))) {\n                            _context34.next = 2;\n                            break;\n                          }\n                          return _context34.abrupt(\"return\");\n                        case 2:\n                          urlObj = URL.parse(url); // if the URL doesn't have query params (doesn't reference message) skip\n                          if (urlObj.query) {\n                            _context34.next = 5;\n                            break;\n                          }\n                          return _context34.abrupt(\"return\");\n                        case 5:\n                          _QueryString$parse = QueryString.parse(urlObj.query), msgId = _QueryString$parse.msg;\n                          if (!(!msgId || Array.isArray(msgId))) {\n                            _context34.next = 8;\n                            break;\n                          }\n                          return _context34.abrupt(\"return\");\n                        case 8:\n                          _context34.next = 10;\n                          return _regeneratorRuntime.awrap(sdk.rest.get('/v1/chat.getMessage', {\n                            msgId: msgId\n                          }));\n                        case 10:\n                          getQuotedMessage = _context34.sent;\n                          quotedMessage = getQuotedMessage === null || getQuotedMessage === void 0 ? void 0 : getQuotedMessage.message;\n                          if (quotedMessage) {\n                            _context34.next = 14;\n                            break;\n                          }\n                          return _context34.abrupt(\"return\");\n                        case 14:\n                          _context34.next = 16;\n                          return _regeneratorRuntime.awrap(_this12.decryptMessage(mapMessageFromApi(quotedMessage)));\n                        case 16:\n                          decryptedQuoteMessage = _context34.sent;\n                          message.attachments = message.attachments || [];\n                          useRealName = settings.get('UI_Use_Real_Name');\n                          quoteAttachment = createQuoteAttachment(decryptedQuoteMessage, url, useRealName, getUserAvatarURL(decryptedQuoteMessage.u.username || ''));\n                          message.attachments.push(quoteAttachment);\n                        case 21:\n                        case \"end\":\n                          return _context34.stop();\n                      }\n                    }\n                    return _callee7$;\n                  }(), null, null, null, Promise);\n                }\n                return _callee7;\n              }())));\n            case 5:\n              return _context35.abrupt(\"return\", message);\n            case 6:\n            case \"end\":\n              return _context35.stop();\n          }\n        }\n        return parseQuoteAttachment$;\n      }(), null, null, null, Promise);\n    }\n    return parseQuoteAttachment;\n  }();\n  _proto.getSuggestedE2EEKeys = function () {\n    function getSuggestedE2EEKeys(usersWaitingForE2EKeys) {\n      var _this13 = this;\n      var roomIds;\n      return _regeneratorRuntime.async(function () {\n        function getSuggestedE2EEKeys$(_context37) {\n          while (1) switch (_context37.prev = _context37.next) {\n            case 0:\n              roomIds = Object.keys(usersWaitingForE2EKeys);\n              _context37.t0 = Object;\n              _context37.next = 4;\n              return _regeneratorRuntime.awrap(Promise.all(roomIds.map(function () {\n                function _callee8(room) {\n                  var e2eRoom, usersWithKeys;\n                  return _regeneratorRuntime.async(function () {\n                    function _callee8$(_context36) {\n                      while (1) switch (_context36.prev = _context36.next) {\n                        case 0:\n                          _context36.next = 2;\n                          return _regeneratorRuntime.awrap(_this13.getInstanceByRoomId(room));\n                        case 2:\n                          e2eRoom = _context36.sent;\n                          if (e2eRoom) {\n                            _context36.next = 5;\n                            break;\n                          }\n                          return _context36.abrupt(\"return\");\n                        case 5:\n                          _context36.next = 7;\n                          return _regeneratorRuntime.awrap(e2eRoom.encryptGroupKeyForParticipantsWaitingForTheKeys(usersWaitingForE2EKeys[room]));\n                        case 7:\n                          usersWithKeys = _context36.sent;\n                          if (usersWithKeys) {\n                            _context36.next = 10;\n                            break;\n                          }\n                          return _context36.abrupt(\"return\");\n                        case 10:\n                          return _context36.abrupt(\"return\", [room, usersWithKeys]);\n                        case 11:\n                        case \"end\":\n                          return _context36.stop();\n                      }\n                    }\n                    return _callee8$;\n                  }(), null, null, null, Promise);\n                }\n                return _callee8;\n              }())));\n            case 4:\n              _context37.t1 = _context37.sent.filter(isTruthy);\n              return _context37.abrupt(\"return\", _context37.t0.fromEntries.call(_context37.t0, _context37.t1));\n            case 6:\n            case \"end\":\n              return _context37.stop();\n          }\n        }\n        return getSuggestedE2EEKeys$;\n      }(), null, null, null, Promise);\n    }\n    return getSuggestedE2EEKeys;\n  }();\n  _proto.getSample = function () {\n    function getSample(roomIds) {\n      var limit,\n        randomRoomIds,\n        sampleIds,\n        _iteratorAbruptCompletion,\n        _didIteratorError,\n        _iteratorError,\n        _iterator,\n        _step,\n        roomId,\n        e2eroom,\n        _args38 = arguments;\n      return _regeneratorRuntime.async(function () {\n        function getSample$(_context38) {\n          while (1) switch (_context38.prev = _context38.next) {\n            case 0:\n              limit = _args38.length > 1 && _args38[1] !== undefined ? _args38[1] : 3;\n              if (!(limit === 0)) {\n                _context38.next = 3;\n                break;\n              }\n              return _context38.abrupt(\"return\", []);\n            case 3:\n              randomRoomIds = _.sampleSize(roomIds, ROOM_KEY_EXCHANGE_SIZE);\n              sampleIds = [];\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context38.prev = 7;\n              _iterator = _asyncIterator(randomRoomIds);\n            case 9:\n              _context38.next = 11;\n              return _regeneratorRuntime.awrap(_iterator.next());\n            case 11:\n              if (!(_iteratorAbruptCompletion = !(_step = _context38.sent).done)) {\n                _context38.next = 22;\n                break;\n              }\n              roomId = _step.value;\n              _context38.next = 15;\n              return _regeneratorRuntime.awrap(this.getInstanceByRoomId(roomId));\n            case 15:\n              e2eroom = _context38.sent;\n              if (e2eroom !== null && e2eroom !== void 0 && e2eroom.hasSessionKey()) {\n                _context38.next = 18;\n                break;\n              }\n              return _context38.abrupt(\"continue\", 19);\n            case 18:\n              sampleIds.push(roomId);\n            case 19:\n              _iteratorAbruptCompletion = false;\n              _context38.next = 9;\n              break;\n            case 22:\n              _context38.next = 28;\n              break;\n            case 24:\n              _context38.prev = 24;\n              _context38.t0 = _context38[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context38.t0;\n            case 28:\n              _context38.prev = 28;\n              _context38.prev = 29;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context38.next = 33;\n                break;\n              }\n              _context38.next = 33;\n              return _regeneratorRuntime.awrap(_iterator.return());\n            case 33:\n              _context38.prev = 33;\n              if (!_didIteratorError) {\n                _context38.next = 36;\n                break;\n              }\n              throw _iteratorError;\n            case 36:\n              return _context38.finish(33);\n            case 37:\n              return _context38.finish(28);\n            case 38:\n              if (sampleIds.length) {\n                _context38.next = 40;\n                break;\n              }\n              return _context38.abrupt(\"return\", this.getSample(roomIds, limit - 1));\n            case 40:\n              return _context38.abrupt(\"return\", sampleIds);\n            case 41:\n            case \"end\":\n              return _context38.stop();\n          }\n        }\n        return getSample$;\n      }(), null, this, [[7, 24, 28, 38], [29,, 33, 37]], Promise);\n    }\n    return getSample;\n  }();\n  _proto.initiateKeyDistribution = function () {\n    function initiateKeyDistribution() {\n      var _this14 = this;\n      var keyDistribution;\n      return _regeneratorRuntime.async(function () {\n        function initiateKeyDistribution$(_context40) {\n          while (1) switch (_context40.prev = _context40.next) {\n            case 0:\n              if (!this.keyDistributionInterval) {\n                _context40.next = 2;\n                break;\n              }\n              return _context40.abrupt(\"return\");\n            case 2:\n              keyDistribution = function () {\n                function _callee9() {\n                  var roomIds, sampleIds, _await$sdk$rest$get2, _await$sdk$rest$get2$, usersWaitingForE2EKeys, userKeysWithRooms;\n                  return _regeneratorRuntime.async(function () {\n                    function _callee9$(_context39) {\n                      while (1) switch (_context39.prev = _context39.next) {\n                        case 0:\n                          roomIds = ChatRoom.find({\n                            'usersWaitingForE2EKeys': {\n                              $exists: true\n                            },\n                            'usersWaitingForE2EKeys.userId': {\n                              $ne: Meteor.userId()\n                            }\n                          }).map(function (room) {\n                            return room._id;\n                          });\n                          if (roomIds.length) {\n                            _context39.next = 3;\n                            break;\n                          }\n                          return _context39.abrupt(\"return\");\n                        case 3:\n                          _context39.next = 5;\n                          return _regeneratorRuntime.awrap(_this14.getSample(roomIds));\n                        case 5:\n                          sampleIds = _context39.sent;\n                          if (sampleIds.length) {\n                            _context39.next = 8;\n                            break;\n                          }\n                          return _context39.abrupt(\"return\");\n                        case 8:\n                          _context39.next = 10;\n                          return _regeneratorRuntime.awrap(sdk.rest.get('/v1/e2e.fetchUsersWaitingForGroupKey', {\n                            roomIds: sampleIds\n                          }));\n                        case 10:\n                          _await$sdk$rest$get2 = _context39.sent;\n                          _await$sdk$rest$get2$ = _await$sdk$rest$get2.usersWaitingForE2EKeys;\n                          usersWaitingForE2EKeys = _await$sdk$rest$get2$ === void 0 ? {} : _await$sdk$rest$get2$;\n                          if (Object.keys(usersWaitingForE2EKeys).length) {\n                            _context39.next = 15;\n                            break;\n                          }\n                          return _context39.abrupt(\"return\");\n                        case 15:\n                          _context39.next = 17;\n                          return _regeneratorRuntime.awrap(_this14.getSuggestedE2EEKeys(usersWaitingForE2EKeys));\n                        case 17:\n                          userKeysWithRooms = _context39.sent;\n                          if (Object.keys(userKeysWithRooms).length) {\n                            _context39.next = 20;\n                            break;\n                          }\n                          return _context39.abrupt(\"return\");\n                        case 20:\n                          _context39.prev = 20;\n                          _context39.next = 23;\n                          return _regeneratorRuntime.awrap(sdk.rest.post('/v1/e2e.provideUsersSuggestedGroupKeys', {\n                            usersSuggestedGroupKeys: userKeysWithRooms\n                          }));\n                        case 23:\n                          _context39.next = 28;\n                          break;\n                        case 25:\n                          _context39.prev = 25;\n                          _context39.t0 = _context39[\"catch\"](20);\n                          return _context39.abrupt(\"return\", _this14.error('Error providing group key to users: ', _context39.t0));\n                        case 28:\n                        case \"end\":\n                          return _context39.stop();\n                      }\n                    }\n                    return _callee9$;\n                  }(), null, null, [[20, 25]], Promise);\n                }\n                return _callee9;\n              }(); // Run first call right away, then schedule for 10s in the future\n              _context40.next = 5;\n              return _regeneratorRuntime.awrap(keyDistribution());\n            case 5:\n              this.keyDistributionInterval = setInterval(keyDistribution, 10000);\n            case 6:\n            case \"end\":\n              return _context40.stop();\n          }\n        }\n        return initiateKeyDistribution$;\n      }(), null, this, null, Promise);\n    }\n    return initiateKeyDistribution;\n  }();\n  return E2E;\n}(Emitter);\nvar e2e = new E2E();","map":{"version":3,"names":["_objectWithoutProperties","module","link","default","v","_regeneratorRuntime","_objectSpread","_slicedToArray","_inheritsLoose","_asyncIterator","export","e2e","QueryString","URL","isE2EEMessage","Emitter","EJSON","_","Accounts","Meteor","Tracker","banners","*","imperativeModal","dispatchToastMessage","mapMessageFromApi","waitUntilFind","EnterE2EPasswordModal","SaveE2EPasswordModal","createQuoteAttachment","getMessageUrlRegex","isTruthy","ChatRoom","Subscriptions","Messages","settings","getUserAvatarURL","sdk","t","E2EEState","toString","toArrayBuffer","joinVectorAndEcryptedData","splitVectorAndEcryptedData","encryptAES","decryptAES","generateRSAKey","exportJWKKey","importRSAKey","importRawKey","deriveKey","generateMnemonicPhrase","log","logError","E2ERoom","failedToDecodeKey","ROOM_KEY_EXCHANGE_SIZE","E2EEStateDependency","Dependency","E2E","_Emitter","_this","call","started","instancesByRoomId","db_public_key","db_private_key","privateKey","publicKey","keyDistributionInterval","state","observable","undefined","on","_ref","prevState","nextState","READY","_callee","async","_callee$","_context","prev","next","awrap","onE2EEReady","stop","Promise","SAVE_PASSWORD","_callee2","_callee2$","_context2","DISABLED","_this$observable","NOT_STARTED","_this$observable2","ERROR","_this$observable3","setState","_proto","prototype","_len","arguments","length","msg","Array","_key","apply","concat","error","_len2","_key2","getState","isEnabled","isReady","depend","onE2EEReady$","_context3","initiateHandshake","handleAsyncE2EESuggestedKey","decryptSubscriptions","initiateKeyDistribution","observeSubscriptions","onSubscriptionChanged","sub","e2eRoom","onSubscriptionChanged$","_context4","encrypted","E2EKey","removeInstanceByRoomId","rid","abrupt","getInstanceByRoomId","sent","E2ESuggestedKey","importGroupKey","acceptSuggestedKey","keyReceived","console","warn","rejectSuggestedKey","resume","pause","isSupportedRoomType","disable","isWaitingKeys","decryptSubscription","_this$observable4","_this2","find","observe","changed","setTimeout","added","_callee3","_callee3$","_context5","removed","shouldAskForE2EEPassword","_this$getKeysFromLoca","getKeysFromLocalStorage","private_key","emit","_this3","subs","handleAsyncE2EESuggestedKey$","_context7","$exists","fetch","all","filter","map","_callee4","_callee4$","_context6","room","getInstanceByRoomId$","_context8","findOne","_id","userId","keyID","e2eKeyId","onRoomKeyReset","persistKeys","_ref2","password","public_key","_ref3","force","encodedPrivateKey","_args9","persistKeys$","_context9","Error","encodePrivateKey","rest","post","acceptSuggestedKey$","_context10","rejectSuggestedKey$","_context11","storageLocation","getItem","_this4","Object","keys","key","handshake","openSaveE2EEPasswordModal","randomPassword","_this5","open","component","props","onClose","close","onCancel","closeAlert","onConfirm","removeItem","type","message","startClient","_this6","_this$getKeysFromLoca2","startClient$","_context13","loadKeysFromDB","ENTER_PASSWORD","decodePrivateKey","t0","openAlert","title","html","modifiers","closable","icon","action","_callee5","_callee5$","_context12","loadKeys","createAndLoadKeys","LOADING_KEYS","t1","t2","t3","createRandomPassword","t4","t5","stopClient","stopClient$","_context14","clearInterval","changePassword","newPassword","changePassword$","_context15","setItem","_await$sdk$rest$get","loadKeysFromDB$","_context16","get","_ref4","loadKeys$","_context17","parse","createAndLoadKeys$","_context18","JSON","stringify","requestSubscriptionKeys","requestSubscriptionKeys$","_context19","createRandomPassword$","_context20","masterKey","vector","encodePrivateKey$","_context21","getMasterKey","crypto","getRandomValues","Uint8Array","baseKey","getMasterKey$","_context22","alert","openEnterE2EEPasswordModal","onEnterE2EEPassword","_this7","requestPasswordAlert","_this8","requestPasswordAlert$","_context23","resolve","showModal","showAlert","requestPasswordModal","_this9","requestPasswordModal$","_context24","decodePrivateKeyFlow","_splitVectorAndEcrypt","_splitVectorAndEcrypt2","cipherText","privKey","decodePrivateKeyFlow$","_context25","_splitVectorAndEcrypt3","_splitVectorAndEcrypt4","decodePrivateKey$","_context26","decryptFileContent","file","decryptFileContent$","_context27","decryptContent","decryptMessage","decryptedMessage","decryptedMessageWithQuote","decryptMessage$","_context28","parseQuoteAttachment","decryptPinnedMessage","_message$attachments","_message$attachments$","pinnedMessage","data","decryptedPinnedMessage","decryptPinnedMessage$","_context29","attachments","text","decrypt","decryptPendingMessages","_this10","decryptPendingMessages$","_context31","forEach","_callee6","_ref5","_callee6$","_context30","_excluded","update","subscriptionId","decryptSubscription$","_context32","_this11","decryptSubscriptions$","_context33","subscription","config","id","closeById","_this12","urls","parseQuoteAttachment$","_context35","match","_callee7","url","urlObj","_QueryString$parse","msgId","getQuotedMessage","quotedMessage","decryptedQuoteMessage","useRealName","quoteAttachment","_callee7$","_context34","includes","query","isArray","u","username","push","getSuggestedE2EEKeys","usersWaitingForE2EKeys","_this13","roomIds","getSuggestedE2EEKeys$","_context37","_callee8","usersWithKeys","_callee8$","_context36","encryptGroupKeyForParticipantsWaitingForTheKeys","fromEntries","getSample","limit","randomRoomIds","sampleIds","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","roomId","e2eroom","_args38","getSample$","_context38","sampleSize","done","value","hasSessionKey","return","finish","_this14","keyDistribution","initiateKeyDistribution$","_context40","_callee9","_await$sdk$rest$get2","_await$sdk$rest$get2$","userKeysWithRooms","_callee9$","_context39","$ne","usersSuggestedGroupKeys","setInterval"],"sources":["app/e2e/client/rocketchat.e2e.ts"],"sourcesContent":["import QueryString from 'querystring';\nimport URL from 'url';\n\nimport type { IE2EEMessage, IMessage, IRoom, ISubscription, IUser, IUploadWithUser, MessageAttachment } from '@rocket.chat/core-typings';\nimport { isE2EEMessage } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport EJSON from 'ejson';\nimport _ from 'lodash';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport * as banners from '../../../client/lib/banners';\nimport type { LegacyBannerPayload } from '../../../client/lib/banners';\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\nimport { dispatchToastMessage } from '../../../client/lib/toast';\nimport { mapMessageFromApi } from '../../../client/lib/utils/mapMessageFromApi';\nimport { waitUntilFind } from '../../../client/lib/utils/waitUntilFind';\nimport EnterE2EPasswordModal from '../../../client/views/e2e/EnterE2EPasswordModal';\nimport SaveE2EPasswordModal from '../../../client/views/e2e/SaveE2EPasswordModal';\nimport { createQuoteAttachment } from '../../../lib/createQuoteAttachment';\nimport { getMessageUrlRegex } from '../../../lib/getMessageUrlRegex';\nimport { isTruthy } from '../../../lib/isTruthy';\nimport { ChatRoom, Subscriptions, Messages } from '../../models/client';\nimport { settings } from '../../settings/client';\nimport { getUserAvatarURL } from '../../utils/client';\nimport { sdk } from '../../utils/client/lib/SDKClient';\nimport { t } from '../../utils/lib/i18n';\nimport { E2EEState } from './E2EEState';\nimport {\n\ttoString,\n\ttoArrayBuffer,\n\tjoinVectorAndEcryptedData,\n\tsplitVectorAndEcryptedData,\n\tencryptAES,\n\tdecryptAES,\n\tgenerateRSAKey,\n\texportJWKKey,\n\timportRSAKey,\n\timportRawKey,\n\tderiveKey,\n\tgenerateMnemonicPhrase,\n} from './helper';\nimport { log, logError } from './logger';\nimport { E2ERoom } from './rocketchat.e2e.room';\n\nimport './events';\n\nlet failedToDecodeKey = false;\n\ntype KeyPair = {\n\tpublic_key: string | null;\n\tprivate_key: string | null;\n};\n\nconst ROOM_KEY_EXCHANGE_SIZE = 10;\nconst E2EEStateDependency = new Tracker.Dependency();\n\nclass E2E extends Emitter {\n\tprivate started: boolean;\n\n\tprivate instancesByRoomId: Record<IRoom['_id'], E2ERoom>;\n\n\tprivate db_public_key: string | null | undefined;\n\n\tprivate db_private_key: string | null | undefined;\n\n\tpublic privateKey: CryptoKey | undefined;\n\n\tpublic publicKey: string | undefined;\n\n\tprivate keyDistributionInterval: ReturnType<typeof setInterval> | null;\n\n\tprivate state: E2EEState;\n\n\tprivate observable: Meteor.LiveQueryHandle | undefined;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.started = false;\n\t\tthis.instancesByRoomId = {};\n\t\tthis.keyDistributionInterval = null;\n\t\tthis.observable = undefined;\n\n\t\tthis.on('E2E_STATE_CHANGED', ({ prevState, nextState }) => {\n\t\t\tthis.log(`${prevState} -> ${nextState}`);\n\t\t});\n\n\t\tthis.on(E2EEState.READY, async () => {\n\t\t\tawait this.onE2EEReady();\n\t\t});\n\n\t\tthis.on(E2EEState.SAVE_PASSWORD, async () => {\n\t\t\tawait this.onE2EEReady();\n\t\t});\n\n\t\tthis.on(E2EEState.DISABLED, () => {\n\t\t\tthis.observable?.stop();\n\t\t});\n\n\t\tthis.on(E2EEState.NOT_STARTED, () => {\n\t\t\tthis.observable?.stop();\n\t\t});\n\n\t\tthis.on(E2EEState.ERROR, () => {\n\t\t\tthis.observable?.stop();\n\t\t});\n\n\t\tthis.setState(E2EEState.NOT_STARTED);\n\t}\n\n\tlog(...msg: unknown[]) {\n\t\tlog('E2E', ...msg);\n\t}\n\n\terror(...msg: unknown[]) {\n\t\tlogError('E2E', ...msg);\n\t}\n\n\tgetState() {\n\t\treturn this.state;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.state !== E2EEState.DISABLED;\n\t}\n\n\tisReady(): boolean {\n\t\tE2EEStateDependency.depend();\n\n\t\t// Save_Password state is also a ready state for E2EE\n\t\treturn this.state === E2EEState.READY || this.state === E2EEState.SAVE_PASSWORD;\n\t}\n\n\tasync onE2EEReady() {\n\t\tthis.log('startClient -> Done');\n\t\tthis.initiateHandshake();\n\t\tawait this.handleAsyncE2EESuggestedKey();\n\t\tthis.log('decryptSubscriptions');\n\t\tawait this.decryptSubscriptions();\n\t\tthis.log('decryptSubscriptions -> Done');\n\t\tawait this.initiateKeyDistribution();\n\t\tthis.log('initiateKeyDistribution -> Done');\n\t\tthis.observeSubscriptions();\n\t\tthis.log('observing subscriptions');\n\t}\n\n\tasync onSubscriptionChanged(sub: ISubscription) {\n\t\tthis.log('Subscription changed', sub);\n\t\tif (!sub.encrypted && !sub.E2EKey) {\n\t\t\tthis.removeInstanceByRoomId(sub.rid);\n\t\t\treturn;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(sub.rid);\n\t\tif (!e2eRoom) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (sub.E2ESuggestedKey) {\n\t\t\tif (await e2eRoom.importGroupKey(sub.E2ESuggestedKey)) {\n\t\t\t\tawait this.acceptSuggestedKey(sub.rid);\n\t\t\t\te2eRoom.keyReceived();\n\t\t\t} else {\n\t\t\t\tconsole.warn('Invalid E2ESuggestedKey, rejecting', sub.E2ESuggestedKey);\n\t\t\t\tawait this.rejectSuggestedKey(sub.rid);\n\t\t\t}\n\t\t}\n\n\t\tsub.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t// Cover private groups and direct messages\n\t\tif (!e2eRoom.isSupportedRoomType(sub.t)) {\n\t\t\te2eRoom.disable();\n\t\t\treturn;\n\t\t}\n\n\t\tif (sub.E2EKey && e2eRoom.isWaitingKeys()) {\n\t\t\te2eRoom.keyReceived();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!e2eRoom.isReady()) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait e2eRoom.decryptSubscription();\n\t}\n\n\tobserveSubscriptions() {\n\t\tthis.observable?.stop();\n\n\t\tthis.observable = Subscriptions.find().observe({\n\t\t\tchanged: (sub: ISubscription) => {\n\t\t\t\tsetTimeout(() => this.onSubscriptionChanged(sub), 0);\n\t\t\t},\n\t\t\tadded: (sub: ISubscription) => {\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tthis.log('Subscription added', sub);\n\t\t\t\t\tif (!sub.encrypted && !sub.E2EKey) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.getInstanceByRoomId(sub.rid);\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\tremoved: (sub: ISubscription) => {\n\t\t\t\tthis.log('Subscription removed', sub);\n\t\t\t\tthis.removeInstanceByRoomId(sub.rid);\n\t\t\t},\n\t\t});\n\t}\n\n\tshouldAskForE2EEPassword() {\n\t\tconst { private_key } = this.getKeysFromLocalStorage();\n\t\treturn this.db_private_key && !private_key;\n\t}\n\n\tsetState(nextState: E2EEState) {\n\t\tconst prevState = this.state;\n\n\t\tthis.state = nextState;\n\n\t\tE2EEStateDependency.changed();\n\n\t\tthis.emit('E2E_STATE_CHANGED', { prevState, nextState });\n\n\t\tthis.emit(nextState);\n\t}\n\n\tasync handleAsyncE2EESuggestedKey() {\n\t\tconst subs = Subscriptions.find({ E2ESuggestedKey: { $exists: true } }).fetch();\n\t\tawait Promise.all(\n\t\t\tsubs\n\t\t\t\t.filter((sub) => sub.E2ESuggestedKey && !sub.E2EKey)\n\t\t\t\t.map(async (sub) => {\n\t\t\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(sub.rid);\n\n\t\t\t\t\tif (!e2eRoom) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (await e2eRoom.importGroupKey(sub.E2ESuggestedKey)) {\n\t\t\t\t\t\tthis.log('Imported valid E2E suggested key');\n\t\t\t\t\t\tawait e2e.acceptSuggestedKey(sub.rid);\n\t\t\t\t\t\te2eRoom.keyReceived();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.error('Invalid E2ESuggestedKey, rejecting', sub.E2ESuggestedKey);\n\t\t\t\t\t\tawait e2e.rejectSuggestedKey(sub.rid);\n\t\t\t\t\t}\n\n\t\t\t\t\tsub.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\t\t\t\t}),\n\t\t);\n\t}\n\n\tasync getInstanceByRoomId(rid: IRoom['_id']): Promise<E2ERoom | null> {\n\t\tconst room = await waitUntilFind(() => ChatRoom.findOne({ _id: rid }));\n\n\t\tif (room.t !== 'd' && room.t !== 'p') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!room.encrypted) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.instancesByRoomId[rid]) {\n\t\t\tthis.instancesByRoomId[rid] = new E2ERoom(Meteor.userId(), room);\n\t\t}\n\n\t\t// When the key was already set and is changed via an update, we update the room instance\n\t\tif (\n\t\t\tthis.instancesByRoomId[rid].keyID !== undefined &&\n\t\t\troom.e2eKeyId !== undefined &&\n\t\t\tthis.instancesByRoomId[rid].keyID !== room.e2eKeyId\n\t\t) {\n\t\t\t// KeyID was changed, update instance with new keyID and put room in waiting keys status\n\t\t\tthis.instancesByRoomId[rid].onRoomKeyReset(room.e2eKeyId);\n\t\t}\n\n\t\treturn this.instancesByRoomId[rid];\n\t}\n\n\tremoveInstanceByRoomId(rid: IRoom['_id']): void {\n\t\tdelete this.instancesByRoomId[rid];\n\t}\n\n\tprivate async persistKeys(\n\t\t{ public_key, private_key }: KeyPair,\n\t\tpassword: string,\n\t\t{ force }: { force: boolean } = { force: false },\n\t): Promise<void> {\n\t\tif (typeof public_key !== 'string' || typeof private_key !== 'string') {\n\t\t\tthrow new Error('Failed to persist keys as they are not strings.');\n\t\t}\n\n\t\tconst encodedPrivateKey = await this.encodePrivateKey(private_key, password);\n\n\t\tif (!encodedPrivateKey) {\n\t\t\tthrow new Error('Failed to encode private key with provided password.');\n\t\t}\n\n\t\tawait sdk.rest.post('/v1/e2e.setUserPublicAndPrivateKeys', {\n\t\t\tpublic_key,\n\t\t\tprivate_key: encodedPrivateKey,\n\t\t\tforce,\n\t\t});\n\t}\n\n\tasync acceptSuggestedKey(rid: string): Promise<void> {\n\t\tawait sdk.rest.post('/v1/e2e.acceptSuggestedGroupKey', {\n\t\t\trid,\n\t\t});\n\t}\n\n\tasync rejectSuggestedKey(rid: string): Promise<void> {\n\t\tawait sdk.rest.post('/v1/e2e.rejectSuggestedGroupKey', {\n\t\t\trid,\n\t\t});\n\t}\n\n\tgetKeysFromLocalStorage(): KeyPair {\n\t\treturn {\n\t\t\tpublic_key: Accounts.storageLocation.getItem('public_key'),\n\t\t\tprivate_key: Accounts.storageLocation.getItem('private_key'),\n\t\t};\n\t}\n\n\tinitiateHandshake() {\n\t\tObject.keys(this.instancesByRoomId).map((key) => this.instancesByRoomId[key].handshake());\n\t}\n\n\topenSaveE2EEPasswordModal(randomPassword: string) {\n\t\timperativeModal.open({\n\t\t\tcomponent: SaveE2EPasswordModal,\n\t\t\tprops: {\n\t\t\t\trandomPassword,\n\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\tonCancel: () => {\n\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t},\n\t\t\t\tonConfirm: () => {\n\t\t\t\t\tAccounts.storageLocation.removeItem('e2e.randomPassword');\n\t\t\t\t\tthis.setState(E2EEState.READY);\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('End_To_End_Encryption_Enabled') });\n\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync startClient(): Promise<void> {\n\t\tif (this.started) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log('startClient -> STARTED');\n\n\t\tthis.started = true;\n\n\t\tlet { public_key, private_key } = this.getKeysFromLocalStorage();\n\n\t\tawait this.loadKeysFromDB();\n\n\t\tif (!public_key && this.db_public_key) {\n\t\t\tpublic_key = this.db_public_key;\n\t\t}\n\n\t\tif (this.shouldAskForE2EEPassword()) {\n\t\t\ttry {\n\t\t\t\tthis.setState(E2EEState.ENTER_PASSWORD);\n\t\t\t\tprivate_key = await this.decodePrivateKey(this.db_private_key as string);\n\t\t\t} catch (error) {\n\t\t\t\tthis.started = false;\n\t\t\t\tfailedToDecodeKey = true;\n\t\t\t\tthis.openAlert({\n\t\t\t\t\ttitle: \"Wasn't possible to decode your encryption key to be imported.\", // TODO: missing translation\n\t\t\t\t\thtml: '<div>Your encryption password seems wrong. Click here to try again.</div>', // TODO: missing translation\n\t\t\t\t\tmodifiers: ['large', 'danger'],\n\t\t\t\t\tclosable: true,\n\t\t\t\t\ticon: 'key',\n\t\t\t\t\taction: async () => {\n\t\t\t\t\t\tawait this.startClient();\n\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (public_key && private_key) {\n\t\t\tawait this.loadKeys({ public_key, private_key });\n\t\t\tthis.setState(E2EEState.READY);\n\t\t} else {\n\t\t\tawait this.createAndLoadKeys();\n\t\t\tthis.setState(E2EEState.READY);\n\t\t}\n\n\t\tif (!this.db_public_key || !this.db_private_key) {\n\t\t\tthis.setState(E2EEState.LOADING_KEYS);\n\t\t\tawait this.persistKeys(this.getKeysFromLocalStorage(), await this.createRandomPassword());\n\t\t}\n\n\t\tconst randomPassword = Accounts.storageLocation.getItem('e2e.randomPassword');\n\t\tif (randomPassword) {\n\t\t\tthis.setState(E2EEState.SAVE_PASSWORD);\n\t\t\tthis.openAlert({\n\t\t\t\ttitle: () => t('Save_your_encryption_password'),\n\t\t\t\thtml: () => t('Click_here_to_view_and_copy_your_password'),\n\t\t\t\tmodifiers: ['large'],\n\t\t\t\tclosable: false,\n\t\t\t\ticon: 'key',\n\t\t\t\taction: () => this.openSaveE2EEPasswordModal(randomPassword),\n\t\t\t});\n\t\t}\n\t}\n\n\tasync stopClient(): Promise<void> {\n\t\tthis.log('-> Stop Client');\n\t\tthis.closeAlert();\n\n\t\tAccounts.storageLocation.removeItem('public_key');\n\t\tAccounts.storageLocation.removeItem('private_key');\n\t\tthis.instancesByRoomId = {};\n\t\tthis.privateKey = undefined;\n\t\tthis.publicKey = undefined;\n\t\tthis.started = false;\n\t\tthis.keyDistributionInterval && clearInterval(this.keyDistributionInterval);\n\t\tthis.keyDistributionInterval = null;\n\t\tthis.setState(E2EEState.DISABLED);\n\t}\n\n\tasync changePassword(newPassword: string): Promise<void> {\n\t\tawait this.persistKeys(this.getKeysFromLocalStorage(), newPassword, { force: true });\n\n\t\tif (Accounts.storageLocation.getItem('e2e.randomPassword')) {\n\t\t\tAccounts.storageLocation.setItem('e2e.randomPassword', newPassword);\n\t\t}\n\t}\n\n\tasync loadKeysFromDB(): Promise<void> {\n\t\ttry {\n\t\t\tthis.setState(E2EEState.LOADING_KEYS);\n\t\t\tconst { public_key, private_key } = await sdk.rest.get('/v1/e2e.fetchMyKeys');\n\n\t\t\tthis.db_public_key = public_key;\n\t\t\tthis.db_private_key = private_key;\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\tthis.error('Error fetching RSA keys: ', error);\n\t\t\t// Stop any process since we can't communicate with the server\n\t\t\t// to get the keys. This prevents new key generation\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync loadKeys({ public_key, private_key }: { public_key: string; private_key: string }): Promise<void> {\n\t\tAccounts.storageLocation.setItem('public_key', public_key);\n\t\tthis.publicKey = public_key;\n\n\t\ttry {\n\t\t\tthis.privateKey = await importRSAKey(EJSON.parse(private_key), ['decrypt']);\n\n\t\t\tAccounts.storageLocation.setItem('private_key', private_key);\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error importing private key: ', error);\n\t\t}\n\t}\n\n\tasync createAndLoadKeys(): Promise<void> {\n\t\t// Could not obtain public-private keypair from server.\n\t\tthis.setState(E2EEState.LOADING_KEYS);\n\t\tlet key;\n\t\ttry {\n\t\t\tkey = await generateRSAKey();\n\t\t\tthis.privateKey = key.privateKey;\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error generating key: ', error);\n\t\t}\n\n\t\ttry {\n\t\t\tconst publicKey = await exportJWKKey(key.publicKey);\n\n\t\t\tthis.publicKey = JSON.stringify(publicKey);\n\t\t\tAccounts.storageLocation.setItem('public_key', JSON.stringify(publicKey));\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error exporting public key: ', error);\n\t\t}\n\n\t\ttry {\n\t\t\tconst privateKey = await exportJWKKey(key.privateKey);\n\n\t\t\tAccounts.storageLocation.setItem('private_key', JSON.stringify(privateKey));\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error exporting private key: ', error);\n\t\t}\n\n\t\tawait this.requestSubscriptionKeys();\n\t}\n\n\tasync requestSubscriptionKeys(): Promise<void> {\n\t\tawait sdk.call('e2e.requestSubscriptionKeys');\n\t}\n\n\tasync createRandomPassword(): Promise<string> {\n\t\tconst randomPassword = await generateMnemonicPhrase(5);\n\t\tAccounts.storageLocation.setItem('e2e.randomPassword', randomPassword);\n\t\treturn randomPassword;\n\t}\n\n\tasync encodePrivateKey(privateKey: string, password: string): Promise<string | void> {\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tconst vector = crypto.getRandomValues(new Uint8Array(16));\n\t\ttry {\n\t\t\tconst encodedPrivateKey = await encryptAES(vector, masterKey, toArrayBuffer(privateKey));\n\n\t\t\treturn EJSON.stringify(joinVectorAndEcryptedData(vector, encodedPrivateKey));\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error encrypting encodedPrivateKey: ', error);\n\t\t}\n\t}\n\n\tasync getMasterKey(password: string): Promise<void | CryptoKey> {\n\t\tif (password == null) {\n\t\t\talert('You should provide a password');\n\t\t}\n\n\t\t// First, create a PBKDF2 \"key\" containing the password\n\t\tlet baseKey;\n\t\ttry {\n\t\t\tbaseKey = await importRawKey(toArrayBuffer(password));\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error creating a key based on user password: ', error);\n\t\t}\n\n\t\t// Derive a key from the password\n\t\ttry {\n\t\t\treturn await deriveKey(toArrayBuffer(Meteor.userId()), baseKey);\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ERROR);\n\t\t\treturn this.error('Error deriving baseKey: ', error);\n\t\t}\n\t}\n\n\topenEnterE2EEPasswordModal(onEnterE2EEPassword?: (password: string) => void) {\n\t\timperativeModal.open({\n\t\t\tcomponent: EnterE2EPasswordModal,\n\t\t\tprops: {\n\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\tonCancel: () => {\n\t\t\t\t\tfailedToDecodeKey = false;\n\t\t\t\t\tdispatchToastMessage({ type: 'info', message: t('End_To_End_Encryption_Not_Enabled') });\n\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t},\n\t\t\t\tonConfirm: (password) => {\n\t\t\t\t\tonEnterE2EEPassword?.(password);\n\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tasync requestPasswordAlert(): Promise<string> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst showModal = () => this.openEnterE2EEPasswordModal((password) => resolve(password));\n\n\t\t\tconst showAlert = () => {\n\t\t\t\tthis.openAlert({\n\t\t\t\t\ttitle: () => t('Enter_your_E2E_password'),\n\t\t\t\t\thtml: () => t('Click_here_to_enter_your_encryption_password'),\n\t\t\t\t\tmodifiers: ['large'],\n\t\t\t\t\tclosable: false,\n\t\t\t\t\ticon: 'key',\n\t\t\t\t\taction() {\n\t\t\t\t\t\tshowModal();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (failedToDecodeKey) {\n\t\t\t\tshowModal();\n\t\t\t} else {\n\t\t\t\tshowAlert();\n\t\t\t}\n\t\t});\n\t}\n\n\tasync requestPasswordModal(): Promise<string> {\n\t\treturn new Promise((resolve) => this.openEnterE2EEPasswordModal((password) => resolve(password)));\n\t}\n\n\tasync decodePrivateKeyFlow() {\n\t\tconst password = await this.requestPasswordModal();\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tif (!this.db_private_key) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [vector, cipherText] = splitVectorAndEcryptedData(EJSON.parse(this.db_private_key));\n\n\t\ttry {\n\t\t\tconst privKey = await decryptAES(vector, masterKey, cipherText);\n\t\t\tconst privateKey = toString(privKey) as string;\n\n\t\t\tif (this.db_public_key && privateKey) {\n\t\t\t\tawait this.loadKeys({ public_key: this.db_public_key, private_key: privateKey });\n\t\t\t\tthis.setState(E2EEState.READY);\n\t\t\t} else {\n\t\t\t\tawait this.createAndLoadKeys();\n\t\t\t\tthis.setState(E2EEState.READY);\n\t\t\t}\n\t\t\tdispatchToastMessage({ type: 'success', message: t('End_To_End_Encryption_Enabled') });\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ENTER_PASSWORD);\n\t\t\tdispatchToastMessage({ type: 'error', message: t('Your_E2EE_password_is_incorrect') });\n\t\t\tdispatchToastMessage({ type: 'info', message: t('End_To_End_Encryption_Not_Enabled') });\n\t\t\tthrow new Error('E2E -> Error decrypting private key');\n\t\t}\n\t}\n\n\tasync decodePrivateKey(privateKey: string): Promise<string> {\n\t\tconst password = await this.requestPasswordAlert();\n\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tconst [vector, cipherText] = splitVectorAndEcryptedData(EJSON.parse(privateKey));\n\n\t\ttry {\n\t\t\tconst privKey = await decryptAES(vector, masterKey, cipherText);\n\t\t\treturn toString(privKey);\n\t\t} catch (error) {\n\t\t\tthis.setState(E2EEState.ENTER_PASSWORD);\n\t\t\tdispatchToastMessage({ type: 'error', message: t('Your_E2EE_password_is_incorrect') });\n\t\t\tdispatchToastMessage({ type: 'info', message: t('End_To_End_Encryption_Not_Enabled') });\n\t\t\tthrow new Error('E2E -> Error decrypting private key');\n\t\t}\n\t}\n\n\tasync decryptFileContent(file: IUploadWithUser): Promise<IUploadWithUser> {\n\t\tif (!file.rid) {\n\t\t\treturn file;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(file.rid);\n\n\t\tif (!e2eRoom) {\n\t\t\treturn file;\n\t\t}\n\n\t\treturn e2eRoom.decryptContent(file);\n\t}\n\n\tasync decryptMessage(message: IMessage | IE2EEMessage): Promise<IMessage> {\n\t\tif (!isE2EEMessage(message) || message.e2e === 'done') {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(message.rid);\n\n\t\tif (!e2eRoom) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst decryptedMessage: IE2EEMessage = await e2eRoom.decryptMessage(message);\n\n\t\tconst decryptedMessageWithQuote = await this.parseQuoteAttachment(decryptedMessage);\n\n\t\treturn decryptedMessageWithQuote;\n\t}\n\n\tasync decryptPinnedMessage(message: IMessage) {\n\t\tconst pinnedMessage = message?.attachments?.[0]?.text;\n\n\t\tif (!pinnedMessage) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(message.rid);\n\n\t\tif (!e2eRoom) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst data = await e2eRoom.decrypt(pinnedMessage);\n\n\t\tif (!data) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst decryptedPinnedMessage = { ...message } as IMessage & { attachments: MessageAttachment[] };\n\t\tdecryptedPinnedMessage.attachments[0].text = data.text;\n\n\t\treturn decryptedPinnedMessage;\n\t}\n\n\tasync decryptPendingMessages(): Promise<void> {\n\t\treturn Messages.find({ t: 'e2e', e2e: 'pending' }).forEach(async ({ _id, ...msg }: IMessage) => {\n\t\t\tMessages.update({ _id }, await this.decryptMessage(msg as IE2EEMessage));\n\t\t});\n\t}\n\n\tasync decryptSubscription(subscriptionId: ISubscription['_id']): Promise<void> {\n\t\tconst e2eRoom = await this.getInstanceByRoomId(subscriptionId);\n\t\tthis.log('decryptSubscription ->', subscriptionId);\n\t\tawait e2eRoom?.decryptSubscription();\n\t}\n\n\tasync decryptSubscriptions(): Promise<void> {\n\t\tSubscriptions.find({\n\t\t\tencrypted: true,\n\t\t}).forEach((subscription) => this.decryptSubscription(subscription._id));\n\t}\n\n\topenAlert(config: Omit<LegacyBannerPayload, 'id'>): void {\n\t\tbanners.open({ id: 'e2e', ...config });\n\t}\n\n\tcloseAlert(): void {\n\t\tbanners.closeById('e2e');\n\t}\n\n\tasync parseQuoteAttachment(message: IE2EEMessage): Promise<IE2EEMessage> {\n\t\tif (!message?.msg) {\n\t\t\treturn message;\n\t\t}\n\t\tconst urls = message.msg.match(getMessageUrlRegex()) || [];\n\n\t\tawait Promise.all(\n\t\t\turls.map(async (url) => {\n\t\t\t\tif (!url.includes(settings.get('Site_Url'))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst urlObj = URL.parse(url);\n\t\t\t\t// if the URL doesn't have query params (doesn't reference message) skip\n\t\t\t\tif (!urlObj.query) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { msg: msgId } = QueryString.parse(urlObj.query);\n\n\t\t\t\tif (!msgId || Array.isArray(msgId)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst getQuotedMessage = await sdk.rest.get('/v1/chat.getMessage', { msgId });\n\t\t\t\tconst quotedMessage = getQuotedMessage?.message;\n\n\t\t\t\tif (!quotedMessage) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst decryptedQuoteMessage = await this.decryptMessage(mapMessageFromApi(quotedMessage));\n\n\t\t\t\tmessage.attachments = message.attachments || [];\n\n\t\t\t\tconst useRealName = settings.get('UI_Use_Real_Name');\n\t\t\t\tconst quoteAttachment = createQuoteAttachment(\n\t\t\t\t\tdecryptedQuoteMessage,\n\t\t\t\t\turl,\n\t\t\t\t\tuseRealName,\n\t\t\t\t\tgetUserAvatarURL(decryptedQuoteMessage.u.username || '') as string,\n\t\t\t\t);\n\n\t\t\t\tmessage.attachments.push(quoteAttachment);\n\t\t\t}),\n\t\t);\n\n\t\treturn message;\n\t}\n\n\tasync getSuggestedE2EEKeys(usersWaitingForE2EKeys: Record<IRoom['_id'], { _id: IUser['_id']; public_key: string }[]>) {\n\t\tconst roomIds = Object.keys(usersWaitingForE2EKeys);\n\t\treturn Object.fromEntries(\n\t\t\t(\n\t\t\t\tawait Promise.all(\n\t\t\t\t\troomIds.map(async (room) => {\n\t\t\t\t\t\tconst e2eRoom = await this.getInstanceByRoomId(room);\n\n\t\t\t\t\t\tif (!e2eRoom) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst usersWithKeys = await e2eRoom.encryptGroupKeyForParticipantsWaitingForTheKeys(usersWaitingForE2EKeys[room]);\n\n\t\t\t\t\t\tif (!usersWithKeys) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [room, usersWithKeys];\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t).filter(isTruthy),\n\t\t);\n\t}\n\n\tasync getSample(roomIds: string[], limit = 3): Promise<string[]> {\n\t\tif (limit === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst randomRoomIds = _.sampleSize(roomIds, ROOM_KEY_EXCHANGE_SIZE);\n\n\t\tconst sampleIds: string[] = [];\n\t\tfor await (const roomId of randomRoomIds) {\n\t\t\tconst e2eroom = await this.getInstanceByRoomId(roomId);\n\t\t\tif (!e2eroom?.hasSessionKey()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsampleIds.push(roomId);\n\t\t}\n\n\t\tif (!sampleIds.length) {\n\t\t\treturn this.getSample(roomIds, limit - 1);\n\t\t}\n\n\t\treturn sampleIds;\n\t}\n\n\tasync initiateKeyDistribution() {\n\t\tif (this.keyDistributionInterval) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst keyDistribution = async () => {\n\t\t\tconst roomIds = ChatRoom.find({\n\t\t\t\t'usersWaitingForE2EKeys': { $exists: true },\n\t\t\t\t'usersWaitingForE2EKeys.userId': { $ne: Meteor.userId() },\n\t\t\t}).map((room) => room._id);\n\t\t\tif (!roomIds.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prevent function from running and doing nothing when theres something to do\n\t\t\tconst sampleIds = await this.getSample(roomIds);\n\n\t\t\tif (!sampleIds.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { usersWaitingForE2EKeys = {} } = await sdk.rest.get('/v1/e2e.fetchUsersWaitingForGroupKey', { roomIds: sampleIds });\n\n\t\t\tif (!Object.keys(usersWaitingForE2EKeys).length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userKeysWithRooms = await this.getSuggestedE2EEKeys(usersWaitingForE2EKeys);\n\n\t\t\tif (!Object.keys(userKeysWithRooms).length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait sdk.rest.post('/v1/e2e.provideUsersSuggestedGroupKeys', { usersSuggestedGroupKeys: userKeysWithRooms });\n\t\t\t} catch (error) {\n\t\t\t\treturn this.error('Error providing group key to users: ', error);\n\t\t\t}\n\t\t};\n\n\t\t// Run first call right away, then schedule for 10s in the future\n\t\tawait keyDistribution();\n\t\tthis.keyDistributionInterval = setInterval(keyDistribution, 10000);\n\t}\n}\n\nexport const e2e = new E2E();\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"04ded69fc30b31d2039bbd735c4aa4b0354e4752"}
