{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/slashcommands-inviteall/server/server.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/slashcommands-inviteall/server/server.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/slashcommands-inviteall/server/server.ts","inputSourceMap":{"version":3,"file":"app/slashcommands-inviteall/server/server.ts","sourceRoot":"","sources":["app/slashcommands-inviteall/server/server.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Invite is a named function that will replace /invite commands\n * @param {Object} message - The message object\n */\n\nimport { api } from '@rocket.chat/core-services';\nimport type { ISubscription, SlashCommand, SlashCommandCallbackParams } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { isTruthy } from '../../../lib/isTruthy';\nimport { i18n } from '../../../server/lib/i18n';\nimport { canAccessRoomAsync } from '../../authorization/server';\nimport { addUsersToRoomMethod } from '../../lib/server/methods/addUsersToRoom';\nimport { createChannelMethod } from '../../lib/server/methods/createChannel';\nimport { createPrivateGroupMethod } from '../../lib/server/methods/createPrivateGroup';\nimport { settings } from '../../settings/server';\nimport { slashCommands } from '../../utils/server/slashCommand';\n\nfunction inviteAll<T extends string>(type: T): SlashCommand<T>['callback'] {\n\treturn async function inviteAll({ command, params, message, userId }: SlashCommandCallbackParams<T>): Promise<void> {\n\t\tif (!/invite\\-all-(to|from)/.test(command)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet channel = params.trim();\n\t\tif (channel === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tchannel = channel.replace('#', '');\n\n\t\tif (!channel) {\n\t\t\treturn;\n\t\t}\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = await Users.findOneById(userId);\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\t\tconst lng = user?.language || settings.get('Language') || 'en';\n\n\t\tconst baseChannel = type === 'to' ? await Rooms.findOneById(message.rid) : await Rooms.findOneByName(channel);\n\t\tconst targetChannel = type === 'from' ? await Rooms.findOneById(message.rid) : await Rooms.findOneByName(channel);\n\n\t\tif (!baseChannel) {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Channel_doesnt_exist', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\tlng,\n\t\t\t\t}),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(await canAccessRoomAsync(baseChannel, user))) {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Room_not_exist_or_not_permission', { lng }),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst APIsettings = settings.get<number>('API_User_Limit');\n\t\t\tif (!APIsettings) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ((await Subscriptions.countByRoomIdWhenUsernameExists(baseChannel._id)) > APIsettings) {\n\t\t\t\tthrow new Meteor.Error('error-user-limit-exceeded', 'User Limit Exceeded', {\n\t\t\t\t\tmethod: 'addAllToRoom',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cursor = Subscriptions.findByRoomIdWhenUsernameExists(baseChannel._id, {\n\t\t\t\tprojection: { 'u.username': 1 },\n\t\t\t});\n\t\t\tconst users = (await cursor.toArray()).map((s: ISubscription) => s.u.username).filter(isTruthy);\n\n\t\t\tif (!targetChannel && ['c', 'p'].indexOf(baseChannel.t) > -1) {\n\t\t\t\tbaseChannel.t === 'c' ? await createChannelMethod(userId, channel, users) : await createPrivateGroupMethod(user, channel, users);\n\t\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\t\tmsg: i18n.t('Channel_created', {\n\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\t\tlng,\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tawait addUsersToRoomMethod(userId, {\n\t\t\t\t\trid: targetChannel?._id ?? '',\n\t\t\t\t\tusers,\n\t\t\t\t});\n\t\t\t}\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Users_added', { lng }),\n\t\t\t});\n\t\t} catch (e: any) {\n\t\t\tconst msg = e.error === 'cant-invite-for-direct-room' ? 'Cannot_invite_users_to_direct_rooms' : e.error;\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t(msg, { lng }),\n\t\t\t});\n\t\t}\n\t};\n}\n\nslashCommands.add({\n\tcommand: 'invite-all-to',\n\tcallback: inviteAll('to'),\n\toptions: {\n\t\tdescription: 'Invite_user_to_join_channel_all_to',\n\t\tparams: '#room',\n\t\tpermission: ['add-user-to-joined-room', 'add-user-to-any-c-room', 'add-user-to-any-p-room'],\n\t},\n});\nslashCommands.add({\n\tcommand: 'invite-all-from',\n\tcallback: inviteAll('from'),\n\toptions: {\n\t\tdescription: 'Invite_user_to_join_channel_all_from',\n\t\tparams: '#room',\n\t\tpermission: 'add-user-to-joined-room',\n\t},\n});\nmodule.exports = inviteAll;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/slashcommands-inviteall/server/server.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/slashcommands-inviteall/server/server.ts","inputSourceMap":{"version":3,"file":"app/slashcommands-inviteall/server/server.ts","sourceRoot":"","sources":["app/slashcommands-inviteall/server/server.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Invite is a named function that will replace /invite commands\n * @param {Object} message - The message object\n */\n\nimport { api } from '@rocket.chat/core-services';\nimport type { ISubscription, SlashCommand, SlashCommandCallbackParams } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { isTruthy } from '../../../lib/isTruthy';\nimport { i18n } from '../../../server/lib/i18n';\nimport { canAccessRoomAsync } from '../../authorization/server';\nimport { addUsersToRoomMethod } from '../../lib/server/methods/addUsersToRoom';\nimport { createChannelMethod } from '../../lib/server/methods/createChannel';\nimport { createPrivateGroupMethod } from '../../lib/server/methods/createPrivateGroup';\nimport { settings } from '../../settings/server';\nimport { slashCommands } from '../../utils/server/slashCommand';\n\nfunction inviteAll<T extends string>(type: T): SlashCommand<T>['callback'] {\n\treturn async function inviteAll({ command, params, message, userId }: SlashCommandCallbackParams<T>): Promise<void> {\n\t\tif (!/invite\\-all-(to|from)/.test(command)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet channel = params.trim();\n\t\tif (channel === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tchannel = channel.replace('#', '');\n\n\t\tif (!channel) {\n\t\t\treturn;\n\t\t}\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = await Users.findOneById(userId);\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\t\tconst lng = user?.language || settings.get('Language') || 'en';\n\n\t\tconst baseChannel = type === 'to' ? await Rooms.findOneById(message.rid) : await Rooms.findOneByName(channel);\n\t\tconst targetChannel = type === 'from' ? await Rooms.findOneById(message.rid) : await Rooms.findOneByName(channel);\n\n\t\tif (!baseChannel) {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Channel_doesnt_exist', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\tlng,\n\t\t\t\t}),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(await canAccessRoomAsync(baseChannel, user))) {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Room_not_exist_or_not_permission', { lng }),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst APIsettings = settings.get<number>('API_User_Limit');\n\t\t\tif (!APIsettings) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ((await Subscriptions.countByRoomIdWhenUsernameExists(baseChannel._id)) > APIsettings) {\n\t\t\t\tthrow new Meteor.Error('error-user-limit-exceeded', 'User Limit Exceeded', {\n\t\t\t\t\tmethod: 'addAllToRoom',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cursor = Subscriptions.findByRoomIdWhenUsernameExists(baseChannel._id, {\n\t\t\t\tprojection: { 'u.username': 1 },\n\t\t\t});\n\t\t\tconst users = (await cursor.toArray()).map((s: ISubscription) => s.u.username).filter(isTruthy);\n\n\t\t\tif (!targetChannel && ['c', 'p'].indexOf(baseChannel.t) > -1) {\n\t\t\t\tbaseChannel.t === 'c' ? await createChannelMethod(userId, channel, users) : await createPrivateGroupMethod(user, channel, users);\n\t\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\t\tmsg: i18n.t('Channel_created', {\n\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\t\tlng,\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tawait addUsersToRoomMethod(userId, {\n\t\t\t\t\trid: targetChannel?._id ?? '',\n\t\t\t\t\tusers,\n\t\t\t\t});\n\t\t\t}\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Users_added', { lng }),\n\t\t\t});\n\t\t} catch (e: any) {\n\t\t\tconst msg = e.error === 'cant-invite-for-direct-room' ? 'Cannot_invite_users_to_direct_rooms' : e.error;\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t(msg, { lng }),\n\t\t\t});\n\t\t}\n\t};\n}\n\nslashCommands.add({\n\tcommand: 'invite-all-to',\n\tcallback: inviteAll('to'),\n\toptions: {\n\t\tdescription: 'Invite_user_to_join_channel_all_to',\n\t\tparams: '#room',\n\t\tpermission: ['add-user-to-joined-room', 'add-user-to-any-c-room', 'add-user-to-any-p-room'],\n\t},\n});\nslashCommands.add({\n\tcommand: 'invite-all-from',\n\tcallback: inviteAll('from'),\n\toptions: {\n\t\tdescription: 'Invite_user_to_join_channel_all_from',\n\t\tparams: '#room',\n\t\tpermission: 'add-user-to-joined-room',\n\t},\n});\nmodule.exports = inviteAll;\n"]}}},"code":"!module.wrapAsync(async function (module1, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let api;\n    module1.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let Rooms, Subscriptions, Users;\n    module1.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let Meteor;\n    module1.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let isTruthy;\n    module1.link(\"../../../lib/isTruthy\", {\n      isTruthy(v) {\n        isTruthy = v;\n      }\n    }, 3);\n    let i18n;\n    module1.link(\"../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 4);\n    let canAccessRoomAsync;\n    module1.link(\"../../authorization/server\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 5);\n    let addUsersToRoomMethod;\n    module1.link(\"../../lib/server/methods/addUsersToRoom\", {\n      addUsersToRoomMethod(v) {\n        addUsersToRoomMethod = v;\n      }\n    }, 6);\n    let createChannelMethod;\n    module1.link(\"../../lib/server/methods/createChannel\", {\n      createChannelMethod(v) {\n        createChannelMethod = v;\n      }\n    }, 7);\n    let createPrivateGroupMethod;\n    module1.link(\"../../lib/server/methods/createPrivateGroup\", {\n      createPrivateGroupMethod(v) {\n        createPrivateGroupMethod = v;\n      }\n    }, 8);\n    let settings;\n    module1.link(\"../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 9);\n    let slashCommands;\n    module1.link(\"../../utils/server/slashCommand\", {\n      slashCommands(v) {\n        slashCommands = v;\n      }\n    }, 10);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    function inviteAll(type) {\n      return async function inviteAll(_ref) {\n        let {\n          command,\n          params,\n          message,\n          userId\n        } = _ref;\n        if (!/invite\\-all-(to|from)/.test(command)) {\n          return;\n        }\n        let channel = params.trim();\n        if (channel === '') {\n          return;\n        }\n        channel = channel.replace('#', '');\n        if (!channel) {\n          return;\n        }\n        if (!userId) {\n          return;\n        }\n        const user = await Users.findOneById(userId);\n        if (!user) {\n          return;\n        }\n        const lng = (user === null || user === void 0 ? void 0 : user.language) || settings.get('Language') || 'en';\n        const baseChannel = type === 'to' ? await Rooms.findOneById(message.rid) : await Rooms.findOneByName(channel);\n        const targetChannel = type === 'from' ? await Rooms.findOneById(message.rid) : await Rooms.findOneByName(channel);\n        if (!baseChannel) {\n          void api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n            msg: i18n.t('Channel_doesnt_exist', {\n              postProcess: 'sprintf',\n              sprintf: [channel],\n              lng\n            })\n          });\n          return;\n        }\n        if (!(await canAccessRoomAsync(baseChannel, user))) {\n          void api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n            msg: i18n.t('Room_not_exist_or_not_permission', {\n              lng\n            })\n          });\n          return;\n        }\n        try {\n          const APIsettings = settings.get('API_User_Limit');\n          if (!APIsettings) {\n            return;\n          }\n          if ((await Subscriptions.countByRoomIdWhenUsernameExists(baseChannel._id)) > APIsettings) {\n            throw new Meteor.Error('error-user-limit-exceeded', 'User Limit Exceeded', {\n              method: 'addAllToRoom'\n            });\n          }\n          const cursor = Subscriptions.findByRoomIdWhenUsernameExists(baseChannel._id, {\n            projection: {\n              'u.username': 1\n            }\n          });\n          const users = (await cursor.toArray()).map(s => s.u.username).filter(isTruthy);\n          if (!targetChannel && ['c', 'p'].indexOf(baseChannel.t) > -1) {\n            baseChannel.t === 'c' ? await createChannelMethod(userId, channel, users) : await createPrivateGroupMethod(user, channel, users);\n            void api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n              msg: i18n.t('Channel_created', {\n                postProcess: 'sprintf',\n                sprintf: [channel],\n                lng\n              })\n            });\n          } else {\n            var _targetChannel$_id;\n            await addUsersToRoomMethod(userId, {\n              rid: (_targetChannel$_id = targetChannel === null || targetChannel === void 0 ? void 0 : targetChannel._id) !== null && _targetChannel$_id !== void 0 ? _targetChannel$_id : '',\n              users\n            });\n          }\n          void api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n            msg: i18n.t('Users_added', {\n              lng\n            })\n          });\n        } catch (e) {\n          const msg = e.error === 'cant-invite-for-direct-room' ? 'Cannot_invite_users_to_direct_rooms' : e.error;\n          void api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n            msg: i18n.t(msg, {\n              lng\n            })\n          });\n        }\n      };\n    }\n    slashCommands.add({\n      command: 'invite-all-to',\n      callback: inviteAll('to'),\n      options: {\n        description: 'Invite_user_to_join_channel_all_to',\n        params: '#room',\n        permission: ['add-user-to-joined-room', 'add-user-to-any-c-room', 'add-user-to-any-p-room']\n      }\n    });\n    slashCommands.add({\n      command: 'invite-all-from',\n      callback: inviteAll('from'),\n      options: {\n        description: 'Invite_user_to_join_channel_all_from',\n        params: '#room',\n        permission: 'add-user-to-joined-room'\n      }\n    });\n    module.exports = inviteAll;\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["api","module1","link","v","Rooms","Subscriptions","Users","Meteor","isTruthy","i18n","canAccessRoomAsync","addUsersToRoomMethod","createChannelMethod","createPrivateGroupMethod","settings","slashCommands","__reifyWaitForDeps__","inviteAll","type","_ref","command","params","message","userId","test","channel","trim","replace","user","findOneById","lng","language","get","baseChannel","rid","findOneByName","targetChannel","broadcast","msg","t","postProcess","sprintf","APIsettings","countByRoomIdWhenUsernameExists","_id","Error","method","cursor","findByRoomIdWhenUsernameExists","projection","users","toArray","map","s","u","username","filter","indexOf","_targetChannel$_id","e","error","add","callback","options","description","permission","module","exports","__reify_async_result__","_reifyError","self","async"],"sources":["app/slashcommands-inviteall/server/server.ts"],"sourcesContent":["/*\n * Invite is a named function that will replace /invite commands\n * @param {Object} message - The message object\n */\n\nimport { api } from '@rocket.chat/core-services';\nimport type { ISubscription, SlashCommand, SlashCommandCallbackParams } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { isTruthy } from '../../../lib/isTruthy';\nimport { i18n } from '../../../server/lib/i18n';\nimport { canAccessRoomAsync } from '../../authorization/server';\nimport { addUsersToRoomMethod } from '../../lib/server/methods/addUsersToRoom';\nimport { createChannelMethod } from '../../lib/server/methods/createChannel';\nimport { createPrivateGroupMethod } from '../../lib/server/methods/createPrivateGroup';\nimport { settings } from '../../settings/server';\nimport { slashCommands } from '../../utils/server/slashCommand';\n\nfunction inviteAll<T extends string>(type: T): SlashCommand<T>['callback'] {\n\treturn async function inviteAll({ command, params, message, userId }: SlashCommandCallbackParams<T>): Promise<void> {\n\t\tif (!/invite\\-all-(to|from)/.test(command)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet channel = params.trim();\n\t\tif (channel === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tchannel = channel.replace('#', '');\n\n\t\tif (!channel) {\n\t\t\treturn;\n\t\t}\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = await Users.findOneById(userId);\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\t\tconst lng = user?.language || settings.get('Language') || 'en';\n\n\t\tconst baseChannel = type === 'to' ? await Rooms.findOneById(message.rid) : await Rooms.findOneByName(channel);\n\t\tconst targetChannel = type === 'from' ? await Rooms.findOneById(message.rid) : await Rooms.findOneByName(channel);\n\n\t\tif (!baseChannel) {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Channel_doesnt_exist', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\tlng,\n\t\t\t\t}),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (!(await canAccessRoomAsync(baseChannel, user))) {\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Room_not_exist_or_not_permission', { lng }),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst APIsettings = settings.get<number>('API_User_Limit');\n\t\t\tif (!APIsettings) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ((await Subscriptions.countByRoomIdWhenUsernameExists(baseChannel._id)) > APIsettings) {\n\t\t\t\tthrow new Meteor.Error('error-user-limit-exceeded', 'User Limit Exceeded', {\n\t\t\t\t\tmethod: 'addAllToRoom',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cursor = Subscriptions.findByRoomIdWhenUsernameExists(baseChannel._id, {\n\t\t\t\tprojection: { 'u.username': 1 },\n\t\t\t});\n\t\t\tconst users = (await cursor.toArray()).map((s: ISubscription) => s.u.username).filter(isTruthy);\n\n\t\t\tif (!targetChannel && ['c', 'p'].indexOf(baseChannel.t) > -1) {\n\t\t\t\tbaseChannel.t === 'c' ? await createChannelMethod(userId, channel, users) : await createPrivateGroupMethod(user, channel, users);\n\t\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\t\tmsg: i18n.t('Channel_created', {\n\t\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\t\tsprintf: [channel],\n\t\t\t\t\t\tlng,\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tawait addUsersToRoomMethod(userId, {\n\t\t\t\t\trid: targetChannel?._id ?? '',\n\t\t\t\t\tusers,\n\t\t\t\t});\n\t\t\t}\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t('Users_added', { lng }),\n\t\t\t});\n\t\t} catch (e: any) {\n\t\t\tconst msg = e.error === 'cant-invite-for-direct-room' ? 'Cannot_invite_users_to_direct_rooms' : e.error;\n\t\t\tvoid api.broadcast('notify.ephemeralMessage', userId, message.rid, {\n\t\t\t\tmsg: i18n.t(msg, { lng }),\n\t\t\t});\n\t\t}\n\t};\n}\n\nslashCommands.add({\n\tcommand: 'invite-all-to',\n\tcallback: inviteAll('to'),\n\toptions: {\n\t\tdescription: 'Invite_user_to_join_channel_all_to',\n\t\tparams: '#room',\n\t\tpermission: ['add-user-to-joined-room', 'add-user-to-any-c-room', 'add-user-to-any-p-room'],\n\t},\n});\nslashCommands.add({\n\tcommand: 'invite-all-from',\n\tcallback: inviteAll('from'),\n\toptions: {\n\t\tdescription: 'Invite_user_to_join_channel_all_from',\n\t\tparams: '#room',\n\t\tpermission: 'add-user-to-joined-room',\n\t},\n});\nmodule.exports = inviteAll;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1fe7be5415800386b9b1f5be50267ff72b6d073c"}
