{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/relinquishRoomOwnerships.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/relinquishRoomOwnerships.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/relinquishRoomOwnerships.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/relinquishRoomOwnerships.ts","sourceRoot":"","sources":["app/lib/server/functions/relinquishRoomOwnerships.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAE1F,OAAO,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAC;AACzD,OAAO,EAAE,2BAA2B,EAAE,MAAM,uBAAuB,CAAC;AAGpE,MAAM,eAAe,GAAG,KAAK,EAAE,IAAc,EAAoB,EAAE;IAClE,6BAA6B;IAC7B,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAE1E,OAAO,OAAO,CAAC,GAAG,CAAC;QAClB,aAAa,CAAC,eAAe,CAAC,IAAI,EAAE;YACnC,KAAK,CAAC,OAAO,CAAC,GAAG;gBAChB,KAAK,2BAA2B,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;YAClD,CAAC;SACD,CAAC;QACF,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC;QAC9B,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC;QAClC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC;KACvB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAG,KAAK,WAC5C,MAAc,EACd,eAAoD,EACpD,oBAAoB,GAAG,IAAI;IAE3B,gBAAgB;IAChB,MAAM,WAAW,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,iBAAiB,CAAC,CAAC;IAEzF,IAAI,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,WAAW,EAAE,CAAC;QACnD,QAAQ,IAAI,CAAC,MAAM,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,MAAM,eAAe,GAAa,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAEzH,IAAI,oBAAoB,EAAE,CAAC;QAC1B,CAAC,MAAM,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAmB,EAAE,EAAE,CAC7G,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CACzB,CAAC;IACH,CAAC;IAED,MAAM,eAAe,CAAC,eAAe,CAAC,CAAC;IAEvC,OAAO,eAAe,CAAC;AACxB,CAAC,CAAC","sourcesContent":["import { Messages, Roles, Rooms, Subscriptions, ReadReceipts } from '@rocket.chat/models';\n\nimport { FileUpload } from '../../../file-upload/server';\nimport { notifyOnSubscriptionChanged } from '../lib/notifyListener';\nimport type { SubscribedRoomsForUserWithDetails } from './getRoomsWithSingleOwner';\n\nconst bulkRoomCleanUp = async (rids: string[]): Promise<unknown> => {\n\t// no bulk deletion for files\n\tawait Promise.all(rids.map((rid) => FileUpload.removeFilesByRoomId(rid)));\n\n\treturn Promise.all([\n\t\tSubscriptions.removeByRoomIds(rids, {\n\t\t\tasync onTrash(doc) {\n\t\t\t\tvoid notifyOnSubscriptionChanged(doc, 'removed');\n\t\t\t},\n\t\t}),\n\t\tMessages.removeByRoomIds(rids),\n\t\tReadReceipts.removeByRoomIds(rids),\n\t\tRooms.removeByIds(rids),\n\t]);\n};\n\nexport const relinquishRoomOwnerships = async function (\n\tuserId: string,\n\tsubscribedRooms: SubscribedRoomsForUserWithDetails[],\n\tremoveDirectMessages = true,\n): Promise<SubscribedRoomsForUserWithDetails[]> {\n\t// change owners\n\tconst changeOwner = subscribedRooms.filter(({ shouldChangeOwner }) => shouldChangeOwner);\n\n\tfor await (const { newOwner, rid } of changeOwner) {\n\t\tnewOwner && (await Roles.addUserRoles(newOwner, ['owner'], rid));\n\t}\n\n\tconst roomIdsToRemove: string[] = subscribedRooms.filter(({ shouldBeRemoved }) => shouldBeRemoved).map(({ rid }) => rid);\n\n\tif (removeDirectMessages) {\n\t\t(await Rooms.find1On1ByUserId(userId, { projection: { _id: 1 } }).toArray()).map(({ _id }: { _id: string }) =>\n\t\t\troomIdsToRemove.push(_id),\n\t\t);\n\t}\n\n\tawait bulkRoomCleanUp(roomIdsToRemove);\n\n\treturn subscribedRooms;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/relinquishRoomOwnerships.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/relinquishRoomOwnerships.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/relinquishRoomOwnerships.ts","sourceRoot":"","sources":["app/lib/server/functions/relinquishRoomOwnerships.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAE1F,OAAO,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAC;AACzD,OAAO,EAAE,2BAA2B,EAAE,MAAM,uBAAuB,CAAC;AAGpE,MAAM,eAAe,GAAG,KAAK,EAAE,IAAc,EAAoB,EAAE;IAClE,6BAA6B;IAC7B,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAE1E,OAAO,OAAO,CAAC,GAAG,CAAC;QAClB,aAAa,CAAC,eAAe,CAAC,IAAI,EAAE;YACnC,KAAK,CAAC,OAAO,CAAC,GAAG;gBAChB,KAAK,2BAA2B,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;YAClD,CAAC;SACD,CAAC;QACF,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC;QAC9B,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC;QAClC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC;KACvB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAG,KAAK,WAC5C,MAAc,EACd,eAAoD,EACpD,oBAAoB,GAAG,IAAI;IAE3B,gBAAgB;IAChB,MAAM,WAAW,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE,CAAC,iBAAiB,CAAC,CAAC;IAEzF,IAAI,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,WAAW,EAAE,CAAC;QACnD,QAAQ,IAAI,CAAC,MAAM,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,MAAM,eAAe,GAAa,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAEzH,IAAI,oBAAoB,EAAE,CAAC;QAC1B,CAAC,MAAM,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAmB,EAAE,EAAE,CAC7G,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CACzB,CAAC;IACH,CAAC;IAED,MAAM,eAAe,CAAC,eAAe,CAAC,CAAC;IAEvC,OAAO,eAAe,CAAC;AACxB,CAAC,CAAC","sourcesContent":["import { Messages, Roles, Rooms, Subscriptions, ReadReceipts } from '@rocket.chat/models';\n\nimport { FileUpload } from '../../../file-upload/server';\nimport { notifyOnSubscriptionChanged } from '../lib/notifyListener';\nimport type { SubscribedRoomsForUserWithDetails } from './getRoomsWithSingleOwner';\n\nconst bulkRoomCleanUp = async (rids: string[]): Promise<unknown> => {\n\t// no bulk deletion for files\n\tawait Promise.all(rids.map((rid) => FileUpload.removeFilesByRoomId(rid)));\n\n\treturn Promise.all([\n\t\tSubscriptions.removeByRoomIds(rids, {\n\t\t\tasync onTrash(doc) {\n\t\t\t\tvoid notifyOnSubscriptionChanged(doc, 'removed');\n\t\t\t},\n\t\t}),\n\t\tMessages.removeByRoomIds(rids),\n\t\tReadReceipts.removeByRoomIds(rids),\n\t\tRooms.removeByIds(rids),\n\t]);\n};\n\nexport const relinquishRoomOwnerships = async function (\n\tuserId: string,\n\tsubscribedRooms: SubscribedRoomsForUserWithDetails[],\n\tremoveDirectMessages = true,\n): Promise<SubscribedRoomsForUserWithDetails[]> {\n\t// change owners\n\tconst changeOwner = subscribedRooms.filter(({ shouldChangeOwner }) => shouldChangeOwner);\n\n\tfor await (const { newOwner, rid } of changeOwner) {\n\t\tnewOwner && (await Roles.addUserRoles(newOwner, ['owner'], rid));\n\t}\n\n\tconst roomIdsToRemove: string[] = subscribedRooms.filter(({ shouldBeRemoved }) => shouldBeRemoved).map(({ rid }) => rid);\n\n\tif (removeDirectMessages) {\n\t\t(await Rooms.find1On1ByUserId(userId, { projection: { _id: 1 } }).toArray()).map(({ _id }: { _id: string }) =>\n\t\t\troomIdsToRemove.push(_id),\n\t\t);\n\t}\n\n\tawait bulkRoomCleanUp(roomIdsToRemove);\n\n\treturn subscribedRooms;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      relinquishRoomOwnerships: () => relinquishRoomOwnerships\n    });\n    let Messages, Roles, Rooms, Subscriptions, ReadReceipts;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      Roles(v) {\n        Roles = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      ReadReceipts(v) {\n        ReadReceipts = v;\n      }\n    }, 0);\n    let FileUpload;\n    module.link(\"../../../file-upload/server\", {\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 1);\n    let notifyOnSubscriptionChanged;\n    module.link(\"../lib/notifyListener\", {\n      notifyOnSubscriptionChanged(v) {\n        notifyOnSubscriptionChanged = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const bulkRoomCleanUp = async rids => {\n      // no bulk deletion for files\n      await Promise.all(rids.map(rid => FileUpload.removeFilesByRoomId(rid)));\n      return Promise.all([Subscriptions.removeByRoomIds(rids, {\n        async onTrash(doc) {\n          void notifyOnSubscriptionChanged(doc, 'removed');\n        }\n      }), Messages.removeByRoomIds(rids), ReadReceipts.removeByRoomIds(rids), Rooms.removeByIds(rids)]);\n    };\n    const relinquishRoomOwnerships = async function (userId, subscribedRooms) {\n      let removeDirectMessages = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      // change owners\n      const changeOwner = subscribedRooms.filter(_ref => {\n        let {\n          shouldChangeOwner\n        } = _ref;\n        return shouldChangeOwner;\n      });\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(changeOwner), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const {\n            newOwner,\n            rid\n          } = _step.value;\n          {\n            newOwner && (await Roles.addUserRoles(newOwner, ['owner'], rid));\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      const roomIdsToRemove = subscribedRooms.filter(_ref2 => {\n        let {\n          shouldBeRemoved\n        } = _ref2;\n        return shouldBeRemoved;\n      }).map(_ref3 => {\n        let {\n          rid\n        } = _ref3;\n        return rid;\n      });\n      if (removeDirectMessages) {\n        (await Rooms.find1On1ByUserId(userId, {\n          projection: {\n            _id: 1\n          }\n        }).toArray()).map(_ref4 => {\n          let {\n            _id\n          } = _ref4;\n          return roomIdsToRemove.push(_id);\n        });\n      }\n      await bulkRoomCleanUp(roomIdsToRemove);\n      return subscribedRooms;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","relinquishRoomOwnerships","Messages","Roles","Rooms","Subscriptions","ReadReceipts","FileUpload","notifyOnSubscriptionChanged","__reifyWaitForDeps__","bulkRoomCleanUp","rids","Promise","all","map","rid","removeFilesByRoomId","removeByRoomIds","onTrash","doc","removeByIds","userId","subscribedRooms","removeDirectMessages","arguments","length","undefined","changeOwner","filter","_ref","shouldChangeOwner","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","newOwner","value","addUserRoles","err","return","roomIdsToRemove","_ref2","shouldBeRemoved","_ref3","find1On1ByUserId","projection","_id","toArray","_ref4","push","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/relinquishRoomOwnerships.ts"],"sourcesContent":["import { Messages, Roles, Rooms, Subscriptions, ReadReceipts } from '@rocket.chat/models';\n\nimport { FileUpload } from '../../../file-upload/server';\nimport { notifyOnSubscriptionChanged } from '../lib/notifyListener';\nimport type { SubscribedRoomsForUserWithDetails } from './getRoomsWithSingleOwner';\n\nconst bulkRoomCleanUp = async (rids: string[]): Promise<unknown> => {\n\t// no bulk deletion for files\n\tawait Promise.all(rids.map((rid) => FileUpload.removeFilesByRoomId(rid)));\n\n\treturn Promise.all([\n\t\tSubscriptions.removeByRoomIds(rids, {\n\t\t\tasync onTrash(doc) {\n\t\t\t\tvoid notifyOnSubscriptionChanged(doc, 'removed');\n\t\t\t},\n\t\t}),\n\t\tMessages.removeByRoomIds(rids),\n\t\tReadReceipts.removeByRoomIds(rids),\n\t\tRooms.removeByIds(rids),\n\t]);\n};\n\nexport const relinquishRoomOwnerships = async function (\n\tuserId: string,\n\tsubscribedRooms: SubscribedRoomsForUserWithDetails[],\n\tremoveDirectMessages = true,\n): Promise<SubscribedRoomsForUserWithDetails[]> {\n\t// change owners\n\tconst changeOwner = subscribedRooms.filter(({ shouldChangeOwner }) => shouldChangeOwner);\n\n\tfor await (const { newOwner, rid } of changeOwner) {\n\t\tnewOwner && (await Roles.addUserRoles(newOwner, ['owner'], rid));\n\t}\n\n\tconst roomIdsToRemove: string[] = subscribedRooms.filter(({ shouldBeRemoved }) => shouldBeRemoved).map(({ rid }) => rid);\n\n\tif (removeDirectMessages) {\n\t\t(await Rooms.find1On1ByUserId(userId, { projection: { _id: 1 } }).toArray()).map(({ _id }: { _id: string }) =>\n\t\t\troomIdsToRemove.push(_id),\n\t\t);\n\t}\n\n\tawait bulkRoomCleanUp(roomIdsToRemove);\n\n\treturn subscribedRooms;\n};\n"],"mappings":";;;IAAA,IAAAA,cAAiB;IAAEC,MAAK,CAAEC,IAAA,CAAK,sCAAqC;MAAAC,QAAAC,CAAA;QAAAJ,cAAsB,GAAAI,CAAA;MAAA;IAAA;IAA1FH,MAAA,CAAOI,MAAE;MAAAC,wBAAwB,EAAAA,CAAA,KAAAA;IAAmC;IAAA,IAAAC,QAAA,EAAAC,KAAqB,EAACC,KAAA,EAAAC,aAAA,EAAAC,YAAA;IAAAV,MAAA,CAAAC,IAAA;MAAAK,SAAAH,CAAA;QAAAG,QAAA,GAAAH,CAAA;MAAA;MAAAI,MAAAJ,CAAA;QAAAI,KAAA,GAAAJ,CAAA;MAAA;MAAAK,MAAAL,CAAA;QAAAK,KAAA,GAAAL,CAAA;MAAA;MAAAM,cAAAN,CAAA;QAAAM,aAAA,GAAAN,CAAA;MAAA;MAAAO,aAAAP,CAAA;QAAAO,YAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,UAAA;IAAAX,MAAA,CAAAC,IAAA;MAAAU,WAAAR,CAAA;QAAAQ,UAAA,GAAAR,CAAA;MAAA;IAAA;IAAA,IAAAS,2BAAA;IAAAZ,MAAA,CAAAC,IAAA;MAAAW,4BAAAT,CAAA;QAAAS,2BAAA,GAAAT,CAAA;MAAA;IAAA;IAAA,IAAAU,oBAAA,WAAAA,oBAAA;IAM1F,MAAMC,eAAe,GAAG,MAAOC,IAAc,IAAsB;MAClE;MACA,MAAMC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,GAAG,CAAEC,GAAG,IAAKR,UAAU,CAACS,mBAAmB,CAACD,GAAG,CAAC,CAAC,CAAC;MAEzE,OAAOH,OAAO,CAACC,GAAG,CAAC,CAClBR,aAAa,CAACY,eAAe,CAACN,IAAI,EAAE;QACnC,MAAMO,OAAOA,CAACC,GAAG;UAChB,KAAKX,2BAA2B,CAACW,GAAG,EAAE,SAAS,CAAC;QACjD;OACA,CAAC,EACFjB,QAAQ,CAACe,eAAe,CAACN,IAAI,CAAC,EAC9BL,YAAY,CAACW,eAAe,CAACN,IAAI,CAAC,EAClCP,KAAK,CAACgB,WAAW,CAACT,IAAI,CAAC,CACvB,CAAC;IACH,CAAC;IAEM,MAAMV,wBAAwB,GAAG,eAAAA,CACvCoB,MAAc,EACdC,eAAoD,EACzB;MAAA,IAA3BC,oBAAoB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;MAE3B;MACA,MAAMG,WAAW,GAAGL,eAAe,CAACM,MAAM,CAACC,IAAA;QAAA,IAAC;UAAEC;QAAiB,CAAE,GAAAD,IAAA;QAAA,OAAKC,iBAAiB;MAAA,EAAC;MAAC,IAAAC,yBAAA;MAAA,IAAAC,iBAAA;MAAA,IAAAC,cAAA;MAAA;QAEzF,SAAAC,SAAA,GAAAvC,cAAA,CAAsCgC,WAAW,GAAAQ,KAAA,EAAAJ,yBAAA,KAAAI,KAAA,SAAAD,SAAA,CAAAE,IAAA,IAAAC,IAAA,EAAAN,yBAAA,UAAE;UAAA,MAAlC;YAAEO,QAAQ;YAAEvB;UAAG,CAAE,GAAAoB,KAAA,CAAAI,KAAA;UAAA;YACjCD,QAAQ,KAAK,MAAMnC,KAAK,CAACqC,YAAY,CAACF,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAEvB,GAAG,CAAC,CAAC;UAAC;QAClE;MAAC,SAAA0B,GAAA;QAAAT,iBAAA;QAAAC,cAAA,GAAAQ,GAAA;MAAA;QAAA;UAAA,IAAAV,yBAAA,IAAAG,SAAA,CAAAQ,MAAA;YAAA,MAAAR,SAAA,CAAAQ,MAAA;UAAA;QAAA;UAAA,IAAAV,iBAAA;YAAA,MAAAC,cAAA;UAAA;QAAA;MAAA;MAED,MAAMU,eAAe,GAAarB,eAAe,CAACM,MAAM,CAACgB,KAAA;QAAA,IAAC;UAAEC;QAAe,CAAE,GAAAD,KAAA;QAAA,OAAKC,eAAe;MAAA,EAAC,CAAC/B,GAAG,CAACgC,KAAA;QAAA,IAAC;UAAE/B;QAAG,CAAE,GAAA+B,KAAA;QAAA,OAAK/B,GAAG;MAAA,EAAC;MAExH,IAAIQ,oBAAoB,EAAE;QACzB,CAAC,MAAMnB,KAAK,CAAC2C,gBAAgB,CAAC1B,MAAM,EAAE;UAAE2B,UAAU,EAAE;YAAEC,GAAG,EAAE;UAAC;QAAE,CAAE,CAAC,CAACC,OAAO,EAAE,EAAEpC,GAAG,CAACqC,KAAA;UAAA,IAAC;YAAEF;UAAG,CAAmB,GAAAE,KAAA;UAAA,OACzGR,eAAe,CAACS,IAAI,CAACH,GAAG,CAAC;QAAA,EACzB;MACF;MAEA,MAAMvC,eAAe,CAACiC,eAAe,CAAC;MAEtC,OAAOrB,eAAe;IACvB,CAAC;IAAC+B,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f46da30e9f3c9ab4b28a51e23f62995c8206c4a8"}
