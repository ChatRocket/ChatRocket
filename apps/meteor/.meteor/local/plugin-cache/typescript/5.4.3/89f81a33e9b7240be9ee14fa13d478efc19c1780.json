{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/definition/IRoomTypeConfig.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"definition/IRoomTypeConfig.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/definition/IRoomTypeConfig.ts","inputSourceMap":{"version":3,"file":"definition/IRoomTypeConfig.ts","sourceRoot":"","sources":["definition/IRoomTypeConfig.ts"],"names":[],"mappings":"AAsBA,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC/B,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,UAAU;IAChB,KAAK,EAAE,WAAW;IAClB,YAAY,EAAE,kBAAkB;IAChC,WAAW,EAAE,iBAAiB;IAC9B,SAAS,EAAE,UAAU;IACrB,oBAAoB,EAAE,mBAAmB;IACzC,oBAAoB,EAAE,oBAAoB;IAC1C,SAAS,EAAE,UAAU;IACrB,SAAS,EAAE,WAAW;IACtB,eAAe,EAAE,gBAAgB;IACjC,GAAG,EAAE,WAAW;CACP,CAAC;AAEX,MAAM,CAAC,MAAM,iBAAiB,GAAG;IAChC,OAAO,EAAE,SAAS;IAClB,MAAM,EAAE,QAAQ;IAChB,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,MAAM;IACZ,YAAY,EAAE,YAAY;IAC1B,aAAa,EAAE,aAAa;IAC5B,gBAAgB,EAAE,gBAAgB;IAClC,KAAK,EAAE,OAAO;IACd,WAAW,EAAE,YAAY;IACzB,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,QAAQ;CACP,CAAC;AAEX,MAAM,CAAC,MAAM,aAAa,GAAG;IAC5B,YAAY,EAAE,aAAa;IAC3B,aAAa,EAAE,cAAc;CACpB,CAAC","sourcesContent":["import type {\n\tIRoom,\n\tRoomType,\n\tIUser,\n\tIMessage,\n\tReadReceipt,\n\tValueOf,\n\tAtLeast,\n\tISubscription,\n\tIOmnichannelRoom,\n} from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { IRouterPaths, RouteName } from '@rocket.chat/ui-contexts';\n\nexport type RoomIdentification = { rid?: IRoom['_id']; name?: string; tab?: string };\n\nexport interface IRoomTypeRouteConfig<TRouteName extends RouteName> {\n\tname: TRouteName;\n\tpath?: IRouterPaths[TRouteName]['pattern'];\n\tlink?: (data: RoomIdentification) => Record<string, string>;\n}\n\nexport const RoomSettingsEnum = {\n\tTYPE: 'type',\n\tNAME: 'roomName',\n\tTOPIC: 'roomTopic',\n\tANNOUNCEMENT: 'roomAnnouncement',\n\tDESCRIPTION: 'roomDescription',\n\tREAD_ONLY: 'readOnly',\n\tREACT_WHEN_READ_ONLY: 'reactWhenReadOnly',\n\tARCHIVE_OR_UNARCHIVE: 'archiveOrUnarchive',\n\tJOIN_CODE: 'joinCode',\n\tBROADCAST: 'broadcast',\n\tSYSTEM_MESSAGES: 'systemMessages',\n\tE2E: 'encrypted',\n} as const;\n\nexport const RoomMemberActions = {\n\tARCHIVE: 'archive',\n\tIGNORE: 'ignore',\n\tBLOCK: 'block',\n\tMUTE: 'mute',\n\tSET_AS_OWNER: 'setAsOwner',\n\tSET_AS_LEADER: 'setAsLeader',\n\tSET_AS_MODERATOR: 'setAsModerator',\n\tLEAVE: 'leave',\n\tREMOVE_USER: 'removeUser',\n\tJOIN: 'join',\n\tINVITE: 'invite',\n} as const;\n\nexport const UiTextContext = {\n\tHIDE_WARNING: 'hideWarning',\n\tLEAVE_WARNING: 'leaveWarning',\n} as const;\n\nexport interface IRoomTypeConfig {\n\tidentifier: string;\n\troute?: IRoomTypeRouteConfig<RouteName>;\n}\n\nexport interface IRoomTypeClientConfig extends IRoomTypeConfig {\n\tlabel?: string;\n}\n\nexport interface IRoomTypeClientDirectives {\n\tconfig: IRoomTypeClientConfig;\n\n\tallowRoomSettingChange: (room: Partial<IRoom>, setting: ValueOf<typeof RoomSettingsEnum>) => boolean;\n\tallowMemberAction: (\n\t\troom: Partial<IRoom>,\n\t\taction: ValueOf<typeof RoomMemberActions>,\n\t\tuserId: IUser['_id'],\n\t\tuserSubscription?: ISubscription,\n\t) => boolean;\n\troomName: (room: AtLeast<IRoom, '_id' | 'name' | 'fname' | 'prid'>) => string | undefined;\n\tisGroupChat: (room: Partial<IRoom>) => boolean;\n\tgetUiText: (context: ValueOf<typeof UiTextContext>) => string;\n\tcondition: () => boolean;\n\tgetAvatarPath: (\n\t\troom: AtLeast<IRoom, '_id' | 'name' | 'fname' | 'prid' | 'avatarETag' | 'uids' | 'usernames'> & { username?: IRoom['_id'] },\n\t) => string;\n\tgetIcon?: (room: Partial<IRoom>) => IconName;\n\textractOpenRoomParams?: (routeParams: Record<string, string | null | undefined>) => { type: RoomType; reference: string };\n\tfindRoom: (identifier: string) => IRoom | undefined;\n\tshowJoinLink: (roomId: string) => boolean;\n\tisLivechatRoom: () => boolean;\n\tcanSendMessage: (rid: string) => boolean;\n\treadOnly?: (rid: string, user: AtLeast<IUser, 'username'>) => boolean;\n}\n\nexport interface IRoomTypeServerDirectives {\n\tconfig: IRoomTypeConfig;\n\n\tallowRoomSettingChange: (room: IRoom, setting: ValueOf<typeof RoomSettingsEnum>) => boolean;\n\tallowMemberAction: (room: IRoom, action: ValueOf<typeof RoomMemberActions>, userId?: IUser['_id']) => Promise<boolean>;\n\troomName: (room: IRoom, userId?: string) => Promise<string | undefined>;\n\tisGroupChat: (room: IRoom) => boolean;\n\tcanBeDeleted: (hasPermission: (permissionId: string, rid?: string) => Promise<boolean> | boolean, room: IRoom) => Promise<boolean>;\n\tpreventRenaming: () => boolean;\n\tgetDiscussionType: (room?: AtLeast<IRoom, 'teamId'>) => Promise<RoomType>;\n\tcanAccessUploadedFile: (params: { rc_uid: string; rc_rid: string; rc_token: string }) => Promise<boolean>;\n\tgetNotificationDetails: (\n\t\troom: IRoom,\n\t\tsender: AtLeast<IUser, '_id' | 'name' | 'username'>,\n\t\tnotificationMessage: string,\n\t\tuserId: string,\n\t) => Promise<{ title: string | undefined; text: string; name: string | undefined }>;\n\tgetMsgSender: (message: IMessage) => Promise<IUser | null>;\n\tincludeInRoomSearch: () => boolean;\n\tgetReadReceiptsExtraData: (message: IMessage) => Partial<ReadReceipt>;\n\tincludeInDashboard: () => boolean;\n\troomFind?: (rid: string) => Promise<IRoom | undefined> | Promise<IOmnichannelRoom | null> | IRoom | undefined;\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/definition/IRoomTypeConfig.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"definition/IRoomTypeConfig.ts","inputSourceMap":{"version":3,"file":"definition/IRoomTypeConfig.ts","sourceRoot":"","sources":["definition/IRoomTypeConfig.ts"],"names":[],"mappings":"AAsBA,MAAM,CAAC,MAAM,gBAAgB,GAAG;IAC/B,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,UAAU;IAChB,KAAK,EAAE,WAAW;IAClB,YAAY,EAAE,kBAAkB;IAChC,WAAW,EAAE,iBAAiB;IAC9B,SAAS,EAAE,UAAU;IACrB,oBAAoB,EAAE,mBAAmB;IACzC,oBAAoB,EAAE,oBAAoB;IAC1C,SAAS,EAAE,UAAU;IACrB,SAAS,EAAE,WAAW;IACtB,eAAe,EAAE,gBAAgB;IACjC,GAAG,EAAE,WAAW;CACP,CAAC;AAEX,MAAM,CAAC,MAAM,iBAAiB,GAAG;IAChC,OAAO,EAAE,SAAS;IAClB,MAAM,EAAE,QAAQ;IAChB,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,MAAM;IACZ,YAAY,EAAE,YAAY;IAC1B,aAAa,EAAE,aAAa;IAC5B,gBAAgB,EAAE,gBAAgB;IAClC,KAAK,EAAE,OAAO;IACd,WAAW,EAAE,YAAY;IACzB,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,QAAQ;CACP,CAAC;AAEX,MAAM,CAAC,MAAM,aAAa,GAAG;IAC5B,YAAY,EAAE,aAAa;IAC3B,aAAa,EAAE,cAAc;CACpB,CAAC","sourcesContent":["import type {\n\tIRoom,\n\tRoomType,\n\tIUser,\n\tIMessage,\n\tReadReceipt,\n\tValueOf,\n\tAtLeast,\n\tISubscription,\n\tIOmnichannelRoom,\n} from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { IRouterPaths, RouteName } from '@rocket.chat/ui-contexts';\n\nexport type RoomIdentification = { rid?: IRoom['_id']; name?: string; tab?: string };\n\nexport interface IRoomTypeRouteConfig<TRouteName extends RouteName> {\n\tname: TRouteName;\n\tpath?: IRouterPaths[TRouteName]['pattern'];\n\tlink?: (data: RoomIdentification) => Record<string, string>;\n}\n\nexport const RoomSettingsEnum = {\n\tTYPE: 'type',\n\tNAME: 'roomName',\n\tTOPIC: 'roomTopic',\n\tANNOUNCEMENT: 'roomAnnouncement',\n\tDESCRIPTION: 'roomDescription',\n\tREAD_ONLY: 'readOnly',\n\tREACT_WHEN_READ_ONLY: 'reactWhenReadOnly',\n\tARCHIVE_OR_UNARCHIVE: 'archiveOrUnarchive',\n\tJOIN_CODE: 'joinCode',\n\tBROADCAST: 'broadcast',\n\tSYSTEM_MESSAGES: 'systemMessages',\n\tE2E: 'encrypted',\n} as const;\n\nexport const RoomMemberActions = {\n\tARCHIVE: 'archive',\n\tIGNORE: 'ignore',\n\tBLOCK: 'block',\n\tMUTE: 'mute',\n\tSET_AS_OWNER: 'setAsOwner',\n\tSET_AS_LEADER: 'setAsLeader',\n\tSET_AS_MODERATOR: 'setAsModerator',\n\tLEAVE: 'leave',\n\tREMOVE_USER: 'removeUser',\n\tJOIN: 'join',\n\tINVITE: 'invite',\n} as const;\n\nexport const UiTextContext = {\n\tHIDE_WARNING: 'hideWarning',\n\tLEAVE_WARNING: 'leaveWarning',\n} as const;\n\nexport interface IRoomTypeConfig {\n\tidentifier: string;\n\troute?: IRoomTypeRouteConfig<RouteName>;\n}\n\nexport interface IRoomTypeClientConfig extends IRoomTypeConfig {\n\tlabel?: string;\n}\n\nexport interface IRoomTypeClientDirectives {\n\tconfig: IRoomTypeClientConfig;\n\n\tallowRoomSettingChange: (room: Partial<IRoom>, setting: ValueOf<typeof RoomSettingsEnum>) => boolean;\n\tallowMemberAction: (\n\t\troom: Partial<IRoom>,\n\t\taction: ValueOf<typeof RoomMemberActions>,\n\t\tuserId: IUser['_id'],\n\t\tuserSubscription?: ISubscription,\n\t) => boolean;\n\troomName: (room: AtLeast<IRoom, '_id' | 'name' | 'fname' | 'prid'>) => string | undefined;\n\tisGroupChat: (room: Partial<IRoom>) => boolean;\n\tgetUiText: (context: ValueOf<typeof UiTextContext>) => string;\n\tcondition: () => boolean;\n\tgetAvatarPath: (\n\t\troom: AtLeast<IRoom, '_id' | 'name' | 'fname' | 'prid' | 'avatarETag' | 'uids' | 'usernames'> & { username?: IRoom['_id'] },\n\t) => string;\n\tgetIcon?: (room: Partial<IRoom>) => IconName;\n\textractOpenRoomParams?: (routeParams: Record<string, string | null | undefined>) => { type: RoomType; reference: string };\n\tfindRoom: (identifier: string) => IRoom | undefined;\n\tshowJoinLink: (roomId: string) => boolean;\n\tisLivechatRoom: () => boolean;\n\tcanSendMessage: (rid: string) => boolean;\n\treadOnly?: (rid: string, user: AtLeast<IUser, 'username'>) => boolean;\n}\n\nexport interface IRoomTypeServerDirectives {\n\tconfig: IRoomTypeConfig;\n\n\tallowRoomSettingChange: (room: IRoom, setting: ValueOf<typeof RoomSettingsEnum>) => boolean;\n\tallowMemberAction: (room: IRoom, action: ValueOf<typeof RoomMemberActions>, userId?: IUser['_id']) => Promise<boolean>;\n\troomName: (room: IRoom, userId?: string) => Promise<string | undefined>;\n\tisGroupChat: (room: IRoom) => boolean;\n\tcanBeDeleted: (hasPermission: (permissionId: string, rid?: string) => Promise<boolean> | boolean, room: IRoom) => Promise<boolean>;\n\tpreventRenaming: () => boolean;\n\tgetDiscussionType: (room?: AtLeast<IRoom, 'teamId'>) => Promise<RoomType>;\n\tcanAccessUploadedFile: (params: { rc_uid: string; rc_rid: string; rc_token: string }) => Promise<boolean>;\n\tgetNotificationDetails: (\n\t\troom: IRoom,\n\t\tsender: AtLeast<IUser, '_id' | 'name' | 'username'>,\n\t\tnotificationMessage: string,\n\t\tuserId: string,\n\t) => Promise<{ title: string | undefined; text: string; name: string | undefined }>;\n\tgetMsgSender: (message: IMessage) => Promise<IUser | null>;\n\tincludeInRoomSearch: () => boolean;\n\tgetReadReceiptsExtraData: (message: IMessage) => Partial<ReadReceipt>;\n\tincludeInDashboard: () => boolean;\n\troomFind?: (rid: string) => Promise<IRoom | undefined> | Promise<IOmnichannelRoom | null> | IRoom | undefined;\n}\n"]}}},"code":"module.export({\n  RoomSettingsEnum: () => RoomSettingsEnum,\n  RoomMemberActions: () => RoomMemberActions,\n  UiTextContext: () => UiTextContext\n});\nconst RoomSettingsEnum = {\n  TYPE: 'type',\n  NAME: 'roomName',\n  TOPIC: 'roomTopic',\n  ANNOUNCEMENT: 'roomAnnouncement',\n  DESCRIPTION: 'roomDescription',\n  READ_ONLY: 'readOnly',\n  REACT_WHEN_READ_ONLY: 'reactWhenReadOnly',\n  ARCHIVE_OR_UNARCHIVE: 'archiveOrUnarchive',\n  JOIN_CODE: 'joinCode',\n  BROADCAST: 'broadcast',\n  SYSTEM_MESSAGES: 'systemMessages',\n  E2E: 'encrypted'\n};\nconst RoomMemberActions = {\n  ARCHIVE: 'archive',\n  IGNORE: 'ignore',\n  BLOCK: 'block',\n  MUTE: 'mute',\n  SET_AS_OWNER: 'setAsOwner',\n  SET_AS_LEADER: 'setAsLeader',\n  SET_AS_MODERATOR: 'setAsModerator',\n  LEAVE: 'leave',\n  REMOVE_USER: 'removeUser',\n  JOIN: 'join',\n  INVITE: 'invite'\n};\nconst UiTextContext = {\n  HIDE_WARNING: 'hideWarning',\n  LEAVE_WARNING: 'leaveWarning'\n};","map":{"version":3,"names":["module","export","RoomSettingsEnum","RoomMemberActions","UiTextContext","TYPE","NAME","TOPIC","ANNOUNCEMENT","DESCRIPTION","READ_ONLY","REACT_WHEN_READ_ONLY","ARCHIVE_OR_UNARCHIVE","JOIN_CODE","BROADCAST","SYSTEM_MESSAGES","E2E","ARCHIVE","IGNORE","BLOCK","MUTE","SET_AS_OWNER","SET_AS_LEADER","SET_AS_MODERATOR","LEAVE","REMOVE_USER","JOIN","INVITE","HIDE_WARNING","LEAVE_WARNING"],"sources":["definition/IRoomTypeConfig.ts"],"sourcesContent":["import type {\n\tIRoom,\n\tRoomType,\n\tIUser,\n\tIMessage,\n\tReadReceipt,\n\tValueOf,\n\tAtLeast,\n\tISubscription,\n\tIOmnichannelRoom,\n} from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { IRouterPaths, RouteName } from '@rocket.chat/ui-contexts';\n\nexport type RoomIdentification = { rid?: IRoom['_id']; name?: string; tab?: string };\n\nexport interface IRoomTypeRouteConfig<TRouteName extends RouteName> {\n\tname: TRouteName;\n\tpath?: IRouterPaths[TRouteName]['pattern'];\n\tlink?: (data: RoomIdentification) => Record<string, string>;\n}\n\nexport const RoomSettingsEnum = {\n\tTYPE: 'type',\n\tNAME: 'roomName',\n\tTOPIC: 'roomTopic',\n\tANNOUNCEMENT: 'roomAnnouncement',\n\tDESCRIPTION: 'roomDescription',\n\tREAD_ONLY: 'readOnly',\n\tREACT_WHEN_READ_ONLY: 'reactWhenReadOnly',\n\tARCHIVE_OR_UNARCHIVE: 'archiveOrUnarchive',\n\tJOIN_CODE: 'joinCode',\n\tBROADCAST: 'broadcast',\n\tSYSTEM_MESSAGES: 'systemMessages',\n\tE2E: 'encrypted',\n} as const;\n\nexport const RoomMemberActions = {\n\tARCHIVE: 'archive',\n\tIGNORE: 'ignore',\n\tBLOCK: 'block',\n\tMUTE: 'mute',\n\tSET_AS_OWNER: 'setAsOwner',\n\tSET_AS_LEADER: 'setAsLeader',\n\tSET_AS_MODERATOR: 'setAsModerator',\n\tLEAVE: 'leave',\n\tREMOVE_USER: 'removeUser',\n\tJOIN: 'join',\n\tINVITE: 'invite',\n} as const;\n\nexport const UiTextContext = {\n\tHIDE_WARNING: 'hideWarning',\n\tLEAVE_WARNING: 'leaveWarning',\n} as const;\n\nexport interface IRoomTypeConfig {\n\tidentifier: string;\n\troute?: IRoomTypeRouteConfig<RouteName>;\n}\n\nexport interface IRoomTypeClientConfig extends IRoomTypeConfig {\n\tlabel?: string;\n}\n\nexport interface IRoomTypeClientDirectives {\n\tconfig: IRoomTypeClientConfig;\n\n\tallowRoomSettingChange: (room: Partial<IRoom>, setting: ValueOf<typeof RoomSettingsEnum>) => boolean;\n\tallowMemberAction: (\n\t\troom: Partial<IRoom>,\n\t\taction: ValueOf<typeof RoomMemberActions>,\n\t\tuserId: IUser['_id'],\n\t\tuserSubscription?: ISubscription,\n\t) => boolean;\n\troomName: (room: AtLeast<IRoom, '_id' | 'name' | 'fname' | 'prid'>) => string | undefined;\n\tisGroupChat: (room: Partial<IRoom>) => boolean;\n\tgetUiText: (context: ValueOf<typeof UiTextContext>) => string;\n\tcondition: () => boolean;\n\tgetAvatarPath: (\n\t\troom: AtLeast<IRoom, '_id' | 'name' | 'fname' | 'prid' | 'avatarETag' | 'uids' | 'usernames'> & { username?: IRoom['_id'] },\n\t) => string;\n\tgetIcon?: (room: Partial<IRoom>) => IconName;\n\textractOpenRoomParams?: (routeParams: Record<string, string | null | undefined>) => { type: RoomType; reference: string };\n\tfindRoom: (identifier: string) => IRoom | undefined;\n\tshowJoinLink: (roomId: string) => boolean;\n\tisLivechatRoom: () => boolean;\n\tcanSendMessage: (rid: string) => boolean;\n\treadOnly?: (rid: string, user: AtLeast<IUser, 'username'>) => boolean;\n}\n\nexport interface IRoomTypeServerDirectives {\n\tconfig: IRoomTypeConfig;\n\n\tallowRoomSettingChange: (room: IRoom, setting: ValueOf<typeof RoomSettingsEnum>) => boolean;\n\tallowMemberAction: (room: IRoom, action: ValueOf<typeof RoomMemberActions>, userId?: IUser['_id']) => Promise<boolean>;\n\troomName: (room: IRoom, userId?: string) => Promise<string | undefined>;\n\tisGroupChat: (room: IRoom) => boolean;\n\tcanBeDeleted: (hasPermission: (permissionId: string, rid?: string) => Promise<boolean> | boolean, room: IRoom) => Promise<boolean>;\n\tpreventRenaming: () => boolean;\n\tgetDiscussionType: (room?: AtLeast<IRoom, 'teamId'>) => Promise<RoomType>;\n\tcanAccessUploadedFile: (params: { rc_uid: string; rc_rid: string; rc_token: string }) => Promise<boolean>;\n\tgetNotificationDetails: (\n\t\troom: IRoom,\n\t\tsender: AtLeast<IUser, '_id' | 'name' | 'username'>,\n\t\tnotificationMessage: string,\n\t\tuserId: string,\n\t) => Promise<{ title: string | undefined; text: string; name: string | undefined }>;\n\tgetMsgSender: (message: IMessage) => Promise<IUser | null>;\n\tincludeInRoomSearch: () => boolean;\n\tgetReadReceiptsExtraData: (message: IMessage) => Partial<ReadReceipt>;\n\tincludeInDashboard: () => boolean;\n\troomFind?: (rid: string) => Promise<IRoom | undefined> | Promise<IOmnichannelRoom | null> | IRoom | undefined;\n}\n"],"mappings":"AAsBAA,MAAM,CAACC,MAAM;EAAAC,gBAAgB,EAAGA,CAAA,KAAAA,gBAAA;EAAAC,iBAAA,EAAAA,CAAA,KAAAA,iBAAA;EAAAC,aAAA,EAAAA,CAAA,KAAAA;AAAA;AAAzB,MAAMF,gBAAgB,GAAG;EAC/BG,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,WAAW;EAClBC,YAAY,EAAE,kBAAkB;EAChCC,WAAW,EAAE,iBAAiB;EAC9BC,SAAS,EAAE,UAAU;EACrBC,oBAAoB,EAAE,mBAAmB;EACzCC,oBAAoB,EAAE,oBAAoB;EAC1CC,SAAS,EAAE,UAAU;EACrBC,SAAS,EAAE,WAAW;EACtBC,eAAe,EAAE,gBAAgB;EACjCC,GAAG,EAAE;CACI;AAEH,MAAMb,iBAAiB,GAAG;EAChCc,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,YAAY;EAC1BC,aAAa,EAAE,aAAa;EAC5BC,gBAAgB,EAAE,gBAAgB;EAClCC,KAAK,EAAE,OAAO;EACdC,WAAW,EAAE,YAAY;EACzBC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE;CACC;AAEH,MAAMvB,aAAa,GAAG;EAC5BwB,YAAY,EAAE,aAAa;EAC3BC,aAAa,EAAE;CACN","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"89f81a33e9b7240be9ee14fa13d478efc19c1780"}
