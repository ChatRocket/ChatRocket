{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/registerUser.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/registerUser.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/registerUser.ts","inputSourceMap":{"version":3,"file":"server/methods/registerUser.ts","sourceRoot":"","sources":["server/methods/registerUser.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Users } from '@rocket.chat/models';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match, check } from 'meteor/check';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { validateInviteToken } from '../../app/invites/server/functions/validateInviteToken';\nimport { validateEmailDomain, passwordPolicy, RateLimiter } from '../../app/lib/server';\nimport { settings } from '../../app/settings/server';\nimport { trim } from '../../lib/utils/stringUtils';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tregisterUser(\n\t\t\tformData:\n\t\t\t\t| { email: string; pass: string; username: IUser['username']; name: string; secretURL?: string; reason?: string }\n\t\t\t\t| { email?: null },\n\t\t):\n\t\t\t| {\n\t\t\t\t\ttoken: string;\n\t\t\t\t\twhen: Date;\n\t\t\t  }\n\t\t\t| string;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync registerUser(formData) {\n\t\tconst AllowAnonymousRead = settings.get<boolean>('Accounts_AllowAnonymousRead');\n\t\tconst AllowAnonymousWrite = settings.get<boolean>('Accounts_AllowAnonymousWrite');\n\t\tconst manuallyApproveNewUsers = settings.get<boolean>('Accounts_ManuallyApproveNewUsers');\n\t\tif (AllowAnonymousRead === true && AllowAnonymousWrite === true && !formData.email) {\n\t\t\tconst userId = await Accounts.insertUserDoc(\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tglobalRoles: ['anonymous'],\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tconst stampedLoginToken = await Accounts._generateStampedLoginToken();\n\n\t\t\tawait Accounts._insertLoginToken(userId, stampedLoginToken);\n\t\t\treturn stampedLoginToken;\n\t\t}\n\t\tcheck(\n\t\t\tformData,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\temail: String,\n\t\t\t\tpass: String,\n\t\t\t\tname: String,\n\t\t\t\tsecretURL: Match.Optional(String),\n\t\t\t\treason: Match.Optional(String),\n\t\t\t}),\n\t\t);\n\n\t\tif (settings.get('Accounts_RegistrationForm') === 'Disabled') {\n\t\t\tthrow new Meteor.Error('error-user-registration-disabled', 'User registration is disabled', {\n\t\t\t\tmethod: 'registerUser',\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tsettings.get('Accounts_RegistrationForm') === 'Secret URL' &&\n\t\t\t(!formData.secretURL || formData.secretURL !== settings.get('Accounts_RegistrationForm_SecretURL'))\n\t\t) {\n\t\t\tif (!formData.secretURL) {\n\t\t\t\tthrow new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {\n\t\t\t\t\tmethod: 'registerUser',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait validateInviteToken(formData.secretURL);\n\t\t\t} catch (e) {\n\t\t\t\tthrow new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {\n\t\t\t\t\tmethod: 'registerUser',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tpasswordPolicy.validate(formData.pass);\n\n\t\tawait validateEmailDomain(formData.email);\n\n\t\tconst userData = {\n\t\t\temail: trim(formData.email.toLowerCase()),\n\t\t\tpassword: formData.pass,\n\t\t\tname: formData.name,\n\t\t\treason: formData.reason,\n\t\t};\n\n\t\tlet userId;\n\t\ttry {\n\t\t\tuserId = await Accounts.createUserAsync(userData);\n\t\t} catch (e) {\n\t\t\tif (e instanceof Meteor.Error) {\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tif (e instanceof Error) {\n\t\t\t\tthrow new Meteor.Error(e.message);\n\t\t\t}\n\n\t\t\tthrow new Meteor.Error(String(e));\n\t\t}\n\n\t\tawait Users.setName(userId, trim(formData.name));\n\n\t\tconst reason = trim(formData.reason);\n\t\tif (manuallyApproveNewUsers && reason) {\n\t\t\tawait Users.setReason(userId, reason);\n\t\t}\n\n\t\ttry {\n\t\t\tAccounts.sendVerificationEmail(userId, userData.email);\n\t\t} catch (error) {\n\t\t\t// throw new Meteor.Error 'error-email-send-failed', 'Error trying to send email: ' + error.message, { method: 'registerUser', message: error.message }\n\t\t}\n\n\t\treturn userId;\n\t},\n});\n\nlet registerUserRuleId = RateLimiter.limitMethod(\n\t'registerUser',\n\tsettings.get('Rate_Limiter_Limit_RegisterUser'),\n\tsettings.get('API_Enable_Rate_Limiter_Limit_Time_Default'),\n\t{\n\t\tuserId() {\n\t\t\treturn true;\n\t\t},\n\t},\n);\n\nsettings.watch('Rate_Limiter_Limit_RegisterUser', (value) => {\n\t// When running on testMode, there's no rate limiting added, so this function throws an error\n\tif (process.env.TEST_MODE === 'true') {\n\t\treturn;\n\t}\n\n\tif (!registerUserRuleId) {\n\t\tthrow new Error('Rate limiter rule for \"registerUser\" not found');\n\t}\n\t// remove old DDP rate limiter rule and create a new one with the updated setting value\n\tDDPRateLimiter.removeRule(registerUserRuleId);\n\tregisterUserRuleId = RateLimiter.limitMethod('registerUser', value, settings.get('API_Enable_Rate_Limiter_Limit_Time_Default'), {\n\t\tuserId() {\n\t\t\treturn true;\n\t\t},\n\t});\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/registerUser.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/registerUser.ts","inputSourceMap":{"version":3,"file":"server/methods/registerUser.ts","sourceRoot":"","sources":["server/methods/registerUser.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Users } from '@rocket.chat/models';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match, check } from 'meteor/check';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { validateInviteToken } from '../../app/invites/server/functions/validateInviteToken';\nimport { validateEmailDomain, passwordPolicy, RateLimiter } from '../../app/lib/server';\nimport { settings } from '../../app/settings/server';\nimport { trim } from '../../lib/utils/stringUtils';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tregisterUser(\n\t\t\tformData:\n\t\t\t\t| { email: string; pass: string; username: IUser['username']; name: string; secretURL?: string; reason?: string }\n\t\t\t\t| { email?: null },\n\t\t):\n\t\t\t| {\n\t\t\t\t\ttoken: string;\n\t\t\t\t\twhen: Date;\n\t\t\t  }\n\t\t\t| string;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync registerUser(formData) {\n\t\tconst AllowAnonymousRead = settings.get<boolean>('Accounts_AllowAnonymousRead');\n\t\tconst AllowAnonymousWrite = settings.get<boolean>('Accounts_AllowAnonymousWrite');\n\t\tconst manuallyApproveNewUsers = settings.get<boolean>('Accounts_ManuallyApproveNewUsers');\n\t\tif (AllowAnonymousRead === true && AllowAnonymousWrite === true && !formData.email) {\n\t\t\tconst userId = await Accounts.insertUserDoc(\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tglobalRoles: ['anonymous'],\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tconst stampedLoginToken = await Accounts._generateStampedLoginToken();\n\n\t\t\tawait Accounts._insertLoginToken(userId, stampedLoginToken);\n\t\t\treturn stampedLoginToken;\n\t\t}\n\t\tcheck(\n\t\t\tformData,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\temail: String,\n\t\t\t\tpass: String,\n\t\t\t\tname: String,\n\t\t\t\tsecretURL: Match.Optional(String),\n\t\t\t\treason: Match.Optional(String),\n\t\t\t}),\n\t\t);\n\n\t\tif (settings.get('Accounts_RegistrationForm') === 'Disabled') {\n\t\t\tthrow new Meteor.Error('error-user-registration-disabled', 'User registration is disabled', {\n\t\t\t\tmethod: 'registerUser',\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tsettings.get('Accounts_RegistrationForm') === 'Secret URL' &&\n\t\t\t(!formData.secretURL || formData.secretURL !== settings.get('Accounts_RegistrationForm_SecretURL'))\n\t\t) {\n\t\t\tif (!formData.secretURL) {\n\t\t\t\tthrow new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {\n\t\t\t\t\tmethod: 'registerUser',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait validateInviteToken(formData.secretURL);\n\t\t\t} catch (e) {\n\t\t\t\tthrow new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {\n\t\t\t\t\tmethod: 'registerUser',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tpasswordPolicy.validate(formData.pass);\n\n\t\tawait validateEmailDomain(formData.email);\n\n\t\tconst userData = {\n\t\t\temail: trim(formData.email.toLowerCase()),\n\t\t\tpassword: formData.pass,\n\t\t\tname: formData.name,\n\t\t\treason: formData.reason,\n\t\t};\n\n\t\tlet userId;\n\t\ttry {\n\t\t\tuserId = await Accounts.createUserAsync(userData);\n\t\t} catch (e) {\n\t\t\tif (e instanceof Meteor.Error) {\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tif (e instanceof Error) {\n\t\t\t\tthrow new Meteor.Error(e.message);\n\t\t\t}\n\n\t\t\tthrow new Meteor.Error(String(e));\n\t\t}\n\n\t\tawait Users.setName(userId, trim(formData.name));\n\n\t\tconst reason = trim(formData.reason);\n\t\tif (manuallyApproveNewUsers && reason) {\n\t\t\tawait Users.setReason(userId, reason);\n\t\t}\n\n\t\ttry {\n\t\t\tAccounts.sendVerificationEmail(userId, userData.email);\n\t\t} catch (error) {\n\t\t\t// throw new Meteor.Error 'error-email-send-failed', 'Error trying to send email: ' + error.message, { method: 'registerUser', message: error.message }\n\t\t}\n\n\t\treturn userId;\n\t},\n});\n\nlet registerUserRuleId = RateLimiter.limitMethod(\n\t'registerUser',\n\tsettings.get('Rate_Limiter_Limit_RegisterUser'),\n\tsettings.get('API_Enable_Rate_Limiter_Limit_Time_Default'),\n\t{\n\t\tuserId() {\n\t\t\treturn true;\n\t\t},\n\t},\n);\n\nsettings.watch('Rate_Limiter_Limit_RegisterUser', (value) => {\n\t// When running on testMode, there's no rate limiting added, so this function throws an error\n\tif (process.env.TEST_MODE === 'true') {\n\t\treturn;\n\t}\n\n\tif (!registerUserRuleId) {\n\t\tthrow new Error('Rate limiter rule for \"registerUser\" not found');\n\t}\n\t// remove old DDP rate limiter rule and create a new one with the updated setting value\n\tDDPRateLimiter.removeRule(registerUserRuleId);\n\tregisterUserRuleId = RateLimiter.limitMethod('registerUser', value, settings.get('API_Enable_Rate_Limiter_Limit_Time_Default'), {\n\t\tuserId() {\n\t\t\treturn true;\n\t\t},\n\t});\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 1);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 2);\n    let DDPRateLimiter;\n    module.link(\"meteor/ddp-rate-limiter\", {\n      DDPRateLimiter(v) {\n        DDPRateLimiter = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let validateInviteToken;\n    module.link(\"../../app/invites/server/functions/validateInviteToken\", {\n      validateInviteToken(v) {\n        validateInviteToken = v;\n      }\n    }, 5);\n    let validateEmailDomain, passwordPolicy, RateLimiter;\n    module.link(\"../../app/lib/server\", {\n      validateEmailDomain(v) {\n        validateEmailDomain = v;\n      },\n      passwordPolicy(v) {\n        passwordPolicy = v;\n      },\n      RateLimiter(v) {\n        RateLimiter = v;\n      }\n    }, 6);\n    let settings;\n    module.link(\"../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 7);\n    let trim;\n    module.link(\"../../lib/utils/stringUtils\", {\n      trim(v) {\n        trim = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async registerUser(formData) {\n        const AllowAnonymousRead = settings.get('Accounts_AllowAnonymousRead');\n        const AllowAnonymousWrite = settings.get('Accounts_AllowAnonymousWrite');\n        const manuallyApproveNewUsers = settings.get('Accounts_ManuallyApproveNewUsers');\n        if (AllowAnonymousRead === true && AllowAnonymousWrite === true && !formData.email) {\n          const userId = await Accounts.insertUserDoc({}, {\n            globalRoles: ['anonymous'],\n            active: true\n          });\n          const stampedLoginToken = await Accounts._generateStampedLoginToken();\n          await Accounts._insertLoginToken(userId, stampedLoginToken);\n          return stampedLoginToken;\n        }\n        check(formData, Match.ObjectIncluding({\n          email: String,\n          pass: String,\n          name: String,\n          secretURL: Match.Optional(String),\n          reason: Match.Optional(String)\n        }));\n        if (settings.get('Accounts_RegistrationForm') === 'Disabled') {\n          throw new Meteor.Error('error-user-registration-disabled', 'User registration is disabled', {\n            method: 'registerUser'\n          });\n        }\n        if (settings.get('Accounts_RegistrationForm') === 'Secret URL' && (!formData.secretURL || formData.secretURL !== settings.get('Accounts_RegistrationForm_SecretURL'))) {\n          if (!formData.secretURL) {\n            throw new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {\n              method: 'registerUser'\n            });\n          }\n          try {\n            await validateInviteToken(formData.secretURL);\n          } catch (e) {\n            throw new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {\n              method: 'registerUser'\n            });\n          }\n        }\n        passwordPolicy.validate(formData.pass);\n        await validateEmailDomain(formData.email);\n        const userData = {\n          email: trim(formData.email.toLowerCase()),\n          password: formData.pass,\n          name: formData.name,\n          reason: formData.reason\n        };\n        let userId;\n        try {\n          userId = await Accounts.createUserAsync(userData);\n        } catch (e) {\n          if (e instanceof Meteor.Error) {\n            throw e;\n          }\n          if (e instanceof Error) {\n            throw new Meteor.Error(e.message);\n          }\n          throw new Meteor.Error(String(e));\n        }\n        await Users.setName(userId, trim(formData.name));\n        const reason = trim(formData.reason);\n        if (manuallyApproveNewUsers && reason) {\n          await Users.setReason(userId, reason);\n        }\n        try {\n          Accounts.sendVerificationEmail(userId, userData.email);\n        } catch (error) {\n          // throw new Meteor.Error 'error-email-send-failed', 'Error trying to send email: ' + error.message, { method: 'registerUser', message: error.message }\n        }\n        return userId;\n      }\n    });\n    let registerUserRuleId = RateLimiter.limitMethod('registerUser', settings.get('Rate_Limiter_Limit_RegisterUser'), settings.get('API_Enable_Rate_Limiter_Limit_Time_Default'), {\n      userId() {\n        return true;\n      }\n    });\n    settings.watch('Rate_Limiter_Limit_RegisterUser', value => {\n      // When running on testMode, there's no rate limiting added, so this function throws an error\n      if (process.env.TEST_MODE === 'true') {\n        return;\n      }\n      if (!registerUserRuleId) {\n        throw new Error('Rate limiter rule for \"registerUser\" not found');\n      }\n      // remove old DDP rate limiter rule and create a new one with the updated setting value\n      DDPRateLimiter.removeRule(registerUserRuleId);\n      registerUserRuleId = RateLimiter.limitMethod('registerUser', value, settings.get('API_Enable_Rate_Limiter_Limit_Time_Default'), {\n        userId() {\n          return true;\n        }\n      });\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Users","module","link","v","Accounts","Match","check","DDPRateLimiter","Meteor","validateInviteToken","validateEmailDomain","passwordPolicy","RateLimiter","settings","trim","__reifyWaitForDeps__","methods","registerUser","formData","AllowAnonymousRead","get","AllowAnonymousWrite","manuallyApproveNewUsers","email","userId","insertUserDoc","globalRoles","active","stampedLoginToken","_generateStampedLoginToken","_insertLoginToken","ObjectIncluding","String","pass","name","secretURL","Optional","reason","Error","method","e","validate","userData","toLowerCase","password","createUserAsync","message","setName","setReason","sendVerificationEmail","error","registerUserRuleId","limitMethod","watch","value","process","env","TEST_MODE","removeRule","__reify_async_result__","_reifyError","self","async"],"sources":["server/methods/registerUser.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Users } from '@rocket.chat/models';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match, check } from 'meteor/check';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { validateInviteToken } from '../../app/invites/server/functions/validateInviteToken';\nimport { validateEmailDomain, passwordPolicy, RateLimiter } from '../../app/lib/server';\nimport { settings } from '../../app/settings/server';\nimport { trim } from '../../lib/utils/stringUtils';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tregisterUser(\n\t\t\tformData:\n\t\t\t\t| { email: string; pass: string; username: IUser['username']; name: string; secretURL?: string; reason?: string }\n\t\t\t\t| { email?: null },\n\t\t):\n\t\t\t| {\n\t\t\t\t\ttoken: string;\n\t\t\t\t\twhen: Date;\n\t\t\t  }\n\t\t\t| string;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync registerUser(formData) {\n\t\tconst AllowAnonymousRead = settings.get<boolean>('Accounts_AllowAnonymousRead');\n\t\tconst AllowAnonymousWrite = settings.get<boolean>('Accounts_AllowAnonymousWrite');\n\t\tconst manuallyApproveNewUsers = settings.get<boolean>('Accounts_ManuallyApproveNewUsers');\n\t\tif (AllowAnonymousRead === true && AllowAnonymousWrite === true && !formData.email) {\n\t\t\tconst userId = await Accounts.insertUserDoc(\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tglobalRoles: ['anonymous'],\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tconst stampedLoginToken = await Accounts._generateStampedLoginToken();\n\n\t\t\tawait Accounts._insertLoginToken(userId, stampedLoginToken);\n\t\t\treturn stampedLoginToken;\n\t\t}\n\t\tcheck(\n\t\t\tformData,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\temail: String,\n\t\t\t\tpass: String,\n\t\t\t\tname: String,\n\t\t\t\tsecretURL: Match.Optional(String),\n\t\t\t\treason: Match.Optional(String),\n\t\t\t}),\n\t\t);\n\n\t\tif (settings.get('Accounts_RegistrationForm') === 'Disabled') {\n\t\t\tthrow new Meteor.Error('error-user-registration-disabled', 'User registration is disabled', {\n\t\t\t\tmethod: 'registerUser',\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tsettings.get('Accounts_RegistrationForm') === 'Secret URL' &&\n\t\t\t(!formData.secretURL || formData.secretURL !== settings.get('Accounts_RegistrationForm_SecretURL'))\n\t\t) {\n\t\t\tif (!formData.secretURL) {\n\t\t\t\tthrow new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {\n\t\t\t\t\tmethod: 'registerUser',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait validateInviteToken(formData.secretURL);\n\t\t\t} catch (e) {\n\t\t\t\tthrow new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {\n\t\t\t\t\tmethod: 'registerUser',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tpasswordPolicy.validate(formData.pass);\n\n\t\tawait validateEmailDomain(formData.email);\n\n\t\tconst userData = {\n\t\t\temail: trim(formData.email.toLowerCase()),\n\t\t\tpassword: formData.pass,\n\t\t\tname: formData.name,\n\t\t\treason: formData.reason,\n\t\t};\n\n\t\tlet userId;\n\t\ttry {\n\t\t\tuserId = await Accounts.createUserAsync(userData);\n\t\t} catch (e) {\n\t\t\tif (e instanceof Meteor.Error) {\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\tif (e instanceof Error) {\n\t\t\t\tthrow new Meteor.Error(e.message);\n\t\t\t}\n\n\t\t\tthrow new Meteor.Error(String(e));\n\t\t}\n\n\t\tawait Users.setName(userId, trim(formData.name));\n\n\t\tconst reason = trim(formData.reason);\n\t\tif (manuallyApproveNewUsers && reason) {\n\t\t\tawait Users.setReason(userId, reason);\n\t\t}\n\n\t\ttry {\n\t\t\tAccounts.sendVerificationEmail(userId, userData.email);\n\t\t} catch (error) {\n\t\t\t// throw new Meteor.Error 'error-email-send-failed', 'Error trying to send email: ' + error.message, { method: 'registerUser', message: error.message }\n\t\t}\n\n\t\treturn userId;\n\t},\n});\n\nlet registerUserRuleId = RateLimiter.limitMethod(\n\t'registerUser',\n\tsettings.get('Rate_Limiter_Limit_RegisterUser'),\n\tsettings.get('API_Enable_Rate_Limiter_Limit_Time_Default'),\n\t{\n\t\tuserId() {\n\t\t\treturn true;\n\t\t},\n\t},\n);\n\nsettings.watch('Rate_Limiter_Limit_RegisterUser', (value) => {\n\t// When running on testMode, there's no rate limiting added, so this function throws an error\n\tif (process.env.TEST_MODE === 'true') {\n\t\treturn;\n\t}\n\n\tif (!registerUserRuleId) {\n\t\tthrow new Error('Rate limiter rule for \"registerUser\" not found');\n\t}\n\t// remove old DDP rate limiter rule and create a new one with the updated setting value\n\tDDPRateLimiter.removeRule(registerUserRuleId);\n\tregisterUserRuleId = RateLimiter.limitMethod('registerUser', value, settings.get('API_Enable_Rate_Limiter_Limit_Time_Default'), {\n\t\tuserId() {\n\t\t\treturn true;\n\t\t},\n\t});\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2800307593ca2be9cc79940b16beed6391501da8"}
