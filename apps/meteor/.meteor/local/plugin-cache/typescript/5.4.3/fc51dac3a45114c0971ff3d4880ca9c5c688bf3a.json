{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/hooks/beforeRoutingChat.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/hooks/beforeRoutingChat.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/hooks/beforeRoutingChat.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/hooks/beforeRoutingChat.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/hooks/beforeRoutingChat.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,eAAe,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEzF,OAAO,EAAE,8BAA8B,EAAE,MAAM,kDAAkD,CAAC;AAClG,OAAO,EAAE,MAAM,EAAE,MAAM,qDAAqD,CAAC;AAC7E,OAAO,EAAE,mBAAmB,EAAE,MAAM,+CAA+C,CAAC;AACpF,OAAO,EAAE,gBAAgB,EAAE,MAAM,qDAAqD,CAAC;AACvF,OAAO,EAAE,qBAAqB,EAAE,MAAM,uDAAuD,CAAC;AAC9F,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAC9D,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAEzC,SAAS,CAAC,GAAG,CACZ,0BAA0B,EAC1B,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE;IACxB,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,wDAAwD;IACxD,IAAI,OAAO,EAAE,UAAU,IAAI,CAAC,CAAC,MAAM,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;QAC5E,MAAM,UAAU,GAAG,MAAM,kBAAkB,CAAC,WAAW,CACtD,OAAO,CAAC,UAAU,EAClB;YACC,UAAU,EAAE,EAAE,yBAAyB,EAAE,CAAC,EAAE;SAC5C,CACD,CAAC;QAEF,IAAI,CAAC,UAAU,EAAE,CAAC;YACjB,OAAO,OAAO,CAAC;QAChB,CAAC;QACD,IAAI,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC1C,QAAQ,CAAC,IAAI,CACZ,WAAW,OAAO,CAAC,GAAG,kCAAkC,UAAU,CAAC,GAAG,2BAA2B,UAAU,CAAC,yBAAyB,EAAE,CACvI,CAAC;YAEF,iBAAiB;YACjB,MAAM,qBAAqB,CAAC;gBAC3B,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK;gBACxB,UAAU,EAAE,UAAU,CAAC,yBAAyB;aAChD,CAAC,CAAC;YAEH,iBAAiB;YACjB,MAAM,sBAAsB,GAAG,MAAM,eAAe,CAAC,wBAAwB,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,yBAAyB,CAAC,CAAC;YAEjI,IAAI,sBAAsB,EAAE,CAAC;gBAC5B,KAAK,8BAA8B,CAAC,sBAAsB,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,sBAAsB,CAAC,UAAU,EAAE,CAAC,CAAC;YAC3H,CAAC;YAED,OAAO,GAAG,sBAAsB,IAAI,OAAO,CAAC;YAE5C,cAAc;YACd,MAAM,aAAa,CAAC,qBAAqB,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,yBAAyB,CAAC,CAAC;QAC9F,CAAC;IACF,CAAC;IAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,EAAE,CAAC;QAC7C,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,IAAI,KAAK,IAAI,CAAC,MAAM,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QACjD,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,MAAM,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAEhC,OAAO,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjD,CAAC,EACD,SAAS,CAAC,QAAQ,CAAC,IAAI,EACvB,8BAA8B,CAC9B,CAAC","sourcesContent":["import { type ILivechatDepartment } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatInquiry, LivechatRooms } from '@rocket.chat/models';\n\nimport { notifyOnLivechatInquiryChanged } from '../../../../../app/lib/server/lib/notifyListener';\nimport { online } from '../../../../../app/livechat/server/api/lib/livechat';\nimport { allowAgentSkipQueue } from '../../../../../app/livechat/server/lib/Helper';\nimport { saveQueueInquiry } from '../../../../../app/livechat/server/lib/QueueManager';\nimport { setDepartmentForGuest } from '../../../../../app/livechat/server/lib/departmentsLib';\nimport { settings } from '../../../../../app/settings/server';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { cbLogger } from '../lib/logger';\n\ncallbacks.add(\n\t'livechat.beforeRouteChat',\n\tasync (inquiry, agent) => {\n\t\tif (!inquiry) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\t// check here if department has fallback before queueing\n\t\tif (inquiry?.department && !(await online(inquiry.department, true, true))) {\n\t\t\tconst department = await LivechatDepartment.findOneById<Pick<ILivechatDepartment, '_id' | 'fallbackForwardDepartment'>>(\n\t\t\t\tinquiry.department,\n\t\t\t\t{\n\t\t\t\t\tprojection: { fallbackForwardDepartment: 1 },\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (!department) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\t\t\tif (department.fallbackForwardDepartment) {\n\t\t\t\tcbLogger.info(\n\t\t\t\t\t`Inquiry ${inquiry._id} will be moved from department ${department._id} to fallback department ${department.fallbackForwardDepartment}`,\n\t\t\t\t);\n\n\t\t\t\t// update visitor\n\t\t\t\tawait setDepartmentForGuest({\n\t\t\t\t\ttoken: inquiry?.v?.token,\n\t\t\t\t\tdepartment: department.fallbackForwardDepartment,\n\t\t\t\t});\n\n\t\t\t\t// update inquiry\n\t\t\t\tconst updatedLivechatInquiry = await LivechatInquiry.setDepartmentByInquiryId(inquiry._id, department.fallbackForwardDepartment);\n\n\t\t\t\tif (updatedLivechatInquiry) {\n\t\t\t\t\tvoid notifyOnLivechatInquiryChanged(updatedLivechatInquiry, 'updated', { department: updatedLivechatInquiry.department });\n\t\t\t\t}\n\n\t\t\t\tinquiry = updatedLivechatInquiry ?? inquiry;\n\n\t\t\t\t// update room\n\t\t\t\tawait LivechatRooms.setDepartmentByRoomId(inquiry.rid, department.fallbackForwardDepartment);\n\t\t\t}\n\t\t}\n\n\t\tif (!settings.get('Livechat_waiting_queue')) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\tif (agent && (await allowAgentSkipQueue(agent))) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\tawait saveQueueInquiry(inquiry);\n\n\t\treturn LivechatInquiry.findOneById(inquiry._id);\n\t},\n\tcallbacks.priority.HIGH,\n\t'livechat-before-routing-chat',\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/hooks/beforeRoutingChat.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/hooks/beforeRoutingChat.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/hooks/beforeRoutingChat.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/hooks/beforeRoutingChat.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,eAAe,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEzF,OAAO,EAAE,8BAA8B,EAAE,MAAM,kDAAkD,CAAC;AAClG,OAAO,EAAE,MAAM,EAAE,MAAM,qDAAqD,CAAC;AAC7E,OAAO,EAAE,mBAAmB,EAAE,MAAM,+CAA+C,CAAC;AACpF,OAAO,EAAE,gBAAgB,EAAE,MAAM,qDAAqD,CAAC;AACvF,OAAO,EAAE,qBAAqB,EAAE,MAAM,uDAAuD,CAAC;AAC9F,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAC9D,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAEzC,SAAS,CAAC,GAAG,CACZ,0BAA0B,EAC1B,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE;IACxB,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,wDAAwD;IACxD,IAAI,OAAO,EAAE,UAAU,IAAI,CAAC,CAAC,MAAM,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;QAC5E,MAAM,UAAU,GAAG,MAAM,kBAAkB,CAAC,WAAW,CACtD,OAAO,CAAC,UAAU,EAClB;YACC,UAAU,EAAE,EAAE,yBAAyB,EAAE,CAAC,EAAE;SAC5C,CACD,CAAC;QAEF,IAAI,CAAC,UAAU,EAAE,CAAC;YACjB,OAAO,OAAO,CAAC;QAChB,CAAC;QACD,IAAI,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC1C,QAAQ,CAAC,IAAI,CACZ,WAAW,OAAO,CAAC,GAAG,kCAAkC,UAAU,CAAC,GAAG,2BAA2B,UAAU,CAAC,yBAAyB,EAAE,CACvI,CAAC;YAEF,iBAAiB;YACjB,MAAM,qBAAqB,CAAC;gBAC3B,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK;gBACxB,UAAU,EAAE,UAAU,CAAC,yBAAyB;aAChD,CAAC,CAAC;YAEH,iBAAiB;YACjB,MAAM,sBAAsB,GAAG,MAAM,eAAe,CAAC,wBAAwB,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,yBAAyB,CAAC,CAAC;YAEjI,IAAI,sBAAsB,EAAE,CAAC;gBAC5B,KAAK,8BAA8B,CAAC,sBAAsB,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,sBAAsB,CAAC,UAAU,EAAE,CAAC,CAAC;YAC3H,CAAC;YAED,OAAO,GAAG,sBAAsB,IAAI,OAAO,CAAC;YAE5C,cAAc;YACd,MAAM,aAAa,CAAC,qBAAqB,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,yBAAyB,CAAC,CAAC;QAC9F,CAAC;IACF,CAAC;IAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,EAAE,CAAC;QAC7C,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,IAAI,KAAK,IAAI,CAAC,MAAM,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QACjD,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,MAAM,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAEhC,OAAO,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjD,CAAC,EACD,SAAS,CAAC,QAAQ,CAAC,IAAI,EACvB,8BAA8B,CAC9B,CAAC","sourcesContent":["import { type ILivechatDepartment } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatInquiry, LivechatRooms } from '@rocket.chat/models';\n\nimport { notifyOnLivechatInquiryChanged } from '../../../../../app/lib/server/lib/notifyListener';\nimport { online } from '../../../../../app/livechat/server/api/lib/livechat';\nimport { allowAgentSkipQueue } from '../../../../../app/livechat/server/lib/Helper';\nimport { saveQueueInquiry } from '../../../../../app/livechat/server/lib/QueueManager';\nimport { setDepartmentForGuest } from '../../../../../app/livechat/server/lib/departmentsLib';\nimport { settings } from '../../../../../app/settings/server';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { cbLogger } from '../lib/logger';\n\ncallbacks.add(\n\t'livechat.beforeRouteChat',\n\tasync (inquiry, agent) => {\n\t\tif (!inquiry) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\t// check here if department has fallback before queueing\n\t\tif (inquiry?.department && !(await online(inquiry.department, true, true))) {\n\t\t\tconst department = await LivechatDepartment.findOneById<Pick<ILivechatDepartment, '_id' | 'fallbackForwardDepartment'>>(\n\t\t\t\tinquiry.department,\n\t\t\t\t{\n\t\t\t\t\tprojection: { fallbackForwardDepartment: 1 },\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (!department) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\t\t\tif (department.fallbackForwardDepartment) {\n\t\t\t\tcbLogger.info(\n\t\t\t\t\t`Inquiry ${inquiry._id} will be moved from department ${department._id} to fallback department ${department.fallbackForwardDepartment}`,\n\t\t\t\t);\n\n\t\t\t\t// update visitor\n\t\t\t\tawait setDepartmentForGuest({\n\t\t\t\t\ttoken: inquiry?.v?.token,\n\t\t\t\t\tdepartment: department.fallbackForwardDepartment,\n\t\t\t\t});\n\n\t\t\t\t// update inquiry\n\t\t\t\tconst updatedLivechatInquiry = await LivechatInquiry.setDepartmentByInquiryId(inquiry._id, department.fallbackForwardDepartment);\n\n\t\t\t\tif (updatedLivechatInquiry) {\n\t\t\t\t\tvoid notifyOnLivechatInquiryChanged(updatedLivechatInquiry, 'updated', { department: updatedLivechatInquiry.department });\n\t\t\t\t}\n\n\t\t\t\tinquiry = updatedLivechatInquiry ?? inquiry;\n\n\t\t\t\t// update room\n\t\t\t\tawait LivechatRooms.setDepartmentByRoomId(inquiry.rid, department.fallbackForwardDepartment);\n\t\t\t}\n\t\t}\n\n\t\tif (!settings.get('Livechat_waiting_queue')) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\tif (agent && (await allowAgentSkipQueue(agent))) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\tawait saveQueueInquiry(inquiry);\n\n\t\treturn LivechatInquiry.findOneById(inquiry._id);\n\t},\n\tcallbacks.priority.HIGH,\n\t'livechat-before-routing-chat',\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let LivechatDepartment, LivechatInquiry, LivechatRooms;\n    module.link(\"@rocket.chat/models\", {\n      LivechatDepartment(v) {\n        LivechatDepartment = v;\n      },\n      LivechatInquiry(v) {\n        LivechatInquiry = v;\n      },\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      }\n    }, 0);\n    let notifyOnLivechatInquiryChanged;\n    module.link(\"../../../../../app/lib/server/lib/notifyListener\", {\n      notifyOnLivechatInquiryChanged(v) {\n        notifyOnLivechatInquiryChanged = v;\n      }\n    }, 1);\n    let online;\n    module.link(\"../../../../../app/livechat/server/api/lib/livechat\", {\n      online(v) {\n        online = v;\n      }\n    }, 2);\n    let allowAgentSkipQueue;\n    module.link(\"../../../../../app/livechat/server/lib/Helper\", {\n      allowAgentSkipQueue(v) {\n        allowAgentSkipQueue = v;\n      }\n    }, 3);\n    let saveQueueInquiry;\n    module.link(\"../../../../../app/livechat/server/lib/QueueManager\", {\n      saveQueueInquiry(v) {\n        saveQueueInquiry = v;\n      }\n    }, 4);\n    let setDepartmentForGuest;\n    module.link(\"../../../../../app/livechat/server/lib/departmentsLib\", {\n      setDepartmentForGuest(v) {\n        setDepartmentForGuest = v;\n      }\n    }, 5);\n    let settings;\n    module.link(\"../../../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 6);\n    let callbacks;\n    module.link(\"../../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 7);\n    let cbLogger;\n    module.link(\"../lib/logger\", {\n      cbLogger(v) {\n        cbLogger = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    callbacks.add('livechat.beforeRouteChat', async (inquiry, agent) => {\n      var _inquiry;\n      if (!inquiry) {\n        return inquiry;\n      }\n      // check here if department has fallback before queueing\n      if ((_inquiry = inquiry) !== null && _inquiry !== void 0 && _inquiry.department && !(await online(inquiry.department, true, true))) {\n        const department = await LivechatDepartment.findOneById(inquiry.department, {\n          projection: {\n            fallbackForwardDepartment: 1\n          }\n        });\n        if (!department) {\n          return inquiry;\n        }\n        if (department.fallbackForwardDepartment) {\n          var _inquiry2, _inquiry2$v;\n          cbLogger.info(\"Inquiry \".concat(inquiry._id, \" will be moved from department \").concat(department._id, \" to fallback department \").concat(department.fallbackForwardDepartment));\n          // update visitor\n          await setDepartmentForGuest({\n            token: (_inquiry2 = inquiry) === null || _inquiry2 === void 0 ? void 0 : (_inquiry2$v = _inquiry2.v) === null || _inquiry2$v === void 0 ? void 0 : _inquiry2$v.token,\n            department: department.fallbackForwardDepartment\n          });\n          // update inquiry\n          const updatedLivechatInquiry = await LivechatInquiry.setDepartmentByInquiryId(inquiry._id, department.fallbackForwardDepartment);\n          if (updatedLivechatInquiry) {\n            void notifyOnLivechatInquiryChanged(updatedLivechatInquiry, 'updated', {\n              department: updatedLivechatInquiry.department\n            });\n          }\n          inquiry = updatedLivechatInquiry !== null && updatedLivechatInquiry !== void 0 ? updatedLivechatInquiry : inquiry;\n          // update room\n          await LivechatRooms.setDepartmentByRoomId(inquiry.rid, department.fallbackForwardDepartment);\n        }\n      }\n      if (!settings.get('Livechat_waiting_queue')) {\n        return inquiry;\n      }\n      if (agent && (await allowAgentSkipQueue(agent))) {\n        return inquiry;\n      }\n      await saveQueueInquiry(inquiry);\n      return LivechatInquiry.findOneById(inquiry._id);\n    }, callbacks.priority.HIGH, 'livechat-before-routing-chat');\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["LivechatDepartment","LivechatInquiry","LivechatRooms","module","link","v","notifyOnLivechatInquiryChanged","online","allowAgentSkipQueue","saveQueueInquiry","setDepartmentForGuest","settings","callbacks","cbLogger","__reifyWaitForDeps__","add","inquiry","agent","_inquiry","department","findOneById","projection","fallbackForwardDepartment","_inquiry2","_inquiry2$v","info","concat","_id","token","updatedLivechatInquiry","setDepartmentByInquiryId","setDepartmentByRoomId","rid","get","priority","HIGH","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/hooks/beforeRoutingChat.ts"],"sourcesContent":["import { type ILivechatDepartment } from '@rocket.chat/core-typings';\nimport { LivechatDepartment, LivechatInquiry, LivechatRooms } from '@rocket.chat/models';\n\nimport { notifyOnLivechatInquiryChanged } from '../../../../../app/lib/server/lib/notifyListener';\nimport { online } from '../../../../../app/livechat/server/api/lib/livechat';\nimport { allowAgentSkipQueue } from '../../../../../app/livechat/server/lib/Helper';\nimport { saveQueueInquiry } from '../../../../../app/livechat/server/lib/QueueManager';\nimport { setDepartmentForGuest } from '../../../../../app/livechat/server/lib/departmentsLib';\nimport { settings } from '../../../../../app/settings/server';\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { cbLogger } from '../lib/logger';\n\ncallbacks.add(\n\t'livechat.beforeRouteChat',\n\tasync (inquiry, agent) => {\n\t\tif (!inquiry) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\t// check here if department has fallback before queueing\n\t\tif (inquiry?.department && !(await online(inquiry.department, true, true))) {\n\t\t\tconst department = await LivechatDepartment.findOneById<Pick<ILivechatDepartment, '_id' | 'fallbackForwardDepartment'>>(\n\t\t\t\tinquiry.department,\n\t\t\t\t{\n\t\t\t\t\tprojection: { fallbackForwardDepartment: 1 },\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (!department) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\t\t\tif (department.fallbackForwardDepartment) {\n\t\t\t\tcbLogger.info(\n\t\t\t\t\t`Inquiry ${inquiry._id} will be moved from department ${department._id} to fallback department ${department.fallbackForwardDepartment}`,\n\t\t\t\t);\n\n\t\t\t\t// update visitor\n\t\t\t\tawait setDepartmentForGuest({\n\t\t\t\t\ttoken: inquiry?.v?.token,\n\t\t\t\t\tdepartment: department.fallbackForwardDepartment,\n\t\t\t\t});\n\n\t\t\t\t// update inquiry\n\t\t\t\tconst updatedLivechatInquiry = await LivechatInquiry.setDepartmentByInquiryId(inquiry._id, department.fallbackForwardDepartment);\n\n\t\t\t\tif (updatedLivechatInquiry) {\n\t\t\t\t\tvoid notifyOnLivechatInquiryChanged(updatedLivechatInquiry, 'updated', { department: updatedLivechatInquiry.department });\n\t\t\t\t}\n\n\t\t\t\tinquiry = updatedLivechatInquiry ?? inquiry;\n\n\t\t\t\t// update room\n\t\t\t\tawait LivechatRooms.setDepartmentByRoomId(inquiry.rid, department.fallbackForwardDepartment);\n\t\t\t}\n\t\t}\n\n\t\tif (!settings.get('Livechat_waiting_queue')) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\tif (agent && (await allowAgentSkipQueue(agent))) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\tawait saveQueueInquiry(inquiry);\n\n\t\treturn LivechatInquiry.findOneById(inquiry._id);\n\t},\n\tcallbacks.priority.HIGH,\n\t'livechat-before-routing-chat',\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"fc51dac3a45114c0971ff3d4880ca9c5c688bf3a"}
