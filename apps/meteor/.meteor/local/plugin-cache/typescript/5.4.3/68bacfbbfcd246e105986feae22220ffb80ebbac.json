{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/business-hour/Single.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/business-hour/Single.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/business-hour/Single.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/business-hour/Single.ts","sourceRoot":"","sources":["app/livechat/server/business-hour/Single.ts"],"names":[],"mappings":"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","sourcesContent":["import { ILivechatAgentStatus, LivechatBusinessHourTypes } from '@rocket.chat/core-typings';\nimport { LivechatBusinessHours, Users } from '@rocket.chat/models';\n\nimport type { IBusinessHourBehavior } from './AbstractBusinessHour';\nimport { AbstractBusinessHourBehavior } from './AbstractBusinessHour';\nimport { filterBusinessHoursThatMustBeOpened, makeAgentsUnavailableBasedOnBusinessHour, openBusinessHourDefault } from './Helper';\nimport { notifyOnUserChange } from '../../../lib/server/lib/notifyListener';\nimport { businessHourLogger } from '../lib/logger';\n\nexport class SingleBusinessHourBehavior extends AbstractBusinessHourBehavior implements IBusinessHourBehavior {\n\tasync openBusinessHoursByDayAndHour(): Promise<void> {\n\t\treturn openBusinessHourDefault();\n\t}\n\n\tasync closeBusinessHoursByDayAndHour(day: string, hour: string): Promise<void> {\n\t\tconst businessHoursIds = (\n\t\t\tawait this.BusinessHourRepository.findActiveBusinessHoursToClose(day, hour, LivechatBusinessHourTypes.DEFAULT, {\n\t\t\t\tprojection: { _id: 1 },\n\t\t\t})\n\t\t).map((businessHour) => businessHour._id);\n\t\tawait this.UsersRepository.closeAgentsBusinessHoursByBusinessHourIds(businessHoursIds);\n\n\t\tawait makeAgentsUnavailableBasedOnBusinessHour();\n\t}\n\n\tasync onStartBusinessHours(): Promise<void> {\n\t\treturn openBusinessHourDefault();\n\t}\n\n\tasync onNewAgentCreated(agentId: string): Promise<void> {\n\t\tconst defaultBusinessHour = await LivechatBusinessHours.findOneDefaultBusinessHour();\n\t\tif (!defaultBusinessHour) {\n\t\t\tbusinessHourLogger.debug('No default business hour found for agentId', {\n\t\t\t\tagentId,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst businessHourToOpen = await filterBusinessHoursThatMustBeOpened([defaultBusinessHour]);\n\t\tif (!businessHourToOpen.length) {\n\t\t\tbusinessHourLogger.debug({\n\t\t\t\tmsg: 'No business hours found. Moving agent to NOT_AVAILABLE status',\n\t\t\t\tagentId,\n\t\t\t\tnewStatus: ILivechatAgentStatus.NOT_AVAILABLE,\n\t\t\t});\n\n\t\t\tconst { modifiedCount } = await Users.setLivechatStatus(agentId, ILivechatAgentStatus.NOT_AVAILABLE);\n\t\t\tif (modifiedCount > 0) {\n\t\t\t\tvoid notifyOnUserChange({\n\t\t\t\t\tid: agentId,\n\t\t\t\t\tclientAction: 'updated',\n\t\t\t\t\tdiff: {\n\t\t\t\t\t\tstatusLivechat: ILivechatAgentStatus.NOT_AVAILABLE,\n\t\t\t\t\t\tlivechatStatusSystemModified: false,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tawait Users.addBusinessHourByAgentIds([agentId], defaultBusinessHour._id);\n\n\t\tbusinessHourLogger.debug({\n\t\t\tmsg: 'Business hours found. Moving agent to AVAILABLE status',\n\t\t\tagentId,\n\t\t\tnewStatus: ILivechatAgentStatus.AVAILABLE,\n\t\t});\n\t}\n\n\tafterSaveBusinessHours(): Promise<void> {\n\t\treturn openBusinessHourDefault();\n\t}\n\n\tremoveBusinessHourById(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonAddAgentToDepartment(): Promise<any> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonRemoveAgentFromDepartment(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonRemoveDepartment(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonDepartmentDisabled(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonDepartmentArchived(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/business-hour/Single.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/business-hour/Single.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/business-hour/Single.ts","sourceRoot":"","sources":["app/livechat/server/business-hour/Single.ts"],"names":[],"mappings":"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","sourcesContent":["import { ILivechatAgentStatus, LivechatBusinessHourTypes } from '@rocket.chat/core-typings';\nimport { LivechatBusinessHours, Users } from '@rocket.chat/models';\n\nimport type { IBusinessHourBehavior } from './AbstractBusinessHour';\nimport { AbstractBusinessHourBehavior } from './AbstractBusinessHour';\nimport { filterBusinessHoursThatMustBeOpened, makeAgentsUnavailableBasedOnBusinessHour, openBusinessHourDefault } from './Helper';\nimport { notifyOnUserChange } from '../../../lib/server/lib/notifyListener';\nimport { businessHourLogger } from '../lib/logger';\n\nexport class SingleBusinessHourBehavior extends AbstractBusinessHourBehavior implements IBusinessHourBehavior {\n\tasync openBusinessHoursByDayAndHour(): Promise<void> {\n\t\treturn openBusinessHourDefault();\n\t}\n\n\tasync closeBusinessHoursByDayAndHour(day: string, hour: string): Promise<void> {\n\t\tconst businessHoursIds = (\n\t\t\tawait this.BusinessHourRepository.findActiveBusinessHoursToClose(day, hour, LivechatBusinessHourTypes.DEFAULT, {\n\t\t\t\tprojection: { _id: 1 },\n\t\t\t})\n\t\t).map((businessHour) => businessHour._id);\n\t\tawait this.UsersRepository.closeAgentsBusinessHoursByBusinessHourIds(businessHoursIds);\n\n\t\tawait makeAgentsUnavailableBasedOnBusinessHour();\n\t}\n\n\tasync onStartBusinessHours(): Promise<void> {\n\t\treturn openBusinessHourDefault();\n\t}\n\n\tasync onNewAgentCreated(agentId: string): Promise<void> {\n\t\tconst defaultBusinessHour = await LivechatBusinessHours.findOneDefaultBusinessHour();\n\t\tif (!defaultBusinessHour) {\n\t\t\tbusinessHourLogger.debug('No default business hour found for agentId', {\n\t\t\t\tagentId,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst businessHourToOpen = await filterBusinessHoursThatMustBeOpened([defaultBusinessHour]);\n\t\tif (!businessHourToOpen.length) {\n\t\t\tbusinessHourLogger.debug({\n\t\t\t\tmsg: 'No business hours found. Moving agent to NOT_AVAILABLE status',\n\t\t\t\tagentId,\n\t\t\t\tnewStatus: ILivechatAgentStatus.NOT_AVAILABLE,\n\t\t\t});\n\n\t\t\tconst { modifiedCount } = await Users.setLivechatStatus(agentId, ILivechatAgentStatus.NOT_AVAILABLE);\n\t\t\tif (modifiedCount > 0) {\n\t\t\t\tvoid notifyOnUserChange({\n\t\t\t\t\tid: agentId,\n\t\t\t\t\tclientAction: 'updated',\n\t\t\t\t\tdiff: {\n\t\t\t\t\t\tstatusLivechat: ILivechatAgentStatus.NOT_AVAILABLE,\n\t\t\t\t\t\tlivechatStatusSystemModified: false,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tawait Users.addBusinessHourByAgentIds([agentId], defaultBusinessHour._id);\n\n\t\tbusinessHourLogger.debug({\n\t\t\tmsg: 'Business hours found. Moving agent to AVAILABLE status',\n\t\t\tagentId,\n\t\t\tnewStatus: ILivechatAgentStatus.AVAILABLE,\n\t\t});\n\t}\n\n\tafterSaveBusinessHours(): Promise<void> {\n\t\treturn openBusinessHourDefault();\n\t}\n\n\tremoveBusinessHourById(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonAddAgentToDepartment(): Promise<any> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonRemoveAgentFromDepartment(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonRemoveDepartment(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonDepartmentDisabled(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonDepartmentArchived(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      SingleBusinessHourBehavior: () => SingleBusinessHourBehavior\n    });\n    let ILivechatAgentStatus, LivechatBusinessHourTypes;\n    module.link(\"@rocket.chat/core-typings\", {\n      ILivechatAgentStatus(v) {\n        ILivechatAgentStatus = v;\n      },\n      LivechatBusinessHourTypes(v) {\n        LivechatBusinessHourTypes = v;\n      }\n    }, 0);\n    let LivechatBusinessHours, Users;\n    module.link(\"@rocket.chat/models\", {\n      LivechatBusinessHours(v) {\n        LivechatBusinessHours = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let AbstractBusinessHourBehavior;\n    module.link(\"./AbstractBusinessHour\", {\n      AbstractBusinessHourBehavior(v) {\n        AbstractBusinessHourBehavior = v;\n      }\n    }, 2);\n    let filterBusinessHoursThatMustBeOpened, makeAgentsUnavailableBasedOnBusinessHour, openBusinessHourDefault;\n    module.link(\"./Helper\", {\n      filterBusinessHoursThatMustBeOpened(v) {\n        filterBusinessHoursThatMustBeOpened = v;\n      },\n      makeAgentsUnavailableBasedOnBusinessHour(v) {\n        makeAgentsUnavailableBasedOnBusinessHour = v;\n      },\n      openBusinessHourDefault(v) {\n        openBusinessHourDefault = v;\n      }\n    }, 3);\n    let notifyOnUserChange;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnUserChange(v) {\n        notifyOnUserChange = v;\n      }\n    }, 4);\n    let businessHourLogger;\n    module.link(\"../lib/logger\", {\n      businessHourLogger(v) {\n        businessHourLogger = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class SingleBusinessHourBehavior extends AbstractBusinessHourBehavior {\n      async openBusinessHoursByDayAndHour() {\n        return openBusinessHourDefault();\n      }\n      async closeBusinessHoursByDayAndHour(day, hour) {\n        const businessHoursIds = (await this.BusinessHourRepository.findActiveBusinessHoursToClose(day, hour, LivechatBusinessHourTypes.DEFAULT, {\n          projection: {\n            _id: 1\n          }\n        })).map(businessHour => businessHour._id);\n        await this.UsersRepository.closeAgentsBusinessHoursByBusinessHourIds(businessHoursIds);\n        await makeAgentsUnavailableBasedOnBusinessHour();\n      }\n      async onStartBusinessHours() {\n        return openBusinessHourDefault();\n      }\n      async onNewAgentCreated(agentId) {\n        const defaultBusinessHour = await LivechatBusinessHours.findOneDefaultBusinessHour();\n        if (!defaultBusinessHour) {\n          businessHourLogger.debug('No default business hour found for agentId', {\n            agentId\n          });\n          return;\n        }\n        const businessHourToOpen = await filterBusinessHoursThatMustBeOpened([defaultBusinessHour]);\n        if (!businessHourToOpen.length) {\n          businessHourLogger.debug({\n            msg: 'No business hours found. Moving agent to NOT_AVAILABLE status',\n            agentId,\n            newStatus: ILivechatAgentStatus.NOT_AVAILABLE\n          });\n          const {\n            modifiedCount\n          } = await Users.setLivechatStatus(agentId, ILivechatAgentStatus.NOT_AVAILABLE);\n          if (modifiedCount > 0) {\n            void notifyOnUserChange({\n              id: agentId,\n              clientAction: 'updated',\n              diff: {\n                statusLivechat: ILivechatAgentStatus.NOT_AVAILABLE,\n                livechatStatusSystemModified: false\n              }\n            });\n          }\n          return;\n        }\n        await Users.addBusinessHourByAgentIds([agentId], defaultBusinessHour._id);\n        businessHourLogger.debug({\n          msg: 'Business hours found. Moving agent to AVAILABLE status',\n          agentId,\n          newStatus: ILivechatAgentStatus.AVAILABLE\n        });\n      }\n      afterSaveBusinessHours() {\n        return openBusinessHourDefault();\n      }\n      removeBusinessHourById() {\n        return Promise.resolve();\n      }\n      onAddAgentToDepartment() {\n        return Promise.resolve();\n      }\n      onRemoveAgentFromDepartment() {\n        return Promise.resolve();\n      }\n      onRemoveDepartment() {\n        return Promise.resolve();\n      }\n      onDepartmentDisabled() {\n        return Promise.resolve();\n      }\n      onDepartmentArchived() {\n        return Promise.resolve();\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","SingleBusinessHourBehavior","ILivechatAgentStatus","LivechatBusinessHourTypes","link","v","LivechatBusinessHours","Users","AbstractBusinessHourBehavior","filterBusinessHoursThatMustBeOpened","makeAgentsUnavailableBasedOnBusinessHour","openBusinessHourDefault","notifyOnUserChange","businessHourLogger","__reifyWaitForDeps__","openBusinessHoursByDayAndHour","closeBusinessHoursByDayAndHour","day","hour","businessHoursIds","BusinessHourRepository","findActiveBusinessHoursToClose","DEFAULT","projection","_id","map","businessHour","UsersRepository","closeAgentsBusinessHoursByBusinessHourIds","onStartBusinessHours","onNewAgentCreated","agentId","defaultBusinessHour","findOneDefaultBusinessHour","debug","businessHourToOpen","length","msg","newStatus","NOT_AVAILABLE","modifiedCount","setLivechatStatus","id","clientAction","diff","statusLivechat","livechatStatusSystemModified","addBusinessHourByAgentIds","AVAILABLE","afterSaveBusinessHours","removeBusinessHourById","Promise","resolve","onAddAgentToDepartment","onRemoveAgentFromDepartment","onRemoveDepartment","onDepartmentDisabled","onDepartmentArchived","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/business-hour/Single.ts"],"sourcesContent":["import { ILivechatAgentStatus, LivechatBusinessHourTypes } from '@rocket.chat/core-typings';\nimport { LivechatBusinessHours, Users } from '@rocket.chat/models';\n\nimport type { IBusinessHourBehavior } from './AbstractBusinessHour';\nimport { AbstractBusinessHourBehavior } from './AbstractBusinessHour';\nimport { filterBusinessHoursThatMustBeOpened, makeAgentsUnavailableBasedOnBusinessHour, openBusinessHourDefault } from './Helper';\nimport { notifyOnUserChange } from '../../../lib/server/lib/notifyListener';\nimport { businessHourLogger } from '../lib/logger';\n\nexport class SingleBusinessHourBehavior extends AbstractBusinessHourBehavior implements IBusinessHourBehavior {\n\tasync openBusinessHoursByDayAndHour(): Promise<void> {\n\t\treturn openBusinessHourDefault();\n\t}\n\n\tasync closeBusinessHoursByDayAndHour(day: string, hour: string): Promise<void> {\n\t\tconst businessHoursIds = (\n\t\t\tawait this.BusinessHourRepository.findActiveBusinessHoursToClose(day, hour, LivechatBusinessHourTypes.DEFAULT, {\n\t\t\t\tprojection: { _id: 1 },\n\t\t\t})\n\t\t).map((businessHour) => businessHour._id);\n\t\tawait this.UsersRepository.closeAgentsBusinessHoursByBusinessHourIds(businessHoursIds);\n\n\t\tawait makeAgentsUnavailableBasedOnBusinessHour();\n\t}\n\n\tasync onStartBusinessHours(): Promise<void> {\n\t\treturn openBusinessHourDefault();\n\t}\n\n\tasync onNewAgentCreated(agentId: string): Promise<void> {\n\t\tconst defaultBusinessHour = await LivechatBusinessHours.findOneDefaultBusinessHour();\n\t\tif (!defaultBusinessHour) {\n\t\t\tbusinessHourLogger.debug('No default business hour found for agentId', {\n\t\t\t\tagentId,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst businessHourToOpen = await filterBusinessHoursThatMustBeOpened([defaultBusinessHour]);\n\t\tif (!businessHourToOpen.length) {\n\t\t\tbusinessHourLogger.debug({\n\t\t\t\tmsg: 'No business hours found. Moving agent to NOT_AVAILABLE status',\n\t\t\t\tagentId,\n\t\t\t\tnewStatus: ILivechatAgentStatus.NOT_AVAILABLE,\n\t\t\t});\n\n\t\t\tconst { modifiedCount } = await Users.setLivechatStatus(agentId, ILivechatAgentStatus.NOT_AVAILABLE);\n\t\t\tif (modifiedCount > 0) {\n\t\t\t\tvoid notifyOnUserChange({\n\t\t\t\t\tid: agentId,\n\t\t\t\t\tclientAction: 'updated',\n\t\t\t\t\tdiff: {\n\t\t\t\t\t\tstatusLivechat: ILivechatAgentStatus.NOT_AVAILABLE,\n\t\t\t\t\t\tlivechatStatusSystemModified: false,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tawait Users.addBusinessHourByAgentIds([agentId], defaultBusinessHour._id);\n\n\t\tbusinessHourLogger.debug({\n\t\t\tmsg: 'Business hours found. Moving agent to AVAILABLE status',\n\t\t\tagentId,\n\t\t\tnewStatus: ILivechatAgentStatus.AVAILABLE,\n\t\t});\n\t}\n\n\tafterSaveBusinessHours(): Promise<void> {\n\t\treturn openBusinessHourDefault();\n\t}\n\n\tremoveBusinessHourById(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonAddAgentToDepartment(): Promise<any> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonRemoveAgentFromDepartment(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonRemoveDepartment(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonDepartmentDisabled(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tonDepartmentArchived(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"68bacfbbfcd246e105986feae22220ffb80ebbac"}
