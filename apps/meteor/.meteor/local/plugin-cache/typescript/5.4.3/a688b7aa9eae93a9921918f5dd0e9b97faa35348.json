{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/custom-sounds/server/methods/insertOrUpdateSound.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/custom-sounds/server/methods/insertOrUpdateSound.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/custom-sounds/server/methods/insertOrUpdateSound.ts","inputSourceMap":{"version":3,"file":"app/custom-sounds/server/methods/insertOrUpdateSound.ts","sourceRoot":"","sources":["app/custom-sounds/server/methods/insertOrUpdateSound.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AAEjD,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AACnD,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,uDAAuD,CAAC;AAC3F,OAAO,EAAE,kCAAkC,EAAE,MAAM,0BAA0B,CAAC;AAsB9E,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,mBAAmB,CAAC,SAAS;QAClC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC,EAAE,CAAC;YAC/E,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC1C,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;YAC7B,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,4BAA4B,EAAE;gBACnF,MAAM,EAAE,qBAAqB;gBAC7B,KAAK,EAAE,MAAM;aACb,CAAC,CAAC;QACJ,CAAC;QAED,0DAA0D;QAE1D,kFAAkF;QAClF,0FAA0F;QAC1F,MAAM,cAAc,GAAG,qBAAqB,CAAC;QAE7C,2EAA2E;QAC3E,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAElD,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;YACzC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,kCAAkC,EAAE,GAAG,SAAS,CAAC,IAAI,sBAAsB,EAAE;gBACnG,MAAM,EAAE,qBAAqB;gBAC7B,KAAK,EAAE,SAAS,CAAC,IAAI;gBACrB,KAAK,EAAE,MAAM;aACb,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,eAAe,GAAG,EAAE,CAAC;QAEzB,IAAI,SAAS,CAAC,GAAG,EAAE,CAAC;YACnB,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAC7B,eAAe,GAAG,MAAM,YAAY,CAAC,kBAAkB,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;QAClG,CAAC;aAAM,CAAC;YACP,eAAe,GAAG,MAAM,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;QAC3E,CAAC;QAED,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAChC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,wCAAwC,EAAE,yCAAyC,EAAE;gBAC3G,MAAM,EAAE,qBAAqB;aAC7B,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;YACpB,OAAO,CACN,MAAM,YAAY,CAAC,MAAM,CAAC;gBACzB,IAAI,EAAE,SAAS,CAAC,IAAI;gBACpB,SAAS,EAAE,SAAS,CAAC,SAAS;aAC9B,CAAC,CACF,CAAC,UAAU,CAAC;QACd,CAAC;QAED,eAAe;QACf,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC;YACvB,MAAM,kCAAkC,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC;QACxG,CAAC;QAED,IAAI,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC,YAAY,EAAE,CAAC;YAC/C,MAAM,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;YAC1D,KAAK,GAAG,CAAC,SAAS,CAAC,0BAA0B,EAAE;gBAC9C,SAAS,EAAE;oBACV,GAAG,EAAE,SAAS,CAAC,GAAG;oBAClB,IAAI,EAAE,SAAS,CAAC,IAAI;oBACpB,SAAS,EAAE,SAAS,CAAC,SAAS;iBAC9B;aACD,CAAC,CAAC;QACJ,CAAC;QAED,OAAO,SAAS,CAAC,GAAG,CAAC;IACtB,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { CustomSounds } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { RocketChatFileCustomSoundsInstance } from '../startup/custom-sounds';\n\nexport type ICustomSoundData = {\n\t_id?: string;\n\tname: string;\n\textension: string;\n\tpreviousName?: string;\n\tpreviousSound?: {\n\t\textension?: string;\n\t};\n\tpreviousExtension?: string;\n\tnewFile?: boolean;\n\trandom?: number;\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tinsertOrUpdateSound(soundData: ICustomSoundData): Promise<string>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync insertOrUpdateSound(soundData) {\n\t\tif (!this.userId || !(await hasPermissionAsync(this.userId, 'manage-sounds'))) {\n\t\t\tthrow new Meteor.Error('not_authorized');\n\t\t}\n\n\t\tif (!soundData.name?.trim()) {\n\t\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\t\tmethod: 'insertOrUpdateSound',\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\t// let nameValidation = new RegExp('^[0-9a-zA-Z-_+;.]+$');\n\n\t\t// allow all characters except colon, whitespace, comma, >, <, &, \", ', /, \\, (, )\n\t\t// more practical than allowing specific sets of characters; also allows foreign languages\n\t\tconst nameValidation = /[\\s,:><&\"'\\/\\\\\\(\\)]/;\n\n\t\t// silently strip colon; this allows for uploading :soundname: as soundname\n\t\tsoundData.name = soundData.name.replace(/:/g, '');\n\n\t\tif (nameValidation.test(soundData.name)) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${soundData.name} is not a valid name`, {\n\t\t\t\tmethod: 'insertOrUpdateSound',\n\t\t\t\tinput: soundData.name,\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\tlet matchingResults = [];\n\n\t\tif (soundData._id) {\n\t\t\tcheck(soundData._id, String);\n\t\t\tmatchingResults = await CustomSounds.findByNameExceptId(soundData.name, soundData._id).toArray();\n\t\t} else {\n\t\t\tmatchingResults = await CustomSounds.findByName(soundData.name).toArray();\n\t\t}\n\n\t\tif (matchingResults.length > 0) {\n\t\t\tthrow new Meteor.Error('Custom_Sound_Error_Name_Already_In_Use', 'The custom sound name is already in use', {\n\t\t\t\tmethod: 'insertOrUpdateSound',\n\t\t\t});\n\t\t}\n\n\t\tif (!soundData._id) {\n\t\t\treturn (\n\t\t\t\tawait CustomSounds.create({\n\t\t\t\t\tname: soundData.name,\n\t\t\t\t\textension: soundData.extension,\n\t\t\t\t})\n\t\t\t).insertedId;\n\t\t}\n\n\t\t// update sound\n\t\tif (soundData.newFile) {\n\t\t\tawait RocketChatFileCustomSoundsInstance.deleteFile(`${soundData._id}.${soundData.previousExtension}`);\n\t\t}\n\n\t\tif (soundData.name !== soundData.previousName) {\n\t\t\tawait CustomSounds.setName(soundData._id, soundData.name);\n\t\t\tvoid api.broadcast('notify.updateCustomSound', {\n\t\t\t\tsoundData: {\n\t\t\t\t\t_id: soundData._id,\n\t\t\t\t\tname: soundData.name,\n\t\t\t\t\textension: soundData.extension,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\treturn soundData._id;\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/custom-sounds/server/methods/insertOrUpdateSound.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/custom-sounds/server/methods/insertOrUpdateSound.ts","inputSourceMap":{"version":3,"file":"app/custom-sounds/server/methods/insertOrUpdateSound.ts","sourceRoot":"","sources":["app/custom-sounds/server/methods/insertOrUpdateSound.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { CustomSounds } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { RocketChatFileCustomSoundsInstance } from '../startup/custom-sounds';\n\nexport type ICustomSoundData = {\n\t_id?: string;\n\tname: string;\n\textension: string;\n\tpreviousName?: string;\n\tpreviousSound?: {\n\t\textension?: string;\n\t};\n\tpreviousExtension?: string;\n\tnewFile?: boolean;\n\trandom?: number;\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tinsertOrUpdateSound(soundData: ICustomSoundData): Promise<string>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync insertOrUpdateSound(soundData) {\n\t\tif (!this.userId || !(await hasPermissionAsync(this.userId, 'manage-sounds'))) {\n\t\t\tthrow new Meteor.Error('not_authorized');\n\t\t}\n\n\t\tif (!soundData.name?.trim()) {\n\t\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\t\tmethod: 'insertOrUpdateSound',\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\t// let nameValidation = new RegExp('^[0-9a-zA-Z-_+;.]+$');\n\n\t\t// allow all characters except colon, whitespace, comma, >, <, &, \", ', /, \\, (, )\n\t\t// more practical than allowing specific sets of characters; also allows foreign languages\n\t\tconst nameValidation = /[\\s,:><&\"'\\/\\\\\\(\\)]/;\n\n\t\t// silently strip colon; this allows for uploading :soundname: as soundname\n\t\tsoundData.name = soundData.name.replace(/:/g, '');\n\n\t\tif (nameValidation.test(soundData.name)) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${soundData.name} is not a valid name`, {\n\t\t\t\tmethod: 'insertOrUpdateSound',\n\t\t\t\tinput: soundData.name,\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\tlet matchingResults = [];\n\n\t\tif (soundData._id) {\n\t\t\tcheck(soundData._id, String);\n\t\t\tmatchingResults = await CustomSounds.findByNameExceptId(soundData.name, soundData._id).toArray();\n\t\t} else {\n\t\t\tmatchingResults = await CustomSounds.findByName(soundData.name).toArray();\n\t\t}\n\n\t\tif (matchingResults.length > 0) {\n\t\t\tthrow new Meteor.Error('Custom_Sound_Error_Name_Already_In_Use', 'The custom sound name is already in use', {\n\t\t\t\tmethod: 'insertOrUpdateSound',\n\t\t\t});\n\t\t}\n\n\t\tif (!soundData._id) {\n\t\t\treturn (\n\t\t\t\tawait CustomSounds.create({\n\t\t\t\t\tname: soundData.name,\n\t\t\t\t\textension: soundData.extension,\n\t\t\t\t})\n\t\t\t).insertedId;\n\t\t}\n\n\t\t// update sound\n\t\tif (soundData.newFile) {\n\t\t\tawait RocketChatFileCustomSoundsInstance.deleteFile(`${soundData._id}.${soundData.previousExtension}`);\n\t\t}\n\n\t\tif (soundData.name !== soundData.previousName) {\n\t\t\tawait CustomSounds.setName(soundData._id, soundData.name);\n\t\t\tvoid api.broadcast('notify.updateCustomSound', {\n\t\t\t\tsoundData: {\n\t\t\t\t\t_id: soundData._id,\n\t\t\t\t\tname: soundData.name,\n\t\t\t\t\textension: soundData.extension,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\treturn soundData._id;\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let CustomSounds;\n    module.link(\"@rocket.chat/models\", {\n      CustomSounds(v) {\n        CustomSounds = v;\n      }\n    }, 1);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 4);\n    let RocketChatFileCustomSoundsInstance;\n    module.link(\"../startup/custom-sounds\", {\n      RocketChatFileCustomSoundsInstance(v) {\n        RocketChatFileCustomSoundsInstance = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async insertOrUpdateSound(soundData) {\n        var _soundData$name;\n        if (!this.userId || !(await hasPermissionAsync(this.userId, 'manage-sounds'))) {\n          throw new Meteor.Error('not_authorized');\n        }\n        if (!((_soundData$name = soundData.name) !== null && _soundData$name !== void 0 && _soundData$name.trim())) {\n          throw new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n            method: 'insertOrUpdateSound',\n            field: 'Name'\n          });\n        }\n        // let nameValidation = new RegExp('^[0-9a-zA-Z-_+;.]+$');\n        // allow all characters except colon, whitespace, comma, >, <, &, \", ', /, \\, (, )\n        // more practical than allowing specific sets of characters; also allows foreign languages\n        const nameValidation = /[\\s,:><&\"'\\/\\\\\\(\\)]/;\n        // silently strip colon; this allows for uploading :soundname: as soundname\n        soundData.name = soundData.name.replace(/:/g, '');\n        if (nameValidation.test(soundData.name)) {\n          throw new Meteor.Error('error-input-is-not-a-valid-field', \"\".concat(soundData.name, \" is not a valid name\"), {\n            method: 'insertOrUpdateSound',\n            input: soundData.name,\n            field: 'Name'\n          });\n        }\n        let matchingResults = [];\n        if (soundData._id) {\n          check(soundData._id, String);\n          matchingResults = await CustomSounds.findByNameExceptId(soundData.name, soundData._id).toArray();\n        } else {\n          matchingResults = await CustomSounds.findByName(soundData.name).toArray();\n        }\n        if (matchingResults.length > 0) {\n          throw new Meteor.Error('Custom_Sound_Error_Name_Already_In_Use', 'The custom sound name is already in use', {\n            method: 'insertOrUpdateSound'\n          });\n        }\n        if (!soundData._id) {\n          return (await CustomSounds.create({\n            name: soundData.name,\n            extension: soundData.extension\n          })).insertedId;\n        }\n        // update sound\n        if (soundData.newFile) {\n          await RocketChatFileCustomSoundsInstance.deleteFile(\"\".concat(soundData._id, \".\").concat(soundData.previousExtension));\n        }\n        if (soundData.name !== soundData.previousName) {\n          await CustomSounds.setName(soundData._id, soundData.name);\n          void api.broadcast('notify.updateCustomSound', {\n            soundData: {\n              _id: soundData._id,\n              name: soundData.name,\n              extension: soundData.extension\n            }\n          });\n        }\n        return soundData._id;\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["api","module","link","v","CustomSounds","check","Meteor","hasPermissionAsync","RocketChatFileCustomSoundsInstance","__reifyWaitForDeps__","methods","insertOrUpdateSound","soundData","_soundData$name","userId","Error","name","trim","method","field","nameValidation","replace","test","concat","input","matchingResults","_id","String","findByNameExceptId","toArray","findByName","length","create","extension","insertedId","newFile","deleteFile","previousExtension","previousName","setName","broadcast","__reify_async_result__","_reifyError","self","async"],"sources":["app/custom-sounds/server/methods/insertOrUpdateSound.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { CustomSounds } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { RocketChatFileCustomSoundsInstance } from '../startup/custom-sounds';\n\nexport type ICustomSoundData = {\n\t_id?: string;\n\tname: string;\n\textension: string;\n\tpreviousName?: string;\n\tpreviousSound?: {\n\t\textension?: string;\n\t};\n\tpreviousExtension?: string;\n\tnewFile?: boolean;\n\trandom?: number;\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tinsertOrUpdateSound(soundData: ICustomSoundData): Promise<string>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync insertOrUpdateSound(soundData) {\n\t\tif (!this.userId || !(await hasPermissionAsync(this.userId, 'manage-sounds'))) {\n\t\t\tthrow new Meteor.Error('not_authorized');\n\t\t}\n\n\t\tif (!soundData.name?.trim()) {\n\t\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\t\tmethod: 'insertOrUpdateSound',\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\t// let nameValidation = new RegExp('^[0-9a-zA-Z-_+;.]+$');\n\n\t\t// allow all characters except colon, whitespace, comma, >, <, &, \", ', /, \\, (, )\n\t\t// more practical than allowing specific sets of characters; also allows foreign languages\n\t\tconst nameValidation = /[\\s,:><&\"'\\/\\\\\\(\\)]/;\n\n\t\t// silently strip colon; this allows for uploading :soundname: as soundname\n\t\tsoundData.name = soundData.name.replace(/:/g, '');\n\n\t\tif (nameValidation.test(soundData.name)) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${soundData.name} is not a valid name`, {\n\t\t\t\tmethod: 'insertOrUpdateSound',\n\t\t\t\tinput: soundData.name,\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\tlet matchingResults = [];\n\n\t\tif (soundData._id) {\n\t\t\tcheck(soundData._id, String);\n\t\t\tmatchingResults = await CustomSounds.findByNameExceptId(soundData.name, soundData._id).toArray();\n\t\t} else {\n\t\t\tmatchingResults = await CustomSounds.findByName(soundData.name).toArray();\n\t\t}\n\n\t\tif (matchingResults.length > 0) {\n\t\t\tthrow new Meteor.Error('Custom_Sound_Error_Name_Already_In_Use', 'The custom sound name is already in use', {\n\t\t\t\tmethod: 'insertOrUpdateSound',\n\t\t\t});\n\t\t}\n\n\t\tif (!soundData._id) {\n\t\t\treturn (\n\t\t\t\tawait CustomSounds.create({\n\t\t\t\t\tname: soundData.name,\n\t\t\t\t\textension: soundData.extension,\n\t\t\t\t})\n\t\t\t).insertedId;\n\t\t}\n\n\t\t// update sound\n\t\tif (soundData.newFile) {\n\t\t\tawait RocketChatFileCustomSoundsInstance.deleteFile(`${soundData._id}.${soundData.previousExtension}`);\n\t\t}\n\n\t\tif (soundData.name !== soundData.previousName) {\n\t\t\tawait CustomSounds.setName(soundData._id, soundData.name);\n\t\t\tvoid api.broadcast('notify.updateCustomSound', {\n\t\t\t\tsoundData: {\n\t\t\t\t\t_id: soundData._id,\n\t\t\t\t\tname: soundData.name,\n\t\t\t\t\textension: soundData.extension,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\treturn soundData._id;\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a688b7aa9eae93a9921918f5dd0e9b97faa35348"}
