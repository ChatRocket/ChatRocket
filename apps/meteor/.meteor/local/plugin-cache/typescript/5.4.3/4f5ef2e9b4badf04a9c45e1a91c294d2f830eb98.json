{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/dataExport/sendViaEmail.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/dataExport/sendViaEmail.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/dataExport/sendViaEmail.ts","inputSourceMap":{"version":3,"file":"server/lib/dataExport/sendViaEmail.ts","sourceRoot":"","sources":["server/lib/dataExport/sendViaEmail.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { Messages, Users } from '@rocket.chat/models';\nimport moment from 'moment';\n\nimport * as Mailer from '../../../app/mailer/server/api';\nimport { settings } from '../../../app/settings/server';\nimport { Message } from '../../../app/ui-utils/server';\nimport { getMomentLocale } from '../getMomentLocale';\n\nexport async function sendViaEmail(\n\tdata: {\n\t\trid: string;\n\t\ttoUsers: string[];\n\t\ttoEmails: string[];\n\t\tsubject: string;\n\t\tmessages: string[];\n\t\tlanguage: string;\n\t},\n\tuser: IUser,\n): Promise<{\n\tmissing: string[];\n}> {\n\tconst emails = data.toEmails.map((email) => email.trim()).filter(Boolean);\n\n\tconst missing = [...data.toUsers].filter(Boolean);\n\n\t(\n\t\tawait Users.findUsersByUsernames(data.toUsers, {\n\t\t\tprojection: { 'username': 1, 'emails.address': 1 },\n\t\t}).toArray()\n\t).forEach((user: IUser) => {\n\t\tconst emailAddress = user.emails?.[0].address;\n\n\t\tif (!emailAddress) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!Mailer.checkAddressFormat(emailAddress)) {\n\t\t\tthrow new Error('error-invalid-email');\n\t\t}\n\n\t\tconst found = missing.indexOf(String(user.username));\n\t\tif (found !== -1) {\n\t\t\tmissing.splice(found, 1);\n\t\t}\n\n\t\temails.push(emailAddress);\n\t});\n\n\tconst email = user.emails?.[0]?.address;\n\tconst lang = data.language || user.language || 'en';\n\n\tconst localMoment = moment();\n\n\tif (lang !== 'en') {\n\t\tconst localeFn = await getMomentLocale(lang);\n\t\tif (localeFn) {\n\t\t\tFunction(localeFn).call({ moment });\n\t\t\tlocalMoment.locale(lang);\n\t\t}\n\t}\n\n\tconst html = (\n\t\tawait Messages.findByRoomIdAndMessageIds(data.rid, data.messages, {\n\t\t\tsort: { ts: 1 },\n\t\t}).toArray()\n\t)\n\t\t.map((message: IMessage) => {\n\t\t\tconst dateTime = moment(message.ts).locale(lang).format('L LT');\n\t\t\treturn `<p style='margin-bottom: 5px'><b>${\n\t\t\t\tmessage.u.username\n\t\t\t}</b> <span style='color: #aaa; font-size: 12px'>${dateTime}</span><br/>${Message.parse(message, data.language)}</p>`;\n\t\t})\n\t\t.join('');\n\n\tawait Mailer.send({\n\t\tto: emails,\n\t\tfrom: settings.get('From_Email'),\n\t\treplyTo: email,\n\t\tsubject: data.subject,\n\t\thtml,\n\t});\n\n\treturn { missing };\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/dataExport/sendViaEmail.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/dataExport/sendViaEmail.ts","inputSourceMap":{"version":3,"file":"server/lib/dataExport/sendViaEmail.ts","sourceRoot":"","sources":["server/lib/dataExport/sendViaEmail.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { Messages, Users } from '@rocket.chat/models';\nimport moment from 'moment';\n\nimport * as Mailer from '../../../app/mailer/server/api';\nimport { settings } from '../../../app/settings/server';\nimport { Message } from '../../../app/ui-utils/server';\nimport { getMomentLocale } from '../getMomentLocale';\n\nexport async function sendViaEmail(\n\tdata: {\n\t\trid: string;\n\t\ttoUsers: string[];\n\t\ttoEmails: string[];\n\t\tsubject: string;\n\t\tmessages: string[];\n\t\tlanguage: string;\n\t},\n\tuser: IUser,\n): Promise<{\n\tmissing: string[];\n}> {\n\tconst emails = data.toEmails.map((email) => email.trim()).filter(Boolean);\n\n\tconst missing = [...data.toUsers].filter(Boolean);\n\n\t(\n\t\tawait Users.findUsersByUsernames(data.toUsers, {\n\t\t\tprojection: { 'username': 1, 'emails.address': 1 },\n\t\t}).toArray()\n\t).forEach((user: IUser) => {\n\t\tconst emailAddress = user.emails?.[0].address;\n\n\t\tif (!emailAddress) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!Mailer.checkAddressFormat(emailAddress)) {\n\t\t\tthrow new Error('error-invalid-email');\n\t\t}\n\n\t\tconst found = missing.indexOf(String(user.username));\n\t\tif (found !== -1) {\n\t\t\tmissing.splice(found, 1);\n\t\t}\n\n\t\temails.push(emailAddress);\n\t});\n\n\tconst email = user.emails?.[0]?.address;\n\tconst lang = data.language || user.language || 'en';\n\n\tconst localMoment = moment();\n\n\tif (lang !== 'en') {\n\t\tconst localeFn = await getMomentLocale(lang);\n\t\tif (localeFn) {\n\t\t\tFunction(localeFn).call({ moment });\n\t\t\tlocalMoment.locale(lang);\n\t\t}\n\t}\n\n\tconst html = (\n\t\tawait Messages.findByRoomIdAndMessageIds(data.rid, data.messages, {\n\t\t\tsort: { ts: 1 },\n\t\t}).toArray()\n\t)\n\t\t.map((message: IMessage) => {\n\t\t\tconst dateTime = moment(message.ts).locale(lang).format('L LT');\n\t\t\treturn `<p style='margin-bottom: 5px'><b>${\n\t\t\t\tmessage.u.username\n\t\t\t}</b> <span style='color: #aaa; font-size: 12px'>${dateTime}</span><br/>${Message.parse(message, data.language)}</p>`;\n\t\t})\n\t\t.join('');\n\n\tawait Mailer.send({\n\t\tto: emails,\n\t\tfrom: settings.get('From_Email'),\n\t\treplyTo: email,\n\t\tsubject: data.subject,\n\t\thtml,\n\t});\n\n\treturn { missing };\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      sendViaEmail: () => sendViaEmail\n    });\n    let Messages, Users;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let moment;\n    module.link(\"moment\", {\n      default(v) {\n        moment = v;\n      }\n    }, 1);\n    let Mailer;\n    module.link(\"../../../app/mailer/server/api\", {\n      \"*\"(v) {\n        Mailer = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    let Message;\n    module.link(\"../../../app/ui-utils/server\", {\n      Message(v) {\n        Message = v;\n      }\n    }, 4);\n    let getMomentLocale;\n    module.link(\"../getMomentLocale\", {\n      getMomentLocale(v) {\n        getMomentLocale = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function sendViaEmail(data, user) {\n      var _user$emails2, _user$emails2$;\n      const emails = data.toEmails.map(email => email.trim()).filter(Boolean);\n      const missing = [...data.toUsers].filter(Boolean);\n      (await Users.findUsersByUsernames(data.toUsers, {\n        projection: {\n          'username': 1,\n          'emails.address': 1\n        }\n      }).toArray()).forEach(user => {\n        var _user$emails;\n        const emailAddress = (_user$emails = user.emails) === null || _user$emails === void 0 ? void 0 : _user$emails[0].address;\n        if (!emailAddress) {\n          return;\n        }\n        if (!Mailer.checkAddressFormat(emailAddress)) {\n          throw new Error('error-invalid-email');\n        }\n        const found = missing.indexOf(String(user.username));\n        if (found !== -1) {\n          missing.splice(found, 1);\n        }\n        emails.push(emailAddress);\n      });\n      const email = (_user$emails2 = user.emails) === null || _user$emails2 === void 0 ? void 0 : (_user$emails2$ = _user$emails2[0]) === null || _user$emails2$ === void 0 ? void 0 : _user$emails2$.address;\n      const lang = data.language || user.language || 'en';\n      const localMoment = moment();\n      if (lang !== 'en') {\n        const localeFn = await getMomentLocale(lang);\n        if (localeFn) {\n          Function(localeFn).call({\n            moment\n          });\n          localMoment.locale(lang);\n        }\n      }\n      const html = (await Messages.findByRoomIdAndMessageIds(data.rid, data.messages, {\n        sort: {\n          ts: 1\n        }\n      }).toArray()).map(message => {\n        const dateTime = moment(message.ts).locale(lang).format('L LT');\n        return \"<p style='margin-bottom: 5px'><b>\".concat(message.u.username, \"</b> <span style='color: #aaa; font-size: 12px'>\").concat(dateTime, \"</span><br/>\").concat(Message.parse(message, data.language), \"</p>\");\n      }).join('');\n      await Mailer.send({\n        to: emails,\n        from: settings.get('From_Email'),\n        replyTo: email,\n        subject: data.subject,\n        html\n      });\n      return {\n        missing\n      };\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","sendViaEmail","Messages","Users","link","v","moment","default","Mailer","*","settings","Message","getMomentLocale","__reifyWaitForDeps__","data","user","_user$emails2","_user$emails2$","emails","toEmails","map","email","trim","filter","Boolean","missing","toUsers","findUsersByUsernames","projection","toArray","forEach","_user$emails","emailAddress","address","checkAddressFormat","Error","found","indexOf","String","username","splice","push","lang","language","localMoment","localeFn","Function","call","locale","html","findByRoomIdAndMessageIds","rid","messages","sort","ts","message","dateTime","format","concat","u","parse","join","send","to","from","get","replyTo","subject","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/dataExport/sendViaEmail.ts"],"sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { Messages, Users } from '@rocket.chat/models';\nimport moment from 'moment';\n\nimport * as Mailer from '../../../app/mailer/server/api';\nimport { settings } from '../../../app/settings/server';\nimport { Message } from '../../../app/ui-utils/server';\nimport { getMomentLocale } from '../getMomentLocale';\n\nexport async function sendViaEmail(\n\tdata: {\n\t\trid: string;\n\t\ttoUsers: string[];\n\t\ttoEmails: string[];\n\t\tsubject: string;\n\t\tmessages: string[];\n\t\tlanguage: string;\n\t},\n\tuser: IUser,\n): Promise<{\n\tmissing: string[];\n}> {\n\tconst emails = data.toEmails.map((email) => email.trim()).filter(Boolean);\n\n\tconst missing = [...data.toUsers].filter(Boolean);\n\n\t(\n\t\tawait Users.findUsersByUsernames(data.toUsers, {\n\t\t\tprojection: { 'username': 1, 'emails.address': 1 },\n\t\t}).toArray()\n\t).forEach((user: IUser) => {\n\t\tconst emailAddress = user.emails?.[0].address;\n\n\t\tif (!emailAddress) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!Mailer.checkAddressFormat(emailAddress)) {\n\t\t\tthrow new Error('error-invalid-email');\n\t\t}\n\n\t\tconst found = missing.indexOf(String(user.username));\n\t\tif (found !== -1) {\n\t\t\tmissing.splice(found, 1);\n\t\t}\n\n\t\temails.push(emailAddress);\n\t});\n\n\tconst email = user.emails?.[0]?.address;\n\tconst lang = data.language || user.language || 'en';\n\n\tconst localMoment = moment();\n\n\tif (lang !== 'en') {\n\t\tconst localeFn = await getMomentLocale(lang);\n\t\tif (localeFn) {\n\t\t\tFunction(localeFn).call({ moment });\n\t\t\tlocalMoment.locale(lang);\n\t\t}\n\t}\n\n\tconst html = (\n\t\tawait Messages.findByRoomIdAndMessageIds(data.rid, data.messages, {\n\t\t\tsort: { ts: 1 },\n\t\t}).toArray()\n\t)\n\t\t.map((message: IMessage) => {\n\t\t\tconst dateTime = moment(message.ts).locale(lang).format('L LT');\n\t\t\treturn `<p style='margin-bottom: 5px'><b>${\n\t\t\t\tmessage.u.username\n\t\t\t}</b> <span style='color: #aaa; font-size: 12px'>${dateTime}</span><br/>${Message.parse(message, data.language)}</p>`;\n\t\t})\n\t\t.join('');\n\n\tawait Mailer.send({\n\t\tto: emails,\n\t\tfrom: settings.get('From_Email'),\n\t\treplyTo: email,\n\t\tsubject: data.subject,\n\t\thtml,\n\t});\n\n\treturn { missing };\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"4f5ef2e9b4badf04a9c45e1a91c294d2f830eb98"}
