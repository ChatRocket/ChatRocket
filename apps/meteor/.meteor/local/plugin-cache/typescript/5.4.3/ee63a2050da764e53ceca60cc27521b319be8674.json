{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/methods/getReadReceipts.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/methods/getReadReceipts.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/methods/getReadReceipts.ts","inputSourceMap":{"version":3,"file":"ee/server/methods/getReadReceipts.ts","sourceRoot":"","sources":["ee/server/methods/getReadReceipts.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,oBAAoB,EAAE,MAAM,2DAA2D,CAAC;AACjG,OAAO,EAAE,WAAW,EAAE,MAAM,yCAAyC,CAAC;AAStE,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,eAAe,CAAC,EAAE,SAAS,EAAE;QAClC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,sBAAsB,CAAC,EAAE,CAAC;YAChD,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,0BAA0B,EAAE,+BAA+B,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,CAAC;QACpH,CAAC;QAED,IAAI,CAAC,SAAS,EAAE,CAAC;YAChB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,4CAA4C,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAC9H,CAAC;QAED,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAEzB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAC7F,CAAC;QAED,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,iBAAiB,EAAE;gBAClE,MAAM,EAAE,iBAAiB;aACzB,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,CAAC,MAAM,oBAAoB,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;YACrD,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAC7F,CAAC;QAED,OAAO,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { ReadReceipt as ReadReceiptType, IMessage } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { License } from '@rocket.chat/license';\nimport { Messages } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomIdAsync } from '../../../app/authorization/server/functions/canAccessRoom';\nimport { ReadReceipt } from '../lib/message-read-receipt/ReadReceipt';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tgetReadReceipts(options: { messageId: IMessage['_id'] }): ReadReceiptType[];\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync getReadReceipts({ messageId }) {\n\t\tif (!License.hasModule('message-read-receipt')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'This is an enterprise feature', { method: 'getReadReceipts' });\n\t\t}\n\n\t\tif (!messageId) {\n\t\t\tthrow new Meteor.Error('error-invalid-message', \"The required 'messageId' param is missing.\", { method: 'getReadReceipts' });\n\t\t}\n\n\t\tcheck(messageId, String);\n\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'getReadReceipts' });\n\t\t}\n\n\t\tconst message = await Messages.findOneById(messageId);\n\t\tif (!message) {\n\t\t\tthrow new Meteor.Error('error-invalid-message', 'Invalid message', {\n\t\t\t\tmethod: 'getReadReceipts',\n\t\t\t});\n\t\t}\n\n\t\tif (!(await canAccessRoomIdAsync(message.rid, uid))) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'getReadReceipts' });\n\t\t}\n\n\t\treturn ReadReceipt.getReceipts(message);\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/methods/getReadReceipts.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/methods/getReadReceipts.ts","inputSourceMap":{"version":3,"file":"ee/server/methods/getReadReceipts.ts","sourceRoot":"","sources":["ee/server/methods/getReadReceipts.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,oBAAoB,EAAE,MAAM,2DAA2D,CAAC;AACjG,OAAO,EAAE,WAAW,EAAE,MAAM,yCAAyC,CAAC;AAStE,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,eAAe,CAAC,EAAE,SAAS,EAAE;QAClC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,sBAAsB,CAAC,EAAE,CAAC;YAChD,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,0BAA0B,EAAE,+BAA+B,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,CAAC;QACpH,CAAC;QAED,IAAI,CAAC,SAAS,EAAE,CAAC;YAChB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,4CAA4C,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAC9H,CAAC;QAED,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QAEzB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAC7F,CAAC;QAED,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,iBAAiB,EAAE;gBAClE,MAAM,EAAE,iBAAiB;aACzB,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,CAAC,MAAM,oBAAoB,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;YACrD,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAC7F,CAAC;QAED,OAAO,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { ReadReceipt as ReadReceiptType, IMessage } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { License } from '@rocket.chat/license';\nimport { Messages } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomIdAsync } from '../../../app/authorization/server/functions/canAccessRoom';\nimport { ReadReceipt } from '../lib/message-read-receipt/ReadReceipt';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tgetReadReceipts(options: { messageId: IMessage['_id'] }): ReadReceiptType[];\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync getReadReceipts({ messageId }) {\n\t\tif (!License.hasModule('message-read-receipt')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'This is an enterprise feature', { method: 'getReadReceipts' });\n\t\t}\n\n\t\tif (!messageId) {\n\t\t\tthrow new Meteor.Error('error-invalid-message', \"The required 'messageId' param is missing.\", { method: 'getReadReceipts' });\n\t\t}\n\n\t\tcheck(messageId, String);\n\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'getReadReceipts' });\n\t\t}\n\n\t\tconst message = await Messages.findOneById(messageId);\n\t\tif (!message) {\n\t\t\tthrow new Meteor.Error('error-invalid-message', 'Invalid message', {\n\t\t\t\tmethod: 'getReadReceipts',\n\t\t\t});\n\t\t}\n\n\t\tif (!(await canAccessRoomIdAsync(message.rid, uid))) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'getReadReceipts' });\n\t\t}\n\n\t\treturn ReadReceipt.getReceipts(message);\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let License;\n    module.link(\"@rocket.chat/license\", {\n      License(v) {\n        License = v;\n      }\n    }, 0);\n    let Messages;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      }\n    }, 1);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let canAccessRoomIdAsync;\n    module.link(\"../../../app/authorization/server/functions/canAccessRoom\", {\n      canAccessRoomIdAsync(v) {\n        canAccessRoomIdAsync = v;\n      }\n    }, 4);\n    let ReadReceipt;\n    module.link(\"../lib/message-read-receipt/ReadReceipt\", {\n      ReadReceipt(v) {\n        ReadReceipt = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async getReadReceipts(_ref) {\n        let {\n          messageId\n        } = _ref;\n        if (!License.hasModule('message-read-receipt')) {\n          throw new Meteor.Error('error-action-not-allowed', 'This is an enterprise feature', {\n            method: 'getReadReceipts'\n          });\n        }\n        if (!messageId) {\n          throw new Meteor.Error('error-invalid-message', \"The required 'messageId' param is missing.\", {\n            method: 'getReadReceipts'\n          });\n        }\n        check(messageId, String);\n        const uid = Meteor.userId();\n        if (!uid) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'getReadReceipts'\n          });\n        }\n        const message = await Messages.findOneById(messageId);\n        if (!message) {\n          throw new Meteor.Error('error-invalid-message', 'Invalid message', {\n            method: 'getReadReceipts'\n          });\n        }\n        if (!(await canAccessRoomIdAsync(message.rid, uid))) {\n          throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n            method: 'getReadReceipts'\n          });\n        }\n        return ReadReceipt.getReceipts(message);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["License","module","link","v","Messages","check","Meteor","canAccessRoomIdAsync","ReadReceipt","__reifyWaitForDeps__","methods","getReadReceipts","_ref","messageId","hasModule","Error","method","String","uid","userId","message","findOneById","rid","getReceipts","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/methods/getReadReceipts.ts"],"sourcesContent":["import type { ReadReceipt as ReadReceiptType, IMessage } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { License } from '@rocket.chat/license';\nimport { Messages } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomIdAsync } from '../../../app/authorization/server/functions/canAccessRoom';\nimport { ReadReceipt } from '../lib/message-read-receipt/ReadReceipt';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tgetReadReceipts(options: { messageId: IMessage['_id'] }): ReadReceiptType[];\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync getReadReceipts({ messageId }) {\n\t\tif (!License.hasModule('message-read-receipt')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'This is an enterprise feature', { method: 'getReadReceipts' });\n\t\t}\n\n\t\tif (!messageId) {\n\t\t\tthrow new Meteor.Error('error-invalid-message', \"The required 'messageId' param is missing.\", { method: 'getReadReceipts' });\n\t\t}\n\n\t\tcheck(messageId, String);\n\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'getReadReceipts' });\n\t\t}\n\n\t\tconst message = await Messages.findOneById(messageId);\n\t\tif (!message) {\n\t\t\tthrow new Meteor.Error('error-invalid-message', 'Invalid message', {\n\t\t\t\tmethod: 'getReadReceipts',\n\t\t\t});\n\t\t}\n\n\t\tif (!(await canAccessRoomIdAsync(message.rid, uid))) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', { method: 'getReadReceipts' });\n\t\t}\n\n\t\treturn ReadReceipt.getReceipts(message);\n\t},\n});\n"],"mappings":";;;IAEA,IAAAA,OAAS;IAAAC,MAAS,CAAAC,IAAA,CAAM,sBAAsB,EAAC;MAAAF,QAAAG,CAAA;QAAAH,OAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,QAAA;IAAAH,MAAA,CAAAC,IAAA;MAAAE,SAAAD,CAAA;QAAAC,QAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,KAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAG,MAAAF,CAAA;QAAAE,KAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,MAAA;IAAAL,MAAA,CAAAC,IAAA;MAAAI,OAAAH,CAAA;QAAAG,MAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,oBAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,qBAAAJ,CAAA;QAAAI,oBAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,WAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAM,YAAAL,CAAA;QAAAK,WAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,oBAAA,WAAAA,oBAAA;IAe/CH,MAAM,CAACI,OAAO,CAAgB;MAC7B,MAAMC,eAAeA,CAAAC,IAAA,EAAc;QAAA,IAAb;UAAEC;QAAS,CAAE,GAAAD,IAAA;QAClC,IAAI,CAACZ,OAAO,CAACc,SAAS,CAAC,sBAAsB,CAAC,EAAE;UAC/C,MAAM,IAAIR,MAAM,CAACS,KAAK,CAAC,0BAA0B,EAAE,+BAA+B,EAAE;YAAEC,MAAM,EAAE;UAAiB,CAAE,CAAC;QACnH;QAEA,IAAI,CAACH,SAAS,EAAE;UACf,MAAM,IAAIP,MAAM,CAACS,KAAK,CAAC,uBAAuB,EAAE,4CAA4C,EAAE;YAAEC,MAAM,EAAE;UAAiB,CAAE,CAAC;QAC7H;QAEAX,KAAK,CAACQ,SAAS,EAAEI,MAAM,CAAC;QAExB,MAAMC,GAAG,GAAGZ,MAAM,CAACa,MAAM,EAAE;QAC3B,IAAI,CAACD,GAAG,EAAE;UACT,MAAM,IAAIZ,MAAM,CAACS,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAAEC,MAAM,EAAE;UAAiB,CAAE,CAAC;QAC5F;QAEA,MAAMI,OAAO,GAAG,MAAMhB,QAAQ,CAACiB,WAAW,CAACR,SAAS,CAAC;QACrD,IAAI,CAACO,OAAO,EAAE;UACb,MAAM,IAAId,MAAM,CAACS,KAAK,CAAC,uBAAuB,EAAE,iBAAiB,EAAE;YAClEC,MAAM,EAAE;WACR,CAAC;QACH;QAEA,IAAI,EAAE,MAAMT,oBAAoB,CAACa,OAAO,CAACE,GAAG,EAAEJ,GAAG,CAAC,CAAC,EAAE;UACpD,MAAM,IAAIZ,MAAM,CAACS,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAAEC,MAAM,EAAE;UAAiB,CAAE,CAAC;QAC5F;QAEA,OAAOR,WAAW,CAACe,WAAW,CAACH,OAAO,CAAC;MACxC;KACA,CAAC;IAACI,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ee63a2050da764e53ceca60cc27521b319be8674"}
