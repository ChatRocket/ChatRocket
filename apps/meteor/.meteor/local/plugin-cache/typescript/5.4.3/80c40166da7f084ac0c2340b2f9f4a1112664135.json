{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/omnichannel/service.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/omnichannel/service.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/omnichannel/service.ts","inputSourceMap":{"version":3,"file":"server/services/omnichannel/service.ts","sourceRoot":"","sources":["server/services/omnichannel/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { ServiceClassInternal } from '@rocket.chat/core-services';\nimport type { IOmnichannelService } from '@rocket.chat/core-services';\nimport type { AtLeast, IOmnichannelQueue, IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { License } from '@rocket.chat/license';\nimport moment from 'moment';\n\nimport { OmnichannelQueue } from './queue';\nimport { Livechat } from '../../../app/livechat/server/lib/LivechatTyped';\nimport { RoutingManager } from '../../../app/livechat/server/lib/RoutingManager';\nimport { settings } from '../../../app/settings/server';\n\nexport class OmnichannelService extends ServiceClassInternal implements IOmnichannelService {\n\tprotected name = 'omnichannel';\n\n\tprivate queueWorker: IOmnichannelQueue;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.queueWorker = new OmnichannelQueue();\n\t}\n\n\tasync created() {\n\t\tthis.onEvent('presence.status', async ({ user }): Promise<void> => {\n\t\t\tif (!user?._id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst hasRole = user.roles.some((role) => ['livechat-manager', 'livechat-monitor', 'livechat-agent'].includes(role));\n\t\t\tif (hasRole) {\n\t\t\t\t// TODO change `Livechat.notifyAgentStatusChanged` to a service call\n\t\t\t\tawait Livechat.notifyAgentStatusChanged(user._id, user.status);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync started() {\n\t\tsettings.watch<boolean>('Livechat_enabled', (enabled) => {\n\t\t\tvoid (enabled && RoutingManager.isMethodSet() ? this.queueWorker.shouldStart() : this.queueWorker.stop());\n\t\t});\n\n\t\tsettings.watch<string>('Livechat_Routing_Method', async () => {\n\t\t\tthis.queueWorker.shouldStart();\n\t\t});\n\n\t\tLicense.onLimitReached('monthlyActiveContacts', async (): Promise<void> => {\n\t\t\tthis.queueWorker.isRunning() && (await this.queueWorker.stop());\n\t\t});\n\n\t\tLicense.onValidateLicense(async (): Promise<void> => {\n\t\t\tRoutingManager.isMethodSet() && (await this.queueWorker.shouldStart());\n\t\t});\n\n\t\t// NOTE: When there's no license or license is invalid, we fallback to CE behavior\n\t\t// CE behavior means there's no MAC limit, so we start the queue\n\t\tLicense.onInvalidateLicense(async (): Promise<void> => {\n\t\t\tthis.queueWorker.isRunning() && (await this.queueWorker.shouldStart());\n\t\t});\n\t}\n\n\tasync isWithinMACLimit(room: AtLeast<IOmnichannelRoom, 'v'>): Promise<boolean> {\n\t\tconst currentMonth = moment.utc().format('YYYY-MM');\n\t\treturn room.v?.activity?.includes(currentMonth) || !(await License.shouldPreventAction('monthlyActiveContacts'));\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/omnichannel/service.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/omnichannel/service.ts","inputSourceMap":{"version":3,"file":"server/services/omnichannel/service.ts","sourceRoot":"","sources":["server/services/omnichannel/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { ServiceClassInternal } from '@rocket.chat/core-services';\nimport type { IOmnichannelService } from '@rocket.chat/core-services';\nimport type { AtLeast, IOmnichannelQueue, IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { License } from '@rocket.chat/license';\nimport moment from 'moment';\n\nimport { OmnichannelQueue } from './queue';\nimport { Livechat } from '../../../app/livechat/server/lib/LivechatTyped';\nimport { RoutingManager } from '../../../app/livechat/server/lib/RoutingManager';\nimport { settings } from '../../../app/settings/server';\n\nexport class OmnichannelService extends ServiceClassInternal implements IOmnichannelService {\n\tprotected name = 'omnichannel';\n\n\tprivate queueWorker: IOmnichannelQueue;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.queueWorker = new OmnichannelQueue();\n\t}\n\n\tasync created() {\n\t\tthis.onEvent('presence.status', async ({ user }): Promise<void> => {\n\t\t\tif (!user?._id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst hasRole = user.roles.some((role) => ['livechat-manager', 'livechat-monitor', 'livechat-agent'].includes(role));\n\t\t\tif (hasRole) {\n\t\t\t\t// TODO change `Livechat.notifyAgentStatusChanged` to a service call\n\t\t\t\tawait Livechat.notifyAgentStatusChanged(user._id, user.status);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync started() {\n\t\tsettings.watch<boolean>('Livechat_enabled', (enabled) => {\n\t\t\tvoid (enabled && RoutingManager.isMethodSet() ? this.queueWorker.shouldStart() : this.queueWorker.stop());\n\t\t});\n\n\t\tsettings.watch<string>('Livechat_Routing_Method', async () => {\n\t\t\tthis.queueWorker.shouldStart();\n\t\t});\n\n\t\tLicense.onLimitReached('monthlyActiveContacts', async (): Promise<void> => {\n\t\t\tthis.queueWorker.isRunning() && (await this.queueWorker.stop());\n\t\t});\n\n\t\tLicense.onValidateLicense(async (): Promise<void> => {\n\t\t\tRoutingManager.isMethodSet() && (await this.queueWorker.shouldStart());\n\t\t});\n\n\t\t// NOTE: When there's no license or license is invalid, we fallback to CE behavior\n\t\t// CE behavior means there's no MAC limit, so we start the queue\n\t\tLicense.onInvalidateLicense(async (): Promise<void> => {\n\t\t\tthis.queueWorker.isRunning() && (await this.queueWorker.shouldStart());\n\t\t});\n\t}\n\n\tasync isWithinMACLimit(room: AtLeast<IOmnichannelRoom, 'v'>): Promise<boolean> {\n\t\tconst currentMonth = moment.utc().format('YYYY-MM');\n\t\treturn room.v?.activity?.includes(currentMonth) || !(await License.shouldPreventAction('monthlyActiveContacts'));\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      OmnichannelService: () => OmnichannelService\n    });\n    let ServiceClassInternal;\n    module.link(\"@rocket.chat/core-services\", {\n      ServiceClassInternal(v) {\n        ServiceClassInternal = v;\n      }\n    }, 0);\n    let License;\n    module.link(\"@rocket.chat/license\", {\n      License(v) {\n        License = v;\n      }\n    }, 1);\n    let moment;\n    module.link(\"moment\", {\n      default(v) {\n        moment = v;\n      }\n    }, 2);\n    let OmnichannelQueue;\n    module.link(\"./queue\", {\n      OmnichannelQueue(v) {\n        OmnichannelQueue = v;\n      }\n    }, 3);\n    let Livechat;\n    module.link(\"../../../app/livechat/server/lib/LivechatTyped\", {\n      Livechat(v) {\n        Livechat = v;\n      }\n    }, 4);\n    let RoutingManager;\n    module.link(\"../../../app/livechat/server/lib/RoutingManager\", {\n      RoutingManager(v) {\n        RoutingManager = v;\n      }\n    }, 5);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class OmnichannelService extends ServiceClassInternal {\n      constructor() {\n        super();\n        this.name = 'omnichannel';\n        this.queueWorker = void 0;\n        this.queueWorker = new OmnichannelQueue();\n      }\n      async created() {\n        this.onEvent('presence.status', async _ref => {\n          let {\n            user\n          } = _ref;\n          if (!(user !== null && user !== void 0 && user._id)) {\n            return;\n          }\n          const hasRole = user.roles.some(role => ['livechat-manager', 'livechat-monitor', 'livechat-agent'].includes(role));\n          if (hasRole) {\n            // TODO change `Livechat.notifyAgentStatusChanged` to a service call\n            await Livechat.notifyAgentStatusChanged(user._id, user.status);\n          }\n        });\n      }\n      async started() {\n        settings.watch('Livechat_enabled', enabled => {\n          void (enabled && RoutingManager.isMethodSet() ? this.queueWorker.shouldStart() : this.queueWorker.stop());\n        });\n        settings.watch('Livechat_Routing_Method', async () => {\n          this.queueWorker.shouldStart();\n        });\n        License.onLimitReached('monthlyActiveContacts', async () => {\n          this.queueWorker.isRunning() && (await this.queueWorker.stop());\n        });\n        License.onValidateLicense(async () => {\n          RoutingManager.isMethodSet() && (await this.queueWorker.shouldStart());\n        });\n        // NOTE: When there's no license or license is invalid, we fallback to CE behavior\n        // CE behavior means there's no MAC limit, so we start the queue\n        License.onInvalidateLicense(async () => {\n          this.queueWorker.isRunning() && (await this.queueWorker.shouldStart());\n        });\n      }\n      async isWithinMACLimit(room) {\n        var _room$v, _room$v$activity;\n        const currentMonth = moment.utc().format('YYYY-MM');\n        return ((_room$v = room.v) === null || _room$v === void 0 ? void 0 : (_room$v$activity = _room$v.activity) === null || _room$v$activity === void 0 ? void 0 : _room$v$activity.includes(currentMonth)) || !(await License.shouldPreventAction('monthlyActiveContacts'));\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","OmnichannelService","ServiceClassInternal","link","v","License","moment","default","OmnichannelQueue","Livechat","RoutingManager","settings","__reifyWaitForDeps__","constructor","name","queueWorker","created","onEvent","_ref","user","_id","hasRole","roles","some","role","includes","notifyAgentStatusChanged","status","started","watch","enabled","isMethodSet","shouldStart","stop","onLimitReached","isRunning","onValidateLicense","onInvalidateLicense","isWithinMACLimit","room","_room$v","_room$v$activity","currentMonth","utc","format","activity","shouldPreventAction","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/omnichannel/service.ts"],"sourcesContent":["import { ServiceClassInternal } from '@rocket.chat/core-services';\nimport type { IOmnichannelService } from '@rocket.chat/core-services';\nimport type { AtLeast, IOmnichannelQueue, IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { License } from '@rocket.chat/license';\nimport moment from 'moment';\n\nimport { OmnichannelQueue } from './queue';\nimport { Livechat } from '../../../app/livechat/server/lib/LivechatTyped';\nimport { RoutingManager } from '../../../app/livechat/server/lib/RoutingManager';\nimport { settings } from '../../../app/settings/server';\n\nexport class OmnichannelService extends ServiceClassInternal implements IOmnichannelService {\n\tprotected name = 'omnichannel';\n\n\tprivate queueWorker: IOmnichannelQueue;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.queueWorker = new OmnichannelQueue();\n\t}\n\n\tasync created() {\n\t\tthis.onEvent('presence.status', async ({ user }): Promise<void> => {\n\t\t\tif (!user?._id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst hasRole = user.roles.some((role) => ['livechat-manager', 'livechat-monitor', 'livechat-agent'].includes(role));\n\t\t\tif (hasRole) {\n\t\t\t\t// TODO change `Livechat.notifyAgentStatusChanged` to a service call\n\t\t\t\tawait Livechat.notifyAgentStatusChanged(user._id, user.status);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync started() {\n\t\tsettings.watch<boolean>('Livechat_enabled', (enabled) => {\n\t\t\tvoid (enabled && RoutingManager.isMethodSet() ? this.queueWorker.shouldStart() : this.queueWorker.stop());\n\t\t});\n\n\t\tsettings.watch<string>('Livechat_Routing_Method', async () => {\n\t\t\tthis.queueWorker.shouldStart();\n\t\t});\n\n\t\tLicense.onLimitReached('monthlyActiveContacts', async (): Promise<void> => {\n\t\t\tthis.queueWorker.isRunning() && (await this.queueWorker.stop());\n\t\t});\n\n\t\tLicense.onValidateLicense(async (): Promise<void> => {\n\t\t\tRoutingManager.isMethodSet() && (await this.queueWorker.shouldStart());\n\t\t});\n\n\t\t// NOTE: When there's no license or license is invalid, we fallback to CE behavior\n\t\t// CE behavior means there's no MAC limit, so we start the queue\n\t\tLicense.onInvalidateLicense(async (): Promise<void> => {\n\t\t\tthis.queueWorker.isRunning() && (await this.queueWorker.shouldStart());\n\t\t});\n\t}\n\n\tasync isWithinMACLimit(room: AtLeast<IOmnichannelRoom, 'v'>): Promise<boolean> {\n\t\tconst currentMonth = moment.utc().format('YYYY-MM');\n\t\treturn room.v?.activity?.includes(currentMonth) || !(await License.shouldPreventAction('monthlyActiveContacts'));\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"80c40166da7f084ac0c2340b2f9f4a1112664135"}
