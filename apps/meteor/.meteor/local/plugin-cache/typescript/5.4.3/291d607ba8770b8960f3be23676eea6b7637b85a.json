{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/server/config/GridFS.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/file-upload/server/config/GridFS.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/server/config/GridFS.ts","inputSourceMap":{"version":3,"file":"app/file-upload/server/config/GridFS.ts","sourceRoot":"","sources":["app/file-upload/server/config/GridFS.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as http from 'http';\nimport type { TransformCallback, TransformOptions } from 'stream';\nimport stream from 'stream';\nimport zlib from 'zlib';\n\nimport type { IUpload } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\n\nimport { getContentDisposition } from './helper';\nimport { UploadFS } from '../../../../server/ufs';\nimport { FileUploadClass, FileUpload } from '../lib/FileUpload';\nimport { getFileRange, setRangeHeaders } from '../lib/ranges';\n\nconst logger = new Logger('FileUpload');\n\nclass ExtractRange extends stream.Transform {\n\tprivate start: number;\n\n\tprivate stop: number;\n\n\tprivate bytes_read: number;\n\n\tconstructor(options: TransformOptions & { start: number; stop: number }) {\n\t\tsuper(options);\n\n\t\tthis.start = options.start;\n\t\tthis.stop = options.stop;\n\t\tthis.bytes_read = 0;\n\t}\n\n\t_transform(chunk: any, _enc: BufferEncoding, cb: TransformCallback) {\n\t\tif (this.bytes_read > this.stop) {\n\t\t\t// done reading\n\t\t\tthis.end();\n\t\t} else if (this.bytes_read + chunk.length < this.start) {\n\t\t\t// this chunk is still before the start byte\n\t\t} else {\n\t\t\tlet start;\n\t\t\tlet stop;\n\n\t\t\tif (this.start <= this.bytes_read) {\n\t\t\t\tstart = 0;\n\t\t\t} else {\n\t\t\t\tstart = this.start - this.bytes_read;\n\t\t\t}\n\t\t\tif (this.stop - this.bytes_read + 1 < chunk.length) {\n\t\t\t\tstop = this.stop - this.bytes_read + 1;\n\t\t\t} else {\n\t\t\t\tstop = chunk.length;\n\t\t\t}\n\t\t\tconst newchunk = chunk.slice(start, stop);\n\t\t\tthis.push(newchunk);\n\t\t}\n\t\tthis.bytes_read += chunk.length;\n\t\tcb();\n\t}\n}\n\n// code from: https://github.com/jalik/jalik-ufs/blob/master/ufs-server.js#L310\nconst readFromGridFS = async function (\n\tstoreName: string | undefined,\n\tfileId: string,\n\tfile: IUpload,\n\treq: http.IncomingMessage,\n\tres: http.ServerResponse,\n) {\n\tif (!storeName) {\n\t\treturn;\n\t}\n\tconst store = UploadFS.getStore(storeName);\n\tconst rs = await store.getReadStream(fileId, file);\n\tconst ws = new stream.PassThrough();\n\n\t[rs, ws].forEach((stream) =>\n\t\tstream.on('error', (err) => {\n\t\t\tstore.onReadError.call(store, err, fileId, file);\n\t\t\tres.end();\n\t\t}),\n\t);\n\n\tws.on('close', () => {\n\t\t// Close output stream at the end\n\t\tws.emit('end');\n\t});\n\n\t// Transform stream\n\tstore.transformRead(rs, ws, fileId, file, req);\n\n\tconst range = getFileRange(file, req);\n\tif (range) {\n\t\tsetRangeHeaders(range, file, res);\n\n\t\tif (range.outOfRange) {\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.debug('File upload extracting range');\n\t\tws.pipe(new ExtractRange({ start: range.start, stop: range.stop })).pipe(res);\n\t\treturn;\n\t}\n\n\tconst accept = (Array.isArray(req.headers['accept-encoding']) ? req.headers['accept-encoding'][0] : req.headers['accept-encoding']) || '';\n\n\t// Compress data using gzip\n\tif (accept.match(/\\bgzip\\b/)) {\n\t\tres.setHeader('Content-Encoding', 'gzip');\n\t\tres.removeHeader('Content-Length');\n\t\tres.writeHead(200);\n\t\tws.pipe(zlib.createGzip()).pipe(res);\n\t\treturn;\n\t}\n\n\t// Compress data using deflate\n\tif (accept.match(/\\bdeflate\\b/)) {\n\t\tres.setHeader('Content-Encoding', 'deflate');\n\t\tres.removeHeader('Content-Length');\n\t\tres.writeHead(200);\n\t\tws.pipe(zlib.createDeflate()).pipe(res);\n\t\treturn;\n\t}\n\n\tres.writeHead(200);\n\tws.pipe(res);\n};\n\nconst copyFromGridFS = async function (storeName: string | undefined, fileId: string, file: IUpload, out: stream.Writable) {\n\tif (!storeName) {\n\t\treturn;\n\t}\n\n\tconst store = UploadFS.getStore(storeName);\n\tconst rs = await store.getReadStream(fileId, file);\n\n\t[rs, out].forEach((stream) =>\n\t\tstream.on('error', (err) => {\n\t\t\tstore.onReadError.call(store, err, fileId, file);\n\t\t\tout.end();\n\t\t}),\n\t);\n\n\trs.pipe(out);\n};\n\nFileUpload.configureUploadsStore('GridFS', 'GridFS:Uploads', {\n\tcollectionName: 'rocketchat_uploads',\n});\n\nFileUpload.configureUploadsStore('GridFS', 'GridFS:UserDataFiles', {\n\tcollectionName: 'rocketchat_userDataFiles',\n});\n\n// DEPRECATED: backwards compatibility (remove)\nUploadFS.getStores().rocketchat_uploads = UploadFS.getStores()['GridFS:Uploads'];\n\nFileUpload.configureUploadsStore('GridFS', 'GridFS:Avatars', {\n\tcollectionName: 'rocketchat_avatars',\n});\n\nnew FileUploadClass({\n\tname: 'GridFS:Uploads',\n\n\tasync get(file, req, res) {\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tres.setHeader('Content-Disposition', `${getContentDisposition(req)}; filename*=UTF-8''${encodeURIComponent(file.name || '')}`);\n\t\tfile.uploadedAt && res.setHeader('Last-Modified', file.uploadedAt.toUTCString());\n\t\tres.setHeader('Content-Type', file.type || 'application/octet-stream');\n\t\tres.setHeader('Content-Length', file.size || 0);\n\n\t\tawait readFromGridFS(file.store, file._id, file, req, res);\n\t},\n\n\tasync copy(file, out) {\n\t\tawait copyFromGridFS(file.store, file._id, file, out);\n\t},\n});\n\nnew FileUploadClass({\n\tname: 'GridFS:UserDataFiles',\n\n\tasync get(file, req, res) {\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tres.setHeader('Content-Disposition', `attachment; filename*=UTF-8''${encodeURIComponent(file.name || '')}`);\n\t\tfile.uploadedAt && res.setHeader('Last-Modified', file.uploadedAt.toUTCString());\n\t\tres.setHeader('Content-Type', file.type || '');\n\t\tres.setHeader('Content-Length', file.size || 0);\n\n\t\tawait readFromGridFS(file.store, file._id, file, req, res);\n\t},\n\n\tasync copy(file, out) {\n\t\tawait copyFromGridFS(file.store, file._id, file, out);\n\t},\n});\n\nnew FileUploadClass({\n\tname: 'GridFS:Avatars',\n\n\tasync get(file, req, res) {\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tawait readFromGridFS(file.store, file._id, file, req, res);\n\t},\n\n\tasync copy(file, out) {\n\t\tawait copyFromGridFS(file.store, file._id, file, out);\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/server/config/GridFS.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/file-upload/server/config/GridFS.ts","inputSourceMap":{"version":3,"file":"app/file-upload/server/config/GridFS.ts","sourceRoot":"","sources":["app/file-upload/server/config/GridFS.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as http from 'http';\nimport type { TransformCallback, TransformOptions } from 'stream';\nimport stream from 'stream';\nimport zlib from 'zlib';\n\nimport type { IUpload } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\n\nimport { getContentDisposition } from './helper';\nimport { UploadFS } from '../../../../server/ufs';\nimport { FileUploadClass, FileUpload } from '../lib/FileUpload';\nimport { getFileRange, setRangeHeaders } from '../lib/ranges';\n\nconst logger = new Logger('FileUpload');\n\nclass ExtractRange extends stream.Transform {\n\tprivate start: number;\n\n\tprivate stop: number;\n\n\tprivate bytes_read: number;\n\n\tconstructor(options: TransformOptions & { start: number; stop: number }) {\n\t\tsuper(options);\n\n\t\tthis.start = options.start;\n\t\tthis.stop = options.stop;\n\t\tthis.bytes_read = 0;\n\t}\n\n\t_transform(chunk: any, _enc: BufferEncoding, cb: TransformCallback) {\n\t\tif (this.bytes_read > this.stop) {\n\t\t\t// done reading\n\t\t\tthis.end();\n\t\t} else if (this.bytes_read + chunk.length < this.start) {\n\t\t\t// this chunk is still before the start byte\n\t\t} else {\n\t\t\tlet start;\n\t\t\tlet stop;\n\n\t\t\tif (this.start <= this.bytes_read) {\n\t\t\t\tstart = 0;\n\t\t\t} else {\n\t\t\t\tstart = this.start - this.bytes_read;\n\t\t\t}\n\t\t\tif (this.stop - this.bytes_read + 1 < chunk.length) {\n\t\t\t\tstop = this.stop - this.bytes_read + 1;\n\t\t\t} else {\n\t\t\t\tstop = chunk.length;\n\t\t\t}\n\t\t\tconst newchunk = chunk.slice(start, stop);\n\t\t\tthis.push(newchunk);\n\t\t}\n\t\tthis.bytes_read += chunk.length;\n\t\tcb();\n\t}\n}\n\n// code from: https://github.com/jalik/jalik-ufs/blob/master/ufs-server.js#L310\nconst readFromGridFS = async function (\n\tstoreName: string | undefined,\n\tfileId: string,\n\tfile: IUpload,\n\treq: http.IncomingMessage,\n\tres: http.ServerResponse,\n) {\n\tif (!storeName) {\n\t\treturn;\n\t}\n\tconst store = UploadFS.getStore(storeName);\n\tconst rs = await store.getReadStream(fileId, file);\n\tconst ws = new stream.PassThrough();\n\n\t[rs, ws].forEach((stream) =>\n\t\tstream.on('error', (err) => {\n\t\t\tstore.onReadError.call(store, err, fileId, file);\n\t\t\tres.end();\n\t\t}),\n\t);\n\n\tws.on('close', () => {\n\t\t// Close output stream at the end\n\t\tws.emit('end');\n\t});\n\n\t// Transform stream\n\tstore.transformRead(rs, ws, fileId, file, req);\n\n\tconst range = getFileRange(file, req);\n\tif (range) {\n\t\tsetRangeHeaders(range, file, res);\n\n\t\tif (range.outOfRange) {\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.debug('File upload extracting range');\n\t\tws.pipe(new ExtractRange({ start: range.start, stop: range.stop })).pipe(res);\n\t\treturn;\n\t}\n\n\tconst accept = (Array.isArray(req.headers['accept-encoding']) ? req.headers['accept-encoding'][0] : req.headers['accept-encoding']) || '';\n\n\t// Compress data using gzip\n\tif (accept.match(/\\bgzip\\b/)) {\n\t\tres.setHeader('Content-Encoding', 'gzip');\n\t\tres.removeHeader('Content-Length');\n\t\tres.writeHead(200);\n\t\tws.pipe(zlib.createGzip()).pipe(res);\n\t\treturn;\n\t}\n\n\t// Compress data using deflate\n\tif (accept.match(/\\bdeflate\\b/)) {\n\t\tres.setHeader('Content-Encoding', 'deflate');\n\t\tres.removeHeader('Content-Length');\n\t\tres.writeHead(200);\n\t\tws.pipe(zlib.createDeflate()).pipe(res);\n\t\treturn;\n\t}\n\n\tres.writeHead(200);\n\tws.pipe(res);\n};\n\nconst copyFromGridFS = async function (storeName: string | undefined, fileId: string, file: IUpload, out: stream.Writable) {\n\tif (!storeName) {\n\t\treturn;\n\t}\n\n\tconst store = UploadFS.getStore(storeName);\n\tconst rs = await store.getReadStream(fileId, file);\n\n\t[rs, out].forEach((stream) =>\n\t\tstream.on('error', (err) => {\n\t\t\tstore.onReadError.call(store, err, fileId, file);\n\t\t\tout.end();\n\t\t}),\n\t);\n\n\trs.pipe(out);\n};\n\nFileUpload.configureUploadsStore('GridFS', 'GridFS:Uploads', {\n\tcollectionName: 'rocketchat_uploads',\n});\n\nFileUpload.configureUploadsStore('GridFS', 'GridFS:UserDataFiles', {\n\tcollectionName: 'rocketchat_userDataFiles',\n});\n\n// DEPRECATED: backwards compatibility (remove)\nUploadFS.getStores().rocketchat_uploads = UploadFS.getStores()['GridFS:Uploads'];\n\nFileUpload.configureUploadsStore('GridFS', 'GridFS:Avatars', {\n\tcollectionName: 'rocketchat_avatars',\n});\n\nnew FileUploadClass({\n\tname: 'GridFS:Uploads',\n\n\tasync get(file, req, res) {\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tres.setHeader('Content-Disposition', `${getContentDisposition(req)}; filename*=UTF-8''${encodeURIComponent(file.name || '')}`);\n\t\tfile.uploadedAt && res.setHeader('Last-Modified', file.uploadedAt.toUTCString());\n\t\tres.setHeader('Content-Type', file.type || 'application/octet-stream');\n\t\tres.setHeader('Content-Length', file.size || 0);\n\n\t\tawait readFromGridFS(file.store, file._id, file, req, res);\n\t},\n\n\tasync copy(file, out) {\n\t\tawait copyFromGridFS(file.store, file._id, file, out);\n\t},\n});\n\nnew FileUploadClass({\n\tname: 'GridFS:UserDataFiles',\n\n\tasync get(file, req, res) {\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tres.setHeader('Content-Disposition', `attachment; filename*=UTF-8''${encodeURIComponent(file.name || '')}`);\n\t\tfile.uploadedAt && res.setHeader('Last-Modified', file.uploadedAt.toUTCString());\n\t\tres.setHeader('Content-Type', file.type || '');\n\t\tres.setHeader('Content-Length', file.size || 0);\n\n\t\tawait readFromGridFS(file.store, file._id, file, req, res);\n\t},\n\n\tasync copy(file, out) {\n\t\tawait copyFromGridFS(file.store, file._id, file, out);\n\t},\n});\n\nnew FileUploadClass({\n\tname: 'GridFS:Avatars',\n\n\tasync get(file, req, res) {\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tawait readFromGridFS(file.store, file._id, file, req, res);\n\t},\n\n\tasync copy(file, out) {\n\t\tawait copyFromGridFS(file.store, file._id, file, out);\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let stream;\n    module.link(\"stream\", {\n      default(v) {\n        stream = v;\n      }\n    }, 0);\n    let zlib;\n    module.link(\"zlib\", {\n      default(v) {\n        zlib = v;\n      }\n    }, 1);\n    let Logger;\n    module.link(\"@rocket.chat/logger\", {\n      Logger(v) {\n        Logger = v;\n      }\n    }, 2);\n    let getContentDisposition;\n    module.link(\"./helper\", {\n      getContentDisposition(v) {\n        getContentDisposition = v;\n      }\n    }, 3);\n    let UploadFS;\n    module.link(\"../../../../server/ufs\", {\n      UploadFS(v) {\n        UploadFS = v;\n      }\n    }, 4);\n    let FileUploadClass, FileUpload;\n    module.link(\"../lib/FileUpload\", {\n      FileUploadClass(v) {\n        FileUploadClass = v;\n      },\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 5);\n    let getFileRange, setRangeHeaders;\n    module.link(\"../lib/ranges\", {\n      getFileRange(v) {\n        getFileRange = v;\n      },\n      setRangeHeaders(v) {\n        setRangeHeaders = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const logger = new Logger('FileUpload');\n    class ExtractRange extends stream.Transform {\n      constructor(options) {\n        super(options);\n        this.start = void 0;\n        this.stop = void 0;\n        this.bytes_read = void 0;\n        this.start = options.start;\n        this.stop = options.stop;\n        this.bytes_read = 0;\n      }\n      _transform(chunk, _enc, cb) {\n        if (this.bytes_read > this.stop) {\n          // done reading\n          this.end();\n        } else if (this.bytes_read + chunk.length < this.start) {\n          // this chunk is still before the start byte\n        } else {\n          let start;\n          let stop;\n          if (this.start <= this.bytes_read) {\n            start = 0;\n          } else {\n            start = this.start - this.bytes_read;\n          }\n          if (this.stop - this.bytes_read + 1 < chunk.length) {\n            stop = this.stop - this.bytes_read + 1;\n          } else {\n            stop = chunk.length;\n          }\n          const newchunk = chunk.slice(start, stop);\n          this.push(newchunk);\n        }\n        this.bytes_read += chunk.length;\n        cb();\n      }\n    }\n    // code from: https://github.com/jalik/jalik-ufs/blob/master/ufs-server.js#L310\n    const readFromGridFS = async function (storeName, fileId, file, req, res) {\n      if (!storeName) {\n        return;\n      }\n      const store = UploadFS.getStore(storeName);\n      const rs = await store.getReadStream(fileId, file);\n      const ws = new stream.PassThrough();\n      [rs, ws].forEach(stream => stream.on('error', err => {\n        store.onReadError.call(store, err, fileId, file);\n        res.end();\n      }));\n      ws.on('close', () => {\n        // Close output stream at the end\n        ws.emit('end');\n      });\n      // Transform stream\n      store.transformRead(rs, ws, fileId, file, req);\n      const range = getFileRange(file, req);\n      if (range) {\n        setRangeHeaders(range, file, res);\n        if (range.outOfRange) {\n          return;\n        }\n        logger.debug('File upload extracting range');\n        ws.pipe(new ExtractRange({\n          start: range.start,\n          stop: range.stop\n        })).pipe(res);\n        return;\n      }\n      const accept = (Array.isArray(req.headers['accept-encoding']) ? req.headers['accept-encoding'][0] : req.headers['accept-encoding']) || '';\n      // Compress data using gzip\n      if (accept.match(/\\bgzip\\b/)) {\n        res.setHeader('Content-Encoding', 'gzip');\n        res.removeHeader('Content-Length');\n        res.writeHead(200);\n        ws.pipe(zlib.createGzip()).pipe(res);\n        return;\n      }\n      // Compress data using deflate\n      if (accept.match(/\\bdeflate\\b/)) {\n        res.setHeader('Content-Encoding', 'deflate');\n        res.removeHeader('Content-Length');\n        res.writeHead(200);\n        ws.pipe(zlib.createDeflate()).pipe(res);\n        return;\n      }\n      res.writeHead(200);\n      ws.pipe(res);\n    };\n    const copyFromGridFS = async function (storeName, fileId, file, out) {\n      if (!storeName) {\n        return;\n      }\n      const store = UploadFS.getStore(storeName);\n      const rs = await store.getReadStream(fileId, file);\n      [rs, out].forEach(stream => stream.on('error', err => {\n        store.onReadError.call(store, err, fileId, file);\n        out.end();\n      }));\n      rs.pipe(out);\n    };\n    FileUpload.configureUploadsStore('GridFS', 'GridFS:Uploads', {\n      collectionName: 'rocketchat_uploads'\n    });\n    FileUpload.configureUploadsStore('GridFS', 'GridFS:UserDataFiles', {\n      collectionName: 'rocketchat_userDataFiles'\n    });\n    // DEPRECATED: backwards compatibility (remove)\n    UploadFS.getStores().rocketchat_uploads = UploadFS.getStores()['GridFS:Uploads'];\n    FileUpload.configureUploadsStore('GridFS', 'GridFS:Avatars', {\n      collectionName: 'rocketchat_avatars'\n    });\n    new FileUploadClass({\n      name: 'GridFS:Uploads',\n      async get(file, req, res) {\n        file = FileUpload.addExtensionTo(file);\n        res.setHeader('Content-Disposition', \"\".concat(getContentDisposition(req), \"; filename*=UTF-8''\").concat(encodeURIComponent(file.name || '')));\n        file.uploadedAt && res.setHeader('Last-Modified', file.uploadedAt.toUTCString());\n        res.setHeader('Content-Type', file.type || 'application/octet-stream');\n        res.setHeader('Content-Length', file.size || 0);\n        await readFromGridFS(file.store, file._id, file, req, res);\n      },\n      async copy(file, out) {\n        await copyFromGridFS(file.store, file._id, file, out);\n      }\n    });\n    new FileUploadClass({\n      name: 'GridFS:UserDataFiles',\n      async get(file, req, res) {\n        file = FileUpload.addExtensionTo(file);\n        res.setHeader('Content-Disposition', \"attachment; filename*=UTF-8''\".concat(encodeURIComponent(file.name || '')));\n        file.uploadedAt && res.setHeader('Last-Modified', file.uploadedAt.toUTCString());\n        res.setHeader('Content-Type', file.type || '');\n        res.setHeader('Content-Length', file.size || 0);\n        await readFromGridFS(file.store, file._id, file, req, res);\n      },\n      async copy(file, out) {\n        await copyFromGridFS(file.store, file._id, file, out);\n      }\n    });\n    new FileUploadClass({\n      name: 'GridFS:Avatars',\n      async get(file, req, res) {\n        file = FileUpload.addExtensionTo(file);\n        await readFromGridFS(file.store, file._id, file, req, res);\n      },\n      async copy(file, out) {\n        await copyFromGridFS(file.store, file._id, file, out);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["stream","module","link","default","v","zlib","Logger","getContentDisposition","UploadFS","FileUploadClass","FileUpload","getFileRange","setRangeHeaders","__reifyWaitForDeps__","logger","ExtractRange","Transform","constructor","options","start","stop","bytes_read","_transform","chunk","_enc","cb","end","length","newchunk","slice","push","readFromGridFS","storeName","fileId","file","req","res","store","getStore","rs","getReadStream","ws","PassThrough","forEach","on","err","onReadError","call","emit","transformRead","range","outOfRange","debug","pipe","accept","Array","isArray","headers","match","setHeader","removeHeader","writeHead","createGzip","createDeflate","copyFromGridFS","out","configureUploadsStore","collectionName","getStores","rocketchat_uploads","name","get","addExtensionTo","concat","encodeURIComponent","uploadedAt","toUTCString","type","size","_id","copy","__reify_async_result__","_reifyError","self","async"],"sources":["app/file-upload/server/config/GridFS.ts"],"sourcesContent":["import type * as http from 'http';\nimport type { TransformCallback, TransformOptions } from 'stream';\nimport stream from 'stream';\nimport zlib from 'zlib';\n\nimport type { IUpload } from '@rocket.chat/core-typings';\nimport { Logger } from '@rocket.chat/logger';\n\nimport { getContentDisposition } from './helper';\nimport { UploadFS } from '../../../../server/ufs';\nimport { FileUploadClass, FileUpload } from '../lib/FileUpload';\nimport { getFileRange, setRangeHeaders } from '../lib/ranges';\n\nconst logger = new Logger('FileUpload');\n\nclass ExtractRange extends stream.Transform {\n\tprivate start: number;\n\n\tprivate stop: number;\n\n\tprivate bytes_read: number;\n\n\tconstructor(options: TransformOptions & { start: number; stop: number }) {\n\t\tsuper(options);\n\n\t\tthis.start = options.start;\n\t\tthis.stop = options.stop;\n\t\tthis.bytes_read = 0;\n\t}\n\n\t_transform(chunk: any, _enc: BufferEncoding, cb: TransformCallback) {\n\t\tif (this.bytes_read > this.stop) {\n\t\t\t// done reading\n\t\t\tthis.end();\n\t\t} else if (this.bytes_read + chunk.length < this.start) {\n\t\t\t// this chunk is still before the start byte\n\t\t} else {\n\t\t\tlet start;\n\t\t\tlet stop;\n\n\t\t\tif (this.start <= this.bytes_read) {\n\t\t\t\tstart = 0;\n\t\t\t} else {\n\t\t\t\tstart = this.start - this.bytes_read;\n\t\t\t}\n\t\t\tif (this.stop - this.bytes_read + 1 < chunk.length) {\n\t\t\t\tstop = this.stop - this.bytes_read + 1;\n\t\t\t} else {\n\t\t\t\tstop = chunk.length;\n\t\t\t}\n\t\t\tconst newchunk = chunk.slice(start, stop);\n\t\t\tthis.push(newchunk);\n\t\t}\n\t\tthis.bytes_read += chunk.length;\n\t\tcb();\n\t}\n}\n\n// code from: https://github.com/jalik/jalik-ufs/blob/master/ufs-server.js#L310\nconst readFromGridFS = async function (\n\tstoreName: string | undefined,\n\tfileId: string,\n\tfile: IUpload,\n\treq: http.IncomingMessage,\n\tres: http.ServerResponse,\n) {\n\tif (!storeName) {\n\t\treturn;\n\t}\n\tconst store = UploadFS.getStore(storeName);\n\tconst rs = await store.getReadStream(fileId, file);\n\tconst ws = new stream.PassThrough();\n\n\t[rs, ws].forEach((stream) =>\n\t\tstream.on('error', (err) => {\n\t\t\tstore.onReadError.call(store, err, fileId, file);\n\t\t\tres.end();\n\t\t}),\n\t);\n\n\tws.on('close', () => {\n\t\t// Close output stream at the end\n\t\tws.emit('end');\n\t});\n\n\t// Transform stream\n\tstore.transformRead(rs, ws, fileId, file, req);\n\n\tconst range = getFileRange(file, req);\n\tif (range) {\n\t\tsetRangeHeaders(range, file, res);\n\n\t\tif (range.outOfRange) {\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.debug('File upload extracting range');\n\t\tws.pipe(new ExtractRange({ start: range.start, stop: range.stop })).pipe(res);\n\t\treturn;\n\t}\n\n\tconst accept = (Array.isArray(req.headers['accept-encoding']) ? req.headers['accept-encoding'][0] : req.headers['accept-encoding']) || '';\n\n\t// Compress data using gzip\n\tif (accept.match(/\\bgzip\\b/)) {\n\t\tres.setHeader('Content-Encoding', 'gzip');\n\t\tres.removeHeader('Content-Length');\n\t\tres.writeHead(200);\n\t\tws.pipe(zlib.createGzip()).pipe(res);\n\t\treturn;\n\t}\n\n\t// Compress data using deflate\n\tif (accept.match(/\\bdeflate\\b/)) {\n\t\tres.setHeader('Content-Encoding', 'deflate');\n\t\tres.removeHeader('Content-Length');\n\t\tres.writeHead(200);\n\t\tws.pipe(zlib.createDeflate()).pipe(res);\n\t\treturn;\n\t}\n\n\tres.writeHead(200);\n\tws.pipe(res);\n};\n\nconst copyFromGridFS = async function (storeName: string | undefined, fileId: string, file: IUpload, out: stream.Writable) {\n\tif (!storeName) {\n\t\treturn;\n\t}\n\n\tconst store = UploadFS.getStore(storeName);\n\tconst rs = await store.getReadStream(fileId, file);\n\n\t[rs, out].forEach((stream) =>\n\t\tstream.on('error', (err) => {\n\t\t\tstore.onReadError.call(store, err, fileId, file);\n\t\t\tout.end();\n\t\t}),\n\t);\n\n\trs.pipe(out);\n};\n\nFileUpload.configureUploadsStore('GridFS', 'GridFS:Uploads', {\n\tcollectionName: 'rocketchat_uploads',\n});\n\nFileUpload.configureUploadsStore('GridFS', 'GridFS:UserDataFiles', {\n\tcollectionName: 'rocketchat_userDataFiles',\n});\n\n// DEPRECATED: backwards compatibility (remove)\nUploadFS.getStores().rocketchat_uploads = UploadFS.getStores()['GridFS:Uploads'];\n\nFileUpload.configureUploadsStore('GridFS', 'GridFS:Avatars', {\n\tcollectionName: 'rocketchat_avatars',\n});\n\nnew FileUploadClass({\n\tname: 'GridFS:Uploads',\n\n\tasync get(file, req, res) {\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tres.setHeader('Content-Disposition', `${getContentDisposition(req)}; filename*=UTF-8''${encodeURIComponent(file.name || '')}`);\n\t\tfile.uploadedAt && res.setHeader('Last-Modified', file.uploadedAt.toUTCString());\n\t\tres.setHeader('Content-Type', file.type || 'application/octet-stream');\n\t\tres.setHeader('Content-Length', file.size || 0);\n\n\t\tawait readFromGridFS(file.store, file._id, file, req, res);\n\t},\n\n\tasync copy(file, out) {\n\t\tawait copyFromGridFS(file.store, file._id, file, out);\n\t},\n});\n\nnew FileUploadClass({\n\tname: 'GridFS:UserDataFiles',\n\n\tasync get(file, req, res) {\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tres.setHeader('Content-Disposition', `attachment; filename*=UTF-8''${encodeURIComponent(file.name || '')}`);\n\t\tfile.uploadedAt && res.setHeader('Last-Modified', file.uploadedAt.toUTCString());\n\t\tres.setHeader('Content-Type', file.type || '');\n\t\tres.setHeader('Content-Length', file.size || 0);\n\n\t\tawait readFromGridFS(file.store, file._id, file, req, res);\n\t},\n\n\tasync copy(file, out) {\n\t\tawait copyFromGridFS(file.store, file._id, file, out);\n\t},\n});\n\nnew FileUploadClass({\n\tname: 'GridFS:Avatars',\n\n\tasync get(file, req, res) {\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tawait readFromGridFS(file.store, file._id, file, req, res);\n\t},\n\n\tasync copy(file, out) {\n\t\tawait copyFromGridFS(file.store, file._id, file, out);\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"291d607ba8770b8960f3be23676eea6b7637b85a"}
