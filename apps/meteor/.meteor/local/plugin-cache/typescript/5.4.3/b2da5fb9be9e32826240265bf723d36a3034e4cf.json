{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/NewImportPage.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/admin/import/NewImportPage.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/NewImportPage.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/import/NewImportPage.tsx","sourceRoot":"","sources":["client/views/admin/import/NewImportPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Button, ButtonGroup, Callout, Chip, Field, Margins, Select, InputBox, TextInput, UrlInput } from '@rocket.chat/fuselage';\nimport { useUniqueId, useSafely } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useToastMessageDispatch, useRouter, useRouteParameter, useSetting, useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ChangeEvent, DragEvent, FormEvent, Key, SyntheticEvent } from 'react';\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\nimport { useFormatMemorySize } from '../../../hooks/useFormatMemorySize';\nimport { useErrorHandler } from './useErrorHandler';\n\n// TODO: review inner logic\nfunction NewImportPage() {\n\tconst { t } = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst handleError = useErrorHandler();\n\n\tconst [isLoading, setLoading] = useSafely(useState(false));\n\tconst [fileType, setFileType] = useSafely(useState('upload'));\n\n\tconst listImportersEndpoint = useEndpoint('GET', '/v1/importers.list');\n\tconst { data: importers, isLoading: isLoadingImporters } = useQuery(['importers'], async () => listImportersEndpoint(), {\n\t\trefetchOnWindowFocus: false,\n\t});\n\n\tconst options = useMemo(() => importers?.map(({ key, name }) => [key, t(name as TranslationKey)] as const) || [], [importers, t]);\n\n\tconst importerKey = useRouteParameter('importerKey');\n\tconst importer = useMemo(() => (importers || []).find(({ key }) => key === importerKey), [importerKey, importers]);\n\n\tconst maxFileSize = useSetting<number>('FileUpload_MaxFileSize') ?? 0;\n\n\tconst router = useRouter();\n\n\tconst uploadImportFile = useEndpoint('POST', '/v1/uploadImportFile');\n\tconst downloadPublicImportFile = useEndpoint('POST', '/v1/downloadPublicImportFile');\n\n\tuseEffect(() => {\n\t\tif (importerKey && !importer && !isLoadingImporters) {\n\t\t\trouter.navigate('/admin/import/new', { replace: true });\n\t\t}\n\t}, [importer, importerKey, router, isLoadingImporters]);\n\n\tconst formatMemorySize = useFormatMemorySize();\n\n\tconst handleImporterKeyChange = (importerKey: Key) => {\n\t\tif (typeof importerKey !== 'string') {\n\t\t\treturn;\n\t\t}\n\n\t\trouter.navigate(\n\t\t\t{\n\t\t\t\tpattern: '/admin/import/new/:importerKey?',\n\t\t\t\tparams: { importerKey },\n\t\t\t},\n\t\t\t{ replace: true },\n\t\t);\n\t};\n\n\tconst handleFileTypeChange = (fileType: Key) => {\n\t\tif (typeof fileType !== 'string') {\n\t\t\treturn;\n\t\t}\n\n\t\tsetFileType(fileType);\n\t};\n\n\tconst [files, setFiles] = useState<File[]>([]);\n\n\tconst isDataTransferEvent = <T extends SyntheticEvent>(event: T): event is T & DragEvent<HTMLInputElement> =>\n\t\tBoolean('dataTransfer' in event && (event as any).dataTransfer.files);\n\n\tconst handleImportFileChange = async (event: ChangeEvent<HTMLInputElement>) => {\n\t\tlet { files } = event.target;\n\t\tif (!files || files.length === 0) {\n\t\t\tif (isDataTransferEvent(event)) {\n\t\t\t\tfiles = event.dataTransfer.files;\n\t\t\t}\n\t\t}\n\n\t\tsetFiles(Array.from(files ?? []));\n\t};\n\n\tconst handleFileUploadChipClick = (file: File) => () => {\n\t\tsetFiles((files) => files.filter((_file) => _file !== file));\n\t};\n\n\tconst handleFileUploadImportButtonClick = async () => {\n\t\tif (!importerKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tawait Promise.all(\n\t\t\t\tArray.from(\n\t\t\t\t\tfiles,\n\t\t\t\t\t(file) =>\n\t\t\t\t\t\tnew Promise<void>((resolve) => {\n\t\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\t\treader.readAsDataURL(file);\n\t\t\t\t\t\t\treader.onloadend = async () => {\n\t\t\t\t\t\t\t\tconst result = reader.result as string;\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait uploadImportFile({\n\t\t\t\t\t\t\t\t\t\tbinaryContent: result.split(';base64,')[1],\n\t\t\t\t\t\t\t\t\t\tcontentType: file.type,\n\t\t\t\t\t\t\t\t\t\tfileName: file.name,\n\t\t\t\t\t\t\t\t\t\timporterKey,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\thandleError(error, t('Failed_To_upload_Import_File'));\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treader.onerror = () => resolve();\n\t\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t\trouter.navigate('/admin/import/prepare');\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst [fileUrl, setFileUrl] = useSafely(useState(''));\n\n\tconst handleFileUrlChange = (event: FormEvent<HTMLInputElement>) => {\n\t\tsetFileUrl(event.currentTarget.value);\n\t};\n\n\tconst handleFileUrlImportButtonClick = async () => {\n\t\tif (!importerKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tawait downloadPublicImportFile({ importerKey, fileUrl });\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Import_requested_successfully') });\n\t\t\trouter.navigate('/admin/import/prepare');\n\t\t} catch (error) {\n\t\t\thandleError(error, t('Failed_To_upload_Import_File'));\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst [filePath, setFilePath] = useSafely(useState(''));\n\n\tconst handleFilePathChange = (event: FormEvent<HTMLInputElement>) => {\n\t\tsetFilePath(event.currentTarget.value);\n\t};\n\n\tconst handleFilePathImportButtonClick = async () => {\n\t\tif (!importerKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tawait downloadPublicImportFile({ importerKey, fileUrl: filePath });\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Import_requested_successfully') });\n\t\t\trouter.navigate('/admin/import/prepare');\n\t\t} catch (error) {\n\t\t\thandleError(error, t('Failed_To_upload_Import_File'));\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst importerKeySelectId = useUniqueId();\n\tconst fileTypeSelectId = useUniqueId();\n\tconst fileSourceInputId = useUniqueId();\n\tconst handleImportButtonClick =\n\t\t(fileType === 'upload' && handleFileUploadImportButtonClick) ||\n\t\t(fileType === 'url' && handleFileUrlImportButtonClick) ||\n\t\t(fileType === 'path' && handleFilePathImportButtonClick) ||\n\t\tundefined;\n\n\treturn (\n\t\t<Page className='page-settings'>\n\t\t\t<PageHeader title={t('Import_New_File')} onClickBack={() => router.navigate('/admin/import')}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t{importer && (\n\t\t\t\t\t\t<Button primary minHeight='x40' loading={isLoading} onClick={handleImportButtonClick}>\n\t\t\t\t\t\t\t{t('Import')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</ButtonGroup>\n\t\t\t</PageHeader>\n\t\t\t<PageScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='neg-x24' width='full' maxWidth='x580'>\n\t\t\t\t\t<Margins block='x24'>\n\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={importerKeySelectId}>\n\t\t\t\t\t\t\t\t{t('Import_Type')}\n\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tid={importerKeySelectId}\n\t\t\t\t\t\t\t\t\tvalue={importerKey}\n\t\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\t\tplaceholder={t('Select_an_option')}\n\t\t\t\t\t\t\t\t\tonChange={handleImporterKeyChange}\n\t\t\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t{importer && (\n\t\t\t\t\t\t\t\t<Field.Hint>\n\t\t\t\t\t\t\t\t\t{importer.key === 'csv'\n\t\t\t\t\t\t\t\t\t\t? t('Importer_From_Description_CSV')\n\t\t\t\t\t\t\t\t\t\t: t('Importer_From_Description', { from: t(importer.name as TranslationKey) })}\n\t\t\t\t\t\t\t\t</Field.Hint>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t{importer && (\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={fileTypeSelectId}>\n\t\t\t\t\t\t\t\t\t{t('File_Type')}\n\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tid={fileTypeSelectId}\n\t\t\t\t\t\t\t\t\t\tvalue={fileType}\n\t\t\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\t\t\tplaceholder={t('Select_an_option')}\n\t\t\t\t\t\t\t\t\t\tonChange={handleFileTypeChange}\n\t\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t\t['upload', t('Upload')],\n\t\t\t\t\t\t\t\t\t\t\t['url', t('Public_URL')],\n\t\t\t\t\t\t\t\t\t\t\t['path', t('Server_File_Path')],\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{importer && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{fileType === 'upload' && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{maxFileSize > 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t<Callout type='warning' marginBlock='x16'>\n\t\t\t\t\t\t\t\t\t\t\t\t{t('Importer_Upload_FileSize_Message', {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxFileSize: formatMemorySize(maxFileSize),\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</Callout>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Callout type='info' marginBlock='x16'>\n\t\t\t\t\t\t\t\t\t\t\t\t{t('Importer_Upload_Unlimited_FileSize')}\n\t\t\t\t\t\t\t\t\t\t\t</Callout>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={fileSourceInputId}>\n\t\t\t\t\t\t\t\t\t\t\t\t{t('Importer_Source_File')}\n\t\t\t\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox type='file' id={fileSourceInputId} onChange={handleImportFileChange} />\n\t\t\t\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t{files?.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{files.map((file, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Chip key={i} onClick={handleFileUploadChipClick(file)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{file.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Chip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{fileType === 'url' && (\n\t\t\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={fileSourceInputId}>\n\t\t\t\t\t\t\t\t\t\t\t{t('File_URL')}\n\t\t\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t<UrlInput id={fileSourceInputId} value={fileUrl} onChange={handleFileUrlChange} />\n\t\t\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{fileType === 'path' && (\n\t\t\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={fileSourceInputId}>\n\t\t\t\t\t\t\t\t\t\t\t{t('File_Path')}\n\t\t\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t<TextInput id={fileSourceInputId} value={filePath} onChange={handleFilePathChange} />\n\t\t\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t</Page>\n\t);\n}\n\nexport default NewImportPage;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/NewImportPage.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/import/NewImportPage.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/import/NewImportPage.tsx","sourceRoot":"","sources":["client/views/admin/import/NewImportPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Button, ButtonGroup, Callout, Chip, Field, Margins, Select, InputBox, TextInput, UrlInput } from '@rocket.chat/fuselage';\nimport { useUniqueId, useSafely } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useToastMessageDispatch, useRouter, useRouteParameter, useSetting, useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ChangeEvent, DragEvent, FormEvent, Key, SyntheticEvent } from 'react';\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\nimport { useFormatMemorySize } from '../../../hooks/useFormatMemorySize';\nimport { useErrorHandler } from './useErrorHandler';\n\n// TODO: review inner logic\nfunction NewImportPage() {\n\tconst { t } = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst handleError = useErrorHandler();\n\n\tconst [isLoading, setLoading] = useSafely(useState(false));\n\tconst [fileType, setFileType] = useSafely(useState('upload'));\n\n\tconst listImportersEndpoint = useEndpoint('GET', '/v1/importers.list');\n\tconst { data: importers, isLoading: isLoadingImporters } = useQuery(['importers'], async () => listImportersEndpoint(), {\n\t\trefetchOnWindowFocus: false,\n\t});\n\n\tconst options = useMemo(() => importers?.map(({ key, name }) => [key, t(name as TranslationKey)] as const) || [], [importers, t]);\n\n\tconst importerKey = useRouteParameter('importerKey');\n\tconst importer = useMemo(() => (importers || []).find(({ key }) => key === importerKey), [importerKey, importers]);\n\n\tconst maxFileSize = useSetting<number>('FileUpload_MaxFileSize') ?? 0;\n\n\tconst router = useRouter();\n\n\tconst uploadImportFile = useEndpoint('POST', '/v1/uploadImportFile');\n\tconst downloadPublicImportFile = useEndpoint('POST', '/v1/downloadPublicImportFile');\n\n\tuseEffect(() => {\n\t\tif (importerKey && !importer && !isLoadingImporters) {\n\t\t\trouter.navigate('/admin/import/new', { replace: true });\n\t\t}\n\t}, [importer, importerKey, router, isLoadingImporters]);\n\n\tconst formatMemorySize = useFormatMemorySize();\n\n\tconst handleImporterKeyChange = (importerKey: Key) => {\n\t\tif (typeof importerKey !== 'string') {\n\t\t\treturn;\n\t\t}\n\n\t\trouter.navigate(\n\t\t\t{\n\t\t\t\tpattern: '/admin/import/new/:importerKey?',\n\t\t\t\tparams: { importerKey },\n\t\t\t},\n\t\t\t{ replace: true },\n\t\t);\n\t};\n\n\tconst handleFileTypeChange = (fileType: Key) => {\n\t\tif (typeof fileType !== 'string') {\n\t\t\treturn;\n\t\t}\n\n\t\tsetFileType(fileType);\n\t};\n\n\tconst [files, setFiles] = useState<File[]>([]);\n\n\tconst isDataTransferEvent = <T extends SyntheticEvent>(event: T): event is T & DragEvent<HTMLInputElement> =>\n\t\tBoolean('dataTransfer' in event && (event as any).dataTransfer.files);\n\n\tconst handleImportFileChange = async (event: ChangeEvent<HTMLInputElement>) => {\n\t\tlet { files } = event.target;\n\t\tif (!files || files.length === 0) {\n\t\t\tif (isDataTransferEvent(event)) {\n\t\t\t\tfiles = event.dataTransfer.files;\n\t\t\t}\n\t\t}\n\n\t\tsetFiles(Array.from(files ?? []));\n\t};\n\n\tconst handleFileUploadChipClick = (file: File) => () => {\n\t\tsetFiles((files) => files.filter((_file) => _file !== file));\n\t};\n\n\tconst handleFileUploadImportButtonClick = async () => {\n\t\tif (!importerKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tawait Promise.all(\n\t\t\t\tArray.from(\n\t\t\t\t\tfiles,\n\t\t\t\t\t(file) =>\n\t\t\t\t\t\tnew Promise<void>((resolve) => {\n\t\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\t\treader.readAsDataURL(file);\n\t\t\t\t\t\t\treader.onloadend = async () => {\n\t\t\t\t\t\t\t\tconst result = reader.result as string;\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait uploadImportFile({\n\t\t\t\t\t\t\t\t\t\tbinaryContent: result.split(';base64,')[1],\n\t\t\t\t\t\t\t\t\t\tcontentType: file.type,\n\t\t\t\t\t\t\t\t\t\tfileName: file.name,\n\t\t\t\t\t\t\t\t\t\timporterKey,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\thandleError(error, t('Failed_To_upload_Import_File'));\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treader.onerror = () => resolve();\n\t\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t\trouter.navigate('/admin/import/prepare');\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst [fileUrl, setFileUrl] = useSafely(useState(''));\n\n\tconst handleFileUrlChange = (event: FormEvent<HTMLInputElement>) => {\n\t\tsetFileUrl(event.currentTarget.value);\n\t};\n\n\tconst handleFileUrlImportButtonClick = async () => {\n\t\tif (!importerKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tawait downloadPublicImportFile({ importerKey, fileUrl });\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Import_requested_successfully') });\n\t\t\trouter.navigate('/admin/import/prepare');\n\t\t} catch (error) {\n\t\t\thandleError(error, t('Failed_To_upload_Import_File'));\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst [filePath, setFilePath] = useSafely(useState(''));\n\n\tconst handleFilePathChange = (event: FormEvent<HTMLInputElement>) => {\n\t\tsetFilePath(event.currentTarget.value);\n\t};\n\n\tconst handleFilePathImportButtonClick = async () => {\n\t\tif (!importerKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tawait downloadPublicImportFile({ importerKey, fileUrl: filePath });\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Import_requested_successfully') });\n\t\t\trouter.navigate('/admin/import/prepare');\n\t\t} catch (error) {\n\t\t\thandleError(error, t('Failed_To_upload_Import_File'));\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst importerKeySelectId = useUniqueId();\n\tconst fileTypeSelectId = useUniqueId();\n\tconst fileSourceInputId = useUniqueId();\n\tconst handleImportButtonClick =\n\t\t(fileType === 'upload' && handleFileUploadImportButtonClick) ||\n\t\t(fileType === 'url' && handleFileUrlImportButtonClick) ||\n\t\t(fileType === 'path' && handleFilePathImportButtonClick) ||\n\t\tundefined;\n\n\treturn (\n\t\t<Page className='page-settings'>\n\t\t\t<PageHeader title={t('Import_New_File')} onClickBack={() => router.navigate('/admin/import')}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t{importer && (\n\t\t\t\t\t\t<Button primary minHeight='x40' loading={isLoading} onClick={handleImportButtonClick}>\n\t\t\t\t\t\t\t{t('Import')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</ButtonGroup>\n\t\t\t</PageHeader>\n\t\t\t<PageScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='neg-x24' width='full' maxWidth='x580'>\n\t\t\t\t\t<Margins block='x24'>\n\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={importerKeySelectId}>\n\t\t\t\t\t\t\t\t{t('Import_Type')}\n\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tid={importerKeySelectId}\n\t\t\t\t\t\t\t\t\tvalue={importerKey}\n\t\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\t\tplaceholder={t('Select_an_option')}\n\t\t\t\t\t\t\t\t\tonChange={handleImporterKeyChange}\n\t\t\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t{importer && (\n\t\t\t\t\t\t\t\t<Field.Hint>\n\t\t\t\t\t\t\t\t\t{importer.key === 'csv'\n\t\t\t\t\t\t\t\t\t\t? t('Importer_From_Description_CSV')\n\t\t\t\t\t\t\t\t\t\t: t('Importer_From_Description', { from: t(importer.name as TranslationKey) })}\n\t\t\t\t\t\t\t\t</Field.Hint>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t{importer && (\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={fileTypeSelectId}>\n\t\t\t\t\t\t\t\t\t{t('File_Type')}\n\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tid={fileTypeSelectId}\n\t\t\t\t\t\t\t\t\t\tvalue={fileType}\n\t\t\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\t\t\tplaceholder={t('Select_an_option')}\n\t\t\t\t\t\t\t\t\t\tonChange={handleFileTypeChange}\n\t\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t\t['upload', t('Upload')],\n\t\t\t\t\t\t\t\t\t\t\t['url', t('Public_URL')],\n\t\t\t\t\t\t\t\t\t\t\t['path', t('Server_File_Path')],\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{importer && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{fileType === 'upload' && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{maxFileSize > 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t<Callout type='warning' marginBlock='x16'>\n\t\t\t\t\t\t\t\t\t\t\t\t{t('Importer_Upload_FileSize_Message', {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxFileSize: formatMemorySize(maxFileSize),\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</Callout>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Callout type='info' marginBlock='x16'>\n\t\t\t\t\t\t\t\t\t\t\t\t{t('Importer_Upload_Unlimited_FileSize')}\n\t\t\t\t\t\t\t\t\t\t\t</Callout>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={fileSourceInputId}>\n\t\t\t\t\t\t\t\t\t\t\t\t{t('Importer_Source_File')}\n\t\t\t\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox type='file' id={fileSourceInputId} onChange={handleImportFileChange} />\n\t\t\t\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t{files?.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{files.map((file, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Chip key={i} onClick={handleFileUploadChipClick(file)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{file.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Chip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{fileType === 'url' && (\n\t\t\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={fileSourceInputId}>\n\t\t\t\t\t\t\t\t\t\t\t{t('File_URL')}\n\t\t\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t<UrlInput id={fileSourceInputId} value={fileUrl} onChange={handleFileUrlChange} />\n\t\t\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{fileType === 'path' && (\n\t\t\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={fileSourceInputId}>\n\t\t\t\t\t\t\t\t\t\t\t{t('File_Path')}\n\t\t\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t<TextInput id={fileSourceInputId} value={filePath} onChange={handleFilePathChange} />\n\t\t\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t</Page>\n\t);\n}\n\nexport default NewImportPage;\n"]}}},"code":"let Box, Button, ButtonGroup, Callout, Chip, Field, Margins, Select, InputBox, TextInput, UrlInput;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box(v) {\n    Box = v;\n  },\n  Button(v) {\n    Button = v;\n  },\n  ButtonGroup(v) {\n    ButtonGroup = v;\n  },\n  Callout(v) {\n    Callout = v;\n  },\n  Chip(v) {\n    Chip = v;\n  },\n  Field(v) {\n    Field = v;\n  },\n  Margins(v) {\n    Margins = v;\n  },\n  Select(v) {\n    Select = v;\n  },\n  InputBox(v) {\n    InputBox = v;\n  },\n  TextInput(v) {\n    TextInput = v;\n  },\n  UrlInput(v) {\n    UrlInput = v;\n  }\n}, 0);\nlet useUniqueId, useSafely;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useUniqueId(v) {\n    useUniqueId = v;\n  },\n  useSafely(v) {\n    useSafely = v;\n  }\n}, 1);\nlet useToastMessageDispatch, useRouter, useRouteParameter, useSetting, useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  },\n  useRouter(v) {\n    useRouter = v;\n  },\n  useRouteParameter(v) {\n    useRouteParameter = v;\n  },\n  useSetting(v) {\n    useSetting = v;\n  },\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n}, 2);\nlet useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  }\n}, 3);\nlet React, useState, useMemo, useEffect;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useState(v) {\n    useState = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  },\n  useEffect(v) {\n    useEffect = v;\n  }\n}, 4);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 5);\nlet Page, PageHeader, PageScrollableContentWithShadow;\nmodule.link(\"../../../components/Page\", {\n  Page(v) {\n    Page = v;\n  },\n  PageHeader(v) {\n    PageHeader = v;\n  },\n  PageScrollableContentWithShadow(v) {\n    PageScrollableContentWithShadow = v;\n  }\n}, 6);\nlet useFormatMemorySize;\nmodule.link(\"../../../hooks/useFormatMemorySize\", {\n  useFormatMemorySize(v) {\n    useFormatMemorySize = v;\n  }\n}, 7);\nlet useErrorHandler;\nmodule.link(\"./useErrorHandler\", {\n  useErrorHandler(v) {\n    useErrorHandler = v;\n  }\n}, 8);\n// TODO: review inner logic\nfunction NewImportPage() {\n  var _useSetting;\n  const {\n    t\n  } = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const handleError = useErrorHandler();\n  const [isLoading, setLoading] = useSafely(useState(false));\n  const [fileType, setFileType] = useSafely(useState('upload'));\n  const listImportersEndpoint = useEndpoint('GET', '/v1/importers.list');\n  const {\n    data: importers,\n    isLoading: isLoadingImporters\n  } = useQuery(['importers'], async () => listImportersEndpoint(), {\n    refetchOnWindowFocus: false\n  });\n  const options = useMemo(() => (importers === null || importers === void 0 ? void 0 : importers.map(_ref => {\n    let {\n      key,\n      name\n    } = _ref;\n    return [key, t(name)];\n  })) || [], [importers, t]);\n  const importerKey = useRouteParameter('importerKey');\n  const importer = useMemo(() => (importers || []).find(_ref2 => {\n    let {\n      key\n    } = _ref2;\n    return key === importerKey;\n  }), [importerKey, importers]);\n  const maxFileSize = (_useSetting = useSetting('FileUpload_MaxFileSize')) !== null && _useSetting !== void 0 ? _useSetting : 0;\n  const router = useRouter();\n  const uploadImportFile = useEndpoint('POST', '/v1/uploadImportFile');\n  const downloadPublicImportFile = useEndpoint('POST', '/v1/downloadPublicImportFile');\n  useEffect(() => {\n    if (importerKey && !importer && !isLoadingImporters) {\n      router.navigate('/admin/import/new', {\n        replace: true\n      });\n    }\n  }, [importer, importerKey, router, isLoadingImporters]);\n  const formatMemorySize = useFormatMemorySize();\n  const handleImporterKeyChange = importerKey => {\n    if (typeof importerKey !== 'string') {\n      return;\n    }\n    router.navigate({\n      pattern: '/admin/import/new/:importerKey?',\n      params: {\n        importerKey\n      }\n    }, {\n      replace: true\n    });\n  };\n  const handleFileTypeChange = fileType => {\n    if (typeof fileType !== 'string') {\n      return;\n    }\n    setFileType(fileType);\n  };\n  const [files, setFiles] = useState([]);\n  const isDataTransferEvent = event => Boolean('dataTransfer' in event && event.dataTransfer.files);\n  const handleImportFileChange = async event => {\n    var _files;\n    let {\n      files\n    } = event.target;\n    if (!files || files.length === 0) {\n      if (isDataTransferEvent(event)) {\n        files = event.dataTransfer.files;\n      }\n    }\n    setFiles(Array.from((_files = files) !== null && _files !== void 0 ? _files : []));\n  };\n  const handleFileUploadChipClick = file => () => {\n    setFiles(files => files.filter(_file => _file !== file));\n  };\n  const handleFileUploadImportButtonClick = async () => {\n    if (!importerKey) {\n      return;\n    }\n    setLoading(true);\n    try {\n      await Promise.all(Array.from(files, file => new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = async () => {\n          const result = reader.result;\n          try {\n            await uploadImportFile({\n              binaryContent: result.split(';base64,')[1],\n              contentType: file.type,\n              fileName: file.name,\n              importerKey\n            });\n          } catch (error) {\n            handleError(error, t('Failed_To_upload_Import_File'));\n          } finally {\n            resolve();\n          }\n        };\n        reader.onerror = () => resolve();\n      })));\n      router.navigate('/admin/import/prepare');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const [fileUrl, setFileUrl] = useSafely(useState(''));\n  const handleFileUrlChange = event => {\n    setFileUrl(event.currentTarget.value);\n  };\n  const handleFileUrlImportButtonClick = async () => {\n    if (!importerKey) {\n      return;\n    }\n    setLoading(true);\n    try {\n      await downloadPublicImportFile({\n        importerKey,\n        fileUrl\n      });\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Import_requested_successfully')\n      });\n      router.navigate('/admin/import/prepare');\n    } catch (error) {\n      handleError(error, t('Failed_To_upload_Import_File'));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const [filePath, setFilePath] = useSafely(useState(''));\n  const handleFilePathChange = event => {\n    setFilePath(event.currentTarget.value);\n  };\n  const handleFilePathImportButtonClick = async () => {\n    if (!importerKey) {\n      return;\n    }\n    setLoading(true);\n    try {\n      await downloadPublicImportFile({\n        importerKey,\n        fileUrl: filePath\n      });\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Import_requested_successfully')\n      });\n      router.navigate('/admin/import/prepare');\n    } catch (error) {\n      handleError(error, t('Failed_To_upload_Import_File'));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const importerKeySelectId = useUniqueId();\n  const fileTypeSelectId = useUniqueId();\n  const fileSourceInputId = useUniqueId();\n  const handleImportButtonClick = fileType === 'upload' && handleFileUploadImportButtonClick || fileType === 'url' && handleFileUrlImportButtonClick || fileType === 'path' && handleFilePathImportButtonClick || undefined;\n  return /*#__PURE__*/React.createElement(Page, {\n    className: \"page-settings\"\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    title: t('Import_New_File'),\n    onClickBack: () => router.navigate('/admin/import')\n  }, /*#__PURE__*/React.createElement(ButtonGroup, null, importer && /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    minHeight: \"x40\",\n    loading: isLoading,\n    onClick: handleImportButtonClick\n  }, t('Import')))), /*#__PURE__*/React.createElement(PageScrollableContentWithShadow, null, /*#__PURE__*/React.createElement(Box, {\n    marginInline: \"auto\",\n    marginBlock: \"neg-x24\",\n    width: \"full\",\n    maxWidth: \"x580\"\n  }, /*#__PURE__*/React.createElement(Margins, {\n    block: \"x24\"\n  }, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, {\n    alignSelf: \"stretch\",\n    htmlFor: importerKeySelectId\n  }, t('Import_Type')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(Select, {\n    id: importerKeySelectId,\n    value: importerKey,\n    disabled: isLoading,\n    placeholder: t('Select_an_option'),\n    onChange: handleImporterKeyChange,\n    options: options\n  })), importer && /*#__PURE__*/React.createElement(Field.Hint, null, importer.key === 'csv' ? t('Importer_From_Description_CSV') : t('Importer_From_Description', {\n    from: t(importer.name)\n  }))), importer && /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, {\n    alignSelf: \"stretch\",\n    htmlFor: fileTypeSelectId\n  }, t('File_Type')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(Select, {\n    id: fileTypeSelectId,\n    value: fileType,\n    disabled: isLoading,\n    placeholder: t('Select_an_option'),\n    onChange: handleFileTypeChange,\n    options: [['upload', t('Upload')], ['url', t('Public_URL')], ['path', t('Server_File_Path')]]\n  }))), importer && /*#__PURE__*/React.createElement(React.Fragment, null, fileType === 'upload' && /*#__PURE__*/React.createElement(React.Fragment, null, maxFileSize > 0 ? /*#__PURE__*/React.createElement(Callout, {\n    type: \"warning\",\n    marginBlock: \"x16\"\n  }, t('Importer_Upload_FileSize_Message', {\n    maxFileSize: formatMemorySize(maxFileSize)\n  })) : /*#__PURE__*/React.createElement(Callout, {\n    type: \"info\",\n    marginBlock: \"x16\"\n  }, t('Importer_Upload_Unlimited_FileSize')), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, {\n    alignSelf: \"stretch\",\n    htmlFor: fileSourceInputId\n  }, t('Importer_Source_File')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(InputBox, {\n    type: \"file\",\n    id: fileSourceInputId,\n    onChange: handleImportFileChange\n  })), (files === null || files === void 0 ? void 0 : files.length) > 0 && /*#__PURE__*/React.createElement(Field.Row, null, files.map((file, i) => /*#__PURE__*/React.createElement(Chip, {\n    key: i,\n    onClick: handleFileUploadChipClick(file)\n  }, file.name))))), fileType === 'url' && /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, {\n    alignSelf: \"stretch\",\n    htmlFor: fileSourceInputId\n  }, t('File_URL')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(UrlInput, {\n    id: fileSourceInputId,\n    value: fileUrl,\n    onChange: handleFileUrlChange\n  }))), fileType === 'path' && /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Field.Label, {\n    alignSelf: \"stretch\",\n    htmlFor: fileSourceInputId\n  }, t('File_Path')), /*#__PURE__*/React.createElement(Field.Row, null, /*#__PURE__*/React.createElement(TextInput, {\n    id: fileSourceInputId,\n    value: filePath,\n    onChange: handleFilePathChange\n  }))))))));\n}\nmodule.exportDefault(NewImportPage);","map":{"version":3,"names":["Box","Button","ButtonGroup","Callout","Chip","Field","Margins","Select","InputBox","TextInput","UrlInput","module","link","v","useUniqueId","useSafely","useToastMessageDispatch","useRouter","useRouteParameter","useSetting","useEndpoint","useQuery","React","useState","useMemo","useEffect","default","useTranslation","Page","PageHeader","PageScrollableContentWithShadow","useFormatMemorySize","useErrorHandler","NewImportPage","_useSetting","t","dispatchToastMessage","handleError","isLoading","setLoading","fileType","setFileType","listImportersEndpoint","data","importers","isLoadingImporters","refetchOnWindowFocus","options","map","_ref","key","name","importerKey","importer","find","_ref2","maxFileSize","router","uploadImportFile","downloadPublicImportFile","navigate","replace","formatMemorySize","handleImporterKeyChange","pattern","params","handleFileTypeChange","files","setFiles","isDataTransferEvent","event","Boolean","dataTransfer","handleImportFileChange","_files","target","length","Array","from","handleFileUploadChipClick","file","filter","_file","handleFileUploadImportButtonClick","Promise","all","resolve","reader","FileReader","readAsDataURL","onloadend","result","binaryContent","split","contentType","type","fileName","error","onerror","fileUrl","setFileUrl","handleFileUrlChange","currentTarget","value","handleFileUrlImportButtonClick","message","filePath","setFilePath","handleFilePathChange","handleFilePathImportButtonClick","importerKeySelectId","fileTypeSelectId","fileSourceInputId","handleImportButtonClick","undefined","createElement","className","title","onClickBack","primary","minHeight","loading","onClick","marginInline","marginBlock","width","maxWidth","block","Label","alignSelf","htmlFor","Row","id","disabled","placeholder","onChange","Hint","Fragment","i","exportDefault"],"sources":["client/views/admin/import/NewImportPage.tsx"],"sourcesContent":["import { Box, Button, ButtonGroup, Callout, Chip, Field, Margins, Select, InputBox, TextInput, UrlInput } from '@rocket.chat/fuselage';\nimport { useUniqueId, useSafely } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useToastMessageDispatch, useRouter, useRouteParameter, useSetting, useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ChangeEvent, DragEvent, FormEvent, Key, SyntheticEvent } from 'react';\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\nimport { useFormatMemorySize } from '../../../hooks/useFormatMemorySize';\nimport { useErrorHandler } from './useErrorHandler';\n\n// TODO: review inner logic\nfunction NewImportPage() {\n\tconst { t } = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst handleError = useErrorHandler();\n\n\tconst [isLoading, setLoading] = useSafely(useState(false));\n\tconst [fileType, setFileType] = useSafely(useState('upload'));\n\n\tconst listImportersEndpoint = useEndpoint('GET', '/v1/importers.list');\n\tconst { data: importers, isLoading: isLoadingImporters } = useQuery(['importers'], async () => listImportersEndpoint(), {\n\t\trefetchOnWindowFocus: false,\n\t});\n\n\tconst options = useMemo(() => importers?.map(({ key, name }) => [key, t(name as TranslationKey)] as const) || [], [importers, t]);\n\n\tconst importerKey = useRouteParameter('importerKey');\n\tconst importer = useMemo(() => (importers || []).find(({ key }) => key === importerKey), [importerKey, importers]);\n\n\tconst maxFileSize = useSetting<number>('FileUpload_MaxFileSize') ?? 0;\n\n\tconst router = useRouter();\n\n\tconst uploadImportFile = useEndpoint('POST', '/v1/uploadImportFile');\n\tconst downloadPublicImportFile = useEndpoint('POST', '/v1/downloadPublicImportFile');\n\n\tuseEffect(() => {\n\t\tif (importerKey && !importer && !isLoadingImporters) {\n\t\t\trouter.navigate('/admin/import/new', { replace: true });\n\t\t}\n\t}, [importer, importerKey, router, isLoadingImporters]);\n\n\tconst formatMemorySize = useFormatMemorySize();\n\n\tconst handleImporterKeyChange = (importerKey: Key) => {\n\t\tif (typeof importerKey !== 'string') {\n\t\t\treturn;\n\t\t}\n\n\t\trouter.navigate(\n\t\t\t{\n\t\t\t\tpattern: '/admin/import/new/:importerKey?',\n\t\t\t\tparams: { importerKey },\n\t\t\t},\n\t\t\t{ replace: true },\n\t\t);\n\t};\n\n\tconst handleFileTypeChange = (fileType: Key) => {\n\t\tif (typeof fileType !== 'string') {\n\t\t\treturn;\n\t\t}\n\n\t\tsetFileType(fileType);\n\t};\n\n\tconst [files, setFiles] = useState<File[]>([]);\n\n\tconst isDataTransferEvent = <T extends SyntheticEvent>(event: T): event is T & DragEvent<HTMLInputElement> =>\n\t\tBoolean('dataTransfer' in event && (event as any).dataTransfer.files);\n\n\tconst handleImportFileChange = async (event: ChangeEvent<HTMLInputElement>) => {\n\t\tlet { files } = event.target;\n\t\tif (!files || files.length === 0) {\n\t\t\tif (isDataTransferEvent(event)) {\n\t\t\t\tfiles = event.dataTransfer.files;\n\t\t\t}\n\t\t}\n\n\t\tsetFiles(Array.from(files ?? []));\n\t};\n\n\tconst handleFileUploadChipClick = (file: File) => () => {\n\t\tsetFiles((files) => files.filter((_file) => _file !== file));\n\t};\n\n\tconst handleFileUploadImportButtonClick = async () => {\n\t\tif (!importerKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tawait Promise.all(\n\t\t\t\tArray.from(\n\t\t\t\t\tfiles,\n\t\t\t\t\t(file) =>\n\t\t\t\t\t\tnew Promise<void>((resolve) => {\n\t\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\t\treader.readAsDataURL(file);\n\t\t\t\t\t\t\treader.onloadend = async () => {\n\t\t\t\t\t\t\t\tconst result = reader.result as string;\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait uploadImportFile({\n\t\t\t\t\t\t\t\t\t\tbinaryContent: result.split(';base64,')[1],\n\t\t\t\t\t\t\t\t\t\tcontentType: file.type,\n\t\t\t\t\t\t\t\t\t\tfileName: file.name,\n\t\t\t\t\t\t\t\t\t\timporterKey,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\thandleError(error, t('Failed_To_upload_Import_File'));\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treader.onerror = () => resolve();\n\t\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t);\n\t\t\trouter.navigate('/admin/import/prepare');\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst [fileUrl, setFileUrl] = useSafely(useState(''));\n\n\tconst handleFileUrlChange = (event: FormEvent<HTMLInputElement>) => {\n\t\tsetFileUrl(event.currentTarget.value);\n\t};\n\n\tconst handleFileUrlImportButtonClick = async () => {\n\t\tif (!importerKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tawait downloadPublicImportFile({ importerKey, fileUrl });\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Import_requested_successfully') });\n\t\t\trouter.navigate('/admin/import/prepare');\n\t\t} catch (error) {\n\t\t\thandleError(error, t('Failed_To_upload_Import_File'));\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst [filePath, setFilePath] = useSafely(useState(''));\n\n\tconst handleFilePathChange = (event: FormEvent<HTMLInputElement>) => {\n\t\tsetFilePath(event.currentTarget.value);\n\t};\n\n\tconst handleFilePathImportButtonClick = async () => {\n\t\tif (!importerKey) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoading(true);\n\n\t\ttry {\n\t\t\tawait downloadPublicImportFile({ importerKey, fileUrl: filePath });\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Import_requested_successfully') });\n\t\t\trouter.navigate('/admin/import/prepare');\n\t\t} catch (error) {\n\t\t\thandleError(error, t('Failed_To_upload_Import_File'));\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tconst importerKeySelectId = useUniqueId();\n\tconst fileTypeSelectId = useUniqueId();\n\tconst fileSourceInputId = useUniqueId();\n\tconst handleImportButtonClick =\n\t\t(fileType === 'upload' && handleFileUploadImportButtonClick) ||\n\t\t(fileType === 'url' && handleFileUrlImportButtonClick) ||\n\t\t(fileType === 'path' && handleFilePathImportButtonClick) ||\n\t\tundefined;\n\n\treturn (\n\t\t<Page className='page-settings'>\n\t\t\t<PageHeader title={t('Import_New_File')} onClickBack={() => router.navigate('/admin/import')}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t{importer && (\n\t\t\t\t\t\t<Button primary minHeight='x40' loading={isLoading} onClick={handleImportButtonClick}>\n\t\t\t\t\t\t\t{t('Import')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</ButtonGroup>\n\t\t\t</PageHeader>\n\t\t\t<PageScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='neg-x24' width='full' maxWidth='x580'>\n\t\t\t\t\t<Margins block='x24'>\n\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={importerKeySelectId}>\n\t\t\t\t\t\t\t\t{t('Import_Type')}\n\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tid={importerKeySelectId}\n\t\t\t\t\t\t\t\t\tvalue={importerKey}\n\t\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\t\tplaceholder={t('Select_an_option')}\n\t\t\t\t\t\t\t\t\tonChange={handleImporterKeyChange}\n\t\t\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t{importer && (\n\t\t\t\t\t\t\t\t<Field.Hint>\n\t\t\t\t\t\t\t\t\t{importer.key === 'csv'\n\t\t\t\t\t\t\t\t\t\t? t('Importer_From_Description_CSV')\n\t\t\t\t\t\t\t\t\t\t: t('Importer_From_Description', { from: t(importer.name as TranslationKey) })}\n\t\t\t\t\t\t\t\t</Field.Hint>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t{importer && (\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={fileTypeSelectId}>\n\t\t\t\t\t\t\t\t\t{t('File_Type')}\n\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tid={fileTypeSelectId}\n\t\t\t\t\t\t\t\t\t\tvalue={fileType}\n\t\t\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\t\t\tplaceholder={t('Select_an_option')}\n\t\t\t\t\t\t\t\t\t\tonChange={handleFileTypeChange}\n\t\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t\t['upload', t('Upload')],\n\t\t\t\t\t\t\t\t\t\t\t['url', t('Public_URL')],\n\t\t\t\t\t\t\t\t\t\t\t['path', t('Server_File_Path')],\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{importer && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{fileType === 'upload' && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{maxFileSize > 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t<Callout type='warning' marginBlock='x16'>\n\t\t\t\t\t\t\t\t\t\t\t\t{t('Importer_Upload_FileSize_Message', {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxFileSize: formatMemorySize(maxFileSize),\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t</Callout>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Callout type='info' marginBlock='x16'>\n\t\t\t\t\t\t\t\t\t\t\t\t{t('Importer_Upload_Unlimited_FileSize')}\n\t\t\t\t\t\t\t\t\t\t\t</Callout>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={fileSourceInputId}>\n\t\t\t\t\t\t\t\t\t\t\t\t{t('Importer_Source_File')}\n\t\t\t\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputBox type='file' id={fileSourceInputId} onChange={handleImportFileChange} />\n\t\t\t\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t{files?.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{files.map((file, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Chip key={i} onClick={handleFileUploadChipClick(file)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{file.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Chip>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{fileType === 'url' && (\n\t\t\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={fileSourceInputId}>\n\t\t\t\t\t\t\t\t\t\t\t{t('File_URL')}\n\t\t\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t<UrlInput id={fileSourceInputId} value={fileUrl} onChange={handleFileUrlChange} />\n\t\t\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{fileType === 'path' && (\n\t\t\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t\t\t<Field.Label alignSelf='stretch' htmlFor={fileSourceInputId}>\n\t\t\t\t\t\t\t\t\t\t\t{t('File_Path')}\n\t\t\t\t\t\t\t\t\t\t</Field.Label>\n\t\t\t\t\t\t\t\t\t\t<Field.Row>\n\t\t\t\t\t\t\t\t\t\t\t<TextInput id={fileSourceInputId} value={filePath} onChange={handleFilePathChange} />\n\t\t\t\t\t\t\t\t\t\t</Field.Row>\n\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t</Page>\n\t);\n}\n\nexport default NewImportPage;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b2da5fb9be9e32826240265bf723d36a3034e4cf"}
