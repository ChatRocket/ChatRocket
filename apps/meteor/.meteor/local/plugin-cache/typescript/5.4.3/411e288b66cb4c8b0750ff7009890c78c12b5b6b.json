{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/ImportProgressPage.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/admin/import/ImportProgressPage.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/ImportProgressPage.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/import/ImportProgressPage.tsx","sourceRoot":"","sources":["client/views/admin/import/ImportProgressPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { ProgressStep } from '@rocket.chat/core-typings';\nimport { Box, Margins, ProgressBar, Throbber } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch, useEndpoint, useTranslation, useStream, useRouter } from '@rocket.chat/ui-contexts';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport React, { useEffect } from 'react';\n\nimport { ImportingStartedStates } from '../../../../app/importer/lib/ImporterProgressStep';\nimport { numberFormat } from '../../../../lib/utils/stringUtils';\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\nimport { useErrorHandler } from './useErrorHandler';\n\n// TODO: review inner logic\nconst ImportProgressPage = function ImportProgressPage() {\n\tconst queryClient = useQueryClient();\n\tconst streamer = useStream('importers');\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst handleError = useErrorHandler();\n\n\tconst router = useRouter();\n\n\tconst getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n\tconst getImportProgress = useEndpoint('GET', '/v1/getImportProgress');\n\n\tconst mutation = useMutation({\n\t\tmutationFn: async (props: { step: ProgressStep; completed: number; total: number }) => {\n\t\t\tqueryClient.setQueryData<{\n\t\t\t\tstep: ProgressStep;\n\t\t\t\tcompleted: number;\n\t\t\t\ttotal: number;\n\t\t\t}>(['importers', 'progress'], props);\n\t\t},\n\t});\n\n\tconst currentOperation = useQuery(\n\t\t['ImportProgressPage', 'currentOperation'],\n\t\tasync () => {\n\t\t\tconst { operation } = await getCurrentImportOperation();\n\t\t\treturn operation;\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 1000,\n\t\t\tonSuccess: ({ valid, status }) => {\n\t\t\t\tif (!valid) {\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (status === 'importer_done') {\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Importer_done') });\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!(ImportingStartedStates as string[]).includes(status)) {\n\t\t\t\t\trouter.navigate('/admin/import/prepare');\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t},\n\t\t},\n\t);\n\n\tconst handleProgressUpdated = useMutableCallback(\n\t\t({ key, step, completed, total }: { key: string; step: ProgressStep; completed: number; total: number }) => {\n\t\t\tif (!currentOperation.isSuccess) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (key.toLowerCase() !== currentOperation.data.importerKey.toLowerCase()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = step[0].toUpperCase() + step.slice(1);\n\n\t\t\tswitch (step) {\n\t\t\t\tcase 'importer_done':\n\t\t\t\t\tt.has(message) &&\n\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tmessage: t(message),\n\t\t\t\t\t\t});\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'importer_import_failed':\n\t\t\t\tcase 'importer_import_cancelled':\n\t\t\t\t\tt.has(message) && handleError(message);\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmutation.mutate({ step, completed, total });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t);\n\n\tconst progress = useQuery(\n\t\t['importers', 'progress'],\n\t\tasync () => {\n\t\t\tconst { key, step, count: { completed = 0, total = 0 } = {} } = await getImportProgress();\n\t\t\treturn {\n\t\t\t\tkey,\n\t\t\t\tstep,\n\t\t\t\tcompleted,\n\t\t\t\ttotal,\n\t\t\t};\n\t\t},\n\t\t{\n\t\t\tenabled: !!currentOperation.isSuccess,\n\t\t\tonSuccess: (progress) => {\n\t\t\t\tif (!progress) {\n\t\t\t\t\tdispatchToastMessage({ type: 'warning', message: t('Importer_not_in_progress') });\n\t\t\t\t\trouter.navigate('/admin/import/prepare');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// do not use the endpoint data to update the completed progress, leave it to the streamer\n\t\t\t\tif (!(ImportingStartedStates as string[]).includes(progress.step)) {\n\t\t\t\t\thandleProgressUpdated({\n\t\t\t\t\t\tkey: progress.key,\n\t\t\t\t\t\tstep: progress.step,\n\t\t\t\t\t\ttotal: progress.total,\n\t\t\t\t\t\tcompleted: progress.completed,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t},\n\t\t},\n\t);\n\n\tuseEffect(() => {\n\t\treturn streamer('progress', (progress) => {\n\t\t\t// There shouldn't be any progress update sending only the rate at this point of the process\n\t\t\tif (!('rate' in progress)) {\n\t\t\t\thandleProgressUpdated({\n\t\t\t\t\tkey: progress.key,\n\t\t\t\t\tstep: progress.step,\n\t\t\t\t\tcompleted: progress.count.completed,\n\t\t\t\t\ttotal: progress.count.total,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}, [handleProgressUpdated, streamer]);\n\n\treturn (\n\t\t<Page>\n\t\t\t<PageHeader title={t('Importing_Data')} />\n\t\t\t<PageScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='neg-x24' width='full' maxWidth='x580'>\n\t\t\t\t\t<Margins block={24}>\n\t\t\t\t\t\t{currentOperation.isLoading && <Throbber justifyContent='center' />}\n\t\t\t\t\t\t{progress.fetchStatus !== 'idle' && progress.isLoading && <Throbber justifyContent='center' />}\n\n\t\t\t\t\t\t{(currentOperation.isError || progress.isError) && <Box is='p'>{t('Failed_To_Load_Import_Data')}</Box>}\n\t\t\t\t\t\t{progress.isSuccess && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Box is='p' fontScale='p2'>\n\t\t\t\t\t\t\t\t\t{t((progress.data.step[0].toUpperCase() + progress.data.step.slice(1)) as any)}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Box display='flex' justifyContent='center'>\n\t\t\t\t\t\t\t\t\t<ProgressBar percentage={(progress.data.completed / progress.data.total) * 100} />\n\t\t\t\t\t\t\t\t\t<Box is='span' fontScale='p2' mis={24}>\n\t\t\t\t\t\t\t\t\t\t{numberFormat((progress.data.completed / progress.data.total) * 100, 0)}%\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t</Page>\n\t);\n};\n\nexport default ImportProgressPage;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/ImportProgressPage.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/import/ImportProgressPage.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/import/ImportProgressPage.tsx","sourceRoot":"","sources":["client/views/admin/import/ImportProgressPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { ProgressStep } from '@rocket.chat/core-typings';\nimport { Box, Margins, ProgressBar, Throbber } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch, useEndpoint, useTranslation, useStream, useRouter } from '@rocket.chat/ui-contexts';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport React, { useEffect } from 'react';\n\nimport { ImportingStartedStates } from '../../../../app/importer/lib/ImporterProgressStep';\nimport { numberFormat } from '../../../../lib/utils/stringUtils';\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\nimport { useErrorHandler } from './useErrorHandler';\n\n// TODO: review inner logic\nconst ImportProgressPage = function ImportProgressPage() {\n\tconst queryClient = useQueryClient();\n\tconst streamer = useStream('importers');\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst handleError = useErrorHandler();\n\n\tconst router = useRouter();\n\n\tconst getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n\tconst getImportProgress = useEndpoint('GET', '/v1/getImportProgress');\n\n\tconst mutation = useMutation({\n\t\tmutationFn: async (props: { step: ProgressStep; completed: number; total: number }) => {\n\t\t\tqueryClient.setQueryData<{\n\t\t\t\tstep: ProgressStep;\n\t\t\t\tcompleted: number;\n\t\t\t\ttotal: number;\n\t\t\t}>(['importers', 'progress'], props);\n\t\t},\n\t});\n\n\tconst currentOperation = useQuery(\n\t\t['ImportProgressPage', 'currentOperation'],\n\t\tasync () => {\n\t\t\tconst { operation } = await getCurrentImportOperation();\n\t\t\treturn operation;\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 1000,\n\t\t\tonSuccess: ({ valid, status }) => {\n\t\t\t\tif (!valid) {\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (status === 'importer_done') {\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Importer_done') });\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!(ImportingStartedStates as string[]).includes(status)) {\n\t\t\t\t\trouter.navigate('/admin/import/prepare');\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t},\n\t\t},\n\t);\n\n\tconst handleProgressUpdated = useMutableCallback(\n\t\t({ key, step, completed, total }: { key: string; step: ProgressStep; completed: number; total: number }) => {\n\t\t\tif (!currentOperation.isSuccess) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (key.toLowerCase() !== currentOperation.data.importerKey.toLowerCase()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = step[0].toUpperCase() + step.slice(1);\n\n\t\t\tswitch (step) {\n\t\t\t\tcase 'importer_done':\n\t\t\t\t\tt.has(message) &&\n\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tmessage: t(message),\n\t\t\t\t\t\t});\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'importer_import_failed':\n\t\t\t\tcase 'importer_import_cancelled':\n\t\t\t\t\tt.has(message) && handleError(message);\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmutation.mutate({ step, completed, total });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t);\n\n\tconst progress = useQuery(\n\t\t['importers', 'progress'],\n\t\tasync () => {\n\t\t\tconst { key, step, count: { completed = 0, total = 0 } = {} } = await getImportProgress();\n\t\t\treturn {\n\t\t\t\tkey,\n\t\t\t\tstep,\n\t\t\t\tcompleted,\n\t\t\t\ttotal,\n\t\t\t};\n\t\t},\n\t\t{\n\t\t\tenabled: !!currentOperation.isSuccess,\n\t\t\tonSuccess: (progress) => {\n\t\t\t\tif (!progress) {\n\t\t\t\t\tdispatchToastMessage({ type: 'warning', message: t('Importer_not_in_progress') });\n\t\t\t\t\trouter.navigate('/admin/import/prepare');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// do not use the endpoint data to update the completed progress, leave it to the streamer\n\t\t\t\tif (!(ImportingStartedStates as string[]).includes(progress.step)) {\n\t\t\t\t\thandleProgressUpdated({\n\t\t\t\t\t\tkey: progress.key,\n\t\t\t\t\t\tstep: progress.step,\n\t\t\t\t\t\ttotal: progress.total,\n\t\t\t\t\t\tcompleted: progress.completed,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t},\n\t\t},\n\t);\n\n\tuseEffect(() => {\n\t\treturn streamer('progress', (progress) => {\n\t\t\t// There shouldn't be any progress update sending only the rate at this point of the process\n\t\t\tif (!('rate' in progress)) {\n\t\t\t\thandleProgressUpdated({\n\t\t\t\t\tkey: progress.key,\n\t\t\t\t\tstep: progress.step,\n\t\t\t\t\tcompleted: progress.count.completed,\n\t\t\t\t\ttotal: progress.count.total,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}, [handleProgressUpdated, streamer]);\n\n\treturn (\n\t\t<Page>\n\t\t\t<PageHeader title={t('Importing_Data')} />\n\t\t\t<PageScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='neg-x24' width='full' maxWidth='x580'>\n\t\t\t\t\t<Margins block={24}>\n\t\t\t\t\t\t{currentOperation.isLoading && <Throbber justifyContent='center' />}\n\t\t\t\t\t\t{progress.fetchStatus !== 'idle' && progress.isLoading && <Throbber justifyContent='center' />}\n\n\t\t\t\t\t\t{(currentOperation.isError || progress.isError) && <Box is='p'>{t('Failed_To_Load_Import_Data')}</Box>}\n\t\t\t\t\t\t{progress.isSuccess && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Box is='p' fontScale='p2'>\n\t\t\t\t\t\t\t\t\t{t((progress.data.step[0].toUpperCase() + progress.data.step.slice(1)) as any)}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Box display='flex' justifyContent='center'>\n\t\t\t\t\t\t\t\t\t<ProgressBar percentage={(progress.data.completed / progress.data.total) * 100} />\n\t\t\t\t\t\t\t\t\t<Box is='span' fontScale='p2' mis={24}>\n\t\t\t\t\t\t\t\t\t\t{numberFormat((progress.data.completed / progress.data.total) * 100, 0)}%\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t</Page>\n\t);\n};\n\nexport default ImportProgressPage;\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar Box, Margins, ProgressBar, Throbber;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box: function (v) {\n    Box = v;\n  },\n  Margins: function (v) {\n    Margins = v;\n  },\n  ProgressBar: function (v) {\n    ProgressBar = v;\n  },\n  Throbber: function (v) {\n    Throbber = v;\n  }\n}, 0);\nvar useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback: function (v) {\n    useMutableCallback = v;\n  }\n}, 1);\nvar useToastMessageDispatch, useEndpoint, useTranslation, useStream, useRouter;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useToastMessageDispatch: function (v) {\n    useToastMessageDispatch = v;\n  },\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  },\n  useTranslation: function (v) {\n    useTranslation = v;\n  },\n  useStream: function (v) {\n    useStream = v;\n  },\n  useRouter: function (v) {\n    useRouter = v;\n  }\n}, 2);\nvar useQuery, useMutation, useQueryClient;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery: function (v) {\n    useQuery = v;\n  },\n  useMutation: function (v) {\n    useMutation = v;\n  },\n  useQueryClient: function (v) {\n    useQueryClient = v;\n  }\n}, 3);\nvar React, useEffect;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  useEffect: function (v) {\n    useEffect = v;\n  }\n}, 4);\nvar ImportingStartedStates;\nmodule.link(\"../../../../app/importer/lib/ImporterProgressStep\", {\n  ImportingStartedStates: function (v) {\n    ImportingStartedStates = v;\n  }\n}, 5);\nvar numberFormat;\nmodule.link(\"../../../../lib/utils/stringUtils\", {\n  numberFormat: function (v) {\n    numberFormat = v;\n  }\n}, 6);\nvar Page, PageHeader, PageScrollableContentWithShadow;\nmodule.link(\"../../../components/Page\", {\n  Page: function (v) {\n    Page = v;\n  },\n  PageHeader: function (v) {\n    PageHeader = v;\n  },\n  PageScrollableContentWithShadow: function (v) {\n    PageScrollableContentWithShadow = v;\n  }\n}, 7);\nvar useErrorHandler;\nmodule.link(\"./useErrorHandler\", {\n  useErrorHandler: function (v) {\n    useErrorHandler = v;\n  }\n}, 8);\n// TODO: review inner logic\nvar ImportProgressPage = function () {\n  function ImportProgressPage() {\n    var queryClient = useQueryClient();\n    var streamer = useStream('importers');\n    var t = useTranslation();\n    var dispatchToastMessage = useToastMessageDispatch();\n    var handleError = useErrorHandler();\n    var router = useRouter();\n    var getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n    var getImportProgress = useEndpoint('GET', '/v1/getImportProgress');\n    var mutation = useMutation({\n      mutationFn: function () {\n        function _callee(props) {\n          return _regeneratorRuntime.async(function () {\n            function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  queryClient.setQueryData(['importers', 'progress'], props);\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n            return _callee$;\n          }(), null, null, null, Promise);\n        }\n        return _callee;\n      }()\n    });\n    var currentOperation = useQuery(['ImportProgressPage', 'currentOperation'], function () {\n      function _callee2() {\n        var _await$getCurrentImpo, operation;\n        return _regeneratorRuntime.async(function () {\n          function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(getCurrentImportOperation());\n              case 2:\n                _await$getCurrentImpo = _context2.sent;\n                operation = _await$getCurrentImpo.operation;\n                return _context2.abrupt(\"return\", operation);\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n          return _callee2$;\n        }(), null, null, null, Promise);\n      }\n      return _callee2;\n    }(), {\n      refetchInterval: 1000,\n      onSuccess: function (_ref) {\n        var valid = _ref.valid,\n          status = _ref.status;\n        if (!valid) {\n          router.navigate('/admin/import');\n          return;\n        }\n        if (status === 'importer_done') {\n          dispatchToastMessage({\n            type: 'success',\n            message: t('Importer_done')\n          });\n          router.navigate('/admin/import');\n          return;\n        }\n        if (!ImportingStartedStates.includes(status)) {\n          router.navigate('/admin/import/prepare');\n        }\n      },\n      onError: function (error) {\n        handleError(error, t('Failed_To_Load_Import_Data'));\n        router.navigate('/admin/import');\n      }\n    });\n    var handleProgressUpdated = useMutableCallback(function (_ref2) {\n      var key = _ref2.key,\n        step = _ref2.step,\n        completed = _ref2.completed,\n        total = _ref2.total;\n      if (!currentOperation.isSuccess) {\n        return;\n      }\n      if (key.toLowerCase() !== currentOperation.data.importerKey.toLowerCase()) {\n        return;\n      }\n      var message = step[0].toUpperCase() + step.slice(1);\n      switch (step) {\n        case 'importer_done':\n          t.has(message) && dispatchToastMessage({\n            type: 'success',\n            message: t(message)\n          });\n          router.navigate('/admin/import');\n          return;\n        case 'importer_import_failed':\n        case 'importer_import_cancelled':\n          t.has(message) && handleError(message);\n          router.navigate('/admin/import');\n          return;\n        default:\n          mutation.mutate({\n            step: step,\n            completed: completed,\n            total: total\n          });\n          break;\n      }\n    });\n    var progress = useQuery(['importers', 'progress'], function () {\n      function _callee3() {\n        var _await$getImportProgr, key, step, _await$getImportProgr2, _await$getImportProgr3, completed, _await$getImportProgr4, total;\n        return _regeneratorRuntime.async(function () {\n          function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _regeneratorRuntime.awrap(getImportProgress());\n              case 2:\n                _await$getImportProgr = _context3.sent;\n                key = _await$getImportProgr.key;\n                step = _await$getImportProgr.step;\n                _await$getImportProgr2 = _await$getImportProgr.count;\n                _await$getImportProgr2 = _await$getImportProgr2 === void 0 ? {} : _await$getImportProgr2;\n                _await$getImportProgr3 = _await$getImportProgr2.completed, completed = _await$getImportProgr3 === void 0 ? 0 : _await$getImportProgr3, _await$getImportProgr4 = _await$getImportProgr2.total, total = _await$getImportProgr4 === void 0 ? 0 : _await$getImportProgr4;\n                return _context3.abrupt(\"return\", {\n                  key: key,\n                  step: step,\n                  completed: completed,\n                  total: total\n                });\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n          return _callee3$;\n        }(), null, null, null, Promise);\n      }\n      return _callee3;\n    }(), {\n      enabled: !!currentOperation.isSuccess,\n      onSuccess: function (progress) {\n        if (!progress) {\n          dispatchToastMessage({\n            type: 'warning',\n            message: t('Importer_not_in_progress')\n          });\n          router.navigate('/admin/import/prepare');\n          return;\n        }\n        // do not use the endpoint data to update the completed progress, leave it to the streamer\n        if (!ImportingStartedStates.includes(progress.step)) {\n          handleProgressUpdated({\n            key: progress.key,\n            step: progress.step,\n            total: progress.total,\n            completed: progress.completed\n          });\n        }\n      },\n      onError: function (error) {\n        handleError(error, t('Failed_To_Load_Import_Data'));\n        router.navigate('/admin/import');\n      }\n    });\n    useEffect(function () {\n      return streamer('progress', function (progress) {\n        // There shouldn't be any progress update sending only the rate at this point of the process\n        if (!('rate' in progress)) {\n          handleProgressUpdated({\n            key: progress.key,\n            step: progress.step,\n            completed: progress.count.completed,\n            total: progress.count.total\n          });\n        }\n      });\n    }, [handleProgressUpdated, streamer]);\n    return /*#__PURE__*/React.createElement(Page, null, /*#__PURE__*/React.createElement(PageHeader, {\n      title: t('Importing_Data')\n    }), /*#__PURE__*/React.createElement(PageScrollableContentWithShadow, null, /*#__PURE__*/React.createElement(Box, {\n      marginInline: \"auto\",\n      marginBlock: \"neg-x24\",\n      width: \"full\",\n      maxWidth: \"x580\"\n    }, /*#__PURE__*/React.createElement(Margins, {\n      block: 24\n    }, currentOperation.isLoading && /*#__PURE__*/React.createElement(Throbber, {\n      justifyContent: \"center\"\n    }), progress.fetchStatus !== 'idle' && progress.isLoading && /*#__PURE__*/React.createElement(Throbber, {\n      justifyContent: \"center\"\n    }), (currentOperation.isError || progress.isError) && /*#__PURE__*/React.createElement(Box, {\n      is: \"p\"\n    }, t('Failed_To_Load_Import_Data')), progress.isSuccess && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n      is: \"p\",\n      fontScale: \"p2\"\n    }, t(progress.data.step[0].toUpperCase() + progress.data.step.slice(1))), /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"center\"\n    }, /*#__PURE__*/React.createElement(ProgressBar, {\n      percentage: progress.data.completed / progress.data.total * 100\n    }), /*#__PURE__*/React.createElement(Box, {\n      is: \"span\",\n      fontScale: \"p2\",\n      mis: 24\n    }, numberFormat(progress.data.completed / progress.data.total * 100, 0), \"%\")))))));\n  }\n  return ImportProgressPage;\n}();\nmodule.exportDefault(ImportProgressPage);","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","Box","Margins","ProgressBar","Throbber","useMutableCallback","useToastMessageDispatch","useEndpoint","useTranslation","useStream","useRouter","useQuery","useMutation","useQueryClient","React","useEffect","ImportingStartedStates","numberFormat","Page","PageHeader","PageScrollableContentWithShadow","useErrorHandler","ImportProgressPage","queryClient","streamer","t","dispatchToastMessage","handleError","router","getCurrentImportOperation","getImportProgress","mutation","mutationFn","_callee","props","async","_callee$","_context","prev","next","setQueryData","stop","Promise","currentOperation","_callee2","_await$getCurrentImpo","operation","_callee2$","_context2","awrap","sent","abrupt","refetchInterval","onSuccess","_ref","valid","status","navigate","type","message","includes","onError","error","handleProgressUpdated","_ref2","key","step","completed","total","isSuccess","toLowerCase","data","importerKey","toUpperCase","slice","has","mutate","progress","_callee3","_await$getImportProgr","_await$getImportProgr2","_await$getImportProgr3","_await$getImportProgr4","_callee3$","_context3","count","enabled","createElement","title","marginInline","marginBlock","width","maxWidth","block","isLoading","justifyContent","fetchStatus","isError","is","Fragment","fontScale","display","percentage","mis","exportDefault"],"sources":["client/views/admin/import/ImportProgressPage.tsx"],"sourcesContent":["import type { ProgressStep } from '@rocket.chat/core-typings';\nimport { Box, Margins, ProgressBar, Throbber } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch, useEndpoint, useTranslation, useStream, useRouter } from '@rocket.chat/ui-contexts';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport React, { useEffect } from 'react';\n\nimport { ImportingStartedStates } from '../../../../app/importer/lib/ImporterProgressStep';\nimport { numberFormat } from '../../../../lib/utils/stringUtils';\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\nimport { useErrorHandler } from './useErrorHandler';\n\n// TODO: review inner logic\nconst ImportProgressPage = function ImportProgressPage() {\n\tconst queryClient = useQueryClient();\n\tconst streamer = useStream('importers');\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst handleError = useErrorHandler();\n\n\tconst router = useRouter();\n\n\tconst getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n\tconst getImportProgress = useEndpoint('GET', '/v1/getImportProgress');\n\n\tconst mutation = useMutation({\n\t\tmutationFn: async (props: { step: ProgressStep; completed: number; total: number }) => {\n\t\t\tqueryClient.setQueryData<{\n\t\t\t\tstep: ProgressStep;\n\t\t\t\tcompleted: number;\n\t\t\t\ttotal: number;\n\t\t\t}>(['importers', 'progress'], props);\n\t\t},\n\t});\n\n\tconst currentOperation = useQuery(\n\t\t['ImportProgressPage', 'currentOperation'],\n\t\tasync () => {\n\t\t\tconst { operation } = await getCurrentImportOperation();\n\t\t\treturn operation;\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 1000,\n\t\t\tonSuccess: ({ valid, status }) => {\n\t\t\t\tif (!valid) {\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (status === 'importer_done') {\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Importer_done') });\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!(ImportingStartedStates as string[]).includes(status)) {\n\t\t\t\t\trouter.navigate('/admin/import/prepare');\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t},\n\t\t},\n\t);\n\n\tconst handleProgressUpdated = useMutableCallback(\n\t\t({ key, step, completed, total }: { key: string; step: ProgressStep; completed: number; total: number }) => {\n\t\t\tif (!currentOperation.isSuccess) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (key.toLowerCase() !== currentOperation.data.importerKey.toLowerCase()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = step[0].toUpperCase() + step.slice(1);\n\n\t\t\tswitch (step) {\n\t\t\t\tcase 'importer_done':\n\t\t\t\t\tt.has(message) &&\n\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tmessage: t(message),\n\t\t\t\t\t\t});\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'importer_import_failed':\n\t\t\t\tcase 'importer_import_cancelled':\n\t\t\t\t\tt.has(message) && handleError(message);\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmutation.mutate({ step, completed, total });\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t);\n\n\tconst progress = useQuery(\n\t\t['importers', 'progress'],\n\t\tasync () => {\n\t\t\tconst { key, step, count: { completed = 0, total = 0 } = {} } = await getImportProgress();\n\t\t\treturn {\n\t\t\t\tkey,\n\t\t\t\tstep,\n\t\t\t\tcompleted,\n\t\t\t\ttotal,\n\t\t\t};\n\t\t},\n\t\t{\n\t\t\tenabled: !!currentOperation.isSuccess,\n\t\t\tonSuccess: (progress) => {\n\t\t\t\tif (!progress) {\n\t\t\t\t\tdispatchToastMessage({ type: 'warning', message: t('Importer_not_in_progress') });\n\t\t\t\t\trouter.navigate('/admin/import/prepare');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// do not use the endpoint data to update the completed progress, leave it to the streamer\n\t\t\t\tif (!(ImportingStartedStates as string[]).includes(progress.step)) {\n\t\t\t\t\thandleProgressUpdated({\n\t\t\t\t\t\tkey: progress.key,\n\t\t\t\t\t\tstep: progress.step,\n\t\t\t\t\t\ttotal: progress.total,\n\t\t\t\t\t\tcompleted: progress.completed,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t},\n\t\t},\n\t);\n\n\tuseEffect(() => {\n\t\treturn streamer('progress', (progress) => {\n\t\t\t// There shouldn't be any progress update sending only the rate at this point of the process\n\t\t\tif (!('rate' in progress)) {\n\t\t\t\thandleProgressUpdated({\n\t\t\t\t\tkey: progress.key,\n\t\t\t\t\tstep: progress.step,\n\t\t\t\t\tcompleted: progress.count.completed,\n\t\t\t\t\ttotal: progress.count.total,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}, [handleProgressUpdated, streamer]);\n\n\treturn (\n\t\t<Page>\n\t\t\t<PageHeader title={t('Importing_Data')} />\n\t\t\t<PageScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='neg-x24' width='full' maxWidth='x580'>\n\t\t\t\t\t<Margins block={24}>\n\t\t\t\t\t\t{currentOperation.isLoading && <Throbber justifyContent='center' />}\n\t\t\t\t\t\t{progress.fetchStatus !== 'idle' && progress.isLoading && <Throbber justifyContent='center' />}\n\n\t\t\t\t\t\t{(currentOperation.isError || progress.isError) && <Box is='p'>{t('Failed_To_Load_Import_Data')}</Box>}\n\t\t\t\t\t\t{progress.isSuccess && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Box is='p' fontScale='p2'>\n\t\t\t\t\t\t\t\t\t{t((progress.data.step[0].toUpperCase() + progress.data.step.slice(1)) as any)}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Box display='flex' justifyContent='center'>\n\t\t\t\t\t\t\t\t\t<ProgressBar percentage={(progress.data.completed / progress.data.total) * 100} />\n\t\t\t\t\t\t\t\t\t<Box is='span' fontScale='p2' mis={24}>\n\t\t\t\t\t\t\t\t\t\t{numberFormat((progress.data.completed / progress.data.total) * 100, 0)}%\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t</Page>\n\t);\n};\n\nexport default ImportProgressPage;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"411e288b66cb4c8b0750ff7009890c78c12b5b6b"}
