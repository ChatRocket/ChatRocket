{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/autotranslate/server/methods/saveSettings.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/autotranslate/server/methods/saveSettings.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/autotranslate/server/methods/saveSettings.ts","inputSourceMap":{"version":3,"file":"app/autotranslate/server/methods/saveSettings.ts","sourceRoot":"","sources":["app/autotranslate/server/methods/saveSettings.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Subscriptions, Rooms } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { notifyOnSubscriptionChangedById } from '../../../lib/server/lib/notifyListener';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'autoTranslate.saveSettings'(rid: string, field: string, value: string, options: { defaultLanguage: string }): boolean;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'autoTranslate.saveSettings'(rid, field, value, options) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'saveAutoTranslateSettings',\n\t\t\t});\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'auto-translate'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Auto-Translate is not allowed', {\n\t\t\t\tmethod: 'autoTranslate.saveSettings',\n\t\t\t});\n\t\t}\n\n\t\tcheck(rid, String);\n\t\tcheck(field, String);\n\t\tcheck(value, String);\n\n\t\tif (['autoTranslate', 'autoTranslateLanguage'].indexOf(field) === -1) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings field', {\n\t\t\t\tmethod: 'saveAutoTranslateSettings',\n\t\t\t});\n\t\t}\n\n\t\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(rid, userId);\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', {\n\t\t\t\tmethod: 'saveAutoTranslateSettings',\n\t\t\t});\n\t\t}\n\n\t\tlet shouldNotifySubscriptionChanged = false;\n\n\t\tswitch (field) {\n\t\t\tcase 'autoTranslate':\n\t\t\t\tconst room = await Rooms.findE2ERoomById(rid, { projection: { _id: 1 } });\n\t\t\t\tif (room && value === '1') {\n\t\t\t\t\tthrow new Meteor.Error('error-e2e-enabled', 'Enabling auto-translation in E2E encrypted rooms is not allowed', {\n\t\t\t\t\t\tmethod: 'saveAutoTranslateSettings',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst updateAutoTranslateResponse = await Subscriptions.updateAutoTranslateById(subscription._id, value === '1');\n\t\t\t\tif (updateAutoTranslateResponse.modifiedCount) {\n\t\t\t\t\tshouldNotifySubscriptionChanged = true;\n\t\t\t\t}\n\n\t\t\t\tif (!subscription.autoTranslateLanguage && options.defaultLanguage) {\n\t\t\t\t\tconst updateAutoTranslateLanguageResponse = await Subscriptions.updateAutoTranslateLanguageById(\n\t\t\t\t\t\tsubscription._id,\n\t\t\t\t\t\toptions.defaultLanguage,\n\t\t\t\t\t);\n\t\t\t\t\tif (updateAutoTranslateLanguageResponse.modifiedCount) {\n\t\t\t\t\t\tshouldNotifySubscriptionChanged = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'autoTranslateLanguage':\n\t\t\t\tconst updateAutoTranslateLanguage = await Subscriptions.updateAutoTranslateLanguageById(subscription._id, value);\n\t\t\t\tif (updateAutoTranslateLanguage.modifiedCount) {\n\t\t\t\t\tshouldNotifySubscriptionChanged = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (shouldNotifySubscriptionChanged) {\n\t\t\tvoid notifyOnSubscriptionChangedById(subscription._id);\n\t\t}\n\n\t\treturn true;\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/autotranslate/server/methods/saveSettings.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/autotranslate/server/methods/saveSettings.ts","inputSourceMap":{"version":3,"file":"app/autotranslate/server/methods/saveSettings.ts","sourceRoot":"","sources":["app/autotranslate/server/methods/saveSettings.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Subscriptions, Rooms } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { notifyOnSubscriptionChangedById } from '../../../lib/server/lib/notifyListener';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'autoTranslate.saveSettings'(rid: string, field: string, value: string, options: { defaultLanguage: string }): boolean;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'autoTranslate.saveSettings'(rid, field, value, options) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'saveAutoTranslateSettings',\n\t\t\t});\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'auto-translate'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Auto-Translate is not allowed', {\n\t\t\t\tmethod: 'autoTranslate.saveSettings',\n\t\t\t});\n\t\t}\n\n\t\tcheck(rid, String);\n\t\tcheck(field, String);\n\t\tcheck(value, String);\n\n\t\tif (['autoTranslate', 'autoTranslateLanguage'].indexOf(field) === -1) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings field', {\n\t\t\t\tmethod: 'saveAutoTranslateSettings',\n\t\t\t});\n\t\t}\n\n\t\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(rid, userId);\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', {\n\t\t\t\tmethod: 'saveAutoTranslateSettings',\n\t\t\t});\n\t\t}\n\n\t\tlet shouldNotifySubscriptionChanged = false;\n\n\t\tswitch (field) {\n\t\t\tcase 'autoTranslate':\n\t\t\t\tconst room = await Rooms.findE2ERoomById(rid, { projection: { _id: 1 } });\n\t\t\t\tif (room && value === '1') {\n\t\t\t\t\tthrow new Meteor.Error('error-e2e-enabled', 'Enabling auto-translation in E2E encrypted rooms is not allowed', {\n\t\t\t\t\t\tmethod: 'saveAutoTranslateSettings',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst updateAutoTranslateResponse = await Subscriptions.updateAutoTranslateById(subscription._id, value === '1');\n\t\t\t\tif (updateAutoTranslateResponse.modifiedCount) {\n\t\t\t\t\tshouldNotifySubscriptionChanged = true;\n\t\t\t\t}\n\n\t\t\t\tif (!subscription.autoTranslateLanguage && options.defaultLanguage) {\n\t\t\t\t\tconst updateAutoTranslateLanguageResponse = await Subscriptions.updateAutoTranslateLanguageById(\n\t\t\t\t\t\tsubscription._id,\n\t\t\t\t\t\toptions.defaultLanguage,\n\t\t\t\t\t);\n\t\t\t\t\tif (updateAutoTranslateLanguageResponse.modifiedCount) {\n\t\t\t\t\t\tshouldNotifySubscriptionChanged = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'autoTranslateLanguage':\n\t\t\t\tconst updateAutoTranslateLanguage = await Subscriptions.updateAutoTranslateLanguageById(subscription._id, value);\n\t\t\t\tif (updateAutoTranslateLanguage.modifiedCount) {\n\t\t\t\t\tshouldNotifySubscriptionChanged = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (shouldNotifySubscriptionChanged) {\n\t\t\tvoid notifyOnSubscriptionChangedById(subscription._id);\n\t\t}\n\n\t\treturn true;\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Subscriptions, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 0);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 3);\n    let notifyOnSubscriptionChangedById;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnSubscriptionChangedById(v) {\n        notifyOnSubscriptionChangedById = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async 'autoTranslate.saveSettings'(rid, field, value, options) {\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'saveAutoTranslateSettings'\n          });\n        }\n        if (!(await hasPermissionAsync(userId, 'auto-translate'))) {\n          throw new Meteor.Error('error-action-not-allowed', 'Auto-Translate is not allowed', {\n            method: 'autoTranslate.saveSettings'\n          });\n        }\n        check(rid, String);\n        check(field, String);\n        check(value, String);\n        if (['autoTranslate', 'autoTranslateLanguage'].indexOf(field) === -1) {\n          throw new Meteor.Error('error-invalid-settings', 'Invalid settings field', {\n            method: 'saveAutoTranslateSettings'\n          });\n        }\n        const subscription = await Subscriptions.findOneByRoomIdAndUserId(rid, userId);\n        if (!subscription) {\n          throw new Meteor.Error('error-invalid-subscription', 'Invalid subscription', {\n            method: 'saveAutoTranslateSettings'\n          });\n        }\n        let shouldNotifySubscriptionChanged = false;\n        switch (field) {\n          case 'autoTranslate':\n            const room = await Rooms.findE2ERoomById(rid, {\n              projection: {\n                _id: 1\n              }\n            });\n            if (room && value === '1') {\n              throw new Meteor.Error('error-e2e-enabled', 'Enabling auto-translation in E2E encrypted rooms is not allowed', {\n                method: 'saveAutoTranslateSettings'\n              });\n            }\n            const updateAutoTranslateResponse = await Subscriptions.updateAutoTranslateById(subscription._id, value === '1');\n            if (updateAutoTranslateResponse.modifiedCount) {\n              shouldNotifySubscriptionChanged = true;\n            }\n            if (!subscription.autoTranslateLanguage && options.defaultLanguage) {\n              const updateAutoTranslateLanguageResponse = await Subscriptions.updateAutoTranslateLanguageById(subscription._id, options.defaultLanguage);\n              if (updateAutoTranslateLanguageResponse.modifiedCount) {\n                shouldNotifySubscriptionChanged = true;\n              }\n            }\n            break;\n          case 'autoTranslateLanguage':\n            const updateAutoTranslateLanguage = await Subscriptions.updateAutoTranslateLanguageById(subscription._id, value);\n            if (updateAutoTranslateLanguage.modifiedCount) {\n              shouldNotifySubscriptionChanged = true;\n            }\n            break;\n        }\n        if (shouldNotifySubscriptionChanged) {\n          void notifyOnSubscriptionChangedById(subscription._id);\n        }\n        return true;\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Subscriptions","Rooms","module","link","v","check","Meteor","hasPermissionAsync","notifyOnSubscriptionChangedById","__reifyWaitForDeps__","methods","autoTranslate.saveSettings","rid","field","value","options","userId","Error","method","String","indexOf","subscription","findOneByRoomIdAndUserId","shouldNotifySubscriptionChanged","room","findE2ERoomById","projection","_id","updateAutoTranslateResponse","updateAutoTranslateById","modifiedCount","autoTranslateLanguage","defaultLanguage","updateAutoTranslateLanguageResponse","updateAutoTranslateLanguageById","updateAutoTranslateLanguage","__reify_async_result__","_reifyError","self","async"],"sources":["app/autotranslate/server/methods/saveSettings.ts"],"sourcesContent":["import type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Subscriptions, Rooms } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { notifyOnSubscriptionChangedById } from '../../../lib/server/lib/notifyListener';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'autoTranslate.saveSettings'(rid: string, field: string, value: string, options: { defaultLanguage: string }): boolean;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'autoTranslate.saveSettings'(rid, field, value, options) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'saveAutoTranslateSettings',\n\t\t\t});\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'auto-translate'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Auto-Translate is not allowed', {\n\t\t\t\tmethod: 'autoTranslate.saveSettings',\n\t\t\t});\n\t\t}\n\n\t\tcheck(rid, String);\n\t\tcheck(field, String);\n\t\tcheck(value, String);\n\n\t\tif (['autoTranslate', 'autoTranslateLanguage'].indexOf(field) === -1) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings field', {\n\t\t\t\tmethod: 'saveAutoTranslateSettings',\n\t\t\t});\n\t\t}\n\n\t\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(rid, userId);\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', {\n\t\t\t\tmethod: 'saveAutoTranslateSettings',\n\t\t\t});\n\t\t}\n\n\t\tlet shouldNotifySubscriptionChanged = false;\n\n\t\tswitch (field) {\n\t\t\tcase 'autoTranslate':\n\t\t\t\tconst room = await Rooms.findE2ERoomById(rid, { projection: { _id: 1 } });\n\t\t\t\tif (room && value === '1') {\n\t\t\t\t\tthrow new Meteor.Error('error-e2e-enabled', 'Enabling auto-translation in E2E encrypted rooms is not allowed', {\n\t\t\t\t\t\tmethod: 'saveAutoTranslateSettings',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst updateAutoTranslateResponse = await Subscriptions.updateAutoTranslateById(subscription._id, value === '1');\n\t\t\t\tif (updateAutoTranslateResponse.modifiedCount) {\n\t\t\t\t\tshouldNotifySubscriptionChanged = true;\n\t\t\t\t}\n\n\t\t\t\tif (!subscription.autoTranslateLanguage && options.defaultLanguage) {\n\t\t\t\t\tconst updateAutoTranslateLanguageResponse = await Subscriptions.updateAutoTranslateLanguageById(\n\t\t\t\t\t\tsubscription._id,\n\t\t\t\t\t\toptions.defaultLanguage,\n\t\t\t\t\t);\n\t\t\t\t\tif (updateAutoTranslateLanguageResponse.modifiedCount) {\n\t\t\t\t\t\tshouldNotifySubscriptionChanged = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'autoTranslateLanguage':\n\t\t\t\tconst updateAutoTranslateLanguage = await Subscriptions.updateAutoTranslateLanguageById(subscription._id, value);\n\t\t\t\tif (updateAutoTranslateLanguage.modifiedCount) {\n\t\t\t\t\tshouldNotifySubscriptionChanged = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (shouldNotifySubscriptionChanged) {\n\t\t\tvoid notifyOnSubscriptionChangedById(subscription._id);\n\t\t}\n\n\t\treturn true;\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6535a05380a4d9790503e3686bb6909fdf21c91d"}
