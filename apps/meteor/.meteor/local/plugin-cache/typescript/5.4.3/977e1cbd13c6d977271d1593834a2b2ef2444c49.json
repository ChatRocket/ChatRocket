{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/rooms/roomTypes/direct.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/rooms/roomTypes/direct.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/rooms/roomTypes/direct.ts","inputSourceMap":{"version":3,"file":"server/lib/rooms/roomTypes/direct.ts","sourceRoot":"","sources":["server/lib/rooms/roomTypes/direct.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AtLeast } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport { Subscriptions } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../../app/settings/server';\nimport type { IRoomTypeServerDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport { getDirectMessageRoomType } from '../../../../lib/rooms/roomTypes/direct';\nimport { Federation } from '../../../services/federation/Federation';\nimport { roomCoordinator } from '../roomCoordinator';\n\nconst DirectMessageRoomType = getDirectMessageRoomType(roomCoordinator);\n\nconst getCurrentUserId = (): string | undefined => {\n\ttry {\n\t\treturn Meteor.userId() || undefined;\n\t} catch (_e) {\n\t\t//\n\t}\n};\n\nroomCoordinator.add(DirectMessageRoomType, {\n\tallowRoomSettingChange(_room, setting) {\n\t\tif (isRoomFederated(_room)) {\n\t\t\treturn Federation.isRoomSettingAllowed(_room, setting);\n\t\t}\n\t\tswitch (setting) {\n\t\t\tcase RoomSettingsEnum.TYPE:\n\t\t\tcase RoomSettingsEnum.NAME:\n\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\tcase RoomSettingsEnum.DESCRIPTION:\n\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\tcase RoomSettingsEnum.ARCHIVE_OR_UNARCHIVE:\n\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\treturn false;\n\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\treturn settings.get('E2E_Enable') === true;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\tasync allowMemberAction(room, action, userId) {\n\t\tif (isRoomFederated(room)) {\n\t\t\treturn Federation.actionAllowed(room, action, userId);\n\t\t}\n\t\tswitch (action) {\n\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\treturn !this.isGroupChat(room);\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t},\n\n\tasync roomName(room, userId?) {\n\t\tconst subscription = await (async (): Promise<{ fname?: string; name?: string } | null> => {\n\t\t\tif (room.fname || room.name) {\n\t\t\t\treturn {\n\t\t\t\t\tfname: room.fname,\n\t\t\t\t\tname: room.name,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (!room._id) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst uid = userId || getCurrentUserId();\n\t\t\tif (uid) {\n\t\t\t\treturn Subscriptions.findOneByRoomIdAndUserId(room._id, uid, { projection: { name: 1, fname: 1 } });\n\t\t\t}\n\n\t\t\t// If we don't know what user is requesting the roomName, then any subscription will do\n\t\t\treturn Subscriptions.findOne({ rid: room._id }, { projection: { name: 1, fname: 1 } });\n\t\t})();\n\n\t\tif (!subscription) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (settings.get('UI_Use_Real_Name') && room.fname) {\n\t\t\treturn subscription.fname;\n\t\t}\n\n\t\treturn subscription.name;\n\t},\n\n\tisGroupChat(room) {\n\t\treturn (room?.uids?.length || 0) > 2;\n\t},\n\n\tasync getNotificationDetails(room, sender, notificationMessage, userId) {\n\t\tconst useRealName = settings.get<boolean>('UI_Use_Real_Name');\n\n\t\tconst displayRoomName = await this.roomName(room, userId);\n\n\t\tif (this.isGroupChat(room)) {\n\t\t\treturn {\n\t\t\t\ttitle: displayRoomName,\n\t\t\t\ttext: `${(useRealName && sender.name) || sender.username}: ${notificationMessage}`,\n\t\t\t\tname: room.name || displayRoomName,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ttitle: (useRealName && sender.name) || sender.username,\n\t\t\ttext: notificationMessage,\n\t\t\tname: room.name || displayRoomName,\n\t\t};\n\t},\n\n\tincludeInDashboard() {\n\t\treturn true;\n\t},\n} satisfies AtLeast<IRoomTypeServerDirectives, 'isGroupChat' | 'roomName'>);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/rooms/roomTypes/direct.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/rooms/roomTypes/direct.ts","inputSourceMap":{"version":3,"file":"server/lib/rooms/roomTypes/direct.ts","sourceRoot":"","sources":["server/lib/rooms/roomTypes/direct.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AtLeast } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport { Subscriptions } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../../app/settings/server';\nimport type { IRoomTypeServerDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport { getDirectMessageRoomType } from '../../../../lib/rooms/roomTypes/direct';\nimport { Federation } from '../../../services/federation/Federation';\nimport { roomCoordinator } from '../roomCoordinator';\n\nconst DirectMessageRoomType = getDirectMessageRoomType(roomCoordinator);\n\nconst getCurrentUserId = (): string | undefined => {\n\ttry {\n\t\treturn Meteor.userId() || undefined;\n\t} catch (_e) {\n\t\t//\n\t}\n};\n\nroomCoordinator.add(DirectMessageRoomType, {\n\tallowRoomSettingChange(_room, setting) {\n\t\tif (isRoomFederated(_room)) {\n\t\t\treturn Federation.isRoomSettingAllowed(_room, setting);\n\t\t}\n\t\tswitch (setting) {\n\t\t\tcase RoomSettingsEnum.TYPE:\n\t\t\tcase RoomSettingsEnum.NAME:\n\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\tcase RoomSettingsEnum.DESCRIPTION:\n\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\tcase RoomSettingsEnum.ARCHIVE_OR_UNARCHIVE:\n\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\treturn false;\n\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\treturn settings.get('E2E_Enable') === true;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\tasync allowMemberAction(room, action, userId) {\n\t\tif (isRoomFederated(room)) {\n\t\t\treturn Federation.actionAllowed(room, action, userId);\n\t\t}\n\t\tswitch (action) {\n\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\treturn !this.isGroupChat(room);\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t},\n\n\tasync roomName(room, userId?) {\n\t\tconst subscription = await (async (): Promise<{ fname?: string; name?: string } | null> => {\n\t\t\tif (room.fname || room.name) {\n\t\t\t\treturn {\n\t\t\t\t\tfname: room.fname,\n\t\t\t\t\tname: room.name,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (!room._id) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst uid = userId || getCurrentUserId();\n\t\t\tif (uid) {\n\t\t\t\treturn Subscriptions.findOneByRoomIdAndUserId(room._id, uid, { projection: { name: 1, fname: 1 } });\n\t\t\t}\n\n\t\t\t// If we don't know what user is requesting the roomName, then any subscription will do\n\t\t\treturn Subscriptions.findOne({ rid: room._id }, { projection: { name: 1, fname: 1 } });\n\t\t})();\n\n\t\tif (!subscription) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (settings.get('UI_Use_Real_Name') && room.fname) {\n\t\t\treturn subscription.fname;\n\t\t}\n\n\t\treturn subscription.name;\n\t},\n\n\tisGroupChat(room) {\n\t\treturn (room?.uids?.length || 0) > 2;\n\t},\n\n\tasync getNotificationDetails(room, sender, notificationMessage, userId) {\n\t\tconst useRealName = settings.get<boolean>('UI_Use_Real_Name');\n\n\t\tconst displayRoomName = await this.roomName(room, userId);\n\n\t\tif (this.isGroupChat(room)) {\n\t\t\treturn {\n\t\t\t\ttitle: displayRoomName,\n\t\t\t\ttext: `${(useRealName && sender.name) || sender.username}: ${notificationMessage}`,\n\t\t\t\tname: room.name || displayRoomName,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ttitle: (useRealName && sender.name) || sender.username,\n\t\t\ttext: notificationMessage,\n\t\t\tname: room.name || displayRoomName,\n\t\t};\n\t},\n\n\tincludeInDashboard() {\n\t\treturn true;\n\t},\n} satisfies AtLeast<IRoomTypeServerDirectives, 'isGroupChat' | 'roomName'>);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let isRoomFederated;\n    module.link(\"@rocket.chat/core-typings\", {\n      isRoomFederated(v) {\n        isRoomFederated = v;\n      }\n    }, 0);\n    let Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    let RoomSettingsEnum, RoomMemberActions;\n    module.link(\"../../../../definition/IRoomTypeConfig\", {\n      RoomSettingsEnum(v) {\n        RoomSettingsEnum = v;\n      },\n      RoomMemberActions(v) {\n        RoomMemberActions = v;\n      }\n    }, 4);\n    let getDirectMessageRoomType;\n    module.link(\"../../../../lib/rooms/roomTypes/direct\", {\n      getDirectMessageRoomType(v) {\n        getDirectMessageRoomType = v;\n      }\n    }, 5);\n    let Federation;\n    module.link(\"../../../services/federation/Federation\", {\n      Federation(v) {\n        Federation = v;\n      }\n    }, 6);\n    let roomCoordinator;\n    module.link(\"../roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 7);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const DirectMessageRoomType = getDirectMessageRoomType(roomCoordinator);\n    const getCurrentUserId = () => {\n      try {\n        return Meteor.userId() || undefined;\n      } catch (_e) {\n        //\n      }\n    };\n    roomCoordinator.add(DirectMessageRoomType, {\n      allowRoomSettingChange(_room, setting) {\n        if (isRoomFederated(_room)) {\n          return Federation.isRoomSettingAllowed(_room, setting);\n        }\n        switch (setting) {\n          case RoomSettingsEnum.TYPE:\n          case RoomSettingsEnum.NAME:\n          case RoomSettingsEnum.SYSTEM_MESSAGES:\n          case RoomSettingsEnum.DESCRIPTION:\n          case RoomSettingsEnum.READ_ONLY:\n          case RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n          case RoomSettingsEnum.ARCHIVE_OR_UNARCHIVE:\n          case RoomSettingsEnum.JOIN_CODE:\n            return false;\n          case RoomSettingsEnum.E2E:\n            return settings.get('E2E_Enable') === true;\n          default:\n            return true;\n        }\n      },\n      async allowMemberAction(room, action, userId) {\n        if (isRoomFederated(room)) {\n          return Federation.actionAllowed(room, action, userId);\n        }\n        switch (action) {\n          case RoomMemberActions.BLOCK:\n            return !this.isGroupChat(room);\n          default:\n            return false;\n        }\n      },\n      async roomName(room, userId) {\n        const subscription = await (async () => {\n          if (room.fname || room.name) {\n            return {\n              fname: room.fname,\n              name: room.name\n            };\n          }\n          if (!room._id) {\n            return null;\n          }\n          const uid = userId || getCurrentUserId();\n          if (uid) {\n            return Subscriptions.findOneByRoomIdAndUserId(room._id, uid, {\n              projection: {\n                name: 1,\n                fname: 1\n              }\n            });\n          }\n          // If we don't know what user is requesting the roomName, then any subscription will do\n          return Subscriptions.findOne({\n            rid: room._id\n          }, {\n            projection: {\n              name: 1,\n              fname: 1\n            }\n          });\n        })();\n        if (!subscription) {\n          return;\n        }\n        if (settings.get('UI_Use_Real_Name') && room.fname) {\n          return subscription.fname;\n        }\n        return subscription.name;\n      },\n      isGroupChat(room) {\n        var _room$uids;\n        return ((room === null || room === void 0 ? void 0 : (_room$uids = room.uids) === null || _room$uids === void 0 ? void 0 : _room$uids.length) || 0) > 2;\n      },\n      async getNotificationDetails(room, sender, notificationMessage, userId) {\n        const useRealName = settings.get('UI_Use_Real_Name');\n        const displayRoomName = await this.roomName(room, userId);\n        if (this.isGroupChat(room)) {\n          return {\n            title: displayRoomName,\n            text: \"\".concat(useRealName && sender.name || sender.username, \": \").concat(notificationMessage),\n            name: room.name || displayRoomName\n          };\n        }\n        return {\n          title: useRealName && sender.name || sender.username,\n          text: notificationMessage,\n          name: room.name || displayRoomName\n        };\n      },\n      includeInDashboard() {\n        return true;\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["isRoomFederated","module","link","v","Subscriptions","Meteor","settings","RoomSettingsEnum","RoomMemberActions","getDirectMessageRoomType","Federation","roomCoordinator","__reifyWaitForDeps__","DirectMessageRoomType","getCurrentUserId","userId","undefined","_e","add","allowRoomSettingChange","_room","setting","isRoomSettingAllowed","TYPE","NAME","SYSTEM_MESSAGES","DESCRIPTION","READ_ONLY","REACT_WHEN_READ_ONLY","ARCHIVE_OR_UNARCHIVE","JOIN_CODE","E2E","get","allowMemberAction","room","action","actionAllowed","BLOCK","isGroupChat","roomName","subscription","fname","name","_id","uid","findOneByRoomIdAndUserId","projection","findOne","rid","_room$uids","uids","length","getNotificationDetails","sender","notificationMessage","useRealName","displayRoomName","title","text","concat","username","includeInDashboard","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/rooms/roomTypes/direct.ts"],"sourcesContent":["import type { AtLeast } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport { Subscriptions } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../../app/settings/server';\nimport type { IRoomTypeServerDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport { getDirectMessageRoomType } from '../../../../lib/rooms/roomTypes/direct';\nimport { Federation } from '../../../services/federation/Federation';\nimport { roomCoordinator } from '../roomCoordinator';\n\nconst DirectMessageRoomType = getDirectMessageRoomType(roomCoordinator);\n\nconst getCurrentUserId = (): string | undefined => {\n\ttry {\n\t\treturn Meteor.userId() || undefined;\n\t} catch (_e) {\n\t\t//\n\t}\n};\n\nroomCoordinator.add(DirectMessageRoomType, {\n\tallowRoomSettingChange(_room, setting) {\n\t\tif (isRoomFederated(_room)) {\n\t\t\treturn Federation.isRoomSettingAllowed(_room, setting);\n\t\t}\n\t\tswitch (setting) {\n\t\t\tcase RoomSettingsEnum.TYPE:\n\t\t\tcase RoomSettingsEnum.NAME:\n\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\tcase RoomSettingsEnum.DESCRIPTION:\n\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\tcase RoomSettingsEnum.ARCHIVE_OR_UNARCHIVE:\n\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\treturn false;\n\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\treturn settings.get('E2E_Enable') === true;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\tasync allowMemberAction(room, action, userId) {\n\t\tif (isRoomFederated(room)) {\n\t\t\treturn Federation.actionAllowed(room, action, userId);\n\t\t}\n\t\tswitch (action) {\n\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\treturn !this.isGroupChat(room);\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t},\n\n\tasync roomName(room, userId?) {\n\t\tconst subscription = await (async (): Promise<{ fname?: string; name?: string } | null> => {\n\t\t\tif (room.fname || room.name) {\n\t\t\t\treturn {\n\t\t\t\t\tfname: room.fname,\n\t\t\t\t\tname: room.name,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (!room._id) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst uid = userId || getCurrentUserId();\n\t\t\tif (uid) {\n\t\t\t\treturn Subscriptions.findOneByRoomIdAndUserId(room._id, uid, { projection: { name: 1, fname: 1 } });\n\t\t\t}\n\n\t\t\t// If we don't know what user is requesting the roomName, then any subscription will do\n\t\t\treturn Subscriptions.findOne({ rid: room._id }, { projection: { name: 1, fname: 1 } });\n\t\t})();\n\n\t\tif (!subscription) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (settings.get('UI_Use_Real_Name') && room.fname) {\n\t\t\treturn subscription.fname;\n\t\t}\n\n\t\treturn subscription.name;\n\t},\n\n\tisGroupChat(room) {\n\t\treturn (room?.uids?.length || 0) > 2;\n\t},\n\n\tasync getNotificationDetails(room, sender, notificationMessage, userId) {\n\t\tconst useRealName = settings.get<boolean>('UI_Use_Real_Name');\n\n\t\tconst displayRoomName = await this.roomName(room, userId);\n\n\t\tif (this.isGroupChat(room)) {\n\t\t\treturn {\n\t\t\t\ttitle: displayRoomName,\n\t\t\t\ttext: `${(useRealName && sender.name) || sender.username}: ${notificationMessage}`,\n\t\t\t\tname: room.name || displayRoomName,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ttitle: (useRealName && sender.name) || sender.username,\n\t\t\ttext: notificationMessage,\n\t\t\tname: room.name || displayRoomName,\n\t\t};\n\t},\n\n\tincludeInDashboard() {\n\t\treturn true;\n\t},\n} satisfies AtLeast<IRoomTypeServerDirectives, 'isGroupChat' | 'roomName'>);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"977e1cbd13c6d977271d1593834a2b2ef2444c49"}
