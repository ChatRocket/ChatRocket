{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/local-services/federation/infrastructure/rocket-chat/converters/RoomSender.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/local-services/federation/infrastructure/rocket-chat/converters/RoomSender.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/local-services/federation/infrastructure/rocket-chat/converters/RoomSender.ts","inputSourceMap":{"version":3,"file":"ee/server/local-services/federation/infrastructure/rocket-chat/converters/RoomSender.ts","sourceRoot":"","sources":["ee/server/local-services/federation/infrastructure/rocket-chat/converters/RoomSender.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { isUserFederated } from '@rocket.chat/core-typings';\n\nimport {\n\tconvertExternalRoomIdToInternalRoomIdFormat,\n\textractServerNameFromExternalIdentifier,\n\tformatExternalUserIdToInternalUsernameFormat,\n\tisAnExternalIdentifierFormat,\n\tisAnExternalUserIdFormat,\n\tremoveExternalSpecificCharsFromExternalIdentifier,\n} from '../../../../../../../server/services/federation/infrastructure/matrix/converters/room/RoomReceiver';\nimport {\n\tFederationJoinExternalPublicRoomInputDto,\n\tFederationJoinInternalPublicRoomInputDto,\n} from '../../../application/room/sender/input/RoomInputDto';\nimport {\n\tFederationBeforeAddUserToARoomDto,\n\tFederationBeforeDirectMessageRoomCreationDto,\n\tFederationCreateDirectMessageDto,\n\tFederationOnDirectMessageRoomCreationDto,\n\tFederationOnRoomCreationDto,\n\tFederationOnUsersAddedToARoomDto,\n\tFederationRoomInviteUserDto,\n\tFederationSetupRoomDto,\n} from '../../../application/room/sender/input/RoomSenderDto';\nimport type { IFederationInviteeDto } from '../../../application/room/sender/input/RoomSenderDto';\n\nconst ensureUserHasAHomeServer = (username: string, localHomeServer: string): string => {\n\treturn username?.includes(':') ? username : `${username}:${localHomeServer}`;\n};\n\nconst isAnExistentUser = (invitee: IUser | string): boolean => typeof invitee !== 'string';\n\nconst normalizeInvitees = (externalInviteesUsername: string[], homeServerDomainName: string): IFederationInviteeDto[] => {\n\treturn externalInviteesUsername\n\t\t.filter(Boolean)\n\t\t.map((inviteeUsername) => ensureUserHasAHomeServer(inviteeUsername, homeServerDomainName))\n\t\t.map((inviteeUsername) => ({\n\t\t\tnormalizedInviteeId: removeExternalSpecificCharsFromExternalIdentifier(inviteeUsername),\n\t\t\tinviteeUsernameOnly: formatExternalUserIdToInternalUsernameFormat(inviteeUsername),\n\t\t\trawInviteeId: `@${removeExternalSpecificCharsFromExternalIdentifier(inviteeUsername)}`,\n\t\t}));\n};\n\nconst getInviteesUsername = (externalInvitees: (IUser | string)[]): string[] => {\n\treturn externalInvitees\n\t\t.map((invitee) => {\n\t\t\treturn isAnExistentUser(invitee) ? (invitee as IUser)?.username || '' : (invitee as string);\n\t\t})\n\t\t.filter(Boolean);\n};\n\nconst getExternalUsersToBeInvited = (invitees: (IUser | string)[]): (IUser | string)[] => {\n\tconst externalAndNonExistentInviteesUsername = invitees.filter((invitee: IUser | string) => !isAnExistentUser(invitee));\n\tconst externalExistentUsers = invitees\n\t\t.filter(isAnExistentUser)\n\t\t.filter((invitee) => isUserFederated(invitee as IUser) || isAnExternalIdentifierFormat((invitee as IUser).username || ''));\n\n\treturn [...externalAndNonExistentInviteesUsername, ...externalExistentUsers];\n};\n\nconst getInternalUsernames = (invitees: (IUser | string)[]): string[] => {\n\treturn invitees\n\t\t.filter(isAnExistentUser)\n\t\t.map((invitee) => (invitee as IUser).username || '')\n\t\t.filter(Boolean);\n};\n\nconst getAllUsersExceptOwnerByUserId = (invitees: (IUser | string)[], ownerId: string): (IUser | string)[] =>\n\tinvitees.filter(Boolean).filter((invitee) => {\n\t\treturn isAnExistentUser(invitee) ? (invitee as IUser)._id !== ownerId : invitee;\n\t});\n\nconst getAllUsersExceptOwnerByUsername = (invitees: string[], ownerUsername: string): string[] =>\n\tinvitees.filter(Boolean).filter((inviteeUsername) => inviteeUsername !== ownerUsername);\n\nexport class FederationRoomSenderConverterEE {\n\tpublic static toRoomInviteUserDto(\n\t\tinternalInviterId: string,\n\t\tinternalRoomId: string,\n\t\texternalInviteeId: string,\n\t): FederationRoomInviteUserDto {\n\t\tconst normalizedInviteeId = removeExternalSpecificCharsFromExternalIdentifier(externalInviteeId);\n\t\tconst inviteeUsernameOnly = formatExternalUserIdToInternalUsernameFormat(externalInviteeId);\n\n\t\treturn new FederationRoomInviteUserDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t\trawInviteeId: externalInviteeId,\n\t\t\tnormalizedInviteeId,\n\t\t\tinviteeUsernameOnly,\n\t\t});\n\t}\n\n\tpublic static toSetupRoomDto(internalInviterId: string, internalRoomId: string): FederationSetupRoomDto {\n\t\treturn new FederationSetupRoomDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t});\n\t}\n\n\tpublic static toOnRoomCreationDto(\n\t\tinternalInviterId: string,\n\t\tinternalInviterUsername: string,\n\t\tinternalRoomId: string,\n\t\texternalInviteesUsername: string[],\n\t\thomeServerDomainName: string,\n\t): FederationOnRoomCreationDto {\n\t\tconst allExceptOwner = getAllUsersExceptOwnerByUsername(externalInviteesUsername, internalInviterUsername);\n\t\tconst users = normalizeInvitees(allExceptOwner, homeServerDomainName);\n\n\t\treturn new FederationOnRoomCreationDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t\tinvitees: users,\n\t\t});\n\t}\n\n\tpublic static toOnAddedUsersToARoomDto(\n\t\tinternalInviterId: string,\n\t\tinternalInviterUsername: string,\n\t\tinternalRoomId: string,\n\t\texternalInvitees: IUser[] | string[],\n\t\thomeServerDomainName: string,\n\t): FederationOnUsersAddedToARoomDto {\n\t\tconst externalInviteesUsername: string[] = getInviteesUsername(externalInvitees);\n\t\tconst externalInviterId =\n\t\t\tisAnExternalIdentifierFormat(internalInviterUsername) &&\n\t\t\textractServerNameFromExternalIdentifier(internalInviterUsername) !== homeServerDomainName &&\n\t\t\tinternalInviterId;\n\n\t\tconst allExceptOwner = getAllUsersExceptOwnerByUsername(externalInviteesUsername, internalInviterUsername);\n\t\tconst users = normalizeInvitees(allExceptOwner, homeServerDomainName);\n\n\t\treturn new FederationOnUsersAddedToARoomDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t\tinvitees: users,\n\t\t\tinviteComesFromAnExternalHomeServer: Boolean(externalInviterId),\n\t\t});\n\t}\n\n\tpublic static toOnDirectMessageCreatedDto(\n\t\tinternalInviterId: string,\n\t\tinternalRoomId: string,\n\t\texternalInvitees: (IUser | string)[],\n\t\thomeServerDomainName: string,\n\t): FederationOnDirectMessageRoomCreationDto {\n\t\tconst allExceptOwner = getAllUsersExceptOwnerByUserId(externalInvitees, internalInviterId);\n\t\tconst externalUsernamesToBeInvited: string[] = getInviteesUsername(getExternalUsersToBeInvited(allExceptOwner));\n\t\tconst internalUsernamesToBeInvited: string[] = getInternalUsernames(allExceptOwner).filter(\n\t\t\t(internal) => !externalUsernamesToBeInvited.includes(internal),\n\t\t);\n\t\tconst allUsernamesToBeInvited: string[] = [...externalUsernamesToBeInvited, ...internalUsernamesToBeInvited];\n\n\t\tconst externalInviterId = isAnExternalUserIdFormat(internalInviterId) && internalInviterId;\n\n\t\treturn new FederationOnDirectMessageRoomCreationDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t\tinvitees: normalizeInvitees(allUsernamesToBeInvited, homeServerDomainName),\n\t\t\tinviteComesFromAnExternalHomeServer: Boolean(externalInviterId),\n\t\t});\n\t}\n\n\tpublic static toBeforeDirectMessageCreatedDto(\n\t\tmembers: (IUser | string)[],\n\t\thomeServerDomainName: string,\n\t): FederationBeforeDirectMessageRoomCreationDto {\n\t\tconst invitees = getExternalUsersToBeInvited(members);\n\t\tconst inviteesUsername = getInviteesUsername(invitees);\n\n\t\treturn new FederationBeforeDirectMessageRoomCreationDto({\n\t\t\tinvitees: normalizeInvitees(inviteesUsername, homeServerDomainName),\n\t\t});\n\t}\n\n\tpublic static toBeforeAddUserToARoomDto(\n\t\tmembers: (IUser | string)[],\n\t\tinternalRoom: IRoom,\n\t\thomeServerDomainName: string,\n\t\tinternalInviter?: IUser,\n\t): FederationBeforeAddUserToARoomDto {\n\t\tconst { invitees } = FederationRoomSenderConverterEE.toBeforeDirectMessageCreatedDto(members, homeServerDomainName);\n\n\t\treturn new FederationBeforeAddUserToARoomDto({\n\t\t\tinternalRoomId: internalRoom._id,\n\t\t\tinvitees,\n\t\t\tinternalInviter,\n\t\t});\n\t}\n\n\tpublic static toCreateDirectMessageDto(internalInviterId: string, invitees: string[]): FederationCreateDirectMessageDto {\n\t\treturn new FederationCreateDirectMessageDto({\n\t\t\tinternalInviterId,\n\t\t\tinvitees,\n\t\t});\n\t}\n\n\tpublic static toJoinExternalPublicRoomDto(\n\t\tinternalUserId: string,\n\t\texternalRoomId: string,\n\t\troomName?: string,\n\t\tpageToken?: string,\n\t): FederationJoinExternalPublicRoomInputDto {\n\t\treturn new FederationJoinExternalPublicRoomInputDto({\n\t\t\texternalRoomId,\n\t\t\tinternalUserId,\n\t\t\tnormalizedRoomId: convertExternalRoomIdToInternalRoomIdFormat(externalRoomId),\n\t\t\texternalRoomHomeServerName: extractServerNameFromExternalIdentifier(externalRoomId),\n\t\t\troomName,\n\t\t\tpageToken,\n\t\t});\n\t}\n\n\tpublic static toJoinInternalPublicRoomDto(internalUserId: string, internalRoomId: string): FederationJoinInternalPublicRoomInputDto {\n\t\treturn new FederationJoinInternalPublicRoomInputDto({\n\t\t\tinternalRoomId,\n\t\t\tinternalUserId,\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/local-services/federation/infrastructure/rocket-chat/converters/RoomSender.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/local-services/federation/infrastructure/rocket-chat/converters/RoomSender.ts","inputSourceMap":{"version":3,"file":"ee/server/local-services/federation/infrastructure/rocket-chat/converters/RoomSender.ts","sourceRoot":"","sources":["ee/server/local-services/federation/infrastructure/rocket-chat/converters/RoomSender.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { isUserFederated } from '@rocket.chat/core-typings';\n\nimport {\n\tconvertExternalRoomIdToInternalRoomIdFormat,\n\textractServerNameFromExternalIdentifier,\n\tformatExternalUserIdToInternalUsernameFormat,\n\tisAnExternalIdentifierFormat,\n\tisAnExternalUserIdFormat,\n\tremoveExternalSpecificCharsFromExternalIdentifier,\n} from '../../../../../../../server/services/federation/infrastructure/matrix/converters/room/RoomReceiver';\nimport {\n\tFederationJoinExternalPublicRoomInputDto,\n\tFederationJoinInternalPublicRoomInputDto,\n} from '../../../application/room/sender/input/RoomInputDto';\nimport {\n\tFederationBeforeAddUserToARoomDto,\n\tFederationBeforeDirectMessageRoomCreationDto,\n\tFederationCreateDirectMessageDto,\n\tFederationOnDirectMessageRoomCreationDto,\n\tFederationOnRoomCreationDto,\n\tFederationOnUsersAddedToARoomDto,\n\tFederationRoomInviteUserDto,\n\tFederationSetupRoomDto,\n} from '../../../application/room/sender/input/RoomSenderDto';\nimport type { IFederationInviteeDto } from '../../../application/room/sender/input/RoomSenderDto';\n\nconst ensureUserHasAHomeServer = (username: string, localHomeServer: string): string => {\n\treturn username?.includes(':') ? username : `${username}:${localHomeServer}`;\n};\n\nconst isAnExistentUser = (invitee: IUser | string): boolean => typeof invitee !== 'string';\n\nconst normalizeInvitees = (externalInviteesUsername: string[], homeServerDomainName: string): IFederationInviteeDto[] => {\n\treturn externalInviteesUsername\n\t\t.filter(Boolean)\n\t\t.map((inviteeUsername) => ensureUserHasAHomeServer(inviteeUsername, homeServerDomainName))\n\t\t.map((inviteeUsername) => ({\n\t\t\tnormalizedInviteeId: removeExternalSpecificCharsFromExternalIdentifier(inviteeUsername),\n\t\t\tinviteeUsernameOnly: formatExternalUserIdToInternalUsernameFormat(inviteeUsername),\n\t\t\trawInviteeId: `@${removeExternalSpecificCharsFromExternalIdentifier(inviteeUsername)}`,\n\t\t}));\n};\n\nconst getInviteesUsername = (externalInvitees: (IUser | string)[]): string[] => {\n\treturn externalInvitees\n\t\t.map((invitee) => {\n\t\t\treturn isAnExistentUser(invitee) ? (invitee as IUser)?.username || '' : (invitee as string);\n\t\t})\n\t\t.filter(Boolean);\n};\n\nconst getExternalUsersToBeInvited = (invitees: (IUser | string)[]): (IUser | string)[] => {\n\tconst externalAndNonExistentInviteesUsername = invitees.filter((invitee: IUser | string) => !isAnExistentUser(invitee));\n\tconst externalExistentUsers = invitees\n\t\t.filter(isAnExistentUser)\n\t\t.filter((invitee) => isUserFederated(invitee as IUser) || isAnExternalIdentifierFormat((invitee as IUser).username || ''));\n\n\treturn [...externalAndNonExistentInviteesUsername, ...externalExistentUsers];\n};\n\nconst getInternalUsernames = (invitees: (IUser | string)[]): string[] => {\n\treturn invitees\n\t\t.filter(isAnExistentUser)\n\t\t.map((invitee) => (invitee as IUser).username || '')\n\t\t.filter(Boolean);\n};\n\nconst getAllUsersExceptOwnerByUserId = (invitees: (IUser | string)[], ownerId: string): (IUser | string)[] =>\n\tinvitees.filter(Boolean).filter((invitee) => {\n\t\treturn isAnExistentUser(invitee) ? (invitee as IUser)._id !== ownerId : invitee;\n\t});\n\nconst getAllUsersExceptOwnerByUsername = (invitees: string[], ownerUsername: string): string[] =>\n\tinvitees.filter(Boolean).filter((inviteeUsername) => inviteeUsername !== ownerUsername);\n\nexport class FederationRoomSenderConverterEE {\n\tpublic static toRoomInviteUserDto(\n\t\tinternalInviterId: string,\n\t\tinternalRoomId: string,\n\t\texternalInviteeId: string,\n\t): FederationRoomInviteUserDto {\n\t\tconst normalizedInviteeId = removeExternalSpecificCharsFromExternalIdentifier(externalInviteeId);\n\t\tconst inviteeUsernameOnly = formatExternalUserIdToInternalUsernameFormat(externalInviteeId);\n\n\t\treturn new FederationRoomInviteUserDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t\trawInviteeId: externalInviteeId,\n\t\t\tnormalizedInviteeId,\n\t\t\tinviteeUsernameOnly,\n\t\t});\n\t}\n\n\tpublic static toSetupRoomDto(internalInviterId: string, internalRoomId: string): FederationSetupRoomDto {\n\t\treturn new FederationSetupRoomDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t});\n\t}\n\n\tpublic static toOnRoomCreationDto(\n\t\tinternalInviterId: string,\n\t\tinternalInviterUsername: string,\n\t\tinternalRoomId: string,\n\t\texternalInviteesUsername: string[],\n\t\thomeServerDomainName: string,\n\t): FederationOnRoomCreationDto {\n\t\tconst allExceptOwner = getAllUsersExceptOwnerByUsername(externalInviteesUsername, internalInviterUsername);\n\t\tconst users = normalizeInvitees(allExceptOwner, homeServerDomainName);\n\n\t\treturn new FederationOnRoomCreationDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t\tinvitees: users,\n\t\t});\n\t}\n\n\tpublic static toOnAddedUsersToARoomDto(\n\t\tinternalInviterId: string,\n\t\tinternalInviterUsername: string,\n\t\tinternalRoomId: string,\n\t\texternalInvitees: IUser[] | string[],\n\t\thomeServerDomainName: string,\n\t): FederationOnUsersAddedToARoomDto {\n\t\tconst externalInviteesUsername: string[] = getInviteesUsername(externalInvitees);\n\t\tconst externalInviterId =\n\t\t\tisAnExternalIdentifierFormat(internalInviterUsername) &&\n\t\t\textractServerNameFromExternalIdentifier(internalInviterUsername) !== homeServerDomainName &&\n\t\t\tinternalInviterId;\n\n\t\tconst allExceptOwner = getAllUsersExceptOwnerByUsername(externalInviteesUsername, internalInviterUsername);\n\t\tconst users = normalizeInvitees(allExceptOwner, homeServerDomainName);\n\n\t\treturn new FederationOnUsersAddedToARoomDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t\tinvitees: users,\n\t\t\tinviteComesFromAnExternalHomeServer: Boolean(externalInviterId),\n\t\t});\n\t}\n\n\tpublic static toOnDirectMessageCreatedDto(\n\t\tinternalInviterId: string,\n\t\tinternalRoomId: string,\n\t\texternalInvitees: (IUser | string)[],\n\t\thomeServerDomainName: string,\n\t): FederationOnDirectMessageRoomCreationDto {\n\t\tconst allExceptOwner = getAllUsersExceptOwnerByUserId(externalInvitees, internalInviterId);\n\t\tconst externalUsernamesToBeInvited: string[] = getInviteesUsername(getExternalUsersToBeInvited(allExceptOwner));\n\t\tconst internalUsernamesToBeInvited: string[] = getInternalUsernames(allExceptOwner).filter(\n\t\t\t(internal) => !externalUsernamesToBeInvited.includes(internal),\n\t\t);\n\t\tconst allUsernamesToBeInvited: string[] = [...externalUsernamesToBeInvited, ...internalUsernamesToBeInvited];\n\n\t\tconst externalInviterId = isAnExternalUserIdFormat(internalInviterId) && internalInviterId;\n\n\t\treturn new FederationOnDirectMessageRoomCreationDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t\tinvitees: normalizeInvitees(allUsernamesToBeInvited, homeServerDomainName),\n\t\t\tinviteComesFromAnExternalHomeServer: Boolean(externalInviterId),\n\t\t});\n\t}\n\n\tpublic static toBeforeDirectMessageCreatedDto(\n\t\tmembers: (IUser | string)[],\n\t\thomeServerDomainName: string,\n\t): FederationBeforeDirectMessageRoomCreationDto {\n\t\tconst invitees = getExternalUsersToBeInvited(members);\n\t\tconst inviteesUsername = getInviteesUsername(invitees);\n\n\t\treturn new FederationBeforeDirectMessageRoomCreationDto({\n\t\t\tinvitees: normalizeInvitees(inviteesUsername, homeServerDomainName),\n\t\t});\n\t}\n\n\tpublic static toBeforeAddUserToARoomDto(\n\t\tmembers: (IUser | string)[],\n\t\tinternalRoom: IRoom,\n\t\thomeServerDomainName: string,\n\t\tinternalInviter?: IUser,\n\t): FederationBeforeAddUserToARoomDto {\n\t\tconst { invitees } = FederationRoomSenderConverterEE.toBeforeDirectMessageCreatedDto(members, homeServerDomainName);\n\n\t\treturn new FederationBeforeAddUserToARoomDto({\n\t\t\tinternalRoomId: internalRoom._id,\n\t\t\tinvitees,\n\t\t\tinternalInviter,\n\t\t});\n\t}\n\n\tpublic static toCreateDirectMessageDto(internalInviterId: string, invitees: string[]): FederationCreateDirectMessageDto {\n\t\treturn new FederationCreateDirectMessageDto({\n\t\t\tinternalInviterId,\n\t\t\tinvitees,\n\t\t});\n\t}\n\n\tpublic static toJoinExternalPublicRoomDto(\n\t\tinternalUserId: string,\n\t\texternalRoomId: string,\n\t\troomName?: string,\n\t\tpageToken?: string,\n\t): FederationJoinExternalPublicRoomInputDto {\n\t\treturn new FederationJoinExternalPublicRoomInputDto({\n\t\t\texternalRoomId,\n\t\t\tinternalUserId,\n\t\t\tnormalizedRoomId: convertExternalRoomIdToInternalRoomIdFormat(externalRoomId),\n\t\t\texternalRoomHomeServerName: extractServerNameFromExternalIdentifier(externalRoomId),\n\t\t\troomName,\n\t\t\tpageToken,\n\t\t});\n\t}\n\n\tpublic static toJoinInternalPublicRoomDto(internalUserId: string, internalRoomId: string): FederationJoinInternalPublicRoomInputDto {\n\t\treturn new FederationJoinInternalPublicRoomInputDto({\n\t\t\tinternalRoomId,\n\t\t\tinternalUserId,\n\t\t});\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      FederationRoomSenderConverterEE: () => FederationRoomSenderConverterEE\n    });\n    let isUserFederated;\n    module.link(\"@rocket.chat/core-typings\", {\n      isUserFederated(v) {\n        isUserFederated = v;\n      }\n    }, 0);\n    let convertExternalRoomIdToInternalRoomIdFormat, extractServerNameFromExternalIdentifier, formatExternalUserIdToInternalUsernameFormat, isAnExternalIdentifierFormat, isAnExternalUserIdFormat, removeExternalSpecificCharsFromExternalIdentifier;\n    module.link(\"../../../../../../../server/services/federation/infrastructure/matrix/converters/room/RoomReceiver\", {\n      convertExternalRoomIdToInternalRoomIdFormat(v) {\n        convertExternalRoomIdToInternalRoomIdFormat = v;\n      },\n      extractServerNameFromExternalIdentifier(v) {\n        extractServerNameFromExternalIdentifier = v;\n      },\n      formatExternalUserIdToInternalUsernameFormat(v) {\n        formatExternalUserIdToInternalUsernameFormat = v;\n      },\n      isAnExternalIdentifierFormat(v) {\n        isAnExternalIdentifierFormat = v;\n      },\n      isAnExternalUserIdFormat(v) {\n        isAnExternalUserIdFormat = v;\n      },\n      removeExternalSpecificCharsFromExternalIdentifier(v) {\n        removeExternalSpecificCharsFromExternalIdentifier = v;\n      }\n    }, 1);\n    let FederationJoinExternalPublicRoomInputDto, FederationJoinInternalPublicRoomInputDto;\n    module.link(\"../../../application/room/sender/input/RoomInputDto\", {\n      FederationJoinExternalPublicRoomInputDto(v) {\n        FederationJoinExternalPublicRoomInputDto = v;\n      },\n      FederationJoinInternalPublicRoomInputDto(v) {\n        FederationJoinInternalPublicRoomInputDto = v;\n      }\n    }, 2);\n    let FederationBeforeAddUserToARoomDto, FederationBeforeDirectMessageRoomCreationDto, FederationCreateDirectMessageDto, FederationOnDirectMessageRoomCreationDto, FederationOnRoomCreationDto, FederationOnUsersAddedToARoomDto, FederationRoomInviteUserDto, FederationSetupRoomDto;\n    module.link(\"../../../application/room/sender/input/RoomSenderDto\", {\n      FederationBeforeAddUserToARoomDto(v) {\n        FederationBeforeAddUserToARoomDto = v;\n      },\n      FederationBeforeDirectMessageRoomCreationDto(v) {\n        FederationBeforeDirectMessageRoomCreationDto = v;\n      },\n      FederationCreateDirectMessageDto(v) {\n        FederationCreateDirectMessageDto = v;\n      },\n      FederationOnDirectMessageRoomCreationDto(v) {\n        FederationOnDirectMessageRoomCreationDto = v;\n      },\n      FederationOnRoomCreationDto(v) {\n        FederationOnRoomCreationDto = v;\n      },\n      FederationOnUsersAddedToARoomDto(v) {\n        FederationOnUsersAddedToARoomDto = v;\n      },\n      FederationRoomInviteUserDto(v) {\n        FederationRoomInviteUserDto = v;\n      },\n      FederationSetupRoomDto(v) {\n        FederationSetupRoomDto = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const ensureUserHasAHomeServer = (username, localHomeServer) => {\n      return username !== null && username !== void 0 && username.includes(':') ? username : \"\".concat(username, \":\").concat(localHomeServer);\n    };\n    const isAnExistentUser = invitee => typeof invitee !== 'string';\n    const normalizeInvitees = (externalInviteesUsername, homeServerDomainName) => {\n      return externalInviteesUsername.filter(Boolean).map(inviteeUsername => ensureUserHasAHomeServer(inviteeUsername, homeServerDomainName)).map(inviteeUsername => ({\n        normalizedInviteeId: removeExternalSpecificCharsFromExternalIdentifier(inviteeUsername),\n        inviteeUsernameOnly: formatExternalUserIdToInternalUsernameFormat(inviteeUsername),\n        rawInviteeId: \"@\".concat(removeExternalSpecificCharsFromExternalIdentifier(inviteeUsername))\n      }));\n    };\n    const getInviteesUsername = externalInvitees => {\n      return externalInvitees.map(invitee => {\n        return isAnExistentUser(invitee) ? (invitee === null || invitee === void 0 ? void 0 : invitee.username) || '' : invitee;\n      }).filter(Boolean);\n    };\n    const getExternalUsersToBeInvited = invitees => {\n      const externalAndNonExistentInviteesUsername = invitees.filter(invitee => !isAnExistentUser(invitee));\n      const externalExistentUsers = invitees.filter(isAnExistentUser).filter(invitee => isUserFederated(invitee) || isAnExternalIdentifierFormat(invitee.username || ''));\n      return [...externalAndNonExistentInviteesUsername, ...externalExistentUsers];\n    };\n    const getInternalUsernames = invitees => {\n      return invitees.filter(isAnExistentUser).map(invitee => invitee.username || '').filter(Boolean);\n    };\n    const getAllUsersExceptOwnerByUserId = (invitees, ownerId) => invitees.filter(Boolean).filter(invitee => {\n      return isAnExistentUser(invitee) ? invitee._id !== ownerId : invitee;\n    });\n    const getAllUsersExceptOwnerByUsername = (invitees, ownerUsername) => invitees.filter(Boolean).filter(inviteeUsername => inviteeUsername !== ownerUsername);\n    class FederationRoomSenderConverterEE {\n      static toRoomInviteUserDto(internalInviterId, internalRoomId, externalInviteeId) {\n        const normalizedInviteeId = removeExternalSpecificCharsFromExternalIdentifier(externalInviteeId);\n        const inviteeUsernameOnly = formatExternalUserIdToInternalUsernameFormat(externalInviteeId);\n        return new FederationRoomInviteUserDto({\n          internalInviterId,\n          internalRoomId,\n          rawInviteeId: externalInviteeId,\n          normalizedInviteeId,\n          inviteeUsernameOnly\n        });\n      }\n      static toSetupRoomDto(internalInviterId, internalRoomId) {\n        return new FederationSetupRoomDto({\n          internalInviterId,\n          internalRoomId\n        });\n      }\n      static toOnRoomCreationDto(internalInviterId, internalInviterUsername, internalRoomId, externalInviteesUsername, homeServerDomainName) {\n        const allExceptOwner = getAllUsersExceptOwnerByUsername(externalInviteesUsername, internalInviterUsername);\n        const users = normalizeInvitees(allExceptOwner, homeServerDomainName);\n        return new FederationOnRoomCreationDto({\n          internalInviterId,\n          internalRoomId,\n          invitees: users\n        });\n      }\n      static toOnAddedUsersToARoomDto(internalInviterId, internalInviterUsername, internalRoomId, externalInvitees, homeServerDomainName) {\n        const externalInviteesUsername = getInviteesUsername(externalInvitees);\n        const externalInviterId = isAnExternalIdentifierFormat(internalInviterUsername) && extractServerNameFromExternalIdentifier(internalInviterUsername) !== homeServerDomainName && internalInviterId;\n        const allExceptOwner = getAllUsersExceptOwnerByUsername(externalInviteesUsername, internalInviterUsername);\n        const users = normalizeInvitees(allExceptOwner, homeServerDomainName);\n        return new FederationOnUsersAddedToARoomDto({\n          internalInviterId,\n          internalRoomId,\n          invitees: users,\n          inviteComesFromAnExternalHomeServer: Boolean(externalInviterId)\n        });\n      }\n      static toOnDirectMessageCreatedDto(internalInviterId, internalRoomId, externalInvitees, homeServerDomainName) {\n        const allExceptOwner = getAllUsersExceptOwnerByUserId(externalInvitees, internalInviterId);\n        const externalUsernamesToBeInvited = getInviteesUsername(getExternalUsersToBeInvited(allExceptOwner));\n        const internalUsernamesToBeInvited = getInternalUsernames(allExceptOwner).filter(internal => !externalUsernamesToBeInvited.includes(internal));\n        const allUsernamesToBeInvited = [...externalUsernamesToBeInvited, ...internalUsernamesToBeInvited];\n        const externalInviterId = isAnExternalUserIdFormat(internalInviterId) && internalInviterId;\n        return new FederationOnDirectMessageRoomCreationDto({\n          internalInviterId,\n          internalRoomId,\n          invitees: normalizeInvitees(allUsernamesToBeInvited, homeServerDomainName),\n          inviteComesFromAnExternalHomeServer: Boolean(externalInviterId)\n        });\n      }\n      static toBeforeDirectMessageCreatedDto(members, homeServerDomainName) {\n        const invitees = getExternalUsersToBeInvited(members);\n        const inviteesUsername = getInviteesUsername(invitees);\n        return new FederationBeforeDirectMessageRoomCreationDto({\n          invitees: normalizeInvitees(inviteesUsername, homeServerDomainName)\n        });\n      }\n      static toBeforeAddUserToARoomDto(members, internalRoom, homeServerDomainName, internalInviter) {\n        const {\n          invitees\n        } = FederationRoomSenderConverterEE.toBeforeDirectMessageCreatedDto(members, homeServerDomainName);\n        return new FederationBeforeAddUserToARoomDto({\n          internalRoomId: internalRoom._id,\n          invitees,\n          internalInviter\n        });\n      }\n      static toCreateDirectMessageDto(internalInviterId, invitees) {\n        return new FederationCreateDirectMessageDto({\n          internalInviterId,\n          invitees\n        });\n      }\n      static toJoinExternalPublicRoomDto(internalUserId, externalRoomId, roomName, pageToken) {\n        return new FederationJoinExternalPublicRoomInputDto({\n          externalRoomId,\n          internalUserId,\n          normalizedRoomId: convertExternalRoomIdToInternalRoomIdFormat(externalRoomId),\n          externalRoomHomeServerName: extractServerNameFromExternalIdentifier(externalRoomId),\n          roomName,\n          pageToken\n        });\n      }\n      static toJoinInternalPublicRoomDto(internalUserId, internalRoomId) {\n        return new FederationJoinInternalPublicRoomInputDto({\n          internalRoomId,\n          internalUserId\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","FederationRoomSenderConverterEE","isUserFederated","link","v","convertExternalRoomIdToInternalRoomIdFormat","extractServerNameFromExternalIdentifier","formatExternalUserIdToInternalUsernameFormat","isAnExternalIdentifierFormat","isAnExternalUserIdFormat","removeExternalSpecificCharsFromExternalIdentifier","FederationJoinExternalPublicRoomInputDto","FederationJoinInternalPublicRoomInputDto","FederationBeforeAddUserToARoomDto","FederationBeforeDirectMessageRoomCreationDto","FederationCreateDirectMessageDto","FederationOnDirectMessageRoomCreationDto","FederationOnRoomCreationDto","FederationOnUsersAddedToARoomDto","FederationRoomInviteUserDto","FederationSetupRoomDto","__reifyWaitForDeps__","ensureUserHasAHomeServer","username","localHomeServer","includes","concat","isAnExistentUser","invitee","normalizeInvitees","externalInviteesUsername","homeServerDomainName","filter","Boolean","map","inviteeUsername","normalizedInviteeId","inviteeUsernameOnly","rawInviteeId","getInviteesUsername","externalInvitees","getExternalUsersToBeInvited","invitees","externalAndNonExistentInviteesUsername","externalExistentUsers","getInternalUsernames","getAllUsersExceptOwnerByUserId","ownerId","_id","getAllUsersExceptOwnerByUsername","ownerUsername","toRoomInviteUserDto","internalInviterId","internalRoomId","externalInviteeId","toSetupRoomDto","toOnRoomCreationDto","internalInviterUsername","allExceptOwner","users","toOnAddedUsersToARoomDto","externalInviterId","inviteComesFromAnExternalHomeServer","toOnDirectMessageCreatedDto","externalUsernamesToBeInvited","internalUsernamesToBeInvited","internal","allUsernamesToBeInvited","toBeforeDirectMessageCreatedDto","members","inviteesUsername","toBeforeAddUserToARoomDto","internalRoom","internalInviter","toCreateDirectMessageDto","toJoinExternalPublicRoomDto","internalUserId","externalRoomId","roomName","pageToken","normalizedRoomId","externalRoomHomeServerName","toJoinInternalPublicRoomDto","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/local-services/federation/infrastructure/rocket-chat/converters/RoomSender.ts"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { isUserFederated } from '@rocket.chat/core-typings';\n\nimport {\n\tconvertExternalRoomIdToInternalRoomIdFormat,\n\textractServerNameFromExternalIdentifier,\n\tformatExternalUserIdToInternalUsernameFormat,\n\tisAnExternalIdentifierFormat,\n\tisAnExternalUserIdFormat,\n\tremoveExternalSpecificCharsFromExternalIdentifier,\n} from '../../../../../../../server/services/federation/infrastructure/matrix/converters/room/RoomReceiver';\nimport {\n\tFederationJoinExternalPublicRoomInputDto,\n\tFederationJoinInternalPublicRoomInputDto,\n} from '../../../application/room/sender/input/RoomInputDto';\nimport {\n\tFederationBeforeAddUserToARoomDto,\n\tFederationBeforeDirectMessageRoomCreationDto,\n\tFederationCreateDirectMessageDto,\n\tFederationOnDirectMessageRoomCreationDto,\n\tFederationOnRoomCreationDto,\n\tFederationOnUsersAddedToARoomDto,\n\tFederationRoomInviteUserDto,\n\tFederationSetupRoomDto,\n} from '../../../application/room/sender/input/RoomSenderDto';\nimport type { IFederationInviteeDto } from '../../../application/room/sender/input/RoomSenderDto';\n\nconst ensureUserHasAHomeServer = (username: string, localHomeServer: string): string => {\n\treturn username?.includes(':') ? username : `${username}:${localHomeServer}`;\n};\n\nconst isAnExistentUser = (invitee: IUser | string): boolean => typeof invitee !== 'string';\n\nconst normalizeInvitees = (externalInviteesUsername: string[], homeServerDomainName: string): IFederationInviteeDto[] => {\n\treturn externalInviteesUsername\n\t\t.filter(Boolean)\n\t\t.map((inviteeUsername) => ensureUserHasAHomeServer(inviteeUsername, homeServerDomainName))\n\t\t.map((inviteeUsername) => ({\n\t\t\tnormalizedInviteeId: removeExternalSpecificCharsFromExternalIdentifier(inviteeUsername),\n\t\t\tinviteeUsernameOnly: formatExternalUserIdToInternalUsernameFormat(inviteeUsername),\n\t\t\trawInviteeId: `@${removeExternalSpecificCharsFromExternalIdentifier(inviteeUsername)}`,\n\t\t}));\n};\n\nconst getInviteesUsername = (externalInvitees: (IUser | string)[]): string[] => {\n\treturn externalInvitees\n\t\t.map((invitee) => {\n\t\t\treturn isAnExistentUser(invitee) ? (invitee as IUser)?.username || '' : (invitee as string);\n\t\t})\n\t\t.filter(Boolean);\n};\n\nconst getExternalUsersToBeInvited = (invitees: (IUser | string)[]): (IUser | string)[] => {\n\tconst externalAndNonExistentInviteesUsername = invitees.filter((invitee: IUser | string) => !isAnExistentUser(invitee));\n\tconst externalExistentUsers = invitees\n\t\t.filter(isAnExistentUser)\n\t\t.filter((invitee) => isUserFederated(invitee as IUser) || isAnExternalIdentifierFormat((invitee as IUser).username || ''));\n\n\treturn [...externalAndNonExistentInviteesUsername, ...externalExistentUsers];\n};\n\nconst getInternalUsernames = (invitees: (IUser | string)[]): string[] => {\n\treturn invitees\n\t\t.filter(isAnExistentUser)\n\t\t.map((invitee) => (invitee as IUser).username || '')\n\t\t.filter(Boolean);\n};\n\nconst getAllUsersExceptOwnerByUserId = (invitees: (IUser | string)[], ownerId: string): (IUser | string)[] =>\n\tinvitees.filter(Boolean).filter((invitee) => {\n\t\treturn isAnExistentUser(invitee) ? (invitee as IUser)._id !== ownerId : invitee;\n\t});\n\nconst getAllUsersExceptOwnerByUsername = (invitees: string[], ownerUsername: string): string[] =>\n\tinvitees.filter(Boolean).filter((inviteeUsername) => inviteeUsername !== ownerUsername);\n\nexport class FederationRoomSenderConverterEE {\n\tpublic static toRoomInviteUserDto(\n\t\tinternalInviterId: string,\n\t\tinternalRoomId: string,\n\t\texternalInviteeId: string,\n\t): FederationRoomInviteUserDto {\n\t\tconst normalizedInviteeId = removeExternalSpecificCharsFromExternalIdentifier(externalInviteeId);\n\t\tconst inviteeUsernameOnly = formatExternalUserIdToInternalUsernameFormat(externalInviteeId);\n\n\t\treturn new FederationRoomInviteUserDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t\trawInviteeId: externalInviteeId,\n\t\t\tnormalizedInviteeId,\n\t\t\tinviteeUsernameOnly,\n\t\t});\n\t}\n\n\tpublic static toSetupRoomDto(internalInviterId: string, internalRoomId: string): FederationSetupRoomDto {\n\t\treturn new FederationSetupRoomDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t});\n\t}\n\n\tpublic static toOnRoomCreationDto(\n\t\tinternalInviterId: string,\n\t\tinternalInviterUsername: string,\n\t\tinternalRoomId: string,\n\t\texternalInviteesUsername: string[],\n\t\thomeServerDomainName: string,\n\t): FederationOnRoomCreationDto {\n\t\tconst allExceptOwner = getAllUsersExceptOwnerByUsername(externalInviteesUsername, internalInviterUsername);\n\t\tconst users = normalizeInvitees(allExceptOwner, homeServerDomainName);\n\n\t\treturn new FederationOnRoomCreationDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t\tinvitees: users,\n\t\t});\n\t}\n\n\tpublic static toOnAddedUsersToARoomDto(\n\t\tinternalInviterId: string,\n\t\tinternalInviterUsername: string,\n\t\tinternalRoomId: string,\n\t\texternalInvitees: IUser[] | string[],\n\t\thomeServerDomainName: string,\n\t): FederationOnUsersAddedToARoomDto {\n\t\tconst externalInviteesUsername: string[] = getInviteesUsername(externalInvitees);\n\t\tconst externalInviterId =\n\t\t\tisAnExternalIdentifierFormat(internalInviterUsername) &&\n\t\t\textractServerNameFromExternalIdentifier(internalInviterUsername) !== homeServerDomainName &&\n\t\t\tinternalInviterId;\n\n\t\tconst allExceptOwner = getAllUsersExceptOwnerByUsername(externalInviteesUsername, internalInviterUsername);\n\t\tconst users = normalizeInvitees(allExceptOwner, homeServerDomainName);\n\n\t\treturn new FederationOnUsersAddedToARoomDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t\tinvitees: users,\n\t\t\tinviteComesFromAnExternalHomeServer: Boolean(externalInviterId),\n\t\t});\n\t}\n\n\tpublic static toOnDirectMessageCreatedDto(\n\t\tinternalInviterId: string,\n\t\tinternalRoomId: string,\n\t\texternalInvitees: (IUser | string)[],\n\t\thomeServerDomainName: string,\n\t): FederationOnDirectMessageRoomCreationDto {\n\t\tconst allExceptOwner = getAllUsersExceptOwnerByUserId(externalInvitees, internalInviterId);\n\t\tconst externalUsernamesToBeInvited: string[] = getInviteesUsername(getExternalUsersToBeInvited(allExceptOwner));\n\t\tconst internalUsernamesToBeInvited: string[] = getInternalUsernames(allExceptOwner).filter(\n\t\t\t(internal) => !externalUsernamesToBeInvited.includes(internal),\n\t\t);\n\t\tconst allUsernamesToBeInvited: string[] = [...externalUsernamesToBeInvited, ...internalUsernamesToBeInvited];\n\n\t\tconst externalInviterId = isAnExternalUserIdFormat(internalInviterId) && internalInviterId;\n\n\t\treturn new FederationOnDirectMessageRoomCreationDto({\n\t\t\tinternalInviterId,\n\t\t\tinternalRoomId,\n\t\t\tinvitees: normalizeInvitees(allUsernamesToBeInvited, homeServerDomainName),\n\t\t\tinviteComesFromAnExternalHomeServer: Boolean(externalInviterId),\n\t\t});\n\t}\n\n\tpublic static toBeforeDirectMessageCreatedDto(\n\t\tmembers: (IUser | string)[],\n\t\thomeServerDomainName: string,\n\t): FederationBeforeDirectMessageRoomCreationDto {\n\t\tconst invitees = getExternalUsersToBeInvited(members);\n\t\tconst inviteesUsername = getInviteesUsername(invitees);\n\n\t\treturn new FederationBeforeDirectMessageRoomCreationDto({\n\t\t\tinvitees: normalizeInvitees(inviteesUsername, homeServerDomainName),\n\t\t});\n\t}\n\n\tpublic static toBeforeAddUserToARoomDto(\n\t\tmembers: (IUser | string)[],\n\t\tinternalRoom: IRoom,\n\t\thomeServerDomainName: string,\n\t\tinternalInviter?: IUser,\n\t): FederationBeforeAddUserToARoomDto {\n\t\tconst { invitees } = FederationRoomSenderConverterEE.toBeforeDirectMessageCreatedDto(members, homeServerDomainName);\n\n\t\treturn new FederationBeforeAddUserToARoomDto({\n\t\t\tinternalRoomId: internalRoom._id,\n\t\t\tinvitees,\n\t\t\tinternalInviter,\n\t\t});\n\t}\n\n\tpublic static toCreateDirectMessageDto(internalInviterId: string, invitees: string[]): FederationCreateDirectMessageDto {\n\t\treturn new FederationCreateDirectMessageDto({\n\t\t\tinternalInviterId,\n\t\t\tinvitees,\n\t\t});\n\t}\n\n\tpublic static toJoinExternalPublicRoomDto(\n\t\tinternalUserId: string,\n\t\texternalRoomId: string,\n\t\troomName?: string,\n\t\tpageToken?: string,\n\t): FederationJoinExternalPublicRoomInputDto {\n\t\treturn new FederationJoinExternalPublicRoomInputDto({\n\t\t\texternalRoomId,\n\t\t\tinternalUserId,\n\t\t\tnormalizedRoomId: convertExternalRoomIdToInternalRoomIdFormat(externalRoomId),\n\t\t\texternalRoomHomeServerName: extractServerNameFromExternalIdentifier(externalRoomId),\n\t\t\troomName,\n\t\t\tpageToken,\n\t\t});\n\t}\n\n\tpublic static toJoinInternalPublicRoomDto(internalUserId: string, internalRoomId: string): FederationJoinInternalPublicRoomInputDto {\n\t\treturn new FederationJoinInternalPublicRoomInputDto({\n\t\t\tinternalRoomId,\n\t\t\tinternalUserId,\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ffabdb23e32c3ad6e82354c373363a16eb1f4ad3"}
