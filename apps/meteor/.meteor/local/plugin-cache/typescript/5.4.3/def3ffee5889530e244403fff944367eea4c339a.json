{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/minimongo/sort.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/minimongo/sort.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/minimongo/sort.ts","inputSourceMap":{"version":3,"file":"client/lib/minimongo/sort.ts","sourceRoot":"","sources":["client/lib/minimongo/sort.ts"],"names":[],"mappings":"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","sourcesContent":["import { compareBSONValues } from './bson';\nimport { isEmptyArray } from './comparisons';\nimport { createLookupFunction } from './lookups';\nimport type { Sort } from './types';\n\nconst createSortSpecParts = <T>(\n\tspec: Sort,\n): {\n\tlookup: (doc: T) => unknown[];\n\tascending: boolean;\n}[] => {\n\tif (Array.isArray(spec)) {\n\t\treturn spec.map((value) => {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn {\n\t\t\t\t\tlookup: createLookupFunction<T>(value),\n\t\t\t\t\tascending: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tlookup: createLookupFunction<T>(value[0]),\n\t\t\t\tascending: value[1] !== 'desc',\n\t\t\t};\n\t\t});\n\t}\n\n\treturn Object.entries(spec).map(([key, value]) => ({\n\t\tlookup: createLookupFunction<T>(key),\n\t\tascending: value >= 0,\n\t}));\n};\n\nconst reduceValue = (branchValues: unknown[], ascending: boolean): unknown =>\n\t([] as unknown[])\n\t\t.concat(\n\t\t\t...branchValues.map<unknown[]>((branchValue) => {\n\t\t\t\tif (!Array.isArray(branchValue)) {\n\t\t\t\t\treturn [branchValue];\n\t\t\t\t}\n\n\t\t\t\tif (isEmptyArray(branchValue)) {\n\t\t\t\t\treturn [undefined];\n\t\t\t\t}\n\n\t\t\t\treturn branchValue;\n\t\t\t}),\n\t\t)\n\t\t.reduce((reduced, value) => {\n\t\t\tconst cmp = compareBSONValues(reduced, value);\n\t\t\tif ((ascending && cmp > 0) || (!ascending && cmp < 0)) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn reduced;\n\t\t});\n\nexport const compileSort = (spec: Sort): ((a: unknown, b: unknown) => number) => {\n\tconst sortSpecParts = createSortSpecParts(spec);\n\n\tif (sortSpecParts.length === 0) {\n\t\treturn (): number => 0;\n\t}\n\n\treturn (a: unknown, b: unknown): number => {\n\t\tfor (let i = 0; i < sortSpecParts.length; ++i) {\n\t\t\tconst specPart = sortSpecParts[i];\n\t\t\tconst aValue = reduceValue(specPart.lookup(a), specPart.ascending);\n\t\t\tconst bValue = reduceValue(specPart.lookup(b), specPart.ascending);\n\t\t\tconst compare = compareBSONValues(aValue, bValue);\n\n\t\t\tif (compare !== 0) {\n\t\t\t\treturn specPart.ascending ? compare : -compare;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/minimongo/sort.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/minimongo/sort.ts","inputSourceMap":{"version":3,"file":"client/lib/minimongo/sort.ts","sourceRoot":"","sources":["client/lib/minimongo/sort.ts"],"names":[],"mappings":"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","sourcesContent":["import { compareBSONValues } from './bson';\nimport { isEmptyArray } from './comparisons';\nimport { createLookupFunction } from './lookups';\nimport type { Sort } from './types';\n\nconst createSortSpecParts = <T>(\n\tspec: Sort,\n): {\n\tlookup: (doc: T) => unknown[];\n\tascending: boolean;\n}[] => {\n\tif (Array.isArray(spec)) {\n\t\treturn spec.map((value) => {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn {\n\t\t\t\t\tlookup: createLookupFunction<T>(value),\n\t\t\t\t\tascending: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tlookup: createLookupFunction<T>(value[0]),\n\t\t\t\tascending: value[1] !== 'desc',\n\t\t\t};\n\t\t});\n\t}\n\n\treturn Object.entries(spec).map(([key, value]) => ({\n\t\tlookup: createLookupFunction<T>(key),\n\t\tascending: value >= 0,\n\t}));\n};\n\nconst reduceValue = (branchValues: unknown[], ascending: boolean): unknown =>\n\t([] as unknown[])\n\t\t.concat(\n\t\t\t...branchValues.map<unknown[]>((branchValue) => {\n\t\t\t\tif (!Array.isArray(branchValue)) {\n\t\t\t\t\treturn [branchValue];\n\t\t\t\t}\n\n\t\t\t\tif (isEmptyArray(branchValue)) {\n\t\t\t\t\treturn [undefined];\n\t\t\t\t}\n\n\t\t\t\treturn branchValue;\n\t\t\t}),\n\t\t)\n\t\t.reduce((reduced, value) => {\n\t\t\tconst cmp = compareBSONValues(reduced, value);\n\t\t\tif ((ascending && cmp > 0) || (!ascending && cmp < 0)) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn reduced;\n\t\t});\n\nexport const compileSort = (spec: Sort): ((a: unknown, b: unknown) => number) => {\n\tconst sortSpecParts = createSortSpecParts(spec);\n\n\tif (sortSpecParts.length === 0) {\n\t\treturn (): number => 0;\n\t}\n\n\treturn (a: unknown, b: unknown): number => {\n\t\tfor (let i = 0; i < sortSpecParts.length; ++i) {\n\t\t\tconst specPart = sortSpecParts[i];\n\t\t\tconst aValue = reduceValue(specPart.lookup(a), specPart.ascending);\n\t\t\tconst bValue = reduceValue(specPart.lookup(b), specPart.ascending);\n\t\t\tconst compare = compareBSONValues(aValue, bValue);\n\n\t\t\tif (compare !== 0) {\n\t\t\t\treturn specPart.ascending ? compare : -compare;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t};\n};\n"]}}},"code":"module.export({\n  compileSort: () => compileSort\n});\nlet compareBSONValues;\nmodule.link(\"./bson\", {\n  compareBSONValues(v) {\n    compareBSONValues = v;\n  }\n}, 0);\nlet isEmptyArray;\nmodule.link(\"./comparisons\", {\n  isEmptyArray(v) {\n    isEmptyArray = v;\n  }\n}, 1);\nlet createLookupFunction;\nmodule.link(\"./lookups\", {\n  createLookupFunction(v) {\n    createLookupFunction = v;\n  }\n}, 2);\nconst createSortSpecParts = spec => {\n  if (Array.isArray(spec)) {\n    return spec.map(value => {\n      if (typeof value === 'string') {\n        return {\n          lookup: createLookupFunction(value),\n          ascending: true\n        };\n      }\n      return {\n        lookup: createLookupFunction(value[0]),\n        ascending: value[1] !== 'desc'\n      };\n    });\n  }\n  return Object.entries(spec).map(_ref => {\n    let [key, value] = _ref;\n    return {\n      lookup: createLookupFunction(key),\n      ascending: value >= 0\n    };\n  });\n};\nconst reduceValue = (branchValues, ascending) => [].concat(...branchValues.map(branchValue => {\n  if (!Array.isArray(branchValue)) {\n    return [branchValue];\n  }\n  if (isEmptyArray(branchValue)) {\n    return [undefined];\n  }\n  return branchValue;\n})).reduce((reduced, value) => {\n  const cmp = compareBSONValues(reduced, value);\n  if (ascending && cmp > 0 || !ascending && cmp < 0) {\n    return value;\n  }\n  return reduced;\n});\nconst compileSort = spec => {\n  const sortSpecParts = createSortSpecParts(spec);\n  if (sortSpecParts.length === 0) {\n    return () => 0;\n  }\n  return (a, b) => {\n    for (let i = 0; i < sortSpecParts.length; ++i) {\n      const specPart = sortSpecParts[i];\n      const aValue = reduceValue(specPart.lookup(a), specPart.ascending);\n      const bValue = reduceValue(specPart.lookup(b), specPart.ascending);\n      const compare = compareBSONValues(aValue, bValue);\n      if (compare !== 0) {\n        return specPart.ascending ? compare : -compare;\n      }\n    }\n    return 0;\n  };\n};","map":{"version":3,"names":["module","export","compileSort","compareBSONValues","link","v","isEmptyArray","createLookupFunction","createSortSpecParts","spec","Array","isArray","map","value","lookup","ascending","Object","entries","_ref","key","reduceValue","branchValues","concat","branchValue","undefined","reduce","reduced","cmp","sortSpecParts","length","a","b","i","specPart","aValue","bValue","compare"],"sources":["client/lib/minimongo/sort.ts"],"sourcesContent":["import { compareBSONValues } from './bson';\nimport { isEmptyArray } from './comparisons';\nimport { createLookupFunction } from './lookups';\nimport type { Sort } from './types';\n\nconst createSortSpecParts = <T>(\n\tspec: Sort,\n): {\n\tlookup: (doc: T) => unknown[];\n\tascending: boolean;\n}[] => {\n\tif (Array.isArray(spec)) {\n\t\treturn spec.map((value) => {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn {\n\t\t\t\t\tlookup: createLookupFunction<T>(value),\n\t\t\t\t\tascending: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tlookup: createLookupFunction<T>(value[0]),\n\t\t\t\tascending: value[1] !== 'desc',\n\t\t\t};\n\t\t});\n\t}\n\n\treturn Object.entries(spec).map(([key, value]) => ({\n\t\tlookup: createLookupFunction<T>(key),\n\t\tascending: value >= 0,\n\t}));\n};\n\nconst reduceValue = (branchValues: unknown[], ascending: boolean): unknown =>\n\t([] as unknown[])\n\t\t.concat(\n\t\t\t...branchValues.map<unknown[]>((branchValue) => {\n\t\t\t\tif (!Array.isArray(branchValue)) {\n\t\t\t\t\treturn [branchValue];\n\t\t\t\t}\n\n\t\t\t\tif (isEmptyArray(branchValue)) {\n\t\t\t\t\treturn [undefined];\n\t\t\t\t}\n\n\t\t\t\treturn branchValue;\n\t\t\t}),\n\t\t)\n\t\t.reduce((reduced, value) => {\n\t\t\tconst cmp = compareBSONValues(reduced, value);\n\t\t\tif ((ascending && cmp > 0) || (!ascending && cmp < 0)) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn reduced;\n\t\t});\n\nexport const compileSort = (spec: Sort): ((a: unknown, b: unknown) => number) => {\n\tconst sortSpecParts = createSortSpecParts(spec);\n\n\tif (sortSpecParts.length === 0) {\n\t\treturn (): number => 0;\n\t}\n\n\treturn (a: unknown, b: unknown): number => {\n\t\tfor (let i = 0; i < sortSpecParts.length; ++i) {\n\t\t\tconst specPart = sortSpecParts[i];\n\t\t\tconst aValue = reduceValue(specPart.lookup(a), specPart.ascending);\n\t\t\tconst bValue = reduceValue(specPart.lookup(b), specPart.ascending);\n\t\t\tconst compare = compareBSONValues(aValue, bValue);\n\n\t\t\tif (compare !== 0) {\n\t\t\t\treturn specPart.ascending ? compare : -compare;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"def3ffee5889530e244403fff944367eea4c339a"}
