{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerModal.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerModal.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerModal.tsx","inputSourceMap":{"version":3,"file":"client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerModal.tsx","sourceRoot":"","sources":["client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IWebdavNode, IWebdavAccountIntegration } from '@rocket.chat/core-typings';\nimport type { SelectOption } from '@rocket.chat/fuselage';\nimport { Modal, Box, IconButton, Select } from '@rocket.chat/fuselage';\nimport { useMutableCallback, useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport { useMethod, useToastMessageDispatch, useTranslation, useSetModal } from '@rocket.chat/ui-contexts';\nimport type { ReactElement, MouseEvent } from 'react';\nimport React, { useState, useEffect, useCallback } from 'react';\n\nimport { fileUploadIsValidContentType } from '../../../../../app/utils/client';\nimport FilterByText from '../../../../components/FilterByText';\nimport { useSort } from '../../../../components/GenericTable/hooks/useSort';\nimport FileUploadModal from '../../modals/FileUploadModal';\nimport FilePickerBreadcrumbs from './FilePickerBreadcrumbs';\nimport WebdavFilePickerGrid from './WebdavFilePickerGrid';\nimport WebdavFilePickerTable from './WebdavFilePickerTable';\nimport { sortWebdavNodes } from './lib/sortWebdavNodes';\n\nexport type WebdavSortOptions = 'name' | 'size' | 'dataModified';\n\ntype WebdavFilePickerModalProps = {\n\tonUpload: (file: File, description?: string) => Promise<void>;\n\tonClose: () => void;\n\taccount: IWebdavAccountIntegration;\n};\n\nconst WebdavFilePickerModal = ({ onUpload, onClose, account }: WebdavFilePickerModalProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\tconst getWebdavFilePreview = useMethod('getWebdavFilePreview');\n\tconst getWebdavFileList = useMethod('getWebdavFileList');\n\tconst getFileFromWebdav = useMethod('getFileFromWebdav');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst [typeView, setTypeView] = useState<'list' | 'grid'>('list');\n\tconst { sortBy, sortDirection, setSort } = useSort<WebdavSortOptions>('name');\n\tconst [currentFolder, setCurrentFolder] = useState('/');\n\tconst [parentFolders, setParentFolders] = useState<string[]>([]);\n\tconst [webdavNodes, setWebdavNodes] = useState<IWebdavNode[]>([]);\n\tconst [filterText, setFilterText] = useState('');\n\tconst debouncedFilter = useDebouncedValue(filterText, 500);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst showFilePreviews = useMutableCallback(async (accountId, nodes) => {\n\t\tif (!Array.isArray(nodes) || !nodes.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst promises = nodes\n\t\t\t.map((node, index) => {\n\t\t\t\tif (node.type !== 'file') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn getWebdavFilePreview(accountId, node.filename)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (!res?.data) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst blob = new Blob([res?.data], { type: 'image/png' });\n\t\t\t\t\t\tconst imgURL = URL.createObjectURL(blob);\n\t\t\t\t\t\tnodes[index].preview = imgURL;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((e) => e);\n\t\t\t})\n\t\t\t.filter(Boolean);\n\n\t\treturn Promise.all(promises)\n\t\t\t.then(() => nodes)\n\t\t\t.catch((e) => e);\n\t});\n\n\tconst handleFilterNodes = useCallback(\n\t\t(webdavNodes: IWebdavNode[]): void => {\n\t\t\tconst regex = new RegExp(`\\\\b${debouncedFilter}`, 'i');\n\t\t\tconst filteredNodes = webdavNodes.filter(({ basename }) => basename.match(regex));\n\t\t\treturn setWebdavNodes(filteredNodes);\n\t\t},\n\t\t[debouncedFilter],\n\t);\n\n\tconst handleGetWebdavFileList = useCallback(async (): Promise<void> => {\n\t\tsetIsLoading(true);\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = await getWebdavFileList(account._id, currentFolder);\n\t\t\thandleFilterNodes(result.data);\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\tonClose();\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t\tconst nodesWithPreviews = await showFilePreviews(account._id, result?.data);\n\t\t\tif (Array.isArray(nodesWithPreviews) && nodesWithPreviews.length) {\n\t\t\t\thandleFilterNodes(nodesWithPreviews);\n\t\t\t}\n\t\t}\n\t}, [account._id, currentFolder, dispatchToastMessage, getWebdavFileList, onClose, showFilePreviews, handleFilterNodes]);\n\n\tconst handleBreadcrumb = (e: MouseEvent<HTMLElement>): void => {\n\t\tconst { index } = e.currentTarget.dataset;\n\t\tconst parentFolders = currentFolder.split('/').filter((s) => s);\n\n\t\t// determine parent directory to go to\n\t\tlet targetFolder = '/';\n\t\tfor (let i = 0; i <= Number(index); i++) {\n\t\t\ttargetFolder += parentFolders[i];\n\t\t\ttargetFolder += '/';\n\t\t}\n\t\tsetCurrentFolder(targetFolder);\n\t};\n\n\tconst handleBack = (): void => {\n\t\tlet newCurrentFolder = currentFolder;\n\t\t// determine parent directory to go back\n\t\tlet parentFolder = '/';\n\t\tif (newCurrentFolder && newCurrentFolder !== '/') {\n\t\t\tif (newCurrentFolder[newCurrentFolder.length - 1] === '/') {\n\t\t\t\tnewCurrentFolder = newCurrentFolder.slice(0, -1);\n\t\t\t}\n\t\t\tparentFolder = newCurrentFolder.substr(0, newCurrentFolder.lastIndexOf('/') + 1);\n\t\t}\n\t\tsetCurrentFolder(parentFolder);\n\t};\n\n\tconst handleNodeClick = (webdavNode: IWebdavNode): void | Promise<void> => {\n\t\tif (webdavNode.type === 'directory') {\n\t\t\treturn setCurrentFolder(webdavNode.filename);\n\t\t}\n\n\t\treturn handleUpload(webdavNode);\n\t};\n\n\tconst handleUpload = async (webdavNode: IWebdavNode): Promise<void> => {\n\t\tsetIsLoading(true);\n\n\t\tconst uploadFile = async (file: File, description?: string): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait onUpload?.(file, description);\n\t\t\t} catch (error) {\n\t\t\t\treturn dispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tonClose();\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\tconst { data } = await getFileFromWebdav(account._id, webdavNode);\n\t\t\tconst blob = new Blob([data]);\n\t\t\tconst file = new File([blob], webdavNode.basename, { type: webdavNode.mime });\n\n\t\t\tsetModal(\n\t\t\t\t<FileUploadModal\n\t\t\t\t\tfileName={webdavNode.basename}\n\t\t\t\t\tonSubmit={(_, description): Promise<void> => uploadFile(file, description)}\n\t\t\t\t\tfile={file}\n\t\t\t\t\tonClose={(): void => setModal(null)}\n\t\t\t\t\tinvalidContentType={Boolean(file.type && !fileUploadIsValidContentType(file.type))}\n\t\t\t\t/>,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\treturn dispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\thandleGetWebdavFileList();\n\t}, [handleGetWebdavFileList]);\n\n\tuseEffect(() => {\n\t\tsetParentFolders(currentFolder?.split('/').filter((s) => s) || []);\n\t}, [currentFolder]);\n\n\tconst options: SelectOption[] = [\n\t\t['name', 'Name'],\n\t\t['size', 'Size'],\n\t\t['dataModified', 'Data Modified'],\n\t];\n\n\tconst handleSort = (sortBy: WebdavSortOptions, sortDirection?: 'asc' | 'desc'): void => {\n\t\tsetSort(sortBy);\n\t\tconst sortedNodes = sortWebdavNodes(webdavNodes, sortBy, sortDirection);\n\t\treturn setWebdavNodes(sortedNodes);\n\t};\n\n\treturn (\n\t\t<Modal>\n\t\t\t<Modal.Header>\n\t\t\t\t<Modal.Title>{t('Upload_From', { name: account.name })}</Modal.Title>\n\t\t\t\t<Modal.Close title={t('Close')} onClick={onClose} />\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Content>\n\t\t\t\t<Box display='flex' justifyContent='space-between'>\n\t\t\t\t\t<FilePickerBreadcrumbs parentFolders={parentFolders} handleBreadcrumb={handleBreadcrumb} handleBack={handleBack} />\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t{typeView === 'list' && <IconButton icon='squares' small title={t('Grid_view')} onClick={(): void => setTypeView('grid')} />}\n\t\t\t\t\t\t{typeView === 'grid' && <IconButton icon='th-list' small title={t('List_view')} onClick={(): void => setTypeView('list')} />}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t\t<Box display='flex' flexDirection='column'>\n\t\t\t\t\t<FilterByText onChange={setFilterText}>\n\t\t\t\t\t\t{typeView === 'grid' && (\n\t\t\t\t\t\t\t<Select value={sortBy} onChange={(value): void => handleSort(value as WebdavSortOptions)} options={options} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</FilterByText>\n\t\t\t\t</Box>\n\t\t\t\t{typeView === 'list' && (\n\t\t\t\t\t<WebdavFilePickerTable\n\t\t\t\t\t\twebdavNodes={webdavNodes}\n\t\t\t\t\t\tsortBy={sortBy}\n\t\t\t\t\t\tsortDirection={sortDirection}\n\t\t\t\t\t\tonSort={handleSort}\n\t\t\t\t\t\tonNodeClick={handleNodeClick}\n\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{typeView === 'grid' && <WebdavFilePickerGrid webdavNodes={webdavNodes} onNodeClick={handleNodeClick} isLoading={isLoading} />}\n\t\t\t</Modal.Content>\n\t\t\t<Modal.Footer />\n\t\t</Modal>\n\t);\n};\n\nexport default WebdavFilePickerModal;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerModal.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerModal.tsx","inputSourceMap":{"version":3,"file":"client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerModal.tsx","sourceRoot":"","sources":["client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IWebdavNode, IWebdavAccountIntegration } from '@rocket.chat/core-typings';\nimport type { SelectOption } from '@rocket.chat/fuselage';\nimport { Modal, Box, IconButton, Select } from '@rocket.chat/fuselage';\nimport { useMutableCallback, useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport { useMethod, useToastMessageDispatch, useTranslation, useSetModal } from '@rocket.chat/ui-contexts';\nimport type { ReactElement, MouseEvent } from 'react';\nimport React, { useState, useEffect, useCallback } from 'react';\n\nimport { fileUploadIsValidContentType } from '../../../../../app/utils/client';\nimport FilterByText from '../../../../components/FilterByText';\nimport { useSort } from '../../../../components/GenericTable/hooks/useSort';\nimport FileUploadModal from '../../modals/FileUploadModal';\nimport FilePickerBreadcrumbs from './FilePickerBreadcrumbs';\nimport WebdavFilePickerGrid from './WebdavFilePickerGrid';\nimport WebdavFilePickerTable from './WebdavFilePickerTable';\nimport { sortWebdavNodes } from './lib/sortWebdavNodes';\n\nexport type WebdavSortOptions = 'name' | 'size' | 'dataModified';\n\ntype WebdavFilePickerModalProps = {\n\tonUpload: (file: File, description?: string) => Promise<void>;\n\tonClose: () => void;\n\taccount: IWebdavAccountIntegration;\n};\n\nconst WebdavFilePickerModal = ({ onUpload, onClose, account }: WebdavFilePickerModalProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\tconst getWebdavFilePreview = useMethod('getWebdavFilePreview');\n\tconst getWebdavFileList = useMethod('getWebdavFileList');\n\tconst getFileFromWebdav = useMethod('getFileFromWebdav');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst [typeView, setTypeView] = useState<'list' | 'grid'>('list');\n\tconst { sortBy, sortDirection, setSort } = useSort<WebdavSortOptions>('name');\n\tconst [currentFolder, setCurrentFolder] = useState('/');\n\tconst [parentFolders, setParentFolders] = useState<string[]>([]);\n\tconst [webdavNodes, setWebdavNodes] = useState<IWebdavNode[]>([]);\n\tconst [filterText, setFilterText] = useState('');\n\tconst debouncedFilter = useDebouncedValue(filterText, 500);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst showFilePreviews = useMutableCallback(async (accountId, nodes) => {\n\t\tif (!Array.isArray(nodes) || !nodes.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst promises = nodes\n\t\t\t.map((node, index) => {\n\t\t\t\tif (node.type !== 'file') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn getWebdavFilePreview(accountId, node.filename)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (!res?.data) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst blob = new Blob([res?.data], { type: 'image/png' });\n\t\t\t\t\t\tconst imgURL = URL.createObjectURL(blob);\n\t\t\t\t\t\tnodes[index].preview = imgURL;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((e) => e);\n\t\t\t})\n\t\t\t.filter(Boolean);\n\n\t\treturn Promise.all(promises)\n\t\t\t.then(() => nodes)\n\t\t\t.catch((e) => e);\n\t});\n\n\tconst handleFilterNodes = useCallback(\n\t\t(webdavNodes: IWebdavNode[]): void => {\n\t\t\tconst regex = new RegExp(`\\\\b${debouncedFilter}`, 'i');\n\t\t\tconst filteredNodes = webdavNodes.filter(({ basename }) => basename.match(regex));\n\t\t\treturn setWebdavNodes(filteredNodes);\n\t\t},\n\t\t[debouncedFilter],\n\t);\n\n\tconst handleGetWebdavFileList = useCallback(async (): Promise<void> => {\n\t\tsetIsLoading(true);\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = await getWebdavFileList(account._id, currentFolder);\n\t\t\thandleFilterNodes(result.data);\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\tonClose();\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t\tconst nodesWithPreviews = await showFilePreviews(account._id, result?.data);\n\t\t\tif (Array.isArray(nodesWithPreviews) && nodesWithPreviews.length) {\n\t\t\t\thandleFilterNodes(nodesWithPreviews);\n\t\t\t}\n\t\t}\n\t}, [account._id, currentFolder, dispatchToastMessage, getWebdavFileList, onClose, showFilePreviews, handleFilterNodes]);\n\n\tconst handleBreadcrumb = (e: MouseEvent<HTMLElement>): void => {\n\t\tconst { index } = e.currentTarget.dataset;\n\t\tconst parentFolders = currentFolder.split('/').filter((s) => s);\n\n\t\t// determine parent directory to go to\n\t\tlet targetFolder = '/';\n\t\tfor (let i = 0; i <= Number(index); i++) {\n\t\t\ttargetFolder += parentFolders[i];\n\t\t\ttargetFolder += '/';\n\t\t}\n\t\tsetCurrentFolder(targetFolder);\n\t};\n\n\tconst handleBack = (): void => {\n\t\tlet newCurrentFolder = currentFolder;\n\t\t// determine parent directory to go back\n\t\tlet parentFolder = '/';\n\t\tif (newCurrentFolder && newCurrentFolder !== '/') {\n\t\t\tif (newCurrentFolder[newCurrentFolder.length - 1] === '/') {\n\t\t\t\tnewCurrentFolder = newCurrentFolder.slice(0, -1);\n\t\t\t}\n\t\t\tparentFolder = newCurrentFolder.substr(0, newCurrentFolder.lastIndexOf('/') + 1);\n\t\t}\n\t\tsetCurrentFolder(parentFolder);\n\t};\n\n\tconst handleNodeClick = (webdavNode: IWebdavNode): void | Promise<void> => {\n\t\tif (webdavNode.type === 'directory') {\n\t\t\treturn setCurrentFolder(webdavNode.filename);\n\t\t}\n\n\t\treturn handleUpload(webdavNode);\n\t};\n\n\tconst handleUpload = async (webdavNode: IWebdavNode): Promise<void> => {\n\t\tsetIsLoading(true);\n\n\t\tconst uploadFile = async (file: File, description?: string): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait onUpload?.(file, description);\n\t\t\t} catch (error) {\n\t\t\t\treturn dispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tonClose();\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\tconst { data } = await getFileFromWebdav(account._id, webdavNode);\n\t\t\tconst blob = new Blob([data]);\n\t\t\tconst file = new File([blob], webdavNode.basename, { type: webdavNode.mime });\n\n\t\t\tsetModal(\n\t\t\t\t<FileUploadModal\n\t\t\t\t\tfileName={webdavNode.basename}\n\t\t\t\t\tonSubmit={(_, description): Promise<void> => uploadFile(file, description)}\n\t\t\t\t\tfile={file}\n\t\t\t\t\tonClose={(): void => setModal(null)}\n\t\t\t\t\tinvalidContentType={Boolean(file.type && !fileUploadIsValidContentType(file.type))}\n\t\t\t\t/>,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\treturn dispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\thandleGetWebdavFileList();\n\t}, [handleGetWebdavFileList]);\n\n\tuseEffect(() => {\n\t\tsetParentFolders(currentFolder?.split('/').filter((s) => s) || []);\n\t}, [currentFolder]);\n\n\tconst options: SelectOption[] = [\n\t\t['name', 'Name'],\n\t\t['size', 'Size'],\n\t\t['dataModified', 'Data Modified'],\n\t];\n\n\tconst handleSort = (sortBy: WebdavSortOptions, sortDirection?: 'asc' | 'desc'): void => {\n\t\tsetSort(sortBy);\n\t\tconst sortedNodes = sortWebdavNodes(webdavNodes, sortBy, sortDirection);\n\t\treturn setWebdavNodes(sortedNodes);\n\t};\n\n\treturn (\n\t\t<Modal>\n\t\t\t<Modal.Header>\n\t\t\t\t<Modal.Title>{t('Upload_From', { name: account.name })}</Modal.Title>\n\t\t\t\t<Modal.Close title={t('Close')} onClick={onClose} />\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Content>\n\t\t\t\t<Box display='flex' justifyContent='space-between'>\n\t\t\t\t\t<FilePickerBreadcrumbs parentFolders={parentFolders} handleBreadcrumb={handleBreadcrumb} handleBack={handleBack} />\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t{typeView === 'list' && <IconButton icon='squares' small title={t('Grid_view')} onClick={(): void => setTypeView('grid')} />}\n\t\t\t\t\t\t{typeView === 'grid' && <IconButton icon='th-list' small title={t('List_view')} onClick={(): void => setTypeView('list')} />}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t\t<Box display='flex' flexDirection='column'>\n\t\t\t\t\t<FilterByText onChange={setFilterText}>\n\t\t\t\t\t\t{typeView === 'grid' && (\n\t\t\t\t\t\t\t<Select value={sortBy} onChange={(value): void => handleSort(value as WebdavSortOptions)} options={options} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</FilterByText>\n\t\t\t\t</Box>\n\t\t\t\t{typeView === 'list' && (\n\t\t\t\t\t<WebdavFilePickerTable\n\t\t\t\t\t\twebdavNodes={webdavNodes}\n\t\t\t\t\t\tsortBy={sortBy}\n\t\t\t\t\t\tsortDirection={sortDirection}\n\t\t\t\t\t\tonSort={handleSort}\n\t\t\t\t\t\tonNodeClick={handleNodeClick}\n\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{typeView === 'grid' && <WebdavFilePickerGrid webdavNodes={webdavNodes} onNodeClick={handleNodeClick} isLoading={isLoading} />}\n\t\t\t</Modal.Content>\n\t\t\t<Modal.Footer />\n\t\t</Modal>\n\t);\n};\n\nexport default WebdavFilePickerModal;\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 1);\nvar Modal, Box, IconButton, Select;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Modal: function (v) {\n    Modal = v;\n  },\n  Box: function (v) {\n    Box = v;\n  },\n  IconButton: function (v) {\n    IconButton = v;\n  },\n  Select: function (v) {\n    Select = v;\n  }\n}, 0);\nvar useMutableCallback, useDebouncedValue;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback: function (v) {\n    useMutableCallback = v;\n  },\n  useDebouncedValue: function (v) {\n    useDebouncedValue = v;\n  }\n}, 1);\nvar useMethod, useToastMessageDispatch, useTranslation, useSetModal;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useMethod: function (v) {\n    useMethod = v;\n  },\n  useToastMessageDispatch: function (v) {\n    useToastMessageDispatch = v;\n  },\n  useTranslation: function (v) {\n    useTranslation = v;\n  },\n  useSetModal: function (v) {\n    useSetModal = v;\n  }\n}, 2);\nvar React, useState, useEffect, useCallback;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  useState: function (v) {\n    useState = v;\n  },\n  useEffect: function (v) {\n    useEffect = v;\n  },\n  useCallback: function (v) {\n    useCallback = v;\n  }\n}, 3);\nvar fileUploadIsValidContentType;\nmodule.link(\"../../../../../app/utils/client\", {\n  fileUploadIsValidContentType: function (v) {\n    fileUploadIsValidContentType = v;\n  }\n}, 4);\nvar FilterByText;\nmodule.link(\"../../../../components/FilterByText\", {\n  \"default\": function (v) {\n    FilterByText = v;\n  }\n}, 5);\nvar useSort;\nmodule.link(\"../../../../components/GenericTable/hooks/useSort\", {\n  useSort: function (v) {\n    useSort = v;\n  }\n}, 6);\nvar FileUploadModal;\nmodule.link(\"../../modals/FileUploadModal\", {\n  \"default\": function (v) {\n    FileUploadModal = v;\n  }\n}, 7);\nvar FilePickerBreadcrumbs;\nmodule.link(\"./FilePickerBreadcrumbs\", {\n  \"default\": function (v) {\n    FilePickerBreadcrumbs = v;\n  }\n}, 8);\nvar WebdavFilePickerGrid;\nmodule.link(\"./WebdavFilePickerGrid\", {\n  \"default\": function (v) {\n    WebdavFilePickerGrid = v;\n  }\n}, 9);\nvar WebdavFilePickerTable;\nmodule.link(\"./WebdavFilePickerTable\", {\n  \"default\": function (v) {\n    WebdavFilePickerTable = v;\n  }\n}, 10);\nvar sortWebdavNodes;\nmodule.link(\"./lib/sortWebdavNodes\", {\n  sortWebdavNodes: function (v) {\n    sortWebdavNodes = v;\n  }\n}, 11);\nvar WebdavFilePickerModal = function (_ref) {\n  var onUpload = _ref.onUpload,\n    onClose = _ref.onClose,\n    account = _ref.account;\n  var t = useTranslation();\n  var setModal = useSetModal();\n  var getWebdavFilePreview = useMethod('getWebdavFilePreview');\n  var getWebdavFileList = useMethod('getWebdavFileList');\n  var getFileFromWebdav = useMethod('getFileFromWebdav');\n  var dispatchToastMessage = useToastMessageDispatch();\n  var _useState = useState('list'),\n    _useState2 = _slicedToArray(_useState, 2),\n    typeView = _useState2[0],\n    setTypeView = _useState2[1];\n  var _useSort = useSort('name'),\n    sortBy = _useSort.sortBy,\n    sortDirection = _useSort.sortDirection,\n    setSort = _useSort.setSort;\n  var _useState3 = useState('/'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentFolder = _useState4[0],\n    setCurrentFolder = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    parentFolders = _useState6[0],\n    setParentFolders = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    webdavNodes = _useState8[0],\n    setWebdavNodes = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    filterText = _useState10[0],\n    setFilterText = _useState10[1];\n  var debouncedFilter = useDebouncedValue(filterText, 500);\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isLoading = _useState12[0],\n    setIsLoading = _useState12[1];\n  var showFilePreviews = useMutableCallback(function () {\n    function _callee(accountId, nodes) {\n      var promises;\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!Array.isArray(nodes) || !nodes.length)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              promises = nodes.map(function (node, index) {\n                if (node.type !== 'file') {\n                  return;\n                }\n                return getWebdavFilePreview(accountId, node.filename).then(function (res) {\n                  if (!(res !== null && res !== void 0 && res.data)) {\n                    return;\n                  }\n                  var blob = new Blob([res === null || res === void 0 ? void 0 : res.data], {\n                    type: 'image/png'\n                  });\n                  var imgURL = URL.createObjectURL(blob);\n                  nodes[index].preview = imgURL;\n                }).catch(function (e) {\n                  return e;\n                });\n              }).filter(Boolean);\n              return _context.abrupt(\"return\", Promise.all(promises).then(function () {\n                return nodes;\n              }).catch(function (e) {\n                return e;\n              }));\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return _callee$;\n      }(), null, null, null, Promise);\n    }\n    return _callee;\n  }());\n  var handleFilterNodes = useCallback(function (webdavNodes) {\n    var regex = new RegExp(\"\\\\b\" + debouncedFilter, 'i');\n    var filteredNodes = webdavNodes.filter(function (_ref2) {\n      var basename = _ref2.basename;\n      return basename.match(regex);\n    });\n    return setWebdavNodes(filteredNodes);\n  }, [debouncedFilter]);\n  var handleGetWebdavFileList = useCallback(function () {\n    function _callee2() {\n      var result, _result, nodesWithPreviews;\n      return _regeneratorRuntime.async(function () {\n        function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsLoading(true);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(getWebdavFileList(account._id, currentFolder));\n            case 4:\n              result = _context2.sent;\n              handleFilterNodes(result.data);\n              _context2.next = 12;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatchToastMessage({\n                type: 'error',\n                message: _context2.t0\n              });\n              onClose();\n            case 12:\n              _context2.prev = 12;\n              setIsLoading(false);\n              _context2.next = 16;\n              return _regeneratorRuntime.awrap(showFilePreviews(account._id, (_result = result) === null || _result === void 0 ? void 0 : _result.data));\n            case 16:\n              nodesWithPreviews = _context2.sent;\n              if (Array.isArray(nodesWithPreviews) && nodesWithPreviews.length) {\n                handleFilterNodes(nodesWithPreviews);\n              }\n              return _context2.finish(12);\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n        return _callee2$;\n      }(), null, null, [[1, 8, 12, 19]], Promise);\n    }\n    return _callee2;\n  }(), [account._id, currentFolder, dispatchToastMessage, getWebdavFileList, onClose, showFilePreviews, handleFilterNodes]);\n  var handleBreadcrumb = function (e) {\n    var index = e.currentTarget.dataset.index;\n    var parentFolders = currentFolder.split('/').filter(function (s) {\n      return s;\n    });\n    // determine parent directory to go to\n    var targetFolder = '/';\n    for (var i = 0; i <= Number(index); i++) {\n      targetFolder += parentFolders[i];\n      targetFolder += '/';\n    }\n    setCurrentFolder(targetFolder);\n  };\n  var handleBack = function () {\n    var newCurrentFolder = currentFolder;\n    // determine parent directory to go back\n    var parentFolder = '/';\n    if (newCurrentFolder && newCurrentFolder !== '/') {\n      if (newCurrentFolder[newCurrentFolder.length - 1] === '/') {\n        newCurrentFolder = newCurrentFolder.slice(0, -1);\n      }\n      parentFolder = newCurrentFolder.substr(0, newCurrentFolder.lastIndexOf('/') + 1);\n    }\n    setCurrentFolder(parentFolder);\n  };\n  var handleNodeClick = function (webdavNode) {\n    if (webdavNode.type === 'directory') {\n      return setCurrentFolder(webdavNode.filename);\n    }\n    return handleUpload(webdavNode);\n  };\n  var handleUpload = function () {\n    function _callee4(webdavNode) {\n      var uploadFile, _await$getFileFromWeb, data, blob, file;\n      return _regeneratorRuntime.async(function () {\n        function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsLoading(true);\n              uploadFile = function () {\n                function _callee3(file, description) {\n                  return _regeneratorRuntime.async(function () {\n                    function _callee3$(_context3) {\n                      while (1) switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.prev = 0;\n                          _context3.next = 3;\n                          return _regeneratorRuntime.awrap(onUpload === null || onUpload === void 0 ? void 0 : onUpload(file, description));\n                        case 3:\n                          _context3.next = 8;\n                          break;\n                        case 5:\n                          _context3.prev = 5;\n                          _context3.t0 = _context3[\"catch\"](0);\n                          return _context3.abrupt(\"return\", dispatchToastMessage({\n                            type: 'error',\n                            message: _context3.t0\n                          }));\n                        case 8:\n                          _context3.prev = 8;\n                          setIsLoading(false);\n                          onClose();\n                          return _context3.finish(8);\n                        case 12:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                    return _callee3$;\n                  }(), null, null, [[0, 5, 8, 12]], Promise);\n                }\n                return _callee3;\n              }();\n              _context4.prev = 2;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(getFileFromWebdav(account._id, webdavNode));\n            case 5:\n              _await$getFileFromWeb = _context4.sent;\n              data = _await$getFileFromWeb.data;\n              blob = new Blob([data]);\n              file = new File([blob], webdavNode.basename, {\n                type: webdavNode.mime\n              });\n              setModal( /*#__PURE__*/React.createElement(FileUploadModal, {\n                fileName: webdavNode.basename,\n                onSubmit: function (_, description) {\n                  return uploadFile(file, description);\n                },\n                file: file,\n                onClose: function () {\n                  return setModal(null);\n                },\n                invalidContentType: Boolean(file.type && !fileUploadIsValidContentType(file.type))\n              }));\n              _context4.next = 15;\n              break;\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](2);\n              return _context4.abrupt(\"return\", dispatchToastMessage({\n                type: 'error',\n                message: _context4.t0\n              }));\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n        return _callee4$;\n      }(), null, null, [[2, 12]], Promise);\n    }\n    return _callee4;\n  }();\n  useEffect(function () {\n    handleGetWebdavFileList();\n  }, [handleGetWebdavFileList]);\n  useEffect(function () {\n    setParentFolders((currentFolder === null || currentFolder === void 0 ? void 0 : currentFolder.split('/').filter(function (s) {\n      return s;\n    })) || []);\n  }, [currentFolder]);\n  var options = [['name', 'Name'], ['size', 'Size'], ['dataModified', 'Data Modified']];\n  var handleSort = function (sortBy, sortDirection) {\n    setSort(sortBy);\n    var sortedNodes = sortWebdavNodes(webdavNodes, sortBy, sortDirection);\n    return setWebdavNodes(sortedNodes);\n  };\n  return /*#__PURE__*/React.createElement(Modal, null, /*#__PURE__*/React.createElement(Modal.Header, null, /*#__PURE__*/React.createElement(Modal.Title, null, t('Upload_From', {\n    name: account.name\n  })), /*#__PURE__*/React.createElement(Modal.Close, {\n    title: t('Close'),\n    onClick: onClose\n  })), /*#__PURE__*/React.createElement(Modal.Content, null, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  }, /*#__PURE__*/React.createElement(FilePickerBreadcrumbs, {\n    parentFolders: parentFolders,\n    handleBreadcrumb: handleBreadcrumb,\n    handleBack: handleBack\n  }), /*#__PURE__*/React.createElement(Box, null, typeView === 'list' && /*#__PURE__*/React.createElement(IconButton, {\n    icon: \"squares\",\n    small: true,\n    title: t('Grid_view'),\n    onClick: function () {\n      return setTypeView('grid');\n    }\n  }), typeView === 'grid' && /*#__PURE__*/React.createElement(IconButton, {\n    icon: \"th-list\",\n    small: true,\n    title: t('List_view'),\n    onClick: function () {\n      return setTypeView('list');\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, /*#__PURE__*/React.createElement(FilterByText, {\n    onChange: setFilterText\n  }, typeView === 'grid' && /*#__PURE__*/React.createElement(Select, {\n    value: sortBy,\n    onChange: function (value) {\n      return handleSort(value);\n    },\n    options: options\n  }))), typeView === 'list' && /*#__PURE__*/React.createElement(WebdavFilePickerTable, {\n    webdavNodes: webdavNodes,\n    sortBy: sortBy,\n    sortDirection: sortDirection,\n    onSort: handleSort,\n    onNodeClick: handleNodeClick,\n    isLoading: isLoading\n  }), typeView === 'grid' && /*#__PURE__*/React.createElement(WebdavFilePickerGrid, {\n    webdavNodes: webdavNodes,\n    onNodeClick: handleNodeClick,\n    isLoading: isLoading\n  })), /*#__PURE__*/React.createElement(Modal.Footer, null));\n};\nmodule.exportDefault(WebdavFilePickerModal);","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_slicedToArray","Modal","Box","IconButton","Select","useMutableCallback","useDebouncedValue","useMethod","useToastMessageDispatch","useTranslation","useSetModal","React","useState","useEffect","useCallback","fileUploadIsValidContentType","FilterByText","useSort","FileUploadModal","FilePickerBreadcrumbs","WebdavFilePickerGrid","WebdavFilePickerTable","sortWebdavNodes","WebdavFilePickerModal","_ref","onUpload","onClose","account","t","setModal","getWebdavFilePreview","getWebdavFileList","getFileFromWebdav","dispatchToastMessage","_useState","_useState2","typeView","setTypeView","_useSort","sortBy","sortDirection","setSort","_useState3","_useState4","currentFolder","setCurrentFolder","_useState5","_useState6","parentFolders","setParentFolders","_useState7","_useState8","webdavNodes","setWebdavNodes","_useState9","_useState10","filterText","setFilterText","debouncedFilter","_useState11","_useState12","isLoading","setIsLoading","showFilePreviews","_callee","accountId","nodes","promises","async","_callee$","_context","prev","next","Array","isArray","length","abrupt","map","node","index","type","filename","then","res","data","blob","Blob","imgURL","URL","createObjectURL","preview","catch","e","filter","Boolean","Promise","all","stop","handleFilterNodes","regex","RegExp","filteredNodes","_ref2","basename","match","handleGetWebdavFileList","_callee2","result","_result","nodesWithPreviews","_callee2$","_context2","awrap","_id","sent","t0","message","finish","handleBreadcrumb","currentTarget","dataset","split","s","targetFolder","i","Number","handleBack","newCurrentFolder","parentFolder","slice","substr","lastIndexOf","handleNodeClick","webdavNode","handleUpload","_callee4","uploadFile","_await$getFileFromWeb","file","_callee4$","_context4","_callee3","description","_callee3$","_context3","File","mime","createElement","fileName","onSubmit","_","invalidContentType","options","handleSort","sortedNodes","Header","Title","name","Close","title","onClick","Content","display","justifyContent","icon","small","flexDirection","onChange","value","onSort","onNodeClick","Footer","exportDefault"],"sources":["client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerModal.tsx"],"sourcesContent":["import type { IWebdavNode, IWebdavAccountIntegration } from '@rocket.chat/core-typings';\nimport type { SelectOption } from '@rocket.chat/fuselage';\nimport { Modal, Box, IconButton, Select } from '@rocket.chat/fuselage';\nimport { useMutableCallback, useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport { useMethod, useToastMessageDispatch, useTranslation, useSetModal } from '@rocket.chat/ui-contexts';\nimport type { ReactElement, MouseEvent } from 'react';\nimport React, { useState, useEffect, useCallback } from 'react';\n\nimport { fileUploadIsValidContentType } from '../../../../../app/utils/client';\nimport FilterByText from '../../../../components/FilterByText';\nimport { useSort } from '../../../../components/GenericTable/hooks/useSort';\nimport FileUploadModal from '../../modals/FileUploadModal';\nimport FilePickerBreadcrumbs from './FilePickerBreadcrumbs';\nimport WebdavFilePickerGrid from './WebdavFilePickerGrid';\nimport WebdavFilePickerTable from './WebdavFilePickerTable';\nimport { sortWebdavNodes } from './lib/sortWebdavNodes';\n\nexport type WebdavSortOptions = 'name' | 'size' | 'dataModified';\n\ntype WebdavFilePickerModalProps = {\n\tonUpload: (file: File, description?: string) => Promise<void>;\n\tonClose: () => void;\n\taccount: IWebdavAccountIntegration;\n};\n\nconst WebdavFilePickerModal = ({ onUpload, onClose, account }: WebdavFilePickerModalProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\tconst getWebdavFilePreview = useMethod('getWebdavFilePreview');\n\tconst getWebdavFileList = useMethod('getWebdavFileList');\n\tconst getFileFromWebdav = useMethod('getFileFromWebdav');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst [typeView, setTypeView] = useState<'list' | 'grid'>('list');\n\tconst { sortBy, sortDirection, setSort } = useSort<WebdavSortOptions>('name');\n\tconst [currentFolder, setCurrentFolder] = useState('/');\n\tconst [parentFolders, setParentFolders] = useState<string[]>([]);\n\tconst [webdavNodes, setWebdavNodes] = useState<IWebdavNode[]>([]);\n\tconst [filterText, setFilterText] = useState('');\n\tconst debouncedFilter = useDebouncedValue(filterText, 500);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst showFilePreviews = useMutableCallback(async (accountId, nodes) => {\n\t\tif (!Array.isArray(nodes) || !nodes.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst promises = nodes\n\t\t\t.map((node, index) => {\n\t\t\t\tif (node.type !== 'file') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn getWebdavFilePreview(accountId, node.filename)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (!res?.data) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst blob = new Blob([res?.data], { type: 'image/png' });\n\t\t\t\t\t\tconst imgURL = URL.createObjectURL(blob);\n\t\t\t\t\t\tnodes[index].preview = imgURL;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((e) => e);\n\t\t\t})\n\t\t\t.filter(Boolean);\n\n\t\treturn Promise.all(promises)\n\t\t\t.then(() => nodes)\n\t\t\t.catch((e) => e);\n\t});\n\n\tconst handleFilterNodes = useCallback(\n\t\t(webdavNodes: IWebdavNode[]): void => {\n\t\t\tconst regex = new RegExp(`\\\\b${debouncedFilter}`, 'i');\n\t\t\tconst filteredNodes = webdavNodes.filter(({ basename }) => basename.match(regex));\n\t\t\treturn setWebdavNodes(filteredNodes);\n\t\t},\n\t\t[debouncedFilter],\n\t);\n\n\tconst handleGetWebdavFileList = useCallback(async (): Promise<void> => {\n\t\tsetIsLoading(true);\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = await getWebdavFileList(account._id, currentFolder);\n\t\t\thandleFilterNodes(result.data);\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\tonClose();\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t\tconst nodesWithPreviews = await showFilePreviews(account._id, result?.data);\n\t\t\tif (Array.isArray(nodesWithPreviews) && nodesWithPreviews.length) {\n\t\t\t\thandleFilterNodes(nodesWithPreviews);\n\t\t\t}\n\t\t}\n\t}, [account._id, currentFolder, dispatchToastMessage, getWebdavFileList, onClose, showFilePreviews, handleFilterNodes]);\n\n\tconst handleBreadcrumb = (e: MouseEvent<HTMLElement>): void => {\n\t\tconst { index } = e.currentTarget.dataset;\n\t\tconst parentFolders = currentFolder.split('/').filter((s) => s);\n\n\t\t// determine parent directory to go to\n\t\tlet targetFolder = '/';\n\t\tfor (let i = 0; i <= Number(index); i++) {\n\t\t\ttargetFolder += parentFolders[i];\n\t\t\ttargetFolder += '/';\n\t\t}\n\t\tsetCurrentFolder(targetFolder);\n\t};\n\n\tconst handleBack = (): void => {\n\t\tlet newCurrentFolder = currentFolder;\n\t\t// determine parent directory to go back\n\t\tlet parentFolder = '/';\n\t\tif (newCurrentFolder && newCurrentFolder !== '/') {\n\t\t\tif (newCurrentFolder[newCurrentFolder.length - 1] === '/') {\n\t\t\t\tnewCurrentFolder = newCurrentFolder.slice(0, -1);\n\t\t\t}\n\t\t\tparentFolder = newCurrentFolder.substr(0, newCurrentFolder.lastIndexOf('/') + 1);\n\t\t}\n\t\tsetCurrentFolder(parentFolder);\n\t};\n\n\tconst handleNodeClick = (webdavNode: IWebdavNode): void | Promise<void> => {\n\t\tif (webdavNode.type === 'directory') {\n\t\t\treturn setCurrentFolder(webdavNode.filename);\n\t\t}\n\n\t\treturn handleUpload(webdavNode);\n\t};\n\n\tconst handleUpload = async (webdavNode: IWebdavNode): Promise<void> => {\n\t\tsetIsLoading(true);\n\n\t\tconst uploadFile = async (file: File, description?: string): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait onUpload?.(file, description);\n\t\t\t} catch (error) {\n\t\t\t\treturn dispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tonClose();\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\tconst { data } = await getFileFromWebdav(account._id, webdavNode);\n\t\t\tconst blob = new Blob([data]);\n\t\t\tconst file = new File([blob], webdavNode.basename, { type: webdavNode.mime });\n\n\t\t\tsetModal(\n\t\t\t\t<FileUploadModal\n\t\t\t\t\tfileName={webdavNode.basename}\n\t\t\t\t\tonSubmit={(_, description): Promise<void> => uploadFile(file, description)}\n\t\t\t\t\tfile={file}\n\t\t\t\t\tonClose={(): void => setModal(null)}\n\t\t\t\t\tinvalidContentType={Boolean(file.type && !fileUploadIsValidContentType(file.type))}\n\t\t\t\t/>,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\treturn dispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\thandleGetWebdavFileList();\n\t}, [handleGetWebdavFileList]);\n\n\tuseEffect(() => {\n\t\tsetParentFolders(currentFolder?.split('/').filter((s) => s) || []);\n\t}, [currentFolder]);\n\n\tconst options: SelectOption[] = [\n\t\t['name', 'Name'],\n\t\t['size', 'Size'],\n\t\t['dataModified', 'Data Modified'],\n\t];\n\n\tconst handleSort = (sortBy: WebdavSortOptions, sortDirection?: 'asc' | 'desc'): void => {\n\t\tsetSort(sortBy);\n\t\tconst sortedNodes = sortWebdavNodes(webdavNodes, sortBy, sortDirection);\n\t\treturn setWebdavNodes(sortedNodes);\n\t};\n\n\treturn (\n\t\t<Modal>\n\t\t\t<Modal.Header>\n\t\t\t\t<Modal.Title>{t('Upload_From', { name: account.name })}</Modal.Title>\n\t\t\t\t<Modal.Close title={t('Close')} onClick={onClose} />\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Content>\n\t\t\t\t<Box display='flex' justifyContent='space-between'>\n\t\t\t\t\t<FilePickerBreadcrumbs parentFolders={parentFolders} handleBreadcrumb={handleBreadcrumb} handleBack={handleBack} />\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t{typeView === 'list' && <IconButton icon='squares' small title={t('Grid_view')} onClick={(): void => setTypeView('grid')} />}\n\t\t\t\t\t\t{typeView === 'grid' && <IconButton icon='th-list' small title={t('List_view')} onClick={(): void => setTypeView('list')} />}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t\t<Box display='flex' flexDirection='column'>\n\t\t\t\t\t<FilterByText onChange={setFilterText}>\n\t\t\t\t\t\t{typeView === 'grid' && (\n\t\t\t\t\t\t\t<Select value={sortBy} onChange={(value): void => handleSort(value as WebdavSortOptions)} options={options} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</FilterByText>\n\t\t\t\t</Box>\n\t\t\t\t{typeView === 'list' && (\n\t\t\t\t\t<WebdavFilePickerTable\n\t\t\t\t\t\twebdavNodes={webdavNodes}\n\t\t\t\t\t\tsortBy={sortBy}\n\t\t\t\t\t\tsortDirection={sortDirection}\n\t\t\t\t\t\tonSort={handleSort}\n\t\t\t\t\t\tonNodeClick={handleNodeClick}\n\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{typeView === 'grid' && <WebdavFilePickerGrid webdavNodes={webdavNodes} onNodeClick={handleNodeClick} isLoading={isLoading} />}\n\t\t\t</Modal.Content>\n\t\t\t<Modal.Footer />\n\t\t</Modal>\n\t);\n};\n\nexport default WebdavFilePickerModal;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f228030bb2e3d8bc3d549b6b42d0edc24e78e36c"}
