{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/v1/config.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/v1/config.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/v1/config.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/v1/config.ts","sourceRoot":"","sources":["app/livechat/server/api/v1/config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,yBAAyB,EAAE,MAAM,2BAA2B,CAAC;AACtE,OAAO,GAAG,MAAM,SAAS,CAAC;AAE1B,OAAO,EAAE,GAAG,EAAE,MAAM,wBAAwB,CAAC;AAC7C,OAAO,EAAE,QAAQ,IAAI,cAAc,EAAE,MAAM,6BAA6B,CAAC;AACzE,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AACnD,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,kBAAkB,EAAE,SAAS,EAAE,wBAAwB,EAAE,MAAM,iBAAiB,CAAC;AAElH,MAAM,cAAc,GAAG,GAAG,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;AAExH,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,iBAAiB,EACjB,EAAE,cAAc,EAAE,yBAAyB,EAAE,EAC7C;IACC,KAAK,CAAC,GAAG;QACR,MAAM,OAAO,GAAG,cAAc,CAAC,GAAG,CAAU,kBAAkB,CAAC,CAAC;QAEhE,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QACvD,CAAC;QAED,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAE7D,MAAM,MAAM,GAAG,MAAM,cAAc,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC;QAEtD,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACjD,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAEnE,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACjE,MAAM,KAAK,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAErF,MAAM,KAAK,GAAG,MAAM,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC7C,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,MAAM,EAAE,EAAE,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG,CAAC,KAAK,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE;SACxH,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC","sourcesContent":["import { isGETLivechatConfigParams } from '@rocket.chat/rest-typings';\nimport mem from 'memoize';\n\nimport { API } from '../../../../api/server';\nimport { settings as serverSettings } from '../../../../settings/server';\nimport { Livechat } from '../../lib/LivechatTyped';\nimport { settings, findOpenRoom, getExtraConfigInfo, findAgent, findGuestWithoutActivity } from '../lib/livechat';\n\nconst cachedSettings = mem(settings, { maxAge: process.env.TEST_MODE === 'true' ? 1 : 1000, cacheKey: JSON.stringify });\n\nAPI.v1.addRoute(\n\t'livechat/config',\n\t{ validateParams: isGETLivechatConfigParams },\n\t{\n\t\tasync get() {\n\t\t\tconst enabled = serverSettings.get<boolean>('Livechat_enabled');\n\n\t\t\tif (!enabled) {\n\t\t\t\treturn API.v1.success({ config: { enabled: false } });\n\t\t\t}\n\n\t\t\tconst { token, department, businessUnit } = this.queryParams;\n\n\t\t\tconst config = await cachedSettings({ businessUnit });\n\n\t\t\tconst status = await Livechat.online(department);\n\t\t\tconst guest = token ? await findGuestWithoutActivity(token) : null;\n\n\t\t\tconst room = guest ? await findOpenRoom(guest.token) : undefined;\n\t\t\tconst agent = guest && room && room.servedBy && (await findAgent(room.servedBy._id));\n\n\t\t\tconst extra = await getExtraConfigInfo(room);\n\t\t\treturn API.v1.success({\n\t\t\t\tconfig: { ...config, online: status, ...extra, ...(guest && { guest }), ...(room && { room }), ...(agent && { agent }) },\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/v1/config.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/v1/config.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/v1/config.ts","sourceRoot":"","sources":["app/livechat/server/api/v1/config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,yBAAyB,EAAE,MAAM,2BAA2B,CAAC;AACtE,OAAO,GAAG,MAAM,SAAS,CAAC;AAE1B,OAAO,EAAE,GAAG,EAAE,MAAM,wBAAwB,CAAC;AAC7C,OAAO,EAAE,QAAQ,IAAI,cAAc,EAAE,MAAM,6BAA6B,CAAC;AACzE,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AACnD,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,kBAAkB,EAAE,SAAS,EAAE,wBAAwB,EAAE,MAAM,iBAAiB,CAAC;AAElH,MAAM,cAAc,GAAG,GAAG,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;AAExH,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,iBAAiB,EACjB,EAAE,cAAc,EAAE,yBAAyB,EAAE,EAC7C;IACC,KAAK,CAAC,GAAG;QACR,MAAM,OAAO,GAAG,cAAc,CAAC,GAAG,CAAU,kBAAkB,CAAC,CAAC;QAEhE,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QACvD,CAAC;QAED,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAE7D,MAAM,MAAM,GAAG,MAAM,cAAc,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC;QAEtD,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACjD,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,wBAAwB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAEnE,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACjE,MAAM,KAAK,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAErF,MAAM,KAAK,GAAG,MAAM,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC7C,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,MAAM,EAAE,EAAE,GAAG,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG,CAAC,KAAK,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE;SACxH,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC","sourcesContent":["import { isGETLivechatConfigParams } from '@rocket.chat/rest-typings';\nimport mem from 'memoize';\n\nimport { API } from '../../../../api/server';\nimport { settings as serverSettings } from '../../../../settings/server';\nimport { Livechat } from '../../lib/LivechatTyped';\nimport { settings, findOpenRoom, getExtraConfigInfo, findAgent, findGuestWithoutActivity } from '../lib/livechat';\n\nconst cachedSettings = mem(settings, { maxAge: process.env.TEST_MODE === 'true' ? 1 : 1000, cacheKey: JSON.stringify });\n\nAPI.v1.addRoute(\n\t'livechat/config',\n\t{ validateParams: isGETLivechatConfigParams },\n\t{\n\t\tasync get() {\n\t\t\tconst enabled = serverSettings.get<boolean>('Livechat_enabled');\n\n\t\t\tif (!enabled) {\n\t\t\t\treturn API.v1.success({ config: { enabled: false } });\n\t\t\t}\n\n\t\t\tconst { token, department, businessUnit } = this.queryParams;\n\n\t\t\tconst config = await cachedSettings({ businessUnit });\n\n\t\t\tconst status = await Livechat.online(department);\n\t\t\tconst guest = token ? await findGuestWithoutActivity(token) : null;\n\n\t\t\tconst room = guest ? await findOpenRoom(guest.token) : undefined;\n\t\t\tconst agent = guest && room && room.servedBy && (await findAgent(room.servedBy._id));\n\n\t\t\tconst extra = await getExtraConfigInfo(room);\n\t\t\treturn API.v1.success({\n\t\t\t\tconfig: { ...config, online: status, ...extra, ...(guest && { guest }), ...(room && { room }), ...(agent && { agent }) },\n\t\t\t});\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let isGETLivechatConfigParams;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isGETLivechatConfigParams(v) {\n        isGETLivechatConfigParams = v;\n      }\n    }, 0);\n    let mem;\n    module.link(\"memoize\", {\n      default(v) {\n        mem = v;\n      }\n    }, 1);\n    let API;\n    module.link(\"../../../../api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 2);\n    let serverSettings;\n    module.link(\"../../../../settings/server\", {\n      settings(v) {\n        serverSettings = v;\n      }\n    }, 3);\n    let Livechat;\n    module.link(\"../../lib/LivechatTyped\", {\n      Livechat(v) {\n        Livechat = v;\n      }\n    }, 4);\n    let settings, findOpenRoom, getExtraConfigInfo, findAgent, findGuestWithoutActivity;\n    module.link(\"../lib/livechat\", {\n      settings(v) {\n        settings = v;\n      },\n      findOpenRoom(v) {\n        findOpenRoom = v;\n      },\n      getExtraConfigInfo(v) {\n        getExtraConfigInfo = v;\n      },\n      findAgent(v) {\n        findAgent = v;\n      },\n      findGuestWithoutActivity(v) {\n        findGuestWithoutActivity = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const cachedSettings = mem(settings, {\n      maxAge: process.env.TEST_MODE === 'true' ? 1 : 1000,\n      cacheKey: JSON.stringify\n    });\n    API.v1.addRoute('livechat/config', {\n      validateParams: isGETLivechatConfigParams\n    }, {\n      async get() {\n        const enabled = serverSettings.get('Livechat_enabled');\n        if (!enabled) {\n          return API.v1.success({\n            config: {\n              enabled: false\n            }\n          });\n        }\n        const {\n          token,\n          department,\n          businessUnit\n        } = this.queryParams;\n        const config = await cachedSettings({\n          businessUnit\n        });\n        const status = await Livechat.online(department);\n        const guest = token ? await findGuestWithoutActivity(token) : null;\n        const room = guest ? await findOpenRoom(guest.token) : undefined;\n        const agent = guest && room && room.servedBy && (await findAgent(room.servedBy._id));\n        const extra = await getExtraConfigInfo(room);\n        return API.v1.success({\n          config: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, config), {}, {\n            online: status\n          }, extra), guest && {\n            guest\n          }), room && {\n            room\n          }), agent && {\n            agent\n          })\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","isGETLivechatConfigParams","mem","API","serverSettings","settings","Livechat","findOpenRoom","getExtraConfigInfo","findAgent","findGuestWithoutActivity","__reifyWaitForDeps__","cachedSettings","maxAge","process","env","TEST_MODE","cacheKey","JSON","stringify","v1","addRoute","validateParams","get","enabled","success","config","token","department","businessUnit","queryParams","status","online","guest","room","undefined","agent","servedBy","_id","extra","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/api/v1/config.ts"],"sourcesContent":["import { isGETLivechatConfigParams } from '@rocket.chat/rest-typings';\nimport mem from 'memoize';\n\nimport { API } from '../../../../api/server';\nimport { settings as serverSettings } from '../../../../settings/server';\nimport { Livechat } from '../../lib/LivechatTyped';\nimport { settings, findOpenRoom, getExtraConfigInfo, findAgent, findGuestWithoutActivity } from '../lib/livechat';\n\nconst cachedSettings = mem(settings, { maxAge: process.env.TEST_MODE === 'true' ? 1 : 1000, cacheKey: JSON.stringify });\n\nAPI.v1.addRoute(\n\t'livechat/config',\n\t{ validateParams: isGETLivechatConfigParams },\n\t{\n\t\tasync get() {\n\t\t\tconst enabled = serverSettings.get<boolean>('Livechat_enabled');\n\n\t\t\tif (!enabled) {\n\t\t\t\treturn API.v1.success({ config: { enabled: false } });\n\t\t\t}\n\n\t\t\tconst { token, department, businessUnit } = this.queryParams;\n\n\t\t\tconst config = await cachedSettings({ businessUnit });\n\n\t\t\tconst status = await Livechat.online(department);\n\t\t\tconst guest = token ? await findGuestWithoutActivity(token) : null;\n\n\t\t\tconst room = guest ? await findOpenRoom(guest.token) : undefined;\n\t\t\tconst agent = guest && room && room.servedBy && (await findAgent(room.servedBy._id));\n\n\t\t\tconst extra = await getExtraConfigInfo(room);\n\t\t\treturn API.v1.success({\n\t\t\t\tconfig: { ...config, online: status, ...extra, ...(guest && { guest }), ...(room && { room }), ...(agent && { agent }) },\n\t\t\t});\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"80a5027b1b0cbfa87c7488ce50b694d66764f805"}
