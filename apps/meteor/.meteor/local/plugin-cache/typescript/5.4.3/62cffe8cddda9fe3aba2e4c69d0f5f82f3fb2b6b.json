{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/presence.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/presence.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/presence.ts","inputSourceMap":{"version":3,"file":"client/lib/presence.ts","sourceRoot":"","sources":["client/lib/presence.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { UserStatus } from '@rocket.chat/core-typings';\nimport type { EventHandlerOf } from '@rocket.chat/emitter';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\n\ntype InternalEvents = {\n\tremove: IUser['_id'];\n\treset: undefined;\n\trestart: undefined;\n};\n\ntype ExternalEvents = {\n\t[key: string]: UserPresence | undefined;\n};\n\ntype Events = InternalEvents & ExternalEvents;\n\nconst emitter = new Emitter<Events>();\n\nconst store = new Map<string, UserPresence>();\n\nexport type UserPresence = Readonly<\n\tPartial<Pick<IUser, 'name' | 'status' | 'utcOffset' | 'statusText' | 'avatarETag' | 'roles' | 'username'>> & Required<Pick<IUser, '_id'>>\n>;\n\nconst isUid = (eventType: keyof Events): eventType is UserPresence['_id'] =>\n\tBoolean(eventType) && typeof eventType === 'string' && !['reset', 'restart', 'remove'].includes(eventType);\n\nconst uids = new Set<UserPresence['_id']>();\n\nconst update: EventHandlerOf<ExternalEvents, string> = (update) => {\n\tif (update?._id) {\n\t\tstore.set(update._id, { ...store.get(update._id), ...update, ...(status === 'disabled' && { status: UserStatus.DISABLED }) });\n\t\tuids.delete(update._id);\n\t}\n};\n\nconst notify = (presence: UserPresence): void => {\n\tif (presence._id) {\n\t\tupdate(presence);\n\t\temitter.emit(presence._id, store.get(presence._id));\n\t}\n};\n\nconst getPresence = ((): ((uid: UserPresence['_id']) => void) => {\n\tlet timer: ReturnType<typeof setTimeout>;\n\n\tconst deletedUids = new Set<UserPresence['_id']>();\n\n\tconst fetch = (delay = 500): void => {\n\t\ttimer && clearTimeout(timer);\n\t\ttimer = setTimeout(async () => {\n\t\t\tconst currentUids = new Set(uids);\n\t\t\tuids.clear();\n\n\t\t\tconst ids = Array.from(currentUids);\n\t\t\tconst removed = Array.from(deletedUids);\n\n\t\t\tMeteor.subscribe('stream-user-presence', '', {\n\t\t\t\t...(ids.length > 0 && { added: Array.from(currentUids) }),\n\t\t\t\t...(removed.length && { removed: Array.from(deletedUids) }),\n\t\t\t});\n\n\t\t\tdeletedUids.clear();\n\n\t\t\tif (ids.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst params = {\n\t\t\t\t\tids: [...currentUids],\n\t\t\t\t};\n\n\t\t\t\tconst { users } = await sdk.rest.get('/v1/users.presence', params);\n\n\t\t\t\tusers.forEach((user) => {\n\t\t\t\t\tif (!store.has(user._id)) {\n\t\t\t\t\t\tnotify(user);\n\t\t\t\t\t}\n\t\t\t\t\tcurrentUids.delete(user._id);\n\t\t\t\t});\n\n\t\t\t\tcurrentUids.forEach((uid) => {\n\t\t\t\t\tnotify({ _id: uid, status: UserStatus.OFFLINE });\n\t\t\t\t});\n\n\t\t\t\tcurrentUids.clear();\n\t\t\t} catch {\n\t\t\t\tfetch(delay + delay);\n\t\t\t} finally {\n\t\t\t\tcurrentUids.forEach((item) => uids.add(item));\n\t\t\t}\n\t\t}, delay);\n\t};\n\n\tconst get = (uid: UserPresence['_id']): void => {\n\t\tuids.add(uid);\n\t\tfetch();\n\t};\n\tconst stop = (uid: UserPresence['_id']): void => {\n\t\tdeletedUids.add(uid);\n\t\tfetch();\n\t};\n\temitter.on('remove', (uid) => {\n\t\tif (emitter.has(uid)) {\n\t\t\treturn;\n\t\t}\n\n\t\tstore.delete(uid);\n\t\tstop(uid);\n\t});\n\n\temitter.on('reset', () => {\n\t\temitter\n\t\t\t.events()\n\t\t\t.filter(isUid)\n\t\t\t.forEach((uid) => {\n\t\t\t\temitter.emit(uid, undefined);\n\t\t\t});\n\t\temitter.once('restart', () => {\n\t\t\temitter.events().filter(isUid).forEach(get);\n\t\t});\n\t});\n\n\treturn get;\n})();\n\nconst listen = (uid: UserPresence['_id'], handler: EventHandlerOf<ExternalEvents, UserPresence['_id']> | (() => void)): void => {\n\tif (!uid) {\n\t\treturn;\n\t}\n\temitter.on(uid, handler);\n\n\tconst user = store.has(uid) && store.get(uid);\n\tif (user) {\n\t\treturn;\n\t}\n\n\tgetPresence(uid);\n};\n\nconst stop = (uid: UserPresence['_id'], handler: EventHandlerOf<ExternalEvents, UserPresence['_id']> | (() => void)): void => {\n\temitter.off(uid, handler);\n\tsetTimeout(() => {\n\t\temitter.emit('remove', uid);\n\t}, 5000);\n};\n\nconst reset = (): void => {\n\tstore.clear();\n\temitter.emit('reset');\n};\n\nconst restart = (): void => {\n\temitter.emit('restart');\n};\n\nconst get = async (uid: UserPresence['_id']): Promise<UserPresence | undefined> =>\n\tnew Promise((resolve) => {\n\t\tconst user = store.has(uid) && store.get(uid);\n\t\tif (user) {\n\t\t\treturn resolve(user);\n\t\t}\n\n\t\tconst callback: EventHandlerOf<ExternalEvents, UserPresence['_id']> = (args): void => {\n\t\t\tresolve(args);\n\t\t\tstop(uid, callback);\n\t\t};\n\t\tlisten(uid, callback);\n\t});\n\nlet status = 'enabled';\n\nconst setStatus = (newStatus: 'enabled' | 'disabled'): void => {\n\tstatus = newStatus;\n\treset();\n};\n\nexport const Presence = {\n\tsetStatus,\n\tstatus,\n\tlisten,\n\tstop,\n\treset,\n\trestart,\n\tnotify,\n\tstore,\n\tget,\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/presence.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/presence.ts","inputSourceMap":{"version":3,"file":"client/lib/presence.ts","sourceRoot":"","sources":["client/lib/presence.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { UserStatus } from '@rocket.chat/core-typings';\nimport type { EventHandlerOf } from '@rocket.chat/emitter';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\n\ntype InternalEvents = {\n\tremove: IUser['_id'];\n\treset: undefined;\n\trestart: undefined;\n};\n\ntype ExternalEvents = {\n\t[key: string]: UserPresence | undefined;\n};\n\ntype Events = InternalEvents & ExternalEvents;\n\nconst emitter = new Emitter<Events>();\n\nconst store = new Map<string, UserPresence>();\n\nexport type UserPresence = Readonly<\n\tPartial<Pick<IUser, 'name' | 'status' | 'utcOffset' | 'statusText' | 'avatarETag' | 'roles' | 'username'>> & Required<Pick<IUser, '_id'>>\n>;\n\nconst isUid = (eventType: keyof Events): eventType is UserPresence['_id'] =>\n\tBoolean(eventType) && typeof eventType === 'string' && !['reset', 'restart', 'remove'].includes(eventType);\n\nconst uids = new Set<UserPresence['_id']>();\n\nconst update: EventHandlerOf<ExternalEvents, string> = (update) => {\n\tif (update?._id) {\n\t\tstore.set(update._id, { ...store.get(update._id), ...update, ...(status === 'disabled' && { status: UserStatus.DISABLED }) });\n\t\tuids.delete(update._id);\n\t}\n};\n\nconst notify = (presence: UserPresence): void => {\n\tif (presence._id) {\n\t\tupdate(presence);\n\t\temitter.emit(presence._id, store.get(presence._id));\n\t}\n};\n\nconst getPresence = ((): ((uid: UserPresence['_id']) => void) => {\n\tlet timer: ReturnType<typeof setTimeout>;\n\n\tconst deletedUids = new Set<UserPresence['_id']>();\n\n\tconst fetch = (delay = 500): void => {\n\t\ttimer && clearTimeout(timer);\n\t\ttimer = setTimeout(async () => {\n\t\t\tconst currentUids = new Set(uids);\n\t\t\tuids.clear();\n\n\t\t\tconst ids = Array.from(currentUids);\n\t\t\tconst removed = Array.from(deletedUids);\n\n\t\t\tMeteor.subscribe('stream-user-presence', '', {\n\t\t\t\t...(ids.length > 0 && { added: Array.from(currentUids) }),\n\t\t\t\t...(removed.length && { removed: Array.from(deletedUids) }),\n\t\t\t});\n\n\t\t\tdeletedUids.clear();\n\n\t\t\tif (ids.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst params = {\n\t\t\t\t\tids: [...currentUids],\n\t\t\t\t};\n\n\t\t\t\tconst { users } = await sdk.rest.get('/v1/users.presence', params);\n\n\t\t\t\tusers.forEach((user) => {\n\t\t\t\t\tif (!store.has(user._id)) {\n\t\t\t\t\t\tnotify(user);\n\t\t\t\t\t}\n\t\t\t\t\tcurrentUids.delete(user._id);\n\t\t\t\t});\n\n\t\t\t\tcurrentUids.forEach((uid) => {\n\t\t\t\t\tnotify({ _id: uid, status: UserStatus.OFFLINE });\n\t\t\t\t});\n\n\t\t\t\tcurrentUids.clear();\n\t\t\t} catch {\n\t\t\t\tfetch(delay + delay);\n\t\t\t} finally {\n\t\t\t\tcurrentUids.forEach((item) => uids.add(item));\n\t\t\t}\n\t\t}, delay);\n\t};\n\n\tconst get = (uid: UserPresence['_id']): void => {\n\t\tuids.add(uid);\n\t\tfetch();\n\t};\n\tconst stop = (uid: UserPresence['_id']): void => {\n\t\tdeletedUids.add(uid);\n\t\tfetch();\n\t};\n\temitter.on('remove', (uid) => {\n\t\tif (emitter.has(uid)) {\n\t\t\treturn;\n\t\t}\n\n\t\tstore.delete(uid);\n\t\tstop(uid);\n\t});\n\n\temitter.on('reset', () => {\n\t\temitter\n\t\t\t.events()\n\t\t\t.filter(isUid)\n\t\t\t.forEach((uid) => {\n\t\t\t\temitter.emit(uid, undefined);\n\t\t\t});\n\t\temitter.once('restart', () => {\n\t\t\temitter.events().filter(isUid).forEach(get);\n\t\t});\n\t});\n\n\treturn get;\n})();\n\nconst listen = (uid: UserPresence['_id'], handler: EventHandlerOf<ExternalEvents, UserPresence['_id']> | (() => void)): void => {\n\tif (!uid) {\n\t\treturn;\n\t}\n\temitter.on(uid, handler);\n\n\tconst user = store.has(uid) && store.get(uid);\n\tif (user) {\n\t\treturn;\n\t}\n\n\tgetPresence(uid);\n};\n\nconst stop = (uid: UserPresence['_id'], handler: EventHandlerOf<ExternalEvents, UserPresence['_id']> | (() => void)): void => {\n\temitter.off(uid, handler);\n\tsetTimeout(() => {\n\t\temitter.emit('remove', uid);\n\t}, 5000);\n};\n\nconst reset = (): void => {\n\tstore.clear();\n\temitter.emit('reset');\n};\n\nconst restart = (): void => {\n\temitter.emit('restart');\n};\n\nconst get = async (uid: UserPresence['_id']): Promise<UserPresence | undefined> =>\n\tnew Promise((resolve) => {\n\t\tconst user = store.has(uid) && store.get(uid);\n\t\tif (user) {\n\t\t\treturn resolve(user);\n\t\t}\n\n\t\tconst callback: EventHandlerOf<ExternalEvents, UserPresence['_id']> = (args): void => {\n\t\t\tresolve(args);\n\t\t\tstop(uid, callback);\n\t\t};\n\t\tlisten(uid, callback);\n\t});\n\nlet status = 'enabled';\n\nconst setStatus = (newStatus: 'enabled' | 'disabled'): void => {\n\tstatus = newStatus;\n\treset();\n};\n\nexport const Presence = {\n\tsetStatus,\n\tstatus,\n\tlisten,\n\tstop,\n\treset,\n\trestart,\n\tnotify,\n\tstore,\n\tget,\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  Presence: () => Presence\n});\nlet UserStatus;\nmodule.link(\"@rocket.chat/core-typings\", {\n  UserStatus(v) {\n    UserStatus = v;\n  }\n}, 0);\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 2);\nlet sdk;\nmodule.link(\"../../app/utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 3);\nconst emitter = new Emitter();\nconst store = new Map();\nconst isUid = eventType => Boolean(eventType) && typeof eventType === 'string' && !['reset', 'restart', 'remove'].includes(eventType);\nconst uids = new Set();\nconst update = update => {\n  if (update !== null && update !== void 0 && update._id) {\n    store.set(update._id, _objectSpread(_objectSpread(_objectSpread({}, store.get(update._id)), update), status === 'disabled' && {\n      status: UserStatus.DISABLED\n    }));\n    uids.delete(update._id);\n  }\n};\nconst notify = presence => {\n  if (presence._id) {\n    update(presence);\n    emitter.emit(presence._id, store.get(presence._id));\n  }\n};\nconst getPresence = (() => {\n  let timer;\n  const deletedUids = new Set();\n  const fetch = function () {\n    let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;\n    timer && clearTimeout(timer);\n    timer = setTimeout(async () => {\n      const currentUids = new Set(uids);\n      uids.clear();\n      const ids = Array.from(currentUids);\n      const removed = Array.from(deletedUids);\n      Meteor.subscribe('stream-user-presence', '', _objectSpread(_objectSpread({}, ids.length > 0 && {\n        added: Array.from(currentUids)\n      }), removed.length && {\n        removed: Array.from(deletedUids)\n      }));\n      deletedUids.clear();\n      if (ids.length === 0) {\n        return;\n      }\n      try {\n        const params = {\n          ids: [...currentUids]\n        };\n        const {\n          users\n        } = await sdk.rest.get('/v1/users.presence', params);\n        users.forEach(user => {\n          if (!store.has(user._id)) {\n            notify(user);\n          }\n          currentUids.delete(user._id);\n        });\n        currentUids.forEach(uid => {\n          notify({\n            _id: uid,\n            status: UserStatus.OFFLINE\n          });\n        });\n        currentUids.clear();\n      } catch (_unused) {\n        fetch(delay + delay);\n      } finally {\n        currentUids.forEach(item => uids.add(item));\n      }\n    }, delay);\n  };\n  const get = uid => {\n    uids.add(uid);\n    fetch();\n  };\n  const stop = uid => {\n    deletedUids.add(uid);\n    fetch();\n  };\n  emitter.on('remove', uid => {\n    if (emitter.has(uid)) {\n      return;\n    }\n    store.delete(uid);\n    stop(uid);\n  });\n  emitter.on('reset', () => {\n    emitter.events().filter(isUid).forEach(uid => {\n      emitter.emit(uid, undefined);\n    });\n    emitter.once('restart', () => {\n      emitter.events().filter(isUid).forEach(get);\n    });\n  });\n  return get;\n})();\nconst listen = (uid, handler) => {\n  if (!uid) {\n    return;\n  }\n  emitter.on(uid, handler);\n  const user = store.has(uid) && store.get(uid);\n  if (user) {\n    return;\n  }\n  getPresence(uid);\n};\nconst stop = (uid, handler) => {\n  emitter.off(uid, handler);\n  setTimeout(() => {\n    emitter.emit('remove', uid);\n  }, 5000);\n};\nconst reset = () => {\n  store.clear();\n  emitter.emit('reset');\n};\nconst restart = () => {\n  emitter.emit('restart');\n};\nconst get = async uid => new Promise(resolve => {\n  const user = store.has(uid) && store.get(uid);\n  if (user) {\n    return resolve(user);\n  }\n  const callback = args => {\n    resolve(args);\n    stop(uid, callback);\n  };\n  listen(uid, callback);\n});\nlet status = 'enabled';\nconst setStatus = newStatus => {\n  status = newStatus;\n  reset();\n};\nconst Presence = {\n  setStatus,\n  status,\n  listen,\n  stop,\n  reset,\n  restart,\n  notify,\n  store,\n  get\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","Presence","UserStatus","Emitter","Meteor","sdk","emitter","store","Map","isUid","eventType","Boolean","includes","uids","Set","update","_id","set","get","status","DISABLED","delete","notify","presence","emit","getPresence","timer","deletedUids","fetch","delay","arguments","length","undefined","clearTimeout","setTimeout","currentUids","clear","ids","Array","from","removed","subscribe","added","params","users","rest","forEach","user","has","uid","OFFLINE","_unused","item","add","stop","on","events","filter","once","listen","handler","off","reset","restart","Promise","resolve","callback","args","setStatus","newStatus"],"sources":["client/lib/presence.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { UserStatus } from '@rocket.chat/core-typings';\nimport type { EventHandlerOf } from '@rocket.chat/emitter';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\n\ntype InternalEvents = {\n\tremove: IUser['_id'];\n\treset: undefined;\n\trestart: undefined;\n};\n\ntype ExternalEvents = {\n\t[key: string]: UserPresence | undefined;\n};\n\ntype Events = InternalEvents & ExternalEvents;\n\nconst emitter = new Emitter<Events>();\n\nconst store = new Map<string, UserPresence>();\n\nexport type UserPresence = Readonly<\n\tPartial<Pick<IUser, 'name' | 'status' | 'utcOffset' | 'statusText' | 'avatarETag' | 'roles' | 'username'>> & Required<Pick<IUser, '_id'>>\n>;\n\nconst isUid = (eventType: keyof Events): eventType is UserPresence['_id'] =>\n\tBoolean(eventType) && typeof eventType === 'string' && !['reset', 'restart', 'remove'].includes(eventType);\n\nconst uids = new Set<UserPresence['_id']>();\n\nconst update: EventHandlerOf<ExternalEvents, string> = (update) => {\n\tif (update?._id) {\n\t\tstore.set(update._id, { ...store.get(update._id), ...update, ...(status === 'disabled' && { status: UserStatus.DISABLED }) });\n\t\tuids.delete(update._id);\n\t}\n};\n\nconst notify = (presence: UserPresence): void => {\n\tif (presence._id) {\n\t\tupdate(presence);\n\t\temitter.emit(presence._id, store.get(presence._id));\n\t}\n};\n\nconst getPresence = ((): ((uid: UserPresence['_id']) => void) => {\n\tlet timer: ReturnType<typeof setTimeout>;\n\n\tconst deletedUids = new Set<UserPresence['_id']>();\n\n\tconst fetch = (delay = 500): void => {\n\t\ttimer && clearTimeout(timer);\n\t\ttimer = setTimeout(async () => {\n\t\t\tconst currentUids = new Set(uids);\n\t\t\tuids.clear();\n\n\t\t\tconst ids = Array.from(currentUids);\n\t\t\tconst removed = Array.from(deletedUids);\n\n\t\t\tMeteor.subscribe('stream-user-presence', '', {\n\t\t\t\t...(ids.length > 0 && { added: Array.from(currentUids) }),\n\t\t\t\t...(removed.length && { removed: Array.from(deletedUids) }),\n\t\t\t});\n\n\t\t\tdeletedUids.clear();\n\n\t\t\tif (ids.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst params = {\n\t\t\t\t\tids: [...currentUids],\n\t\t\t\t};\n\n\t\t\t\tconst { users } = await sdk.rest.get('/v1/users.presence', params);\n\n\t\t\t\tusers.forEach((user) => {\n\t\t\t\t\tif (!store.has(user._id)) {\n\t\t\t\t\t\tnotify(user);\n\t\t\t\t\t}\n\t\t\t\t\tcurrentUids.delete(user._id);\n\t\t\t\t});\n\n\t\t\t\tcurrentUids.forEach((uid) => {\n\t\t\t\t\tnotify({ _id: uid, status: UserStatus.OFFLINE });\n\t\t\t\t});\n\n\t\t\t\tcurrentUids.clear();\n\t\t\t} catch {\n\t\t\t\tfetch(delay + delay);\n\t\t\t} finally {\n\t\t\t\tcurrentUids.forEach((item) => uids.add(item));\n\t\t\t}\n\t\t}, delay);\n\t};\n\n\tconst get = (uid: UserPresence['_id']): void => {\n\t\tuids.add(uid);\n\t\tfetch();\n\t};\n\tconst stop = (uid: UserPresence['_id']): void => {\n\t\tdeletedUids.add(uid);\n\t\tfetch();\n\t};\n\temitter.on('remove', (uid) => {\n\t\tif (emitter.has(uid)) {\n\t\t\treturn;\n\t\t}\n\n\t\tstore.delete(uid);\n\t\tstop(uid);\n\t});\n\n\temitter.on('reset', () => {\n\t\temitter\n\t\t\t.events()\n\t\t\t.filter(isUid)\n\t\t\t.forEach((uid) => {\n\t\t\t\temitter.emit(uid, undefined);\n\t\t\t});\n\t\temitter.once('restart', () => {\n\t\t\temitter.events().filter(isUid).forEach(get);\n\t\t});\n\t});\n\n\treturn get;\n})();\n\nconst listen = (uid: UserPresence['_id'], handler: EventHandlerOf<ExternalEvents, UserPresence['_id']> | (() => void)): void => {\n\tif (!uid) {\n\t\treturn;\n\t}\n\temitter.on(uid, handler);\n\n\tconst user = store.has(uid) && store.get(uid);\n\tif (user) {\n\t\treturn;\n\t}\n\n\tgetPresence(uid);\n};\n\nconst stop = (uid: UserPresence['_id'], handler: EventHandlerOf<ExternalEvents, UserPresence['_id']> | (() => void)): void => {\n\temitter.off(uid, handler);\n\tsetTimeout(() => {\n\t\temitter.emit('remove', uid);\n\t}, 5000);\n};\n\nconst reset = (): void => {\n\tstore.clear();\n\temitter.emit('reset');\n};\n\nconst restart = (): void => {\n\temitter.emit('restart');\n};\n\nconst get = async (uid: UserPresence['_id']): Promise<UserPresence | undefined> =>\n\tnew Promise((resolve) => {\n\t\tconst user = store.has(uid) && store.get(uid);\n\t\tif (user) {\n\t\t\treturn resolve(user);\n\t\t}\n\n\t\tconst callback: EventHandlerOf<ExternalEvents, UserPresence['_id']> = (args): void => {\n\t\t\tresolve(args);\n\t\t\tstop(uid, callback);\n\t\t};\n\t\tlisten(uid, callback);\n\t});\n\nlet status = 'enabled';\n\nconst setStatus = (newStatus: 'enabled' | 'disabled'): void => {\n\tstatus = newStatus;\n\treset();\n};\n\nexport const Presence = {\n\tsetStatus,\n\tstatus,\n\tlisten,\n\tstop,\n\treset,\n\trestart,\n\tnotify,\n\tstore,\n\tget,\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"62cffe8cddda9fe3aba2e4c69d0f5f82f3fb2b6b"}
