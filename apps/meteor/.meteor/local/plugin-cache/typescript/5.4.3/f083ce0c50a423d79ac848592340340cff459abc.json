{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/api-enterprise/server/voip-freeswitch.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/api-enterprise/server/voip-freeswitch.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/api-enterprise/server/voip-freeswitch.ts","inputSourceMap":{"version":3,"file":"ee/app/api-enterprise/server/voip-freeswitch.ts","sourceRoot":"","sources":["ee/app/api-enterprise/server/voip-freeswitch.ts"],"names":[],"mappings":"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","sourcesContent":["import { VoipFreeSwitch } from '@rocket.chat/core-services';\nimport { Users } from '@rocket.chat/models';\nimport {\n\tisVoipFreeSwitchExtensionAssignProps,\n\tisVoipFreeSwitchExtensionGetDetailsProps,\n\tisVoipFreeSwitchExtensionGetInfoProps,\n\tisVoipFreeSwitchExtensionListProps,\n} from '@rocket.chat/rest-typings';\nimport { wrapExceptions } from '@rocket.chat/tools';\n\nimport { API } from '../../../../app/api/server';\nimport { settings } from '../../../../app/settings/server/cached';\n\nAPI.v1.addRoute(\n\t'voip-freeswitch.extension.list',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-extensions'], validateParams: isVoipFreeSwitchExtensionListProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { username, type = 'all' } = this.queryParams;\n\n\t\t\tconst extensions = await wrapExceptions(() => VoipFreeSwitch.getExtensionList()).catch(() => {\n\t\t\t\tthrow new Error('error-loading-extension-list');\n\t\t\t});\n\n\t\t\tif (type === 'all') {\n\t\t\t\treturn API.v1.success({ extensions });\n\t\t\t}\n\n\t\t\tconst assignedExtensions = await Users.findAssignedFreeSwitchExtensions().toArray();\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'free':\n\t\t\t\t\tconst freeExtensions = extensions.filter(({ extension }) => !assignedExtensions.includes(extension));\n\t\t\t\t\treturn API.v1.success({ extensions: freeExtensions });\n\t\t\t\tcase 'allocated':\n\t\t\t\t\t// Extensions that are already assigned to some user\n\t\t\t\t\tconst allocatedExtensions = extensions.filter(({ extension }) => assignedExtensions.includes(extension));\n\t\t\t\t\treturn API.v1.success({ extensions: allocatedExtensions });\n\t\t\t\tcase 'available':\n\t\t\t\t\t// Extensions that are free or assigned to the specified user\n\t\t\t\t\tconst user = (username && (await Users.findOneByUsername(username, { projection: { freeSwitchExtension: 1 } }))) || undefined;\n\t\t\t\t\tconst currentExtension = user?.freeSwitchExtension;\n\n\t\t\t\t\tconst availableExtensions = extensions.filter(\n\t\t\t\t\t\t({ extension }) => extension === currentExtension || !assignedExtensions.includes(extension),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn API.v1.success({ extensions: availableExtensions });\n\t\t\t}\n\n\t\t\treturn API.v1.success({ extensions });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'voip-freeswitch.extension.assign',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-extensions'], validateParams: isVoipFreeSwitchExtensionAssignProps },\n\t{\n\t\tasync post() {\n\t\t\tconst { extension, username } = this.bodyParams;\n\n\t\t\tif (!username) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneByUsername(username, { projection: { freeSwitchExtension: 1 } });\n\t\t\tif (!user) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst existingUser = extension && (await Users.findOneByFreeSwitchExtension(extension, { projection: { _id: 1 } }));\n\t\t\tif (existingUser && existingUser._id !== user._id) {\n\t\t\t\tthrow new Error('error-extension-not-available');\n\t\t\t}\n\n\t\t\tif (extension && user.freeSwitchExtension === extension) {\n\t\t\t\treturn API.v1.success();\n\t\t\t}\n\n\t\t\tawait Users.setFreeSwitchExtension(user._id, extension);\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'voip-freeswitch.extension.getDetails',\n\t{ authRequired: true, permissionsRequired: ['view-voip-extension-details'], validateParams: isVoipFreeSwitchExtensionGetDetailsProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { extension, group } = this.queryParams;\n\n\t\t\tif (!extension) {\n\t\t\t\tthrow new Error('error-invalid-params');\n\t\t\t}\n\n\t\t\tconst extensionData = await wrapExceptions(() => VoipFreeSwitch.getExtensionDetails({ extension, group })).suppress(() => undefined);\n\t\t\tif (!extensionData) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst existingUser = await Users.findOneByFreeSwitchExtension(extensionData.extension, { projection: { username: 1, name: 1 } });\n\n\t\t\treturn API.v1.success({\n\t\t\t\t...extensionData,\n\t\t\t\t...(existingUser && { userId: existingUser._id, name: existingUser.name, username: existingUser.username }),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'voip-freeswitch.extension.getRegistrationInfoByUserId',\n\t{ authRequired: true, permissionsRequired: ['view-user-voip-extension'], validateParams: isVoipFreeSwitchExtensionGetInfoProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { userId } = this.queryParams;\n\n\t\t\tif (!userId) {\n\t\t\t\tthrow new Error('error-invalid-params');\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneById(userId, { projection: { freeSwitchExtension: 1 } });\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('error-user-not-found');\n\t\t\t}\n\n\t\t\tconst { freeSwitchExtension: extension } = user;\n\n\t\t\tif (!extension) {\n\t\t\t\tthrow new Error('error-extension-not-assigned');\n\t\t\t}\n\n\t\t\tconst extensionData = await wrapExceptions(() => VoipFreeSwitch.getExtensionDetails({ extension })).suppress(() => undefined);\n\t\t\tif (!extensionData) {\n\t\t\t\treturn API.v1.notFound('error-registration-not-found');\n\t\t\t}\n\t\t\tconst password = await wrapExceptions(() => VoipFreeSwitch.getUserPassword(extension)).suppress(() => undefined);\n\n\t\t\treturn API.v1.success({\n\t\t\t\textension: extensionData,\n\t\t\t\tcredentials: {\n\t\t\t\t\twebsocketPath: settings.get<string>('VoIP_TeamCollab_FreeSwitch_WebSocket_Path'),\n\t\t\t\t\tpassword,\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/api-enterprise/server/voip-freeswitch.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/api-enterprise/server/voip-freeswitch.ts","inputSourceMap":{"version":3,"file":"ee/app/api-enterprise/server/voip-freeswitch.ts","sourceRoot":"","sources":["ee/app/api-enterprise/server/voip-freeswitch.ts"],"names":[],"mappings":"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","sourcesContent":["import { VoipFreeSwitch } from '@rocket.chat/core-services';\nimport { Users } from '@rocket.chat/models';\nimport {\n\tisVoipFreeSwitchExtensionAssignProps,\n\tisVoipFreeSwitchExtensionGetDetailsProps,\n\tisVoipFreeSwitchExtensionGetInfoProps,\n\tisVoipFreeSwitchExtensionListProps,\n} from '@rocket.chat/rest-typings';\nimport { wrapExceptions } from '@rocket.chat/tools';\n\nimport { API } from '../../../../app/api/server';\nimport { settings } from '../../../../app/settings/server/cached';\n\nAPI.v1.addRoute(\n\t'voip-freeswitch.extension.list',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-extensions'], validateParams: isVoipFreeSwitchExtensionListProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { username, type = 'all' } = this.queryParams;\n\n\t\t\tconst extensions = await wrapExceptions(() => VoipFreeSwitch.getExtensionList()).catch(() => {\n\t\t\t\tthrow new Error('error-loading-extension-list');\n\t\t\t});\n\n\t\t\tif (type === 'all') {\n\t\t\t\treturn API.v1.success({ extensions });\n\t\t\t}\n\n\t\t\tconst assignedExtensions = await Users.findAssignedFreeSwitchExtensions().toArray();\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'free':\n\t\t\t\t\tconst freeExtensions = extensions.filter(({ extension }) => !assignedExtensions.includes(extension));\n\t\t\t\t\treturn API.v1.success({ extensions: freeExtensions });\n\t\t\t\tcase 'allocated':\n\t\t\t\t\t// Extensions that are already assigned to some user\n\t\t\t\t\tconst allocatedExtensions = extensions.filter(({ extension }) => assignedExtensions.includes(extension));\n\t\t\t\t\treturn API.v1.success({ extensions: allocatedExtensions });\n\t\t\t\tcase 'available':\n\t\t\t\t\t// Extensions that are free or assigned to the specified user\n\t\t\t\t\tconst user = (username && (await Users.findOneByUsername(username, { projection: { freeSwitchExtension: 1 } }))) || undefined;\n\t\t\t\t\tconst currentExtension = user?.freeSwitchExtension;\n\n\t\t\t\t\tconst availableExtensions = extensions.filter(\n\t\t\t\t\t\t({ extension }) => extension === currentExtension || !assignedExtensions.includes(extension),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn API.v1.success({ extensions: availableExtensions });\n\t\t\t}\n\n\t\t\treturn API.v1.success({ extensions });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'voip-freeswitch.extension.assign',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-extensions'], validateParams: isVoipFreeSwitchExtensionAssignProps },\n\t{\n\t\tasync post() {\n\t\t\tconst { extension, username } = this.bodyParams;\n\n\t\t\tif (!username) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneByUsername(username, { projection: { freeSwitchExtension: 1 } });\n\t\t\tif (!user) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst existingUser = extension && (await Users.findOneByFreeSwitchExtension(extension, { projection: { _id: 1 } }));\n\t\t\tif (existingUser && existingUser._id !== user._id) {\n\t\t\t\tthrow new Error('error-extension-not-available');\n\t\t\t}\n\n\t\t\tif (extension && user.freeSwitchExtension === extension) {\n\t\t\t\treturn API.v1.success();\n\t\t\t}\n\n\t\t\tawait Users.setFreeSwitchExtension(user._id, extension);\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'voip-freeswitch.extension.getDetails',\n\t{ authRequired: true, permissionsRequired: ['view-voip-extension-details'], validateParams: isVoipFreeSwitchExtensionGetDetailsProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { extension, group } = this.queryParams;\n\n\t\t\tif (!extension) {\n\t\t\t\tthrow new Error('error-invalid-params');\n\t\t\t}\n\n\t\t\tconst extensionData = await wrapExceptions(() => VoipFreeSwitch.getExtensionDetails({ extension, group })).suppress(() => undefined);\n\t\t\tif (!extensionData) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst existingUser = await Users.findOneByFreeSwitchExtension(extensionData.extension, { projection: { username: 1, name: 1 } });\n\n\t\t\treturn API.v1.success({\n\t\t\t\t...extensionData,\n\t\t\t\t...(existingUser && { userId: existingUser._id, name: existingUser.name, username: existingUser.username }),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'voip-freeswitch.extension.getRegistrationInfoByUserId',\n\t{ authRequired: true, permissionsRequired: ['view-user-voip-extension'], validateParams: isVoipFreeSwitchExtensionGetInfoProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { userId } = this.queryParams;\n\n\t\t\tif (!userId) {\n\t\t\t\tthrow new Error('error-invalid-params');\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneById(userId, { projection: { freeSwitchExtension: 1 } });\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('error-user-not-found');\n\t\t\t}\n\n\t\t\tconst { freeSwitchExtension: extension } = user;\n\n\t\t\tif (!extension) {\n\t\t\t\tthrow new Error('error-extension-not-assigned');\n\t\t\t}\n\n\t\t\tconst extensionData = await wrapExceptions(() => VoipFreeSwitch.getExtensionDetails({ extension })).suppress(() => undefined);\n\t\t\tif (!extensionData) {\n\t\t\t\treturn API.v1.notFound('error-registration-not-found');\n\t\t\t}\n\t\t\tconst password = await wrapExceptions(() => VoipFreeSwitch.getUserPassword(extension)).suppress(() => undefined);\n\n\t\t\treturn API.v1.success({\n\t\t\t\textension: extensionData,\n\t\t\t\tcredentials: {\n\t\t\t\t\twebsocketPath: settings.get<string>('VoIP_TeamCollab_FreeSwitch_WebSocket_Path'),\n\t\t\t\t\tpassword,\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let VoipFreeSwitch;\n    module.link(\"@rocket.chat/core-services\", {\n      VoipFreeSwitch(v) {\n        VoipFreeSwitch = v;\n      }\n    }, 0);\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let isVoipFreeSwitchExtensionAssignProps, isVoipFreeSwitchExtensionGetDetailsProps, isVoipFreeSwitchExtensionGetInfoProps, isVoipFreeSwitchExtensionListProps;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isVoipFreeSwitchExtensionAssignProps(v) {\n        isVoipFreeSwitchExtensionAssignProps = v;\n      },\n      isVoipFreeSwitchExtensionGetDetailsProps(v) {\n        isVoipFreeSwitchExtensionGetDetailsProps = v;\n      },\n      isVoipFreeSwitchExtensionGetInfoProps(v) {\n        isVoipFreeSwitchExtensionGetInfoProps = v;\n      },\n      isVoipFreeSwitchExtensionListProps(v) {\n        isVoipFreeSwitchExtensionListProps = v;\n      }\n    }, 2);\n    let wrapExceptions;\n    module.link(\"@rocket.chat/tools\", {\n      wrapExceptions(v) {\n        wrapExceptions = v;\n      }\n    }, 3);\n    let API;\n    module.link(\"../../../../app/api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 4);\n    let settings;\n    module.link(\"../../../../app/settings/server/cached\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('voip-freeswitch.extension.list', {\n      authRequired: true,\n      permissionsRequired: ['manage-voip-extensions'],\n      validateParams: isVoipFreeSwitchExtensionListProps\n    }, {\n      async get() {\n        const {\n          username,\n          type = 'all'\n        } = this.queryParams;\n        const extensions = await wrapExceptions(() => VoipFreeSwitch.getExtensionList()).catch(() => {\n          throw new Error('error-loading-extension-list');\n        });\n        if (type === 'all') {\n          return API.v1.success({\n            extensions\n          });\n        }\n        const assignedExtensions = await Users.findAssignedFreeSwitchExtensions().toArray();\n        switch (type) {\n          case 'free':\n            const freeExtensions = extensions.filter(_ref => {\n              let {\n                extension\n              } = _ref;\n              return !assignedExtensions.includes(extension);\n            });\n            return API.v1.success({\n              extensions: freeExtensions\n            });\n          case 'allocated':\n            // Extensions that are already assigned to some user\n            const allocatedExtensions = extensions.filter(_ref2 => {\n              let {\n                extension\n              } = _ref2;\n              return assignedExtensions.includes(extension);\n            });\n            return API.v1.success({\n              extensions: allocatedExtensions\n            });\n          case 'available':\n            // Extensions that are free or assigned to the specified user\n            const user = username && (await Users.findOneByUsername(username, {\n              projection: {\n                freeSwitchExtension: 1\n              }\n            })) || undefined;\n            const currentExtension = user === null || user === void 0 ? void 0 : user.freeSwitchExtension;\n            const availableExtensions = extensions.filter(_ref3 => {\n              let {\n                extension\n              } = _ref3;\n              return extension === currentExtension || !assignedExtensions.includes(extension);\n            });\n            return API.v1.success({\n              extensions: availableExtensions\n            });\n        }\n        return API.v1.success({\n          extensions\n        });\n      }\n    });\n    API.v1.addRoute('voip-freeswitch.extension.assign', {\n      authRequired: true,\n      permissionsRequired: ['manage-voip-extensions'],\n      validateParams: isVoipFreeSwitchExtensionAssignProps\n    }, {\n      async post() {\n        const {\n          extension,\n          username\n        } = this.bodyParams;\n        if (!username) {\n          return API.v1.notFound();\n        }\n        const user = await Users.findOneByUsername(username, {\n          projection: {\n            freeSwitchExtension: 1\n          }\n        });\n        if (!user) {\n          return API.v1.notFound();\n        }\n        const existingUser = extension && (await Users.findOneByFreeSwitchExtension(extension, {\n          projection: {\n            _id: 1\n          }\n        }));\n        if (existingUser && existingUser._id !== user._id) {\n          throw new Error('error-extension-not-available');\n        }\n        if (extension && user.freeSwitchExtension === extension) {\n          return API.v1.success();\n        }\n        await Users.setFreeSwitchExtension(user._id, extension);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('voip-freeswitch.extension.getDetails', {\n      authRequired: true,\n      permissionsRequired: ['view-voip-extension-details'],\n      validateParams: isVoipFreeSwitchExtensionGetDetailsProps\n    }, {\n      async get() {\n        const {\n          extension,\n          group\n        } = this.queryParams;\n        if (!extension) {\n          throw new Error('error-invalid-params');\n        }\n        const extensionData = await wrapExceptions(() => VoipFreeSwitch.getExtensionDetails({\n          extension,\n          group\n        })).suppress(() => undefined);\n        if (!extensionData) {\n          return API.v1.notFound();\n        }\n        const existingUser = await Users.findOneByFreeSwitchExtension(extensionData.extension, {\n          projection: {\n            username: 1,\n            name: 1\n          }\n        });\n        return API.v1.success(_objectSpread(_objectSpread({}, extensionData), existingUser && {\n          userId: existingUser._id,\n          name: existingUser.name,\n          username: existingUser.username\n        }));\n      }\n    });\n    API.v1.addRoute('voip-freeswitch.extension.getRegistrationInfoByUserId', {\n      authRequired: true,\n      permissionsRequired: ['view-user-voip-extension'],\n      validateParams: isVoipFreeSwitchExtensionGetInfoProps\n    }, {\n      async get() {\n        const {\n          userId\n        } = this.queryParams;\n        if (!userId) {\n          throw new Error('error-invalid-params');\n        }\n        const user = await Users.findOneById(userId, {\n          projection: {\n            freeSwitchExtension: 1\n          }\n        });\n        if (!user) {\n          throw new Error('error-user-not-found');\n        }\n        const {\n          freeSwitchExtension: extension\n        } = user;\n        if (!extension) {\n          throw new Error('error-extension-not-assigned');\n        }\n        const extensionData = await wrapExceptions(() => VoipFreeSwitch.getExtensionDetails({\n          extension\n        })).suppress(() => undefined);\n        if (!extensionData) {\n          return API.v1.notFound('error-registration-not-found');\n        }\n        const password = await wrapExceptions(() => VoipFreeSwitch.getUserPassword(extension)).suppress(() => undefined);\n        return API.v1.success({\n          extension: extensionData,\n          credentials: {\n            websocketPath: settings.get('VoIP_TeamCollab_FreeSwitch_WebSocket_Path'),\n            password\n          }\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","VoipFreeSwitch","Users","isVoipFreeSwitchExtensionAssignProps","isVoipFreeSwitchExtensionGetDetailsProps","isVoipFreeSwitchExtensionGetInfoProps","isVoipFreeSwitchExtensionListProps","wrapExceptions","API","settings","__reifyWaitForDeps__","v1","addRoute","authRequired","permissionsRequired","validateParams","get","username","type","queryParams","extensions","getExtensionList","catch","Error","success","assignedExtensions","findAssignedFreeSwitchExtensions","toArray","freeExtensions","filter","_ref","extension","includes","allocatedExtensions","_ref2","user","findOneByUsername","projection","freeSwitchExtension","undefined","currentExtension","availableExtensions","_ref3","post","bodyParams","notFound","existingUser","findOneByFreeSwitchExtension","_id","setFreeSwitchExtension","group","extensionData","getExtensionDetails","suppress","name","userId","findOneById","password","getUserPassword","credentials","websocketPath","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/api-enterprise/server/voip-freeswitch.ts"],"sourcesContent":["import { VoipFreeSwitch } from '@rocket.chat/core-services';\nimport { Users } from '@rocket.chat/models';\nimport {\n\tisVoipFreeSwitchExtensionAssignProps,\n\tisVoipFreeSwitchExtensionGetDetailsProps,\n\tisVoipFreeSwitchExtensionGetInfoProps,\n\tisVoipFreeSwitchExtensionListProps,\n} from '@rocket.chat/rest-typings';\nimport { wrapExceptions } from '@rocket.chat/tools';\n\nimport { API } from '../../../../app/api/server';\nimport { settings } from '../../../../app/settings/server/cached';\n\nAPI.v1.addRoute(\n\t'voip-freeswitch.extension.list',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-extensions'], validateParams: isVoipFreeSwitchExtensionListProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { username, type = 'all' } = this.queryParams;\n\n\t\t\tconst extensions = await wrapExceptions(() => VoipFreeSwitch.getExtensionList()).catch(() => {\n\t\t\t\tthrow new Error('error-loading-extension-list');\n\t\t\t});\n\n\t\t\tif (type === 'all') {\n\t\t\t\treturn API.v1.success({ extensions });\n\t\t\t}\n\n\t\t\tconst assignedExtensions = await Users.findAssignedFreeSwitchExtensions().toArray();\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'free':\n\t\t\t\t\tconst freeExtensions = extensions.filter(({ extension }) => !assignedExtensions.includes(extension));\n\t\t\t\t\treturn API.v1.success({ extensions: freeExtensions });\n\t\t\t\tcase 'allocated':\n\t\t\t\t\t// Extensions that are already assigned to some user\n\t\t\t\t\tconst allocatedExtensions = extensions.filter(({ extension }) => assignedExtensions.includes(extension));\n\t\t\t\t\treturn API.v1.success({ extensions: allocatedExtensions });\n\t\t\t\tcase 'available':\n\t\t\t\t\t// Extensions that are free or assigned to the specified user\n\t\t\t\t\tconst user = (username && (await Users.findOneByUsername(username, { projection: { freeSwitchExtension: 1 } }))) || undefined;\n\t\t\t\t\tconst currentExtension = user?.freeSwitchExtension;\n\n\t\t\t\t\tconst availableExtensions = extensions.filter(\n\t\t\t\t\t\t({ extension }) => extension === currentExtension || !assignedExtensions.includes(extension),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn API.v1.success({ extensions: availableExtensions });\n\t\t\t}\n\n\t\t\treturn API.v1.success({ extensions });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'voip-freeswitch.extension.assign',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-extensions'], validateParams: isVoipFreeSwitchExtensionAssignProps },\n\t{\n\t\tasync post() {\n\t\t\tconst { extension, username } = this.bodyParams;\n\n\t\t\tif (!username) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneByUsername(username, { projection: { freeSwitchExtension: 1 } });\n\t\t\tif (!user) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst existingUser = extension && (await Users.findOneByFreeSwitchExtension(extension, { projection: { _id: 1 } }));\n\t\t\tif (existingUser && existingUser._id !== user._id) {\n\t\t\t\tthrow new Error('error-extension-not-available');\n\t\t\t}\n\n\t\t\tif (extension && user.freeSwitchExtension === extension) {\n\t\t\t\treturn API.v1.success();\n\t\t\t}\n\n\t\t\tawait Users.setFreeSwitchExtension(user._id, extension);\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'voip-freeswitch.extension.getDetails',\n\t{ authRequired: true, permissionsRequired: ['view-voip-extension-details'], validateParams: isVoipFreeSwitchExtensionGetDetailsProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { extension, group } = this.queryParams;\n\n\t\t\tif (!extension) {\n\t\t\t\tthrow new Error('error-invalid-params');\n\t\t\t}\n\n\t\t\tconst extensionData = await wrapExceptions(() => VoipFreeSwitch.getExtensionDetails({ extension, group })).suppress(() => undefined);\n\t\t\tif (!extensionData) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\tconst existingUser = await Users.findOneByFreeSwitchExtension(extensionData.extension, { projection: { username: 1, name: 1 } });\n\n\t\t\treturn API.v1.success({\n\t\t\t\t...extensionData,\n\t\t\t\t...(existingUser && { userId: existingUser._id, name: existingUser.name, username: existingUser.username }),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'voip-freeswitch.extension.getRegistrationInfoByUserId',\n\t{ authRequired: true, permissionsRequired: ['view-user-voip-extension'], validateParams: isVoipFreeSwitchExtensionGetInfoProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { userId } = this.queryParams;\n\n\t\t\tif (!userId) {\n\t\t\t\tthrow new Error('error-invalid-params');\n\t\t\t}\n\n\t\t\tconst user = await Users.findOneById(userId, { projection: { freeSwitchExtension: 1 } });\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('error-user-not-found');\n\t\t\t}\n\n\t\t\tconst { freeSwitchExtension: extension } = user;\n\n\t\t\tif (!extension) {\n\t\t\t\tthrow new Error('error-extension-not-assigned');\n\t\t\t}\n\n\t\t\tconst extensionData = await wrapExceptions(() => VoipFreeSwitch.getExtensionDetails({ extension })).suppress(() => undefined);\n\t\t\tif (!extensionData) {\n\t\t\t\treturn API.v1.notFound('error-registration-not-found');\n\t\t\t}\n\t\t\tconst password = await wrapExceptions(() => VoipFreeSwitch.getUserPassword(extension)).suppress(() => undefined);\n\n\t\t\treturn API.v1.success({\n\t\t\t\textension: extensionData,\n\t\t\t\tcredentials: {\n\t\t\t\t\twebsocketPath: settings.get<string>('VoIP_TeamCollab_FreeSwitch_WebSocket_Path'),\n\t\t\t\t\tpassword,\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f083ce0c50a423d79ac848592340340cff459abc"}
