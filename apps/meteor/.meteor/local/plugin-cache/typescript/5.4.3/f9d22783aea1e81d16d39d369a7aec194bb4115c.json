{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/voip-asterisk/connector/websocket/WebsocketConnection.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/voip-asterisk/connector/websocket/WebsocketConnection.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/voip-asterisk/connector/websocket/WebsocketConnection.ts","inputSourceMap":{"version":3,"file":"server/services/voip-asterisk/connector/websocket/WebsocketConnection.ts","sourceRoot":"","sources":["server/services/voip-asterisk/connector/websocket/WebsocketConnection.ts"],"names":[],"mappings":"AAAA;;;;;;;;;GASG;AACH,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,SAAS,MAAM,IAAI,CAAC;AAM3B,MAAM,OAAO,mBAAmB;IAC/B,UAAU,CAAY;IAEd,MAAM,CAAS;IAEvB;QACC,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,qBAAqB,CAAC,CAAC;IACjD,CAAC;IAED,cAAc,CAAC,aAAqB,EAAE,kBAAkB,GAAG,KAAK;QAC/D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;QACtC,MAAM,aAAa,GAAG,IAAI,OAAO,CAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE;YAC7D,MAAM,OAAO,GAAG,CAAC,GAAY,EAAQ,EAAE;gBACtC,OAAO,CAAC,GAAG,CAAC,CAAC;gBACb,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,+CAA+C,EAAE,GAAG,EAAE,CAAC,CAAC;YAClF,CAAC,CAAC;YACF,MAAM,SAAS,GAAG,GAAS,EAAE;gBAC5B,QAAQ,EAAE,CAAC;gBACX,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACzB,CAAC,CAAC;YACF,IAAI,CAAC,UAAU,GAAG,IAAI,SAAS,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;YACnE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YACtC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,OAAO,aAAa,CAAC;IACtB,CAAC;IAED,WAAW;QACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,6BAA6B,EAAE,CAAC,CAAC;QAC1D,OAAO,KAAK,CAAC;IACd,CAAC;IAED,yDAAyD;IACzD,cAAc,CAAC,OAAe,EAAE,qBAA0B;QACzD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,gCAAgC,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,EAAE,CAAC,MAAc,EAAE,gBAAiC;QACnD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,oBAAoB,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,GAAG,CAAC,MAAc,EAAE,QAAiB;QACpC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,oBAAoB,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,eAAe;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,mBAAmB,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;CACD","sourcesContent":["/**\n * Class representing Websocket connection.\n * @remarks\n *\n * This class wraps around websocket with asterisk. WebSocket protocol is defaulted to sip\n * for connection but can be passed externally.\n *\n * Websocket configurations can be found in asterisk's http.conf and pjsip.conf\n *\n */\nimport { Logger } from '@rocket.chat/logger';\nimport WebSocket from 'ws';\n\nimport type { Command } from '../asterisk/Command';\nimport type { IConnection } from '../asterisk/IConnection';\nimport type { CallbackContext } from '../asterisk/ami/CallbackContext';\n\nexport class WebsocketConnection implements IConnection {\n\tconnection: WebSocket;\n\n\tprivate logger: Logger;\n\n\tconstructor() {\n\t\tthis.logger = new Logger('WebsocketConnection');\n\t}\n\n\tconnectWithUrl(connectionUrl: string, connectionProtocol = 'sip'): Promise<void> {\n\t\tthis.logger.log({ msg: 'connect()' });\n\t\tconst returnPromise = new Promise<void>((_resolve, _reject) => {\n\t\t\tconst onError = (err: unknown): void => {\n\t\t\t\t_reject(err);\n\t\t\t\tthis.logger.error({ msg: 'checkCallserverConnection () Connection Error', err });\n\t\t\t};\n\t\t\tconst onConnect = (): void => {\n\t\t\t\t_resolve();\n\t\t\t\tthis.connection.close();\n\t\t\t};\n\t\t\tthis.connection = new WebSocket(connectionUrl, connectionProtocol);\n\t\t\tthis.connection.on('open', onConnect);\n\t\t\tthis.connection.on('error', onError);\n\t\t});\n\t\treturn returnPromise;\n\t}\n\n\tisConnected(): boolean {\n\t\tthis.logger.debug({ msg: 'isConnected() unimplemented' });\n\t\treturn false;\n\t}\n\n\t// Executes an action on asterisk and returns the result.\n\texecuteCommand(_action: object, _actionResultCallback: any): void {\n\t\tthis.logger.debug({ msg: 'executeCommand() unimplemented' });\n\t}\n\n\ton(_event: string, _callbackContext: CallbackContext): void {\n\t\tthis.logger.debug({ msg: 'on() unimplemented' });\n\t}\n\n\toff(_event: string, _command: Command): void {\n\t\tthis.logger.debug({ msg: 'on() unimplemented' });\n\t}\n\n\tcloseConnection(): void {\n\t\tthis.logger.info({ msg: 'closeConnection()' });\n\t\tthis.connection.close();\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/voip-asterisk/connector/websocket/WebsocketConnection.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/voip-asterisk/connector/websocket/WebsocketConnection.ts","inputSourceMap":{"version":3,"file":"server/services/voip-asterisk/connector/websocket/WebsocketConnection.ts","sourceRoot":"","sources":["server/services/voip-asterisk/connector/websocket/WebsocketConnection.ts"],"names":[],"mappings":"AAAA;;;;;;;;;GASG;AACH,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,SAAS,MAAM,IAAI,CAAC;AAM3B,MAAM,OAAO,mBAAmB;IAC/B,UAAU,CAAY;IAEd,MAAM,CAAS;IAEvB;QACC,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,qBAAqB,CAAC,CAAC;IACjD,CAAC;IAED,cAAc,CAAC,aAAqB,EAAE,kBAAkB,GAAG,KAAK;QAC/D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;QACtC,MAAM,aAAa,GAAG,IAAI,OAAO,CAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE;YAC7D,MAAM,OAAO,GAAG,CAAC,GAAY,EAAQ,EAAE;gBACtC,OAAO,CAAC,GAAG,CAAC,CAAC;gBACb,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,+CAA+C,EAAE,GAAG,EAAE,CAAC,CAAC;YAClF,CAAC,CAAC;YACF,MAAM,SAAS,GAAG,GAAS,EAAE;gBAC5B,QAAQ,EAAE,CAAC;gBACX,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACzB,CAAC,CAAC;YACF,IAAI,CAAC,UAAU,GAAG,IAAI,SAAS,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;YACnE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YACtC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,OAAO,aAAa,CAAC;IACtB,CAAC;IAED,WAAW;QACV,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,6BAA6B,EAAE,CAAC,CAAC;QAC1D,OAAO,KAAK,CAAC;IACd,CAAC;IAED,yDAAyD;IACzD,cAAc,CAAC,OAAe,EAAE,qBAA0B;QACzD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,gCAAgC,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,EAAE,CAAC,MAAc,EAAE,gBAAiC;QACnD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,oBAAoB,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,GAAG,CAAC,MAAc,EAAE,QAAiB;QACpC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,oBAAoB,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,eAAe;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,mBAAmB,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;CACD","sourcesContent":["/**\n * Class representing Websocket connection.\n * @remarks\n *\n * This class wraps around websocket with asterisk. WebSocket protocol is defaulted to sip\n * for connection but can be passed externally.\n *\n * Websocket configurations can be found in asterisk's http.conf and pjsip.conf\n *\n */\nimport { Logger } from '@rocket.chat/logger';\nimport WebSocket from 'ws';\n\nimport type { Command } from '../asterisk/Command';\nimport type { IConnection } from '../asterisk/IConnection';\nimport type { CallbackContext } from '../asterisk/ami/CallbackContext';\n\nexport class WebsocketConnection implements IConnection {\n\tconnection: WebSocket;\n\n\tprivate logger: Logger;\n\n\tconstructor() {\n\t\tthis.logger = new Logger('WebsocketConnection');\n\t}\n\n\tconnectWithUrl(connectionUrl: string, connectionProtocol = 'sip'): Promise<void> {\n\t\tthis.logger.log({ msg: 'connect()' });\n\t\tconst returnPromise = new Promise<void>((_resolve, _reject) => {\n\t\t\tconst onError = (err: unknown): void => {\n\t\t\t\t_reject(err);\n\t\t\t\tthis.logger.error({ msg: 'checkCallserverConnection () Connection Error', err });\n\t\t\t};\n\t\t\tconst onConnect = (): void => {\n\t\t\t\t_resolve();\n\t\t\t\tthis.connection.close();\n\t\t\t};\n\t\t\tthis.connection = new WebSocket(connectionUrl, connectionProtocol);\n\t\t\tthis.connection.on('open', onConnect);\n\t\t\tthis.connection.on('error', onError);\n\t\t});\n\t\treturn returnPromise;\n\t}\n\n\tisConnected(): boolean {\n\t\tthis.logger.debug({ msg: 'isConnected() unimplemented' });\n\t\treturn false;\n\t}\n\n\t// Executes an action on asterisk and returns the result.\n\texecuteCommand(_action: object, _actionResultCallback: any): void {\n\t\tthis.logger.debug({ msg: 'executeCommand() unimplemented' });\n\t}\n\n\ton(_event: string, _callbackContext: CallbackContext): void {\n\t\tthis.logger.debug({ msg: 'on() unimplemented' });\n\t}\n\n\toff(_event: string, _command: Command): void {\n\t\tthis.logger.debug({ msg: 'on() unimplemented' });\n\t}\n\n\tcloseConnection(): void {\n\t\tthis.logger.info({ msg: 'closeConnection()' });\n\t\tthis.connection.close();\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      WebsocketConnection: () => WebsocketConnection\n    });\n    let Logger;\n    module.link(\"@rocket.chat/logger\", {\n      Logger(v) {\n        Logger = v;\n      }\n    }, 0);\n    let WebSocket;\n    module.link(\"ws\", {\n      default(v) {\n        WebSocket = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class WebsocketConnection {\n      constructor() {\n        this.connection = void 0;\n        this.logger = void 0;\n        this.logger = new Logger('WebsocketConnection');\n      }\n      connectWithUrl(connectionUrl) {\n        let connectionProtocol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'sip';\n        this.logger.log({\n          msg: 'connect()'\n        });\n        const returnPromise = new Promise((_resolve, _reject) => {\n          const onError = err => {\n            _reject(err);\n            this.logger.error({\n              msg: 'checkCallserverConnection () Connection Error',\n              err\n            });\n          };\n          const onConnect = () => {\n            _resolve();\n            this.connection.close();\n          };\n          this.connection = new WebSocket(connectionUrl, connectionProtocol);\n          this.connection.on('open', onConnect);\n          this.connection.on('error', onError);\n        });\n        return returnPromise;\n      }\n      isConnected() {\n        this.logger.debug({\n          msg: 'isConnected() unimplemented'\n        });\n        return false;\n      }\n      // Executes an action on asterisk and returns the result.\n      executeCommand(_action, _actionResultCallback) {\n        this.logger.debug({\n          msg: 'executeCommand() unimplemented'\n        });\n      }\n      on(_event, _callbackContext) {\n        this.logger.debug({\n          msg: 'on() unimplemented'\n        });\n      }\n      off(_event, _command) {\n        this.logger.debug({\n          msg: 'on() unimplemented'\n        });\n      }\n      closeConnection() {\n        this.logger.info({\n          msg: 'closeConnection()'\n        });\n        this.connection.close();\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","WebsocketConnection","Logger","link","v","WebSocket","default","__reifyWaitForDeps__","constructor","connection","logger","connectWithUrl","connectionUrl","connectionProtocol","arguments","length","undefined","log","msg","returnPromise","Promise","_resolve","_reject","onError","err","error","onConnect","close","on","isConnected","debug","executeCommand","_action","_actionResultCallback","_event","_callbackContext","off","_command","closeConnection","info","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/voip-asterisk/connector/websocket/WebsocketConnection.ts"],"sourcesContent":["/**\n * Class representing Websocket connection.\n * @remarks\n *\n * This class wraps around websocket with asterisk. WebSocket protocol is defaulted to sip\n * for connection but can be passed externally.\n *\n * Websocket configurations can be found in asterisk's http.conf and pjsip.conf\n *\n */\nimport { Logger } from '@rocket.chat/logger';\nimport WebSocket from 'ws';\n\nimport type { Command } from '../asterisk/Command';\nimport type { IConnection } from '../asterisk/IConnection';\nimport type { CallbackContext } from '../asterisk/ami/CallbackContext';\n\nexport class WebsocketConnection implements IConnection {\n\tconnection: WebSocket;\n\n\tprivate logger: Logger;\n\n\tconstructor() {\n\t\tthis.logger = new Logger('WebsocketConnection');\n\t}\n\n\tconnectWithUrl(connectionUrl: string, connectionProtocol = 'sip'): Promise<void> {\n\t\tthis.logger.log({ msg: 'connect()' });\n\t\tconst returnPromise = new Promise<void>((_resolve, _reject) => {\n\t\t\tconst onError = (err: unknown): void => {\n\t\t\t\t_reject(err);\n\t\t\t\tthis.logger.error({ msg: 'checkCallserverConnection () Connection Error', err });\n\t\t\t};\n\t\t\tconst onConnect = (): void => {\n\t\t\t\t_resolve();\n\t\t\t\tthis.connection.close();\n\t\t\t};\n\t\t\tthis.connection = new WebSocket(connectionUrl, connectionProtocol);\n\t\t\tthis.connection.on('open', onConnect);\n\t\t\tthis.connection.on('error', onError);\n\t\t});\n\t\treturn returnPromise;\n\t}\n\n\tisConnected(): boolean {\n\t\tthis.logger.debug({ msg: 'isConnected() unimplemented' });\n\t\treturn false;\n\t}\n\n\t// Executes an action on asterisk and returns the result.\n\texecuteCommand(_action: object, _actionResultCallback: any): void {\n\t\tthis.logger.debug({ msg: 'executeCommand() unimplemented' });\n\t}\n\n\ton(_event: string, _callbackContext: CallbackContext): void {\n\t\tthis.logger.debug({ msg: 'on() unimplemented' });\n\t}\n\n\toff(_event: string, _command: Command): void {\n\t\tthis.logger.debug({ msg: 'on() unimplemented' });\n\t}\n\n\tcloseConnection(): void {\n\t\tthis.logger.info({ msg: 'closeConnection()' });\n\t\tthis.connection.close();\n\t}\n}\n"],"mappings":";;;IAAAA,MAAA,CAAAC,MAAA;MAAAC,mBAAA,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,MAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,OAAAE,CAAA;QAAAF,MAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,SAAA;IAAAN,MAAA,CAAAI,IAAA;MAAAG,QAAAF,CAAA;QAAAC,SAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAG,oBAAA,WAAAA,oBAAA;IAiBM,MAAON,mBAAmB;MAK/BO,YAAA;QAAA,KAJAC,UAAU;QAAA,KAEFC,MAAM;QAGb,IAAI,CAACA,MAAM,GAAG,IAAIR,MAAM,CAAC,qBAAqB,CAAC;MAChD;MAEAS,cAAcA,CAACC,aAAqB,EAA4B;QAAA,IAA1BC,kBAAkB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;QAC/D,IAAI,CAACJ,MAAM,CAACO,GAAG,CAAC;UAAEC,GAAG,EAAE;QAAW,CAAE,CAAC;QACrC,MAAMC,aAAa,GAAG,IAAIC,OAAO,CAAO,CAACC,QAAQ,EAAEC,OAAO,KAAI;UAC7D,MAAMC,OAAO,GAAIC,GAAY,IAAU;YACtCF,OAAO,CAACE,GAAG,CAAC;YACZ,IAAI,CAACd,MAAM,CAACe,KAAK,CAAC;cAAEP,GAAG,EAAE,+CAA+C;cAAEM;YAAG,CAAE,CAAC;UACjF,CAAC;UACD,MAAME,SAAS,GAAGA,CAAA,KAAW;YAC5BL,QAAQ,EAAE;YACV,IAAI,CAACZ,UAAU,CAACkB,KAAK,EAAE;UACxB,CAAC;UACD,IAAI,CAAClB,UAAU,GAAG,IAAIJ,SAAS,CAACO,aAAa,EAAEC,kBAAkB,CAAC;UAClE,IAAI,CAACJ,UAAU,CAACmB,EAAE,CAAC,MAAM,EAAEF,SAAS,CAAC;UACrC,IAAI,CAACjB,UAAU,CAACmB,EAAE,CAAC,OAAO,EAAEL,OAAO,CAAC;QACrC,CAAC,CAAC;QACF,OAAOJ,aAAa;MACrB;MAEAU,WAAWA,CAAA;QACV,IAAI,CAACnB,MAAM,CAACoB,KAAK,CAAC;UAAEZ,GAAG,EAAE;QAA6B,CAAE,CAAC;QACzD,OAAO,KAAK;MACb;MAEA;MACAa,cAAcA,CAACC,OAAe,EAAEC,qBAA0B;QACzD,IAAI,CAACvB,MAAM,CAACoB,KAAK,CAAC;UAAEZ,GAAG,EAAE;QAAgC,CAAE,CAAC;MAC7D;MAEAU,EAAEA,CAACM,MAAc,EAAEC,gBAAiC;QACnD,IAAI,CAACzB,MAAM,CAACoB,KAAK,CAAC;UAAEZ,GAAG,EAAE;QAAoB,CAAE,CAAC;MACjD;MAEAkB,GAAGA,CAACF,MAAc,EAAEG,QAAiB;QACpC,IAAI,CAAC3B,MAAM,CAACoB,KAAK,CAAC;UAAEZ,GAAG,EAAE;QAAoB,CAAE,CAAC;MACjD;MAEAoB,eAAeA,CAAA;QACd,IAAI,CAAC5B,MAAM,CAAC6B,IAAI,CAAC;UAAErB,GAAG,EAAE;QAAmB,CAAE,CAAC;QAC9C,IAAI,CAACT,UAAU,CAACkB,KAAK,EAAE;MACxB;;IACAa,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f9d22783aea1e81d16d39d369a7aec194bb4115c"}
