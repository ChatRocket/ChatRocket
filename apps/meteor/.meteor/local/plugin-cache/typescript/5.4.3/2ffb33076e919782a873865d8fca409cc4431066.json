{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/FederationRoomEvents.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/FederationRoomEvents.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/FederationRoomEvents.ts","inputSourceMap":{"version":3,"file":"server/models/raw/FederationRoomEvents.ts","sourceRoot":"","sources":["server/models/raw/FederationRoomEvents.ts"],"names":[],"mappings":"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","sourcesContent":["import { eventTypes } from '@rocket.chat/core-typings';\nimport type { IRoom, ISubscription, IUser, IFederationEvent } from '@rocket.chat/core-typings';\nimport type { IFederationRoomEventsModel } from '@rocket.chat/model-typings';\nimport type { Db, DeleteResult, IndexDescription } from 'mongodb';\n\nimport { contextDefinitions } from '../../../app/federation/server/lib/context';\nimport { FederationEventsModel } from './FederationEvents';\n\nconst { type, contextQuery } = contextDefinitions.ROOM;\n\nexport class FederationRoomEvents extends FederationEventsModel implements IFederationRoomEventsModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'federation_room_events');\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { 'context.roomId': 1 } }];\n\t}\n\n\t// @ts-expect-error - TODO: Bad extends\n\tasync createGenesisEvent(origin: string, room: IRoom): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createGenesisEvent(origin, contextQuery(room._id), { contextType: type, room });\n\t}\n\n\tasync createDeleteRoomEvent(origin: string, roomId: string): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_DELETE, { roomId });\n\t}\n\n\tasync createAddUserEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tuser: IUser,\n\t\tsubscription: ISubscription,\n\t\tdomainsAfterAdd: string[],\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_ADD_USER, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t\tsubscription,\n\t\t\tdomainsAfterAdd,\n\t\t});\n\t}\n\n\tasync createRemoveUserEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tuser: IUser,\n\t\tdomainsAfterRemoval: string[],\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_REMOVE_USER, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t\tdomainsAfterRemoval,\n\t\t});\n\t}\n\n\tasync createUserLeftEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tuser: IUser,\n\t\tdomainsAfterLeave: string[],\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_USER_LEFT, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t\tdomainsAfterLeave,\n\t\t});\n\t}\n\n\tasync createMessageEvent(origin: string, roomId: string, message: string): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_MESSAGE, { message });\n\t}\n\n\tasync createEditMessageEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\toriginalMessage: { _id: string; msg: string; federation: Record<string, unknown> },\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\tconst message = {\n\t\t\t_id: originalMessage._id,\n\t\t\tmsg: originalMessage.msg,\n\t\t\tfederation: originalMessage.federation,\n\t\t};\n\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_EDIT_MESSAGE, {\n\t\t\tmessage,\n\t\t});\n\t}\n\n\tasync createDeleteMessageEvent(origin: string, roomId: string, messageId: string): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_DELETE_MESSAGE, {\n\t\t\troomId,\n\t\t\tmessageId,\n\t\t});\n\t}\n\n\tasync createSetMessageReactionEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tmessageId: string,\n\t\tusername: string,\n\t\treaction: string,\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_SET_MESSAGE_REACTION, {\n\t\t\troomId,\n\t\t\tmessageId,\n\t\t\tusername,\n\t\t\treaction,\n\t\t});\n\t}\n\n\tasync createUnsetMessageReactionEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tmessageId: string,\n\t\tusername: string,\n\t\treaction: string,\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_UNSET_MESSAGE_REACTION, {\n\t\t\troomId,\n\t\t\tmessageId,\n\t\t\tusername,\n\t\t\treaction,\n\t\t});\n\t}\n\n\tasync createMuteUserEvent(origin: string, roomId: string, user: IUser): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_MUTE_USER, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t});\n\t}\n\n\tasync createUnmuteUserEvent(origin: string, roomId: string, user: IUser): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_UNMUTE_USER, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t});\n\t}\n\n\tasync removeRoomEvents(roomId: string): Promise<DeleteResult> {\n\t\treturn super.removeContextEvents(contextQuery(roomId));\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/FederationRoomEvents.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/FederationRoomEvents.ts","inputSourceMap":{"version":3,"file":"server/models/raw/FederationRoomEvents.ts","sourceRoot":"","sources":["server/models/raw/FederationRoomEvents.ts"],"names":[],"mappings":"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","sourcesContent":["import { eventTypes } from '@rocket.chat/core-typings';\nimport type { IRoom, ISubscription, IUser, IFederationEvent } from '@rocket.chat/core-typings';\nimport type { IFederationRoomEventsModel } from '@rocket.chat/model-typings';\nimport type { Db, DeleteResult, IndexDescription } from 'mongodb';\n\nimport { contextDefinitions } from '../../../app/federation/server/lib/context';\nimport { FederationEventsModel } from './FederationEvents';\n\nconst { type, contextQuery } = contextDefinitions.ROOM;\n\nexport class FederationRoomEvents extends FederationEventsModel implements IFederationRoomEventsModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'federation_room_events');\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { 'context.roomId': 1 } }];\n\t}\n\n\t// @ts-expect-error - TODO: Bad extends\n\tasync createGenesisEvent(origin: string, room: IRoom): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createGenesisEvent(origin, contextQuery(room._id), { contextType: type, room });\n\t}\n\n\tasync createDeleteRoomEvent(origin: string, roomId: string): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_DELETE, { roomId });\n\t}\n\n\tasync createAddUserEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tuser: IUser,\n\t\tsubscription: ISubscription,\n\t\tdomainsAfterAdd: string[],\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_ADD_USER, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t\tsubscription,\n\t\t\tdomainsAfterAdd,\n\t\t});\n\t}\n\n\tasync createRemoveUserEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tuser: IUser,\n\t\tdomainsAfterRemoval: string[],\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_REMOVE_USER, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t\tdomainsAfterRemoval,\n\t\t});\n\t}\n\n\tasync createUserLeftEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tuser: IUser,\n\t\tdomainsAfterLeave: string[],\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_USER_LEFT, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t\tdomainsAfterLeave,\n\t\t});\n\t}\n\n\tasync createMessageEvent(origin: string, roomId: string, message: string): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_MESSAGE, { message });\n\t}\n\n\tasync createEditMessageEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\toriginalMessage: { _id: string; msg: string; federation: Record<string, unknown> },\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\tconst message = {\n\t\t\t_id: originalMessage._id,\n\t\t\tmsg: originalMessage.msg,\n\t\t\tfederation: originalMessage.federation,\n\t\t};\n\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_EDIT_MESSAGE, {\n\t\t\tmessage,\n\t\t});\n\t}\n\n\tasync createDeleteMessageEvent(origin: string, roomId: string, messageId: string): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_DELETE_MESSAGE, {\n\t\t\troomId,\n\t\t\tmessageId,\n\t\t});\n\t}\n\n\tasync createSetMessageReactionEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tmessageId: string,\n\t\tusername: string,\n\t\treaction: string,\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_SET_MESSAGE_REACTION, {\n\t\t\troomId,\n\t\t\tmessageId,\n\t\t\tusername,\n\t\t\treaction,\n\t\t});\n\t}\n\n\tasync createUnsetMessageReactionEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tmessageId: string,\n\t\tusername: string,\n\t\treaction: string,\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_UNSET_MESSAGE_REACTION, {\n\t\t\troomId,\n\t\t\tmessageId,\n\t\t\tusername,\n\t\t\treaction,\n\t\t});\n\t}\n\n\tasync createMuteUserEvent(origin: string, roomId: string, user: IUser): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_MUTE_USER, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t});\n\t}\n\n\tasync createUnmuteUserEvent(origin: string, roomId: string, user: IUser): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_UNMUTE_USER, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t});\n\t}\n\n\tasync removeRoomEvents(roomId: string): Promise<DeleteResult> {\n\t\treturn super.removeContextEvents(contextQuery(roomId));\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      FederationRoomEvents: () => FederationRoomEvents\n    });\n    let eventTypes;\n    module.link(\"@rocket.chat/core-typings\", {\n      eventTypes(v) {\n        eventTypes = v;\n      }\n    }, 0);\n    let contextDefinitions;\n    module.link(\"../../../app/federation/server/lib/context\", {\n      contextDefinitions(v) {\n        contextDefinitions = v;\n      }\n    }, 1);\n    let FederationEventsModel;\n    module.link(\"./FederationEvents\", {\n      FederationEventsModel(v) {\n        FederationEventsModel = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const {\n      type,\n      contextQuery\n    } = contextDefinitions.ROOM;\n    class FederationRoomEvents extends FederationEventsModel {\n      constructor(db) {\n        super(db, 'federation_room_events');\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            'context.roomId': 1\n          }\n        }];\n      }\n      // @ts-expect-error - TODO: Bad extends\n      async createGenesisEvent(origin, room) {\n        return super.createGenesisEvent(origin, contextQuery(room._id), {\n          contextType: type,\n          room\n        });\n      }\n      async createDeleteRoomEvent(origin, roomId) {\n        return super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_DELETE, {\n          roomId\n        });\n      }\n      async createAddUserEvent(origin, roomId, user, subscription, domainsAfterAdd) {\n        return super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_ADD_USER, {\n          roomId,\n          user,\n          subscription,\n          domainsAfterAdd\n        });\n      }\n      async createRemoveUserEvent(origin, roomId, user, domainsAfterRemoval) {\n        return super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_REMOVE_USER, {\n          roomId,\n          user,\n          domainsAfterRemoval\n        });\n      }\n      async createUserLeftEvent(origin, roomId, user, domainsAfterLeave) {\n        return super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_USER_LEFT, {\n          roomId,\n          user,\n          domainsAfterLeave\n        });\n      }\n      async createMessageEvent(origin, roomId, message) {\n        return super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_MESSAGE, {\n          message\n        });\n      }\n      async createEditMessageEvent(origin, roomId, originalMessage) {\n        const message = {\n          _id: originalMessage._id,\n          msg: originalMessage.msg,\n          federation: originalMessage.federation\n        };\n        return super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_EDIT_MESSAGE, {\n          message\n        });\n      }\n      async createDeleteMessageEvent(origin, roomId, messageId) {\n        return super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_DELETE_MESSAGE, {\n          roomId,\n          messageId\n        });\n      }\n      async createSetMessageReactionEvent(origin, roomId, messageId, username, reaction) {\n        return super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_SET_MESSAGE_REACTION, {\n          roomId,\n          messageId,\n          username,\n          reaction\n        });\n      }\n      async createUnsetMessageReactionEvent(origin, roomId, messageId, username, reaction) {\n        return super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_UNSET_MESSAGE_REACTION, {\n          roomId,\n          messageId,\n          username,\n          reaction\n        });\n      }\n      async createMuteUserEvent(origin, roomId, user) {\n        return super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_MUTE_USER, {\n          roomId,\n          user\n        });\n      }\n      async createUnmuteUserEvent(origin, roomId, user) {\n        return super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_UNMUTE_USER, {\n          roomId,\n          user\n        });\n      }\n      async removeRoomEvents(roomId) {\n        return super.removeContextEvents(contextQuery(roomId));\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","FederationRoomEvents","eventTypes","link","v","contextDefinitions","FederationEventsModel","__reifyWaitForDeps__","type","contextQuery","ROOM","constructor","db","modelIndexes","key","createGenesisEvent","origin","room","_id","contextType","createDeleteRoomEvent","roomId","createEvent","ROOM_DELETE","createAddUserEvent","user","subscription","domainsAfterAdd","ROOM_ADD_USER","createRemoveUserEvent","domainsAfterRemoval","ROOM_REMOVE_USER","createUserLeftEvent","domainsAfterLeave","ROOM_USER_LEFT","createMessageEvent","message","ROOM_MESSAGE","createEditMessageEvent","originalMessage","msg","federation","ROOM_EDIT_MESSAGE","createDeleteMessageEvent","messageId","ROOM_DELETE_MESSAGE","createSetMessageReactionEvent","username","reaction","ROOM_SET_MESSAGE_REACTION","createUnsetMessageReactionEvent","ROOM_UNSET_MESSAGE_REACTION","createMuteUserEvent","ROOM_MUTE_USER","createUnmuteUserEvent","ROOM_UNMUTE_USER","removeRoomEvents","removeContextEvents","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/FederationRoomEvents.ts"],"sourcesContent":["import { eventTypes } from '@rocket.chat/core-typings';\nimport type { IRoom, ISubscription, IUser, IFederationEvent } from '@rocket.chat/core-typings';\nimport type { IFederationRoomEventsModel } from '@rocket.chat/model-typings';\nimport type { Db, DeleteResult, IndexDescription } from 'mongodb';\n\nimport { contextDefinitions } from '../../../app/federation/server/lib/context';\nimport { FederationEventsModel } from './FederationEvents';\n\nconst { type, contextQuery } = contextDefinitions.ROOM;\n\nexport class FederationRoomEvents extends FederationEventsModel implements IFederationRoomEventsModel {\n\tconstructor(db: Db) {\n\t\tsuper(db, 'federation_room_events');\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { 'context.roomId': 1 } }];\n\t}\n\n\t// @ts-expect-error - TODO: Bad extends\n\tasync createGenesisEvent(origin: string, room: IRoom): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createGenesisEvent(origin, contextQuery(room._id), { contextType: type, room });\n\t}\n\n\tasync createDeleteRoomEvent(origin: string, roomId: string): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_DELETE, { roomId });\n\t}\n\n\tasync createAddUserEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tuser: IUser,\n\t\tsubscription: ISubscription,\n\t\tdomainsAfterAdd: string[],\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_ADD_USER, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t\tsubscription,\n\t\t\tdomainsAfterAdd,\n\t\t});\n\t}\n\n\tasync createRemoveUserEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tuser: IUser,\n\t\tdomainsAfterRemoval: string[],\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_REMOVE_USER, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t\tdomainsAfterRemoval,\n\t\t});\n\t}\n\n\tasync createUserLeftEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tuser: IUser,\n\t\tdomainsAfterLeave: string[],\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_USER_LEFT, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t\tdomainsAfterLeave,\n\t\t});\n\t}\n\n\tasync createMessageEvent(origin: string, roomId: string, message: string): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_MESSAGE, { message });\n\t}\n\n\tasync createEditMessageEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\toriginalMessage: { _id: string; msg: string; federation: Record<string, unknown> },\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\tconst message = {\n\t\t\t_id: originalMessage._id,\n\t\t\tmsg: originalMessage.msg,\n\t\t\tfederation: originalMessage.federation,\n\t\t};\n\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_EDIT_MESSAGE, {\n\t\t\tmessage,\n\t\t});\n\t}\n\n\tasync createDeleteMessageEvent(origin: string, roomId: string, messageId: string): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_DELETE_MESSAGE, {\n\t\t\troomId,\n\t\t\tmessageId,\n\t\t});\n\t}\n\n\tasync createSetMessageReactionEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tmessageId: string,\n\t\tusername: string,\n\t\treaction: string,\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_SET_MESSAGE_REACTION, {\n\t\t\troomId,\n\t\t\tmessageId,\n\t\t\tusername,\n\t\t\treaction,\n\t\t});\n\t}\n\n\tasync createUnsetMessageReactionEvent(\n\t\torigin: string,\n\t\troomId: string,\n\t\tmessageId: string,\n\t\tusername: string,\n\t\treaction: string,\n\t): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_UNSET_MESSAGE_REACTION, {\n\t\t\troomId,\n\t\t\tmessageId,\n\t\t\tusername,\n\t\t\treaction,\n\t\t});\n\t}\n\n\tasync createMuteUserEvent(origin: string, roomId: string, user: IUser): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_MUTE_USER, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t});\n\t}\n\n\tasync createUnmuteUserEvent(origin: string, roomId: string, user: IUser): Promise<Omit<IFederationEvent, '_updatedAt'>> {\n\t\treturn super.createEvent(origin, contextQuery(roomId), eventTypes.ROOM_UNMUTE_USER, {\n\t\t\troomId,\n\t\t\tuser,\n\t\t});\n\t}\n\n\tasync removeRoomEvents(roomId: string): Promise<DeleteResult> {\n\t\treturn super.removeContextEvents(contextQuery(roomId));\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2ffb33076e919782a873865d8fca409cc4431066"}
