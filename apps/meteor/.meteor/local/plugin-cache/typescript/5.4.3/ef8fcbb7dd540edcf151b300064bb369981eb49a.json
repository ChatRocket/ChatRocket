{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/database/DatabaseWatcher.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/database/DatabaseWatcher.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/database/DatabaseWatcher.ts","inputSourceMap":{"version":3,"file":"server/database/DatabaseWatcher.ts","sourceRoot":"","sources":["server/database/DatabaseWatcher.ts"],"names":[],"mappings":"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","sourcesContent":["import EventEmitter from 'events';\n\nimport type { IRocketChatRecord } from '@rocket.chat/core-typings';\nimport type { Logger } from '@rocket.chat/logger';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Timestamp, Db, ChangeStreamDeleteDocument, ChangeStreamInsertDocument, ChangeStreamUpdateDocument } from 'mongodb';\nimport { MongoClient } from 'mongodb';\n\nimport { convertChangeStreamPayload } from './convertChangeStreamPayload';\nimport { convertOplogPayload } from './convertOplogPayload';\nimport { getWatchCollections } from './watchCollections';\n\nconst instancePing = parseInt(String(process.env.MULTIPLE_INSTANCES_PING_INTERVAL)) || 10000;\n\nconst maxDocMs = instancePing * 4; // 4 times the ping interval\n\nexport type RealTimeData<T> = {\n\tid: string;\n\taction: 'insert' | 'update' | 'remove';\n\tclientAction: 'inserted' | 'updated' | 'removed';\n\tdata?: T;\n\tdiff?: Record<string, any>;\n\tunset?: Record<string, number>;\n\toplog?: true;\n};\n\nconst ignoreChangeStream = ['yes', 'true'].includes(String(process.env.IGNORE_CHANGE_STREAM).toLowerCase());\n\nconst useMeteorOplog = ['yes', 'true'].includes(String(process.env.USE_NATIVE_OPLOG).toLowerCase());\n\nconst useFullDocument = ['yes', 'true'].includes(String(process.env.CHANGESTREAM_FULL_DOCUMENT).toLowerCase());\n\nexport class DatabaseWatcher extends EventEmitter {\n\tprivate db: Db;\n\n\tprivate _oplogHandle?: any;\n\n\tprivate metrics?: any;\n\n\tprivate logger: Logger;\n\n\tprivate resumeRetryCount = 0;\n\n\t/**\n\t * Last doc timestamp received from a real time event\n\t */\n\tprivate lastDocTS: Date;\n\n\tprivate watchCollections: string[];\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tconstructor({ db, _oplogHandle, metrics, logger: LoggerClass }: { db: Db; _oplogHandle?: any; metrics?: any; logger: typeof Logger }) {\n\t\tsuper();\n\n\t\tthis.db = db;\n\t\tthis._oplogHandle = _oplogHandle;\n\t\tthis.metrics = metrics;\n\t\tthis.logger = new LoggerClass('DatabaseWatcher');\n\t}\n\n\tasync watch(): Promise<void> {\n\t\tthis.watchCollections = getWatchCollections();\n\n\t\tif (useMeteorOplog) {\n\t\t\t// TODO remove this when updating to Meteor 2.8\n\t\t\tthis.logger.warn(\n\t\t\t\t'Using USE_NATIVE_OPLOG=true is currently discouraged due to known performance issues. Please use IGNORE_CHANGE_STREAM=true instead.',\n\t\t\t);\n\t\t\tthis.watchMeteorOplog();\n\t\t\treturn;\n\t\t}\n\n\t\tif (ignoreChangeStream) {\n\t\t\tawait this.watchOplog();\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.watchChangeStream();\n\t\t} catch (err: unknown) {\n\t\t\tawait this.watchOplog();\n\t\t}\n\t}\n\n\tprivate async watchOplog(): Promise<void> {\n\t\tif (!process.env.MONGO_OPLOG_URL) {\n\t\t\tthrow Error('No $MONGO_OPLOG_URL provided');\n\t\t}\n\n\t\tconst isMasterDoc = await this.db.admin().command({ ismaster: 1 });\n\t\tif (!isMasterDoc?.setName) {\n\t\t\tthrow Error(\"$MONGO_URL should be a replica set's URL\");\n\t\t}\n\n\t\tconst dbName = this.db.databaseName;\n\n\t\tconst client = new MongoClient(process.env.MONGO_OPLOG_URL, {\n\t\t\tmaxPoolSize: 1,\n\t\t});\n\n\t\tif (client.db().databaseName !== 'local') {\n\t\t\tthrow Error(\"$MONGO_OPLOG_URL must be set to the 'local' database of a Mongo replica set\");\n\t\t}\n\n\t\tawait client.connect();\n\n\t\tthis.logger.startup('Using oplog');\n\n\t\tconst db = client.db();\n\n\t\tconst oplogCollection = db.collection('oplog.rs');\n\n\t\tconst lastOplogEntry = await oplogCollection.findOne<{ ts: Timestamp }>({}, { sort: { $natural: -1 }, projection: { _id: 0, ts: 1 } });\n\n\t\tconst oplogSelector = {\n\t\t\tns: new RegExp(`^(?:${[escapeRegExp(`${dbName}.`)].join('|')})`),\n\t\t\top: { $in: ['i', 'u', 'd'] },\n\t\t\t...(lastOplogEntry && { ts: { $gt: lastOplogEntry.ts } }),\n\t\t};\n\n\t\tconst cursor = oplogCollection.find(oplogSelector);\n\n\t\tcursor.addCursorFlag('tailable', true);\n\t\tcursor.addCursorFlag('awaitData', true);\n\t\tcursor.addCursorFlag('oplogReplay', true);\n\n\t\tconst stream = cursor.stream();\n\n\t\tstream.on('data', (doc) => {\n\t\t\tconst doesMatter = this.watchCollections.some((collection) => doc.ns === `${dbName}.${collection}`);\n\t\t\tif (!doesMatter) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emitDoc(\n\t\t\t\tdoc.ns.slice(dbName.length + 1),\n\t\t\t\tconvertOplogPayload({\n\t\t\t\t\tid: doc.op === 'u' ? doc.o2._id : doc.o._id,\n\t\t\t\t\top: doc,\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate watchMeteorOplog(): void {\n\t\tif (!this._oplogHandle) {\n\t\t\tthrow new Error('no-oplog-handle');\n\t\t}\n\n\t\tthis.logger.startup('Using Meteor oplog');\n\n\t\tthis.watchCollections.forEach((collection) => {\n\t\t\tthis._oplogHandle.onOplogEntry({ collection }, (event: any) => {\n\t\t\t\tthis.emitDoc(collection, convertOplogPayload(event));\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate watchChangeStream(resumeToken?: unknown): void {\n\t\ttry {\n\t\t\tconst options = {\n\t\t\t\t...(useFullDocument ? { fullDocument: 'updateLookup' } : {}),\n\t\t\t\t...(resumeToken ? { startAfter: resumeToken } : {}),\n\t\t\t};\n\n\t\t\tlet lastEvent: unknown;\n\n\t\t\tconst changeStream = this.db.watch<\n\t\t\t\tIRocketChatRecord,\n\t\t\t\t| ChangeStreamInsertDocument<IRocketChatRecord>\n\t\t\t\t| ChangeStreamUpdateDocument<IRocketChatRecord>\n\t\t\t\t| ChangeStreamDeleteDocument<IRocketChatRecord>\n\t\t\t>(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t$match: {\n\t\t\t\t\t\t\t'operationType': { $in: ['insert', 'update', 'delete'] },\n\t\t\t\t\t\t\t'ns.coll': { $in: this.watchCollections },\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\toptions,\n\t\t\t);\n\t\t\tchangeStream.on('change', (event) => {\n\t\t\t\t// reset retry counter\n\t\t\t\tthis.resumeRetryCount = 0;\n\n\t\t\t\t// save last event to resume on error\n\t\t\t\tlastEvent = event._id;\n\n\t\t\t\tthis.emitDoc(event.ns.coll, convertChangeStreamPayload(event));\n\t\t\t});\n\n\t\t\tchangeStream.on('error', (err) => {\n\t\t\t\tif (this.resumeRetryCount++ < 5) {\n\t\t\t\t\tthis.logger.warn({ msg: `Change stream error. Trying resume after ${this.resumeRetryCount} seconds.`, err });\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.watchChangeStream(lastEvent);\n\t\t\t\t\t}, this.resumeRetryCount * 1000);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\t\tthis.logger.startup('Using change streams');\n\t\t} catch (err: unknown) {\n\t\t\tthis.logger.fatal({ msg: 'Cannot resume change stream.', err });\n\t\t}\n\t}\n\n\tprivate emitDoc(collection: string, doc: RealTimeData<IRocketChatRecord> | void): void {\n\t\tif (!doc) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastDocTS = new Date();\n\n\t\tthis.metrics?.oplog.inc({\n\t\t\tcollection,\n\t\t\top: doc.action,\n\t\t});\n\n\t\tthis.emit(collection, doc);\n\t}\n\n\ton<T>(collection: string, callback: (event: RealTimeData<T>) => void): this {\n\t\treturn super.on(collection, callback);\n\t}\n\n\t/**\n\t * @returns the last timestamp delta in miliseconds received from a real time event\n\t */\n\tgetLastDocDelta(): number {\n\t\treturn this.lastDocTS ? Date.now() - this.lastDocTS.getTime() : Infinity;\n\t}\n\n\t/**\n\t * @returns Indicates if the last document received is older than it should be. If that happens, it means that the oplog is not working properly\n\t */\n\tisLastDocDelayed(): boolean {\n\t\treturn this.getLastDocDelta() > maxDocMs;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/database/DatabaseWatcher.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/database/DatabaseWatcher.ts","inputSourceMap":{"version":3,"file":"server/database/DatabaseWatcher.ts","sourceRoot":"","sources":["server/database/DatabaseWatcher.ts"],"names":[],"mappings":"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","sourcesContent":["import EventEmitter from 'events';\n\nimport type { IRocketChatRecord } from '@rocket.chat/core-typings';\nimport type { Logger } from '@rocket.chat/logger';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Timestamp, Db, ChangeStreamDeleteDocument, ChangeStreamInsertDocument, ChangeStreamUpdateDocument } from 'mongodb';\nimport { MongoClient } from 'mongodb';\n\nimport { convertChangeStreamPayload } from './convertChangeStreamPayload';\nimport { convertOplogPayload } from './convertOplogPayload';\nimport { getWatchCollections } from './watchCollections';\n\nconst instancePing = parseInt(String(process.env.MULTIPLE_INSTANCES_PING_INTERVAL)) || 10000;\n\nconst maxDocMs = instancePing * 4; // 4 times the ping interval\n\nexport type RealTimeData<T> = {\n\tid: string;\n\taction: 'insert' | 'update' | 'remove';\n\tclientAction: 'inserted' | 'updated' | 'removed';\n\tdata?: T;\n\tdiff?: Record<string, any>;\n\tunset?: Record<string, number>;\n\toplog?: true;\n};\n\nconst ignoreChangeStream = ['yes', 'true'].includes(String(process.env.IGNORE_CHANGE_STREAM).toLowerCase());\n\nconst useMeteorOplog = ['yes', 'true'].includes(String(process.env.USE_NATIVE_OPLOG).toLowerCase());\n\nconst useFullDocument = ['yes', 'true'].includes(String(process.env.CHANGESTREAM_FULL_DOCUMENT).toLowerCase());\n\nexport class DatabaseWatcher extends EventEmitter {\n\tprivate db: Db;\n\n\tprivate _oplogHandle?: any;\n\n\tprivate metrics?: any;\n\n\tprivate logger: Logger;\n\n\tprivate resumeRetryCount = 0;\n\n\t/**\n\t * Last doc timestamp received from a real time event\n\t */\n\tprivate lastDocTS: Date;\n\n\tprivate watchCollections: string[];\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tconstructor({ db, _oplogHandle, metrics, logger: LoggerClass }: { db: Db; _oplogHandle?: any; metrics?: any; logger: typeof Logger }) {\n\t\tsuper();\n\n\t\tthis.db = db;\n\t\tthis._oplogHandle = _oplogHandle;\n\t\tthis.metrics = metrics;\n\t\tthis.logger = new LoggerClass('DatabaseWatcher');\n\t}\n\n\tasync watch(): Promise<void> {\n\t\tthis.watchCollections = getWatchCollections();\n\n\t\tif (useMeteorOplog) {\n\t\t\t// TODO remove this when updating to Meteor 2.8\n\t\t\tthis.logger.warn(\n\t\t\t\t'Using USE_NATIVE_OPLOG=true is currently discouraged due to known performance issues. Please use IGNORE_CHANGE_STREAM=true instead.',\n\t\t\t);\n\t\t\tthis.watchMeteorOplog();\n\t\t\treturn;\n\t\t}\n\n\t\tif (ignoreChangeStream) {\n\t\t\tawait this.watchOplog();\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.watchChangeStream();\n\t\t} catch (err: unknown) {\n\t\t\tawait this.watchOplog();\n\t\t}\n\t}\n\n\tprivate async watchOplog(): Promise<void> {\n\t\tif (!process.env.MONGO_OPLOG_URL) {\n\t\t\tthrow Error('No $MONGO_OPLOG_URL provided');\n\t\t}\n\n\t\tconst isMasterDoc = await this.db.admin().command({ ismaster: 1 });\n\t\tif (!isMasterDoc?.setName) {\n\t\t\tthrow Error(\"$MONGO_URL should be a replica set's URL\");\n\t\t}\n\n\t\tconst dbName = this.db.databaseName;\n\n\t\tconst client = new MongoClient(process.env.MONGO_OPLOG_URL, {\n\t\t\tmaxPoolSize: 1,\n\t\t});\n\n\t\tif (client.db().databaseName !== 'local') {\n\t\t\tthrow Error(\"$MONGO_OPLOG_URL must be set to the 'local' database of a Mongo replica set\");\n\t\t}\n\n\t\tawait client.connect();\n\n\t\tthis.logger.startup('Using oplog');\n\n\t\tconst db = client.db();\n\n\t\tconst oplogCollection = db.collection('oplog.rs');\n\n\t\tconst lastOplogEntry = await oplogCollection.findOne<{ ts: Timestamp }>({}, { sort: { $natural: -1 }, projection: { _id: 0, ts: 1 } });\n\n\t\tconst oplogSelector = {\n\t\t\tns: new RegExp(`^(?:${[escapeRegExp(`${dbName}.`)].join('|')})`),\n\t\t\top: { $in: ['i', 'u', 'd'] },\n\t\t\t...(lastOplogEntry && { ts: { $gt: lastOplogEntry.ts } }),\n\t\t};\n\n\t\tconst cursor = oplogCollection.find(oplogSelector);\n\n\t\tcursor.addCursorFlag('tailable', true);\n\t\tcursor.addCursorFlag('awaitData', true);\n\t\tcursor.addCursorFlag('oplogReplay', true);\n\n\t\tconst stream = cursor.stream();\n\n\t\tstream.on('data', (doc) => {\n\t\t\tconst doesMatter = this.watchCollections.some((collection) => doc.ns === `${dbName}.${collection}`);\n\t\t\tif (!doesMatter) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emitDoc(\n\t\t\t\tdoc.ns.slice(dbName.length + 1),\n\t\t\t\tconvertOplogPayload({\n\t\t\t\t\tid: doc.op === 'u' ? doc.o2._id : doc.o._id,\n\t\t\t\t\top: doc,\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate watchMeteorOplog(): void {\n\t\tif (!this._oplogHandle) {\n\t\t\tthrow new Error('no-oplog-handle');\n\t\t}\n\n\t\tthis.logger.startup('Using Meteor oplog');\n\n\t\tthis.watchCollections.forEach((collection) => {\n\t\t\tthis._oplogHandle.onOplogEntry({ collection }, (event: any) => {\n\t\t\t\tthis.emitDoc(collection, convertOplogPayload(event));\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate watchChangeStream(resumeToken?: unknown): void {\n\t\ttry {\n\t\t\tconst options = {\n\t\t\t\t...(useFullDocument ? { fullDocument: 'updateLookup' } : {}),\n\t\t\t\t...(resumeToken ? { startAfter: resumeToken } : {}),\n\t\t\t};\n\n\t\t\tlet lastEvent: unknown;\n\n\t\t\tconst changeStream = this.db.watch<\n\t\t\t\tIRocketChatRecord,\n\t\t\t\t| ChangeStreamInsertDocument<IRocketChatRecord>\n\t\t\t\t| ChangeStreamUpdateDocument<IRocketChatRecord>\n\t\t\t\t| ChangeStreamDeleteDocument<IRocketChatRecord>\n\t\t\t>(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t$match: {\n\t\t\t\t\t\t\t'operationType': { $in: ['insert', 'update', 'delete'] },\n\t\t\t\t\t\t\t'ns.coll': { $in: this.watchCollections },\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\toptions,\n\t\t\t);\n\t\t\tchangeStream.on('change', (event) => {\n\t\t\t\t// reset retry counter\n\t\t\t\tthis.resumeRetryCount = 0;\n\n\t\t\t\t// save last event to resume on error\n\t\t\t\tlastEvent = event._id;\n\n\t\t\t\tthis.emitDoc(event.ns.coll, convertChangeStreamPayload(event));\n\t\t\t});\n\n\t\t\tchangeStream.on('error', (err) => {\n\t\t\t\tif (this.resumeRetryCount++ < 5) {\n\t\t\t\t\tthis.logger.warn({ msg: `Change stream error. Trying resume after ${this.resumeRetryCount} seconds.`, err });\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.watchChangeStream(lastEvent);\n\t\t\t\t\t}, this.resumeRetryCount * 1000);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\t\tthis.logger.startup('Using change streams');\n\t\t} catch (err: unknown) {\n\t\t\tthis.logger.fatal({ msg: 'Cannot resume change stream.', err });\n\t\t}\n\t}\n\n\tprivate emitDoc(collection: string, doc: RealTimeData<IRocketChatRecord> | void): void {\n\t\tif (!doc) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastDocTS = new Date();\n\n\t\tthis.metrics?.oplog.inc({\n\t\t\tcollection,\n\t\t\top: doc.action,\n\t\t});\n\n\t\tthis.emit(collection, doc);\n\t}\n\n\ton<T>(collection: string, callback: (event: RealTimeData<T>) => void): this {\n\t\treturn super.on(collection, callback);\n\t}\n\n\t/**\n\t * @returns the last timestamp delta in miliseconds received from a real time event\n\t */\n\tgetLastDocDelta(): number {\n\t\treturn this.lastDocTS ? Date.now() - this.lastDocTS.getTime() : Infinity;\n\t}\n\n\t/**\n\t * @returns Indicates if the last document received is older than it should be. If that happens, it means that the oplog is not working properly\n\t */\n\tisLastDocDelayed(): boolean {\n\t\treturn this.getLastDocDelta() > maxDocMs;\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      DatabaseWatcher: () => DatabaseWatcher\n    });\n    let EventEmitter;\n    module.link(\"events\", {\n      default(v) {\n        EventEmitter = v;\n      }\n    }, 0);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 1);\n    let MongoClient;\n    module.link(\"mongodb\", {\n      MongoClient(v) {\n        MongoClient = v;\n      }\n    }, 2);\n    let convertChangeStreamPayload;\n    module.link(\"./convertChangeStreamPayload\", {\n      convertChangeStreamPayload(v) {\n        convertChangeStreamPayload = v;\n      }\n    }, 3);\n    let convertOplogPayload;\n    module.link(\"./convertOplogPayload\", {\n      convertOplogPayload(v) {\n        convertOplogPayload = v;\n      }\n    }, 4);\n    let getWatchCollections;\n    module.link(\"./watchCollections\", {\n      getWatchCollections(v) {\n        getWatchCollections = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const instancePing = parseInt(String(process.env.MULTIPLE_INSTANCES_PING_INTERVAL)) || 10000;\n    const maxDocMs = instancePing * 4; // 4 times the ping interval\n    const ignoreChangeStream = ['yes', 'true'].includes(String(process.env.IGNORE_CHANGE_STREAM).toLowerCase());\n    const useMeteorOplog = ['yes', 'true'].includes(String(process.env.USE_NATIVE_OPLOG).toLowerCase());\n    const useFullDocument = ['yes', 'true'].includes(String(process.env.CHANGESTREAM_FULL_DOCUMENT).toLowerCase());\n    class DatabaseWatcher extends EventEmitter {\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      constructor(_ref) {\n        let {\n          db,\n          _oplogHandle,\n          metrics,\n          logger: LoggerClass\n        } = _ref;\n        super();\n        this.db = void 0;\n        this._oplogHandle = void 0;\n        this.metrics = void 0;\n        this.logger = void 0;\n        this.resumeRetryCount = 0;\n        /**\n         * Last doc timestamp received from a real time event\n         */\n        this.lastDocTS = void 0;\n        this.watchCollections = void 0;\n        this.db = db;\n        this._oplogHandle = _oplogHandle;\n        this.metrics = metrics;\n        this.logger = new LoggerClass('DatabaseWatcher');\n      }\n      async watch() {\n        this.watchCollections = getWatchCollections();\n        if (useMeteorOplog) {\n          // TODO remove this when updating to Meteor 2.8\n          this.logger.warn('Using USE_NATIVE_OPLOG=true is currently discouraged due to known performance issues. Please use IGNORE_CHANGE_STREAM=true instead.');\n          this.watchMeteorOplog();\n          return;\n        }\n        if (ignoreChangeStream) {\n          await this.watchOplog();\n          return;\n        }\n        try {\n          this.watchChangeStream();\n        } catch (err) {\n          await this.watchOplog();\n        }\n      }\n      async watchOplog() {\n        if (!process.env.MONGO_OPLOG_URL) {\n          throw Error('No $MONGO_OPLOG_URL provided');\n        }\n        const isMasterDoc = await this.db.admin().command({\n          ismaster: 1\n        });\n        if (!(isMasterDoc !== null && isMasterDoc !== void 0 && isMasterDoc.setName)) {\n          throw Error(\"$MONGO_URL should be a replica set's URL\");\n        }\n        const dbName = this.db.databaseName;\n        const client = new MongoClient(process.env.MONGO_OPLOG_URL, {\n          maxPoolSize: 1\n        });\n        if (client.db().databaseName !== 'local') {\n          throw Error(\"$MONGO_OPLOG_URL must be set to the 'local' database of a Mongo replica set\");\n        }\n        await client.connect();\n        this.logger.startup('Using oplog');\n        const db = client.db();\n        const oplogCollection = db.collection('oplog.rs');\n        const lastOplogEntry = await oplogCollection.findOne({}, {\n          sort: {\n            $natural: -1\n          },\n          projection: {\n            _id: 0,\n            ts: 1\n          }\n        });\n        const oplogSelector = _objectSpread({\n          ns: new RegExp(\"^(?:\".concat([escapeRegExp(\"\".concat(dbName, \".\"))].join('|'), \")\")),\n          op: {\n            $in: ['i', 'u', 'd']\n          }\n        }, lastOplogEntry && {\n          ts: {\n            $gt: lastOplogEntry.ts\n          }\n        });\n        const cursor = oplogCollection.find(oplogSelector);\n        cursor.addCursorFlag('tailable', true);\n        cursor.addCursorFlag('awaitData', true);\n        cursor.addCursorFlag('oplogReplay', true);\n        const stream = cursor.stream();\n        stream.on('data', doc => {\n          const doesMatter = this.watchCollections.some(collection => doc.ns === \"\".concat(dbName, \".\").concat(collection));\n          if (!doesMatter) {\n            return;\n          }\n          this.emitDoc(doc.ns.slice(dbName.length + 1), convertOplogPayload({\n            id: doc.op === 'u' ? doc.o2._id : doc.o._id,\n            op: doc\n          }));\n        });\n      }\n      watchMeteorOplog() {\n        if (!this._oplogHandle) {\n          throw new Error('no-oplog-handle');\n        }\n        this.logger.startup('Using Meteor oplog');\n        this.watchCollections.forEach(collection => {\n          this._oplogHandle.onOplogEntry({\n            collection\n          }, event => {\n            this.emitDoc(collection, convertOplogPayload(event));\n          });\n        });\n      }\n      watchChangeStream(resumeToken) {\n        try {\n          const options = _objectSpread(_objectSpread({}, useFullDocument ? {\n            fullDocument: 'updateLookup'\n          } : {}), resumeToken ? {\n            startAfter: resumeToken\n          } : {});\n          let lastEvent;\n          const changeStream = this.db.watch([{\n            $match: {\n              'operationType': {\n                $in: ['insert', 'update', 'delete']\n              },\n              'ns.coll': {\n                $in: this.watchCollections\n              }\n            }\n          }], options);\n          changeStream.on('change', event => {\n            // reset retry counter\n            this.resumeRetryCount = 0;\n            // save last event to resume on error\n            lastEvent = event._id;\n            this.emitDoc(event.ns.coll, convertChangeStreamPayload(event));\n          });\n          changeStream.on('error', err => {\n            if (this.resumeRetryCount++ < 5) {\n              this.logger.warn({\n                msg: \"Change stream error. Trying resume after \".concat(this.resumeRetryCount, \" seconds.\"),\n                err\n              });\n              setTimeout(() => {\n                this.watchChangeStream(lastEvent);\n              }, this.resumeRetryCount * 1000);\n              return;\n            }\n            throw err;\n          });\n          this.logger.startup('Using change streams');\n        } catch (err) {\n          this.logger.fatal({\n            msg: 'Cannot resume change stream.',\n            err\n          });\n        }\n      }\n      emitDoc(collection, doc) {\n        var _this$metrics;\n        if (!doc) {\n          return;\n        }\n        this.lastDocTS = new Date();\n        (_this$metrics = this.metrics) === null || _this$metrics === void 0 ? void 0 : _this$metrics.oplog.inc({\n          collection,\n          op: doc.action\n        });\n        this.emit(collection, doc);\n      }\n      on(collection, callback) {\n        return super.on(collection, callback);\n      }\n      /**\n       * @returns the last timestamp delta in miliseconds received from a real time event\n       */\n      getLastDocDelta() {\n        return this.lastDocTS ? Date.now() - this.lastDocTS.getTime() : Infinity;\n      }\n      /**\n       * @returns Indicates if the last document received is older than it should be. If that happens, it means that the oplog is not working properly\n       */\n      isLastDocDelayed() {\n        return this.getLastDocDelta() > maxDocMs;\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","DatabaseWatcher","EventEmitter","escapeRegExp","MongoClient","convertChangeStreamPayload","convertOplogPayload","getWatchCollections","__reifyWaitForDeps__","instancePing","parseInt","String","process","env","MULTIPLE_INSTANCES_PING_INTERVAL","maxDocMs","ignoreChangeStream","includes","IGNORE_CHANGE_STREAM","toLowerCase","useMeteorOplog","USE_NATIVE_OPLOG","useFullDocument","CHANGESTREAM_FULL_DOCUMENT","constructor","_ref","db","_oplogHandle","metrics","logger","LoggerClass","resumeRetryCount","lastDocTS","watchCollections","watch","warn","watchMeteorOplog","watchOplog","watchChangeStream","err","MONGO_OPLOG_URL","Error","isMasterDoc","admin","command","ismaster","setName","dbName","databaseName","client","maxPoolSize","connect","startup","oplogCollection","collection","lastOplogEntry","findOne","sort","$natural","projection","_id","ts","oplogSelector","ns","RegExp","concat","join","op","$in","$gt","cursor","find","addCursorFlag","stream","on","doc","doesMatter","some","emitDoc","slice","length","id","o2","o","forEach","onOplogEntry","event","resumeToken","options","fullDocument","startAfter","lastEvent","changeStream","$match","coll","msg","setTimeout","fatal","_this$metrics","Date","oplog","inc","action","emit","callback","getLastDocDelta","now","getTime","Infinity","isLastDocDelayed","__reify_async_result__","_reifyError","self","async"],"sources":["server/database/DatabaseWatcher.ts"],"sourcesContent":["import EventEmitter from 'events';\n\nimport type { IRocketChatRecord } from '@rocket.chat/core-typings';\nimport type { Logger } from '@rocket.chat/logger';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Timestamp, Db, ChangeStreamDeleteDocument, ChangeStreamInsertDocument, ChangeStreamUpdateDocument } from 'mongodb';\nimport { MongoClient } from 'mongodb';\n\nimport { convertChangeStreamPayload } from './convertChangeStreamPayload';\nimport { convertOplogPayload } from './convertOplogPayload';\nimport { getWatchCollections } from './watchCollections';\n\nconst instancePing = parseInt(String(process.env.MULTIPLE_INSTANCES_PING_INTERVAL)) || 10000;\n\nconst maxDocMs = instancePing * 4; // 4 times the ping interval\n\nexport type RealTimeData<T> = {\n\tid: string;\n\taction: 'insert' | 'update' | 'remove';\n\tclientAction: 'inserted' | 'updated' | 'removed';\n\tdata?: T;\n\tdiff?: Record<string, any>;\n\tunset?: Record<string, number>;\n\toplog?: true;\n};\n\nconst ignoreChangeStream = ['yes', 'true'].includes(String(process.env.IGNORE_CHANGE_STREAM).toLowerCase());\n\nconst useMeteorOplog = ['yes', 'true'].includes(String(process.env.USE_NATIVE_OPLOG).toLowerCase());\n\nconst useFullDocument = ['yes', 'true'].includes(String(process.env.CHANGESTREAM_FULL_DOCUMENT).toLowerCase());\n\nexport class DatabaseWatcher extends EventEmitter {\n\tprivate db: Db;\n\n\tprivate _oplogHandle?: any;\n\n\tprivate metrics?: any;\n\n\tprivate logger: Logger;\n\n\tprivate resumeRetryCount = 0;\n\n\t/**\n\t * Last doc timestamp received from a real time event\n\t */\n\tprivate lastDocTS: Date;\n\n\tprivate watchCollections: string[];\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tconstructor({ db, _oplogHandle, metrics, logger: LoggerClass }: { db: Db; _oplogHandle?: any; metrics?: any; logger: typeof Logger }) {\n\t\tsuper();\n\n\t\tthis.db = db;\n\t\tthis._oplogHandle = _oplogHandle;\n\t\tthis.metrics = metrics;\n\t\tthis.logger = new LoggerClass('DatabaseWatcher');\n\t}\n\n\tasync watch(): Promise<void> {\n\t\tthis.watchCollections = getWatchCollections();\n\n\t\tif (useMeteorOplog) {\n\t\t\t// TODO remove this when updating to Meteor 2.8\n\t\t\tthis.logger.warn(\n\t\t\t\t'Using USE_NATIVE_OPLOG=true is currently discouraged due to known performance issues. Please use IGNORE_CHANGE_STREAM=true instead.',\n\t\t\t);\n\t\t\tthis.watchMeteorOplog();\n\t\t\treturn;\n\t\t}\n\n\t\tif (ignoreChangeStream) {\n\t\t\tawait this.watchOplog();\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.watchChangeStream();\n\t\t} catch (err: unknown) {\n\t\t\tawait this.watchOplog();\n\t\t}\n\t}\n\n\tprivate async watchOplog(): Promise<void> {\n\t\tif (!process.env.MONGO_OPLOG_URL) {\n\t\t\tthrow Error('No $MONGO_OPLOG_URL provided');\n\t\t}\n\n\t\tconst isMasterDoc = await this.db.admin().command({ ismaster: 1 });\n\t\tif (!isMasterDoc?.setName) {\n\t\t\tthrow Error(\"$MONGO_URL should be a replica set's URL\");\n\t\t}\n\n\t\tconst dbName = this.db.databaseName;\n\n\t\tconst client = new MongoClient(process.env.MONGO_OPLOG_URL, {\n\t\t\tmaxPoolSize: 1,\n\t\t});\n\n\t\tif (client.db().databaseName !== 'local') {\n\t\t\tthrow Error(\"$MONGO_OPLOG_URL must be set to the 'local' database of a Mongo replica set\");\n\t\t}\n\n\t\tawait client.connect();\n\n\t\tthis.logger.startup('Using oplog');\n\n\t\tconst db = client.db();\n\n\t\tconst oplogCollection = db.collection('oplog.rs');\n\n\t\tconst lastOplogEntry = await oplogCollection.findOne<{ ts: Timestamp }>({}, { sort: { $natural: -1 }, projection: { _id: 0, ts: 1 } });\n\n\t\tconst oplogSelector = {\n\t\t\tns: new RegExp(`^(?:${[escapeRegExp(`${dbName}.`)].join('|')})`),\n\t\t\top: { $in: ['i', 'u', 'd'] },\n\t\t\t...(lastOplogEntry && { ts: { $gt: lastOplogEntry.ts } }),\n\t\t};\n\n\t\tconst cursor = oplogCollection.find(oplogSelector);\n\n\t\tcursor.addCursorFlag('tailable', true);\n\t\tcursor.addCursorFlag('awaitData', true);\n\t\tcursor.addCursorFlag('oplogReplay', true);\n\n\t\tconst stream = cursor.stream();\n\n\t\tstream.on('data', (doc) => {\n\t\t\tconst doesMatter = this.watchCollections.some((collection) => doc.ns === `${dbName}.${collection}`);\n\t\t\tif (!doesMatter) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.emitDoc(\n\t\t\t\tdoc.ns.slice(dbName.length + 1),\n\t\t\t\tconvertOplogPayload({\n\t\t\t\t\tid: doc.op === 'u' ? doc.o2._id : doc.o._id,\n\t\t\t\t\top: doc,\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate watchMeteorOplog(): void {\n\t\tif (!this._oplogHandle) {\n\t\t\tthrow new Error('no-oplog-handle');\n\t\t}\n\n\t\tthis.logger.startup('Using Meteor oplog');\n\n\t\tthis.watchCollections.forEach((collection) => {\n\t\t\tthis._oplogHandle.onOplogEntry({ collection }, (event: any) => {\n\t\t\t\tthis.emitDoc(collection, convertOplogPayload(event));\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate watchChangeStream(resumeToken?: unknown): void {\n\t\ttry {\n\t\t\tconst options = {\n\t\t\t\t...(useFullDocument ? { fullDocument: 'updateLookup' } : {}),\n\t\t\t\t...(resumeToken ? { startAfter: resumeToken } : {}),\n\t\t\t};\n\n\t\t\tlet lastEvent: unknown;\n\n\t\t\tconst changeStream = this.db.watch<\n\t\t\t\tIRocketChatRecord,\n\t\t\t\t| ChangeStreamInsertDocument<IRocketChatRecord>\n\t\t\t\t| ChangeStreamUpdateDocument<IRocketChatRecord>\n\t\t\t\t| ChangeStreamDeleteDocument<IRocketChatRecord>\n\t\t\t>(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t$match: {\n\t\t\t\t\t\t\t'operationType': { $in: ['insert', 'update', 'delete'] },\n\t\t\t\t\t\t\t'ns.coll': { $in: this.watchCollections },\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\toptions,\n\t\t\t);\n\t\t\tchangeStream.on('change', (event) => {\n\t\t\t\t// reset retry counter\n\t\t\t\tthis.resumeRetryCount = 0;\n\n\t\t\t\t// save last event to resume on error\n\t\t\t\tlastEvent = event._id;\n\n\t\t\t\tthis.emitDoc(event.ns.coll, convertChangeStreamPayload(event));\n\t\t\t});\n\n\t\t\tchangeStream.on('error', (err) => {\n\t\t\t\tif (this.resumeRetryCount++ < 5) {\n\t\t\t\t\tthis.logger.warn({ msg: `Change stream error. Trying resume after ${this.resumeRetryCount} seconds.`, err });\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.watchChangeStream(lastEvent);\n\t\t\t\t\t}, this.resumeRetryCount * 1000);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\t\tthis.logger.startup('Using change streams');\n\t\t} catch (err: unknown) {\n\t\t\tthis.logger.fatal({ msg: 'Cannot resume change stream.', err });\n\t\t}\n\t}\n\n\tprivate emitDoc(collection: string, doc: RealTimeData<IRocketChatRecord> | void): void {\n\t\tif (!doc) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastDocTS = new Date();\n\n\t\tthis.metrics?.oplog.inc({\n\t\t\tcollection,\n\t\t\top: doc.action,\n\t\t});\n\n\t\tthis.emit(collection, doc);\n\t}\n\n\ton<T>(collection: string, callback: (event: RealTimeData<T>) => void): this {\n\t\treturn super.on(collection, callback);\n\t}\n\n\t/**\n\t * @returns the last timestamp delta in miliseconds received from a real time event\n\t */\n\tgetLastDocDelta(): number {\n\t\treturn this.lastDocTS ? Date.now() - this.lastDocTS.getTime() : Infinity;\n\t}\n\n\t/**\n\t * @returns Indicates if the last document received is older than it should be. If that happens, it means that the oplog is not working properly\n\t */\n\tisLastDocDelayed(): boolean {\n\t\treturn this.getLastDocDelta() > maxDocMs;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ef8fcbb7dd540edcf151b300064bb369981eb49a"}
