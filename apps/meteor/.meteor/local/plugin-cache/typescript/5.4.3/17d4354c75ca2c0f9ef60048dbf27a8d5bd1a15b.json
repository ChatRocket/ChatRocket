{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/models/client/models/ChatSubscription.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/models/client/models/ChatSubscription.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/models/client/models/ChatSubscription.ts","inputSourceMap":{"version":3,"file":"app/models/client/models/ChatSubscription.ts","sourceRoot":"","sources":["app/models/client/models/ChatSubscription.ts"],"names":[],"mappings":"AACA,OAAO,GAAG,MAAM,KAAK,CAAC;AACtB,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAElE,qMAAqM;AACrM,MAAM,CAAC,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,UAAU,EAAE;IAChF,YAAY,EAAE,GAAG,CAChB,UAA0D,IAAkB,EAAE,MAAoB,EAAE,GAAkB;QACrH,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,OAAO,KAAK,CAAC;QACd,CAAC;QAED,MAAM,KAAK,GAAG;YACb,GAAG;SACH,CAAC;QAEF,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAEnE,OAAO,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACjG,CAAC,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAC1C;IAED,gBAAgB,EAAE,GAAG,CACpB,UAA0D,KAAoC,EAAE,KAAc,EAAE,OAAa;QAC5H,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAE/C,MAAM,KAAK,GAAgB;YAC1B,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE;SACrB,CAAC;QAEF,IAAI,KAAK,EAAE,CAAC;YACX,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QACnB,CAAC;QAED,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;QAE/C,MAAM,IAAI,GAAG,aAAa;aACxB,GAAG,CAAC,CAAC,YAAY,EAAE,EAAE;YACrB,IAAI,OAAO,YAAY,CAAC,CAAC,KAAK,WAAW,IAAI,OAAO,YAAY,CAAC,CAAC,CAAC,GAAG,KAAK,WAAW,EAAE,CAAC;gBACxF,OAAO,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC;YAC3B,CAAC;YAED,OAAO,SAAS,CAAC;QAClB,CAAC,CAAC;aACD,MAAM,CAAC,QAAQ,CAAC,CAAC;QAEnB,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;IAC3D,CAAC,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAC1C;CACD,CAAC,CAAC","sourcesContent":["import type { IRole, IRoom, IUser } from '@rocket.chat/core-typings';\nimport mem from 'mem';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter } from 'mongodb';\n\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { CachedChatSubscription } from './CachedChatSubscription';\n\n/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\nexport const ChatSubscription = Object.assign(CachedChatSubscription.collection, {\n\tisUserInRole: mem(\n\t\tfunction (this: typeof CachedChatSubscription.collection, _uid: IUser['_id'], roleId: IRole['_id'], rid?: IRoom['_id']) {\n\t\t\tif (!rid) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst query = {\n\t\t\t\trid,\n\t\t\t};\n\n\t\t\tconst subscription = this.findOne(query, { fields: { roles: 1 } });\n\n\t\t\treturn subscription && Array.isArray(subscription.roles) && subscription.roles.includes(roleId);\n\t\t},\n\t\t{ maxAge: 1000, cacheKey: JSON.stringify },\n\t),\n\n\tfindUsersInRoles: mem(\n\t\tfunction (this: typeof CachedChatSubscription.collection, roles: IRole['_id'][] | IRole['_id'], scope?: string, options?: any) {\n\t\t\troles = Array.isArray(roles) ? roles : [roles];\n\n\t\t\tconst query: Filter<any> = {\n\t\t\t\troles: { $in: roles },\n\t\t\t};\n\n\t\t\tif (scope) {\n\t\t\t\tquery.rid = scope;\n\t\t\t}\n\n\t\t\tconst subscriptions = this.find(query).fetch();\n\n\t\t\tconst uids = subscriptions\n\t\t\t\t.map((subscription) => {\n\t\t\t\t\tif (typeof subscription.u !== 'undefined' && typeof subscription.u._id !== 'undefined') {\n\t\t\t\t\t\treturn subscription.u._id;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\t\t\t\t})\n\t\t\t\t.filter(isTruthy);\n\n\t\t\treturn Meteor.users.find({ _id: { $in: uids } }, options);\n\t\t},\n\t\t{ maxAge: 1000, cacheKey: JSON.stringify },\n\t),\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/models/client/models/ChatSubscription.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/client/models/ChatSubscription.ts","inputSourceMap":{"version":3,"file":"app/models/client/models/ChatSubscription.ts","sourceRoot":"","sources":["app/models/client/models/ChatSubscription.ts"],"names":[],"mappings":"AACA,OAAO,GAAG,MAAM,KAAK,CAAC;AACtB,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,sBAAsB,EAAE,MAAM,0BAA0B,CAAC;AAElE,qMAAqM;AACrM,MAAM,CAAC,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,UAAU,EAAE;IAChF,YAAY,EAAE,GAAG,CAChB,UAA0D,IAAkB,EAAE,MAAoB,EAAE,GAAkB;QACrH,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,OAAO,KAAK,CAAC;QACd,CAAC;QAED,MAAM,KAAK,GAAG;YACb,GAAG;SACH,CAAC;QAEF,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAEnE,OAAO,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACjG,CAAC,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAC1C;IAED,gBAAgB,EAAE,GAAG,CACpB,UAA0D,KAAoC,EAAE,KAAc,EAAE,OAAa;QAC5H,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAE/C,MAAM,KAAK,GAAgB;YAC1B,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE;SACrB,CAAC;QAEF,IAAI,KAAK,EAAE,CAAC;YACX,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QACnB,CAAC;QAED,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;QAE/C,MAAM,IAAI,GAAG,aAAa;aACxB,GAAG,CAAC,CAAC,YAAY,EAAE,EAAE;YACrB,IAAI,OAAO,YAAY,CAAC,CAAC,KAAK,WAAW,IAAI,OAAO,YAAY,CAAC,CAAC,CAAC,GAAG,KAAK,WAAW,EAAE,CAAC;gBACxF,OAAO,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC;YAC3B,CAAC;YAED,OAAO,SAAS,CAAC;QAClB,CAAC,CAAC;aACD,MAAM,CAAC,QAAQ,CAAC,CAAC;QAEnB,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;IAC3D,CAAC,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAC1C;CACD,CAAC,CAAC","sourcesContent":["import type { IRole, IRoom, IUser } from '@rocket.chat/core-typings';\nimport mem from 'mem';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter } from 'mongodb';\n\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { CachedChatSubscription } from './CachedChatSubscription';\n\n/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\nexport const ChatSubscription = Object.assign(CachedChatSubscription.collection, {\n\tisUserInRole: mem(\n\t\tfunction (this: typeof CachedChatSubscription.collection, _uid: IUser['_id'], roleId: IRole['_id'], rid?: IRoom['_id']) {\n\t\t\tif (!rid) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst query = {\n\t\t\t\trid,\n\t\t\t};\n\n\t\t\tconst subscription = this.findOne(query, { fields: { roles: 1 } });\n\n\t\t\treturn subscription && Array.isArray(subscription.roles) && subscription.roles.includes(roleId);\n\t\t},\n\t\t{ maxAge: 1000, cacheKey: JSON.stringify },\n\t),\n\n\tfindUsersInRoles: mem(\n\t\tfunction (this: typeof CachedChatSubscription.collection, roles: IRole['_id'][] | IRole['_id'], scope?: string, options?: any) {\n\t\t\troles = Array.isArray(roles) ? roles : [roles];\n\n\t\t\tconst query: Filter<any> = {\n\t\t\t\troles: { $in: roles },\n\t\t\t};\n\n\t\t\tif (scope) {\n\t\t\t\tquery.rid = scope;\n\t\t\t}\n\n\t\t\tconst subscriptions = this.find(query).fetch();\n\n\t\t\tconst uids = subscriptions\n\t\t\t\t.map((subscription) => {\n\t\t\t\t\tif (typeof subscription.u !== 'undefined' && typeof subscription.u._id !== 'undefined') {\n\t\t\t\t\t\treturn subscription.u._id;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\t\t\t\t})\n\t\t\t\t.filter(isTruthy);\n\n\t\t\treturn Meteor.users.find({ _id: { $in: uids } }, options);\n\t\t},\n\t\t{ maxAge: 1000, cacheKey: JSON.stringify },\n\t),\n});\n"]}}},"code":"module.export({\n  ChatSubscription: function () {\n    return ChatSubscription;\n  }\n});\nvar mem;\nmodule.link(\"mem\", {\n  \"default\": function (v) {\n    mem = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar isTruthy;\nmodule.link(\"../../../../lib/isTruthy\", {\n  isTruthy: function (v) {\n    isTruthy = v;\n  }\n}, 2);\nvar CachedChatSubscription;\nmodule.link(\"./CachedChatSubscription\", {\n  CachedChatSubscription: function (v) {\n    CachedChatSubscription = v;\n  }\n}, 3);\nvar ChatSubscription = Object.assign(CachedChatSubscription.collection, {\n  isUserInRole: mem(function (_uid, roleId, rid) {\n    if (!rid) {\n      return false;\n    }\n    var query = {\n      rid: rid\n    };\n    var subscription = this.findOne(query, {\n      fields: {\n        roles: 1\n      }\n    });\n    return subscription && Array.isArray(subscription.roles) && subscription.roles.includes(roleId);\n  }, {\n    maxAge: 1000,\n    cacheKey: JSON.stringify\n  }),\n  findUsersInRoles: mem(function (roles, scope, options) {\n    roles = Array.isArray(roles) ? roles : [roles];\n    var query = {\n      roles: {\n        $in: roles\n      }\n    };\n    if (scope) {\n      query.rid = scope;\n    }\n    var subscriptions = this.find(query).fetch();\n    var uids = subscriptions.map(function (subscription) {\n      if (typeof subscription.u !== 'undefined' && typeof subscription.u._id !== 'undefined') {\n        return subscription.u._id;\n      }\n      return undefined;\n    }).filter(isTruthy);\n    return Meteor.users.find({\n      _id: {\n        $in: uids\n      }\n    }, options);\n  }, {\n    maxAge: 1000,\n    cacheKey: JSON.stringify\n  })\n});","map":{"version":3,"names":["module","export","ChatSubscription","mem","link","default","v","Meteor","isTruthy","CachedChatSubscription","Object","assign","collection","isUserInRole","_uid","roleId","rid","query","subscription","findOne","fields","roles","Array","isArray","includes","maxAge","cacheKey","JSON","stringify","findUsersInRoles","scope","options","$in","subscriptions","find","fetch","uids","map","u","_id","undefined","filter","users"],"sources":["app/models/client/models/ChatSubscription.ts"],"sourcesContent":["import type { IRole, IRoom, IUser } from '@rocket.chat/core-typings';\nimport mem from 'mem';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter } from 'mongodb';\n\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { CachedChatSubscription } from './CachedChatSubscription';\n\n/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\nexport const ChatSubscription = Object.assign(CachedChatSubscription.collection, {\n\tisUserInRole: mem(\n\t\tfunction (this: typeof CachedChatSubscription.collection, _uid: IUser['_id'], roleId: IRole['_id'], rid?: IRoom['_id']) {\n\t\t\tif (!rid) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst query = {\n\t\t\t\trid,\n\t\t\t};\n\n\t\t\tconst subscription = this.findOne(query, { fields: { roles: 1 } });\n\n\t\t\treturn subscription && Array.isArray(subscription.roles) && subscription.roles.includes(roleId);\n\t\t},\n\t\t{ maxAge: 1000, cacheKey: JSON.stringify },\n\t),\n\n\tfindUsersInRoles: mem(\n\t\tfunction (this: typeof CachedChatSubscription.collection, roles: IRole['_id'][] | IRole['_id'], scope?: string, options?: any) {\n\t\t\troles = Array.isArray(roles) ? roles : [roles];\n\n\t\t\tconst query: Filter<any> = {\n\t\t\t\troles: { $in: roles },\n\t\t\t};\n\n\t\t\tif (scope) {\n\t\t\t\tquery.rid = scope;\n\t\t\t}\n\n\t\t\tconst subscriptions = this.find(query).fetch();\n\n\t\t\tconst uids = subscriptions\n\t\t\t\t.map((subscription) => {\n\t\t\t\t\tif (typeof subscription.u !== 'undefined' && typeof subscription.u._id !== 'undefined') {\n\t\t\t\t\t\treturn subscription.u._id;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\t\t\t\t})\n\t\t\t\t.filter(isTruthy);\n\n\t\t\treturn Meteor.users.find({ _id: { $in: uids } }, options);\n\t\t},\n\t\t{ maxAge: 1000, cacheKey: JSON.stringify },\n\t),\n});\n"],"mappings":"AACAA,MAAA,CAAOC,MAAG;EAAAC,gBAAY,WAAAA,CAAA;IAAA,OAAAA,gBAAA;EAAA;AAAA;AAAA,IAAAC,GAAA;AAAAH,MAAA,CAAAI,IAAA;EAAA,oBAAAC,CAAAC,CAAA;IAAAH,GAAA,GAAAG,CAAA;EAAA;AAAA;AAAA,IAAAC,MAAA;AAAAP,MAAA,CAAAI,IAAA;EAAAG,MAAA,WAAAA,CAAAD,CAAA;IAAAC,MAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,QAAA;AAAAR,MAAA,CAAAI,IAAA;EAAAI,QAAA,WAAAA,CAAAF,CAAA;IAAAE,QAAA,GAAAF,CAAA;EAAA;AAAA;AAAA,IAAAG,sBAAA;AAAAT,MAAA,CAAAI,IAAA;EAAAK,sBAAA,WAAAA,CAAAH,CAAA;IAAAG,sBAAA,GAAAH,CAAA;EAAA;AAAA;AAQf,IAAMJ,gBAAgB,GAAGQ,MAAM,CAACC,MAAM,CAACF,sBAAsB,CAACG,UAAU,EAAE;EAChFC,YAAY,EAAEV,GAAG,CAChB,UAA0DW,IAAkB,EAAEC,MAAoB,EAAEC,GAAkB;IACrH,IAAI,CAACA,GAAG,EAAE;MACT,OAAO,KAAK;IACb;IAEA,IAAMC,KAAK,GAAG;MACbD,GAAG,EAAHA;KACA;IAED,IAAME,YAAY,GAAG,IAAI,CAACC,OAAO,CAACF,KAAK,EAAE;MAAEG,MAAM,EAAE;QAAEC,KAAK,EAAE;MAAC;IAAE,CAAE,CAAC;IAElE,OAAOH,YAAY,IAAII,KAAK,CAACC,OAAO,CAACL,YAAY,CAACG,KAAK,CAAC,IAAIH,YAAY,CAACG,KAAK,CAACG,QAAQ,CAACT,MAAM,CAAC;EAChG,CAAC,EACD;IAAEU,MAAM,EAAE,IAAI;IAAEC,QAAQ,EAAEC,IAAI,CAACC;EAAS,CAAE,CAC1C;EAEDC,gBAAgB,EAAE1B,GAAG,CACpB,UAA0DkB,KAAoC,EAAES,KAAc,EAAEC,OAAa;IAC5HV,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;IAE9C,IAAMJ,KAAK,GAAgB;MAC1BI,KAAK,EAAE;QAAEW,GAAG,EAAEX;MAAK;KACnB;IAED,IAAIS,KAAK,EAAE;MACVb,KAAK,CAACD,GAAG,GAAGc,KAAK;IAClB;IAEA,IAAMG,aAAa,GAAG,IAAI,CAACC,IAAI,CAACjB,KAAK,CAAC,CAACkB,KAAK,EAAE;IAE9C,IAAMC,IAAI,GAAGH,aAAa,CACxBI,GAAG,CAAC,UAACnB,YAAY,EAAI;MACrB,IAAI,OAAOA,YAAY,CAACoB,CAAC,KAAK,WAAW,IAAI,OAAOpB,YAAY,CAACoB,CAAC,CAACC,GAAG,KAAK,WAAW,EAAE;QACvF,OAAOrB,YAAY,CAACoB,CAAC,CAACC,GAAG;MAC1B;MAEA,OAAOC,SAAS;IACjB,CAAC,CAAC,CACDC,MAAM,CAACjC,QAAQ,CAAC;IAElB,OAAOD,MAAM,CAACmC,KAAK,CAACR,IAAI,CAAC;MAAEK,GAAG,EAAE;QAAEP,GAAG,EAAEI;MAAI;IAAE,CAAE,EAAEL,OAAO,CAAC;EAC1D,CAAC,EACD;IAAEN,MAAM,EAAE,IAAI;IAAEC,QAAQ,EAAEC,IAAI,CAACC;EAAS,CAAE;CAE3C,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"17d4354c75ca2c0f9ef60048dbf27a8d5bd1a15b"}
