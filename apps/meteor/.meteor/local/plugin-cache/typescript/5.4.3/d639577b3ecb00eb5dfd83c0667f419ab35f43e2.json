{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/hooks/onSaveVisitorInfo.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/hooks/onSaveVisitorInfo.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/hooks/onSaveVisitorInfo.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/hooks/onSaveVisitorInfo.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/hooks/onSaveVisitorInfo.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,iCAAiC,EAAE,MAAM,qBAAqB,CAAC;AAExE,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AACnF,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAE9D,MAAM,SAAS,GAAG,KAAK,EAAE,IAAsB,EAAE,IAAwD,EAAE,KAAc,EAAE,EAAE;IAC5H,IAAI,CAAC,KAAK,EAAE,CAAC;QACZ,OAAO,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,MAAM,GAAG,GACR,MAAM,iCAAiC,CAAC,WAAW,CAAC,KAAK,EAAE;QAC1D,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE;KACpD,CAAC,CAAC;IACJ,IAAI,CAAC,GAAG,EAAE,CAAC;QACV,MAAM,IAAI,KAAK,CAAC,0BAA0B,KAAK,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AAC1C,CAAC,CAAC;AAEF,MAAM,cAAc,GAAG,KAAK,EAAE,IAAsB,EAAE,IAAwD,EAAE,UAAmB,EAAE,EAAE;IACtI,IAAI,CAAC,UAAU,EAAE,CAAC;QACjB,OAAO,sBAAsB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AACtD,CAAC,CAAC;AAEF,SAAS,CAAC,GAAG,CACZ,mBAAmB,EACnB,KAAK,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,OAAO,EAAO,EAAE,EAAE;IACtC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC;IAC/D,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;IAE5D,IAAI,QAAQ,KAAK,QAAQ,IAAI,aAAa,KAAK,aAAa,EAAE,CAAC;QAC9D,OAAO,IAAI,CAAC;IACb,CAAC;IACD,IAAI,QAAQ,KAAK,QAAQ,IAAI,aAAa,KAAK,aAAa,EAAE,CAAC;QAC9D,MAAM,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;IACjD,CAAC;SAAM,IAAI,QAAQ,KAAK,QAAQ,IAAI,aAAa,KAAK,aAAa,EAAE,CAAC;QACrE,MAAM,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IACvC,CAAC;SAAM,CAAC;QACP,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;IACjG,CAAC;IAED,OAAO,IAAW,CAAC;AACpB,CAAC,EACD,SAAS,CAAC,QAAQ,CAAC,IAAI,EACvB,4BAA4B,CAC5B,CAAC","sourcesContent":["import type { IOmnichannelRoom, IOmnichannelServiceLevelAgreements, IUser } from '@rocket.chat/core-typings';\nimport { OmnichannelServiceLevelAgreements } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { removePriorityFromRoom, updateRoomPriority } from '../api/lib/priorities';\nimport { removeRoomSLA, updateRoomSLA } from '../api/lib/sla';\n\nconst updateSLA = async (room: IOmnichannelRoom, user: Required<Pick<IUser, '_id' | 'username' | 'name'>>, slaId?: string) => {\n\tif (!slaId) {\n\t\treturn removeRoomSLA(room._id, user);\n\t}\n\n\tconst sla: Pick<IOmnichannelServiceLevelAgreements, '_id' | 'name' | 'dueTimeInMinutes'> | null =\n\t\tawait OmnichannelServiceLevelAgreements.findOneById(slaId, {\n\t\t\tprojection: { _id: 1, name: 1, dueTimeInMinutes: 1 },\n\t\t});\n\tif (!sla) {\n\t\tthrow new Error(`SLA not found with id: ${slaId}`);\n\t}\n\n\tawait updateRoomSLA(room._id, user, sla);\n};\n\nconst updatePriority = async (room: IOmnichannelRoom, user: Required<Pick<IUser, '_id' | 'username' | 'name'>>, priorityId?: string) => {\n\tif (!priorityId) {\n\t\treturn removePriorityFromRoom(room._id, user);\n\t}\n\n\tawait updateRoomPriority(room._id, user, priorityId);\n};\n\ncallbacks.add(\n\t'livechat.saveInfo',\n\tasync (room, { user, oldRoom }: any) => {\n\t\tconst { slaId: oldSlaId, priorityId: oldPriorityId } = oldRoom;\n\t\tconst { slaId: newSlaId, priorityId: newPriorityId } = room;\n\n\t\tif (oldSlaId === newSlaId && oldPriorityId === newPriorityId) {\n\t\t\treturn room;\n\t\t}\n\t\tif (oldSlaId === newSlaId && oldPriorityId !== newPriorityId) {\n\t\t\tawait updatePriority(room, user, newPriorityId);\n\t\t} else if (oldSlaId !== newSlaId && oldPriorityId === newPriorityId) {\n\t\t\tawait updateSLA(room, user, newSlaId);\n\t\t} else {\n\t\t\tawait Promise.all([updateSLA(room, user, newSlaId), updatePriority(room, user, newPriorityId)]);\n\t\t}\n\n\t\treturn room as any;\n\t},\n\tcallbacks.priority.HIGH,\n\t'livechat-on-save-room-info',\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/hooks/onSaveVisitorInfo.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/hooks/onSaveVisitorInfo.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/hooks/onSaveVisitorInfo.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/hooks/onSaveVisitorInfo.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,iCAAiC,EAAE,MAAM,qBAAqB,CAAC;AAExE,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AACnF,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAC;AAE9D,MAAM,SAAS,GAAG,KAAK,EAAE,IAAsB,EAAE,IAAwD,EAAE,KAAc,EAAE,EAAE;IAC5H,IAAI,CAAC,KAAK,EAAE,CAAC;QACZ,OAAO,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,MAAM,GAAG,GACR,MAAM,iCAAiC,CAAC,WAAW,CAAC,KAAK,EAAE;QAC1D,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE;KACpD,CAAC,CAAC;IACJ,IAAI,CAAC,GAAG,EAAE,CAAC;QACV,MAAM,IAAI,KAAK,CAAC,0BAA0B,KAAK,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AAC1C,CAAC,CAAC;AAEF,MAAM,cAAc,GAAG,KAAK,EAAE,IAAsB,EAAE,IAAwD,EAAE,UAAmB,EAAE,EAAE;IACtI,IAAI,CAAC,UAAU,EAAE,CAAC;QACjB,OAAO,sBAAsB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AACtD,CAAC,CAAC;AAEF,SAAS,CAAC,GAAG,CACZ,mBAAmB,EACnB,KAAK,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,OAAO,EAAO,EAAE,EAAE;IACtC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC;IAC/D,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;IAE5D,IAAI,QAAQ,KAAK,QAAQ,IAAI,aAAa,KAAK,aAAa,EAAE,CAAC;QAC9D,OAAO,IAAI,CAAC;IACb,CAAC;IACD,IAAI,QAAQ,KAAK,QAAQ,IAAI,aAAa,KAAK,aAAa,EAAE,CAAC;QAC9D,MAAM,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;IACjD,CAAC;SAAM,IAAI,QAAQ,KAAK,QAAQ,IAAI,aAAa,KAAK,aAAa,EAAE,CAAC;QACrE,MAAM,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IACvC,CAAC;SAAM,CAAC;QACP,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;IACjG,CAAC;IAED,OAAO,IAAW,CAAC;AACpB,CAAC,EACD,SAAS,CAAC,QAAQ,CAAC,IAAI,EACvB,4BAA4B,CAC5B,CAAC","sourcesContent":["import type { IOmnichannelRoom, IOmnichannelServiceLevelAgreements, IUser } from '@rocket.chat/core-typings';\nimport { OmnichannelServiceLevelAgreements } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { removePriorityFromRoom, updateRoomPriority } from '../api/lib/priorities';\nimport { removeRoomSLA, updateRoomSLA } from '../api/lib/sla';\n\nconst updateSLA = async (room: IOmnichannelRoom, user: Required<Pick<IUser, '_id' | 'username' | 'name'>>, slaId?: string) => {\n\tif (!slaId) {\n\t\treturn removeRoomSLA(room._id, user);\n\t}\n\n\tconst sla: Pick<IOmnichannelServiceLevelAgreements, '_id' | 'name' | 'dueTimeInMinutes'> | null =\n\t\tawait OmnichannelServiceLevelAgreements.findOneById(slaId, {\n\t\t\tprojection: { _id: 1, name: 1, dueTimeInMinutes: 1 },\n\t\t});\n\tif (!sla) {\n\t\tthrow new Error(`SLA not found with id: ${slaId}`);\n\t}\n\n\tawait updateRoomSLA(room._id, user, sla);\n};\n\nconst updatePriority = async (room: IOmnichannelRoom, user: Required<Pick<IUser, '_id' | 'username' | 'name'>>, priorityId?: string) => {\n\tif (!priorityId) {\n\t\treturn removePriorityFromRoom(room._id, user);\n\t}\n\n\tawait updateRoomPriority(room._id, user, priorityId);\n};\n\ncallbacks.add(\n\t'livechat.saveInfo',\n\tasync (room, { user, oldRoom }: any) => {\n\t\tconst { slaId: oldSlaId, priorityId: oldPriorityId } = oldRoom;\n\t\tconst { slaId: newSlaId, priorityId: newPriorityId } = room;\n\n\t\tif (oldSlaId === newSlaId && oldPriorityId === newPriorityId) {\n\t\t\treturn room;\n\t\t}\n\t\tif (oldSlaId === newSlaId && oldPriorityId !== newPriorityId) {\n\t\t\tawait updatePriority(room, user, newPriorityId);\n\t\t} else if (oldSlaId !== newSlaId && oldPriorityId === newPriorityId) {\n\t\t\tawait updateSLA(room, user, newSlaId);\n\t\t} else {\n\t\t\tawait Promise.all([updateSLA(room, user, newSlaId), updatePriority(room, user, newPriorityId)]);\n\t\t}\n\n\t\treturn room as any;\n\t},\n\tcallbacks.priority.HIGH,\n\t'livechat-on-save-room-info',\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let OmnichannelServiceLevelAgreements;\n    module.link(\"@rocket.chat/models\", {\n      OmnichannelServiceLevelAgreements(v) {\n        OmnichannelServiceLevelAgreements = v;\n      }\n    }, 0);\n    let callbacks;\n    module.link(\"../../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 1);\n    let removePriorityFromRoom, updateRoomPriority;\n    module.link(\"../api/lib/priorities\", {\n      removePriorityFromRoom(v) {\n        removePriorityFromRoom = v;\n      },\n      updateRoomPriority(v) {\n        updateRoomPriority = v;\n      }\n    }, 2);\n    let removeRoomSLA, updateRoomSLA;\n    module.link(\"../api/lib/sla\", {\n      removeRoomSLA(v) {\n        removeRoomSLA = v;\n      },\n      updateRoomSLA(v) {\n        updateRoomSLA = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const updateSLA = async (room, user, slaId) => {\n      if (!slaId) {\n        return removeRoomSLA(room._id, user);\n      }\n      const sla = await OmnichannelServiceLevelAgreements.findOneById(slaId, {\n        projection: {\n          _id: 1,\n          name: 1,\n          dueTimeInMinutes: 1\n        }\n      });\n      if (!sla) {\n        throw new Error(\"SLA not found with id: \".concat(slaId));\n      }\n      await updateRoomSLA(room._id, user, sla);\n    };\n    const updatePriority = async (room, user, priorityId) => {\n      if (!priorityId) {\n        return removePriorityFromRoom(room._id, user);\n      }\n      await updateRoomPriority(room._id, user, priorityId);\n    };\n    callbacks.add('livechat.saveInfo', async (room, _ref) => {\n      let {\n        user,\n        oldRoom\n      } = _ref;\n      const {\n        slaId: oldSlaId,\n        priorityId: oldPriorityId\n      } = oldRoom;\n      const {\n        slaId: newSlaId,\n        priorityId: newPriorityId\n      } = room;\n      if (oldSlaId === newSlaId && oldPriorityId === newPriorityId) {\n        return room;\n      }\n      if (oldSlaId === newSlaId && oldPriorityId !== newPriorityId) {\n        await updatePriority(room, user, newPriorityId);\n      } else if (oldSlaId !== newSlaId && oldPriorityId === newPriorityId) {\n        await updateSLA(room, user, newSlaId);\n      } else {\n        await Promise.all([updateSLA(room, user, newSlaId), updatePriority(room, user, newPriorityId)]);\n      }\n      return room;\n    }, callbacks.priority.HIGH, 'livechat-on-save-room-info');\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["OmnichannelServiceLevelAgreements","module","link","v","callbacks","removePriorityFromRoom","updateRoomPriority","removeRoomSLA","updateRoomSLA","__reifyWaitForDeps__","updateSLA","room","user","slaId","_id","sla","findOneById","projection","name","dueTimeInMinutes","Error","concat","updatePriority","priorityId","add","_ref","oldRoom","oldSlaId","oldPriorityId","newSlaId","newPriorityId","Promise","all","priority","HIGH","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/hooks/onSaveVisitorInfo.ts"],"sourcesContent":["import type { IOmnichannelRoom, IOmnichannelServiceLevelAgreements, IUser } from '@rocket.chat/core-typings';\nimport { OmnichannelServiceLevelAgreements } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { removePriorityFromRoom, updateRoomPriority } from '../api/lib/priorities';\nimport { removeRoomSLA, updateRoomSLA } from '../api/lib/sla';\n\nconst updateSLA = async (room: IOmnichannelRoom, user: Required<Pick<IUser, '_id' | 'username' | 'name'>>, slaId?: string) => {\n\tif (!slaId) {\n\t\treturn removeRoomSLA(room._id, user);\n\t}\n\n\tconst sla: Pick<IOmnichannelServiceLevelAgreements, '_id' | 'name' | 'dueTimeInMinutes'> | null =\n\t\tawait OmnichannelServiceLevelAgreements.findOneById(slaId, {\n\t\t\tprojection: { _id: 1, name: 1, dueTimeInMinutes: 1 },\n\t\t});\n\tif (!sla) {\n\t\tthrow new Error(`SLA not found with id: ${slaId}`);\n\t}\n\n\tawait updateRoomSLA(room._id, user, sla);\n};\n\nconst updatePriority = async (room: IOmnichannelRoom, user: Required<Pick<IUser, '_id' | 'username' | 'name'>>, priorityId?: string) => {\n\tif (!priorityId) {\n\t\treturn removePriorityFromRoom(room._id, user);\n\t}\n\n\tawait updateRoomPriority(room._id, user, priorityId);\n};\n\ncallbacks.add(\n\t'livechat.saveInfo',\n\tasync (room, { user, oldRoom }: any) => {\n\t\tconst { slaId: oldSlaId, priorityId: oldPriorityId } = oldRoom;\n\t\tconst { slaId: newSlaId, priorityId: newPriorityId } = room;\n\n\t\tif (oldSlaId === newSlaId && oldPriorityId === newPriorityId) {\n\t\t\treturn room;\n\t\t}\n\t\tif (oldSlaId === newSlaId && oldPriorityId !== newPriorityId) {\n\t\t\tawait updatePriority(room, user, newPriorityId);\n\t\t} else if (oldSlaId !== newSlaId && oldPriorityId === newPriorityId) {\n\t\t\tawait updateSLA(room, user, newSlaId);\n\t\t} else {\n\t\t\tawait Promise.all([updateSLA(room, user, newSlaId), updatePriority(room, user, newPriorityId)]);\n\t\t}\n\n\t\treturn room as any;\n\t},\n\tcallbacks.priority.HIGH,\n\t'livechat-on-save-room-info',\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d639577b3ecb00eb5dfd83c0667f419ab35f43e2"}
