{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/webdav/server/methods/addWebdavAccount.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/webdav/server/methods/addWebdavAccount.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/webdav/server/methods/addWebdavAccount.ts","inputSourceMap":{"version":3,"file":"app/webdav/server/methods/addWebdavAccount.ts","sourceRoot":"","sources":["app/webdav/server/methods/addWebdavAccount.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IWebdavAccountPayload } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { WebdavAccounts } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../settings/server';\nimport { WebdavClientAdapter } from '../lib/webdavClientAdapter';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\taddWebdavAccount(formData: IWebdavAccountPayload): boolean;\n\t\taddWebdavAccountByToken(data: IWebdavAccountPayload): boolean;\n\t}\n}\n\nexport const addWebdavAccountByToken = async (userId: string, data: IWebdavAccountPayload): Promise<boolean> => {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t}\n\n\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\tmethod: 'addWebdavAccount',\n\t\t});\n\t}\n\n\tcheck(\n\t\tdata,\n\t\tMatch.ObjectIncluding({\n\t\t\tserverURL: String,\n\t\t\ttoken: Match.ObjectIncluding({\n\t\t\t\taccess_token: String,\n\t\t\t\ttoken_type: String,\n\t\t\t\trefresh_token: Match.Optional(String),\n\t\t\t}),\n\t\t\tname: Match.Maybe(String),\n\t\t}),\n\t);\n\n\ttry {\n\t\tconst client = new WebdavClientAdapter(data.serverURL, { token: data.token });\n\n\t\tconst accountData = {\n\t\t\tuserId,\n\t\t\tserverURL: data.serverURL,\n\t\t\ttoken: data.token,\n\t\t\tname: data.name ?? '',\n\t\t};\n\n\t\tawait client.stat('/');\n\t\tawait WebdavAccounts.updateOne(\n\t\t\t{\n\t\t\t\tuserId,\n\t\t\t\tserverURL: data.serverURL,\n\t\t\t\tname: data.name ?? '',\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: accountData,\n\t\t\t},\n\t\t\t{\n\t\t\t\tupsert: true,\n\t\t\t},\n\t\t);\n\t\tvoid api.broadcast('notify.webdav', userId, {\n\t\t\ttype: 'changed',\n\t\t\taccount: accountData,\n\t\t});\n\t} catch (error) {\n\t\tthrow new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n\t\t\tmethod: 'addWebdavAccount',\n\t\t});\n\t}\n\n\treturn true;\n};\n\nMeteor.methods<ServerMethods>({\n\tasync addWebdavAccount(formData) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t\t}\n\n\t\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\tcheck(\n\t\t\tformData,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\tserverURL: String,\n\t\t\t\tusername: String,\n\t\t\t\tpassword: String,\n\t\t\t\tname: Match.Maybe(String),\n\t\t\t}),\n\t\t);\n\n\t\tconst duplicateAccount = await WebdavAccounts.findOneByUserIdServerUrlAndUsername(\n\t\t\t{ userId, serverURL: formData.serverURL, username: formData.username },\n\t\t\t{},\n\t\t);\n\n\t\tif (duplicateAccount !== null) {\n\t\t\tthrow new Meteor.Error('duplicated-account', 'Account not found', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tconst client = new WebdavClientAdapter(formData.serverURL, {\n\t\t\t\tusername: formData.username,\n\t\t\t\tpassword: formData.password,\n\t\t\t});\n\n\t\t\tconst accountData = {\n\t\t\t\tuserId,\n\t\t\t\tserverURL: formData.serverURL,\n\t\t\t\tusername: formData.username,\n\t\t\t\tpassword: formData.password,\n\t\t\t\tname: formData.name ?? '',\n\t\t\t};\n\n\t\t\tawait client.stat('/');\n\t\t\tawait WebdavAccounts.insertOne(accountData);\n\n\t\t\tvoid api.broadcast('notify.webdav', userId, {\n\t\t\t\ttype: 'changed',\n\t\t\t\taccount: accountData,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthrow new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\t\treturn true;\n\t},\n\n\tasync addWebdavAccountByToken(data) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t\t}\n\n\t\treturn addWebdavAccountByToken(userId, data);\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/webdav/server/methods/addWebdavAccount.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/webdav/server/methods/addWebdavAccount.ts","inputSourceMap":{"version":3,"file":"app/webdav/server/methods/addWebdavAccount.ts","sourceRoot":"","sources":["app/webdav/server/methods/addWebdavAccount.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IWebdavAccountPayload } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { WebdavAccounts } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../settings/server';\nimport { WebdavClientAdapter } from '../lib/webdavClientAdapter';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\taddWebdavAccount(formData: IWebdavAccountPayload): boolean;\n\t\taddWebdavAccountByToken(data: IWebdavAccountPayload): boolean;\n\t}\n}\n\nexport const addWebdavAccountByToken = async (userId: string, data: IWebdavAccountPayload): Promise<boolean> => {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t}\n\n\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\tmethod: 'addWebdavAccount',\n\t\t});\n\t}\n\n\tcheck(\n\t\tdata,\n\t\tMatch.ObjectIncluding({\n\t\t\tserverURL: String,\n\t\t\ttoken: Match.ObjectIncluding({\n\t\t\t\taccess_token: String,\n\t\t\t\ttoken_type: String,\n\t\t\t\trefresh_token: Match.Optional(String),\n\t\t\t}),\n\t\t\tname: Match.Maybe(String),\n\t\t}),\n\t);\n\n\ttry {\n\t\tconst client = new WebdavClientAdapter(data.serverURL, { token: data.token });\n\n\t\tconst accountData = {\n\t\t\tuserId,\n\t\t\tserverURL: data.serverURL,\n\t\t\ttoken: data.token,\n\t\t\tname: data.name ?? '',\n\t\t};\n\n\t\tawait client.stat('/');\n\t\tawait WebdavAccounts.updateOne(\n\t\t\t{\n\t\t\t\tuserId,\n\t\t\t\tserverURL: data.serverURL,\n\t\t\t\tname: data.name ?? '',\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: accountData,\n\t\t\t},\n\t\t\t{\n\t\t\t\tupsert: true,\n\t\t\t},\n\t\t);\n\t\tvoid api.broadcast('notify.webdav', userId, {\n\t\t\ttype: 'changed',\n\t\t\taccount: accountData,\n\t\t});\n\t} catch (error) {\n\t\tthrow new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n\t\t\tmethod: 'addWebdavAccount',\n\t\t});\n\t}\n\n\treturn true;\n};\n\nMeteor.methods<ServerMethods>({\n\tasync addWebdavAccount(formData) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t\t}\n\n\t\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\tcheck(\n\t\t\tformData,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\tserverURL: String,\n\t\t\t\tusername: String,\n\t\t\t\tpassword: String,\n\t\t\t\tname: Match.Maybe(String),\n\t\t\t}),\n\t\t);\n\n\t\tconst duplicateAccount = await WebdavAccounts.findOneByUserIdServerUrlAndUsername(\n\t\t\t{ userId, serverURL: formData.serverURL, username: formData.username },\n\t\t\t{},\n\t\t);\n\n\t\tif (duplicateAccount !== null) {\n\t\t\tthrow new Meteor.Error('duplicated-account', 'Account not found', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tconst client = new WebdavClientAdapter(formData.serverURL, {\n\t\t\t\tusername: formData.username,\n\t\t\t\tpassword: formData.password,\n\t\t\t});\n\n\t\t\tconst accountData = {\n\t\t\t\tuserId,\n\t\t\t\tserverURL: formData.serverURL,\n\t\t\t\tusername: formData.username,\n\t\t\t\tpassword: formData.password,\n\t\t\t\tname: formData.name ?? '',\n\t\t\t};\n\n\t\t\tawait client.stat('/');\n\t\t\tawait WebdavAccounts.insertOne(accountData);\n\n\t\t\tvoid api.broadcast('notify.webdav', userId, {\n\t\t\t\ttype: 'changed',\n\t\t\t\taccount: accountData,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthrow new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\t\treturn true;\n\t},\n\n\tasync addWebdavAccountByToken(data) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t\t}\n\n\t\treturn addWebdavAccountByToken(userId, data);\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      addWebdavAccountByToken: () => addWebdavAccountByToken\n    });\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let WebdavAccounts;\n    module.link(\"@rocket.chat/models\", {\n      WebdavAccounts(v) {\n        WebdavAccounts = v;\n      }\n    }, 1);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    let WebdavClientAdapter;\n    module.link(\"../lib/webdavClientAdapter\", {\n      WebdavClientAdapter(v) {\n        WebdavClientAdapter = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const addWebdavAccountByToken = async (userId, data) => {\n      if (!userId) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid User', {\n          method: 'addWebdavAccount'\n        });\n      }\n      if (!settings.get('Webdav_Integration_Enabled')) {\n        throw new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n          method: 'addWebdavAccount'\n        });\n      }\n      check(data, Match.ObjectIncluding({\n        serverURL: String,\n        token: Match.ObjectIncluding({\n          access_token: String,\n          token_type: String,\n          refresh_token: Match.Optional(String)\n        }),\n        name: Match.Maybe(String)\n      }));\n      try {\n        var _data$name, _data$name2;\n        const client = new WebdavClientAdapter(data.serverURL, {\n          token: data.token\n        });\n        const accountData = {\n          userId,\n          serverURL: data.serverURL,\n          token: data.token,\n          name: (_data$name = data.name) !== null && _data$name !== void 0 ? _data$name : ''\n        };\n        await client.stat('/');\n        await WebdavAccounts.updateOne({\n          userId,\n          serverURL: data.serverURL,\n          name: (_data$name2 = data.name) !== null && _data$name2 !== void 0 ? _data$name2 : ''\n        }, {\n          $set: accountData\n        }, {\n          upsert: true\n        });\n        void api.broadcast('notify.webdav', userId, {\n          type: 'changed',\n          account: accountData\n        });\n      } catch (error) {\n        throw new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n          method: 'addWebdavAccount'\n        });\n      }\n      return true;\n    };\n    Meteor.methods({\n      async addWebdavAccount(formData) {\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid User', {\n            method: 'addWebdavAccount'\n          });\n        }\n        if (!settings.get('Webdav_Integration_Enabled')) {\n          throw new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n            method: 'addWebdavAccount'\n          });\n        }\n        check(formData, Match.ObjectIncluding({\n          serverURL: String,\n          username: String,\n          password: String,\n          name: Match.Maybe(String)\n        }));\n        const duplicateAccount = await WebdavAccounts.findOneByUserIdServerUrlAndUsername({\n          userId,\n          serverURL: formData.serverURL,\n          username: formData.username\n        }, {});\n        if (duplicateAccount !== null) {\n          throw new Meteor.Error('duplicated-account', 'Account not found', {\n            method: 'addWebdavAccount'\n          });\n        }\n        try {\n          var _formData$name;\n          const client = new WebdavClientAdapter(formData.serverURL, {\n            username: formData.username,\n            password: formData.password\n          });\n          const accountData = {\n            userId,\n            serverURL: formData.serverURL,\n            username: formData.username,\n            password: formData.password,\n            name: (_formData$name = formData.name) !== null && _formData$name !== void 0 ? _formData$name : ''\n          };\n          await client.stat('/');\n          await WebdavAccounts.insertOne(accountData);\n          void api.broadcast('notify.webdav', userId, {\n            type: 'changed',\n            account: accountData\n          });\n        } catch (error) {\n          throw new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n            method: 'addWebdavAccount'\n          });\n        }\n        return true;\n      },\n      async addWebdavAccountByToken(data) {\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid User', {\n            method: 'addWebdavAccount'\n          });\n        }\n        return addWebdavAccountByToken(userId, data);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","addWebdavAccountByToken","api","link","v","WebdavAccounts","Match","check","Meteor","settings","WebdavClientAdapter","__reifyWaitForDeps__","userId","data","Error","method","get","ObjectIncluding","serverURL","String","token","access_token","token_type","refresh_token","Optional","name","Maybe","_data$name","_data$name2","client","accountData","stat","updateOne","$set","upsert","broadcast","type","account","error","methods","addWebdavAccount","formData","username","password","duplicateAccount","findOneByUserIdServerUrlAndUsername","_formData$name","insertOne","__reify_async_result__","_reifyError","self","async"],"sources":["app/webdav/server/methods/addWebdavAccount.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IWebdavAccountPayload } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { WebdavAccounts } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../settings/server';\nimport { WebdavClientAdapter } from '../lib/webdavClientAdapter';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\taddWebdavAccount(formData: IWebdavAccountPayload): boolean;\n\t\taddWebdavAccountByToken(data: IWebdavAccountPayload): boolean;\n\t}\n}\n\nexport const addWebdavAccountByToken = async (userId: string, data: IWebdavAccountPayload): Promise<boolean> => {\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t}\n\n\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\tmethod: 'addWebdavAccount',\n\t\t});\n\t}\n\n\tcheck(\n\t\tdata,\n\t\tMatch.ObjectIncluding({\n\t\t\tserverURL: String,\n\t\t\ttoken: Match.ObjectIncluding({\n\t\t\t\taccess_token: String,\n\t\t\t\ttoken_type: String,\n\t\t\t\trefresh_token: Match.Optional(String),\n\t\t\t}),\n\t\t\tname: Match.Maybe(String),\n\t\t}),\n\t);\n\n\ttry {\n\t\tconst client = new WebdavClientAdapter(data.serverURL, { token: data.token });\n\n\t\tconst accountData = {\n\t\t\tuserId,\n\t\t\tserverURL: data.serverURL,\n\t\t\ttoken: data.token,\n\t\t\tname: data.name ?? '',\n\t\t};\n\n\t\tawait client.stat('/');\n\t\tawait WebdavAccounts.updateOne(\n\t\t\t{\n\t\t\t\tuserId,\n\t\t\t\tserverURL: data.serverURL,\n\t\t\t\tname: data.name ?? '',\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: accountData,\n\t\t\t},\n\t\t\t{\n\t\t\t\tupsert: true,\n\t\t\t},\n\t\t);\n\t\tvoid api.broadcast('notify.webdav', userId, {\n\t\t\ttype: 'changed',\n\t\t\taccount: accountData,\n\t\t});\n\t} catch (error) {\n\t\tthrow new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n\t\t\tmethod: 'addWebdavAccount',\n\t\t});\n\t}\n\n\treturn true;\n};\n\nMeteor.methods<ServerMethods>({\n\tasync addWebdavAccount(formData) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t\t}\n\n\t\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\tcheck(\n\t\t\tformData,\n\t\t\tMatch.ObjectIncluding({\n\t\t\t\tserverURL: String,\n\t\t\t\tusername: String,\n\t\t\t\tpassword: String,\n\t\t\t\tname: Match.Maybe(String),\n\t\t\t}),\n\t\t);\n\n\t\tconst duplicateAccount = await WebdavAccounts.findOneByUserIdServerUrlAndUsername(\n\t\t\t{ userId, serverURL: formData.serverURL, username: formData.username },\n\t\t\t{},\n\t\t);\n\n\t\tif (duplicateAccount !== null) {\n\t\t\tthrow new Meteor.Error('duplicated-account', 'Account not found', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tconst client = new WebdavClientAdapter(formData.serverURL, {\n\t\t\t\tusername: formData.username,\n\t\t\t\tpassword: formData.password,\n\t\t\t});\n\n\t\t\tconst accountData = {\n\t\t\t\tuserId,\n\t\t\t\tserverURL: formData.serverURL,\n\t\t\t\tusername: formData.username,\n\t\t\t\tpassword: formData.password,\n\t\t\t\tname: formData.name ?? '',\n\t\t\t};\n\n\t\t\tawait client.stat('/');\n\t\t\tawait WebdavAccounts.insertOne(accountData);\n\n\t\t\tvoid api.broadcast('notify.webdav', userId, {\n\t\t\t\ttype: 'changed',\n\t\t\t\taccount: accountData,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthrow new Meteor.Error('could-not-access-webdav', 'Could not access webdav', {\n\t\t\t\tmethod: 'addWebdavAccount',\n\t\t\t});\n\t\t}\n\t\treturn true;\n\t},\n\n\tasync addWebdavAccountByToken(data) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid User', { method: 'addWebdavAccount' });\n\t\t}\n\n\t\treturn addWebdavAccountByToken(userId, data);\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a0fa9e6d6a2229f95b5a42431ac4750e1a42ff18"}
