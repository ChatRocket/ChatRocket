{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/PrepareImportPage.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/admin/import/PrepareImportPage.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/PrepareImportPage.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/import/PrepareImportPage.tsx","sourceRoot":"","sources":["client/views/admin/import/PrepareImportPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IImport, IImporterSelection, Serialized } from '@rocket.chat/core-typings';\nimport { Badge, Box, Button, ButtonGroup, Margins, ProgressBar, Throbber, Tabs } from '@rocket.chat/fuselage';\nimport { useDebouncedValue, useSafely } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint, useTranslation, useStream, useRouter } from '@rocket.chat/ui-contexts';\nimport React, { useEffect, useState, useMemo } from 'react';\n\nimport {\n\tProgressStep,\n\tImportWaitingStates,\n\tImportFileReadyStates,\n\tImportPreparingStartedStates,\n\tImportingStartedStates,\n\tImportingErrorStates,\n} from '../../../../app/importer/lib/ImporterProgressStep';\nimport { numberFormat } from '../../../../lib/utils/stringUtils';\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\nimport type { ChannelDescriptor } from './ChannelDescriptor';\nimport PrepareChannels from './PrepareChannels';\nimport PrepareUsers from './PrepareUsers';\nimport type { UserDescriptor } from './UserDescriptor';\nimport { useErrorHandler } from './useErrorHandler';\n\nconst waitFor = <T, U extends T>(fn: () => Promise<T>, predicate: (arg: T) => arg is U) =>\n\tnew Promise<U>((resolve, reject) => {\n\t\tconst callPromise = () => {\n\t\t\tfn().then((result) => {\n\t\t\t\tif (predicate(result)) {\n\t\t\t\t\tresolve(result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(callPromise, 1000);\n\t\t\t}, reject);\n\t\t};\n\n\t\tcallPromise();\n\t});\n\n// TODO: review inner logic\nfunction PrepareImportPage() {\n\tconst t = useTranslation();\n\tconst handleError = useErrorHandler();\n\n\tconst [isPreparing, setPreparing] = useSafely(useState(true));\n\tconst [progressRate, setProgressRate] = useSafely(useState<number | null>(null));\n\tconst [status, setStatus] = useSafely(useState<string | null>(null));\n\tconst [messageCount, setMessageCount] = useSafely(useState(0));\n\tconst [users, setUsers] = useState<UserDescriptor[]>([]);\n\tconst [channels, setChannels] = useState<ChannelDescriptor[]>([]);\n\tconst [isImporting, setImporting] = useSafely(useState(false));\n\n\tconst usersCount = useMemo(() => users.filter(({ do_import }) => do_import).length, [users]);\n\tconst channelsCount = useMemo(() => channels.filter(({ do_import }) => do_import).length, [channels]);\n\n\tconst router = useRouter();\n\n\tconst getImportFileData = useEndpoint('GET', '/v1/getImportFileData');\n\tconst getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n\tconst startImport = useEndpoint('POST', '/v1/startImport');\n\n\tconst streamer = useStream('importers');\n\n\tuseEffect(\n\t\t() =>\n\t\t\tstreamer('progress', (progress) => {\n\t\t\t\t// Ignore any update without the rate since we're not showing any other info anyway\n\t\t\t\tif ('rate' in progress) {\n\t\t\t\t\tsetProgressRate(progress.rate);\n\t\t\t\t}\n\t\t\t}),\n\t\t[streamer, setProgressRate],\n\t);\n\n\tuseEffect(() => {\n\t\tconst loadImportFileData = async () => {\n\t\t\ttry {\n\t\t\t\tconst data = await waitFor(\n\t\t\t\t\tgetImportFileData,\n\t\t\t\t\t(data): data is IImporterSelection => data && (!('waiting' in data) || !data.waiting),\n\t\t\t\t);\n\n\t\t\t\tif (!data) {\n\t\t\t\t\thandleError(t('Importer_not_setup'));\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetMessageCount(data.message_count);\n\t\t\t\tsetUsers(data.users.map((user) => ({ ...user, username: user.username ?? '', do_import: true })));\n\t\t\t\tsetChannels(data.channels.map((channel) => ({ ...channel, name: channel.name ?? '', do_import: true })));\n\t\t\t\tsetPreparing(false);\n\t\t\t\tsetProgressRate(null);\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t}\n\t\t};\n\n\t\tconst loadCurrentOperation = async () => {\n\t\t\ttry {\n\t\t\t\tconst { operation } = await waitFor(\n\t\t\t\t\tgetCurrentImportOperation,\n\t\t\t\t\t(data): data is Serialized<{ operation: IImport }> =>\n\t\t\t\t\t\tdata.operation.valid && !ImportWaitingStates.includes(data.operation.status),\n\t\t\t\t);\n\n\t\t\t\tif (!operation.valid) {\n\t\t\t\t\trouter.navigate('/admin/import/new');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (ImportingStartedStates.includes(operation.status)) {\n\t\t\t\t\trouter.navigate('/admin/import/progress');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\toperation.status === ProgressStep.USER_SELECTION ||\n\t\t\t\t\tImportPreparingStartedStates.includes(operation.status) ||\n\t\t\t\t\tImportFileReadyStates.includes(operation.status)\n\t\t\t\t) {\n\t\t\t\t\tsetStatus(operation.status);\n\t\t\t\t\tloadImportFileData();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (ImportingErrorStates.includes(operation.status)) {\n\t\t\t\t\thandleError(t('Import_Operation_Failed'));\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (operation.status === ProgressStep.DONE) {\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\thandleError(t('Unknown_Import_State'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t} catch (error) {\n\t\t\t\thandleError(t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t}\n\t\t};\n\n\t\tloadCurrentOperation();\n\t}, [getCurrentImportOperation, getImportFileData, handleError, router, setMessageCount, setPreparing, setProgressRate, setStatus, t]);\n\n\tconst handleStartButtonClick = async () => {\n\t\tsetImporting(true);\n\n\t\ttry {\n\t\t\tconst usersToImport = users.filter(({ do_import }) => do_import).map(({ user_id }) => user_id);\n\t\t\tconst channelsToImport = channels.filter(({ do_import }) => do_import).map(({ channel_id }) => channel_id);\n\n\t\t\tawait startImport({\n\t\t\t\tinput: {\n\t\t\t\t\tusers: {\n\t\t\t\t\t\tall: users.length > 0 && usersToImport.length === users.length,\n\t\t\t\t\t\tlist: (usersToImport.length !== users.length && usersToImport) || undefined,\n\t\t\t\t\t},\n\t\t\t\t\tchannels: {\n\t\t\t\t\t\tall: channels.length > 0 && channelsToImport.length === channels.length,\n\t\t\t\t\t\tlist: (channelsToImport.length !== channels.length && channelsToImport) || undefined,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\trouter.navigate('/admin/import/progress');\n\t\t} catch (error) {\n\t\t\thandleError(error, t('Failed_To_Start_Import'));\n\t\t\trouter.navigate('/admin/import');\n\t\t}\n\t};\n\n\tconst [tab, setTab] = useState('users');\n\tconst handleTabClick = useMemo(() => (tab: string) => () => setTab(tab), []);\n\n\tconst statusDebounced = useDebouncedValue(status, 100);\n\n\tconst handleMinimumImportData = !!(\n\t\t(!usersCount && !channelsCount && !messageCount) ||\n\t\t(!usersCount && !channelsCount && messageCount !== 0)\n\t);\n\n\treturn (\n\t\t<Page>\n\t\t\t<PageHeader title={t('Importing_Data')} onClickBack={() => router.navigate('/admin/import')}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button primary disabled={isImporting || handleMinimumImportData} onClick={handleStartButtonClick}>\n\t\t\t\t\t\t{t('Importer_Prepare_Start_Import')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</PageHeader>\n\t\t\t<PageScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='x24' width='full' maxWidth='590px'>\n\t\t\t\t\t<Box is='h2' fontScale='p2m'>\n\t\t\t\t\t\t{statusDebounced && t(statusDebounced.replace('importer_', 'importer_status_') as TranslationKey)}\n\t\t\t\t\t</Box>\n\t\t\t\t\t{!isPreparing && (\n\t\t\t\t\t\t<Tabs flexShrink={0}>\n\t\t\t\t\t\t\t<Tabs.Item selected={tab === 'users'} onClick={handleTabClick('users')}>\n\t\t\t\t\t\t\t\t{t('Users')} <Badge>{usersCount}</Badge>\n\t\t\t\t\t\t\t</Tabs.Item>\n\t\t\t\t\t\t\t<Tabs.Item selected={tab === 'channels'} onClick={handleTabClick('channels')}>\n\t\t\t\t\t\t\t\t{t('Channels')} <Badge>{channelsCount}</Badge>\n\t\t\t\t\t\t\t</Tabs.Item>\n\t\t\t\t\t\t\t<Tabs.Item disabled>\n\t\t\t\t\t\t\t\t{t('Messages')}\n\t\t\t\t\t\t\t\t<Badge>{messageCount}</Badge>\n\t\t\t\t\t\t\t</Tabs.Item>\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t)}\n\t\t\t\t\t<Margins block='x24'>\n\t\t\t\t\t\t{isPreparing && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{progressRate ? (\n\t\t\t\t\t\t\t\t\t<Box display='flex' justifyContent='center' fontScale='p2'>\n\t\t\t\t\t\t\t\t\t\t<ProgressBar percentage={Math.floor(progressRate)} />\n\t\t\t\t\t\t\t\t\t\t<Box is='span' mis='x24'>\n\t\t\t\t\t\t\t\t\t\t\t{numberFormat(progressRate, 0)}%\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Throbber justifyContent='center' />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isPreparing && tab === 'users' && <PrepareUsers usersCount={usersCount} users={users} setUsers={setUsers} />}\n\t\t\t\t\t\t{!isPreparing && tab === 'channels' && (\n\t\t\t\t\t\t\t<PrepareChannels channels={channels} channelsCount={channelsCount} setChannels={setChannels} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t</Page>\n\t);\n}\n\nexport default PrepareImportPage;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/PrepareImportPage.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/import/PrepareImportPage.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/import/PrepareImportPage.tsx","sourceRoot":"","sources":["client/views/admin/import/PrepareImportPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IImport, IImporterSelection, Serialized } from '@rocket.chat/core-typings';\nimport { Badge, Box, Button, ButtonGroup, Margins, ProgressBar, Throbber, Tabs } from '@rocket.chat/fuselage';\nimport { useDebouncedValue, useSafely } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint, useTranslation, useStream, useRouter } from '@rocket.chat/ui-contexts';\nimport React, { useEffect, useState, useMemo } from 'react';\n\nimport {\n\tProgressStep,\n\tImportWaitingStates,\n\tImportFileReadyStates,\n\tImportPreparingStartedStates,\n\tImportingStartedStates,\n\tImportingErrorStates,\n} from '../../../../app/importer/lib/ImporterProgressStep';\nimport { numberFormat } from '../../../../lib/utils/stringUtils';\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\nimport type { ChannelDescriptor } from './ChannelDescriptor';\nimport PrepareChannels from './PrepareChannels';\nimport PrepareUsers from './PrepareUsers';\nimport type { UserDescriptor } from './UserDescriptor';\nimport { useErrorHandler } from './useErrorHandler';\n\nconst waitFor = <T, U extends T>(fn: () => Promise<T>, predicate: (arg: T) => arg is U) =>\n\tnew Promise<U>((resolve, reject) => {\n\t\tconst callPromise = () => {\n\t\t\tfn().then((result) => {\n\t\t\t\tif (predicate(result)) {\n\t\t\t\t\tresolve(result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(callPromise, 1000);\n\t\t\t}, reject);\n\t\t};\n\n\t\tcallPromise();\n\t});\n\n// TODO: review inner logic\nfunction PrepareImportPage() {\n\tconst t = useTranslation();\n\tconst handleError = useErrorHandler();\n\n\tconst [isPreparing, setPreparing] = useSafely(useState(true));\n\tconst [progressRate, setProgressRate] = useSafely(useState<number | null>(null));\n\tconst [status, setStatus] = useSafely(useState<string | null>(null));\n\tconst [messageCount, setMessageCount] = useSafely(useState(0));\n\tconst [users, setUsers] = useState<UserDescriptor[]>([]);\n\tconst [channels, setChannels] = useState<ChannelDescriptor[]>([]);\n\tconst [isImporting, setImporting] = useSafely(useState(false));\n\n\tconst usersCount = useMemo(() => users.filter(({ do_import }) => do_import).length, [users]);\n\tconst channelsCount = useMemo(() => channels.filter(({ do_import }) => do_import).length, [channels]);\n\n\tconst router = useRouter();\n\n\tconst getImportFileData = useEndpoint('GET', '/v1/getImportFileData');\n\tconst getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n\tconst startImport = useEndpoint('POST', '/v1/startImport');\n\n\tconst streamer = useStream('importers');\n\n\tuseEffect(\n\t\t() =>\n\t\t\tstreamer('progress', (progress) => {\n\t\t\t\t// Ignore any update without the rate since we're not showing any other info anyway\n\t\t\t\tif ('rate' in progress) {\n\t\t\t\t\tsetProgressRate(progress.rate);\n\t\t\t\t}\n\t\t\t}),\n\t\t[streamer, setProgressRate],\n\t);\n\n\tuseEffect(() => {\n\t\tconst loadImportFileData = async () => {\n\t\t\ttry {\n\t\t\t\tconst data = await waitFor(\n\t\t\t\t\tgetImportFileData,\n\t\t\t\t\t(data): data is IImporterSelection => data && (!('waiting' in data) || !data.waiting),\n\t\t\t\t);\n\n\t\t\t\tif (!data) {\n\t\t\t\t\thandleError(t('Importer_not_setup'));\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetMessageCount(data.message_count);\n\t\t\t\tsetUsers(data.users.map((user) => ({ ...user, username: user.username ?? '', do_import: true })));\n\t\t\t\tsetChannels(data.channels.map((channel) => ({ ...channel, name: channel.name ?? '', do_import: true })));\n\t\t\t\tsetPreparing(false);\n\t\t\t\tsetProgressRate(null);\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t}\n\t\t};\n\n\t\tconst loadCurrentOperation = async () => {\n\t\t\ttry {\n\t\t\t\tconst { operation } = await waitFor(\n\t\t\t\t\tgetCurrentImportOperation,\n\t\t\t\t\t(data): data is Serialized<{ operation: IImport }> =>\n\t\t\t\t\t\tdata.operation.valid && !ImportWaitingStates.includes(data.operation.status),\n\t\t\t\t);\n\n\t\t\t\tif (!operation.valid) {\n\t\t\t\t\trouter.navigate('/admin/import/new');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (ImportingStartedStates.includes(operation.status)) {\n\t\t\t\t\trouter.navigate('/admin/import/progress');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\toperation.status === ProgressStep.USER_SELECTION ||\n\t\t\t\t\tImportPreparingStartedStates.includes(operation.status) ||\n\t\t\t\t\tImportFileReadyStates.includes(operation.status)\n\t\t\t\t) {\n\t\t\t\t\tsetStatus(operation.status);\n\t\t\t\t\tloadImportFileData();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (ImportingErrorStates.includes(operation.status)) {\n\t\t\t\t\thandleError(t('Import_Operation_Failed'));\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (operation.status === ProgressStep.DONE) {\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\thandleError(t('Unknown_Import_State'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t} catch (error) {\n\t\t\t\thandleError(t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t}\n\t\t};\n\n\t\tloadCurrentOperation();\n\t}, [getCurrentImportOperation, getImportFileData, handleError, router, setMessageCount, setPreparing, setProgressRate, setStatus, t]);\n\n\tconst handleStartButtonClick = async () => {\n\t\tsetImporting(true);\n\n\t\ttry {\n\t\t\tconst usersToImport = users.filter(({ do_import }) => do_import).map(({ user_id }) => user_id);\n\t\t\tconst channelsToImport = channels.filter(({ do_import }) => do_import).map(({ channel_id }) => channel_id);\n\n\t\t\tawait startImport({\n\t\t\t\tinput: {\n\t\t\t\t\tusers: {\n\t\t\t\t\t\tall: users.length > 0 && usersToImport.length === users.length,\n\t\t\t\t\t\tlist: (usersToImport.length !== users.length && usersToImport) || undefined,\n\t\t\t\t\t},\n\t\t\t\t\tchannels: {\n\t\t\t\t\t\tall: channels.length > 0 && channelsToImport.length === channels.length,\n\t\t\t\t\t\tlist: (channelsToImport.length !== channels.length && channelsToImport) || undefined,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\trouter.navigate('/admin/import/progress');\n\t\t} catch (error) {\n\t\t\thandleError(error, t('Failed_To_Start_Import'));\n\t\t\trouter.navigate('/admin/import');\n\t\t}\n\t};\n\n\tconst [tab, setTab] = useState('users');\n\tconst handleTabClick = useMemo(() => (tab: string) => () => setTab(tab), []);\n\n\tconst statusDebounced = useDebouncedValue(status, 100);\n\n\tconst handleMinimumImportData = !!(\n\t\t(!usersCount && !channelsCount && !messageCount) ||\n\t\t(!usersCount && !channelsCount && messageCount !== 0)\n\t);\n\n\treturn (\n\t\t<Page>\n\t\t\t<PageHeader title={t('Importing_Data')} onClickBack={() => router.navigate('/admin/import')}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button primary disabled={isImporting || handleMinimumImportData} onClick={handleStartButtonClick}>\n\t\t\t\t\t\t{t('Importer_Prepare_Start_Import')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</PageHeader>\n\t\t\t<PageScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='x24' width='full' maxWidth='590px'>\n\t\t\t\t\t<Box is='h2' fontScale='p2m'>\n\t\t\t\t\t\t{statusDebounced && t(statusDebounced.replace('importer_', 'importer_status_') as TranslationKey)}\n\t\t\t\t\t</Box>\n\t\t\t\t\t{!isPreparing && (\n\t\t\t\t\t\t<Tabs flexShrink={0}>\n\t\t\t\t\t\t\t<Tabs.Item selected={tab === 'users'} onClick={handleTabClick('users')}>\n\t\t\t\t\t\t\t\t{t('Users')} <Badge>{usersCount}</Badge>\n\t\t\t\t\t\t\t</Tabs.Item>\n\t\t\t\t\t\t\t<Tabs.Item selected={tab === 'channels'} onClick={handleTabClick('channels')}>\n\t\t\t\t\t\t\t\t{t('Channels')} <Badge>{channelsCount}</Badge>\n\t\t\t\t\t\t\t</Tabs.Item>\n\t\t\t\t\t\t\t<Tabs.Item disabled>\n\t\t\t\t\t\t\t\t{t('Messages')}\n\t\t\t\t\t\t\t\t<Badge>{messageCount}</Badge>\n\t\t\t\t\t\t\t</Tabs.Item>\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t)}\n\t\t\t\t\t<Margins block='x24'>\n\t\t\t\t\t\t{isPreparing && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{progressRate ? (\n\t\t\t\t\t\t\t\t\t<Box display='flex' justifyContent='center' fontScale='p2'>\n\t\t\t\t\t\t\t\t\t\t<ProgressBar percentage={Math.floor(progressRate)} />\n\t\t\t\t\t\t\t\t\t\t<Box is='span' mis='x24'>\n\t\t\t\t\t\t\t\t\t\t\t{numberFormat(progressRate, 0)}%\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Throbber justifyContent='center' />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isPreparing && tab === 'users' && <PrepareUsers usersCount={usersCount} users={users} setUsers={setUsers} />}\n\t\t\t\t\t\t{!isPreparing && tab === 'channels' && (\n\t\t\t\t\t\t\t<PrepareChannels channels={channels} channelsCount={channelsCount} setChannels={setChannels} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t</Page>\n\t);\n}\n\nexport default PrepareImportPage;\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nlet Badge, Box, Button, ButtonGroup, Margins, ProgressBar, Throbber, Tabs;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Badge(v) {\n    Badge = v;\n  },\n  Box(v) {\n    Box = v;\n  },\n  Button(v) {\n    Button = v;\n  },\n  ButtonGroup(v) {\n    ButtonGroup = v;\n  },\n  Margins(v) {\n    Margins = v;\n  },\n  ProgressBar(v) {\n    ProgressBar = v;\n  },\n  Throbber(v) {\n    Throbber = v;\n  },\n  Tabs(v) {\n    Tabs = v;\n  }\n}, 0);\nlet useDebouncedValue, useSafely;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useDebouncedValue(v) {\n    useDebouncedValue = v;\n  },\n  useSafely(v) {\n    useSafely = v;\n  }\n}, 1);\nlet useEndpoint, useTranslation, useStream, useRouter;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n  useTranslation(v) {\n    useTranslation = v;\n  },\n  useStream(v) {\n    useStream = v;\n  },\n  useRouter(v) {\n    useRouter = v;\n  }\n}, 2);\nlet React, useEffect, useState, useMemo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useEffect(v) {\n    useEffect = v;\n  },\n  useState(v) {\n    useState = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 3);\nlet ProgressStep, ImportWaitingStates, ImportFileReadyStates, ImportPreparingStartedStates, ImportingStartedStates, ImportingErrorStates;\nmodule.link(\"../../../../app/importer/lib/ImporterProgressStep\", {\n  ProgressStep(v) {\n    ProgressStep = v;\n  },\n  ImportWaitingStates(v) {\n    ImportWaitingStates = v;\n  },\n  ImportFileReadyStates(v) {\n    ImportFileReadyStates = v;\n  },\n  ImportPreparingStartedStates(v) {\n    ImportPreparingStartedStates = v;\n  },\n  ImportingStartedStates(v) {\n    ImportingStartedStates = v;\n  },\n  ImportingErrorStates(v) {\n    ImportingErrorStates = v;\n  }\n}, 4);\nlet numberFormat;\nmodule.link(\"../../../../lib/utils/stringUtils\", {\n  numberFormat(v) {\n    numberFormat = v;\n  }\n}, 5);\nlet Page, PageHeader, PageScrollableContentWithShadow;\nmodule.link(\"../../../components/Page\", {\n  Page(v) {\n    Page = v;\n  },\n  PageHeader(v) {\n    PageHeader = v;\n  },\n  PageScrollableContentWithShadow(v) {\n    PageScrollableContentWithShadow = v;\n  }\n}, 6);\nlet PrepareChannels;\nmodule.link(\"./PrepareChannels\", {\n  default(v) {\n    PrepareChannels = v;\n  }\n}, 7);\nlet PrepareUsers;\nmodule.link(\"./PrepareUsers\", {\n  default(v) {\n    PrepareUsers = v;\n  }\n}, 8);\nlet useErrorHandler;\nmodule.link(\"./useErrorHandler\", {\n  useErrorHandler(v) {\n    useErrorHandler = v;\n  }\n}, 9);\nconst waitFor = (fn, predicate) => new Promise((resolve, reject) => {\n  const callPromise = () => {\n    fn().then(result => {\n      if (predicate(result)) {\n        resolve(result);\n        return;\n      }\n      setTimeout(callPromise, 1000);\n    }, reject);\n  };\n  callPromise();\n});\n// TODO: review inner logic\nfunction PrepareImportPage() {\n  const t = useTranslation();\n  const handleError = useErrorHandler();\n  const [isPreparing, setPreparing] = useSafely(useState(true));\n  const [progressRate, setProgressRate] = useSafely(useState(null));\n  const [status, setStatus] = useSafely(useState(null));\n  const [messageCount, setMessageCount] = useSafely(useState(0));\n  const [users, setUsers] = useState([]);\n  const [channels, setChannels] = useState([]);\n  const [isImporting, setImporting] = useSafely(useState(false));\n  const usersCount = useMemo(() => users.filter(_ref => {\n    let {\n      do_import\n    } = _ref;\n    return do_import;\n  }).length, [users]);\n  const channelsCount = useMemo(() => channels.filter(_ref2 => {\n    let {\n      do_import\n    } = _ref2;\n    return do_import;\n  }).length, [channels]);\n  const router = useRouter();\n  const getImportFileData = useEndpoint('GET', '/v1/getImportFileData');\n  const getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n  const startImport = useEndpoint('POST', '/v1/startImport');\n  const streamer = useStream('importers');\n  useEffect(() => streamer('progress', progress => {\n    // Ignore any update without the rate since we're not showing any other info anyway\n    if ('rate' in progress) {\n      setProgressRate(progress.rate);\n    }\n  }), [streamer, setProgressRate]);\n  useEffect(() => {\n    const loadImportFileData = async () => {\n      try {\n        const data = await waitFor(getImportFileData, data => data && (!('waiting' in data) || !data.waiting));\n        if (!data) {\n          handleError(t('Importer_not_setup'));\n          router.navigate('/admin/import');\n          return;\n        }\n        setMessageCount(data.message_count);\n        setUsers(data.users.map(user => {\n          var _user$username;\n          return _objectSpread(_objectSpread({}, user), {}, {\n            username: (_user$username = user.username) !== null && _user$username !== void 0 ? _user$username : '',\n            do_import: true\n          });\n        }));\n        setChannels(data.channels.map(channel => {\n          var _channel$name;\n          return _objectSpread(_objectSpread({}, channel), {}, {\n            name: (_channel$name = channel.name) !== null && _channel$name !== void 0 ? _channel$name : '',\n            do_import: true\n          });\n        }));\n        setPreparing(false);\n        setProgressRate(null);\n      } catch (error) {\n        handleError(error, t('Failed_To_Load_Import_Data'));\n        router.navigate('/admin/import');\n      }\n    };\n    const loadCurrentOperation = async () => {\n      try {\n        const {\n          operation\n        } = await waitFor(getCurrentImportOperation, data => data.operation.valid && !ImportWaitingStates.includes(data.operation.status));\n        if (!operation.valid) {\n          router.navigate('/admin/import/new');\n          return;\n        }\n        if (ImportingStartedStates.includes(operation.status)) {\n          router.navigate('/admin/import/progress');\n          return;\n        }\n        if (operation.status === ProgressStep.USER_SELECTION || ImportPreparingStartedStates.includes(operation.status) || ImportFileReadyStates.includes(operation.status)) {\n          setStatus(operation.status);\n          loadImportFileData();\n          return;\n        }\n        if (ImportingErrorStates.includes(operation.status)) {\n          handleError(t('Import_Operation_Failed'));\n          router.navigate('/admin/import');\n          return;\n        }\n        if (operation.status === ProgressStep.DONE) {\n          router.navigate('/admin/import');\n          return;\n        }\n        handleError(t('Unknown_Import_State'));\n        router.navigate('/admin/import');\n      } catch (error) {\n        handleError(t('Failed_To_Load_Import_Data'));\n        router.navigate('/admin/import');\n      }\n    };\n    loadCurrentOperation();\n  }, [getCurrentImportOperation, getImportFileData, handleError, router, setMessageCount, setPreparing, setProgressRate, setStatus, t]);\n  const handleStartButtonClick = async () => {\n    setImporting(true);\n    try {\n      const usersToImport = users.filter(_ref3 => {\n        let {\n          do_import\n        } = _ref3;\n        return do_import;\n      }).map(_ref4 => {\n        let {\n          user_id\n        } = _ref4;\n        return user_id;\n      });\n      const channelsToImport = channels.filter(_ref5 => {\n        let {\n          do_import\n        } = _ref5;\n        return do_import;\n      }).map(_ref6 => {\n        let {\n          channel_id\n        } = _ref6;\n        return channel_id;\n      });\n      await startImport({\n        input: {\n          users: {\n            all: users.length > 0 && usersToImport.length === users.length,\n            list: usersToImport.length !== users.length && usersToImport || undefined\n          },\n          channels: {\n            all: channels.length > 0 && channelsToImport.length === channels.length,\n            list: channelsToImport.length !== channels.length && channelsToImport || undefined\n          }\n        }\n      });\n      router.navigate('/admin/import/progress');\n    } catch (error) {\n      handleError(error, t('Failed_To_Start_Import'));\n      router.navigate('/admin/import');\n    }\n  };\n  const [tab, setTab] = useState('users');\n  const handleTabClick = useMemo(() => tab => () => setTab(tab), []);\n  const statusDebounced = useDebouncedValue(status, 100);\n  const handleMinimumImportData = !!(!usersCount && !channelsCount && !messageCount || !usersCount && !channelsCount && messageCount !== 0);\n  return /*#__PURE__*/React.createElement(Page, null, /*#__PURE__*/React.createElement(PageHeader, {\n    title: t('Importing_Data'),\n    onClickBack: () => router.navigate('/admin/import')\n  }, /*#__PURE__*/React.createElement(ButtonGroup, null, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    disabled: isImporting || handleMinimumImportData,\n    onClick: handleStartButtonClick\n  }, t('Importer_Prepare_Start_Import')))), /*#__PURE__*/React.createElement(PageScrollableContentWithShadow, null, /*#__PURE__*/React.createElement(Box, {\n    marginInline: \"auto\",\n    marginBlock: \"x24\",\n    width: \"full\",\n    maxWidth: \"590px\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    is: \"h2\",\n    fontScale: \"p2m\"\n  }, statusDebounced && t(statusDebounced.replace('importer_', 'importer_status_'))), !isPreparing && /*#__PURE__*/React.createElement(Tabs, {\n    flexShrink: 0\n  }, /*#__PURE__*/React.createElement(Tabs.Item, {\n    selected: tab === 'users',\n    onClick: handleTabClick('users')\n  }, t('Users'), \" \", /*#__PURE__*/React.createElement(Badge, null, usersCount)), /*#__PURE__*/React.createElement(Tabs.Item, {\n    selected: tab === 'channels',\n    onClick: handleTabClick('channels')\n  }, t('Channels'), \" \", /*#__PURE__*/React.createElement(Badge, null, channelsCount)), /*#__PURE__*/React.createElement(Tabs.Item, {\n    disabled: true\n  }, t('Messages'), /*#__PURE__*/React.createElement(Badge, null, messageCount))), /*#__PURE__*/React.createElement(Margins, {\n    block: \"x24\"\n  }, isPreparing && /*#__PURE__*/React.createElement(React.Fragment, null, progressRate ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    fontScale: \"p2\"\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    percentage: Math.floor(progressRate)\n  }), /*#__PURE__*/React.createElement(Box, {\n    is: \"span\",\n    mis: \"x24\"\n  }, numberFormat(progressRate, 0), \"%\")) : /*#__PURE__*/React.createElement(Throbber, {\n    justifyContent: \"center\"\n  })), !isPreparing && tab === 'users' && /*#__PURE__*/React.createElement(PrepareUsers, {\n    usersCount: usersCount,\n    users: users,\n    setUsers: setUsers\n  }), !isPreparing && tab === 'channels' && /*#__PURE__*/React.createElement(PrepareChannels, {\n    channels: channels,\n    channelsCount: channelsCount,\n    setChannels: setChannels\n  })))));\n}\nmodule.exportDefault(PrepareImportPage);","map":{"version":3,"names":["_objectSpread","module","link","default","v","Badge","Box","Button","ButtonGroup","Margins","ProgressBar","Throbber","Tabs","useDebouncedValue","useSafely","useEndpoint","useTranslation","useStream","useRouter","React","useEffect","useState","useMemo","ProgressStep","ImportWaitingStates","ImportFileReadyStates","ImportPreparingStartedStates","ImportingStartedStates","ImportingErrorStates","numberFormat","Page","PageHeader","PageScrollableContentWithShadow","PrepareChannels","PrepareUsers","useErrorHandler","waitFor","fn","predicate","Promise","resolve","reject","callPromise","then","result","setTimeout","PrepareImportPage","t","handleError","isPreparing","setPreparing","progressRate","setProgressRate","status","setStatus","messageCount","setMessageCount","users","setUsers","channels","setChannels","isImporting","setImporting","usersCount","filter","_ref","do_import","length","channelsCount","_ref2","router","getImportFileData","getCurrentImportOperation","startImport","streamer","progress","rate","loadImportFileData","data","waiting","navigate","message_count","map","user","_user$username","username","channel","_channel$name","name","error","loadCurrentOperation","operation","valid","includes","USER_SELECTION","DONE","handleStartButtonClick","usersToImport","_ref3","_ref4","user_id","channelsToImport","_ref5","_ref6","channel_id","input","all","list","undefined","tab","setTab","handleTabClick","statusDebounced","handleMinimumImportData","createElement","title","onClickBack","primary","disabled","onClick","marginInline","marginBlock","width","maxWidth","is","fontScale","replace","flexShrink","Item","selected","block","Fragment","display","justifyContent","percentage","Math","floor","mis","exportDefault"],"sources":["client/views/admin/import/PrepareImportPage.tsx"],"sourcesContent":["import type { IImport, IImporterSelection, Serialized } from '@rocket.chat/core-typings';\nimport { Badge, Box, Button, ButtonGroup, Margins, ProgressBar, Throbber, Tabs } from '@rocket.chat/fuselage';\nimport { useDebouncedValue, useSafely } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint, useTranslation, useStream, useRouter } from '@rocket.chat/ui-contexts';\nimport React, { useEffect, useState, useMemo } from 'react';\n\nimport {\n\tProgressStep,\n\tImportWaitingStates,\n\tImportFileReadyStates,\n\tImportPreparingStartedStates,\n\tImportingStartedStates,\n\tImportingErrorStates,\n} from '../../../../app/importer/lib/ImporterProgressStep';\nimport { numberFormat } from '../../../../lib/utils/stringUtils';\nimport { Page, PageHeader, PageScrollableContentWithShadow } from '../../../components/Page';\nimport type { ChannelDescriptor } from './ChannelDescriptor';\nimport PrepareChannels from './PrepareChannels';\nimport PrepareUsers from './PrepareUsers';\nimport type { UserDescriptor } from './UserDescriptor';\nimport { useErrorHandler } from './useErrorHandler';\n\nconst waitFor = <T, U extends T>(fn: () => Promise<T>, predicate: (arg: T) => arg is U) =>\n\tnew Promise<U>((resolve, reject) => {\n\t\tconst callPromise = () => {\n\t\t\tfn().then((result) => {\n\t\t\t\tif (predicate(result)) {\n\t\t\t\t\tresolve(result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(callPromise, 1000);\n\t\t\t}, reject);\n\t\t};\n\n\t\tcallPromise();\n\t});\n\n// TODO: review inner logic\nfunction PrepareImportPage() {\n\tconst t = useTranslation();\n\tconst handleError = useErrorHandler();\n\n\tconst [isPreparing, setPreparing] = useSafely(useState(true));\n\tconst [progressRate, setProgressRate] = useSafely(useState<number | null>(null));\n\tconst [status, setStatus] = useSafely(useState<string | null>(null));\n\tconst [messageCount, setMessageCount] = useSafely(useState(0));\n\tconst [users, setUsers] = useState<UserDescriptor[]>([]);\n\tconst [channels, setChannels] = useState<ChannelDescriptor[]>([]);\n\tconst [isImporting, setImporting] = useSafely(useState(false));\n\n\tconst usersCount = useMemo(() => users.filter(({ do_import }) => do_import).length, [users]);\n\tconst channelsCount = useMemo(() => channels.filter(({ do_import }) => do_import).length, [channels]);\n\n\tconst router = useRouter();\n\n\tconst getImportFileData = useEndpoint('GET', '/v1/getImportFileData');\n\tconst getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n\tconst startImport = useEndpoint('POST', '/v1/startImport');\n\n\tconst streamer = useStream('importers');\n\n\tuseEffect(\n\t\t() =>\n\t\t\tstreamer('progress', (progress) => {\n\t\t\t\t// Ignore any update without the rate since we're not showing any other info anyway\n\t\t\t\tif ('rate' in progress) {\n\t\t\t\t\tsetProgressRate(progress.rate);\n\t\t\t\t}\n\t\t\t}),\n\t\t[streamer, setProgressRate],\n\t);\n\n\tuseEffect(() => {\n\t\tconst loadImportFileData = async () => {\n\t\t\ttry {\n\t\t\t\tconst data = await waitFor(\n\t\t\t\t\tgetImportFileData,\n\t\t\t\t\t(data): data is IImporterSelection => data && (!('waiting' in data) || !data.waiting),\n\t\t\t\t);\n\n\t\t\t\tif (!data) {\n\t\t\t\t\thandleError(t('Importer_not_setup'));\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetMessageCount(data.message_count);\n\t\t\t\tsetUsers(data.users.map((user) => ({ ...user, username: user.username ?? '', do_import: true })));\n\t\t\t\tsetChannels(data.channels.map((channel) => ({ ...channel, name: channel.name ?? '', do_import: true })));\n\t\t\t\tsetPreparing(false);\n\t\t\t\tsetProgressRate(null);\n\t\t\t} catch (error) {\n\t\t\t\thandleError(error, t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t}\n\t\t};\n\n\t\tconst loadCurrentOperation = async () => {\n\t\t\ttry {\n\t\t\t\tconst { operation } = await waitFor(\n\t\t\t\t\tgetCurrentImportOperation,\n\t\t\t\t\t(data): data is Serialized<{ operation: IImport }> =>\n\t\t\t\t\t\tdata.operation.valid && !ImportWaitingStates.includes(data.operation.status),\n\t\t\t\t);\n\n\t\t\t\tif (!operation.valid) {\n\t\t\t\t\trouter.navigate('/admin/import/new');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (ImportingStartedStates.includes(operation.status)) {\n\t\t\t\t\trouter.navigate('/admin/import/progress');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\toperation.status === ProgressStep.USER_SELECTION ||\n\t\t\t\t\tImportPreparingStartedStates.includes(operation.status) ||\n\t\t\t\t\tImportFileReadyStates.includes(operation.status)\n\t\t\t\t) {\n\t\t\t\t\tsetStatus(operation.status);\n\t\t\t\t\tloadImportFileData();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (ImportingErrorStates.includes(operation.status)) {\n\t\t\t\t\thandleError(t('Import_Operation_Failed'));\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (operation.status === ProgressStep.DONE) {\n\t\t\t\t\trouter.navigate('/admin/import');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\thandleError(t('Unknown_Import_State'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t} catch (error) {\n\t\t\t\thandleError(t('Failed_To_Load_Import_Data'));\n\t\t\t\trouter.navigate('/admin/import');\n\t\t\t}\n\t\t};\n\n\t\tloadCurrentOperation();\n\t}, [getCurrentImportOperation, getImportFileData, handleError, router, setMessageCount, setPreparing, setProgressRate, setStatus, t]);\n\n\tconst handleStartButtonClick = async () => {\n\t\tsetImporting(true);\n\n\t\ttry {\n\t\t\tconst usersToImport = users.filter(({ do_import }) => do_import).map(({ user_id }) => user_id);\n\t\t\tconst channelsToImport = channels.filter(({ do_import }) => do_import).map(({ channel_id }) => channel_id);\n\n\t\t\tawait startImport({\n\t\t\t\tinput: {\n\t\t\t\t\tusers: {\n\t\t\t\t\t\tall: users.length > 0 && usersToImport.length === users.length,\n\t\t\t\t\t\tlist: (usersToImport.length !== users.length && usersToImport) || undefined,\n\t\t\t\t\t},\n\t\t\t\t\tchannels: {\n\t\t\t\t\t\tall: channels.length > 0 && channelsToImport.length === channels.length,\n\t\t\t\t\t\tlist: (channelsToImport.length !== channels.length && channelsToImport) || undefined,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\trouter.navigate('/admin/import/progress');\n\t\t} catch (error) {\n\t\t\thandleError(error, t('Failed_To_Start_Import'));\n\t\t\trouter.navigate('/admin/import');\n\t\t}\n\t};\n\n\tconst [tab, setTab] = useState('users');\n\tconst handleTabClick = useMemo(() => (tab: string) => () => setTab(tab), []);\n\n\tconst statusDebounced = useDebouncedValue(status, 100);\n\n\tconst handleMinimumImportData = !!(\n\t\t(!usersCount && !channelsCount && !messageCount) ||\n\t\t(!usersCount && !channelsCount && messageCount !== 0)\n\t);\n\n\treturn (\n\t\t<Page>\n\t\t\t<PageHeader title={t('Importing_Data')} onClickBack={() => router.navigate('/admin/import')}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button primary disabled={isImporting || handleMinimumImportData} onClick={handleStartButtonClick}>\n\t\t\t\t\t\t{t('Importer_Prepare_Start_Import')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</PageHeader>\n\t\t\t<PageScrollableContentWithShadow>\n\t\t\t\t<Box marginInline='auto' marginBlock='x24' width='full' maxWidth='590px'>\n\t\t\t\t\t<Box is='h2' fontScale='p2m'>\n\t\t\t\t\t\t{statusDebounced && t(statusDebounced.replace('importer_', 'importer_status_') as TranslationKey)}\n\t\t\t\t\t</Box>\n\t\t\t\t\t{!isPreparing && (\n\t\t\t\t\t\t<Tabs flexShrink={0}>\n\t\t\t\t\t\t\t<Tabs.Item selected={tab === 'users'} onClick={handleTabClick('users')}>\n\t\t\t\t\t\t\t\t{t('Users')} <Badge>{usersCount}</Badge>\n\t\t\t\t\t\t\t</Tabs.Item>\n\t\t\t\t\t\t\t<Tabs.Item selected={tab === 'channels'} onClick={handleTabClick('channels')}>\n\t\t\t\t\t\t\t\t{t('Channels')} <Badge>{channelsCount}</Badge>\n\t\t\t\t\t\t\t</Tabs.Item>\n\t\t\t\t\t\t\t<Tabs.Item disabled>\n\t\t\t\t\t\t\t\t{t('Messages')}\n\t\t\t\t\t\t\t\t<Badge>{messageCount}</Badge>\n\t\t\t\t\t\t\t</Tabs.Item>\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t)}\n\t\t\t\t\t<Margins block='x24'>\n\t\t\t\t\t\t{isPreparing && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{progressRate ? (\n\t\t\t\t\t\t\t\t\t<Box display='flex' justifyContent='center' fontScale='p2'>\n\t\t\t\t\t\t\t\t\t\t<ProgressBar percentage={Math.floor(progressRate)} />\n\t\t\t\t\t\t\t\t\t\t<Box is='span' mis='x24'>\n\t\t\t\t\t\t\t\t\t\t\t{numberFormat(progressRate, 0)}%\n\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Throbber justifyContent='center' />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!isPreparing && tab === 'users' && <PrepareUsers usersCount={usersCount} users={users} setUsers={setUsers} />}\n\t\t\t\t\t\t{!isPreparing && tab === 'channels' && (\n\t\t\t\t\t\t\t<PrepareChannels channels={channels} channelsCount={channelsCount} setChannels={setChannels} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Margins>\n\t\t\t\t</Box>\n\t\t\t</PageScrollableContentWithShadow>\n\t\t</Page>\n\t);\n}\n\nexport default PrepareImportPage;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"85944f53c032fef999035c17b96f348462a4f7e7"}
