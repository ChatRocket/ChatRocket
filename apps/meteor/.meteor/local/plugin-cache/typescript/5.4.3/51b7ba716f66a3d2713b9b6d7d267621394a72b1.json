{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/FederationKeys.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/FederationKeys.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/FederationKeys.ts","inputSourceMap":{"version":3,"file":"server/models/raw/FederationKeys.ts","sourceRoot":"","sources":["server/models/raw/FederationKeys.ts"],"names":[],"mappings":"AAGA,OAAO,OAAO,MAAM,UAAU,CAAC;AAE/B,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,iBAAkB,SAAQ,OAAsB;IAC5D,YAAY,EAAM,EAAE,KAA0D;QAC7E,KAAK,CAAC,EAAE,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,IAA2B;QACvC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QAEjD,IAAI,CAAC,WAAW,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC;QACb,CAAC;QAED,OAAO,WAAW,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,OAAoB,EAAE,IAA2B;QACxD,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,SAAS,IAAI,MAAM,CAAC,CAAC;IAClD,CAAC;IAED,KAAK,CAAC,YAAY;QAIjB,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAEpC,GAAG,CAAC,eAAe,EAAE,CAAC;QAEtB,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAE1B,MAAM,IAAI,CAAC,SAAS,CAAC;YACpB,IAAI,EAAE,SAAS;YACf,GAAG,EAAE,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;SAC7D,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,SAAS,CAAC;YACpB,IAAI,EAAE,QAAQ;YACd,GAAG,EAAE,GAAG,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;SAC5D,CAAC,CAAC;QAEH,OAAO;YACN,UAAU,EAAE,MAAM,IAAI,CAAC,aAAa,EAAE;YACtC,SAAS,EAAE,MAAM,IAAI,CAAC,YAAY,EAAE;SACpC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,aAAa;QAClB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAE7C,OAAO,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IACpD,CAAC;IAED,mBAAmB;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,YAAY;QACjB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE5C,OAAO,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC;IAED,kBAAkB;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC9B,CAAC;CACD","sourcesContent":["import type { FederationKey, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IFederationKeysModel } from '@rocket.chat/model-typings';\nimport type { Db, Collection } from 'mongodb';\nimport NodeRSA from 'node-rsa';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class FederationKeysRaw extends BaseRaw<FederationKey> implements IFederationKeysModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<FederationKey>>) {\n\t\tsuper(db, 'federation_keys', trash);\n\t}\n\n\tasync getKey(type: FederationKey['type']): Promise<string | null> {\n\t\tconst keyResource = await this.findOne({ type });\n\n\t\tif (!keyResource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn keyResource.key;\n\t}\n\n\tloadKey(keyData: NodeRSA.Key, type: FederationKey['type']): NodeRSA {\n\t\treturn new NodeRSA(keyData, `pkcs8-${type}-pem`);\n\t}\n\n\tasync generateKeys(): Promise<{\n\t\tprivateKey: '' | NodeRSA | null;\n\t\tpublicKey: '' | NodeRSA | null;\n\t}> {\n\t\tconst key = new NodeRSA({ b: 512 });\n\n\t\tkey.generateKeyPair();\n\n\t\tawait this.deleteMany({});\n\n\t\tawait this.insertOne({\n\t\t\ttype: 'private',\n\t\t\tkey: key.exportKey('pkcs8-private-pem').replace(/\\n|\\r/g, ''),\n\t\t});\n\n\t\tawait this.insertOne({\n\t\t\ttype: 'public',\n\t\t\tkey: key.exportKey('pkcs8-public-pem').replace(/\\n|\\r/g, ''),\n\t\t});\n\n\t\treturn {\n\t\t\tprivateKey: await this.getPrivateKey(),\n\t\t\tpublicKey: await this.getPublicKey(),\n\t\t};\n\t}\n\n\tasync getPrivateKey(): Promise<'' | NodeRSA | null> {\n\t\tconst keyData = await this.getKey('private');\n\n\t\treturn keyData && this.loadKey(keyData, 'private');\n\t}\n\n\tgetPrivateKeyString(): Promise<string | null> {\n\t\treturn this.getKey('private');\n\t}\n\n\tasync getPublicKey(): Promise<'' | NodeRSA | null> {\n\t\tconst keyData = await this.getKey('public');\n\n\t\treturn keyData && this.loadKey(keyData, 'public');\n\t}\n\n\tgetPublicKeyString(): Promise<string | null> {\n\t\treturn this.getKey('public');\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/FederationKeys.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/FederationKeys.ts","inputSourceMap":{"version":3,"file":"server/models/raw/FederationKeys.ts","sourceRoot":"","sources":["server/models/raw/FederationKeys.ts"],"names":[],"mappings":"AAGA,OAAO,OAAO,MAAM,UAAU,CAAC;AAE/B,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,iBAAkB,SAAQ,OAAsB;IAC5D,YAAY,EAAM,EAAE,KAA0D;QAC7E,KAAK,CAAC,EAAE,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,IAA2B;QACvC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QAEjD,IAAI,CAAC,WAAW,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC;QACb,CAAC;QAED,OAAO,WAAW,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,OAAoB,EAAE,IAA2B;QACxD,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,SAAS,IAAI,MAAM,CAAC,CAAC;IAClD,CAAC;IAED,KAAK,CAAC,YAAY;QAIjB,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAEpC,GAAG,CAAC,eAAe,EAAE,CAAC;QAEtB,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAE1B,MAAM,IAAI,CAAC,SAAS,CAAC;YACpB,IAAI,EAAE,SAAS;YACf,GAAG,EAAE,GAAG,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;SAC7D,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,SAAS,CAAC;YACpB,IAAI,EAAE,QAAQ;YACd,GAAG,EAAE,GAAG,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;SAC5D,CAAC,CAAC;QAEH,OAAO;YACN,UAAU,EAAE,MAAM,IAAI,CAAC,aAAa,EAAE;YACtC,SAAS,EAAE,MAAM,IAAI,CAAC,YAAY,EAAE;SACpC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,aAAa;QAClB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAE7C,OAAO,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IACpD,CAAC;IAED,mBAAmB;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,YAAY;QACjB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE5C,OAAO,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACnD,CAAC;IAED,kBAAkB;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC9B,CAAC;CACD","sourcesContent":["import type { FederationKey, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IFederationKeysModel } from '@rocket.chat/model-typings';\nimport type { Db, Collection } from 'mongodb';\nimport NodeRSA from 'node-rsa';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class FederationKeysRaw extends BaseRaw<FederationKey> implements IFederationKeysModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<FederationKey>>) {\n\t\tsuper(db, 'federation_keys', trash);\n\t}\n\n\tasync getKey(type: FederationKey['type']): Promise<string | null> {\n\t\tconst keyResource = await this.findOne({ type });\n\n\t\tif (!keyResource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn keyResource.key;\n\t}\n\n\tloadKey(keyData: NodeRSA.Key, type: FederationKey['type']): NodeRSA {\n\t\treturn new NodeRSA(keyData, `pkcs8-${type}-pem`);\n\t}\n\n\tasync generateKeys(): Promise<{\n\t\tprivateKey: '' | NodeRSA | null;\n\t\tpublicKey: '' | NodeRSA | null;\n\t}> {\n\t\tconst key = new NodeRSA({ b: 512 });\n\n\t\tkey.generateKeyPair();\n\n\t\tawait this.deleteMany({});\n\n\t\tawait this.insertOne({\n\t\t\ttype: 'private',\n\t\t\tkey: key.exportKey('pkcs8-private-pem').replace(/\\n|\\r/g, ''),\n\t\t});\n\n\t\tawait this.insertOne({\n\t\t\ttype: 'public',\n\t\t\tkey: key.exportKey('pkcs8-public-pem').replace(/\\n|\\r/g, ''),\n\t\t});\n\n\t\treturn {\n\t\t\tprivateKey: await this.getPrivateKey(),\n\t\t\tpublicKey: await this.getPublicKey(),\n\t\t};\n\t}\n\n\tasync getPrivateKey(): Promise<'' | NodeRSA | null> {\n\t\tconst keyData = await this.getKey('private');\n\n\t\treturn keyData && this.loadKey(keyData, 'private');\n\t}\n\n\tgetPrivateKeyString(): Promise<string | null> {\n\t\treturn this.getKey('private');\n\t}\n\n\tasync getPublicKey(): Promise<'' | NodeRSA | null> {\n\t\tconst keyData = await this.getKey('public');\n\n\t\treturn keyData && this.loadKey(keyData, 'public');\n\t}\n\n\tgetPublicKeyString(): Promise<string | null> {\n\t\treturn this.getKey('public');\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      FederationKeysRaw: () => FederationKeysRaw\n    });\n    let NodeRSA;\n    module.link(\"node-rsa\", {\n      default(v) {\n        NodeRSA = v;\n      }\n    }, 0);\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class FederationKeysRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'federation_keys', trash);\n      }\n      async getKey(type) {\n        const keyResource = await this.findOne({\n          type\n        });\n        if (!keyResource) {\n          return null;\n        }\n        return keyResource.key;\n      }\n      loadKey(keyData, type) {\n        return new NodeRSA(keyData, \"pkcs8-\".concat(type, \"-pem\"));\n      }\n      async generateKeys() {\n        const key = new NodeRSA({\n          b: 512\n        });\n        key.generateKeyPair();\n        await this.deleteMany({});\n        await this.insertOne({\n          type: 'private',\n          key: key.exportKey('pkcs8-private-pem').replace(/\\n|\\r/g, '')\n        });\n        await this.insertOne({\n          type: 'public',\n          key: key.exportKey('pkcs8-public-pem').replace(/\\n|\\r/g, '')\n        });\n        return {\n          privateKey: await this.getPrivateKey(),\n          publicKey: await this.getPublicKey()\n        };\n      }\n      async getPrivateKey() {\n        const keyData = await this.getKey('private');\n        return keyData && this.loadKey(keyData, 'private');\n      }\n      getPrivateKeyString() {\n        return this.getKey('private');\n      }\n      async getPublicKey() {\n        const keyData = await this.getKey('public');\n        return keyData && this.loadKey(keyData, 'public');\n      }\n      getPublicKeyString() {\n        return this.getKey('public');\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","FederationKeysRaw","NodeRSA","link","default","v","BaseRaw","__reifyWaitForDeps__","constructor","db","trash","getKey","type","keyResource","findOne","key","loadKey","keyData","concat","generateKeys","b","generateKeyPair","deleteMany","insertOne","exportKey","replace","privateKey","getPrivateKey","publicKey","getPublicKey","getPrivateKeyString","getPublicKeyString","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/FederationKeys.ts"],"sourcesContent":["import type { FederationKey, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IFederationKeysModel } from '@rocket.chat/model-typings';\nimport type { Db, Collection } from 'mongodb';\nimport NodeRSA from 'node-rsa';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class FederationKeysRaw extends BaseRaw<FederationKey> implements IFederationKeysModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<FederationKey>>) {\n\t\tsuper(db, 'federation_keys', trash);\n\t}\n\n\tasync getKey(type: FederationKey['type']): Promise<string | null> {\n\t\tconst keyResource = await this.findOne({ type });\n\n\t\tif (!keyResource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn keyResource.key;\n\t}\n\n\tloadKey(keyData: NodeRSA.Key, type: FederationKey['type']): NodeRSA {\n\t\treturn new NodeRSA(keyData, `pkcs8-${type}-pem`);\n\t}\n\n\tasync generateKeys(): Promise<{\n\t\tprivateKey: '' | NodeRSA | null;\n\t\tpublicKey: '' | NodeRSA | null;\n\t}> {\n\t\tconst key = new NodeRSA({ b: 512 });\n\n\t\tkey.generateKeyPair();\n\n\t\tawait this.deleteMany({});\n\n\t\tawait this.insertOne({\n\t\t\ttype: 'private',\n\t\t\tkey: key.exportKey('pkcs8-private-pem').replace(/\\n|\\r/g, ''),\n\t\t});\n\n\t\tawait this.insertOne({\n\t\t\ttype: 'public',\n\t\t\tkey: key.exportKey('pkcs8-public-pem').replace(/\\n|\\r/g, ''),\n\t\t});\n\n\t\treturn {\n\t\t\tprivateKey: await this.getPrivateKey(),\n\t\t\tpublicKey: await this.getPublicKey(),\n\t\t};\n\t}\n\n\tasync getPrivateKey(): Promise<'' | NodeRSA | null> {\n\t\tconst keyData = await this.getKey('private');\n\n\t\treturn keyData && this.loadKey(keyData, 'private');\n\t}\n\n\tgetPrivateKeyString(): Promise<string | null> {\n\t\treturn this.getKey('private');\n\t}\n\n\tasync getPublicKey(): Promise<'' | NodeRSA | null> {\n\t\tconst keyData = await this.getKey('public');\n\n\t\treturn keyData && this.loadKey(keyData, 'public');\n\t}\n\n\tgetPublicKeyString(): Promise<string | null> {\n\t\treturn this.getKey('public');\n\t}\n}\n"],"mappings":";;;IAGAA,MAAA,CAAOC,MAAA,CAAO;MAAAC,iBAAiB,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,OAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAC,QAAAC,CAAA;QAAAH,OAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,OAAA;IAAAP,MAAA,CAAAI,IAAA;MAAAG,QAAAD,CAAA;QAAAC,OAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,oBAAA,WAAAA,oBAAA;IAIzB,MAAON,iBAAkB,SAAQK,OAAsB;MAC5DE,YAAYC,EAAM,EAAEC,KAA0D;QAC7E,KAAK,CAACD,EAAE,EAAE,iBAAiB,EAAEC,KAAK,CAAC;MACpC;MAEA,MAAMC,MAAMA,CAACC,IAA2B;QACvC,MAAMC,WAAW,GAAG,MAAM,IAAI,CAACC,OAAO,CAAC;UAAEF;QAAI,CAAE,CAAC;QAEhD,IAAI,CAACC,WAAW,EAAE;UACjB,OAAO,IAAI;QACZ;QAEA,OAAOA,WAAW,CAACE,GAAG;MACvB;MAEAC,OAAOA,CAACC,OAAoB,EAAEL,IAA2B;QACxD,OAAO,IAAIV,OAAO,CAACe,OAAO,WAAAC,MAAA,CAAWN,IAAI,SAAM,CAAC;MACjD;MAEA,MAAMO,YAAYA,CAAA;QAIjB,MAAMJ,GAAG,GAAG,IAAIb,OAAO,CAAC;UAAEkB,CAAC,EAAE;QAAG,CAAE,CAAC;QAEnCL,GAAG,CAACM,eAAe,EAAE;QAErB,MAAM,IAAI,CAACC,UAAU,CAAC,EAAE,CAAC;QAEzB,MAAM,IAAI,CAACC,SAAS,CAAC;UACpBX,IAAI,EAAE,SAAS;UACfG,GAAG,EAAEA,GAAG,CAACS,SAAS,CAAC,mBAAmB,CAAC,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE;SAC5D,CAAC;QAEF,MAAM,IAAI,CAACF,SAAS,CAAC;UACpBX,IAAI,EAAE,QAAQ;UACdG,GAAG,EAAEA,GAAG,CAACS,SAAS,CAAC,kBAAkB,CAAC,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE;SAC3D,CAAC;QAEF,OAAO;UACNC,UAAU,EAAE,MAAM,IAAI,CAACC,aAAa,EAAE;UACtCC,SAAS,EAAE,MAAM,IAAI,CAACC,YAAY;SAClC;MACF;MAEA,MAAMF,aAAaA,CAAA;QAClB,MAAMV,OAAO,GAAG,MAAM,IAAI,CAACN,MAAM,CAAC,SAAS,CAAC;QAE5C,OAAOM,OAAO,IAAI,IAAI,CAACD,OAAO,CAACC,OAAO,EAAE,SAAS,CAAC;MACnD;MAEAa,mBAAmBA,CAAA;QAClB,OAAO,IAAI,CAACnB,MAAM,CAAC,SAAS,CAAC;MAC9B;MAEA,MAAMkB,YAAYA,CAAA;QACjB,MAAMZ,OAAO,GAAG,MAAM,IAAI,CAACN,MAAM,CAAC,QAAQ,CAAC;QAE3C,OAAOM,OAAO,IAAI,IAAI,CAACD,OAAO,CAACC,OAAO,EAAE,QAAQ,CAAC;MAClD;MAEAc,kBAAkBA,CAAA;QACjB,OAAO,IAAI,CAACpB,MAAM,CAAC,QAAQ,CAAC;MAC7B;;IACAqB,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"51b7ba716f66a3d2713b9b6d7d267621394a72b1"}
