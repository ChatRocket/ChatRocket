{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/voip/QueueAggregator.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/voip/QueueAggregator.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/voip/QueueAggregator.ts","inputSourceMap":{"version":3,"file":"client/lib/voip/QueueAggregator.ts","sourceRoot":"","sources":["client/lib/voip/QueueAggregator.ts"],"names":[],"mappings":"AAAA;;;;;;;;;GASG;AAWH;;;GAGG;AACH,MAAM,OAAO,eAAe;IAC3B,+DAA+D;IACvD,8BAA8B,CAAwB;IAEtD,gBAAgB,CAAsB;IAEtC,4BAA4B,CAA6B;IAEzD,SAAS,CAAS;IAE1B;QACC,IAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;QACzC,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;IACxC,CAAC;IAEO,eAAe,CAAC,SAAiB,EAAE,WAAmB;QAC7D,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC;YACrD,oEAAoE;YACpE,OAAO;QACR,CAAC;QACD,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC,YAAY,GAAG,WAAW,CAAC;IACzE,CAAC;IAED,aAAa,CAAC,YAA0C;QACvD,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC;QAExC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACrC,MAAM,SAAS,GAAe;gBAC7B,SAAS,EAAE,KAAK,CAAC,IAAI;gBACrB,YAAY,EAAE,CAAC;aACf,CAAC;YACF,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;QAC3D,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,cAAoF;QAC/F,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,SAAS,EAAE,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;IACpF,CAAC;IAED,YAAY,CAAC,KAA0E;QACtF,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,WAAW,CAAC,KAAiD;QAC5D,yEAAyE;QACzE,MAAM,SAAS,GAAe;YAC7B,SAAS,EAAE,KAAK,CAAC,SAAS;YAC1B,YAAY,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC;SACvC,CAAC;QACF,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;IAChE,CAAC;IAED,aAAa,CAAC,KAAiD;QAC9D,6EAA6E;QAC7E,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;YAC3D,oEAAoE;YACpE,OAAO;QACR,CAAC;QACD,OAAO,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAC3D,CAAC;IAED,cAAc,CAAC,KAA4D;QAC1E,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,mBAAmB;QAClB,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IACnH,CAAC;IAED,mBAAmB;QAClB,IAAI,IAAI,CAAC,gBAAgB,EAAE,SAAS,EAAE,CAAC;YACtC,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,SAAS,CAAC;QAClD,CAAC;QAED,OAAO,EAAE,CAAC;IACX,CAAC;IAED,WAAW,CAAC,SAAwE;QACnF,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC;YAC/D,OAAO;QACR,CAAC;QAED,MAAM,YAAY,GAAwB;YACzC,SAAS,EAAE,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,SAAS,CAAC;YACjE,QAAQ,EAAE;gBACT,QAAQ,EAAE,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAC/B,UAAU,EAAE,SAAS,CAAC,QAAQ,CAAC,IAAI;aACnC;YACD,WAAW,EAAE,SAAS;YACtB,SAAS,EAAE,SAAS;YACpB,cAAc,EAAE,IAAI,CAAC,SAAS;SAC9B,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC;IACtC,CAAC;IAED,WAAW;QACV,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAChD,CAAC;IACF,CAAC;IAED,SAAS;QACR,kCAAkC;QAClC,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;YAC7C,IAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACpE,CAAC;IACF,CAAC;CACD","sourcesContent":["/**\n * Class representing the agent's queue information. This class stores the information\n * of all the queues that the agent is serving.\n *\n * @remarks\n * This class stores the necessary information of agent's queue stats.\n * It also maintains a history of agents queue operation history for current\n * login session. (Agent logging in to rocket-chat and logging off from rocket chat.)\n * Currently the data is stored locally but may sent back to server if such need exists.\n */\n\nimport type { IQueueMembershipSubscription, ICallerInfo, IQueueInfo } from '@rocket.chat/core-typings';\n\ninterface IQueueServingRecord {\n\tqueueInfo: IQueueInfo;\n\tcallStarted: Date | undefined;\n\tcallEnded: Date | undefined;\n\tcallerId: ICallerInfo;\n\tagentExtension: string;\n}\n/**\n * Currently this class depends on the external users to update this class.\n * But in theory, this class serves as\n */\nexport class QueueAggregator {\n\t// Maintains the history of the queue that the agent has served\n\tprivate sessionQueueCallServingHistory: IQueueServingRecord[];\n\n\tprivate currentlyServing: IQueueServingRecord;\n\n\tprivate currentQueueMembershipStatus: Record<string, IQueueInfo>;\n\n\tprivate extension: string;\n\n\tconstructor() {\n\t\tthis.sessionQueueCallServingHistory = [];\n\t\tthis.currentQueueMembershipStatus = {};\n\t}\n\n\tprivate updateQueueInfo(queueName: string, queuedCalls: number): void {\n\t\tif (!this.currentQueueMembershipStatus?.[queueName]) {\n\t\t\t// something is wrong. Queue is not found in the membership details.\n\t\t\treturn;\n\t\t}\n\t\tthis.currentQueueMembershipStatus[queueName].callsInQueue = queuedCalls;\n\t}\n\n\tsetMembership(subscription: IQueueMembershipSubscription): void {\n\t\tthis.extension = subscription.extension;\n\n\t\tsubscription.queues.forEach((queue) => {\n\t\t\tconst queueInfo: IQueueInfo = {\n\t\t\t\tqueueName: queue.name,\n\t\t\t\tcallsInQueue: 0,\n\t\t\t};\n\t\t\tthis.currentQueueMembershipStatus[queue.name] = queueInfo;\n\t\t});\n\t}\n\n\tqueueJoined(joiningDetails: { queuename: string; callerid: { id: string }; queuedcalls: string }): void {\n\t\tthis.updateQueueInfo(joiningDetails.queuename, Number(joiningDetails.queuedcalls));\n\t}\n\n\tcallPickedup(queue: { queuename: string; queuedcalls: string; waittimeinqueue: string }): void {\n\t\tthis.updateQueueInfo(queue.queuename, Number(queue.queuedcalls));\n\t}\n\n\tmemberAdded(queue: { queuename: string; queuedcalls: string }): void {\n\t\t// current user is added in the queue which has queue count |queuedcalls|\n\t\tconst queueInfo: IQueueInfo = {\n\t\t\tqueueName: queue.queuename,\n\t\t\tcallsInQueue: Number(queue.queuedcalls),\n\t\t};\n\t\tthis.currentQueueMembershipStatus[queue.queuename] = queueInfo;\n\t}\n\n\tmemberRemoved(queue: { queuename: string; queuedcalls: string }): void {\n\t\t// current user is removed from the queue which has queue count |queuedcalls|\n\t\tif (!this.currentQueueMembershipStatus?.[queue.queuename]) {\n\t\t\t// something is wrong. Queue is not found in the membership details.\n\t\t\treturn;\n\t\t}\n\t\tdelete this.currentQueueMembershipStatus[queue.queuename];\n\t}\n\n\tqueueAbandoned(queue: { queuename: string; queuedcallafterabandon: string }): void {\n\t\tthis.updateQueueInfo(queue.queuename, Number(queue.queuedcallafterabandon));\n\t}\n\n\tgetCallWaitingCount(): number {\n\t\treturn Object.entries(this.currentQueueMembershipStatus).reduce((acc, [_, value]) => acc + value.callsInQueue, 0);\n\t}\n\n\tgetCurrentQueueName(): string {\n\t\tif (this.currentlyServing?.queueInfo) {\n\t\t\treturn this.currentlyServing.queueInfo.queueName;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tcallRinging(queueInfo: { queuename: string; callerid: { id: string; name: string } }): void {\n\t\tif (!this.currentQueueMembershipStatus?.[queueInfo.queuename]) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst queueServing: IQueueServingRecord = {\n\t\t\tqueueInfo: this.currentQueueMembershipStatus[queueInfo.queuename],\n\t\t\tcallerId: {\n\t\t\t\tcallerId: queueInfo.callerid.id,\n\t\t\t\tcallerName: queueInfo.callerid.name,\n\t\t\t},\n\t\t\tcallStarted: undefined,\n\t\t\tcallEnded: undefined,\n\t\t\tagentExtension: this.extension,\n\t\t};\n\t\tthis.currentlyServing = queueServing;\n\t}\n\n\tcallStarted(): void {\n\t\tif (this.currentlyServing) {\n\t\t\tthis.currentlyServing.callStarted = new Date();\n\t\t}\n\t}\n\n\tcallEnded(): void {\n\t\t// Latest calls are at lower index\n\t\tif (this.currentlyServing) {\n\t\t\tthis.currentlyServing.callEnded = new Date();\n\t\t\tthis.sessionQueueCallServingHistory.unshift(this.currentlyServing);\n\t\t}\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/voip/QueueAggregator.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/voip/QueueAggregator.ts","inputSourceMap":{"version":3,"file":"client/lib/voip/QueueAggregator.ts","sourceRoot":"","sources":["client/lib/voip/QueueAggregator.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Class representing the agent's queue information. This class stores the information\n * of all the queues that the agent is serving.\n *\n * @remarks\n * This class stores the necessary information of agent's queue stats.\n * It also maintains a history of agents queue operation history for current\n * login session. (Agent logging in to rocket-chat and logging off from rocket chat.)\n * Currently the data is stored locally but may sent back to server if such need exists.\n */\n\nimport type { IQueueMembershipSubscription, ICallerInfo, IQueueInfo } from '@rocket.chat/core-typings';\n\ninterface IQueueServingRecord {\n\tqueueInfo: IQueueInfo;\n\tcallStarted: Date | undefined;\n\tcallEnded: Date | undefined;\n\tcallerId: ICallerInfo;\n\tagentExtension: string;\n}\n/**\n * Currently this class depends on the external users to update this class.\n * But in theory, this class serves as\n */\nexport class QueueAggregator {\n\t// Maintains the history of the queue that the agent has served\n\tprivate sessionQueueCallServingHistory: IQueueServingRecord[];\n\n\tprivate currentlyServing: IQueueServingRecord;\n\n\tprivate currentQueueMembershipStatus: Record<string, IQueueInfo>;\n\n\tprivate extension: string;\n\n\tconstructor() {\n\t\tthis.sessionQueueCallServingHistory = [];\n\t\tthis.currentQueueMembershipStatus = {};\n\t}\n\n\tprivate updateQueueInfo(queueName: string, queuedCalls: number): void {\n\t\tif (!this.currentQueueMembershipStatus?.[queueName]) {\n\t\t\t// something is wrong. Queue is not found in the membership details.\n\t\t\treturn;\n\t\t}\n\t\tthis.currentQueueMembershipStatus[queueName].callsInQueue = queuedCalls;\n\t}\n\n\tsetMembership(subscription: IQueueMembershipSubscription): void {\n\t\tthis.extension = subscription.extension;\n\n\t\tsubscription.queues.forEach((queue) => {\n\t\t\tconst queueInfo: IQueueInfo = {\n\t\t\t\tqueueName: queue.name,\n\t\t\t\tcallsInQueue: 0,\n\t\t\t};\n\t\t\tthis.currentQueueMembershipStatus[queue.name] = queueInfo;\n\t\t});\n\t}\n\n\tqueueJoined(joiningDetails: { queuename: string; callerid: { id: string }; queuedcalls: string }): void {\n\t\tthis.updateQueueInfo(joiningDetails.queuename, Number(joiningDetails.queuedcalls));\n\t}\n\n\tcallPickedup(queue: { queuename: string; queuedcalls: string; waittimeinqueue: string }): void {\n\t\tthis.updateQueueInfo(queue.queuename, Number(queue.queuedcalls));\n\t}\n\n\tmemberAdded(queue: { queuename: string; queuedcalls: string }): void {\n\t\t// current user is added in the queue which has queue count |queuedcalls|\n\t\tconst queueInfo: IQueueInfo = {\n\t\t\tqueueName: queue.queuename,\n\t\t\tcallsInQueue: Number(queue.queuedcalls),\n\t\t};\n\t\tthis.currentQueueMembershipStatus[queue.queuename] = queueInfo;\n\t}\n\n\tmemberRemoved(queue: { queuename: string; queuedcalls: string }): void {\n\t\t// current user is removed from the queue which has queue count |queuedcalls|\n\t\tif (!this.currentQueueMembershipStatus?.[queue.queuename]) {\n\t\t\t// something is wrong. Queue is not found in the membership details.\n\t\t\treturn;\n\t\t}\n\t\tdelete this.currentQueueMembershipStatus[queue.queuename];\n\t}\n\n\tqueueAbandoned(queue: { queuename: string; queuedcallafterabandon: string }): void {\n\t\tthis.updateQueueInfo(queue.queuename, Number(queue.queuedcallafterabandon));\n\t}\n\n\tgetCallWaitingCount(): number {\n\t\treturn Object.entries(this.currentQueueMembershipStatus).reduce((acc, [_, value]) => acc + value.callsInQueue, 0);\n\t}\n\n\tgetCurrentQueueName(): string {\n\t\tif (this.currentlyServing?.queueInfo) {\n\t\t\treturn this.currentlyServing.queueInfo.queueName;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tcallRinging(queueInfo: { queuename: string; callerid: { id: string; name: string } }): void {\n\t\tif (!this.currentQueueMembershipStatus?.[queueInfo.queuename]) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst queueServing: IQueueServingRecord = {\n\t\t\tqueueInfo: this.currentQueueMembershipStatus[queueInfo.queuename],\n\t\t\tcallerId: {\n\t\t\t\tcallerId: queueInfo.callerid.id,\n\t\t\t\tcallerName: queueInfo.callerid.name,\n\t\t\t},\n\t\t\tcallStarted: undefined,\n\t\t\tcallEnded: undefined,\n\t\t\tagentExtension: this.extension,\n\t\t};\n\t\tthis.currentlyServing = queueServing;\n\t}\n\n\tcallStarted(): void {\n\t\tif (this.currentlyServing) {\n\t\t\tthis.currentlyServing.callStarted = new Date();\n\t\t}\n\t}\n\n\tcallEnded(): void {\n\t\t// Latest calls are at lower index\n\t\tif (this.currentlyServing) {\n\t\t\tthis.currentlyServing.callEnded = new Date();\n\t\t\tthis.sessionQueueCallServingHistory.unshift(this.currentlyServing);\n\t\t}\n\t}\n}\n"]}}},"code":"module.export({\n  QueueAggregator: () => QueueAggregator\n});\nclass QueueAggregator {\n  constructor() {\n    // Maintains the history of the queue that the agent has served\n    this.sessionQueueCallServingHistory = void 0;\n    this.currentlyServing = void 0;\n    this.currentQueueMembershipStatus = void 0;\n    this.extension = void 0;\n    this.sessionQueueCallServingHistory = [];\n    this.currentQueueMembershipStatus = {};\n  }\n  updateQueueInfo(queueName, queuedCalls) {\n    var _this$currentQueueMem;\n    if (!((_this$currentQueueMem = this.currentQueueMembershipStatus) !== null && _this$currentQueueMem !== void 0 && _this$currentQueueMem[queueName])) {\n      // something is wrong. Queue is not found in the membership details.\n      return;\n    }\n    this.currentQueueMembershipStatus[queueName].callsInQueue = queuedCalls;\n  }\n  setMembership(subscription) {\n    this.extension = subscription.extension;\n    subscription.queues.forEach(queue => {\n      const queueInfo = {\n        queueName: queue.name,\n        callsInQueue: 0\n      };\n      this.currentQueueMembershipStatus[queue.name] = queueInfo;\n    });\n  }\n  queueJoined(joiningDetails) {\n    this.updateQueueInfo(joiningDetails.queuename, Number(joiningDetails.queuedcalls));\n  }\n  callPickedup(queue) {\n    this.updateQueueInfo(queue.queuename, Number(queue.queuedcalls));\n  }\n  memberAdded(queue) {\n    // current user is added in the queue which has queue count |queuedcalls|\n    const queueInfo = {\n      queueName: queue.queuename,\n      callsInQueue: Number(queue.queuedcalls)\n    };\n    this.currentQueueMembershipStatus[queue.queuename] = queueInfo;\n  }\n  memberRemoved(queue) {\n    var _this$currentQueueMem2;\n    // current user is removed from the queue which has queue count |queuedcalls|\n    if (!((_this$currentQueueMem2 = this.currentQueueMembershipStatus) !== null && _this$currentQueueMem2 !== void 0 && _this$currentQueueMem2[queue.queuename])) {\n      // something is wrong. Queue is not found in the membership details.\n      return;\n    }\n    delete this.currentQueueMembershipStatus[queue.queuename];\n  }\n  queueAbandoned(queue) {\n    this.updateQueueInfo(queue.queuename, Number(queue.queuedcallafterabandon));\n  }\n  getCallWaitingCount() {\n    return Object.entries(this.currentQueueMembershipStatus).reduce((acc, _ref) => {\n      let [_, value] = _ref;\n      return acc + value.callsInQueue;\n    }, 0);\n  }\n  getCurrentQueueName() {\n    var _this$currentlyServin;\n    if ((_this$currentlyServin = this.currentlyServing) !== null && _this$currentlyServin !== void 0 && _this$currentlyServin.queueInfo) {\n      return this.currentlyServing.queueInfo.queueName;\n    }\n    return '';\n  }\n  callRinging(queueInfo) {\n    var _this$currentQueueMem3;\n    if (!((_this$currentQueueMem3 = this.currentQueueMembershipStatus) !== null && _this$currentQueueMem3 !== void 0 && _this$currentQueueMem3[queueInfo.queuename])) {\n      return;\n    }\n    const queueServing = {\n      queueInfo: this.currentQueueMembershipStatus[queueInfo.queuename],\n      callerId: {\n        callerId: queueInfo.callerid.id,\n        callerName: queueInfo.callerid.name\n      },\n      callStarted: undefined,\n      callEnded: undefined,\n      agentExtension: this.extension\n    };\n    this.currentlyServing = queueServing;\n  }\n  callStarted() {\n    if (this.currentlyServing) {\n      this.currentlyServing.callStarted = new Date();\n    }\n  }\n  callEnded() {\n    // Latest calls are at lower index\n    if (this.currentlyServing) {\n      this.currentlyServing.callEnded = new Date();\n      this.sessionQueueCallServingHistory.unshift(this.currentlyServing);\n    }\n  }\n}","map":{"version":3,"names":["module","export","QueueAggregator","constructor","sessionQueueCallServingHistory","currentlyServing","currentQueueMembershipStatus","extension","updateQueueInfo","queueName","queuedCalls","_this$currentQueueMem","callsInQueue","setMembership","subscription","queues","forEach","queue","queueInfo","name","queueJoined","joiningDetails","queuename","Number","queuedcalls","callPickedup","memberAdded","memberRemoved","_this$currentQueueMem2","queueAbandoned","queuedcallafterabandon","getCallWaitingCount","Object","entries","reduce","acc","_ref","_","value","getCurrentQueueName","_this$currentlyServin","callRinging","_this$currentQueueMem3","queueServing","callerId","callerid","id","callerName","callStarted","undefined","callEnded","agentExtension","Date","unshift"],"sources":["client/lib/voip/QueueAggregator.ts"],"sourcesContent":["/**\n * Class representing the agent's queue information. This class stores the information\n * of all the queues that the agent is serving.\n *\n * @remarks\n * This class stores the necessary information of agent's queue stats.\n * It also maintains a history of agents queue operation history for current\n * login session. (Agent logging in to rocket-chat and logging off from rocket chat.)\n * Currently the data is stored locally but may sent back to server if such need exists.\n */\n\nimport type { IQueueMembershipSubscription, ICallerInfo, IQueueInfo } from '@rocket.chat/core-typings';\n\ninterface IQueueServingRecord {\n\tqueueInfo: IQueueInfo;\n\tcallStarted: Date | undefined;\n\tcallEnded: Date | undefined;\n\tcallerId: ICallerInfo;\n\tagentExtension: string;\n}\n/**\n * Currently this class depends on the external users to update this class.\n * But in theory, this class serves as\n */\nexport class QueueAggregator {\n\t// Maintains the history of the queue that the agent has served\n\tprivate sessionQueueCallServingHistory: IQueueServingRecord[];\n\n\tprivate currentlyServing: IQueueServingRecord;\n\n\tprivate currentQueueMembershipStatus: Record<string, IQueueInfo>;\n\n\tprivate extension: string;\n\n\tconstructor() {\n\t\tthis.sessionQueueCallServingHistory = [];\n\t\tthis.currentQueueMembershipStatus = {};\n\t}\n\n\tprivate updateQueueInfo(queueName: string, queuedCalls: number): void {\n\t\tif (!this.currentQueueMembershipStatus?.[queueName]) {\n\t\t\t// something is wrong. Queue is not found in the membership details.\n\t\t\treturn;\n\t\t}\n\t\tthis.currentQueueMembershipStatus[queueName].callsInQueue = queuedCalls;\n\t}\n\n\tsetMembership(subscription: IQueueMembershipSubscription): void {\n\t\tthis.extension = subscription.extension;\n\n\t\tsubscription.queues.forEach((queue) => {\n\t\t\tconst queueInfo: IQueueInfo = {\n\t\t\t\tqueueName: queue.name,\n\t\t\t\tcallsInQueue: 0,\n\t\t\t};\n\t\t\tthis.currentQueueMembershipStatus[queue.name] = queueInfo;\n\t\t});\n\t}\n\n\tqueueJoined(joiningDetails: { queuename: string; callerid: { id: string }; queuedcalls: string }): void {\n\t\tthis.updateQueueInfo(joiningDetails.queuename, Number(joiningDetails.queuedcalls));\n\t}\n\n\tcallPickedup(queue: { queuename: string; queuedcalls: string; waittimeinqueue: string }): void {\n\t\tthis.updateQueueInfo(queue.queuename, Number(queue.queuedcalls));\n\t}\n\n\tmemberAdded(queue: { queuename: string; queuedcalls: string }): void {\n\t\t// current user is added in the queue which has queue count |queuedcalls|\n\t\tconst queueInfo: IQueueInfo = {\n\t\t\tqueueName: queue.queuename,\n\t\t\tcallsInQueue: Number(queue.queuedcalls),\n\t\t};\n\t\tthis.currentQueueMembershipStatus[queue.queuename] = queueInfo;\n\t}\n\n\tmemberRemoved(queue: { queuename: string; queuedcalls: string }): void {\n\t\t// current user is removed from the queue which has queue count |queuedcalls|\n\t\tif (!this.currentQueueMembershipStatus?.[queue.queuename]) {\n\t\t\t// something is wrong. Queue is not found in the membership details.\n\t\t\treturn;\n\t\t}\n\t\tdelete this.currentQueueMembershipStatus[queue.queuename];\n\t}\n\n\tqueueAbandoned(queue: { queuename: string; queuedcallafterabandon: string }): void {\n\t\tthis.updateQueueInfo(queue.queuename, Number(queue.queuedcallafterabandon));\n\t}\n\n\tgetCallWaitingCount(): number {\n\t\treturn Object.entries(this.currentQueueMembershipStatus).reduce((acc, [_, value]) => acc + value.callsInQueue, 0);\n\t}\n\n\tgetCurrentQueueName(): string {\n\t\tif (this.currentlyServing?.queueInfo) {\n\t\t\treturn this.currentlyServing.queueInfo.queueName;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tcallRinging(queueInfo: { queuename: string; callerid: { id: string; name: string } }): void {\n\t\tif (!this.currentQueueMembershipStatus?.[queueInfo.queuename]) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst queueServing: IQueueServingRecord = {\n\t\t\tqueueInfo: this.currentQueueMembershipStatus[queueInfo.queuename],\n\t\t\tcallerId: {\n\t\t\t\tcallerId: queueInfo.callerid.id,\n\t\t\t\tcallerName: queueInfo.callerid.name,\n\t\t\t},\n\t\t\tcallStarted: undefined,\n\t\t\tcallEnded: undefined,\n\t\t\tagentExtension: this.extension,\n\t\t};\n\t\tthis.currentlyServing = queueServing;\n\t}\n\n\tcallStarted(): void {\n\t\tif (this.currentlyServing) {\n\t\t\tthis.currentlyServing.callStarted = new Date();\n\t\t}\n\t}\n\n\tcallEnded(): void {\n\t\t// Latest calls are at lower index\n\t\tif (this.currentlyServing) {\n\t\t\tthis.currentlyServing.callEnded = new Date();\n\t\t\tthis.sessionQueueCallServingHistory.unshift(this.currentlyServing);\n\t\t}\n\t}\n}\n"],"mappings":"AAAAA,MAAA,CAAAC,MAAA;EAAAC,eAAA,EAAAA,CAAA,KAAAA;AAAA;AAwBM,MAAOA,eAAe;EAU3BC,YAAA;IATA;IAAA,KACQC,8BAA8B;IAAA,KAE9BC,gBAAgB;IAAA,KAEhBC,4BAA4B;IAAA,KAE5BC,SAAS;IAGhB,IAAI,CAACH,8BAA8B,GAAG,EAAE;IACxC,IAAI,CAACE,4BAA4B,GAAG,EAAE;EACvC;EAEQE,eAAeA,CAACC,SAAiB,EAAEC,WAAmB;IAAA,IAAAC,qBAAA;IAC7D,IAAI,GAAAA,qBAAA,GAAC,IAAI,CAACL,4BAA4B,cAAAK,qBAAA,eAAjCA,qBAAA,CAAoCF,SAAS,CAAC,GAAE;MACpD;MACA;IACD;IACA,IAAI,CAACH,4BAA4B,CAACG,SAAS,CAAC,CAACG,YAAY,GAAGF,WAAW;EACxE;EAEAG,aAAaA,CAACC,YAA0C;IACvD,IAAI,CAACP,SAAS,GAAGO,YAAY,CAACP,SAAS;IAEvCO,YAAY,CAACC,MAAM,CAACC,OAAO,CAAEC,KAAK,IAAI;MACrC,MAAMC,SAAS,GAAe;QAC7BT,SAAS,EAAEQ,KAAK,CAACE,IAAI;QACrBP,YAAY,EAAE;OACd;MACD,IAAI,CAACN,4BAA4B,CAACW,KAAK,CAACE,IAAI,CAAC,GAAGD,SAAS;IAC1D,CAAC,CAAC;EACH;EAEAE,WAAWA,CAACC,cAAoF;IAC/F,IAAI,CAACb,eAAe,CAACa,cAAc,CAACC,SAAS,EAAEC,MAAM,CAACF,cAAc,CAACG,WAAW,CAAC,CAAC;EACnF;EAEAC,YAAYA,CAACR,KAA0E;IACtF,IAAI,CAACT,eAAe,CAACS,KAAK,CAACK,SAAS,EAAEC,MAAM,CAACN,KAAK,CAACO,WAAW,CAAC,CAAC;EACjE;EAEAE,WAAWA,CAACT,KAAiD;IAC5D;IACA,MAAMC,SAAS,GAAe;MAC7BT,SAAS,EAAEQ,KAAK,CAACK,SAAS;MAC1BV,YAAY,EAAEW,MAAM,CAACN,KAAK,CAACO,WAAW;KACtC;IACD,IAAI,CAAClB,4BAA4B,CAACW,KAAK,CAACK,SAAS,CAAC,GAAGJ,SAAS;EAC/D;EAEAS,aAAaA,CAACV,KAAiD;IAAA,IAAAW,sBAAA;IAC9D;IACA,IAAI,GAAAA,sBAAA,GAAC,IAAI,CAACtB,4BAA4B,cAAAsB,sBAAA,eAAjCA,sBAAA,CAAoCX,KAAK,CAACK,SAAS,CAAC,GAAE;MAC1D;MACA;IACD;IACA,OAAO,IAAI,CAAChB,4BAA4B,CAACW,KAAK,CAACK,SAAS,CAAC;EAC1D;EAEAO,cAAcA,CAACZ,KAA4D;IAC1E,IAAI,CAACT,eAAe,CAACS,KAAK,CAACK,SAAS,EAAEC,MAAM,CAACN,KAAK,CAACa,sBAAsB,CAAC,CAAC;EAC5E;EAEAC,mBAAmBA,CAAA;IAClB,OAAOC,MAAM,CAACC,OAAO,CAAC,IAAI,CAAC3B,4BAA4B,CAAC,CAAC4B,MAAM,CAAC,CAACC,GAAG,EAAAC,IAAA;MAAA,IAAE,CAACC,CAAC,EAAEC,KAAK,CAAC,GAAAF,IAAA;MAAA,OAAKD,GAAG,GAAGG,KAAK,CAAC1B,YAAY;IAAA,GAAE,CAAC,CAAC;EAClH;EAEA2B,mBAAmBA,CAAA;IAAA,IAAAC,qBAAA;IAClB,KAAAA,qBAAA,GAAI,IAAI,CAACnC,gBAAgB,cAAAmC,qBAAA,eAArBA,qBAAA,CAAuBtB,SAAS,EAAE;MACrC,OAAO,IAAI,CAACb,gBAAgB,CAACa,SAAS,CAACT,SAAS;IACjD;IAEA,OAAO,EAAE;EACV;EAEAgC,WAAWA,CAACvB,SAAwE;IAAA,IAAAwB,sBAAA;IACnF,IAAI,GAAAA,sBAAA,GAAC,IAAI,CAACpC,4BAA4B,cAAAoC,sBAAA,eAAjCA,sBAAA,CAAoCxB,SAAS,CAACI,SAAS,CAAC,GAAE;MAC9D;IACD;IAEA,MAAMqB,YAAY,GAAwB;MACzCzB,SAAS,EAAE,IAAI,CAACZ,4BAA4B,CAACY,SAAS,CAACI,SAAS,CAAC;MACjEsB,QAAQ,EAAE;QACTA,QAAQ,EAAE1B,SAAS,CAAC2B,QAAQ,CAACC,EAAE;QAC/BC,UAAU,EAAE7B,SAAS,CAAC2B,QAAQ,CAAC1B;OAC/B;MACD6B,WAAW,EAAEC,SAAS;MACtBC,SAAS,EAAED,SAAS;MACpBE,cAAc,EAAE,IAAI,CAAC5C;KACrB;IACD,IAAI,CAACF,gBAAgB,GAAGsC,YAAY;EACrC;EAEAK,WAAWA,CAAA;IACV,IAAI,IAAI,CAAC3C,gBAAgB,EAAE;MAC1B,IAAI,CAACA,gBAAgB,CAAC2C,WAAW,GAAG,IAAII,IAAI,EAAE;IAC/C;EACD;EAEAF,SAASA,CAAA;IACR;IACA,IAAI,IAAI,CAAC7C,gBAAgB,EAAE;MAC1B,IAAI,CAACA,gBAAgB,CAAC6C,SAAS,GAAG,IAAIE,IAAI,EAAE;MAC5C,IAAI,CAAChD,8BAA8B,CAACiD,OAAO,CAAC,IAAI,CAAChD,gBAAgB,CAAC;IACnE;EACD","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"88865bdb6d9623b6126c668a592e70f7da96929d"}
