{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/integrations/server/methods/incoming/updateIncomingIntegration.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/integrations/server/methods/incoming/updateIncomingIntegration.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/integrations/server/methods/incoming/updateIncomingIntegration.ts","inputSourceMap":{"version":3,"file":"app/integrations/server/methods/incoming/updateIncomingIntegration.ts","sourceRoot":"","sources":["app/integrations/server/methods/incoming/updateIncomingIntegration.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IIntegration, INewIncomingIntegration, IUpdateIncomingIntegration } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Integrations, Roles, Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport { wrapExceptions } from '@rocket.chat/tools';\nimport { Babel } from 'meteor/babel-compiler';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { hasAllPermissionAsync, hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { notifyOnIntegrationChanged } from '../../../../lib/server/lib/notifyListener';\nimport { isScriptEngineFrozen, validateScriptEngine } from '../../lib/validateScriptEngine';\n\nconst validChannelChars = ['@', '#'];\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tupdateIncomingIntegration(\n\t\t\tintegrationId: string,\n\t\t\tintegration: INewIncomingIntegration | IUpdateIncomingIntegration,\n\t\t): IIntegration | null;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync updateIncomingIntegration(integrationId, integration) {\n\t\tif (!this.userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'updateOutgoingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tif (!integration.channel || typeof integration.channel.valueOf() !== 'string' || integration.channel.trim() === '') {\n\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid channel', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tconst channels = integration.channel.split(',').map((channel) => channel.trim());\n\n\t\tfor (const channel of channels) {\n\t\t\tif (!validChannelChars.includes(channel[0])) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n\t\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tlet currentIntegration;\n\n\t\tif (await hasPermissionAsync(this.userId, 'manage-incoming-integrations')) {\n\t\t\tcurrentIntegration = await Integrations.findOneById(integrationId);\n\t\t} else if (await hasPermissionAsync(this.userId, 'manage-own-incoming-integrations')) {\n\t\t\tcurrentIntegration = await Integrations.findOne({\n\t\t\t\t'_id': integrationId,\n\t\t\t\t'_createdBy._id': this.userId,\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Meteor.Error('not_authorized', 'Unauthorized', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tif (!currentIntegration) {\n\t\t\tthrow new Meteor.Error('error-invalid-integration', 'Invalid integration', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tconst oldScriptEngine = currentIntegration.scriptEngine;\n\t\tconst scriptEngine = integration.scriptEngine ?? oldScriptEngine ?? 'isolated-vm';\n\t\tif (\n\t\t\tintegration.script?.trim() &&\n\t\t\t(scriptEngine !== oldScriptEngine || integration.script?.trim() !== currentIntegration.script?.trim())\n\t\t) {\n\t\t\twrapExceptions(() => validateScriptEngine(scriptEngine)).catch((e) => {\n\t\t\t\tthrow new Meteor.Error(e.message);\n\t\t\t});\n\t\t}\n\n\t\tconst isFrozen = isScriptEngineFrozen(scriptEngine);\n\n\t\tif (!isFrozen) {\n\t\t\tlet scriptCompiled: string | undefined;\n\t\t\tlet scriptError: Pick<Error, 'name' | 'message' | 'stack'> | undefined;\n\n\t\t\tif (integration.scriptEnabled === true && integration.script && integration.script.trim() !== '') {\n\t\t\t\ttry {\n\t\t\t\t\tlet babelOptions = Babel.getDefaultOptions({ runtime: false });\n\t\t\t\t\tbabelOptions = _.extend(babelOptions, { compact: true, minified: true, comments: false });\n\n\t\t\t\t\tscriptCompiled = Babel.compile(integration.script, babelOptions).code;\n\t\t\t\t\tscriptError = undefined;\n\t\t\t\t\tawait Integrations.updateOne(\n\t\t\t\t\t\t{ _id: integrationId },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\tscriptCompiled,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t$unset: { scriptError: 1 as const },\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tscriptCompiled = undefined;\n\t\t\t\t\tif (e instanceof Error) {\n\t\t\t\t\t\tconst { name, message, stack } = e;\n\t\t\t\t\t\tscriptError = { name, message, stack };\n\t\t\t\t\t}\n\t\t\t\t\tawait Integrations.updateOne(\n\t\t\t\t\t\t{ _id: integrationId },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\tscriptError,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t$unset: {\n\t\t\t\t\t\t\t\tscriptCompiled: 1 as const,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor await (let channel of channels) {\n\t\t\tconst channelType = channel[0];\n\t\t\tchannel = channel.slice(1);\n\t\t\tlet record;\n\n\t\t\tswitch (channelType) {\n\t\t\t\tcase '#':\n\t\t\t\t\trecord = await Rooms.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { name: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '@':\n\t\t\t\t\trecord = await Users.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { username: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!record) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!(await hasAllPermissionAsync(this.userId, ['manage-incoming-integrations', 'manage-own-incoming-integrations'])) &&\n\t\t\t\t!(await Subscriptions.findOneByRoomIdAndUserId(record._id, this.userId, { projection: { _id: 1 } }))\n\t\t\t) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst user = await Users.findOne({ username: currentIntegration.username });\n\n\t\tif (!user?._id) {\n\t\t\tthrow new Meteor.Error('error-invalid-post-as-user', 'Invalid Post As User', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tawait Roles.addUserRoles(user._id, ['bot']);\n\n\t\tconst updatedIntegration = await Integrations.findOneAndUpdate(\n\t\t\t{ _id: integrationId },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tenabled: integration.enabled,\n\t\t\t\t\tname: integration.name,\n\t\t\t\t\tavatar: integration.avatar,\n\t\t\t\t\temoji: integration.emoji,\n\t\t\t\t\talias: integration.alias,\n\t\t\t\t\tchannel: channels,\n\t\t\t\t\t...(isFrozen\n\t\t\t\t\t\t? {}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tscript: integration.script,\n\t\t\t\t\t\t\t\tscriptEnabled: integration.scriptEnabled,\n\t\t\t\t\t\t\t\tscriptEngine,\n\t\t\t\t\t\t  }),\n\t\t\t\t\t...(typeof integration.overrideDestinationChannelEnabled !== 'undefined' && {\n\t\t\t\t\t\toverrideDestinationChannelEnabled: integration.overrideDestinationChannelEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t\t_updatedBy: await Users.findOne({ _id: this.userId }, { projection: { username: 1 } }),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tif (updatedIntegration.value) {\n\t\t\tvoid notifyOnIntegrationChanged(updatedIntegration.value);\n\t\t}\n\n\t\treturn updatedIntegration.value;\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/integrations/server/methods/incoming/updateIncomingIntegration.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/integrations/server/methods/incoming/updateIncomingIntegration.ts","inputSourceMap":{"version":3,"file":"app/integrations/server/methods/incoming/updateIncomingIntegration.ts","sourceRoot":"","sources":["app/integrations/server/methods/incoming/updateIncomingIntegration.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IIntegration, INewIncomingIntegration, IUpdateIncomingIntegration } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Integrations, Roles, Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport { wrapExceptions } from '@rocket.chat/tools';\nimport { Babel } from 'meteor/babel-compiler';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { hasAllPermissionAsync, hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { notifyOnIntegrationChanged } from '../../../../lib/server/lib/notifyListener';\nimport { isScriptEngineFrozen, validateScriptEngine } from '../../lib/validateScriptEngine';\n\nconst validChannelChars = ['@', '#'];\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tupdateIncomingIntegration(\n\t\t\tintegrationId: string,\n\t\t\tintegration: INewIncomingIntegration | IUpdateIncomingIntegration,\n\t\t): IIntegration | null;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync updateIncomingIntegration(integrationId, integration) {\n\t\tif (!this.userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'updateOutgoingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tif (!integration.channel || typeof integration.channel.valueOf() !== 'string' || integration.channel.trim() === '') {\n\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid channel', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tconst channels = integration.channel.split(',').map((channel) => channel.trim());\n\n\t\tfor (const channel of channels) {\n\t\t\tif (!validChannelChars.includes(channel[0])) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n\t\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tlet currentIntegration;\n\n\t\tif (await hasPermissionAsync(this.userId, 'manage-incoming-integrations')) {\n\t\t\tcurrentIntegration = await Integrations.findOneById(integrationId);\n\t\t} else if (await hasPermissionAsync(this.userId, 'manage-own-incoming-integrations')) {\n\t\t\tcurrentIntegration = await Integrations.findOne({\n\t\t\t\t'_id': integrationId,\n\t\t\t\t'_createdBy._id': this.userId,\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Meteor.Error('not_authorized', 'Unauthorized', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tif (!currentIntegration) {\n\t\t\tthrow new Meteor.Error('error-invalid-integration', 'Invalid integration', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tconst oldScriptEngine = currentIntegration.scriptEngine;\n\t\tconst scriptEngine = integration.scriptEngine ?? oldScriptEngine ?? 'isolated-vm';\n\t\tif (\n\t\t\tintegration.script?.trim() &&\n\t\t\t(scriptEngine !== oldScriptEngine || integration.script?.trim() !== currentIntegration.script?.trim())\n\t\t) {\n\t\t\twrapExceptions(() => validateScriptEngine(scriptEngine)).catch((e) => {\n\t\t\t\tthrow new Meteor.Error(e.message);\n\t\t\t});\n\t\t}\n\n\t\tconst isFrozen = isScriptEngineFrozen(scriptEngine);\n\n\t\tif (!isFrozen) {\n\t\t\tlet scriptCompiled: string | undefined;\n\t\t\tlet scriptError: Pick<Error, 'name' | 'message' | 'stack'> | undefined;\n\n\t\t\tif (integration.scriptEnabled === true && integration.script && integration.script.trim() !== '') {\n\t\t\t\ttry {\n\t\t\t\t\tlet babelOptions = Babel.getDefaultOptions({ runtime: false });\n\t\t\t\t\tbabelOptions = _.extend(babelOptions, { compact: true, minified: true, comments: false });\n\n\t\t\t\t\tscriptCompiled = Babel.compile(integration.script, babelOptions).code;\n\t\t\t\t\tscriptError = undefined;\n\t\t\t\t\tawait Integrations.updateOne(\n\t\t\t\t\t\t{ _id: integrationId },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\tscriptCompiled,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t$unset: { scriptError: 1 as const },\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tscriptCompiled = undefined;\n\t\t\t\t\tif (e instanceof Error) {\n\t\t\t\t\t\tconst { name, message, stack } = e;\n\t\t\t\t\t\tscriptError = { name, message, stack };\n\t\t\t\t\t}\n\t\t\t\t\tawait Integrations.updateOne(\n\t\t\t\t\t\t{ _id: integrationId },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\tscriptError,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t$unset: {\n\t\t\t\t\t\t\t\tscriptCompiled: 1 as const,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor await (let channel of channels) {\n\t\t\tconst channelType = channel[0];\n\t\t\tchannel = channel.slice(1);\n\t\t\tlet record;\n\n\t\t\tswitch (channelType) {\n\t\t\t\tcase '#':\n\t\t\t\t\trecord = await Rooms.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { name: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '@':\n\t\t\t\t\trecord = await Users.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { username: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!record) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!(await hasAllPermissionAsync(this.userId, ['manage-incoming-integrations', 'manage-own-incoming-integrations'])) &&\n\t\t\t\t!(await Subscriptions.findOneByRoomIdAndUserId(record._id, this.userId, { projection: { _id: 1 } }))\n\t\t\t) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst user = await Users.findOne({ username: currentIntegration.username });\n\n\t\tif (!user?._id) {\n\t\t\tthrow new Meteor.Error('error-invalid-post-as-user', 'Invalid Post As User', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tawait Roles.addUserRoles(user._id, ['bot']);\n\n\t\tconst updatedIntegration = await Integrations.findOneAndUpdate(\n\t\t\t{ _id: integrationId },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tenabled: integration.enabled,\n\t\t\t\t\tname: integration.name,\n\t\t\t\t\tavatar: integration.avatar,\n\t\t\t\t\temoji: integration.emoji,\n\t\t\t\t\talias: integration.alias,\n\t\t\t\t\tchannel: channels,\n\t\t\t\t\t...(isFrozen\n\t\t\t\t\t\t? {}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tscript: integration.script,\n\t\t\t\t\t\t\t\tscriptEnabled: integration.scriptEnabled,\n\t\t\t\t\t\t\t\tscriptEngine,\n\t\t\t\t\t\t  }),\n\t\t\t\t\t...(typeof integration.overrideDestinationChannelEnabled !== 'undefined' && {\n\t\t\t\t\t\toverrideDestinationChannelEnabled: integration.overrideDestinationChannelEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t\t_updatedBy: await Users.findOne({ _id: this.userId }, { projection: { username: 1 } }),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tif (updatedIntegration.value) {\n\t\t\tvoid notifyOnIntegrationChanged(updatedIntegration.value);\n\t\t}\n\n\t\treturn updatedIntegration.value;\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    let Integrations, Roles, Subscriptions, Users, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Integrations(v) {\n        Integrations = v;\n      },\n      Roles(v) {\n        Roles = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 0);\n    let wrapExceptions;\n    module.link(\"@rocket.chat/tools\", {\n      wrapExceptions(v) {\n        wrapExceptions = v;\n      }\n    }, 1);\n    let Babel;\n    module.link(\"meteor/babel-compiler\", {\n      Babel(v) {\n        Babel = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let _;\n    module.link(\"underscore\", {\n      default(v) {\n        _ = v;\n      }\n    }, 4);\n    let hasAllPermissionAsync, hasPermissionAsync;\n    module.link(\"../../../../authorization/server/functions/hasPermission\", {\n      hasAllPermissionAsync(v) {\n        hasAllPermissionAsync = v;\n      },\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 5);\n    let notifyOnIntegrationChanged;\n    module.link(\"../../../../lib/server/lib/notifyListener\", {\n      notifyOnIntegrationChanged(v) {\n        notifyOnIntegrationChanged = v;\n      }\n    }, 6);\n    let isScriptEngineFrozen, validateScriptEngine;\n    module.link(\"../../lib/validateScriptEngine\", {\n      isScriptEngineFrozen(v) {\n        isScriptEngineFrozen = v;\n      },\n      validateScriptEngine(v) {\n        validateScriptEngine = v;\n      }\n    }, 7);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const validChannelChars = ['@', '#'];\n    Meteor.methods({\n      async updateIncomingIntegration(integrationId, integration) {\n        var _ref, _integration$scriptEn, _integration$script, _integration$script2, _currentIntegration$s;\n        if (!this.userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'updateOutgoingIntegration'\n          });\n        }\n        if (!integration.channel || typeof integration.channel.valueOf() !== 'string' || integration.channel.trim() === '') {\n          throw new Meteor.Error('error-invalid-channel', 'Invalid channel', {\n            method: 'updateIncomingIntegration'\n          });\n        }\n        const channels = integration.channel.split(',').map(channel => channel.trim());\n        for (const channel of channels) {\n          if (!validChannelChars.includes(channel[0])) {\n            throw new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n              method: 'updateIncomingIntegration'\n            });\n          }\n        }\n        let currentIntegration;\n        if (await hasPermissionAsync(this.userId, 'manage-incoming-integrations')) {\n          currentIntegration = await Integrations.findOneById(integrationId);\n        } else if (await hasPermissionAsync(this.userId, 'manage-own-incoming-integrations')) {\n          currentIntegration = await Integrations.findOne({\n            '_id': integrationId,\n            '_createdBy._id': this.userId\n          });\n        } else {\n          throw new Meteor.Error('not_authorized', 'Unauthorized', {\n            method: 'updateIncomingIntegration'\n          });\n        }\n        if (!currentIntegration) {\n          throw new Meteor.Error('error-invalid-integration', 'Invalid integration', {\n            method: 'updateIncomingIntegration'\n          });\n        }\n        const oldScriptEngine = currentIntegration.scriptEngine;\n        const scriptEngine = (_ref = (_integration$scriptEn = integration.scriptEngine) !== null && _integration$scriptEn !== void 0 ? _integration$scriptEn : oldScriptEngine) !== null && _ref !== void 0 ? _ref : 'isolated-vm';\n        if ((_integration$script = integration.script) !== null && _integration$script !== void 0 && _integration$script.trim() && (scriptEngine !== oldScriptEngine || ((_integration$script2 = integration.script) === null || _integration$script2 === void 0 ? void 0 : _integration$script2.trim()) !== ((_currentIntegration$s = currentIntegration.script) === null || _currentIntegration$s === void 0 ? void 0 : _currentIntegration$s.trim()))) {\n          wrapExceptions(() => validateScriptEngine(scriptEngine)).catch(e => {\n            throw new Meteor.Error(e.message);\n          });\n        }\n        const isFrozen = isScriptEngineFrozen(scriptEngine);\n        if (!isFrozen) {\n          let scriptCompiled;\n          let scriptError;\n          if (integration.scriptEnabled === true && integration.script && integration.script.trim() !== '') {\n            try {\n              let babelOptions = Babel.getDefaultOptions({\n                runtime: false\n              });\n              babelOptions = _.extend(babelOptions, {\n                compact: true,\n                minified: true,\n                comments: false\n              });\n              scriptCompiled = Babel.compile(integration.script, babelOptions).code;\n              scriptError = undefined;\n              await Integrations.updateOne({\n                _id: integrationId\n              }, {\n                $set: {\n                  scriptCompiled\n                },\n                $unset: {\n                  scriptError: 1\n                }\n              });\n            } catch (e) {\n              scriptCompiled = undefined;\n              if (e instanceof Error) {\n                const {\n                  name,\n                  message,\n                  stack\n                } = e;\n                scriptError = {\n                  name,\n                  message,\n                  stack\n                };\n              }\n              await Integrations.updateOne({\n                _id: integrationId\n              }, {\n                $set: {\n                  scriptError\n                },\n                $unset: {\n                  scriptCompiled: 1\n                }\n              });\n            }\n          }\n        }\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(channels), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            let channel = _step.value;\n            {\n              const channelType = channel[0];\n              channel = channel.slice(1);\n              let record;\n              switch (channelType) {\n                case '#':\n                  record = await Rooms.findOne({\n                    $or: [{\n                      _id: channel\n                    }, {\n                      name: channel\n                    }]\n                  });\n                  break;\n                case '@':\n                  record = await Users.findOne({\n                    $or: [{\n                      _id: channel\n                    }, {\n                      username: channel\n                    }]\n                  });\n                  break;\n              }\n              if (!record) {\n                throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n                  method: 'updateIncomingIntegration'\n                });\n              }\n              if (!(await hasAllPermissionAsync(this.userId, ['manage-incoming-integrations', 'manage-own-incoming-integrations'])) && !(await Subscriptions.findOneByRoomIdAndUserId(record._id, this.userId, {\n                projection: {\n                  _id: 1\n                }\n              }))) {\n                throw new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n                  method: 'updateIncomingIntegration'\n                });\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        const user = await Users.findOne({\n          username: currentIntegration.username\n        });\n        if (!(user !== null && user !== void 0 && user._id)) {\n          throw new Meteor.Error('error-invalid-post-as-user', 'Invalid Post As User', {\n            method: 'updateIncomingIntegration'\n          });\n        }\n        await Roles.addUserRoles(user._id, ['bot']);\n        const updatedIntegration = await Integrations.findOneAndUpdate({\n          _id: integrationId\n        }, {\n          $set: _objectSpread(_objectSpread(_objectSpread({\n            enabled: integration.enabled,\n            name: integration.name,\n            avatar: integration.avatar,\n            emoji: integration.emoji,\n            alias: integration.alias,\n            channel: channels\n          }, isFrozen ? {} : {\n            script: integration.script,\n            scriptEnabled: integration.scriptEnabled,\n            scriptEngine\n          }), typeof integration.overrideDestinationChannelEnabled !== 'undefined' && {\n            overrideDestinationChannelEnabled: integration.overrideDestinationChannelEnabled\n          }), {}, {\n            _updatedAt: new Date(),\n            _updatedBy: await Users.findOne({\n              _id: this.userId\n            }, {\n              projection: {\n                username: 1\n              }\n            })\n          })\n        });\n        if (updatedIntegration.value) {\n          void notifyOnIntegrationChanged(updatedIntegration.value);\n        }\n        return updatedIntegration.value;\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","Integrations","Roles","Subscriptions","Users","Rooms","wrapExceptions","Babel","Meteor","_","hasAllPermissionAsync","hasPermissionAsync","notifyOnIntegrationChanged","isScriptEngineFrozen","validateScriptEngine","__reifyWaitForDeps__","validChannelChars","methods","updateIncomingIntegration","integrationId","integration","_ref","_integration$scriptEn","_integration$script","_integration$script2","_currentIntegration$s","userId","Error","method","channel","valueOf","trim","channels","split","map","includes","currentIntegration","findOneById","findOne","oldScriptEngine","scriptEngine","script","catch","e","message","isFrozen","scriptCompiled","scriptError","scriptEnabled","babelOptions","getDefaultOptions","runtime","extend","compact","minified","comments","compile","code","undefined","updateOne","_id","$set","$unset","name","stack","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","channelType","slice","record","$or","username","findOneByRoomIdAndUserId","projection","err","return","user","addUserRoles","updatedIntegration","findOneAndUpdate","enabled","avatar","emoji","alias","overrideDestinationChannelEnabled","_updatedAt","Date","_updatedBy","__reify_async_result__","_reifyError","self","async"],"sources":["app/integrations/server/methods/incoming/updateIncomingIntegration.ts"],"sourcesContent":["import type { IIntegration, INewIncomingIntegration, IUpdateIncomingIntegration } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Integrations, Roles, Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport { wrapExceptions } from '@rocket.chat/tools';\nimport { Babel } from 'meteor/babel-compiler';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { hasAllPermissionAsync, hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { notifyOnIntegrationChanged } from '../../../../lib/server/lib/notifyListener';\nimport { isScriptEngineFrozen, validateScriptEngine } from '../../lib/validateScriptEngine';\n\nconst validChannelChars = ['@', '#'];\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tupdateIncomingIntegration(\n\t\t\tintegrationId: string,\n\t\t\tintegration: INewIncomingIntegration | IUpdateIncomingIntegration,\n\t\t): IIntegration | null;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync updateIncomingIntegration(integrationId, integration) {\n\t\tif (!this.userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'updateOutgoingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tif (!integration.channel || typeof integration.channel.valueOf() !== 'string' || integration.channel.trim() === '') {\n\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid channel', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tconst channels = integration.channel.split(',').map((channel) => channel.trim());\n\n\t\tfor (const channel of channels) {\n\t\t\tif (!validChannelChars.includes(channel[0])) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n\t\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tlet currentIntegration;\n\n\t\tif (await hasPermissionAsync(this.userId, 'manage-incoming-integrations')) {\n\t\t\tcurrentIntegration = await Integrations.findOneById(integrationId);\n\t\t} else if (await hasPermissionAsync(this.userId, 'manage-own-incoming-integrations')) {\n\t\t\tcurrentIntegration = await Integrations.findOne({\n\t\t\t\t'_id': integrationId,\n\t\t\t\t'_createdBy._id': this.userId,\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Meteor.Error('not_authorized', 'Unauthorized', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tif (!currentIntegration) {\n\t\t\tthrow new Meteor.Error('error-invalid-integration', 'Invalid integration', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tconst oldScriptEngine = currentIntegration.scriptEngine;\n\t\tconst scriptEngine = integration.scriptEngine ?? oldScriptEngine ?? 'isolated-vm';\n\t\tif (\n\t\t\tintegration.script?.trim() &&\n\t\t\t(scriptEngine !== oldScriptEngine || integration.script?.trim() !== currentIntegration.script?.trim())\n\t\t) {\n\t\t\twrapExceptions(() => validateScriptEngine(scriptEngine)).catch((e) => {\n\t\t\t\tthrow new Meteor.Error(e.message);\n\t\t\t});\n\t\t}\n\n\t\tconst isFrozen = isScriptEngineFrozen(scriptEngine);\n\n\t\tif (!isFrozen) {\n\t\t\tlet scriptCompiled: string | undefined;\n\t\t\tlet scriptError: Pick<Error, 'name' | 'message' | 'stack'> | undefined;\n\n\t\t\tif (integration.scriptEnabled === true && integration.script && integration.script.trim() !== '') {\n\t\t\t\ttry {\n\t\t\t\t\tlet babelOptions = Babel.getDefaultOptions({ runtime: false });\n\t\t\t\t\tbabelOptions = _.extend(babelOptions, { compact: true, minified: true, comments: false });\n\n\t\t\t\t\tscriptCompiled = Babel.compile(integration.script, babelOptions).code;\n\t\t\t\t\tscriptError = undefined;\n\t\t\t\t\tawait Integrations.updateOne(\n\t\t\t\t\t\t{ _id: integrationId },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\tscriptCompiled,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t$unset: { scriptError: 1 as const },\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tscriptCompiled = undefined;\n\t\t\t\t\tif (e instanceof Error) {\n\t\t\t\t\t\tconst { name, message, stack } = e;\n\t\t\t\t\t\tscriptError = { name, message, stack };\n\t\t\t\t\t}\n\t\t\t\t\tawait Integrations.updateOne(\n\t\t\t\t\t\t{ _id: integrationId },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\tscriptError,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t$unset: {\n\t\t\t\t\t\t\t\tscriptCompiled: 1 as const,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor await (let channel of channels) {\n\t\t\tconst channelType = channel[0];\n\t\t\tchannel = channel.slice(1);\n\t\t\tlet record;\n\n\t\t\tswitch (channelType) {\n\t\t\t\tcase '#':\n\t\t\t\t\trecord = await Rooms.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { name: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '@':\n\t\t\t\t\trecord = await Users.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { username: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!record) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!(await hasAllPermissionAsync(this.userId, ['manage-incoming-integrations', 'manage-own-incoming-integrations'])) &&\n\t\t\t\t!(await Subscriptions.findOneByRoomIdAndUserId(record._id, this.userId, { projection: { _id: 1 } }))\n\t\t\t) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tconst user = await Users.findOne({ username: currentIntegration.username });\n\n\t\tif (!user?._id) {\n\t\t\tthrow new Meteor.Error('error-invalid-post-as-user', 'Invalid Post As User', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tawait Roles.addUserRoles(user._id, ['bot']);\n\n\t\tconst updatedIntegration = await Integrations.findOneAndUpdate(\n\t\t\t{ _id: integrationId },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tenabled: integration.enabled,\n\t\t\t\t\tname: integration.name,\n\t\t\t\t\tavatar: integration.avatar,\n\t\t\t\t\temoji: integration.emoji,\n\t\t\t\t\talias: integration.alias,\n\t\t\t\t\tchannel: channels,\n\t\t\t\t\t...(isFrozen\n\t\t\t\t\t\t? {}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\tscript: integration.script,\n\t\t\t\t\t\t\t\tscriptEnabled: integration.scriptEnabled,\n\t\t\t\t\t\t\t\tscriptEngine,\n\t\t\t\t\t\t  }),\n\t\t\t\t\t...(typeof integration.overrideDestinationChannelEnabled !== 'undefined' && {\n\t\t\t\t\t\toverrideDestinationChannelEnabled: integration.overrideDestinationChannelEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t\t_updatedBy: await Users.findOne({ _id: this.userId }, { projection: { username: 1 } }),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tif (updatedIntegration.value) {\n\t\t\tvoid notifyOnIntegrationChanged(updatedIntegration.value);\n\t\t}\n\n\t\treturn updatedIntegration.value;\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"bb34956fbfb4fa8bb90852038e97f002cbf50e3c"}
