{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/browseChannels.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/browseChannels.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/browseChannels.ts","inputSourceMap":{"version":3,"file":"server/methods/browseChannels.ts","sourceRoot":"","sources":["server/methods/browseChannels.ts"],"names":[],"mappings":"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","sourcesContent":["import { Team } from '@rocket.chat/core-services';\nimport type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users, Subscriptions } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport mem from 'memoize';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { federationSearchUsers } from '../../app/federation/server/handler';\nimport { getFederationDomain } from '../../app/federation/server/lib/getFederationDomain';\nimport { isFederationEnabled } from '../../app/federation/server/lib/isFederationEnabled';\nimport { settings } from '../../app/settings/server';\nimport { isTruthy } from '../../lib/isTruthy';\nimport { trim } from '../../lib/utils/stringUtils';\n\nconst sortChannels = (field: string, direction: 'asc' | 'desc'): Record<string, 1 | -1> => {\n\tswitch (field) {\n\t\tcase 'createdAt':\n\t\t\treturn {\n\t\t\t\tts: direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t\tcase 'lastMessage':\n\t\t\treturn {\n\t\t\t\t'lastMessage.ts': direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\t[field]: direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t}\n};\n\nconst sortUsers = (field: string, direction: 'asc' | 'desc') => {\n\tswitch (field) {\n\t\tcase 'email':\n\t\t\treturn {\n\t\t\t\t'emails.address': direction === 'asc' ? 1 : -1,\n\t\t\t\t'username': direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\t[field]: direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t}\n};\n\nconst getChannelsAndGroups = async (\n\tuser: IUser & { __rooms?: IRoom['_id'][] },\n\tcanViewAnon: boolean,\n\tsearchTerm: string,\n\tsort: Record<string, number>,\n\tpagination: {\n\t\tskip: number;\n\t\tlimit: number;\n\t},\n) => {\n\tif ((!user && !canViewAnon) || (user && !(await hasPermissionAsync(user._id, 'view-c-room')))) {\n\t\treturn;\n\t}\n\n\tconst teams = await Team.getAllPublicTeams();\n\tconst publicTeamIds = teams.map(({ _id }) => _id);\n\n\tconst userTeamsIds = (await Team.listTeamsBySubscriberUserId(user._id, { projection: { teamId: 1 } }))?.map(({ teamId }) => teamId) || [];\n\tconst userRooms = user.__rooms ?? [];\n\n\tconst { cursor, totalCount } = Rooms.findPaginatedByNameOrFNameAndRoomIdsIncludingTeamRooms(\n\t\tsearchTerm ? new RegExp(searchTerm, 'i') : null,\n\t\t[...userTeamsIds, ...publicTeamIds],\n\t\tuserRooms,\n\t\t{\n\t\t\t...pagination,\n\t\t\tsort: {\n\t\t\t\tfeatured: -1,\n\t\t\t\t...sort,\n\t\t\t},\n\t\t\tprojection: {\n\t\t\t\tt: 1,\n\t\t\t\tdescription: 1,\n\t\t\t\ttopic: 1,\n\t\t\t\tname: 1,\n\t\t\t\tfname: 1,\n\t\t\t\tlastMessage: 1,\n\t\t\t\tts: 1,\n\t\t\t\tarchived: 1,\n\t\t\t\tdefault: 1,\n\t\t\t\tfeatured: 1,\n\t\t\t\tusersCount: 1,\n\t\t\t\tprid: 1,\n\t\t\t\tteamId: 1,\n\t\t\t\tfederated: 1,\n\t\t\t},\n\t\t},\n\t);\n\n\tconst [result, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\tconst teamIds = result.map(({ teamId }) => teamId).filter(isTruthy);\n\tconst teamsMains = await Team.listByIds([...new Set(teamIds)], { projection: { _id: 1, name: 1 } });\n\n\tconst results = result.map((room) => {\n\t\tif (room.teamId) {\n\t\t\tconst team = teamsMains.find((mainRoom) => mainRoom._id === room.teamId);\n\t\t\tif (team) {\n\t\t\t\treturn { ...room, belongsTo: team.name };\n\t\t\t}\n\t\t}\n\t\treturn room;\n\t});\n\n\treturn {\n\t\ttotal,\n\t\tresults,\n\t};\n};\n\nconst getChannelsCountForTeam = mem((teamId) => Rooms.countByTeamId(teamId), {\n\tmaxAge: 2000,\n});\n\nconst getTeams = async (\n\tuser: IUser,\n\tsearchTerm: string,\n\tsort: Record<string, number>,\n\tpagination: {\n\t\tskip: number;\n\t\tlimit: number;\n\t},\n) => {\n\tif (!user) {\n\t\treturn;\n\t}\n\n\tconst userSubs = await Subscriptions.findByUserId(user._id).toArray();\n\tconst ids = userSubs.map((sub) => sub.rid);\n\tconst { cursor, totalCount } = Rooms.findPaginatedContainingNameOrFNameInIdsAsTeamMain(\n\t\tsearchTerm ? new RegExp(searchTerm, 'i') : null,\n\t\tids,\n\t\t{\n\t\t\t...pagination,\n\t\t\tsort: {\n\t\t\t\tfeatured: -1,\n\t\t\t\t...sort,\n\t\t\t},\n\t\t\tprojection: {\n\t\t\t\tt: 1,\n\t\t\t\tdescription: 1,\n\t\t\t\ttopic: 1,\n\t\t\t\tname: 1,\n\t\t\t\tfname: 1,\n\t\t\t\tlastMessage: 1,\n\t\t\t\tts: 1,\n\t\t\t\tarchived: 1,\n\t\t\t\tdefault: 1,\n\t\t\t\tfeatured: 1,\n\t\t\t\tusersCount: 1,\n\t\t\t\tprid: 1,\n\t\t\t\tteamId: 1,\n\t\t\t\tteamMain: 1,\n\t\t\t},\n\t\t},\n\t);\n\tconst results = await Promise.all(\n\t\t(await cursor.toArray()).map(async (room) => ({\n\t\t\t...room,\n\t\t\troomsCount: await getChannelsCountForTeam(room.teamId),\n\t\t})),\n\t);\n\n\treturn {\n\t\ttotal: await totalCount,\n\t\tresults,\n\t};\n};\n\nconst findUsers = async ({\n\ttext,\n\tsort,\n\tpagination,\n\tworkspace,\n\tviewFullOtherUserInfo,\n}: {\n\ttext: string;\n\tsort: Record<string, number>;\n\tpagination: {\n\t\tskip: number;\n\t\tlimit: number;\n\t};\n\tworkspace: string;\n\tviewFullOtherUserInfo: boolean;\n}) => {\n\tconst searchFields =\n\t\tworkspace === 'all' ? ['username', 'name', 'emails.address'] : settings.get<string>('Accounts_SearchFields').trim().split(',');\n\n\tconst options = {\n\t\t...pagination,\n\t\tsort,\n\t\tprojection: {\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t\tnickname: 1,\n\t\t\tbio: 1,\n\t\t\tcreatedAt: 1,\n\t\t\t...(viewFullOtherUserInfo && { emails: 1 }),\n\t\t\tfederation: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t};\n\n\ttype FederatedUser =\n\t\t| IUser\n\t\t| {\n\t\t\t\t_id?: string;\n\t\t\t\tusername?: string;\n\t\t\t\tname?: string;\n\t\t\t\tbio?: string;\n\t\t\t\tnickname?: string;\n\t\t\t\temails?: string;\n\t\t\t\tfederation?: unknown;\n\t\t\t\tisRemote: true;\n\t\t  };\n\n\tif (workspace === 'all') {\n\t\tconst { cursor, totalCount } = Users.findPaginatedByActiveUsersExcept<FederatedUser>(text, [], options, searchFields);\n\t\tconst [results, total] = await Promise.all([cursor.toArray(), totalCount]);\n\t\treturn {\n\t\t\ttotal,\n\t\t\tresults,\n\t\t};\n\t}\n\n\tif (workspace === 'external') {\n\t\tconst { cursor, totalCount } = Users.findPaginatedByActiveExternalUsersExcept<FederatedUser>(\n\t\t\ttext,\n\t\t\t[],\n\t\t\toptions,\n\t\t\tsearchFields,\n\t\t\tgetFederationDomain(),\n\t\t);\n\t\tconst [results, total] = await Promise.all([cursor.toArray(), totalCount]);\n\t\treturn {\n\t\t\ttotal,\n\t\t\tresults,\n\t\t};\n\t}\n\n\tconst { cursor, totalCount } = Users.findPaginatedByActiveLocalUsersExcept<FederatedUser>(\n\t\ttext,\n\t\t[],\n\t\toptions,\n\t\tsearchFields,\n\t\tgetFederationDomain(),\n\t);\n\tconst [results, total] = await Promise.all([cursor.toArray(), totalCount]);\n\treturn {\n\t\ttotal,\n\t\tresults,\n\t};\n};\n\nconst getUsers = async (\n\tuser: IUser | undefined,\n\ttext: string,\n\tworkspace: string,\n\tsort: Record<string, number>,\n\tpagination: {\n\t\tskip: number;\n\t\tlimit: number;\n\t},\n) => {\n\tif (!user || !(await hasPermissionAsync(user._id, 'view-outside-room')) || !(await hasPermissionAsync(user._id, 'view-d-room'))) {\n\t\treturn;\n\t}\n\n\tconst viewFullOtherUserInfo = await hasPermissionAsync(user._id, 'view-full-other-user-info');\n\n\tconst { total, results } = await findUsers({ text, sort, pagination, workspace, viewFullOtherUserInfo });\n\n\t// Try to find federated users, when applicable\n\tif (isFederationEnabled() && workspace === 'external' && text.indexOf('@') !== -1) {\n\t\tconst users = await federationSearchUsers(text);\n\n\t\tfor (const user of users) {\n\t\t\tif (results.find((e) => e._id === user._id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Add the federated user to the results\n\t\t\tresults.unshift({\n\t\t\t\tusername: user.username,\n\t\t\t\tname: user.name,\n\t\t\t\tbio: user.bio,\n\t\t\t\tnickname: user.nickname,\n\t\t\t\temails: user.emails,\n\t\t\t\tfederation: user.federation,\n\t\t\t\tisRemote: true,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\ttotal,\n\t\tresults,\n\t};\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tbrowseChannels: (params: {\n\t\t\ttext?: string;\n\t\t\tworkspace?: string;\n\t\t\ttype?: 'channels' | 'users' | 'teams';\n\t\t\tsortBy?: 'name' | 'createdAt' | 'usersCount' | 'lastMessage' | 'usernames';\n\t\t\tsortDirection?: 'asc' | 'desc';\n\t\t\tpage?: number;\n\t\t\toffset?: number;\n\t\t\tlimit?: number;\n\t\t}) => Promise<unknown>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync browseChannels({\n\t\ttext = '',\n\t\tworkspace = '',\n\t\ttype = 'channels',\n\t\tsortBy = 'name',\n\t\tsortDirection = 'asc',\n\t\tpage = 0,\n\t\toffset = 0,\n\t\tlimit = 10,\n\t}) {\n\t\tconst searchTerm = trim(escapeRegExp(text));\n\n\t\tif (\n\t\t\t!['channels', 'users', 'teams'].includes(type) ||\n\t\t\t!['asc', 'desc'].includes(sortDirection) ||\n\t\t\t(!page && page !== 0 && !offset && offset !== 0)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst roomParams = ['channels', 'teams'].includes(type) ? ['usernames', 'lastMessage'] : [];\n\t\tconst userParams = type === 'users' ? ['username', 'email', 'bio'] : [];\n\n\t\tif (!['name', 'createdAt', 'usersCount', ...roomParams, ...userParams].includes(sortBy)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst skip = Math.max(0, offset || (page > -1 ? limit * page : 0));\n\n\t\tlimit = limit > 0 ? limit : 10;\n\n\t\tconst pagination = {\n\t\t\tskip,\n\t\t\tlimit,\n\t\t};\n\n\t\tconst canViewAnonymous = !!settings.get('Accounts_AllowAnonymousRead');\n\n\t\tconst user = (await Meteor.userAsync()) as IUser | null;\n\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase 'channels':\n\t\t\t\treturn getChannelsAndGroups(user, canViewAnonymous, searchTerm, sortChannels(sortBy, sortDirection), pagination);\n\t\t\tcase 'teams':\n\t\t\t\treturn getTeams(user, searchTerm, sortChannels(sortBy, sortDirection), pagination);\n\t\t\tcase 'users':\n\t\t\t\treturn getUsers(user, text, workspace, sortUsers(sortBy, sortDirection), pagination);\n\t\t\tdefault:\n\t\t}\n\t},\n});\n\nDDPRateLimiter.addRule(\n\t{\n\t\ttype: 'method',\n\t\tname: 'browseChannels',\n\t\tuserId(/* userId*/) {\n\t\t\treturn true;\n\t\t},\n\t},\n\t100,\n\t100000,\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/browseChannels.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/browseChannels.ts","inputSourceMap":{"version":3,"file":"server/methods/browseChannels.ts","sourceRoot":"","sources":["server/methods/browseChannels.ts"],"names":[],"mappings":"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","sourcesContent":["import { Team } from '@rocket.chat/core-services';\nimport type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users, Subscriptions } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport mem from 'memoize';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { federationSearchUsers } from '../../app/federation/server/handler';\nimport { getFederationDomain } from '../../app/federation/server/lib/getFederationDomain';\nimport { isFederationEnabled } from '../../app/federation/server/lib/isFederationEnabled';\nimport { settings } from '../../app/settings/server';\nimport { isTruthy } from '../../lib/isTruthy';\nimport { trim } from '../../lib/utils/stringUtils';\n\nconst sortChannels = (field: string, direction: 'asc' | 'desc'): Record<string, 1 | -1> => {\n\tswitch (field) {\n\t\tcase 'createdAt':\n\t\t\treturn {\n\t\t\t\tts: direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t\tcase 'lastMessage':\n\t\t\treturn {\n\t\t\t\t'lastMessage.ts': direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\t[field]: direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t}\n};\n\nconst sortUsers = (field: string, direction: 'asc' | 'desc') => {\n\tswitch (field) {\n\t\tcase 'email':\n\t\t\treturn {\n\t\t\t\t'emails.address': direction === 'asc' ? 1 : -1,\n\t\t\t\t'username': direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\t[field]: direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t}\n};\n\nconst getChannelsAndGroups = async (\n\tuser: IUser & { __rooms?: IRoom['_id'][] },\n\tcanViewAnon: boolean,\n\tsearchTerm: string,\n\tsort: Record<string, number>,\n\tpagination: {\n\t\tskip: number;\n\t\tlimit: number;\n\t},\n) => {\n\tif ((!user && !canViewAnon) || (user && !(await hasPermissionAsync(user._id, 'view-c-room')))) {\n\t\treturn;\n\t}\n\n\tconst teams = await Team.getAllPublicTeams();\n\tconst publicTeamIds = teams.map(({ _id }) => _id);\n\n\tconst userTeamsIds = (await Team.listTeamsBySubscriberUserId(user._id, { projection: { teamId: 1 } }))?.map(({ teamId }) => teamId) || [];\n\tconst userRooms = user.__rooms ?? [];\n\n\tconst { cursor, totalCount } = Rooms.findPaginatedByNameOrFNameAndRoomIdsIncludingTeamRooms(\n\t\tsearchTerm ? new RegExp(searchTerm, 'i') : null,\n\t\t[...userTeamsIds, ...publicTeamIds],\n\t\tuserRooms,\n\t\t{\n\t\t\t...pagination,\n\t\t\tsort: {\n\t\t\t\tfeatured: -1,\n\t\t\t\t...sort,\n\t\t\t},\n\t\t\tprojection: {\n\t\t\t\tt: 1,\n\t\t\t\tdescription: 1,\n\t\t\t\ttopic: 1,\n\t\t\t\tname: 1,\n\t\t\t\tfname: 1,\n\t\t\t\tlastMessage: 1,\n\t\t\t\tts: 1,\n\t\t\t\tarchived: 1,\n\t\t\t\tdefault: 1,\n\t\t\t\tfeatured: 1,\n\t\t\t\tusersCount: 1,\n\t\t\t\tprid: 1,\n\t\t\t\tteamId: 1,\n\t\t\t\tfederated: 1,\n\t\t\t},\n\t\t},\n\t);\n\n\tconst [result, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\tconst teamIds = result.map(({ teamId }) => teamId).filter(isTruthy);\n\tconst teamsMains = await Team.listByIds([...new Set(teamIds)], { projection: { _id: 1, name: 1 } });\n\n\tconst results = result.map((room) => {\n\t\tif (room.teamId) {\n\t\t\tconst team = teamsMains.find((mainRoom) => mainRoom._id === room.teamId);\n\t\t\tif (team) {\n\t\t\t\treturn { ...room, belongsTo: team.name };\n\t\t\t}\n\t\t}\n\t\treturn room;\n\t});\n\n\treturn {\n\t\ttotal,\n\t\tresults,\n\t};\n};\n\nconst getChannelsCountForTeam = mem((teamId) => Rooms.countByTeamId(teamId), {\n\tmaxAge: 2000,\n});\n\nconst getTeams = async (\n\tuser: IUser,\n\tsearchTerm: string,\n\tsort: Record<string, number>,\n\tpagination: {\n\t\tskip: number;\n\t\tlimit: number;\n\t},\n) => {\n\tif (!user) {\n\t\treturn;\n\t}\n\n\tconst userSubs = await Subscriptions.findByUserId(user._id).toArray();\n\tconst ids = userSubs.map((sub) => sub.rid);\n\tconst { cursor, totalCount } = Rooms.findPaginatedContainingNameOrFNameInIdsAsTeamMain(\n\t\tsearchTerm ? new RegExp(searchTerm, 'i') : null,\n\t\tids,\n\t\t{\n\t\t\t...pagination,\n\t\t\tsort: {\n\t\t\t\tfeatured: -1,\n\t\t\t\t...sort,\n\t\t\t},\n\t\t\tprojection: {\n\t\t\t\tt: 1,\n\t\t\t\tdescription: 1,\n\t\t\t\ttopic: 1,\n\t\t\t\tname: 1,\n\t\t\t\tfname: 1,\n\t\t\t\tlastMessage: 1,\n\t\t\t\tts: 1,\n\t\t\t\tarchived: 1,\n\t\t\t\tdefault: 1,\n\t\t\t\tfeatured: 1,\n\t\t\t\tusersCount: 1,\n\t\t\t\tprid: 1,\n\t\t\t\tteamId: 1,\n\t\t\t\tteamMain: 1,\n\t\t\t},\n\t\t},\n\t);\n\tconst results = await Promise.all(\n\t\t(await cursor.toArray()).map(async (room) => ({\n\t\t\t...room,\n\t\t\troomsCount: await getChannelsCountForTeam(room.teamId),\n\t\t})),\n\t);\n\n\treturn {\n\t\ttotal: await totalCount,\n\t\tresults,\n\t};\n};\n\nconst findUsers = async ({\n\ttext,\n\tsort,\n\tpagination,\n\tworkspace,\n\tviewFullOtherUserInfo,\n}: {\n\ttext: string;\n\tsort: Record<string, number>;\n\tpagination: {\n\t\tskip: number;\n\t\tlimit: number;\n\t};\n\tworkspace: string;\n\tviewFullOtherUserInfo: boolean;\n}) => {\n\tconst searchFields =\n\t\tworkspace === 'all' ? ['username', 'name', 'emails.address'] : settings.get<string>('Accounts_SearchFields').trim().split(',');\n\n\tconst options = {\n\t\t...pagination,\n\t\tsort,\n\t\tprojection: {\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t\tnickname: 1,\n\t\t\tbio: 1,\n\t\t\tcreatedAt: 1,\n\t\t\t...(viewFullOtherUserInfo && { emails: 1 }),\n\t\t\tfederation: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t};\n\n\ttype FederatedUser =\n\t\t| IUser\n\t\t| {\n\t\t\t\t_id?: string;\n\t\t\t\tusername?: string;\n\t\t\t\tname?: string;\n\t\t\t\tbio?: string;\n\t\t\t\tnickname?: string;\n\t\t\t\temails?: string;\n\t\t\t\tfederation?: unknown;\n\t\t\t\tisRemote: true;\n\t\t  };\n\n\tif (workspace === 'all') {\n\t\tconst { cursor, totalCount } = Users.findPaginatedByActiveUsersExcept<FederatedUser>(text, [], options, searchFields);\n\t\tconst [results, total] = await Promise.all([cursor.toArray(), totalCount]);\n\t\treturn {\n\t\t\ttotal,\n\t\t\tresults,\n\t\t};\n\t}\n\n\tif (workspace === 'external') {\n\t\tconst { cursor, totalCount } = Users.findPaginatedByActiveExternalUsersExcept<FederatedUser>(\n\t\t\ttext,\n\t\t\t[],\n\t\t\toptions,\n\t\t\tsearchFields,\n\t\t\tgetFederationDomain(),\n\t\t);\n\t\tconst [results, total] = await Promise.all([cursor.toArray(), totalCount]);\n\t\treturn {\n\t\t\ttotal,\n\t\t\tresults,\n\t\t};\n\t}\n\n\tconst { cursor, totalCount } = Users.findPaginatedByActiveLocalUsersExcept<FederatedUser>(\n\t\ttext,\n\t\t[],\n\t\toptions,\n\t\tsearchFields,\n\t\tgetFederationDomain(),\n\t);\n\tconst [results, total] = await Promise.all([cursor.toArray(), totalCount]);\n\treturn {\n\t\ttotal,\n\t\tresults,\n\t};\n};\n\nconst getUsers = async (\n\tuser: IUser | undefined,\n\ttext: string,\n\tworkspace: string,\n\tsort: Record<string, number>,\n\tpagination: {\n\t\tskip: number;\n\t\tlimit: number;\n\t},\n) => {\n\tif (!user || !(await hasPermissionAsync(user._id, 'view-outside-room')) || !(await hasPermissionAsync(user._id, 'view-d-room'))) {\n\t\treturn;\n\t}\n\n\tconst viewFullOtherUserInfo = await hasPermissionAsync(user._id, 'view-full-other-user-info');\n\n\tconst { total, results } = await findUsers({ text, sort, pagination, workspace, viewFullOtherUserInfo });\n\n\t// Try to find federated users, when applicable\n\tif (isFederationEnabled() && workspace === 'external' && text.indexOf('@') !== -1) {\n\t\tconst users = await federationSearchUsers(text);\n\n\t\tfor (const user of users) {\n\t\t\tif (results.find((e) => e._id === user._id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Add the federated user to the results\n\t\t\tresults.unshift({\n\t\t\t\tusername: user.username,\n\t\t\t\tname: user.name,\n\t\t\t\tbio: user.bio,\n\t\t\t\tnickname: user.nickname,\n\t\t\t\temails: user.emails,\n\t\t\t\tfederation: user.federation,\n\t\t\t\tisRemote: true,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\ttotal,\n\t\tresults,\n\t};\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tbrowseChannels: (params: {\n\t\t\ttext?: string;\n\t\t\tworkspace?: string;\n\t\t\ttype?: 'channels' | 'users' | 'teams';\n\t\t\tsortBy?: 'name' | 'createdAt' | 'usersCount' | 'lastMessage' | 'usernames';\n\t\t\tsortDirection?: 'asc' | 'desc';\n\t\t\tpage?: number;\n\t\t\toffset?: number;\n\t\t\tlimit?: number;\n\t\t}) => Promise<unknown>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync browseChannels({\n\t\ttext = '',\n\t\tworkspace = '',\n\t\ttype = 'channels',\n\t\tsortBy = 'name',\n\t\tsortDirection = 'asc',\n\t\tpage = 0,\n\t\toffset = 0,\n\t\tlimit = 10,\n\t}) {\n\t\tconst searchTerm = trim(escapeRegExp(text));\n\n\t\tif (\n\t\t\t!['channels', 'users', 'teams'].includes(type) ||\n\t\t\t!['asc', 'desc'].includes(sortDirection) ||\n\t\t\t(!page && page !== 0 && !offset && offset !== 0)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst roomParams = ['channels', 'teams'].includes(type) ? ['usernames', 'lastMessage'] : [];\n\t\tconst userParams = type === 'users' ? ['username', 'email', 'bio'] : [];\n\n\t\tif (!['name', 'createdAt', 'usersCount', ...roomParams, ...userParams].includes(sortBy)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst skip = Math.max(0, offset || (page > -1 ? limit * page : 0));\n\n\t\tlimit = limit > 0 ? limit : 10;\n\n\t\tconst pagination = {\n\t\t\tskip,\n\t\t\tlimit,\n\t\t};\n\n\t\tconst canViewAnonymous = !!settings.get('Accounts_AllowAnonymousRead');\n\n\t\tconst user = (await Meteor.userAsync()) as IUser | null;\n\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase 'channels':\n\t\t\t\treturn getChannelsAndGroups(user, canViewAnonymous, searchTerm, sortChannels(sortBy, sortDirection), pagination);\n\t\t\tcase 'teams':\n\t\t\t\treturn getTeams(user, searchTerm, sortChannels(sortBy, sortDirection), pagination);\n\t\t\tcase 'users':\n\t\t\t\treturn getUsers(user, text, workspace, sortUsers(sortBy, sortDirection), pagination);\n\t\t\tdefault:\n\t\t}\n\t},\n});\n\nDDPRateLimiter.addRule(\n\t{\n\t\ttype: 'method',\n\t\tname: 'browseChannels',\n\t\tuserId(/* userId*/) {\n\t\t\treturn true;\n\t\t},\n\t},\n\t100,\n\t100000,\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let Team;\n    module.link(\"@rocket.chat/core-services\", {\n      Team(v) {\n        Team = v;\n      }\n    }, 0);\n    let Rooms, Users, Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 1);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 2);\n    let mem;\n    module.link(\"memoize\", {\n      default(v) {\n        mem = v;\n      }\n    }, 3);\n    let DDPRateLimiter;\n    module.link(\"meteor/ddp-rate-limiter\", {\n      DDPRateLimiter(v) {\n        DDPRateLimiter = v;\n      }\n    }, 4);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 5);\n    let hasPermissionAsync;\n    module.link(\"../../app/authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 6);\n    let federationSearchUsers;\n    module.link(\"../../app/federation/server/handler\", {\n      federationSearchUsers(v) {\n        federationSearchUsers = v;\n      }\n    }, 7);\n    let getFederationDomain;\n    module.link(\"../../app/federation/server/lib/getFederationDomain\", {\n      getFederationDomain(v) {\n        getFederationDomain = v;\n      }\n    }, 8);\n    let isFederationEnabled;\n    module.link(\"../../app/federation/server/lib/isFederationEnabled\", {\n      isFederationEnabled(v) {\n        isFederationEnabled = v;\n      }\n    }, 9);\n    let settings;\n    module.link(\"../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 10);\n    let isTruthy;\n    module.link(\"../../lib/isTruthy\", {\n      isTruthy(v) {\n        isTruthy = v;\n      }\n    }, 11);\n    let trim;\n    module.link(\"../../lib/utils/stringUtils\", {\n      trim(v) {\n        trim = v;\n      }\n    }, 12);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const sortChannels = (field, direction) => {\n      switch (field) {\n        case 'createdAt':\n          return {\n            ts: direction === 'asc' ? 1 : -1\n          };\n        case 'lastMessage':\n          return {\n            'lastMessage.ts': direction === 'asc' ? 1 : -1\n          };\n        default:\n          return {\n            [field]: direction === 'asc' ? 1 : -1\n          };\n      }\n    };\n    const sortUsers = (field, direction) => {\n      switch (field) {\n        case 'email':\n          return {\n            'emails.address': direction === 'asc' ? 1 : -1,\n            'username': direction === 'asc' ? 1 : -1\n          };\n        default:\n          return {\n            [field]: direction === 'asc' ? 1 : -1\n          };\n      }\n    };\n    const getChannelsAndGroups = async (user, canViewAnon, searchTerm, sort, pagination) => {\n      var _await$Team$listTeams, _user$__rooms;\n      if (!user && !canViewAnon || user && !(await hasPermissionAsync(user._id, 'view-c-room'))) {\n        return;\n      }\n      const teams = await Team.getAllPublicTeams();\n      const publicTeamIds = teams.map(_ref => {\n        let {\n          _id\n        } = _ref;\n        return _id;\n      });\n      const userTeamsIds = ((_await$Team$listTeams = await Team.listTeamsBySubscriberUserId(user._id, {\n        projection: {\n          teamId: 1\n        }\n      })) === null || _await$Team$listTeams === void 0 ? void 0 : _await$Team$listTeams.map(_ref2 => {\n        let {\n          teamId\n        } = _ref2;\n        return teamId;\n      })) || [];\n      const userRooms = (_user$__rooms = user.__rooms) !== null && _user$__rooms !== void 0 ? _user$__rooms : [];\n      const {\n        cursor,\n        totalCount\n      } = Rooms.findPaginatedByNameOrFNameAndRoomIdsIncludingTeamRooms(searchTerm ? new RegExp(searchTerm, 'i') : null, [...userTeamsIds, ...publicTeamIds], userRooms, _objectSpread(_objectSpread({}, pagination), {}, {\n        sort: _objectSpread({\n          featured: -1\n        }, sort),\n        projection: {\n          t: 1,\n          description: 1,\n          topic: 1,\n          name: 1,\n          fname: 1,\n          lastMessage: 1,\n          ts: 1,\n          archived: 1,\n          default: 1,\n          featured: 1,\n          usersCount: 1,\n          prid: 1,\n          teamId: 1,\n          federated: 1\n        }\n      }));\n      const [result, total] = await Promise.all([cursor.toArray(), totalCount]);\n      const teamIds = result.map(_ref3 => {\n        let {\n          teamId\n        } = _ref3;\n        return teamId;\n      }).filter(isTruthy);\n      const teamsMains = await Team.listByIds([...new Set(teamIds)], {\n        projection: {\n          _id: 1,\n          name: 1\n        }\n      });\n      const results = result.map(room => {\n        if (room.teamId) {\n          const team = teamsMains.find(mainRoom => mainRoom._id === room.teamId);\n          if (team) {\n            return _objectSpread(_objectSpread({}, room), {}, {\n              belongsTo: team.name\n            });\n          }\n        }\n        return room;\n      });\n      return {\n        total,\n        results\n      };\n    };\n    const getChannelsCountForTeam = mem(teamId => Rooms.countByTeamId(teamId), {\n      maxAge: 2000\n    });\n    const getTeams = async (user, searchTerm, sort, pagination) => {\n      if (!user) {\n        return;\n      }\n      const userSubs = await Subscriptions.findByUserId(user._id).toArray();\n      const ids = userSubs.map(sub => sub.rid);\n      const {\n        cursor,\n        totalCount\n      } = Rooms.findPaginatedContainingNameOrFNameInIdsAsTeamMain(searchTerm ? new RegExp(searchTerm, 'i') : null, ids, _objectSpread(_objectSpread({}, pagination), {}, {\n        sort: _objectSpread({\n          featured: -1\n        }, sort),\n        projection: {\n          t: 1,\n          description: 1,\n          topic: 1,\n          name: 1,\n          fname: 1,\n          lastMessage: 1,\n          ts: 1,\n          archived: 1,\n          default: 1,\n          featured: 1,\n          usersCount: 1,\n          prid: 1,\n          teamId: 1,\n          teamMain: 1\n        }\n      }));\n      const results = await Promise.all((await cursor.toArray()).map(async room => _objectSpread(_objectSpread({}, room), {}, {\n        roomsCount: await getChannelsCountForTeam(room.teamId)\n      })));\n      return {\n        total: await totalCount,\n        results\n      };\n    };\n    const findUsers = async _ref4 => {\n      let {\n        text,\n        sort,\n        pagination,\n        workspace,\n        viewFullOtherUserInfo\n      } = _ref4;\n      const searchFields = workspace === 'all' ? ['username', 'name', 'emails.address'] : settings.get('Accounts_SearchFields').trim().split(',');\n      const options = _objectSpread(_objectSpread({}, pagination), {}, {\n        sort,\n        projection: _objectSpread(_objectSpread({\n          username: 1,\n          name: 1,\n          nickname: 1,\n          bio: 1,\n          createdAt: 1\n        }, viewFullOtherUserInfo && {\n          emails: 1\n        }), {}, {\n          federation: 1,\n          avatarETag: 1\n        })\n      });\n      if (workspace === 'all') {\n        const {\n          cursor,\n          totalCount\n        } = Users.findPaginatedByActiveUsersExcept(text, [], options, searchFields);\n        const [results, total] = await Promise.all([cursor.toArray(), totalCount]);\n        return {\n          total,\n          results\n        };\n      }\n      if (workspace === 'external') {\n        const {\n          cursor,\n          totalCount\n        } = Users.findPaginatedByActiveExternalUsersExcept(text, [], options, searchFields, getFederationDomain());\n        const [results, total] = await Promise.all([cursor.toArray(), totalCount]);\n        return {\n          total,\n          results\n        };\n      }\n      const {\n        cursor,\n        totalCount\n      } = Users.findPaginatedByActiveLocalUsersExcept(text, [], options, searchFields, getFederationDomain());\n      const [results, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        total,\n        results\n      };\n    };\n    const getUsers = async (user, text, workspace, sort, pagination) => {\n      if (!user || !(await hasPermissionAsync(user._id, 'view-outside-room')) || !(await hasPermissionAsync(user._id, 'view-d-room'))) {\n        return;\n      }\n      const viewFullOtherUserInfo = await hasPermissionAsync(user._id, 'view-full-other-user-info');\n      const {\n        total,\n        results\n      } = await findUsers({\n        text,\n        sort,\n        pagination,\n        workspace,\n        viewFullOtherUserInfo\n      });\n      // Try to find federated users, when applicable\n      if (isFederationEnabled() && workspace === 'external' && text.indexOf('@') !== -1) {\n        const users = await federationSearchUsers(text);\n        for (const user of users) {\n          if (results.find(e => e._id === user._id)) {\n            continue;\n          }\n          // Add the federated user to the results\n          results.unshift({\n            username: user.username,\n            name: user.name,\n            bio: user.bio,\n            nickname: user.nickname,\n            emails: user.emails,\n            federation: user.federation,\n            isRemote: true\n          });\n        }\n      }\n      return {\n        total,\n        results\n      };\n    };\n    Meteor.methods({\n      async browseChannels(_ref5) {\n        let {\n          text = '',\n          workspace = '',\n          type = 'channels',\n          sortBy = 'name',\n          sortDirection = 'asc',\n          page = 0,\n          offset = 0,\n          limit = 10\n        } = _ref5;\n        const searchTerm = trim(escapeRegExp(text));\n        if (!['channels', 'users', 'teams'].includes(type) || !['asc', 'desc'].includes(sortDirection) || !page && page !== 0 && !offset && offset !== 0) {\n          return;\n        }\n        const roomParams = ['channels', 'teams'].includes(type) ? ['usernames', 'lastMessage'] : [];\n        const userParams = type === 'users' ? ['username', 'email', 'bio'] : [];\n        if (!['name', 'createdAt', 'usersCount', ...roomParams, ...userParams].includes(sortBy)) {\n          return;\n        }\n        const skip = Math.max(0, offset || (page > -1 ? limit * page : 0));\n        limit = limit > 0 ? limit : 10;\n        const pagination = {\n          skip,\n          limit\n        };\n        const canViewAnonymous = !!settings.get('Accounts_AllowAnonymousRead');\n        const user = await Meteor.userAsync();\n        if (!user) {\n          return;\n        }\n        switch (type) {\n          case 'channels':\n            return getChannelsAndGroups(user, canViewAnonymous, searchTerm, sortChannels(sortBy, sortDirection), pagination);\n          case 'teams':\n            return getTeams(user, searchTerm, sortChannels(sortBy, sortDirection), pagination);\n          case 'users':\n            return getUsers(user, text, workspace, sortUsers(sortBy, sortDirection), pagination);\n          default:\n        }\n      }\n    });\n    DDPRateLimiter.addRule({\n      type: 'method',\n      name: 'browseChannels',\n      userId( /* userId*/\n      ) {\n        return true;\n      }\n    }, 100, 100000);\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","Team","Rooms","Users","Subscriptions","escapeRegExp","mem","DDPRateLimiter","Meteor","hasPermissionAsync","federationSearchUsers","getFederationDomain","isFederationEnabled","settings","isTruthy","trim","__reifyWaitForDeps__","sortChannels","field","direction","ts","sortUsers","getChannelsAndGroups","user","canViewAnon","searchTerm","sort","pagination","_await$Team$listTeams","_user$__rooms","_id","teams","getAllPublicTeams","publicTeamIds","map","_ref","userTeamsIds","listTeamsBySubscriberUserId","projection","teamId","_ref2","userRooms","__rooms","cursor","totalCount","findPaginatedByNameOrFNameAndRoomIdsIncludingTeamRooms","RegExp","featured","t","description","topic","name","fname","lastMessage","archived","usersCount","prid","federated","result","total","Promise","all","toArray","teamIds","_ref3","filter","teamsMains","listByIds","Set","results","room","team","find","mainRoom","belongsTo","getChannelsCountForTeam","countByTeamId","maxAge","getTeams","userSubs","findByUserId","ids","sub","rid","findPaginatedContainingNameOrFNameInIdsAsTeamMain","teamMain","roomsCount","findUsers","_ref4","text","workspace","viewFullOtherUserInfo","searchFields","get","split","options","username","nickname","bio","createdAt","emails","federation","avatarETag","findPaginatedByActiveUsersExcept","findPaginatedByActiveExternalUsersExcept","findPaginatedByActiveLocalUsersExcept","getUsers","indexOf","users","e","unshift","isRemote","methods","browseChannels","_ref5","type","sortBy","sortDirection","page","offset","limit","includes","roomParams","userParams","skip","Math","max","canViewAnonymous","userAsync","addRule","userId","__reify_async_result__","_reifyError","self","async"],"sources":["server/methods/browseChannels.ts"],"sourcesContent":["import { Team } from '@rocket.chat/core-services';\nimport type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users, Subscriptions } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport mem from 'memoize';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { federationSearchUsers } from '../../app/federation/server/handler';\nimport { getFederationDomain } from '../../app/federation/server/lib/getFederationDomain';\nimport { isFederationEnabled } from '../../app/federation/server/lib/isFederationEnabled';\nimport { settings } from '../../app/settings/server';\nimport { isTruthy } from '../../lib/isTruthy';\nimport { trim } from '../../lib/utils/stringUtils';\n\nconst sortChannels = (field: string, direction: 'asc' | 'desc'): Record<string, 1 | -1> => {\n\tswitch (field) {\n\t\tcase 'createdAt':\n\t\t\treturn {\n\t\t\t\tts: direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t\tcase 'lastMessage':\n\t\t\treturn {\n\t\t\t\t'lastMessage.ts': direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\t[field]: direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t}\n};\n\nconst sortUsers = (field: string, direction: 'asc' | 'desc') => {\n\tswitch (field) {\n\t\tcase 'email':\n\t\t\treturn {\n\t\t\t\t'emails.address': direction === 'asc' ? 1 : -1,\n\t\t\t\t'username': direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\t[field]: direction === 'asc' ? 1 : -1,\n\t\t\t};\n\t}\n};\n\nconst getChannelsAndGroups = async (\n\tuser: IUser & { __rooms?: IRoom['_id'][] },\n\tcanViewAnon: boolean,\n\tsearchTerm: string,\n\tsort: Record<string, number>,\n\tpagination: {\n\t\tskip: number;\n\t\tlimit: number;\n\t},\n) => {\n\tif ((!user && !canViewAnon) || (user && !(await hasPermissionAsync(user._id, 'view-c-room')))) {\n\t\treturn;\n\t}\n\n\tconst teams = await Team.getAllPublicTeams();\n\tconst publicTeamIds = teams.map(({ _id }) => _id);\n\n\tconst userTeamsIds = (await Team.listTeamsBySubscriberUserId(user._id, { projection: { teamId: 1 } }))?.map(({ teamId }) => teamId) || [];\n\tconst userRooms = user.__rooms ?? [];\n\n\tconst { cursor, totalCount } = Rooms.findPaginatedByNameOrFNameAndRoomIdsIncludingTeamRooms(\n\t\tsearchTerm ? new RegExp(searchTerm, 'i') : null,\n\t\t[...userTeamsIds, ...publicTeamIds],\n\t\tuserRooms,\n\t\t{\n\t\t\t...pagination,\n\t\t\tsort: {\n\t\t\t\tfeatured: -1,\n\t\t\t\t...sort,\n\t\t\t},\n\t\t\tprojection: {\n\t\t\t\tt: 1,\n\t\t\t\tdescription: 1,\n\t\t\t\ttopic: 1,\n\t\t\t\tname: 1,\n\t\t\t\tfname: 1,\n\t\t\t\tlastMessage: 1,\n\t\t\t\tts: 1,\n\t\t\t\tarchived: 1,\n\t\t\t\tdefault: 1,\n\t\t\t\tfeatured: 1,\n\t\t\t\tusersCount: 1,\n\t\t\t\tprid: 1,\n\t\t\t\tteamId: 1,\n\t\t\t\tfederated: 1,\n\t\t\t},\n\t\t},\n\t);\n\n\tconst [result, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\tconst teamIds = result.map(({ teamId }) => teamId).filter(isTruthy);\n\tconst teamsMains = await Team.listByIds([...new Set(teamIds)], { projection: { _id: 1, name: 1 } });\n\n\tconst results = result.map((room) => {\n\t\tif (room.teamId) {\n\t\t\tconst team = teamsMains.find((mainRoom) => mainRoom._id === room.teamId);\n\t\t\tif (team) {\n\t\t\t\treturn { ...room, belongsTo: team.name };\n\t\t\t}\n\t\t}\n\t\treturn room;\n\t});\n\n\treturn {\n\t\ttotal,\n\t\tresults,\n\t};\n};\n\nconst getChannelsCountForTeam = mem((teamId) => Rooms.countByTeamId(teamId), {\n\tmaxAge: 2000,\n});\n\nconst getTeams = async (\n\tuser: IUser,\n\tsearchTerm: string,\n\tsort: Record<string, number>,\n\tpagination: {\n\t\tskip: number;\n\t\tlimit: number;\n\t},\n) => {\n\tif (!user) {\n\t\treturn;\n\t}\n\n\tconst userSubs = await Subscriptions.findByUserId(user._id).toArray();\n\tconst ids = userSubs.map((sub) => sub.rid);\n\tconst { cursor, totalCount } = Rooms.findPaginatedContainingNameOrFNameInIdsAsTeamMain(\n\t\tsearchTerm ? new RegExp(searchTerm, 'i') : null,\n\t\tids,\n\t\t{\n\t\t\t...pagination,\n\t\t\tsort: {\n\t\t\t\tfeatured: -1,\n\t\t\t\t...sort,\n\t\t\t},\n\t\t\tprojection: {\n\t\t\t\tt: 1,\n\t\t\t\tdescription: 1,\n\t\t\t\ttopic: 1,\n\t\t\t\tname: 1,\n\t\t\t\tfname: 1,\n\t\t\t\tlastMessage: 1,\n\t\t\t\tts: 1,\n\t\t\t\tarchived: 1,\n\t\t\t\tdefault: 1,\n\t\t\t\tfeatured: 1,\n\t\t\t\tusersCount: 1,\n\t\t\t\tprid: 1,\n\t\t\t\tteamId: 1,\n\t\t\t\tteamMain: 1,\n\t\t\t},\n\t\t},\n\t);\n\tconst results = await Promise.all(\n\t\t(await cursor.toArray()).map(async (room) => ({\n\t\t\t...room,\n\t\t\troomsCount: await getChannelsCountForTeam(room.teamId),\n\t\t})),\n\t);\n\n\treturn {\n\t\ttotal: await totalCount,\n\t\tresults,\n\t};\n};\n\nconst findUsers = async ({\n\ttext,\n\tsort,\n\tpagination,\n\tworkspace,\n\tviewFullOtherUserInfo,\n}: {\n\ttext: string;\n\tsort: Record<string, number>;\n\tpagination: {\n\t\tskip: number;\n\t\tlimit: number;\n\t};\n\tworkspace: string;\n\tviewFullOtherUserInfo: boolean;\n}) => {\n\tconst searchFields =\n\t\tworkspace === 'all' ? ['username', 'name', 'emails.address'] : settings.get<string>('Accounts_SearchFields').trim().split(',');\n\n\tconst options = {\n\t\t...pagination,\n\t\tsort,\n\t\tprojection: {\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t\tnickname: 1,\n\t\t\tbio: 1,\n\t\t\tcreatedAt: 1,\n\t\t\t...(viewFullOtherUserInfo && { emails: 1 }),\n\t\t\tfederation: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t};\n\n\ttype FederatedUser =\n\t\t| IUser\n\t\t| {\n\t\t\t\t_id?: string;\n\t\t\t\tusername?: string;\n\t\t\t\tname?: string;\n\t\t\t\tbio?: string;\n\t\t\t\tnickname?: string;\n\t\t\t\temails?: string;\n\t\t\t\tfederation?: unknown;\n\t\t\t\tisRemote: true;\n\t\t  };\n\n\tif (workspace === 'all') {\n\t\tconst { cursor, totalCount } = Users.findPaginatedByActiveUsersExcept<FederatedUser>(text, [], options, searchFields);\n\t\tconst [results, total] = await Promise.all([cursor.toArray(), totalCount]);\n\t\treturn {\n\t\t\ttotal,\n\t\t\tresults,\n\t\t};\n\t}\n\n\tif (workspace === 'external') {\n\t\tconst { cursor, totalCount } = Users.findPaginatedByActiveExternalUsersExcept<FederatedUser>(\n\t\t\ttext,\n\t\t\t[],\n\t\t\toptions,\n\t\t\tsearchFields,\n\t\t\tgetFederationDomain(),\n\t\t);\n\t\tconst [results, total] = await Promise.all([cursor.toArray(), totalCount]);\n\t\treturn {\n\t\t\ttotal,\n\t\t\tresults,\n\t\t};\n\t}\n\n\tconst { cursor, totalCount } = Users.findPaginatedByActiveLocalUsersExcept<FederatedUser>(\n\t\ttext,\n\t\t[],\n\t\toptions,\n\t\tsearchFields,\n\t\tgetFederationDomain(),\n\t);\n\tconst [results, total] = await Promise.all([cursor.toArray(), totalCount]);\n\treturn {\n\t\ttotal,\n\t\tresults,\n\t};\n};\n\nconst getUsers = async (\n\tuser: IUser | undefined,\n\ttext: string,\n\tworkspace: string,\n\tsort: Record<string, number>,\n\tpagination: {\n\t\tskip: number;\n\t\tlimit: number;\n\t},\n) => {\n\tif (!user || !(await hasPermissionAsync(user._id, 'view-outside-room')) || !(await hasPermissionAsync(user._id, 'view-d-room'))) {\n\t\treturn;\n\t}\n\n\tconst viewFullOtherUserInfo = await hasPermissionAsync(user._id, 'view-full-other-user-info');\n\n\tconst { total, results } = await findUsers({ text, sort, pagination, workspace, viewFullOtherUserInfo });\n\n\t// Try to find federated users, when applicable\n\tif (isFederationEnabled() && workspace === 'external' && text.indexOf('@') !== -1) {\n\t\tconst users = await federationSearchUsers(text);\n\n\t\tfor (const user of users) {\n\t\t\tif (results.find((e) => e._id === user._id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Add the federated user to the results\n\t\t\tresults.unshift({\n\t\t\t\tusername: user.username,\n\t\t\t\tname: user.name,\n\t\t\t\tbio: user.bio,\n\t\t\t\tnickname: user.nickname,\n\t\t\t\temails: user.emails,\n\t\t\t\tfederation: user.federation,\n\t\t\t\tisRemote: true,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\ttotal,\n\t\tresults,\n\t};\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tbrowseChannels: (params: {\n\t\t\ttext?: string;\n\t\t\tworkspace?: string;\n\t\t\ttype?: 'channels' | 'users' | 'teams';\n\t\t\tsortBy?: 'name' | 'createdAt' | 'usersCount' | 'lastMessage' | 'usernames';\n\t\t\tsortDirection?: 'asc' | 'desc';\n\t\t\tpage?: number;\n\t\t\toffset?: number;\n\t\t\tlimit?: number;\n\t\t}) => Promise<unknown>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync browseChannels({\n\t\ttext = '',\n\t\tworkspace = '',\n\t\ttype = 'channels',\n\t\tsortBy = 'name',\n\t\tsortDirection = 'asc',\n\t\tpage = 0,\n\t\toffset = 0,\n\t\tlimit = 10,\n\t}) {\n\t\tconst searchTerm = trim(escapeRegExp(text));\n\n\t\tif (\n\t\t\t!['channels', 'users', 'teams'].includes(type) ||\n\t\t\t!['asc', 'desc'].includes(sortDirection) ||\n\t\t\t(!page && page !== 0 && !offset && offset !== 0)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst roomParams = ['channels', 'teams'].includes(type) ? ['usernames', 'lastMessage'] : [];\n\t\tconst userParams = type === 'users' ? ['username', 'email', 'bio'] : [];\n\n\t\tif (!['name', 'createdAt', 'usersCount', ...roomParams, ...userParams].includes(sortBy)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst skip = Math.max(0, offset || (page > -1 ? limit * page : 0));\n\n\t\tlimit = limit > 0 ? limit : 10;\n\n\t\tconst pagination = {\n\t\t\tskip,\n\t\t\tlimit,\n\t\t};\n\n\t\tconst canViewAnonymous = !!settings.get('Accounts_AllowAnonymousRead');\n\n\t\tconst user = (await Meteor.userAsync()) as IUser | null;\n\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase 'channels':\n\t\t\t\treturn getChannelsAndGroups(user, canViewAnonymous, searchTerm, sortChannels(sortBy, sortDirection), pagination);\n\t\t\tcase 'teams':\n\t\t\t\treturn getTeams(user, searchTerm, sortChannels(sortBy, sortDirection), pagination);\n\t\t\tcase 'users':\n\t\t\t\treturn getUsers(user, text, workspace, sortUsers(sortBy, sortDirection), pagination);\n\t\t\tdefault:\n\t\t}\n\t},\n});\n\nDDPRateLimiter.addRule(\n\t{\n\t\ttype: 'method',\n\t\tname: 'browseChannels',\n\t\tuserId(/* userId*/) {\n\t\t\treturn true;\n\t\t},\n\t},\n\t100,\n\t100000,\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"4ba38419a995051542b70e29d19a877d5190f99f"}
