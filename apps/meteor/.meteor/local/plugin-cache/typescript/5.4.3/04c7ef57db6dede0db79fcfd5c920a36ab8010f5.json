{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/channel-settings/server/functions/saveRoomSystemMessages.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/channel-settings/server/functions/saveRoomSystemMessages.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/channel-settings/server/functions/saveRoomSystemMessages.ts","inputSourceMap":{"version":3,"file":"app/channel-settings/server/functions/saveRoomSystemMessages.ts","sourceRoot":"","sources":["app/channel-settings/server/functions/saveRoomSystemMessages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,kBAAkB,IAAI,kBAAkB,EAAE,MAAM,+BAA+B,CAAC;AAEzF,MAAM,CAAC,MAAM,sBAAsB,GAAG,KAAK,WAAW,GAAW,EAAE,cAAoC;IACtG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC;QAC9B,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,cAAc,EAAE;YACtD,QAAQ,EAAE,mCAAmC;SAC7C,CAAC,CAAC;IACJ,CAAC;IACD,IACC,cAAc;QACd,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EACnI,CAAC;QACF,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,gBAAgB,EAAE;YACxD,QAAQ,EAAE,mCAAmC;SAC7C,CAAC,CAAC;IACJ,CAAC;IACD,OAAO,KAAK,CAAC,qBAAqB,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AACzD,CAAC,CAAC","sourcesContent":["import type { MessageTypesValues } from '@rocket.chat/core-typings';\nimport { Rooms } from '@rocket.chat/models';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { MessageTypesValues as messageTypesValues } from '../../../lib/lib/MessageTypes';\n\nexport const saveRoomSystemMessages = async function (rid: string, systemMessages: MessageTypesValues[]) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\tfunction: 'RocketChat.saveRoomSystemMessages',\n\t\t});\n\t}\n\tif (\n\t\tsystemMessages &&\n\t\t(!Match.test(systemMessages, [String]) || systemMessages.some((value) => !messageTypesValues.map(({ key }) => key).includes(value)))\n\t) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid option', {\n\t\t\tfunction: 'RocketChat.saveRoomSystemMessages',\n\t\t});\n\t}\n\treturn Rooms.setSystemMessagesById(rid, systemMessages);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/channel-settings/server/functions/saveRoomSystemMessages.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/channel-settings/server/functions/saveRoomSystemMessages.ts","inputSourceMap":{"version":3,"file":"app/channel-settings/server/functions/saveRoomSystemMessages.ts","sourceRoot":"","sources":["app/channel-settings/server/functions/saveRoomSystemMessages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,kBAAkB,IAAI,kBAAkB,EAAE,MAAM,+BAA+B,CAAC;AAEzF,MAAM,CAAC,MAAM,sBAAsB,GAAG,KAAK,WAAW,GAAW,EAAE,cAAoC;IACtG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC;QAC9B,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,cAAc,EAAE;YACtD,QAAQ,EAAE,mCAAmC;SAC7C,CAAC,CAAC;IACJ,CAAC;IACD,IACC,cAAc;QACd,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EACnI,CAAC;QACF,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,gBAAgB,EAAE;YACxD,QAAQ,EAAE,mCAAmC;SAC7C,CAAC,CAAC;IACJ,CAAC;IACD,OAAO,KAAK,CAAC,qBAAqB,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AACzD,CAAC,CAAC","sourcesContent":["import type { MessageTypesValues } from '@rocket.chat/core-typings';\nimport { Rooms } from '@rocket.chat/models';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { MessageTypesValues as messageTypesValues } from '../../../lib/lib/MessageTypes';\n\nexport const saveRoomSystemMessages = async function (rid: string, systemMessages: MessageTypesValues[]) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\tfunction: 'RocketChat.saveRoomSystemMessages',\n\t\t});\n\t}\n\tif (\n\t\tsystemMessages &&\n\t\t(!Match.test(systemMessages, [String]) || systemMessages.some((value) => !messageTypesValues.map(({ key }) => key).includes(value)))\n\t) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid option', {\n\t\t\tfunction: 'RocketChat.saveRoomSystemMessages',\n\t\t});\n\t}\n\treturn Rooms.setSystemMessagesById(rid, systemMessages);\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      saveRoomSystemMessages: () => saveRoomSystemMessages\n    });\n    let Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 0);\n    let Match;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let messageTypesValues;\n    module.link(\"../../../lib/lib/MessageTypes\", {\n      MessageTypesValues(v) {\n        messageTypesValues = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const saveRoomSystemMessages = async function (rid, systemMessages) {\n      if (!Match.test(rid, String)) {\n        throw new Meteor.Error('invalid-room', 'Invalid room', {\n          function: 'RocketChat.saveRoomSystemMessages'\n        });\n      }\n      if (systemMessages && (!Match.test(systemMessages, [String]) || systemMessages.some(value => !messageTypesValues.map(_ref => {\n        let {\n          key\n        } = _ref;\n        return key;\n      }).includes(value)))) {\n        throw new Meteor.Error('invalid-room', 'Invalid option', {\n          function: 'RocketChat.saveRoomSystemMessages'\n        });\n      }\n      return Rooms.setSystemMessagesById(rid, systemMessages);\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","saveRoomSystemMessages","Rooms","link","v","Match","Meteor","messageTypesValues","MessageTypesValues","__reifyWaitForDeps__","rid","systemMessages","test","String","Error","function","some","value","map","_ref","key","includes","setSystemMessagesById","__reify_async_result__","_reifyError","self","async"],"sources":["app/channel-settings/server/functions/saveRoomSystemMessages.ts"],"sourcesContent":["import type { MessageTypesValues } from '@rocket.chat/core-typings';\nimport { Rooms } from '@rocket.chat/models';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { MessageTypesValues as messageTypesValues } from '../../../lib/lib/MessageTypes';\n\nexport const saveRoomSystemMessages = async function (rid: string, systemMessages: MessageTypesValues[]) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\tfunction: 'RocketChat.saveRoomSystemMessages',\n\t\t});\n\t}\n\tif (\n\t\tsystemMessages &&\n\t\t(!Match.test(systemMessages, [String]) || systemMessages.some((value) => !messageTypesValues.map(({ key }) => key).includes(value)))\n\t) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid option', {\n\t\t\tfunction: 'RocketChat.saveRoomSystemMessages',\n\t\t});\n\t}\n\treturn Rooms.setSystemMessagesById(rid, systemMessages);\n};\n"],"mappings":";;;IACAA,MAAA,CAAOC,MAAE,CAAK;MAAAC,sBAAQ,EAAAA,CAAA,KAAAA;IAAsB;IAAA,IAAAC,KAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,MAAAE,CAAA;QAAAF,KAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA;IAAAN,MAAA,CAAAI,IAAA;MAAAE,MAAAD,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,MAAA;IAAAP,MAAA,CAAAI,IAAA;MAAAG,OAAAF,CAAA;QAAAE,MAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,kBAAA;IAAAR,MAAA,CAAAI,IAAA;MAAAK,mBAAAJ,CAAA;QAAAG,kBAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAK,oBAAA,WAAAA,oBAAA;IAMrC,MAAMR,sBAAsB,GAAG,eAAAA,CAAgBS,GAAW,EAAEC,cAAoC;MACtG,IAAI,CAACN,KAAK,CAACO,IAAI,CAACF,GAAG,EAAEG,MAAM,CAAC,EAAE;QAC7B,MAAM,IAAIP,MAAM,CAACQ,KAAK,CAAC,cAAc,EAAE,cAAc,EAAE;UACtDC,QAAQ,EAAE;SACV,CAAC;MACH;MACA,IACCJ,cAAc,KACb,CAACN,KAAK,CAACO,IAAI,CAACD,cAAc,EAAE,CAACE,MAAM,CAAC,CAAC,IAAIF,cAAc,CAACK,IAAI,CAAEC,KAAK,IAAK,CAACV,kBAAkB,CAACW,GAAG,CAACC,IAAA;QAAA,IAAC;UAAEC;QAAG,CAAE,GAAAD,IAAA;QAAA,OAAKC,GAAG;MAAA,EAAC,CAACC,QAAQ,CAACJ,KAAK,CAAC,CAAC,CAAC,EACnI;QACD,MAAM,IAAIX,MAAM,CAACQ,KAAK,CAAC,cAAc,EAAE,gBAAgB,EAAE;UACxDC,QAAQ,EAAE;SACV,CAAC;MACH;MACA,OAAOb,KAAK,CAACoB,qBAAqB,CAACZ,GAAG,EAAEC,cAAc,CAAC;IACxD,CAAC;IAACY,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"04c7ef57db6dede0db79fcfd5c920a36ab8010f5"}
