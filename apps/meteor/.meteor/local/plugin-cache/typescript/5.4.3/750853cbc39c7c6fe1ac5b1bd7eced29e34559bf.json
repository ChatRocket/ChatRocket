{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/mentions/lib/MentionsParser.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/mentions/lib/MentionsParser.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/mentions/lib/MentionsParser.ts","inputSourceMap":{"version":3,"file":"app/mentions/lib/MentionsParser.ts","sourceRoot":"","sources":["app/mentions/lib/MentionsParser.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\n\nexport type MentionsParserArgs = {\n\tpattern: () => string;\n\tuseRealName?: () => boolean;\n\tme?: () => string;\n\troomTemplate?: (args: { prefix: string; reference: string; mention: string; channel?: any }) => string;\n\tuserTemplate?: (args: { prefix: string; className: string; mention: string; title?: string; label: string; type?: string }) => string;\n};\n\nconst userTemplateDefault = ({\n\tprefix,\n\tclassName,\n\tmention,\n\ttitle = '',\n\tlabel,\n\ttype = 'username',\n}: {\n\tprefix: string;\n\tclassName: string;\n\tmention: string;\n\ttitle?: string;\n\tlabel?: string;\n\ttype?: string;\n}) => `${prefix}<a class=\"${className}\" data-${type}=\"${mention}\"${title ? ` title=\"${title}\"` : ''}>${label}</a>`;\n\nconst roomTemplateDefault = ({ prefix, reference, mention }: { prefix: string; reference: string; mention: string }) =>\n\t`${prefix}<a class=\"mention-link mention-link--room\" data-channel=\"${reference}\">${`#${mention}`}</a>`;\n\nexport class MentionsParser {\n\tme: () => string;\n\n\tpattern: MentionsParserArgs['pattern'];\n\n\tuserTemplate: (args: { prefix: string; className: string; mention: string; title?: string; label: string; type?: string }) => string;\n\n\troomTemplate: (args: { prefix: string; reference: string; mention: string; channel?: any }) => string;\n\n\tuseRealName: () => boolean;\n\n\tconstructor({ pattern, useRealName, me, roomTemplate = roomTemplateDefault, userTemplate = userTemplateDefault }: MentionsParserArgs) {\n\t\tthis.pattern = pattern;\n\t\tthis.useRealName = useRealName || (() => false);\n\t\tthis.me = me || (() => '');\n\t\tthis.userTemplate = userTemplate;\n\t\tthis.roomTemplate = roomTemplate;\n\t}\n\n\tget userMentionRegex() {\n\t\treturn new RegExp(`(^|\\\\s|>)@(${this.pattern()}(@(${this.pattern()}))?(:([0-9a-zA-Z-_.]+))?)`, 'gm');\n\t}\n\n\tget channelMentionRegex() {\n\t\treturn new RegExp(`(^|\\\\s|>)#(${this.pattern()}(@(${this.pattern()}))?)`, 'gm');\n\t}\n\n\treplaceUsers = (msg: string, { mentions, temp }: IMessage, me: string) =>\n\t\tmsg.replace(this.userMentionRegex, (match, prefix, mention) => {\n\t\t\tconst classNames = ['mention-link'];\n\n\t\t\tif (mention === 'all') {\n\t\t\t\tclassNames.push('mention-link--all');\n\t\t\t\tclassNames.push('mention-link--group');\n\t\t\t} else if (mention === 'here') {\n\t\t\t\tclassNames.push('mention-link--here');\n\t\t\t\tclassNames.push('mention-link--group');\n\t\t\t} else if (mention === me) {\n\t\t\t\tclassNames.push('mention-link--me');\n\t\t\t\tclassNames.push('mention-link--user');\n\t\t\t} else {\n\t\t\t\tclassNames.push('mention-link--user');\n\t\t\t}\n\n\t\t\tconst className = classNames.join(' ');\n\n\t\t\tif (mention === 'all' || mention === 'here') {\n\t\t\t\treturn this.userTemplate({ prefix, className, mention, label: mention, type: 'group' });\n\t\t\t}\n\n\t\t\tconst filterUser = ({ username, type }: { username?: string; type?: string }) => (!type || type === 'user') && username === mention;\n\t\t\tconst filterTeam = ({ name, type }: { name?: string; type?: string }) => type === 'team' && name === mention;\n\n\t\t\tconst [mentionObj] = (mentions || []).filter((m) => m && (filterUser(m) || filterTeam(m)));\n\n\t\t\tconst label = temp\n\t\t\t\t? mention && escapeHTML(mention)\n\t\t\t\t: mentionObj && escapeHTML((mentionObj.type === 'team' || this.useRealName() ? mentionObj.name : mentionObj.username) || '');\n\n\t\t\tif (!label) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\treturn this.userTemplate({\n\t\t\t\tprefix,\n\t\t\t\tclassName,\n\t\t\t\tmention,\n\t\t\t\tlabel,\n\t\t\t\ttype: mentionObj?.type === 'team' ? 'team' : 'username',\n\t\t\t\ttitle: this.useRealName() ? mention : label,\n\t\t\t});\n\t\t});\n\n\treplaceChannels = (msg: string, { temp, channels }: IMessage) =>\n\t\tmsg.replace(/&#39;/g, \"'\").replace(this.channelMentionRegex, (match, prefix, mention) => {\n\t\t\tif (\n\t\t\t\t!temp &&\n\t\t\t\t!channels?.find((c) => {\n\t\t\t\t\treturn c.name === mention;\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\tconst channel = channels?.find(({ name }) => {\n\t\t\t\treturn name === mention;\n\t\t\t});\n\t\t\tconst reference = channel ? channel._id : mention;\n\t\t\treturn this.roomTemplate({ prefix, reference, channel, mention });\n\t\t});\n\n\tgetUserMentions(str: string) {\n\t\treturn (str.match(this.userMentionRegex) || []).map((match) => match.trim());\n\t}\n\n\tgetChannelMentions(str: string) {\n\t\treturn (str.match(this.channelMentionRegex) || []).map((match) => match.trim());\n\t}\n\n\tparse(message: IMessage) {\n\t\tlet msg = message?.html || '';\n\t\tif (!msg.trim()) {\n\t\t\treturn message;\n\t\t}\n\t\tmsg = this.replaceUsers(msg, message, this.me());\n\t\tmsg = this.replaceChannels(msg, message);\n\t\tmessage.html = msg;\n\t\treturn message;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/mentions/lib/MentionsParser.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/mentions/lib/MentionsParser.ts","inputSourceMap":{"version":3,"file":"app/mentions/lib/MentionsParser.ts","sourceRoot":"","sources":["app/mentions/lib/MentionsParser.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\n\nexport type MentionsParserArgs = {\n\tpattern: () => string;\n\tuseRealName?: () => boolean;\n\tme?: () => string;\n\troomTemplate?: (args: { prefix: string; reference: string; mention: string; channel?: any }) => string;\n\tuserTemplate?: (args: { prefix: string; className: string; mention: string; title?: string; label: string; type?: string }) => string;\n};\n\nconst userTemplateDefault = ({\n\tprefix,\n\tclassName,\n\tmention,\n\ttitle = '',\n\tlabel,\n\ttype = 'username',\n}: {\n\tprefix: string;\n\tclassName: string;\n\tmention: string;\n\ttitle?: string;\n\tlabel?: string;\n\ttype?: string;\n}) => `${prefix}<a class=\"${className}\" data-${type}=\"${mention}\"${title ? ` title=\"${title}\"` : ''}>${label}</a>`;\n\nconst roomTemplateDefault = ({ prefix, reference, mention }: { prefix: string; reference: string; mention: string }) =>\n\t`${prefix}<a class=\"mention-link mention-link--room\" data-channel=\"${reference}\">${`#${mention}`}</a>`;\n\nexport class MentionsParser {\n\tme: () => string;\n\n\tpattern: MentionsParserArgs['pattern'];\n\n\tuserTemplate: (args: { prefix: string; className: string; mention: string; title?: string; label: string; type?: string }) => string;\n\n\troomTemplate: (args: { prefix: string; reference: string; mention: string; channel?: any }) => string;\n\n\tuseRealName: () => boolean;\n\n\tconstructor({ pattern, useRealName, me, roomTemplate = roomTemplateDefault, userTemplate = userTemplateDefault }: MentionsParserArgs) {\n\t\tthis.pattern = pattern;\n\t\tthis.useRealName = useRealName || (() => false);\n\t\tthis.me = me || (() => '');\n\t\tthis.userTemplate = userTemplate;\n\t\tthis.roomTemplate = roomTemplate;\n\t}\n\n\tget userMentionRegex() {\n\t\treturn new RegExp(`(^|\\\\s|>)@(${this.pattern()}(@(${this.pattern()}))?(:([0-9a-zA-Z-_.]+))?)`, 'gm');\n\t}\n\n\tget channelMentionRegex() {\n\t\treturn new RegExp(`(^|\\\\s|>)#(${this.pattern()}(@(${this.pattern()}))?)`, 'gm');\n\t}\n\n\treplaceUsers = (msg: string, { mentions, temp }: IMessage, me: string) =>\n\t\tmsg.replace(this.userMentionRegex, (match, prefix, mention) => {\n\t\t\tconst classNames = ['mention-link'];\n\n\t\t\tif (mention === 'all') {\n\t\t\t\tclassNames.push('mention-link--all');\n\t\t\t\tclassNames.push('mention-link--group');\n\t\t\t} else if (mention === 'here') {\n\t\t\t\tclassNames.push('mention-link--here');\n\t\t\t\tclassNames.push('mention-link--group');\n\t\t\t} else if (mention === me) {\n\t\t\t\tclassNames.push('mention-link--me');\n\t\t\t\tclassNames.push('mention-link--user');\n\t\t\t} else {\n\t\t\t\tclassNames.push('mention-link--user');\n\t\t\t}\n\n\t\t\tconst className = classNames.join(' ');\n\n\t\t\tif (mention === 'all' || mention === 'here') {\n\t\t\t\treturn this.userTemplate({ prefix, className, mention, label: mention, type: 'group' });\n\t\t\t}\n\n\t\t\tconst filterUser = ({ username, type }: { username?: string; type?: string }) => (!type || type === 'user') && username === mention;\n\t\t\tconst filterTeam = ({ name, type }: { name?: string; type?: string }) => type === 'team' && name === mention;\n\n\t\t\tconst [mentionObj] = (mentions || []).filter((m) => m && (filterUser(m) || filterTeam(m)));\n\n\t\t\tconst label = temp\n\t\t\t\t? mention && escapeHTML(mention)\n\t\t\t\t: mentionObj && escapeHTML((mentionObj.type === 'team' || this.useRealName() ? mentionObj.name : mentionObj.username) || '');\n\n\t\t\tif (!label) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\treturn this.userTemplate({\n\t\t\t\tprefix,\n\t\t\t\tclassName,\n\t\t\t\tmention,\n\t\t\t\tlabel,\n\t\t\t\ttype: mentionObj?.type === 'team' ? 'team' : 'username',\n\t\t\t\ttitle: this.useRealName() ? mention : label,\n\t\t\t});\n\t\t});\n\n\treplaceChannels = (msg: string, { temp, channels }: IMessage) =>\n\t\tmsg.replace(/&#39;/g, \"'\").replace(this.channelMentionRegex, (match, prefix, mention) => {\n\t\t\tif (\n\t\t\t\t!temp &&\n\t\t\t\t!channels?.find((c) => {\n\t\t\t\t\treturn c.name === mention;\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\tconst channel = channels?.find(({ name }) => {\n\t\t\t\treturn name === mention;\n\t\t\t});\n\t\t\tconst reference = channel ? channel._id : mention;\n\t\t\treturn this.roomTemplate({ prefix, reference, channel, mention });\n\t\t});\n\n\tgetUserMentions(str: string) {\n\t\treturn (str.match(this.userMentionRegex) || []).map((match) => match.trim());\n\t}\n\n\tgetChannelMentions(str: string) {\n\t\treturn (str.match(this.channelMentionRegex) || []).map((match) => match.trim());\n\t}\n\n\tparse(message: IMessage) {\n\t\tlet msg = message?.html || '';\n\t\tif (!msg.trim()) {\n\t\t\treturn message;\n\t\t}\n\t\tmsg = this.replaceUsers(msg, message, this.me());\n\t\tmsg = this.replaceChannels(msg, message);\n\t\tmessage.html = msg;\n\t\treturn message;\n\t}\n}\n"]}}},"code":"module.export({\n  MentionsParser: () => MentionsParser\n});\nlet escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeHTML(v) {\n    escapeHTML = v;\n  }\n}, 0);\nconst userTemplateDefault = _ref => {\n  let {\n    prefix,\n    className,\n    mention,\n    title = '',\n    label,\n    type = 'username'\n  } = _ref;\n  return \"\".concat(prefix, \"<a class=\\\"\").concat(className, \"\\\" data-\").concat(type, \"=\\\"\").concat(mention, \"\\\"\").concat(title ? \" title=\\\"\".concat(title, \"\\\"\") : '', \">\").concat(label, \"</a>\");\n};\nconst roomTemplateDefault = _ref2 => {\n  let {\n    prefix,\n    reference,\n    mention\n  } = _ref2;\n  return \"\".concat(prefix, \"<a class=\\\"mention-link mention-link--room\\\" data-channel=\\\"\").concat(reference, \"\\\">\", \"#\".concat(mention), \"</a>\");\n};\nclass MentionsParser {\n  constructor(_ref3) {\n    let {\n      pattern,\n      useRealName,\n      me: _me,\n      roomTemplate = roomTemplateDefault,\n      userTemplate = userTemplateDefault\n    } = _ref3;\n    this.me = void 0;\n    this.pattern = void 0;\n    this.userTemplate = void 0;\n    this.roomTemplate = void 0;\n    this.useRealName = void 0;\n    this.replaceUsers = (msg, _ref4, me) => {\n      let {\n        mentions,\n        temp\n      } = _ref4;\n      return msg.replace(this.userMentionRegex, (match, prefix, mention) => {\n        const classNames = ['mention-link'];\n        if (mention === 'all') {\n          classNames.push('mention-link--all');\n          classNames.push('mention-link--group');\n        } else if (mention === 'here') {\n          classNames.push('mention-link--here');\n          classNames.push('mention-link--group');\n        } else if (mention === me) {\n          classNames.push('mention-link--me');\n          classNames.push('mention-link--user');\n        } else {\n          classNames.push('mention-link--user');\n        }\n        const className = classNames.join(' ');\n        if (mention === 'all' || mention === 'here') {\n          return this.userTemplate({\n            prefix,\n            className,\n            mention,\n            label: mention,\n            type: 'group'\n          });\n        }\n        const filterUser = _ref5 => {\n          let {\n            username,\n            type\n          } = _ref5;\n          return (!type || type === 'user') && username === mention;\n        };\n        const filterTeam = _ref6 => {\n          let {\n            name,\n            type\n          } = _ref6;\n          return type === 'team' && name === mention;\n        };\n        const [mentionObj] = (mentions || []).filter(m => m && (filterUser(m) || filterTeam(m)));\n        const label = temp ? mention && escapeHTML(mention) : mentionObj && escapeHTML((mentionObj.type === 'team' || this.useRealName() ? mentionObj.name : mentionObj.username) || '');\n        if (!label) {\n          return match;\n        }\n        return this.userTemplate({\n          prefix,\n          className,\n          mention,\n          label,\n          type: (mentionObj === null || mentionObj === void 0 ? void 0 : mentionObj.type) === 'team' ? 'team' : 'username',\n          title: this.useRealName() ? mention : label\n        });\n      });\n    };\n    this.replaceChannels = (msg, _ref7) => {\n      let {\n        temp,\n        channels\n      } = _ref7;\n      return msg.replace(/&#39;/g, \"'\").replace(this.channelMentionRegex, (match, prefix, mention) => {\n        if (!temp && !(channels !== null && channels !== void 0 && channels.find(c => {\n          return c.name === mention;\n        }))) {\n          return match;\n        }\n        const channel = channels === null || channels === void 0 ? void 0 : channels.find(_ref8 => {\n          let {\n            name\n          } = _ref8;\n          return name === mention;\n        });\n        const reference = channel ? channel._id : mention;\n        return this.roomTemplate({\n          prefix,\n          reference,\n          channel,\n          mention\n        });\n      });\n    };\n    this.pattern = pattern;\n    this.useRealName = useRealName || (() => false);\n    this.me = _me || (() => '');\n    this.userTemplate = userTemplate;\n    this.roomTemplate = roomTemplate;\n  }\n  get userMentionRegex() {\n    return new RegExp(\"(^|\\\\s|>)@(\".concat(this.pattern(), \"(@(\").concat(this.pattern(), \"))?(:([0-9a-zA-Z-_.]+))?)\"), 'gm');\n  }\n  get channelMentionRegex() {\n    return new RegExp(\"(^|\\\\s|>)#(\".concat(this.pattern(), \"(@(\").concat(this.pattern(), \"))?)\"), 'gm');\n  }\n  getUserMentions(str) {\n    return (str.match(this.userMentionRegex) || []).map(match => match.trim());\n  }\n  getChannelMentions(str) {\n    return (str.match(this.channelMentionRegex) || []).map(match => match.trim());\n  }\n  parse(message) {\n    let msg = (message === null || message === void 0 ? void 0 : message.html) || '';\n    if (!msg.trim()) {\n      return message;\n    }\n    msg = this.replaceUsers(msg, message, this.me());\n    msg = this.replaceChannels(msg, message);\n    message.html = msg;\n    return message;\n  }\n}","map":{"version":3,"names":["module","export","MentionsParser","escapeHTML","link","v","userTemplateDefault","_ref","prefix","className","mention","title","label","type","concat","roomTemplateDefault","_ref2","reference","constructor","_ref3","pattern","useRealName","me","roomTemplate","userTemplate","replaceUsers","msg","_ref4","mentions","temp","replace","userMentionRegex","match","classNames","push","join","filterUser","_ref5","username","filterTeam","_ref6","name","mentionObj","filter","m","replaceChannels","_ref7","channels","channelMentionRegex","find","c","channel","_ref8","_id","RegExp","getUserMentions","str","map","trim","getChannelMentions","parse","message","html"],"sources":["app/mentions/lib/MentionsParser.ts"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\n\nexport type MentionsParserArgs = {\n\tpattern: () => string;\n\tuseRealName?: () => boolean;\n\tme?: () => string;\n\troomTemplate?: (args: { prefix: string; reference: string; mention: string; channel?: any }) => string;\n\tuserTemplate?: (args: { prefix: string; className: string; mention: string; title?: string; label: string; type?: string }) => string;\n};\n\nconst userTemplateDefault = ({\n\tprefix,\n\tclassName,\n\tmention,\n\ttitle = '',\n\tlabel,\n\ttype = 'username',\n}: {\n\tprefix: string;\n\tclassName: string;\n\tmention: string;\n\ttitle?: string;\n\tlabel?: string;\n\ttype?: string;\n}) => `${prefix}<a class=\"${className}\" data-${type}=\"${mention}\"${title ? ` title=\"${title}\"` : ''}>${label}</a>`;\n\nconst roomTemplateDefault = ({ prefix, reference, mention }: { prefix: string; reference: string; mention: string }) =>\n\t`${prefix}<a class=\"mention-link mention-link--room\" data-channel=\"${reference}\">${`#${mention}`}</a>`;\n\nexport class MentionsParser {\n\tme: () => string;\n\n\tpattern: MentionsParserArgs['pattern'];\n\n\tuserTemplate: (args: { prefix: string; className: string; mention: string; title?: string; label: string; type?: string }) => string;\n\n\troomTemplate: (args: { prefix: string; reference: string; mention: string; channel?: any }) => string;\n\n\tuseRealName: () => boolean;\n\n\tconstructor({ pattern, useRealName, me, roomTemplate = roomTemplateDefault, userTemplate = userTemplateDefault }: MentionsParserArgs) {\n\t\tthis.pattern = pattern;\n\t\tthis.useRealName = useRealName || (() => false);\n\t\tthis.me = me || (() => '');\n\t\tthis.userTemplate = userTemplate;\n\t\tthis.roomTemplate = roomTemplate;\n\t}\n\n\tget userMentionRegex() {\n\t\treturn new RegExp(`(^|\\\\s|>)@(${this.pattern()}(@(${this.pattern()}))?(:([0-9a-zA-Z-_.]+))?)`, 'gm');\n\t}\n\n\tget channelMentionRegex() {\n\t\treturn new RegExp(`(^|\\\\s|>)#(${this.pattern()}(@(${this.pattern()}))?)`, 'gm');\n\t}\n\n\treplaceUsers = (msg: string, { mentions, temp }: IMessage, me: string) =>\n\t\tmsg.replace(this.userMentionRegex, (match, prefix, mention) => {\n\t\t\tconst classNames = ['mention-link'];\n\n\t\t\tif (mention === 'all') {\n\t\t\t\tclassNames.push('mention-link--all');\n\t\t\t\tclassNames.push('mention-link--group');\n\t\t\t} else if (mention === 'here') {\n\t\t\t\tclassNames.push('mention-link--here');\n\t\t\t\tclassNames.push('mention-link--group');\n\t\t\t} else if (mention === me) {\n\t\t\t\tclassNames.push('mention-link--me');\n\t\t\t\tclassNames.push('mention-link--user');\n\t\t\t} else {\n\t\t\t\tclassNames.push('mention-link--user');\n\t\t\t}\n\n\t\t\tconst className = classNames.join(' ');\n\n\t\t\tif (mention === 'all' || mention === 'here') {\n\t\t\t\treturn this.userTemplate({ prefix, className, mention, label: mention, type: 'group' });\n\t\t\t}\n\n\t\t\tconst filterUser = ({ username, type }: { username?: string; type?: string }) => (!type || type === 'user') && username === mention;\n\t\t\tconst filterTeam = ({ name, type }: { name?: string; type?: string }) => type === 'team' && name === mention;\n\n\t\t\tconst [mentionObj] = (mentions || []).filter((m) => m && (filterUser(m) || filterTeam(m)));\n\n\t\t\tconst label = temp\n\t\t\t\t? mention && escapeHTML(mention)\n\t\t\t\t: mentionObj && escapeHTML((mentionObj.type === 'team' || this.useRealName() ? mentionObj.name : mentionObj.username) || '');\n\n\t\t\tif (!label) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\treturn this.userTemplate({\n\t\t\t\tprefix,\n\t\t\t\tclassName,\n\t\t\t\tmention,\n\t\t\t\tlabel,\n\t\t\t\ttype: mentionObj?.type === 'team' ? 'team' : 'username',\n\t\t\t\ttitle: this.useRealName() ? mention : label,\n\t\t\t});\n\t\t});\n\n\treplaceChannels = (msg: string, { temp, channels }: IMessage) =>\n\t\tmsg.replace(/&#39;/g, \"'\").replace(this.channelMentionRegex, (match, prefix, mention) => {\n\t\t\tif (\n\t\t\t\t!temp &&\n\t\t\t\t!channels?.find((c) => {\n\t\t\t\t\treturn c.name === mention;\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\treturn match;\n\t\t\t}\n\n\t\t\tconst channel = channels?.find(({ name }) => {\n\t\t\t\treturn name === mention;\n\t\t\t});\n\t\t\tconst reference = channel ? channel._id : mention;\n\t\t\treturn this.roomTemplate({ prefix, reference, channel, mention });\n\t\t});\n\n\tgetUserMentions(str: string) {\n\t\treturn (str.match(this.userMentionRegex) || []).map((match) => match.trim());\n\t}\n\n\tgetChannelMentions(str: string) {\n\t\treturn (str.match(this.channelMentionRegex) || []).map((match) => match.trim());\n\t}\n\n\tparse(message: IMessage) {\n\t\tlet msg = message?.html || '';\n\t\tif (!msg.trim()) {\n\t\t\treturn message;\n\t\t}\n\t\tmsg = this.replaceUsers(msg, message, this.me());\n\t\tmsg = this.replaceChannels(msg, message);\n\t\tmessage.html = msg;\n\t\treturn message;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"750853cbc39c7c6fe1ac5b1bd7eced29e34559bf"}
