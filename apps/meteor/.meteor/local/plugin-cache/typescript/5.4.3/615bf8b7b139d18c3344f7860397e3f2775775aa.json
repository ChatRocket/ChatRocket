{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/getDirtyFields.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/getDirtyFields.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/getDirtyFields.ts","inputSourceMap":{"version":3,"file":"client/lib/getDirtyFields.ts","sourceRoot":"","sources":["client/lib/getDirtyFields.ts"],"names":[],"mappings":"AAEA;;;;;GAKG;AACH,MAAM,CAAC,MAAM,cAAc,GAAG,CAC7B,SAAY,EACZ,WAA0D,EAC7C,EAAE;IACf,MAAM,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,YAAY,EAAE,EAAE;QACjF,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YACvD,CAAC,CAAE,WAAW,CAAC,YAAY,CAAe,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC;YAC1E,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC;QACtC,IAAI,OAAO,EAAE,CAAC;YACb,OAAO;gBACN,GAAG,GAAG;gBACN,CAAC,YAAY,CAAC,EAAE,SAAS,CAAC,YAAY,CAAC;aACvC,CAAC;QACH,CAAC;QACD,OAAO,GAAG,CAAC;IACZ,CAAC,EAAE,EAAgB,CAAC,CAAC;IAErB,OAAO,mBAAmB,CAAC;AAC5B,CAAC,CAAC","sourcesContent":["import type { FieldValues } from 'react-hook-form';\n\n/**\n * Helper function to get dirty fields from react-hook-form\n * @param allFields all fields object\n * @param dirtyFields dirty fields object\n * @returns all dirty fields object\n */\nexport const getDirtyFields = <T extends FieldValues>(\n\tallFields: T,\n\tdirtyFields: Partial<Record<keyof T, boolean | boolean[]>>,\n): Partial<T> => {\n\tconst dirtyFieldsObjValue = Object.keys(dirtyFields).reduce((acc, currentField) => {\n\t\tconst isDirty = Array.isArray(dirtyFields[currentField])\n\t\t\t? (dirtyFields[currentField] as boolean[]).some((value) => value === true)\n\t\t\t: dirtyFields[currentField] === true;\n\t\tif (isDirty) {\n\t\t\treturn {\n\t\t\t\t...acc,\n\t\t\t\t[currentField]: allFields[currentField],\n\t\t\t};\n\t\t}\n\t\treturn acc;\n\t}, {} as Partial<T>);\n\n\treturn dirtyFieldsObjValue;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/getDirtyFields.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/getDirtyFields.ts","inputSourceMap":{"version":3,"file":"client/lib/getDirtyFields.ts","sourceRoot":"","sources":["client/lib/getDirtyFields.ts"],"names":[],"mappings":"AAEA;;;;;GAKG;AACH,MAAM,CAAC,MAAM,cAAc,GAAG,CAC7B,SAAY,EACZ,WAA0D,EAC7C,EAAE;IACf,MAAM,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,YAAY,EAAE,EAAE;QACjF,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YACvD,CAAC,CAAE,WAAW,CAAC,YAAY,CAAe,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC;YAC1E,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC;QACtC,IAAI,OAAO,EAAE,CAAC;YACb,OAAO;gBACN,GAAG,GAAG;gBACN,CAAC,YAAY,CAAC,EAAE,SAAS,CAAC,YAAY,CAAC;aACvC,CAAC;QACH,CAAC;QACD,OAAO,GAAG,CAAC;IACZ,CAAC,EAAE,EAAgB,CAAC,CAAC;IAErB,OAAO,mBAAmB,CAAC;AAC5B,CAAC,CAAC","sourcesContent":["import type { FieldValues } from 'react-hook-form';\n\n/**\n * Helper function to get dirty fields from react-hook-form\n * @param allFields all fields object\n * @param dirtyFields dirty fields object\n * @returns all dirty fields object\n */\nexport const getDirtyFields = <T extends FieldValues>(\n\tallFields: T,\n\tdirtyFields: Partial<Record<keyof T, boolean | boolean[]>>,\n): Partial<T> => {\n\tconst dirtyFieldsObjValue = Object.keys(dirtyFields).reduce((acc, currentField) => {\n\t\tconst isDirty = Array.isArray(dirtyFields[currentField])\n\t\t\t? (dirtyFields[currentField] as boolean[]).some((value) => value === true)\n\t\t\t: dirtyFields[currentField] === true;\n\t\tif (isDirty) {\n\t\t\treturn {\n\t\t\t\t...acc,\n\t\t\t\t[currentField]: allFields[currentField],\n\t\t\t};\n\t\t}\n\t\treturn acc;\n\t}, {} as Partial<T>);\n\n\treturn dirtyFieldsObjValue;\n};\n"]}}},"code":"var _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  getDirtyFields: function () {\n    return getDirtyFields;\n  }\n});\nvar getDirtyFields = function (allFields, dirtyFields) {\n  var dirtyFieldsObjValue = Object.keys(dirtyFields).reduce(function (acc, currentField) {\n    var isDirty = Array.isArray(dirtyFields[currentField]) ? dirtyFields[currentField].some(function (value) {\n      return value === true;\n    }) : dirtyFields[currentField] === true;\n    if (isDirty) {\n      var _objectSpread2;\n      return _objectSpread(_objectSpread({}, acc), {}, (_objectSpread2 = {}, _objectSpread2[currentField] = allFields[currentField], _objectSpread2));\n    }\n    return acc;\n  }, {});\n  return dirtyFieldsObjValue;\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","getDirtyFields","allFields","dirtyFields","dirtyFieldsObjValue","Object","keys","reduce","acc","currentField","isDirty","Array","isArray","some","value","_objectSpread2"],"sources":["client/lib/getDirtyFields.ts"],"sourcesContent":["import type { FieldValues } from 'react-hook-form';\n\n/**\n * Helper function to get dirty fields from react-hook-form\n * @param allFields all fields object\n * @param dirtyFields dirty fields object\n * @returns all dirty fields object\n */\nexport const getDirtyFields = <T extends FieldValues>(\n\tallFields: T,\n\tdirtyFields: Partial<Record<keyof T, boolean | boolean[]>>,\n): Partial<T> => {\n\tconst dirtyFieldsObjValue = Object.keys(dirtyFields).reduce((acc, currentField) => {\n\t\tconst isDirty = Array.isArray(dirtyFields[currentField])\n\t\t\t? (dirtyFields[currentField] as boolean[]).some((value) => value === true)\n\t\t\t: dirtyFields[currentField] === true;\n\t\tif (isDirty) {\n\t\t\treturn {\n\t\t\t\t...acc,\n\t\t\t\t[currentField]: allFields[currentField],\n\t\t\t};\n\t\t}\n\t\treturn acc;\n\t}, {} as Partial<T>);\n\n\treturn dirtyFieldsObjValue;\n};\n"],"mappings":"AAEA,IAAAA,aAAA;AAAAC,MAAA,CAAAC,IAAA;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAJ,aAAA,GAAAI,CAAA;EAAA;AAAA;AAAAH,MAAA,CAAAI,MAAA;EAAAC,cAAA,WAAAA,CAAA;IAAA,OAAAA,cAAA;EAAA;AAAA;AAMO,IAAMA,cAAc,GAAG,SAAAA,CAC7BC,SAAY,EACZC,WAA0D,EAC3C;EACf,IAAMC,mBAAmB,GAAGC,MAAM,CAACC,IAAI,CAACH,WAAW,CAAC,CAACI,MAAM,CAAC,UAACC,GAAG,EAAEC,YAAY,EAAI;IACjF,IAAMC,OAAO,GAAGC,KAAK,CAACC,OAAO,CAACT,WAAW,CAACM,YAAY,CAAC,CAAC,GACpDN,WAAW,CAACM,YAAY,CAAe,CAACI,IAAI,CAAC,UAACC,KAAK;MAAA,OAAKA,KAAK,KAAK,IAAI;IAAA,EAAC,GACxEX,WAAW,CAACM,YAAY,CAAC,KAAK,IAAI;IACrC,IAAIC,OAAO,EAAE;MAAA,IAAAK,cAAA;MACZ,OAAApB,aAAA,CAAAA,aAAA,KACIa,GAAG,QAAAO,cAAA,OAAAA,cAAA,CACLN,YAAY,IAAGP,SAAS,CAACO,YAAY,CAAC,EAAAM,cAAA;IAEzC;IACA,OAAOP,GAAG;EACX,CAAC,EAAE,EAAgB,CAAC;EAEpB,OAAOJ,mBAAmB;AAC3B,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"615bf8b7b139d18c3344f7860397e3f2775775aa"}
