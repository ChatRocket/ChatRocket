{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/startup/mentionUserNotInChannel.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/startup/mentionUserNotInChannel.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/startup/mentionUserNotInChannel.ts","inputSourceMap":{"version":3,"file":"app/lib/server/startup/mentionUserNotInChannel.ts","sourceRoot":"","sources":["app/lib/server/startup/mentionUserNotInChannel.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IMessage } from '@rocket.chat/core-typings';\nimport { isDirectMessageRoom, isEditedMessage, isOmnichannelRoom, isRoomFederated } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users } from '@rocket.chat/models';\nimport type { ActionsBlock } from '@rocket.chat/ui-kit';\nimport moment from 'moment';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { getUserDisplayName } from '../../../../lib/getUserDisplayName';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { i18n } from '../../../../server/lib/i18n';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\n\nconst APP_ID = 'mention-core';\nconst getBlocks = (mentions: IMessage['mentions'], messageId: string, lng: string | undefined) => {\n\tconst stringifiedMentions = JSON.stringify(mentions);\n\treturn {\n\t\taddUsersBlock: {\n\t\t\ttype: 'button',\n\t\t\tappId: APP_ID,\n\t\t\tblockId: messageId,\n\t\t\tvalue: stringifiedMentions,\n\t\t\tactionId: 'add-users',\n\t\t\ttext: {\n\t\t\t\ttype: 'plain_text',\n\t\t\t\ttext: i18n.t('Add_them', { lng }),\n\t\t\t},\n\t\t},\n\t\tdismissBlock: {\n\t\t\ttype: 'button',\n\t\t\tappId: APP_ID,\n\t\t\tblockId: messageId,\n\t\t\tvalue: stringifiedMentions,\n\t\t\tactionId: 'dismiss',\n\t\t\ttext: {\n\t\t\t\ttype: 'plain_text',\n\t\t\t\ttext: i18n.t('Do_nothing', { lng }),\n\t\t\t},\n\t\t},\n\t\tdmBlock: {\n\t\t\ttype: 'button',\n\t\t\tappId: APP_ID,\n\t\t\tvalue: stringifiedMentions,\n\t\t\tblockId: messageId,\n\t\t\tactionId: 'share-message',\n\t\t\ttext: {\n\t\t\t\ttype: 'plain_text',\n\t\t\t\ttext: i18n.t('Let_them_know', { lng }),\n\t\t\t},\n\t\t},\n\t} as const;\n};\n\ncallbacks.add(\n\t'afterSaveMessage',\n\tasync (message, { room }) => {\n\t\t// TODO: check if I need to test this 60 second rule.\n\t\t// If the message was edited, or is older than 60 seconds (imported)\n\t\t// the notifications will be skipped, so we can also skip this validation\n\t\tif (isEditedMessage(message) || (message.ts && Math.abs(moment(message.ts).diff(moment())) > 60000) || !message.mentions) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst mentions = message.mentions.filter(({ _id, type }) => _id !== 'all' && _id !== 'here' && type !== 'team');\n\t\tif (!mentions.length) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (isDirectMessageRoom(room) || isRoomFederated(room) || isOmnichannelRoom(room)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst subs = await Subscriptions.findByRoomIdAndUserIds(\n\t\t\tmessage.rid,\n\t\t\tmentions.map(({ _id }) => _id),\n\t\t\t{ projection: { u: 1 } },\n\t\t).toArray();\n\n\t\t// get all users that are mentioned but not in the channel\n\t\tconst mentionsUsersNotInChannel = mentions.filter(({ _id }) => !subs.some((sub) => sub.u._id === _id));\n\n\t\tif (!mentionsUsersNotInChannel.length) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst canAddUsersToThisRoom = await hasPermissionAsync(message.u._id, 'add-user-to-joined-room', message.rid);\n\t\tconst canAddToAnyRoom = await (room.t === 'c'\n\t\t\t? hasPermissionAsync(message.u._id, 'add-user-to-any-c-room')\n\t\t\t: hasPermissionAsync(message.u._id, 'add-user-to-any-p-room'));\n\t\tconst canDMUsers = await hasPermissionAsync(message.u._id, 'create-d'); // TODO: Perhaps check if user has DM with mentioned user (might be too expensive)\n\t\tconst canAddUsers = canAddUsersToThisRoom || canAddToAnyRoom;\n\n\t\tconst { language } = (await Users.findOneById(message.u._id)) || {};\n\n\t\tconst actionBlocks = getBlocks(mentionsUsersNotInChannel, message._id, language);\n\t\tconst elements: ActionsBlock['elements'] = [\n\t\t\tcanAddUsers && actionBlocks.addUsersBlock,\n\t\t\t(canAddUsers || canDMUsers) && actionBlocks.dismissBlock,\n\t\t\tcanDMUsers && actionBlocks.dmBlock,\n\t\t].filter(isTruthy);\n\n\t\tconst messageLabel = canAddUsers\n\t\t\t? 'You_mentioned___mentions__but_theyre_not_in_this_room'\n\t\t\t: 'You_mentioned___mentions__but_theyre_not_in_this_room_You_can_ask_a_room_admin_to_add_them';\n\n\t\tconst useRealName = settings.get<boolean>('UI_Use_Real_Name');\n\n\t\tconst usernamesOrNames = mentionsUsersNotInChannel.map(({ username, name }) => `*${getUserDisplayName(name, username, useRealName)}*`);\n\n\t\tconst mentionsText = usernamesOrNames.join(', ');\n\n\t\t// TODO: Mentions style\n\t\tvoid api.broadcast('notify.ephemeralMessage', message.u._id, message.rid, {\n\t\t\tmsg: '',\n\t\t\tmentions: mentionsUsersNotInChannel,\n\t\t\ttmid: message.tmid,\n\t\t\tblocks: [\n\t\t\t\t{\n\t\t\t\t\tappId: APP_ID,\n\t\t\t\t\ttype: 'section',\n\t\t\t\t\ttext: {\n\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\ttext: i18n.t(messageLabel, { mentions: mentionsText, lng: language }),\n\t\t\t\t\t},\n\t\t\t\t} as const,\n\t\t\t\tBoolean(elements.length) &&\n\t\t\t\t\t({\n\t\t\t\t\t\ttype: 'actions',\n\t\t\t\t\t\tappId: APP_ID,\n\t\t\t\t\t\telements,\n\t\t\t\t\t} as const),\n\t\t\t].filter(isTruthy),\n\t\t\tprivate: true,\n\t\t});\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'mention-user-not-in-channel',\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/startup/mentionUserNotInChannel.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/startup/mentionUserNotInChannel.ts","inputSourceMap":{"version":3,"file":"app/lib/server/startup/mentionUserNotInChannel.ts","sourceRoot":"","sources":["app/lib/server/startup/mentionUserNotInChannel.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IMessage } from '@rocket.chat/core-typings';\nimport { isDirectMessageRoom, isEditedMessage, isOmnichannelRoom, isRoomFederated } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users } from '@rocket.chat/models';\nimport type { ActionsBlock } from '@rocket.chat/ui-kit';\nimport moment from 'moment';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { getUserDisplayName } from '../../../../lib/getUserDisplayName';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { i18n } from '../../../../server/lib/i18n';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\n\nconst APP_ID = 'mention-core';\nconst getBlocks = (mentions: IMessage['mentions'], messageId: string, lng: string | undefined) => {\n\tconst stringifiedMentions = JSON.stringify(mentions);\n\treturn {\n\t\taddUsersBlock: {\n\t\t\ttype: 'button',\n\t\t\tappId: APP_ID,\n\t\t\tblockId: messageId,\n\t\t\tvalue: stringifiedMentions,\n\t\t\tactionId: 'add-users',\n\t\t\ttext: {\n\t\t\t\ttype: 'plain_text',\n\t\t\t\ttext: i18n.t('Add_them', { lng }),\n\t\t\t},\n\t\t},\n\t\tdismissBlock: {\n\t\t\ttype: 'button',\n\t\t\tappId: APP_ID,\n\t\t\tblockId: messageId,\n\t\t\tvalue: stringifiedMentions,\n\t\t\tactionId: 'dismiss',\n\t\t\ttext: {\n\t\t\t\ttype: 'plain_text',\n\t\t\t\ttext: i18n.t('Do_nothing', { lng }),\n\t\t\t},\n\t\t},\n\t\tdmBlock: {\n\t\t\ttype: 'button',\n\t\t\tappId: APP_ID,\n\t\t\tvalue: stringifiedMentions,\n\t\t\tblockId: messageId,\n\t\t\tactionId: 'share-message',\n\t\t\ttext: {\n\t\t\t\ttype: 'plain_text',\n\t\t\t\ttext: i18n.t('Let_them_know', { lng }),\n\t\t\t},\n\t\t},\n\t} as const;\n};\n\ncallbacks.add(\n\t'afterSaveMessage',\n\tasync (message, { room }) => {\n\t\t// TODO: check if I need to test this 60 second rule.\n\t\t// If the message was edited, or is older than 60 seconds (imported)\n\t\t// the notifications will be skipped, so we can also skip this validation\n\t\tif (isEditedMessage(message) || (message.ts && Math.abs(moment(message.ts).diff(moment())) > 60000) || !message.mentions) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst mentions = message.mentions.filter(({ _id, type }) => _id !== 'all' && _id !== 'here' && type !== 'team');\n\t\tif (!mentions.length) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (isDirectMessageRoom(room) || isRoomFederated(room) || isOmnichannelRoom(room)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst subs = await Subscriptions.findByRoomIdAndUserIds(\n\t\t\tmessage.rid,\n\t\t\tmentions.map(({ _id }) => _id),\n\t\t\t{ projection: { u: 1 } },\n\t\t).toArray();\n\n\t\t// get all users that are mentioned but not in the channel\n\t\tconst mentionsUsersNotInChannel = mentions.filter(({ _id }) => !subs.some((sub) => sub.u._id === _id));\n\n\t\tif (!mentionsUsersNotInChannel.length) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst canAddUsersToThisRoom = await hasPermissionAsync(message.u._id, 'add-user-to-joined-room', message.rid);\n\t\tconst canAddToAnyRoom = await (room.t === 'c'\n\t\t\t? hasPermissionAsync(message.u._id, 'add-user-to-any-c-room')\n\t\t\t: hasPermissionAsync(message.u._id, 'add-user-to-any-p-room'));\n\t\tconst canDMUsers = await hasPermissionAsync(message.u._id, 'create-d'); // TODO: Perhaps check if user has DM with mentioned user (might be too expensive)\n\t\tconst canAddUsers = canAddUsersToThisRoom || canAddToAnyRoom;\n\n\t\tconst { language } = (await Users.findOneById(message.u._id)) || {};\n\n\t\tconst actionBlocks = getBlocks(mentionsUsersNotInChannel, message._id, language);\n\t\tconst elements: ActionsBlock['elements'] = [\n\t\t\tcanAddUsers && actionBlocks.addUsersBlock,\n\t\t\t(canAddUsers || canDMUsers) && actionBlocks.dismissBlock,\n\t\t\tcanDMUsers && actionBlocks.dmBlock,\n\t\t].filter(isTruthy);\n\n\t\tconst messageLabel = canAddUsers\n\t\t\t? 'You_mentioned___mentions__but_theyre_not_in_this_room'\n\t\t\t: 'You_mentioned___mentions__but_theyre_not_in_this_room_You_can_ask_a_room_admin_to_add_them';\n\n\t\tconst useRealName = settings.get<boolean>('UI_Use_Real_Name');\n\n\t\tconst usernamesOrNames = mentionsUsersNotInChannel.map(({ username, name }) => `*${getUserDisplayName(name, username, useRealName)}*`);\n\n\t\tconst mentionsText = usernamesOrNames.join(', ');\n\n\t\t// TODO: Mentions style\n\t\tvoid api.broadcast('notify.ephemeralMessage', message.u._id, message.rid, {\n\t\t\tmsg: '',\n\t\t\tmentions: mentionsUsersNotInChannel,\n\t\t\ttmid: message.tmid,\n\t\t\tblocks: [\n\t\t\t\t{\n\t\t\t\t\tappId: APP_ID,\n\t\t\t\t\ttype: 'section',\n\t\t\t\t\ttext: {\n\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\ttext: i18n.t(messageLabel, { mentions: mentionsText, lng: language }),\n\t\t\t\t\t},\n\t\t\t\t} as const,\n\t\t\t\tBoolean(elements.length) &&\n\t\t\t\t\t({\n\t\t\t\t\t\ttype: 'actions',\n\t\t\t\t\t\tappId: APP_ID,\n\t\t\t\t\t\telements,\n\t\t\t\t\t} as const),\n\t\t\t].filter(isTruthy),\n\t\t\tprivate: true,\n\t\t});\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'mention-user-not-in-channel',\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let isDirectMessageRoom, isEditedMessage, isOmnichannelRoom, isRoomFederated;\n    module.link(\"@rocket.chat/core-typings\", {\n      isDirectMessageRoom(v) {\n        isDirectMessageRoom = v;\n      },\n      isEditedMessage(v) {\n        isEditedMessage = v;\n      },\n      isOmnichannelRoom(v) {\n        isOmnichannelRoom = v;\n      },\n      isRoomFederated(v) {\n        isRoomFederated = v;\n      }\n    }, 1);\n    let Subscriptions, Users;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 2);\n    let moment;\n    module.link(\"moment\", {\n      default(v) {\n        moment = v;\n      }\n    }, 3);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 4);\n    let getUserDisplayName;\n    module.link(\"../../../../lib/getUserDisplayName\", {\n      getUserDisplayName(v) {\n        getUserDisplayName = v;\n      }\n    }, 5);\n    let isTruthy;\n    module.link(\"../../../../lib/isTruthy\", {\n      isTruthy(v) {\n        isTruthy = v;\n      }\n    }, 6);\n    let i18n;\n    module.link(\"../../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 7);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 8);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 9);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const APP_ID = 'mention-core';\n    const getBlocks = (mentions, messageId, lng) => {\n      const stringifiedMentions = JSON.stringify(mentions);\n      return {\n        addUsersBlock: {\n          type: 'button',\n          appId: APP_ID,\n          blockId: messageId,\n          value: stringifiedMentions,\n          actionId: 'add-users',\n          text: {\n            type: 'plain_text',\n            text: i18n.t('Add_them', {\n              lng\n            })\n          }\n        },\n        dismissBlock: {\n          type: 'button',\n          appId: APP_ID,\n          blockId: messageId,\n          value: stringifiedMentions,\n          actionId: 'dismiss',\n          text: {\n            type: 'plain_text',\n            text: i18n.t('Do_nothing', {\n              lng\n            })\n          }\n        },\n        dmBlock: {\n          type: 'button',\n          appId: APP_ID,\n          value: stringifiedMentions,\n          blockId: messageId,\n          actionId: 'share-message',\n          text: {\n            type: 'plain_text',\n            text: i18n.t('Let_them_know', {\n              lng\n            })\n          }\n        }\n      };\n    };\n    callbacks.add('afterSaveMessage', async (message, _ref) => {\n      let {\n        room\n      } = _ref;\n      // TODO: check if I need to test this 60 second rule.\n      // If the message was edited, or is older than 60 seconds (imported)\n      // the notifications will be skipped, so we can also skip this validation\n      if (isEditedMessage(message) || message.ts && Math.abs(moment(message.ts).diff(moment())) > 60000 || !message.mentions) {\n        return message;\n      }\n      const mentions = message.mentions.filter(_ref2 => {\n        let {\n          _id,\n          type\n        } = _ref2;\n        return _id !== 'all' && _id !== 'here' && type !== 'team';\n      });\n      if (!mentions.length) {\n        return message;\n      }\n      if (isDirectMessageRoom(room) || isRoomFederated(room) || isOmnichannelRoom(room)) {\n        return message;\n      }\n      const subs = await Subscriptions.findByRoomIdAndUserIds(message.rid, mentions.map(_ref3 => {\n        let {\n          _id\n        } = _ref3;\n        return _id;\n      }), {\n        projection: {\n          u: 1\n        }\n      }).toArray();\n      // get all users that are mentioned but not in the channel\n      const mentionsUsersNotInChannel = mentions.filter(_ref4 => {\n        let {\n          _id\n        } = _ref4;\n        return !subs.some(sub => sub.u._id === _id);\n      });\n      if (!mentionsUsersNotInChannel.length) {\n        return message;\n      }\n      const canAddUsersToThisRoom = await hasPermissionAsync(message.u._id, 'add-user-to-joined-room', message.rid);\n      const canAddToAnyRoom = await (room.t === 'c' ? hasPermissionAsync(message.u._id, 'add-user-to-any-c-room') : hasPermissionAsync(message.u._id, 'add-user-to-any-p-room'));\n      const canDMUsers = await hasPermissionAsync(message.u._id, 'create-d'); // TODO: Perhaps check if user has DM with mentioned user (might be too expensive)\n      const canAddUsers = canAddUsersToThisRoom || canAddToAnyRoom;\n      const {\n        language\n      } = (await Users.findOneById(message.u._id)) || {};\n      const actionBlocks = getBlocks(mentionsUsersNotInChannel, message._id, language);\n      const elements = [canAddUsers && actionBlocks.addUsersBlock, (canAddUsers || canDMUsers) && actionBlocks.dismissBlock, canDMUsers && actionBlocks.dmBlock].filter(isTruthy);\n      const messageLabel = canAddUsers ? 'You_mentioned___mentions__but_theyre_not_in_this_room' : 'You_mentioned___mentions__but_theyre_not_in_this_room_You_can_ask_a_room_admin_to_add_them';\n      const useRealName = settings.get('UI_Use_Real_Name');\n      const usernamesOrNames = mentionsUsersNotInChannel.map(_ref5 => {\n        let {\n          username,\n          name\n        } = _ref5;\n        return \"*\".concat(getUserDisplayName(name, username, useRealName), \"*\");\n      });\n      const mentionsText = usernamesOrNames.join(', ');\n      // TODO: Mentions style\n      void api.broadcast('notify.ephemeralMessage', message.u._id, message.rid, {\n        msg: '',\n        mentions: mentionsUsersNotInChannel,\n        tmid: message.tmid,\n        blocks: [{\n          appId: APP_ID,\n          type: 'section',\n          text: {\n            type: 'mrkdwn',\n            text: i18n.t(messageLabel, {\n              mentions: mentionsText,\n              lng: language\n            })\n          }\n        }, Boolean(elements.length) && {\n          type: 'actions',\n          appId: APP_ID,\n          elements\n        }].filter(isTruthy),\n        private: true\n      });\n      return message;\n    }, callbacks.priority.LOW, 'mention-user-not-in-channel');\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["api","module","link","v","isDirectMessageRoom","isEditedMessage","isOmnichannelRoom","isRoomFederated","Subscriptions","Users","moment","default","callbacks","getUserDisplayName","isTruthy","i18n","hasPermissionAsync","settings","__reifyWaitForDeps__","APP_ID","getBlocks","mentions","messageId","lng","stringifiedMentions","JSON","stringify","addUsersBlock","type","appId","blockId","value","actionId","text","t","dismissBlock","dmBlock","add","message","_ref","room","ts","Math","abs","diff","filter","_ref2","_id","length","subs","findByRoomIdAndUserIds","rid","map","_ref3","projection","u","toArray","mentionsUsersNotInChannel","_ref4","some","sub","canAddUsersToThisRoom","canAddToAnyRoom","canDMUsers","canAddUsers","language","findOneById","actionBlocks","elements","messageLabel","useRealName","get","usernamesOrNames","_ref5","username","name","concat","mentionsText","join","broadcast","msg","tmid","blocks","Boolean","private","priority","LOW","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/startup/mentionUserNotInChannel.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IMessage } from '@rocket.chat/core-typings';\nimport { isDirectMessageRoom, isEditedMessage, isOmnichannelRoom, isRoomFederated } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users } from '@rocket.chat/models';\nimport type { ActionsBlock } from '@rocket.chat/ui-kit';\nimport moment from 'moment';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { getUserDisplayName } from '../../../../lib/getUserDisplayName';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { i18n } from '../../../../server/lib/i18n';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\n\nconst APP_ID = 'mention-core';\nconst getBlocks = (mentions: IMessage['mentions'], messageId: string, lng: string | undefined) => {\n\tconst stringifiedMentions = JSON.stringify(mentions);\n\treturn {\n\t\taddUsersBlock: {\n\t\t\ttype: 'button',\n\t\t\tappId: APP_ID,\n\t\t\tblockId: messageId,\n\t\t\tvalue: stringifiedMentions,\n\t\t\tactionId: 'add-users',\n\t\t\ttext: {\n\t\t\t\ttype: 'plain_text',\n\t\t\t\ttext: i18n.t('Add_them', { lng }),\n\t\t\t},\n\t\t},\n\t\tdismissBlock: {\n\t\t\ttype: 'button',\n\t\t\tappId: APP_ID,\n\t\t\tblockId: messageId,\n\t\t\tvalue: stringifiedMentions,\n\t\t\tactionId: 'dismiss',\n\t\t\ttext: {\n\t\t\t\ttype: 'plain_text',\n\t\t\t\ttext: i18n.t('Do_nothing', { lng }),\n\t\t\t},\n\t\t},\n\t\tdmBlock: {\n\t\t\ttype: 'button',\n\t\t\tappId: APP_ID,\n\t\t\tvalue: stringifiedMentions,\n\t\t\tblockId: messageId,\n\t\t\tactionId: 'share-message',\n\t\t\ttext: {\n\t\t\t\ttype: 'plain_text',\n\t\t\t\ttext: i18n.t('Let_them_know', { lng }),\n\t\t\t},\n\t\t},\n\t} as const;\n};\n\ncallbacks.add(\n\t'afterSaveMessage',\n\tasync (message, { room }) => {\n\t\t// TODO: check if I need to test this 60 second rule.\n\t\t// If the message was edited, or is older than 60 seconds (imported)\n\t\t// the notifications will be skipped, so we can also skip this validation\n\t\tif (isEditedMessage(message) || (message.ts && Math.abs(moment(message.ts).diff(moment())) > 60000) || !message.mentions) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst mentions = message.mentions.filter(({ _id, type }) => _id !== 'all' && _id !== 'here' && type !== 'team');\n\t\tif (!mentions.length) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (isDirectMessageRoom(room) || isRoomFederated(room) || isOmnichannelRoom(room)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst subs = await Subscriptions.findByRoomIdAndUserIds(\n\t\t\tmessage.rid,\n\t\t\tmentions.map(({ _id }) => _id),\n\t\t\t{ projection: { u: 1 } },\n\t\t).toArray();\n\n\t\t// get all users that are mentioned but not in the channel\n\t\tconst mentionsUsersNotInChannel = mentions.filter(({ _id }) => !subs.some((sub) => sub.u._id === _id));\n\n\t\tif (!mentionsUsersNotInChannel.length) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst canAddUsersToThisRoom = await hasPermissionAsync(message.u._id, 'add-user-to-joined-room', message.rid);\n\t\tconst canAddToAnyRoom = await (room.t === 'c'\n\t\t\t? hasPermissionAsync(message.u._id, 'add-user-to-any-c-room')\n\t\t\t: hasPermissionAsync(message.u._id, 'add-user-to-any-p-room'));\n\t\tconst canDMUsers = await hasPermissionAsync(message.u._id, 'create-d'); // TODO: Perhaps check if user has DM with mentioned user (might be too expensive)\n\t\tconst canAddUsers = canAddUsersToThisRoom || canAddToAnyRoom;\n\n\t\tconst { language } = (await Users.findOneById(message.u._id)) || {};\n\n\t\tconst actionBlocks = getBlocks(mentionsUsersNotInChannel, message._id, language);\n\t\tconst elements: ActionsBlock['elements'] = [\n\t\t\tcanAddUsers && actionBlocks.addUsersBlock,\n\t\t\t(canAddUsers || canDMUsers) && actionBlocks.dismissBlock,\n\t\t\tcanDMUsers && actionBlocks.dmBlock,\n\t\t].filter(isTruthy);\n\n\t\tconst messageLabel = canAddUsers\n\t\t\t? 'You_mentioned___mentions__but_theyre_not_in_this_room'\n\t\t\t: 'You_mentioned___mentions__but_theyre_not_in_this_room_You_can_ask_a_room_admin_to_add_them';\n\n\t\tconst useRealName = settings.get<boolean>('UI_Use_Real_Name');\n\n\t\tconst usernamesOrNames = mentionsUsersNotInChannel.map(({ username, name }) => `*${getUserDisplayName(name, username, useRealName)}*`);\n\n\t\tconst mentionsText = usernamesOrNames.join(', ');\n\n\t\t// TODO: Mentions style\n\t\tvoid api.broadcast('notify.ephemeralMessage', message.u._id, message.rid, {\n\t\t\tmsg: '',\n\t\t\tmentions: mentionsUsersNotInChannel,\n\t\t\ttmid: message.tmid,\n\t\t\tblocks: [\n\t\t\t\t{\n\t\t\t\t\tappId: APP_ID,\n\t\t\t\t\ttype: 'section',\n\t\t\t\t\ttext: {\n\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\ttext: i18n.t(messageLabel, { mentions: mentionsText, lng: language }),\n\t\t\t\t\t},\n\t\t\t\t} as const,\n\t\t\t\tBoolean(elements.length) &&\n\t\t\t\t\t({\n\t\t\t\t\t\ttype: 'actions',\n\t\t\t\t\t\tappId: APP_ID,\n\t\t\t\t\t\telements,\n\t\t\t\t\t} as const),\n\t\t\t].filter(isTruthy),\n\t\t\tprivate: true,\n\t\t});\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'mention-user-not-in-channel',\n);\n"],"mappings":";;;IAAA,IAAAA,GAAO;IAAAC,MAAO,CAAAC,IAAA,CAAM,4BAA4B,EAAC;MAAAF,IAAAG,CAAA;QAAAH,GAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,mBAAA,EAAAC,eAAA,EAAAC,iBAAA,EAAAC,eAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAE,oBAAAD,CAAA;QAAAC,mBAAA,GAAAD,CAAA;MAAA;MAAAE,gBAAAF,CAAA;QAAAE,eAAA,GAAAF,CAAA;MAAA;MAAAG,kBAAAH,CAAA;QAAAG,iBAAA,GAAAH,CAAA;MAAA;MAAAI,gBAAAJ,CAAA;QAAAI,eAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,aAAA,EAAAC,KAAA;IAAAR,MAAA,CAAAC,IAAA;MAAAM,cAAAL,CAAA;QAAAK,aAAA,GAAAL,CAAA;MAAA;MAAAM,MAAAN,CAAA;QAAAM,KAAA,GAAAN,CAAA;MAAA;IAAA;IAAA,IAAAO,MAAA;IAAAT,MAAA,CAAAC,IAAA;MAAAS,QAAAR,CAAA;QAAAO,MAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAS,SAAA;IAAAX,MAAA,CAAAC,IAAA;MAAAU,UAAAT,CAAA;QAAAS,SAAA,GAAAT,CAAA;MAAA;IAAA;IAAA,IAAAU,kBAAA;IAAAZ,MAAA,CAAAC,IAAA;MAAAW,mBAAAV,CAAA;QAAAU,kBAAA,GAAAV,CAAA;MAAA;IAAA;IAAA,IAAAW,QAAA;IAAAb,MAAA,CAAAC,IAAA;MAAAY,SAAAX,CAAA;QAAAW,QAAA,GAAAX,CAAA;MAAA;IAAA;IAAA,IAAAY,IAAA;IAAAd,MAAA,CAAAC,IAAA;MAAAa,KAAAZ,CAAA;QAAAY,IAAA,GAAAZ,CAAA;MAAA;IAAA;IAAA,IAAAa,kBAAA;IAAAf,MAAA,CAAAC,IAAA;MAAAc,mBAAAb,CAAA;QAAAa,kBAAA,GAAAb,CAAA;MAAA;IAAA;IAAA,IAAAc,QAAA;IAAAhB,MAAA,CAAAC,IAAA;MAAAe,SAAAd,CAAA;QAAAc,QAAA,GAAAd,CAAA;MAAA;IAAA;IAAA,IAAAe,oBAAA,WAAAA,oBAAA;IAcjD,MAAMC,MAAM,GAAG,cAAc;IAC7B,MAAMC,SAAS,GAAGA,CAACC,QAA8B,EAAEC,SAAiB,EAAEC,GAAuB,KAAI;MAChG,MAAMC,mBAAmB,GAAGC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC;MACpD,OAAO;QACNM,aAAa,EAAE;UACdC,IAAI,EAAE,QAAQ;UACdC,KAAK,EAAEV,MAAM;UACbW,OAAO,EAAER,SAAS;UAClBS,KAAK,EAAEP,mBAAmB;UAC1BQ,QAAQ,EAAE,WAAW;UACrBC,IAAI,EAAE;YACLL,IAAI,EAAE,YAAY;YAClBK,IAAI,EAAElB,IAAI,CAACmB,CAAC,CAAC,UAAU,EAAE;cAAEX;YAAG,CAAE;;SAEjC;QACDY,YAAY,EAAE;UACbP,IAAI,EAAE,QAAQ;UACdC,KAAK,EAAEV,MAAM;UACbW,OAAO,EAAER,SAAS;UAClBS,KAAK,EAAEP,mBAAmB;UAC1BQ,QAAQ,EAAE,SAAS;UACnBC,IAAI,EAAE;YACLL,IAAI,EAAE,YAAY;YAClBK,IAAI,EAAElB,IAAI,CAACmB,CAAC,CAAC,YAAY,EAAE;cAAEX;YAAG,CAAE;;SAEnC;QACDa,OAAO,EAAE;UACRR,IAAI,EAAE,QAAQ;UACdC,KAAK,EAAEV,MAAM;UACbY,KAAK,EAAEP,mBAAmB;UAC1BM,OAAO,EAAER,SAAS;UAClBU,QAAQ,EAAE,eAAe;UACzBC,IAAI,EAAE;YACLL,IAAI,EAAE,YAAY;YAClBK,IAAI,EAAElB,IAAI,CAACmB,CAAC,CAAC,eAAe,EAAE;cAAEX;YAAG,CAAE;;;OAG9B;IACX,CAAC;IAEDX,SAAS,CAACyB,GAAG,CACZ,kBAAkB,EAClB,OAAOC,OAAO,EAAAC,IAAA,KAAc;MAAA,IAAZ;QAAEC;MAAI,CAAE,GAAAD,IAAA;MACvB;MACA;MACA;MACA,IAAIlC,eAAe,CAACiC,OAAO,CAAC,IAAKA,OAAO,CAACG,EAAE,IAAIC,IAAI,CAACC,GAAG,CAACjC,MAAM,CAAC4B,OAAO,CAACG,EAAE,CAAC,CAACG,IAAI,CAAClC,MAAM,EAAE,CAAC,CAAC,GAAG,KAAM,IAAI,CAAC4B,OAAO,CAACjB,QAAQ,EAAE;QACzH,OAAOiB,OAAO;MACf;MAEA,MAAMjB,QAAQ,GAAGiB,OAAO,CAACjB,QAAQ,CAACwB,MAAM,CAACC,KAAA;QAAA,IAAC;UAAEC,GAAG;UAAEnB;QAAI,CAAE,GAAAkB,KAAA;QAAA,OAAKC,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,MAAM,IAAInB,IAAI,KAAK,MAAM;MAAA,EAAC;MAC/G,IAAI,CAACP,QAAQ,CAAC2B,MAAM,EAAE;QACrB,OAAOV,OAAO;MACf;MAEA,IAAIlC,mBAAmB,CAACoC,IAAI,CAAC,IAAIjC,eAAe,CAACiC,IAAI,CAAC,IAAIlC,iBAAiB,CAACkC,IAAI,CAAC,EAAE;QAClF,OAAOF,OAAO;MACf;MAEA,MAAMW,IAAI,GAAG,MAAMzC,aAAa,CAAC0C,sBAAsB,CACtDZ,OAAO,CAACa,GAAG,EACX9B,QAAQ,CAAC+B,GAAG,CAACC,KAAA;QAAA,IAAC;UAAEN;QAAG,CAAE,GAAAM,KAAA;QAAA,OAAKN,GAAG;MAAA,EAAC,EAC9B;QAAEO,UAAU,EAAE;UAAEC,CAAC,EAAE;QAAC;MAAE,CAAE,CACxB,CAACC,OAAO,EAAE;MAEX;MACA,MAAMC,yBAAyB,GAAGpC,QAAQ,CAACwB,MAAM,CAACa,KAAA;QAAA,IAAC;UAAEX;QAAG,CAAE,GAAAW,KAAA;QAAA,OAAK,CAACT,IAAI,CAACU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACL,CAAC,CAACR,GAAG,KAAKA,GAAG,CAAC;MAAA,EAAC;MAEtG,IAAI,CAACU,yBAAyB,CAACT,MAAM,EAAE;QACtC,OAAOV,OAAO;MACf;MAEA,MAAMuB,qBAAqB,GAAG,MAAM7C,kBAAkB,CAACsB,OAAO,CAACiB,CAAC,CAACR,GAAG,EAAE,yBAAyB,EAAET,OAAO,CAACa,GAAG,CAAC;MAC7G,MAAMW,eAAe,GAAG,OAAOtB,IAAI,CAACN,CAAC,KAAK,GAAG,GAC1ClB,kBAAkB,CAACsB,OAAO,CAACiB,CAAC,CAACR,GAAG,EAAE,wBAAwB,CAAC,GAC3D/B,kBAAkB,CAACsB,OAAO,CAACiB,CAAC,CAACR,GAAG,EAAE,wBAAwB,CAAC,CAAC;MAC/D,MAAMgB,UAAU,GAAG,MAAM/C,kBAAkB,CAACsB,OAAO,CAACiB,CAAC,CAACR,GAAG,EAAE,UAAU,CAAC,CAAC,CAAC;MACxE,MAAMiB,WAAW,GAAGH,qBAAqB,IAAIC,eAAe;MAE5D,MAAM;QAAEG;MAAQ,CAAE,GAAG,CAAC,MAAMxD,KAAK,CAACyD,WAAW,CAAC5B,OAAO,CAACiB,CAAC,CAACR,GAAG,CAAC,KAAK,EAAE;MAEnE,MAAMoB,YAAY,GAAG/C,SAAS,CAACqC,yBAAyB,EAAEnB,OAAO,CAACS,GAAG,EAAEkB,QAAQ,CAAC;MAChF,MAAMG,QAAQ,GAA6B,CAC1CJ,WAAW,IAAIG,YAAY,CAACxC,aAAa,EACzC,CAACqC,WAAW,IAAID,UAAU,KAAKI,YAAY,CAAChC,YAAY,EACxD4B,UAAU,IAAII,YAAY,CAAC/B,OAAO,CAClC,CAACS,MAAM,CAAC/B,QAAQ,CAAC;MAElB,MAAMuD,YAAY,GAAGL,WAAW,GAC7B,uDAAuD,GACvD,4FAA4F;MAE/F,MAAMM,WAAW,GAAGrD,QAAQ,CAACsD,GAAG,CAAU,kBAAkB,CAAC;MAE7D,MAAMC,gBAAgB,GAAGf,yBAAyB,CAACL,GAAG,CAACqB,KAAA;QAAA,IAAC;UAAEC,QAAQ;UAAEC;QAAI,CAAE,GAAAF,KAAA;QAAA,WAAAG,MAAA,CAAS/D,kBAAkB,CAAC8D,IAAI,EAAED,QAAQ,EAAEJ,WAAW,CAAC;MAAA,CAAG,CAAC;MAEtI,MAAMO,YAAY,GAAGL,gBAAgB,CAACM,IAAI,CAAC,IAAI,CAAC;MAEhD;MACA,KAAK9E,GAAG,CAAC+E,SAAS,CAAC,yBAAyB,EAAEzC,OAAO,CAACiB,CAAC,CAACR,GAAG,EAAET,OAAO,CAACa,GAAG,EAAE;QACzE6B,GAAG,EAAE,EAAE;QACP3D,QAAQ,EAAEoC,yBAAyB;QACnCwB,IAAI,EAAE3C,OAAO,CAAC2C,IAAI;QAClBC,MAAM,EAAE,CACP;UACCrD,KAAK,EAAEV,MAAM;UACbS,IAAI,EAAE,SAAS;UACfK,IAAI,EAAE;YACLL,IAAI,EAAE,QAAQ;YACdK,IAAI,EAAElB,IAAI,CAACmB,CAAC,CAACmC,YAAY,EAAE;cAAEhD,QAAQ,EAAEwD,YAAY;cAAEtD,GAAG,EAAE0C;YAAQ,CAAE;;SAE5D,EACVkB,OAAO,CAACf,QAAQ,CAACpB,MAAM,CAAC,IACtB;UACApB,IAAI,EAAE,SAAS;UACfC,KAAK,EAAEV,MAAM;UACbiD;SACU,CACZ,CAACvB,MAAM,CAAC/B,QAAQ,CAAC;QAClBsE,OAAO,EAAE;OACT,CAAC;MAEF,OAAO9C,OAAO;IACf,CAAC,EACD1B,SAAS,CAACyE,QAAQ,CAACC,GAAG,EACtB,6BAA6B,CAC7B;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"dc85268b8c45dc561be388271a988f7e569a8540"}
