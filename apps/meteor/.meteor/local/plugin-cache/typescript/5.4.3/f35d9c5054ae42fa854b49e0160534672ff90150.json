{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/teams/ConvertToChannelModal/ConvertToChannelModal.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/teams/ConvertToChannelModal/ConvertToChannelModal.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/teams/ConvertToChannelModal/ConvertToChannelModal.tsx","inputSourceMap":{"version":3,"file":"client/views/teams/ConvertToChannelModal/ConvertToChannelModal.tsx","sourceRoot":"","sources":["client/views/teams/ConvertToChannelModal/ConvertToChannelModal.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEvC,OAAO,oBAAoB,MAAM,uDAAuD,CAAC;AACzF,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AACjE,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,yBAAyB,MAAM,6BAA6B,CAAC;AAUpE,MAAM,qBAAqB,GAAG,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAA8B,EAAE,EAAE;IAC9G,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,eAAe,CAAC,2BAA2B,EAAE;QACrE,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KACpF,CAAC,CAAC;IAEH,IAAI,KAAK,KAAK,eAAe,CAAC,OAAO,EAAE,CAAC;QACvC,OAAO,CAAC,oBAAoB,CAAC,AAAD,EAAG,CAAC;IACjC,CAAC;IAED,OAAO,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAG,CAAC;AACvH,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["import type { IRoom, Serialized } from '@rocket.chat/core-typings';\nimport React, { useMemo } from 'react';\n\nimport GenericModalSkeleton from '../../../components/GenericModal/GenericModalSkeleton';\nimport { useEndpointData } from '../../../hooks/useEndpointData';\nimport { AsyncStatePhase } from '../../../lib/asyncState';\nimport BaseConvertToChannelModal from './BaseConvertToChannelModal';\n\ntype ConvertToChannelModalProps = {\n\tonClose: () => void;\n\tonCancel: () => void;\n\tonConfirm: () => Serialized<IRoom>[];\n\tteamId: string;\n\tuserId: string;\n};\n\nconst ConvertToChannelModal = ({ onClose, onCancel, onConfirm, teamId, userId }: ConvertToChannelModalProps) => {\n\tconst { value, phase } = useEndpointData('/v1/teams.listRoomsOfUser', {\n\t\tparams: useMemo(() => ({ teamId, userId, canUserDelete: 'true' }), [teamId, userId]),\n\t});\n\n\tif (phase === AsyncStatePhase.LOADING) {\n\t\treturn <GenericModalSkeleton />;\n\t}\n\n\treturn <BaseConvertToChannelModal onClose={onClose} onCancel={onCancel} onConfirm={onConfirm} rooms={value?.rooms} />;\n};\n\nexport default ConvertToChannelModal;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/teams/ConvertToChannelModal/ConvertToChannelModal.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/teams/ConvertToChannelModal/ConvertToChannelModal.tsx","inputSourceMap":{"version":3,"file":"client/views/teams/ConvertToChannelModal/ConvertToChannelModal.tsx","sourceRoot":"","sources":["client/views/teams/ConvertToChannelModal/ConvertToChannelModal.tsx"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEvC,OAAO,oBAAoB,MAAM,uDAAuD,CAAC;AACzF,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AACjE,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAC1D,OAAO,yBAAyB,MAAM,6BAA6B,CAAC;AAUpE,MAAM,qBAAqB,GAAG,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAA8B,EAAE,EAAE;IAC9G,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,eAAe,CAAC,2BAA2B,EAAE;QACrE,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KACpF,CAAC,CAAC;IAEH,IAAI,KAAK,KAAK,eAAe,CAAC,OAAO,EAAE,CAAC;QACvC,OAAO,CAAC,oBAAoB,CAAC,AAAD,EAAG,CAAC;IACjC,CAAC;IAED,OAAO,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAG,CAAC;AACvH,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["import type { IRoom, Serialized } from '@rocket.chat/core-typings';\nimport React, { useMemo } from 'react';\n\nimport GenericModalSkeleton from '../../../components/GenericModal/GenericModalSkeleton';\nimport { useEndpointData } from '../../../hooks/useEndpointData';\nimport { AsyncStatePhase } from '../../../lib/asyncState';\nimport BaseConvertToChannelModal from './BaseConvertToChannelModal';\n\ntype ConvertToChannelModalProps = {\n\tonClose: () => void;\n\tonCancel: () => void;\n\tonConfirm: () => Serialized<IRoom>[];\n\tteamId: string;\n\tuserId: string;\n};\n\nconst ConvertToChannelModal = ({ onClose, onCancel, onConfirm, teamId, userId }: ConvertToChannelModalProps) => {\n\tconst { value, phase } = useEndpointData('/v1/teams.listRoomsOfUser', {\n\t\tparams: useMemo(() => ({ teamId, userId, canUserDelete: 'true' }), [teamId, userId]),\n\t});\n\n\tif (phase === AsyncStatePhase.LOADING) {\n\t\treturn <GenericModalSkeleton />;\n\t}\n\n\treturn <BaseConvertToChannelModal onClose={onClose} onCancel={onCancel} onConfirm={onConfirm} rooms={value?.rooms} />;\n};\n\nexport default ConvertToChannelModal;\n"]}}},"code":"let React, useMemo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 0);\nlet GenericModalSkeleton;\nmodule.link(\"../../../components/GenericModal/GenericModalSkeleton\", {\n  default(v) {\n    GenericModalSkeleton = v;\n  }\n}, 1);\nlet useEndpointData;\nmodule.link(\"../../../hooks/useEndpointData\", {\n  useEndpointData(v) {\n    useEndpointData = v;\n  }\n}, 2);\nlet AsyncStatePhase;\nmodule.link(\"../../../lib/asyncState\", {\n  AsyncStatePhase(v) {\n    AsyncStatePhase = v;\n  }\n}, 3);\nlet BaseConvertToChannelModal;\nmodule.link(\"./BaseConvertToChannelModal\", {\n  default(v) {\n    BaseConvertToChannelModal = v;\n  }\n}, 4);\nconst ConvertToChannelModal = _ref => {\n  let {\n    onClose,\n    onCancel,\n    onConfirm,\n    teamId,\n    userId\n  } = _ref;\n  const {\n    value,\n    phase\n  } = useEndpointData('/v1/teams.listRoomsOfUser', {\n    params: useMemo(() => ({\n      teamId,\n      userId,\n      canUserDelete: 'true'\n    }), [teamId, userId])\n  });\n  if (phase === AsyncStatePhase.LOADING) {\n    return /*#__PURE__*/React.createElement(GenericModalSkeleton, null);\n  }\n  return /*#__PURE__*/React.createElement(BaseConvertToChannelModal, {\n    onClose: onClose,\n    onCancel: onCancel,\n    onConfirm: onConfirm,\n    rooms: value === null || value === void 0 ? void 0 : value.rooms\n  });\n};\nmodule.exportDefault(ConvertToChannelModal);","map":{"version":3,"names":["React","useMemo","module","link","default","v","GenericModalSkeleton","useEndpointData","AsyncStatePhase","BaseConvertToChannelModal","ConvertToChannelModal","_ref","onClose","onCancel","onConfirm","teamId","userId","value","phase","params","canUserDelete","LOADING","createElement","rooms","exportDefault"],"sources":["client/views/teams/ConvertToChannelModal/ConvertToChannelModal.tsx"],"sourcesContent":["import type { IRoom, Serialized } from '@rocket.chat/core-typings';\nimport React, { useMemo } from 'react';\n\nimport GenericModalSkeleton from '../../../components/GenericModal/GenericModalSkeleton';\nimport { useEndpointData } from '../../../hooks/useEndpointData';\nimport { AsyncStatePhase } from '../../../lib/asyncState';\nimport BaseConvertToChannelModal from './BaseConvertToChannelModal';\n\ntype ConvertToChannelModalProps = {\n\tonClose: () => void;\n\tonCancel: () => void;\n\tonConfirm: () => Serialized<IRoom>[];\n\tteamId: string;\n\tuserId: string;\n};\n\nconst ConvertToChannelModal = ({ onClose, onCancel, onConfirm, teamId, userId }: ConvertToChannelModalProps) => {\n\tconst { value, phase } = useEndpointData('/v1/teams.listRoomsOfUser', {\n\t\tparams: useMemo(() => ({ teamId, userId, canUserDelete: 'true' }), [teamId, userId]),\n\t});\n\n\tif (phase === AsyncStatePhase.LOADING) {\n\t\treturn <GenericModalSkeleton />;\n\t}\n\n\treturn <BaseConvertToChannelModal onClose={onClose} onCancel={onCancel} onConfirm={onConfirm} rooms={value?.rooms} />;\n};\n\nexport default ConvertToChannelModal;\n"],"mappings":"AACA,IAAAA,KAAO,EAAAC,OAAS;AAAAC,MAAO,CAAEC,IAAA,QAAM,EAAO;EAACC,QAAAC,CAAA;IAAAL,KAAA,GAAAK,CAAA;EAAA;EAAAJ,QAAAI,CAAA;IAAAJ,OAAA,GAAAI,CAAA;EAAA;AAAA;AAAA,IAAAC,oBAAA;AAAAJ,MAAA,CAAAC,IAAA;EAAAC,QAAAC,CAAA;IAAAC,oBAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,eAAA;AAAAL,MAAA,CAAAC,IAAA;EAAAI,gBAAAF,CAAA;IAAAE,eAAA,GAAAF,CAAA;EAAA;AAAA;AAAA,IAAAG,eAAA;AAAAN,MAAA,CAAAC,IAAA;EAAAK,gBAAAH,CAAA;IAAAG,eAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAI,yBAAA;AAAAP,MAAA,CAAAC,IAAA;EAAAC,QAAAC,CAAA;IAAAI,yBAAA,GAAAJ,CAAA;EAAA;AAAA;AAevC,MAAMK,qBAAqB,GAAGC,IAAA,IAAiF;EAAA,IAAhF;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,MAAM;IAAEC;EAAM,CAA8B,GAAAL,IAAA;EAC1G,MAAM;IAAEM,KAAK;IAAEC;EAAK,CAAE,GAAGX,eAAe,CAAC,2BAA2B,EAAE;IACrEY,MAAM,EAAElB,OAAO,CAAC,OAAO;MAAEc,MAAM;MAAEC,MAAM;MAAEI,aAAa,EAAE;IAAM,CAAE,CAAC,EAAE,CAACL,MAAM,EAAEC,MAAM,CAAC;GACnF,CAAC;EAEF,IAAIE,KAAK,KAAKV,eAAe,CAACa,OAAO,EAAE;IACtC,oBAAOrB,KAAA,CAAAsB,aAAA,CAAChB,oBAAoB,OAAG;EAChC;EAEA,oBAAON,KAAA,CAAAsB,aAAA,CAACb,yBAAyB;IAACG,OAAO,EAAEA,OAAQ;IAACC,QAAQ,EAAEA,QAAS;IAACC,SAAS,EAAEA,SAAU;IAACS,KAAK,EAAEN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEM;EAAM,EAAG;AACtH,CAAC;AAzBDrB,MAAA,CAAOsB,aAAS,CA2BDd,qBA3BQ,CAAE","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f35d9c5054ae42fa854b49e0160534672ff90150"}
