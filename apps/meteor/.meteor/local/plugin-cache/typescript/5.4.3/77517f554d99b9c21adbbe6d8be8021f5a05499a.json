{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser/saveNewUser.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/saveUser/saveNewUser.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser/saveNewUser.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/saveUser/saveNewUser.ts","sourceRoot":"","sources":["app/lib/server/functions/saveUser/saveNewUser.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DeepPartial, DeepWritable, IUser, RequiredField } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport Gravatar from 'gravatar';\nimport type { UpdateFilter } from 'mongodb';\n\nimport { getNewUserRoles } from '../../../../../server/services/user/lib/getNewUserRoles';\nimport { settings } from '../../../../settings/server';\nimport { notifyOnUserChangeById } from '../../lib/notifyListener';\nimport { validateEmailDomain } from '../../lib/validateEmailDomain';\nimport { setUserAvatar } from '../setUserAvatar';\nimport { handleBio } from './handleBio';\nimport { handleNickname } from './handleNickname';\nimport type { SaveUserData } from './saveUser';\nimport { sendPasswordEmail, sendWelcomeEmail } from './sendUserEmail';\n\nexport const saveNewUser = async function (userData: SaveUserData, sendPassword: boolean) {\n\tawait validateEmailDomain(userData.email);\n\n\tconst roles = (!!userData.roles && userData.roles.length > 0 && userData.roles) || getNewUserRoles();\n\tconst isGuest = roles && roles.length === 1 && roles.includes('guest');\n\n\t// insert user\n\tconst createUser: Record<string, any> = {\n\t\tusername: userData.username,\n\t\tpassword: userData.password,\n\t\tjoinDefaultChannels: userData.joinDefaultChannels,\n\t\tisGuest,\n\t\tglobalRoles: roles,\n\t\tskipNewUserRolesSetting: true,\n\t};\n\tif (userData.email) {\n\t\tcreateUser.email = userData.email;\n\t}\n\n\tconst _id = await Accounts.createUserAsync(createUser);\n\n\tconst updateUser: RequiredField<DeepWritable<UpdateFilter<DeepPartial<IUser>>>, '$set'> = {\n\t\t$set: {\n\t\t\t...(typeof userData.name !== 'undefined' && { name: userData.name }),\n\t\t\tsettings: userData.settings || {},\n\t\t},\n\t};\n\n\tif (typeof userData.requirePasswordChange !== 'undefined') {\n\t\tupdateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tupdateUser.$set['emails.0.verified'] = userData.verified;\n\t}\n\n\thandleBio(updateUser, userData.bio);\n\thandleNickname(updateUser, userData.nickname);\n\n\tawait Users.updateOne({ _id }, updateUser as UpdateFilter<IUser>);\n\n\tif (userData.sendWelcomeEmail) {\n\t\tawait sendWelcomeEmail(userData);\n\t}\n\n\tif (sendPassword) {\n\t\tawait sendPasswordEmail(userData);\n\t}\n\n\tuserData._id = _id;\n\n\tif (settings.get('Accounts_SetDefaultAvatar') === true && userData.email) {\n\t\tconst gravatarUrl = Gravatar.url(userData.email, {\n\t\t\tdefault: '404',\n\t\t\tsize: '200',\n\t\t\tprotocol: 'https',\n\t\t});\n\n\t\ttry {\n\t\t\tawait setUserAvatar({ ...userData, _id }, gravatarUrl, '', 'url');\n\t\t} catch (e) {\n\t\t\t// Ignore this error for now, as it not being successful isn't bad\n\t\t}\n\t}\n\n\tvoid notifyOnUserChangeById({ clientAction: 'inserted', id: _id });\n\n\treturn _id;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/saveUser/saveNewUser.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/saveUser/saveNewUser.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/saveUser/saveNewUser.ts","sourceRoot":"","sources":["app/lib/server/functions/saveUser/saveNewUser.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DeepPartial, DeepWritable, IUser, RequiredField } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport Gravatar from 'gravatar';\nimport type { UpdateFilter } from 'mongodb';\n\nimport { getNewUserRoles } from '../../../../../server/services/user/lib/getNewUserRoles';\nimport { settings } from '../../../../settings/server';\nimport { notifyOnUserChangeById } from '../../lib/notifyListener';\nimport { validateEmailDomain } from '../../lib/validateEmailDomain';\nimport { setUserAvatar } from '../setUserAvatar';\nimport { handleBio } from './handleBio';\nimport { handleNickname } from './handleNickname';\nimport type { SaveUserData } from './saveUser';\nimport { sendPasswordEmail, sendWelcomeEmail } from './sendUserEmail';\n\nexport const saveNewUser = async function (userData: SaveUserData, sendPassword: boolean) {\n\tawait validateEmailDomain(userData.email);\n\n\tconst roles = (!!userData.roles && userData.roles.length > 0 && userData.roles) || getNewUserRoles();\n\tconst isGuest = roles && roles.length === 1 && roles.includes('guest');\n\n\t// insert user\n\tconst createUser: Record<string, any> = {\n\t\tusername: userData.username,\n\t\tpassword: userData.password,\n\t\tjoinDefaultChannels: userData.joinDefaultChannels,\n\t\tisGuest,\n\t\tglobalRoles: roles,\n\t\tskipNewUserRolesSetting: true,\n\t};\n\tif (userData.email) {\n\t\tcreateUser.email = userData.email;\n\t}\n\n\tconst _id = await Accounts.createUserAsync(createUser);\n\n\tconst updateUser: RequiredField<DeepWritable<UpdateFilter<DeepPartial<IUser>>>, '$set'> = {\n\t\t$set: {\n\t\t\t...(typeof userData.name !== 'undefined' && { name: userData.name }),\n\t\t\tsettings: userData.settings || {},\n\t\t},\n\t};\n\n\tif (typeof userData.requirePasswordChange !== 'undefined') {\n\t\tupdateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tupdateUser.$set['emails.0.verified'] = userData.verified;\n\t}\n\n\thandleBio(updateUser, userData.bio);\n\thandleNickname(updateUser, userData.nickname);\n\n\tawait Users.updateOne({ _id }, updateUser as UpdateFilter<IUser>);\n\n\tif (userData.sendWelcomeEmail) {\n\t\tawait sendWelcomeEmail(userData);\n\t}\n\n\tif (sendPassword) {\n\t\tawait sendPasswordEmail(userData);\n\t}\n\n\tuserData._id = _id;\n\n\tif (settings.get('Accounts_SetDefaultAvatar') === true && userData.email) {\n\t\tconst gravatarUrl = Gravatar.url(userData.email, {\n\t\t\tdefault: '404',\n\t\t\tsize: '200',\n\t\t\tprotocol: 'https',\n\t\t});\n\n\t\ttry {\n\t\t\tawait setUserAvatar({ ...userData, _id }, gravatarUrl, '', 'url');\n\t\t} catch (e) {\n\t\t\t// Ignore this error for now, as it not being successful isn't bad\n\t\t}\n\t}\n\n\tvoid notifyOnUserChangeById({ clientAction: 'inserted', id: _id });\n\n\treturn _id;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      saveNewUser: () => saveNewUser\n    });\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let Gravatar;\n    module.link(\"gravatar\", {\n      default(v) {\n        Gravatar = v;\n      }\n    }, 1);\n    let getNewUserRoles;\n    module.link(\"../../../../../server/services/user/lib/getNewUserRoles\", {\n      getNewUserRoles(v) {\n        getNewUserRoles = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    let notifyOnUserChangeById;\n    module.link(\"../../lib/notifyListener\", {\n      notifyOnUserChangeById(v) {\n        notifyOnUserChangeById = v;\n      }\n    }, 4);\n    let validateEmailDomain;\n    module.link(\"../../lib/validateEmailDomain\", {\n      validateEmailDomain(v) {\n        validateEmailDomain = v;\n      }\n    }, 5);\n    let setUserAvatar;\n    module.link(\"../setUserAvatar\", {\n      setUserAvatar(v) {\n        setUserAvatar = v;\n      }\n    }, 6);\n    let handleBio;\n    module.link(\"./handleBio\", {\n      handleBio(v) {\n        handleBio = v;\n      }\n    }, 7);\n    let handleNickname;\n    module.link(\"./handleNickname\", {\n      handleNickname(v) {\n        handleNickname = v;\n      }\n    }, 8);\n    let sendPasswordEmail, sendWelcomeEmail;\n    module.link(\"./sendUserEmail\", {\n      sendPasswordEmail(v) {\n        sendPasswordEmail = v;\n      },\n      sendWelcomeEmail(v) {\n        sendWelcomeEmail = v;\n      }\n    }, 9);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const saveNewUser = async function (userData, sendPassword) {\n      await validateEmailDomain(userData.email);\n      const roles = !!userData.roles && userData.roles.length > 0 && userData.roles || getNewUserRoles();\n      const isGuest = roles && roles.length === 1 && roles.includes('guest');\n      // insert user\n      const createUser = {\n        username: userData.username,\n        password: userData.password,\n        joinDefaultChannels: userData.joinDefaultChannels,\n        isGuest,\n        globalRoles: roles,\n        skipNewUserRolesSetting: true\n      };\n      if (userData.email) {\n        createUser.email = userData.email;\n      }\n      const _id = await Accounts.createUserAsync(createUser);\n      const updateUser = {\n        $set: _objectSpread(_objectSpread({}, typeof userData.name !== 'undefined' && {\n          name: userData.name\n        }), {}, {\n          settings: userData.settings || {}\n        })\n      };\n      if (typeof userData.requirePasswordChange !== 'undefined') {\n        updateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n      }\n      if (typeof userData.verified === 'boolean') {\n        updateUser.$set['emails.0.verified'] = userData.verified;\n      }\n      handleBio(updateUser, userData.bio);\n      handleNickname(updateUser, userData.nickname);\n      await Users.updateOne({\n        _id\n      }, updateUser);\n      if (userData.sendWelcomeEmail) {\n        await sendWelcomeEmail(userData);\n      }\n      if (sendPassword) {\n        await sendPasswordEmail(userData);\n      }\n      userData._id = _id;\n      if (settings.get('Accounts_SetDefaultAvatar') === true && userData.email) {\n        const gravatarUrl = Gravatar.url(userData.email, {\n          default: '404',\n          size: '200',\n          protocol: 'https'\n        });\n        try {\n          await setUserAvatar(_objectSpread(_objectSpread({}, userData), {}, {\n            _id\n          }), gravatarUrl, '', 'url');\n        } catch (e) {\n          // Ignore this error for now, as it not being successful isn't bad\n        }\n      }\n      void notifyOnUserChangeById({\n        clientAction: 'inserted',\n        id: _id\n      });\n      return _id;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","saveNewUser","Users","Gravatar","getNewUserRoles","settings","notifyOnUserChangeById","validateEmailDomain","setUserAvatar","handleBio","handleNickname","sendPasswordEmail","sendWelcomeEmail","__reifyWaitForDeps__","userData","sendPassword","email","roles","length","isGuest","includes","createUser","username","password","joinDefaultChannels","globalRoles","skipNewUserRolesSetting","_id","Accounts","createUserAsync","updateUser","$set","name","requirePasswordChange","verified","bio","nickname","updateOne","get","gravatarUrl","url","size","protocol","e","clientAction","id","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/saveUser/saveNewUser.ts"],"sourcesContent":["import type { DeepPartial, DeepWritable, IUser, RequiredField } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport Gravatar from 'gravatar';\nimport type { UpdateFilter } from 'mongodb';\n\nimport { getNewUserRoles } from '../../../../../server/services/user/lib/getNewUserRoles';\nimport { settings } from '../../../../settings/server';\nimport { notifyOnUserChangeById } from '../../lib/notifyListener';\nimport { validateEmailDomain } from '../../lib/validateEmailDomain';\nimport { setUserAvatar } from '../setUserAvatar';\nimport { handleBio } from './handleBio';\nimport { handleNickname } from './handleNickname';\nimport type { SaveUserData } from './saveUser';\nimport { sendPasswordEmail, sendWelcomeEmail } from './sendUserEmail';\n\nexport const saveNewUser = async function (userData: SaveUserData, sendPassword: boolean) {\n\tawait validateEmailDomain(userData.email);\n\n\tconst roles = (!!userData.roles && userData.roles.length > 0 && userData.roles) || getNewUserRoles();\n\tconst isGuest = roles && roles.length === 1 && roles.includes('guest');\n\n\t// insert user\n\tconst createUser: Record<string, any> = {\n\t\tusername: userData.username,\n\t\tpassword: userData.password,\n\t\tjoinDefaultChannels: userData.joinDefaultChannels,\n\t\tisGuest,\n\t\tglobalRoles: roles,\n\t\tskipNewUserRolesSetting: true,\n\t};\n\tif (userData.email) {\n\t\tcreateUser.email = userData.email;\n\t}\n\n\tconst _id = await Accounts.createUserAsync(createUser);\n\n\tconst updateUser: RequiredField<DeepWritable<UpdateFilter<DeepPartial<IUser>>>, '$set'> = {\n\t\t$set: {\n\t\t\t...(typeof userData.name !== 'undefined' && { name: userData.name }),\n\t\t\tsettings: userData.settings || {},\n\t\t},\n\t};\n\n\tif (typeof userData.requirePasswordChange !== 'undefined') {\n\t\tupdateUser.$set.requirePasswordChange = userData.requirePasswordChange;\n\t}\n\n\tif (typeof userData.verified === 'boolean') {\n\t\tupdateUser.$set['emails.0.verified'] = userData.verified;\n\t}\n\n\thandleBio(updateUser, userData.bio);\n\thandleNickname(updateUser, userData.nickname);\n\n\tawait Users.updateOne({ _id }, updateUser as UpdateFilter<IUser>);\n\n\tif (userData.sendWelcomeEmail) {\n\t\tawait sendWelcomeEmail(userData);\n\t}\n\n\tif (sendPassword) {\n\t\tawait sendPasswordEmail(userData);\n\t}\n\n\tuserData._id = _id;\n\n\tif (settings.get('Accounts_SetDefaultAvatar') === true && userData.email) {\n\t\tconst gravatarUrl = Gravatar.url(userData.email, {\n\t\t\tdefault: '404',\n\t\t\tsize: '200',\n\t\t\tprotocol: 'https',\n\t\t});\n\n\t\ttry {\n\t\t\tawait setUserAvatar({ ...userData, _id }, gravatarUrl, '', 'url');\n\t\t} catch (e) {\n\t\t\t// Ignore this error for now, as it not being successful isn't bad\n\t\t}\n\t}\n\n\tvoid notifyOnUserChangeById({ clientAction: 'inserted', id: _id });\n\n\treturn _id;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"77517f554d99b9c21adbbe6d8be8021f5a05499a"}
