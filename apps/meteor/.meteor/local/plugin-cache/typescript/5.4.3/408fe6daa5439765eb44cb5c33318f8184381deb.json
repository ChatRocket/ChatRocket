{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/push/server/apn.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/push/server/apn.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/push/server/apn.ts","inputSourceMap":{"version":3,"file":"app/push/server/apn.ts","sourceRoot":"","sources":["app/push/server/apn.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAppsTokens, RequiredField } from '@rocket.chat/core-typings';\nimport apn from 'apn';\nimport EJSON from 'ejson';\n\nimport type { PushOptions, PendingPushNotification } from './definition';\nimport { logger } from './logger';\n\nlet apnConnection: apn.Provider | undefined;\n\ndeclare module 'apn' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Notification {\n\t\tsetContentAvailable: (value: boolean | 1 | 0) => void;\n\t\tset category(_value: string | undefined);\n\t\tset body(_value: string);\n\t\tset title(_value: string);\n\t}\n}\n\nexport const sendAPN = ({\n\tuserToken,\n\tnotification,\n\t_removeToken,\n}: {\n\tuserToken: string;\n\tnotification: PendingPushNotification & { topic: string };\n\t_removeToken: (token: IAppsTokens['token']) => void;\n}) => {\n\tif (!apnConnection) {\n\t\tthrow new Error('Apn Connection not initialized.');\n\t}\n\n\tconst priority = notification.priority || notification.priority === 0 ? notification.priority : 10;\n\n\tconst note = new apn.Notification();\n\n\tnote.expiry = Math.floor(Date.now() / 1000) + 3600; // Expires 1 hour from now.\n\tif (notification.badge !== undefined) {\n\t\tnote.badge = notification.badge;\n\t}\n\n\tif (notification.sound !== undefined) {\n\t\tnote.sound = notification.sound;\n\t}\n\n\tif (notification.contentAvailable != null) {\n\t\tnote.setContentAvailable(notification.contentAvailable);\n\t}\n\n\t// adds category support for iOS8 custom actions as described here:\n\t// https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/\n\t// RemoteNotificationsPG/Chapters/IPhoneOSClientImp.html#//apple_ref/doc/uid/TP40008194-CH103-SW36\n\tnote.category = notification.apn?.category;\n\n\tnote.body = notification.text;\n\tnote.title = notification.title;\n\n\tif (notification.notId != null) {\n\t\tnote.threadId = String(notification.notId);\n\t}\n\n\t// Allow the user to set payload data\n\tnote.payload = notification.payload ? { ejson: EJSON.stringify(notification.payload) } : {};\n\n\tnote.payload.messageFrom = notification.from;\n\tnote.priority = priority;\n\n\tnote.topic = notification.topic;\n\tnote.mutableContent = true;\n\n\tvoid apnConnection.send(note, userToken).then((response) => {\n\t\tresponse.failed.forEach((failure) => {\n\t\t\tlogger.debug(`Got error code ${failure.status} for token ${userToken}`);\n\n\t\t\tif (['400', '410'].includes(failure.status ?? '')) {\n\t\t\t\tlogger.debug(`Removing token ${userToken}`);\n\t\t\t\t_removeToken({\n\t\t\t\t\tapn: userToken,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n};\n\nexport const initAPN = ({ options, absoluteUrl }: { options: RequiredField<PushOptions, 'apn'>; absoluteUrl: string }) => {\n\tlogger.debug('APN configured');\n\n\tif (options.apn.gateway) {\n\t\t// We check the apn gateway i the options, we could risk shipping\n\t\t// server into production while using the production configuration.\n\t\t// On the other hand we could be in development but using the production\n\t\t// configuration. And finally we could have configured an unknown apn\n\t\t// gateway (this could change in the future - but a warning about typos\n\t\t// can save hours of debugging)\n\t\t//\n\t\t// Warn about gateway configurations - it's more a guide\n\n\t\tif (options.apn.gateway === 'gateway.sandbox.push.apple.com') {\n\t\t\t// Using the development sandbox\n\t\t\tlogger.warn('WARNING: Push APN is in development mode');\n\t\t} else if (options.apn.gateway === 'gateway.push.apple.com') {\n\t\t\t// In production - but warn if we are running on localhost\n\t\t\tif (/http:\\/\\/localhost/.test(absoluteUrl)) {\n\t\t\t\tlogger.warn('WARNING: Push APN is configured to production mode - but server is running from localhost');\n\t\t\t}\n\t\t} else {\n\t\t\t// Warn about gateways we dont know about\n\t\t\tlogger.warn(`WARNING: Push APN unknown gateway \"${options.apn.gateway}\"`);\n\t\t}\n\t} else if (options.production) {\n\t\tif (/http:\\/\\/localhost/.test(absoluteUrl)) {\n\t\t\tlogger.warn('WARNING: Push APN is configured to production mode - but server is running from localhost');\n\t\t}\n\t} else {\n\t\tlogger.warn('WARNING: Push APN is in development mode');\n\t}\n\n\t// Check certificate data\n\tif (!options.apn.cert?.length) {\n\t\tlogger.error('ERROR: Push server could not find cert');\n\t}\n\n\t// Check key data\n\tif (!options.apn.key?.length) {\n\t\tlogger.error('ERROR: Push server could not find key');\n\t}\n\n\t// Rig apn connection\n\ttry {\n\t\tapnConnection = new apn.Provider(options.apn);\n\t} catch (err) {\n\t\tlogger.error({ msg: 'Error trying to initialize APN', err });\n\t}\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/push/server/apn.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/push/server/apn.ts","inputSourceMap":{"version":3,"file":"app/push/server/apn.ts","sourceRoot":"","sources":["app/push/server/apn.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAppsTokens, RequiredField } from '@rocket.chat/core-typings';\nimport apn from 'apn';\nimport EJSON from 'ejson';\n\nimport type { PushOptions, PendingPushNotification } from './definition';\nimport { logger } from './logger';\n\nlet apnConnection: apn.Provider | undefined;\n\ndeclare module 'apn' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Notification {\n\t\tsetContentAvailable: (value: boolean | 1 | 0) => void;\n\t\tset category(_value: string | undefined);\n\t\tset body(_value: string);\n\t\tset title(_value: string);\n\t}\n}\n\nexport const sendAPN = ({\n\tuserToken,\n\tnotification,\n\t_removeToken,\n}: {\n\tuserToken: string;\n\tnotification: PendingPushNotification & { topic: string };\n\t_removeToken: (token: IAppsTokens['token']) => void;\n}) => {\n\tif (!apnConnection) {\n\t\tthrow new Error('Apn Connection not initialized.');\n\t}\n\n\tconst priority = notification.priority || notification.priority === 0 ? notification.priority : 10;\n\n\tconst note = new apn.Notification();\n\n\tnote.expiry = Math.floor(Date.now() / 1000) + 3600; // Expires 1 hour from now.\n\tif (notification.badge !== undefined) {\n\t\tnote.badge = notification.badge;\n\t}\n\n\tif (notification.sound !== undefined) {\n\t\tnote.sound = notification.sound;\n\t}\n\n\tif (notification.contentAvailable != null) {\n\t\tnote.setContentAvailable(notification.contentAvailable);\n\t}\n\n\t// adds category support for iOS8 custom actions as described here:\n\t// https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/\n\t// RemoteNotificationsPG/Chapters/IPhoneOSClientImp.html#//apple_ref/doc/uid/TP40008194-CH103-SW36\n\tnote.category = notification.apn?.category;\n\n\tnote.body = notification.text;\n\tnote.title = notification.title;\n\n\tif (notification.notId != null) {\n\t\tnote.threadId = String(notification.notId);\n\t}\n\n\t// Allow the user to set payload data\n\tnote.payload = notification.payload ? { ejson: EJSON.stringify(notification.payload) } : {};\n\n\tnote.payload.messageFrom = notification.from;\n\tnote.priority = priority;\n\n\tnote.topic = notification.topic;\n\tnote.mutableContent = true;\n\n\tvoid apnConnection.send(note, userToken).then((response) => {\n\t\tresponse.failed.forEach((failure) => {\n\t\t\tlogger.debug(`Got error code ${failure.status} for token ${userToken}`);\n\n\t\t\tif (['400', '410'].includes(failure.status ?? '')) {\n\t\t\t\tlogger.debug(`Removing token ${userToken}`);\n\t\t\t\t_removeToken({\n\t\t\t\t\tapn: userToken,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n};\n\nexport const initAPN = ({ options, absoluteUrl }: { options: RequiredField<PushOptions, 'apn'>; absoluteUrl: string }) => {\n\tlogger.debug('APN configured');\n\n\tif (options.apn.gateway) {\n\t\t// We check the apn gateway i the options, we could risk shipping\n\t\t// server into production while using the production configuration.\n\t\t// On the other hand we could be in development but using the production\n\t\t// configuration. And finally we could have configured an unknown apn\n\t\t// gateway (this could change in the future - but a warning about typos\n\t\t// can save hours of debugging)\n\t\t//\n\t\t// Warn about gateway configurations - it's more a guide\n\n\t\tif (options.apn.gateway === 'gateway.sandbox.push.apple.com') {\n\t\t\t// Using the development sandbox\n\t\t\tlogger.warn('WARNING: Push APN is in development mode');\n\t\t} else if (options.apn.gateway === 'gateway.push.apple.com') {\n\t\t\t// In production - but warn if we are running on localhost\n\t\t\tif (/http:\\/\\/localhost/.test(absoluteUrl)) {\n\t\t\t\tlogger.warn('WARNING: Push APN is configured to production mode - but server is running from localhost');\n\t\t\t}\n\t\t} else {\n\t\t\t// Warn about gateways we dont know about\n\t\t\tlogger.warn(`WARNING: Push APN unknown gateway \"${options.apn.gateway}\"`);\n\t\t}\n\t} else if (options.production) {\n\t\tif (/http:\\/\\/localhost/.test(absoluteUrl)) {\n\t\t\tlogger.warn('WARNING: Push APN is configured to production mode - but server is running from localhost');\n\t\t}\n\t} else {\n\t\tlogger.warn('WARNING: Push APN is in development mode');\n\t}\n\n\t// Check certificate data\n\tif (!options.apn.cert?.length) {\n\t\tlogger.error('ERROR: Push server could not find cert');\n\t}\n\n\t// Check key data\n\tif (!options.apn.key?.length) {\n\t\tlogger.error('ERROR: Push server could not find key');\n\t}\n\n\t// Rig apn connection\n\ttry {\n\t\tapnConnection = new apn.Provider(options.apn);\n\t} catch (err) {\n\t\tlogger.error({ msg: 'Error trying to initialize APN', err });\n\t}\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      sendAPN: () => sendAPN,\n      initAPN: () => initAPN\n    });\n    let apn;\n    module.link(\"apn\", {\n      default(v) {\n        apn = v;\n      }\n    }, 0);\n    let EJSON;\n    module.link(\"ejson\", {\n      default(v) {\n        EJSON = v;\n      }\n    }, 1);\n    let logger;\n    module.link(\"./logger\", {\n      logger(v) {\n        logger = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    let apnConnection;\n    const sendAPN = _ref => {\n      var _notification$apn;\n      let {\n        userToken,\n        notification,\n        _removeToken\n      } = _ref;\n      if (!apnConnection) {\n        throw new Error('Apn Connection not initialized.');\n      }\n      const priority = notification.priority || notification.priority === 0 ? notification.priority : 10;\n      const note = new apn.Notification();\n      note.expiry = Math.floor(Date.now() / 1000) + 3600; // Expires 1 hour from now.\n      if (notification.badge !== undefined) {\n        note.badge = notification.badge;\n      }\n      if (notification.sound !== undefined) {\n        note.sound = notification.sound;\n      }\n      if (notification.contentAvailable != null) {\n        note.setContentAvailable(notification.contentAvailable);\n      }\n      // adds category support for iOS8 custom actions as described here:\n      // https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/\n      // RemoteNotificationsPG/Chapters/IPhoneOSClientImp.html#//apple_ref/doc/uid/TP40008194-CH103-SW36\n      note.category = (_notification$apn = notification.apn) === null || _notification$apn === void 0 ? void 0 : _notification$apn.category;\n      note.body = notification.text;\n      note.title = notification.title;\n      if (notification.notId != null) {\n        note.threadId = String(notification.notId);\n      }\n      // Allow the user to set payload data\n      note.payload = notification.payload ? {\n        ejson: EJSON.stringify(notification.payload)\n      } : {};\n      note.payload.messageFrom = notification.from;\n      note.priority = priority;\n      note.topic = notification.topic;\n      note.mutableContent = true;\n      void apnConnection.send(note, userToken).then(response => {\n        response.failed.forEach(failure => {\n          var _failure$status;\n          logger.debug(\"Got error code \".concat(failure.status, \" for token \").concat(userToken));\n          if (['400', '410'].includes((_failure$status = failure.status) !== null && _failure$status !== void 0 ? _failure$status : '')) {\n            logger.debug(\"Removing token \".concat(userToken));\n            _removeToken({\n              apn: userToken\n            });\n          }\n        });\n      });\n    };\n    const initAPN = _ref2 => {\n      var _options$apn$cert, _options$apn$key;\n      let {\n        options,\n        absoluteUrl\n      } = _ref2;\n      logger.debug('APN configured');\n      if (options.apn.gateway) {\n        // We check the apn gateway i the options, we could risk shipping\n        // server into production while using the production configuration.\n        // On the other hand we could be in development but using the production\n        // configuration. And finally we could have configured an unknown apn\n        // gateway (this could change in the future - but a warning about typos\n        // can save hours of debugging)\n        //\n        // Warn about gateway configurations - it's more a guide\n        if (options.apn.gateway === 'gateway.sandbox.push.apple.com') {\n          // Using the development sandbox\n          logger.warn('WARNING: Push APN is in development mode');\n        } else if (options.apn.gateway === 'gateway.push.apple.com') {\n          // In production - but warn if we are running on localhost\n          if (/http:\\/\\/localhost/.test(absoluteUrl)) {\n            logger.warn('WARNING: Push APN is configured to production mode - but server is running from localhost');\n          }\n        } else {\n          // Warn about gateways we dont know about\n          logger.warn(\"WARNING: Push APN unknown gateway \\\"\".concat(options.apn.gateway, \"\\\"\"));\n        }\n      } else if (options.production) {\n        if (/http:\\/\\/localhost/.test(absoluteUrl)) {\n          logger.warn('WARNING: Push APN is configured to production mode - but server is running from localhost');\n        }\n      } else {\n        logger.warn('WARNING: Push APN is in development mode');\n      }\n      // Check certificate data\n      if (!((_options$apn$cert = options.apn.cert) !== null && _options$apn$cert !== void 0 && _options$apn$cert.length)) {\n        logger.error('ERROR: Push server could not find cert');\n      }\n      // Check key data\n      if (!((_options$apn$key = options.apn.key) !== null && _options$apn$key !== void 0 && _options$apn$key.length)) {\n        logger.error('ERROR: Push server could not find key');\n      }\n      // Rig apn connection\n      try {\n        apnConnection = new apn.Provider(options.apn);\n      } catch (err) {\n        logger.error({\n          msg: 'Error trying to initialize APN',\n          err\n        });\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","sendAPN","initAPN","apn","link","default","v","EJSON","logger","__reifyWaitForDeps__","apnConnection","_ref","_notification$apn","userToken","notification","_removeToken","Error","priority","note","Notification","expiry","Math","floor","Date","now","badge","undefined","sound","contentAvailable","setContentAvailable","category","body","text","title","notId","threadId","String","payload","ejson","stringify","messageFrom","from","topic","mutableContent","send","then","response","failed","forEach","failure","_failure$status","debug","concat","status","includes","_ref2","_options$apn$cert","_options$apn$key","options","absoluteUrl","gateway","warn","test","production","cert","length","error","key","Provider","err","msg","__reify_async_result__","_reifyError","self","async"],"sources":["app/push/server/apn.ts"],"sourcesContent":["import type { IAppsTokens, RequiredField } from '@rocket.chat/core-typings';\nimport apn from 'apn';\nimport EJSON from 'ejson';\n\nimport type { PushOptions, PendingPushNotification } from './definition';\nimport { logger } from './logger';\n\nlet apnConnection: apn.Provider | undefined;\n\ndeclare module 'apn' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Notification {\n\t\tsetContentAvailable: (value: boolean | 1 | 0) => void;\n\t\tset category(_value: string | undefined);\n\t\tset body(_value: string);\n\t\tset title(_value: string);\n\t}\n}\n\nexport const sendAPN = ({\n\tuserToken,\n\tnotification,\n\t_removeToken,\n}: {\n\tuserToken: string;\n\tnotification: PendingPushNotification & { topic: string };\n\t_removeToken: (token: IAppsTokens['token']) => void;\n}) => {\n\tif (!apnConnection) {\n\t\tthrow new Error('Apn Connection not initialized.');\n\t}\n\n\tconst priority = notification.priority || notification.priority === 0 ? notification.priority : 10;\n\n\tconst note = new apn.Notification();\n\n\tnote.expiry = Math.floor(Date.now() / 1000) + 3600; // Expires 1 hour from now.\n\tif (notification.badge !== undefined) {\n\t\tnote.badge = notification.badge;\n\t}\n\n\tif (notification.sound !== undefined) {\n\t\tnote.sound = notification.sound;\n\t}\n\n\tif (notification.contentAvailable != null) {\n\t\tnote.setContentAvailable(notification.contentAvailable);\n\t}\n\n\t// adds category support for iOS8 custom actions as described here:\n\t// https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/\n\t// RemoteNotificationsPG/Chapters/IPhoneOSClientImp.html#//apple_ref/doc/uid/TP40008194-CH103-SW36\n\tnote.category = notification.apn?.category;\n\n\tnote.body = notification.text;\n\tnote.title = notification.title;\n\n\tif (notification.notId != null) {\n\t\tnote.threadId = String(notification.notId);\n\t}\n\n\t// Allow the user to set payload data\n\tnote.payload = notification.payload ? { ejson: EJSON.stringify(notification.payload) } : {};\n\n\tnote.payload.messageFrom = notification.from;\n\tnote.priority = priority;\n\n\tnote.topic = notification.topic;\n\tnote.mutableContent = true;\n\n\tvoid apnConnection.send(note, userToken).then((response) => {\n\t\tresponse.failed.forEach((failure) => {\n\t\t\tlogger.debug(`Got error code ${failure.status} for token ${userToken}`);\n\n\t\t\tif (['400', '410'].includes(failure.status ?? '')) {\n\t\t\t\tlogger.debug(`Removing token ${userToken}`);\n\t\t\t\t_removeToken({\n\t\t\t\t\tapn: userToken,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n};\n\nexport const initAPN = ({ options, absoluteUrl }: { options: RequiredField<PushOptions, 'apn'>; absoluteUrl: string }) => {\n\tlogger.debug('APN configured');\n\n\tif (options.apn.gateway) {\n\t\t// We check the apn gateway i the options, we could risk shipping\n\t\t// server into production while using the production configuration.\n\t\t// On the other hand we could be in development but using the production\n\t\t// configuration. And finally we could have configured an unknown apn\n\t\t// gateway (this could change in the future - but a warning about typos\n\t\t// can save hours of debugging)\n\t\t//\n\t\t// Warn about gateway configurations - it's more a guide\n\n\t\tif (options.apn.gateway === 'gateway.sandbox.push.apple.com') {\n\t\t\t// Using the development sandbox\n\t\t\tlogger.warn('WARNING: Push APN is in development mode');\n\t\t} else if (options.apn.gateway === 'gateway.push.apple.com') {\n\t\t\t// In production - but warn if we are running on localhost\n\t\t\tif (/http:\\/\\/localhost/.test(absoluteUrl)) {\n\t\t\t\tlogger.warn('WARNING: Push APN is configured to production mode - but server is running from localhost');\n\t\t\t}\n\t\t} else {\n\t\t\t// Warn about gateways we dont know about\n\t\t\tlogger.warn(`WARNING: Push APN unknown gateway \"${options.apn.gateway}\"`);\n\t\t}\n\t} else if (options.production) {\n\t\tif (/http:\\/\\/localhost/.test(absoluteUrl)) {\n\t\t\tlogger.warn('WARNING: Push APN is configured to production mode - but server is running from localhost');\n\t\t}\n\t} else {\n\t\tlogger.warn('WARNING: Push APN is in development mode');\n\t}\n\n\t// Check certificate data\n\tif (!options.apn.cert?.length) {\n\t\tlogger.error('ERROR: Push server could not find cert');\n\t}\n\n\t// Check key data\n\tif (!options.apn.key?.length) {\n\t\tlogger.error('ERROR: Push server could not find key');\n\t}\n\n\t// Rig apn connection\n\ttry {\n\t\tapnConnection = new apn.Provider(options.apn);\n\t} catch (err) {\n\t\tlogger.error({ msg: 'Error trying to initialize APN', err });\n\t}\n};\n"],"mappings":";;;IACAA,MAAA,CAAOC,MAAG;MAAAC,OAAY,EAAAA,CAAA,KAAAA,OAAA;MAAAC,OAAA,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,GAAA;IAAAJ,MAAA,CAAAK,IAAA;MAAAC,QAAAC,CAAA;QAAAH,GAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA;IAAAR,MAAA,CAAAK,IAAA;MAAAC,QAAAC,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,MAAA;IAAAT,MAAA,CAAAK,IAAA;MAAAI,OAAAF,CAAA;QAAAE,MAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,oBAAA,WAAAA,oBAAA;IAMtB,IAAIC,aAAuC;IAYpC,MAAMT,OAAO,GAAGU,IAAA,IAQlB;MAAA,IAAAC,iBAAA;MAAA,IARmB;QACvBC,SAAS;QACTC,YAAY;QACZC;MAAY,CAKZ,GAAAJ,IAAA;MACA,IAAI,CAACD,aAAa,EAAE;QACnB,MAAM,IAAIM,KAAK,CAAC,iCAAiC,CAAC;MACnD;MAEA,MAAMC,QAAQ,GAAGH,YAAY,CAACG,QAAQ,IAAIH,YAAY,CAACG,QAAQ,KAAK,CAAC,GAAGH,YAAY,CAACG,QAAQ,GAAG,EAAE;MAElG,MAAMC,IAAI,GAAG,IAAIf,GAAG,CAACgB,YAAY,EAAE;MAEnCD,IAAI,CAACE,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;MACpD,IAAIV,YAAY,CAACW,KAAK,KAAKC,SAAS,EAAE;QACrCR,IAAI,CAACO,KAAK,GAAGX,YAAY,CAACW,KAAK;MAChC;MAEA,IAAIX,YAAY,CAACa,KAAK,KAAKD,SAAS,EAAE;QACrCR,IAAI,CAACS,KAAK,GAAGb,YAAY,CAACa,KAAK;MAChC;MAEA,IAAIb,YAAY,CAACc,gBAAgB,IAAI,IAAI,EAAE;QAC1CV,IAAI,CAACW,mBAAmB,CAACf,YAAY,CAACc,gBAAgB,CAAC;MACxD;MAEA;MACA;MACA;MACAV,IAAI,CAACY,QAAQ,IAAAlB,iBAAA,GAAGE,YAAY,CAACX,GAAG,cAAAS,iBAAA,uBAAhBA,iBAAA,CAAkBkB,QAAQ;MAE1CZ,IAAI,CAACa,IAAI,GAAGjB,YAAY,CAACkB,IAAI;MAC7Bd,IAAI,CAACe,KAAK,GAAGnB,YAAY,CAACmB,KAAK;MAE/B,IAAInB,YAAY,CAACoB,KAAK,IAAI,IAAI,EAAE;QAC/BhB,IAAI,CAACiB,QAAQ,GAAGC,MAAM,CAACtB,YAAY,CAACoB,KAAK,CAAC;MAC3C;MAEA;MACAhB,IAAI,CAACmB,OAAO,GAAGvB,YAAY,CAACuB,OAAO,GAAG;QAAEC,KAAK,EAAE/B,KAAK,CAACgC,SAAS,CAACzB,YAAY,CAACuB,OAAO;MAAC,CAAE,GAAG,EAAE;MAE3FnB,IAAI,CAACmB,OAAO,CAACG,WAAW,GAAG1B,YAAY,CAAC2B,IAAI;MAC5CvB,IAAI,CAACD,QAAQ,GAAGA,QAAQ;MAExBC,IAAI,CAACwB,KAAK,GAAG5B,YAAY,CAAC4B,KAAK;MAC/BxB,IAAI,CAACyB,cAAc,GAAG,IAAI;MAE1B,KAAKjC,aAAa,CAACkC,IAAI,CAAC1B,IAAI,EAAEL,SAAS,CAAC,CAACgC,IAAI,CAAEC,QAAQ,IAAI;QAC1DA,QAAQ,CAACC,MAAM,CAACC,OAAO,CAAEC,OAAO,IAAI;UAAA,IAAAC,eAAA;UACnC1C,MAAM,CAAC2C,KAAK,mBAAAC,MAAA,CAAmBH,OAAO,CAACI,MAAM,iBAAAD,MAAA,CAAcvC,SAAS,CAAE,CAAC;UAEvE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAACyC,QAAQ,EAAAJ,eAAA,GAACD,OAAO,CAACI,MAAM,cAAAH,eAAA,cAAAA,eAAA,GAAI,EAAE,CAAC,EAAE;YAClD1C,MAAM,CAAC2C,KAAK,mBAAAC,MAAA,CAAmBvC,SAAS,CAAE,CAAC;YAC3CE,YAAY,CAAC;cACZZ,GAAG,EAAEU;aACL,CAAC;UACH;QACD,CAAC,CAAC;MACH,CAAC,CAAC;IACH,CAAC;IAEM,MAAMX,OAAO,GAAGqD,KAAA,IAAkG;MAAA,IAAAC,iBAAA,EAAAC,gBAAA;MAAA,IAAjG;QAAEC,OAAO;QAAEC;MAAW,CAAuE,GAAAJ,KAAA;MACpH/C,MAAM,CAAC2C,KAAK,CAAC,gBAAgB,CAAC;MAE9B,IAAIO,OAAO,CAACvD,GAAG,CAACyD,OAAO,EAAE;QACxB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA,IAAIF,OAAO,CAACvD,GAAG,CAACyD,OAAO,KAAK,gCAAgC,EAAE;UAC7D;UACApD,MAAM,CAACqD,IAAI,CAAC,0CAA0C,CAAC;QACxD,CAAC,MAAM,IAAIH,OAAO,CAACvD,GAAG,CAACyD,OAAO,KAAK,wBAAwB,EAAE;UAC5D;UACA,IAAI,oBAAoB,CAACE,IAAI,CAACH,WAAW,CAAC,EAAE;YAC3CnD,MAAM,CAACqD,IAAI,CAAC,2FAA2F,CAAC;UACzG;QACD,CAAC,MAAM;UACN;UACArD,MAAM,CAACqD,IAAI,wCAAAT,MAAA,CAAuCM,OAAO,CAACvD,GAAG,CAACyD,OAAO,OAAG,CAAC;QAC1E;MACD,CAAC,MAAM,IAAIF,OAAO,CAACK,UAAU,EAAE;QAC9B,IAAI,oBAAoB,CAACD,IAAI,CAACH,WAAW,CAAC,EAAE;UAC3CnD,MAAM,CAACqD,IAAI,CAAC,2FAA2F,CAAC;QACzG;MACD,CAAC,MAAM;QACNrD,MAAM,CAACqD,IAAI,CAAC,0CAA0C,CAAC;MACxD;MAEA;MACA,IAAI,GAAAL,iBAAA,GAACE,OAAO,CAACvD,GAAG,CAAC6D,IAAI,cAAAR,iBAAA,eAAhBA,iBAAA,CAAkBS,MAAM,GAAE;QAC9BzD,MAAM,CAAC0D,KAAK,CAAC,wCAAwC,CAAC;MACvD;MAEA;MACA,IAAI,GAAAT,gBAAA,GAACC,OAAO,CAACvD,GAAG,CAACgE,GAAG,cAAAV,gBAAA,eAAfA,gBAAA,CAAiBQ,MAAM,GAAE;QAC7BzD,MAAM,CAAC0D,KAAK,CAAC,uCAAuC,CAAC;MACtD;MAEA;MACA,IAAI;QACHxD,aAAa,GAAG,IAAIP,GAAG,CAACiE,QAAQ,CAACV,OAAO,CAACvD,GAAG,CAAC;MAC9C,CAAC,CAAC,OAAOkE,GAAG,EAAE;QACb7D,MAAM,CAAC0D,KAAK,CAAC;UAAEI,GAAG,EAAE,gCAAgC;UAAED;QAAG,CAAE,CAAC;MAC7D;IACD,CAAC;IAACE,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"408fe6daa5439765eb44cb5c33318f8184381deb"}
