{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","inputSourceMap":{"version":3,"file":"client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","sourceRoot":"","sources":["client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAE,cAAc,EAAE,SAAS,EAAE,uBAAuB,EAAE,SAAS,EAAE,mBAAmB,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAC3I,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEhC,OAAO,EAAE,iBAAiB,EAAE,MAAM,gCAAgC,CAAC;AAGnE,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,IAAqC,EAAE,GAAiB,EAA8B,EAAE;IAC1H,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,mBAAmB,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC;IACrD,MAAM,SAAS,GAAG,SAAS,EAAE,CAAC;IAC9B,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAC1B,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;IAE9B,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,KAAK,CAAC,mBAAmB,CAAC,CAAC;IAClC,CAAC;IAED,MAAM,EAAE,YAAY,EAAE,GAAG,iBAAiB,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,CAAC,CAAC;IAEhH,MAAM,aAAa,GAAG,mBAAmB,EAAE,OAAO,CAAC;IACnD,MAAM,WAAW,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;IAE3E,MAAM,qBAAqB,GAAG,kBAAkB,CAAC,KAAK,IAAI,EAAE;QAC3D,IAAI,CAAC;YACJ,MAAM,WAAW,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;YACzC,oBAAoB,CAAC;gBACpB,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,iBAAiB,CAAC;aACnE,CAAC,CAAC;QACJ,CAAC;QAAC,OAAO,KAAc,EAAE,CAAC;YACzB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACzD,CAAC;IACF,CAAC,CAAC,CAAC;IAEH,MAAM,qBAAqB,GAAG,OAAO,CACpC,GAAG,EAAE,CACJ,YAAY,IAAI,GAAG,KAAK,SAAS;QAChC,CAAC,CAAC;YACA,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;YAC/C,IAAI,EAAE,KAAc;YACpB,OAAO,EAAE,qBAAqB;SAC7B;QACH,CAAC,CAAC,SAAS,EACb,CAAC,aAAa,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC,EAAE,qBAAqB,EAAE,GAAG,CAAC,CACvE,CAAC;IAEF,OAAO,qBAAqB,CAAC;AAC9B,CAAC,CAAC","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useTranslation, useMethod, useToastMessageDispatch, useUserId, useUserSubscription, useUserRoom } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport type { UserInfoAction } from '../useUserInfoActions';\n\nexport const useBlockUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst currentSubscription = useUserSubscription(rid);\n\tconst ownUserId = useUserId();\n\tconst { _id: uid } = user;\n\tconst room = useUserRoom(rid);\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst { roomCanBlock } = getRoomDirectives({ room, showingUserId: uid, userSubscription: currentSubscription });\n\n\tconst isUserBlocked = currentSubscription?.blocker;\n\tconst toggleBlock = useMethod(isUserBlocked ? 'unblockUser' : 'blockUser');\n\n\tconst toggleBlockUserAction = useMutableCallback(async () => {\n\t\ttry {\n\t\t\tawait toggleBlock({ rid, blocked: uid });\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t(isUserBlocked ? 'User_is_unblocked' : 'User_is_blocked'),\n\t\t\t});\n\t\t} catch (error: unknown) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\n\tconst toggleBlockUserOption = useMemo(\n\t\t() =>\n\t\t\troomCanBlock && uid !== ownUserId\n\t\t\t\t? {\n\t\t\t\t\t\tcontent: t(isUserBlocked ? 'Unblock' : 'Block'),\n\t\t\t\t\t\ticon: 'ban' as const,\n\t\t\t\t\t\tonClick: toggleBlockUserAction,\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t\t[isUserBlocked, ownUserId, roomCanBlock, t, toggleBlockUserAction, uid],\n\t);\n\n\treturn toggleBlockUserOption;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","inputSourceMap":{"version":3,"file":"client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","sourceRoot":"","sources":["client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAE,cAAc,EAAE,SAAS,EAAE,uBAAuB,EAAE,SAAS,EAAE,mBAAmB,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAC3I,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEhC,OAAO,EAAE,iBAAiB,EAAE,MAAM,gCAAgC,CAAC;AAGnE,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,IAAqC,EAAE,GAAiB,EAA8B,EAAE;IAC1H,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,mBAAmB,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC;IACrD,MAAM,SAAS,GAAG,SAAS,EAAE,CAAC;IAC9B,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAC1B,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;IAE9B,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,KAAK,CAAC,mBAAmB,CAAC,CAAC;IAClC,CAAC;IAED,MAAM,EAAE,YAAY,EAAE,GAAG,iBAAiB,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,CAAC,CAAC;IAEhH,MAAM,aAAa,GAAG,mBAAmB,EAAE,OAAO,CAAC;IACnD,MAAM,WAAW,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;IAE3E,MAAM,qBAAqB,GAAG,kBAAkB,CAAC,KAAK,IAAI,EAAE;QAC3D,IAAI,CAAC;YACJ,MAAM,WAAW,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;YACzC,oBAAoB,CAAC;gBACpB,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,iBAAiB,CAAC;aACnE,CAAC,CAAC;QACJ,CAAC;QAAC,OAAO,KAAc,EAAE,CAAC;YACzB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACzD,CAAC;IACF,CAAC,CAAC,CAAC;IAEH,MAAM,qBAAqB,GAAG,OAAO,CACpC,GAAG,EAAE,CACJ,YAAY,IAAI,GAAG,KAAK,SAAS;QAChC,CAAC,CAAC;YACA,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;YAC/C,IAAI,EAAE,KAAc;YACpB,OAAO,EAAE,qBAAqB;SAC7B;QACH,CAAC,CAAC,SAAS,EACb,CAAC,aAAa,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC,EAAE,qBAAqB,EAAE,GAAG,CAAC,CACvE,CAAC;IAEF,OAAO,qBAAqB,CAAC;AAC9B,CAAC,CAAC","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useTranslation, useMethod, useToastMessageDispatch, useUserId, useUserSubscription, useUserRoom } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport type { UserInfoAction } from '../useUserInfoActions';\n\nexport const useBlockUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst currentSubscription = useUserSubscription(rid);\n\tconst ownUserId = useUserId();\n\tconst { _id: uid } = user;\n\tconst room = useUserRoom(rid);\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst { roomCanBlock } = getRoomDirectives({ room, showingUserId: uid, userSubscription: currentSubscription });\n\n\tconst isUserBlocked = currentSubscription?.blocker;\n\tconst toggleBlock = useMethod(isUserBlocked ? 'unblockUser' : 'blockUser');\n\n\tconst toggleBlockUserAction = useMutableCallback(async () => {\n\t\ttry {\n\t\t\tawait toggleBlock({ rid, blocked: uid });\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t(isUserBlocked ? 'User_is_unblocked' : 'User_is_blocked'),\n\t\t\t});\n\t\t} catch (error: unknown) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\n\tconst toggleBlockUserOption = useMemo(\n\t\t() =>\n\t\t\troomCanBlock && uid !== ownUserId\n\t\t\t\t? {\n\t\t\t\t\t\tcontent: t(isUserBlocked ? 'Unblock' : 'Block'),\n\t\t\t\t\t\ticon: 'ban' as const,\n\t\t\t\t\t\tonClick: toggleBlockUserAction,\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t\t[isUserBlocked, ownUserId, roomCanBlock, t, toggleBlockUserAction, uid],\n\t);\n\n\treturn toggleBlockUserOption;\n};\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nmodule.export({\n  useBlockUserAction: function () {\n    return useBlockUserAction;\n  }\n});\nvar useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback: function (v) {\n    useMutableCallback = v;\n  }\n}, 0);\nvar useTranslation, useMethod, useToastMessageDispatch, useUserId, useUserSubscription, useUserRoom;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useTranslation: function (v) {\n    useTranslation = v;\n  },\n  useMethod: function (v) {\n    useMethod = v;\n  },\n  useToastMessageDispatch: function (v) {\n    useToastMessageDispatch = v;\n  },\n  useUserId: function (v) {\n    useUserId = v;\n  },\n  useUserSubscription: function (v) {\n    useUserSubscription = v;\n  },\n  useUserRoom: function (v) {\n    useUserRoom = v;\n  }\n}, 1);\nvar useMemo;\nmodule.link(\"react\", {\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 2);\nvar getRoomDirectives;\nmodule.link(\"../../../lib/getRoomDirectives\", {\n  getRoomDirectives: function (v) {\n    getRoomDirectives = v;\n  }\n}, 3);\nvar useBlockUserAction = function (user, rid) {\n  var t = useTranslation();\n  var dispatchToastMessage = useToastMessageDispatch();\n  var currentSubscription = useUserSubscription(rid);\n  var ownUserId = useUserId();\n  var uid = user._id;\n  var room = useUserRoom(rid);\n  if (!room) {\n    throw Error('Room not provided');\n  }\n  var _getRoomDirectives = getRoomDirectives({\n      room: room,\n      showingUserId: uid,\n      userSubscription: currentSubscription\n    }),\n    roomCanBlock = _getRoomDirectives.roomCanBlock;\n  var isUserBlocked = currentSubscription === null || currentSubscription === void 0 ? void 0 : currentSubscription.blocker;\n  var toggleBlock = useMethod(isUserBlocked ? 'unblockUser' : 'blockUser');\n  var toggleBlockUserAction = useMutableCallback(function () {\n    function _callee() {\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(toggleBlock({\n                rid: rid,\n                blocked: uid\n              }));\n            case 3:\n              dispatchToastMessage({\n                type: 'success',\n                message: t(isUserBlocked ? 'User_is_unblocked' : 'User_is_blocked')\n              });\n              _context.next = 9;\n              break;\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              dispatchToastMessage({\n                type: 'error',\n                message: _context.t0\n              });\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return _callee$;\n      }(), null, null, [[0, 6]], Promise);\n    }\n    return _callee;\n  }());\n  var toggleBlockUserOption = useMemo(function () {\n    return roomCanBlock && uid !== ownUserId ? {\n      content: t(isUserBlocked ? 'Unblock' : 'Block'),\n      icon: 'ban',\n      onClick: toggleBlockUserAction\n    } : undefined;\n  }, [isUserBlocked, ownUserId, roomCanBlock, t, toggleBlockUserAction, uid]);\n  return toggleBlockUserOption;\n};","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","export","useBlockUserAction","useMutableCallback","useTranslation","useMethod","useToastMessageDispatch","useUserId","useUserSubscription","useUserRoom","useMemo","getRoomDirectives","user","rid","t","dispatchToastMessage","currentSubscription","ownUserId","uid","_id","room","Error","_getRoomDirectives","showingUserId","userSubscription","roomCanBlock","isUserBlocked","blocker","toggleBlock","toggleBlockUserAction","_callee","async","_callee$","_context","prev","next","awrap","blocked","type","message","t0","stop","Promise","toggleBlockUserOption","content","icon","onClick","undefined"],"sources":["client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useTranslation, useMethod, useToastMessageDispatch, useUserId, useUserSubscription, useUserRoom } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport type { UserInfoAction } from '../useUserInfoActions';\n\nexport const useBlockUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst currentSubscription = useUserSubscription(rid);\n\tconst ownUserId = useUserId();\n\tconst { _id: uid } = user;\n\tconst room = useUserRoom(rid);\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst { roomCanBlock } = getRoomDirectives({ room, showingUserId: uid, userSubscription: currentSubscription });\n\n\tconst isUserBlocked = currentSubscription?.blocker;\n\tconst toggleBlock = useMethod(isUserBlocked ? 'unblockUser' : 'blockUser');\n\n\tconst toggleBlockUserAction = useMutableCallback(async () => {\n\t\ttry {\n\t\t\tawait toggleBlock({ rid, blocked: uid });\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t(isUserBlocked ? 'User_is_unblocked' : 'User_is_blocked'),\n\t\t\t});\n\t\t} catch (error: unknown) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\n\tconst toggleBlockUserOption = useMemo(\n\t\t() =>\n\t\t\troomCanBlock && uid !== ownUserId\n\t\t\t\t? {\n\t\t\t\t\t\tcontent: t(isUserBlocked ? 'Unblock' : 'Block'),\n\t\t\t\t\t\ticon: 'ban' as const,\n\t\t\t\t\t\tonClick: toggleBlockUserAction,\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t\t[isUserBlocked, ownUserId, roomCanBlock, t, toggleBlockUserAction, uid],\n\t);\n\n\treturn toggleBlockUserOption;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"3623fce8c195fcecb7160e5242666c6ce495e6ee"}
