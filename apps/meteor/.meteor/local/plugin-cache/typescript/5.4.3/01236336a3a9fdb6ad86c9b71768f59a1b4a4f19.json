{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/user-status/server/methods/insertOrUpdateUserStatus.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/user-status/server/methods/insertOrUpdateUserStatus.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/user-status/server/methods/insertOrUpdateUserStatus.ts","inputSourceMap":{"version":3,"file":"app/user-status/server/methods/insertOrUpdateUserStatus.ts","sourceRoot":"","sources":["app/user-status/server/methods/insertOrUpdateUserStatus.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { ICustomUserStatus } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport type { InsertionModel } from '@rocket.chat/model-typings';\nimport { CustomUserStatus } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tinsertOrUpdateUserStatus(userStatusData: {\n\t\t\t_id?: string;\n\t\t\tname: string;\n\t\t\tstatusType: string;\n\t\t\tstatus: string;\n\t\t\temoji: string;\n\t\t\tmessage: string;\n\t\t\torder: number;\n\t\t\tpreviousName?: string;\n\t\t\tpreviousStatusType?: string;\n\t\t}): string | boolean;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync insertOrUpdateUserStatus(userStatusData) {\n\t\tif (!this.userId || !(await hasPermissionAsync(this.userId, 'manage-user-status'))) {\n\t\t\tthrow new Meteor.Error('not_authorized');\n\t\t}\n\n\t\tif (!trim(userStatusData.name)) {\n\t\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\t// allow all characters except >, <, &, \", '\n\t\t// more practical than allowing specific sets of characters; also allows foreign languages\n\t\tconst nameValidation = /[><&\"']/;\n\n\t\tif (nameValidation.test(userStatusData.name)) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${userStatusData.name} is not a valid name`, {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t\tinput: userStatusData.name,\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\tlet matchingResults = [];\n\n\t\tif (userStatusData._id) {\n\t\t\tmatchingResults = await CustomUserStatus.findByNameExceptId(userStatusData.name, userStatusData._id).toArray();\n\t\t} else {\n\t\t\tmatchingResults = await CustomUserStatus.findByName(userStatusData.name).toArray();\n\t\t}\n\n\t\tif (matchingResults.length > 0) {\n\t\t\tthrow new Meteor.Error('Custom_User_Status_Error_Name_Already_In_Use', 'The custom user status name is already in use', {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t});\n\t\t}\n\n\t\tconst validStatusTypes = ['online', 'away', 'busy', 'offline'];\n\t\tif (userStatusData.statusType && validStatusTypes.indexOf(userStatusData.statusType) < 0) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${userStatusData.statusType} is not a valid status type`, {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t\tinput: userStatusData.statusType,\n\t\t\t\tfield: 'StatusType',\n\t\t\t});\n\t\t}\n\n\t\tif (!userStatusData._id) {\n\t\t\t// insert user status\n\t\t\tconst createUserStatus: InsertionModel<ICustomUserStatus> = {\n\t\t\t\tname: userStatusData.name,\n\t\t\t\tstatusType: userStatusData.statusType,\n\t\t\t};\n\n\t\t\tconst _id = (await CustomUserStatus.create(createUserStatus)).insertedId;\n\n\t\t\tvoid api.broadcast('user.updateCustomStatus', { ...createUserStatus, _id });\n\n\t\t\treturn _id;\n\t\t}\n\n\t\t// update User status\n\t\tif (userStatusData.name !== userStatusData.previousName) {\n\t\t\tawait CustomUserStatus.setName(userStatusData._id, userStatusData.name);\n\t\t}\n\n\t\tif (userStatusData.statusType !== userStatusData.previousStatusType) {\n\t\t\tawait CustomUserStatus.setStatusType(userStatusData._id, userStatusData.statusType);\n\t\t}\n\n\t\tvoid api.broadcast('user.updateCustomStatus', { ...userStatusData, _id: userStatusData._id });\n\n\t\treturn true;\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/user-status/server/methods/insertOrUpdateUserStatus.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/user-status/server/methods/insertOrUpdateUserStatus.ts","inputSourceMap":{"version":3,"file":"app/user-status/server/methods/insertOrUpdateUserStatus.ts","sourceRoot":"","sources":["app/user-status/server/methods/insertOrUpdateUserStatus.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { ICustomUserStatus } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport type { InsertionModel } from '@rocket.chat/model-typings';\nimport { CustomUserStatus } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tinsertOrUpdateUserStatus(userStatusData: {\n\t\t\t_id?: string;\n\t\t\tname: string;\n\t\t\tstatusType: string;\n\t\t\tstatus: string;\n\t\t\temoji: string;\n\t\t\tmessage: string;\n\t\t\torder: number;\n\t\t\tpreviousName?: string;\n\t\t\tpreviousStatusType?: string;\n\t\t}): string | boolean;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync insertOrUpdateUserStatus(userStatusData) {\n\t\tif (!this.userId || !(await hasPermissionAsync(this.userId, 'manage-user-status'))) {\n\t\t\tthrow new Meteor.Error('not_authorized');\n\t\t}\n\n\t\tif (!trim(userStatusData.name)) {\n\t\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\t// allow all characters except >, <, &, \", '\n\t\t// more practical than allowing specific sets of characters; also allows foreign languages\n\t\tconst nameValidation = /[><&\"']/;\n\n\t\tif (nameValidation.test(userStatusData.name)) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${userStatusData.name} is not a valid name`, {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t\tinput: userStatusData.name,\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\tlet matchingResults = [];\n\n\t\tif (userStatusData._id) {\n\t\t\tmatchingResults = await CustomUserStatus.findByNameExceptId(userStatusData.name, userStatusData._id).toArray();\n\t\t} else {\n\t\t\tmatchingResults = await CustomUserStatus.findByName(userStatusData.name).toArray();\n\t\t}\n\n\t\tif (matchingResults.length > 0) {\n\t\t\tthrow new Meteor.Error('Custom_User_Status_Error_Name_Already_In_Use', 'The custom user status name is already in use', {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t});\n\t\t}\n\n\t\tconst validStatusTypes = ['online', 'away', 'busy', 'offline'];\n\t\tif (userStatusData.statusType && validStatusTypes.indexOf(userStatusData.statusType) < 0) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${userStatusData.statusType} is not a valid status type`, {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t\tinput: userStatusData.statusType,\n\t\t\t\tfield: 'StatusType',\n\t\t\t});\n\t\t}\n\n\t\tif (!userStatusData._id) {\n\t\t\t// insert user status\n\t\t\tconst createUserStatus: InsertionModel<ICustomUserStatus> = {\n\t\t\t\tname: userStatusData.name,\n\t\t\t\tstatusType: userStatusData.statusType,\n\t\t\t};\n\n\t\t\tconst _id = (await CustomUserStatus.create(createUserStatus)).insertedId;\n\n\t\t\tvoid api.broadcast('user.updateCustomStatus', { ...createUserStatus, _id });\n\n\t\t\treturn _id;\n\t\t}\n\n\t\t// update User status\n\t\tif (userStatusData.name !== userStatusData.previousName) {\n\t\t\tawait CustomUserStatus.setName(userStatusData._id, userStatusData.name);\n\t\t}\n\n\t\tif (userStatusData.statusType !== userStatusData.previousStatusType) {\n\t\t\tawait CustomUserStatus.setStatusType(userStatusData._id, userStatusData.statusType);\n\t\t}\n\n\t\tvoid api.broadcast('user.updateCustomStatus', { ...userStatusData, _id: userStatusData._id });\n\n\t\treturn true;\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let CustomUserStatus;\n    module.link(\"@rocket.chat/models\", {\n      CustomUserStatus(v) {\n        CustomUserStatus = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let trim;\n    module.link(\"../../../../lib/utils/stringUtils\", {\n      trim(v) {\n        trim = v;\n      }\n    }, 3);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async insertOrUpdateUserStatus(userStatusData) {\n        if (!this.userId || !(await hasPermissionAsync(this.userId, 'manage-user-status'))) {\n          throw new Meteor.Error('not_authorized');\n        }\n        if (!trim(userStatusData.name)) {\n          throw new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n            method: 'insertOrUpdateUserStatus',\n            field: 'Name'\n          });\n        }\n        // allow all characters except >, <, &, \", '\n        // more practical than allowing specific sets of characters; also allows foreign languages\n        const nameValidation = /[><&\"']/;\n        if (nameValidation.test(userStatusData.name)) {\n          throw new Meteor.Error('error-input-is-not-a-valid-field', \"\".concat(userStatusData.name, \" is not a valid name\"), {\n            method: 'insertOrUpdateUserStatus',\n            input: userStatusData.name,\n            field: 'Name'\n          });\n        }\n        let matchingResults = [];\n        if (userStatusData._id) {\n          matchingResults = await CustomUserStatus.findByNameExceptId(userStatusData.name, userStatusData._id).toArray();\n        } else {\n          matchingResults = await CustomUserStatus.findByName(userStatusData.name).toArray();\n        }\n        if (matchingResults.length > 0) {\n          throw new Meteor.Error('Custom_User_Status_Error_Name_Already_In_Use', 'The custom user status name is already in use', {\n            method: 'insertOrUpdateUserStatus'\n          });\n        }\n        const validStatusTypes = ['online', 'away', 'busy', 'offline'];\n        if (userStatusData.statusType && validStatusTypes.indexOf(userStatusData.statusType) < 0) {\n          throw new Meteor.Error('error-input-is-not-a-valid-field', \"\".concat(userStatusData.statusType, \" is not a valid status type\"), {\n            method: 'insertOrUpdateUserStatus',\n            input: userStatusData.statusType,\n            field: 'StatusType'\n          });\n        }\n        if (!userStatusData._id) {\n          // insert user status\n          const createUserStatus = {\n            name: userStatusData.name,\n            statusType: userStatusData.statusType\n          };\n          const _id = (await CustomUserStatus.create(createUserStatus)).insertedId;\n          void api.broadcast('user.updateCustomStatus', _objectSpread(_objectSpread({}, createUserStatus), {}, {\n            _id\n          }));\n          return _id;\n        }\n        // update User status\n        if (userStatusData.name !== userStatusData.previousName) {\n          await CustomUserStatus.setName(userStatusData._id, userStatusData.name);\n        }\n        if (userStatusData.statusType !== userStatusData.previousStatusType) {\n          await CustomUserStatus.setStatusType(userStatusData._id, userStatusData.statusType);\n        }\n        void api.broadcast('user.updateCustomStatus', _objectSpread(_objectSpread({}, userStatusData), {}, {\n          _id: userStatusData._id\n        }));\n        return true;\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","api","CustomUserStatus","Meteor","trim","hasPermissionAsync","__reifyWaitForDeps__","methods","insertOrUpdateUserStatus","userStatusData","userId","Error","name","method","field","nameValidation","test","concat","input","matchingResults","_id","findByNameExceptId","toArray","findByName","length","validStatusTypes","statusType","indexOf","createUserStatus","create","insertedId","broadcast","previousName","setName","previousStatusType","setStatusType","__reify_async_result__","_reifyError","self","async"],"sources":["app/user-status/server/methods/insertOrUpdateUserStatus.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { ICustomUserStatus } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport type { InsertionModel } from '@rocket.chat/model-typings';\nimport { CustomUserStatus } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tinsertOrUpdateUserStatus(userStatusData: {\n\t\t\t_id?: string;\n\t\t\tname: string;\n\t\t\tstatusType: string;\n\t\t\tstatus: string;\n\t\t\temoji: string;\n\t\t\tmessage: string;\n\t\t\torder: number;\n\t\t\tpreviousName?: string;\n\t\t\tpreviousStatusType?: string;\n\t\t}): string | boolean;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync insertOrUpdateUserStatus(userStatusData) {\n\t\tif (!this.userId || !(await hasPermissionAsync(this.userId, 'manage-user-status'))) {\n\t\t\tthrow new Meteor.Error('not_authorized');\n\t\t}\n\n\t\tif (!trim(userStatusData.name)) {\n\t\t\tthrow new Meteor.Error('error-the-field-is-required', 'The field Name is required', {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\t// allow all characters except >, <, &, \", '\n\t\t// more practical than allowing specific sets of characters; also allows foreign languages\n\t\tconst nameValidation = /[><&\"']/;\n\n\t\tif (nameValidation.test(userStatusData.name)) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${userStatusData.name} is not a valid name`, {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t\tinput: userStatusData.name,\n\t\t\t\tfield: 'Name',\n\t\t\t});\n\t\t}\n\n\t\tlet matchingResults = [];\n\n\t\tif (userStatusData._id) {\n\t\t\tmatchingResults = await CustomUserStatus.findByNameExceptId(userStatusData.name, userStatusData._id).toArray();\n\t\t} else {\n\t\t\tmatchingResults = await CustomUserStatus.findByName(userStatusData.name).toArray();\n\t\t}\n\n\t\tif (matchingResults.length > 0) {\n\t\t\tthrow new Meteor.Error('Custom_User_Status_Error_Name_Already_In_Use', 'The custom user status name is already in use', {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t});\n\t\t}\n\n\t\tconst validStatusTypes = ['online', 'away', 'busy', 'offline'];\n\t\tif (userStatusData.statusType && validStatusTypes.indexOf(userStatusData.statusType) < 0) {\n\t\t\tthrow new Meteor.Error('error-input-is-not-a-valid-field', `${userStatusData.statusType} is not a valid status type`, {\n\t\t\t\tmethod: 'insertOrUpdateUserStatus',\n\t\t\t\tinput: userStatusData.statusType,\n\t\t\t\tfield: 'StatusType',\n\t\t\t});\n\t\t}\n\n\t\tif (!userStatusData._id) {\n\t\t\t// insert user status\n\t\t\tconst createUserStatus: InsertionModel<ICustomUserStatus> = {\n\t\t\t\tname: userStatusData.name,\n\t\t\t\tstatusType: userStatusData.statusType,\n\t\t\t};\n\n\t\t\tconst _id = (await CustomUserStatus.create(createUserStatus)).insertedId;\n\n\t\t\tvoid api.broadcast('user.updateCustomStatus', { ...createUserStatus, _id });\n\n\t\t\treturn _id;\n\t\t}\n\n\t\t// update User status\n\t\tif (userStatusData.name !== userStatusData.previousName) {\n\t\t\tawait CustomUserStatus.setName(userStatusData._id, userStatusData.name);\n\t\t}\n\n\t\tif (userStatusData.statusType !== userStatusData.previousStatusType) {\n\t\t\tawait CustomUserStatus.setStatusType(userStatusData._id, userStatusData.statusType);\n\t\t}\n\n\t\tvoid api.broadcast('user.updateCustomStatus', { ...userStatusData, _id: userStatusData._id });\n\n\t\treturn true;\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"01236336a3a9fdb6ad86c9b71768f59a1b4a4f19"}
