{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/apps/storage/AppRealStorage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/apps/storage/AppRealStorage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/apps/storage/AppRealStorage.ts","inputSourceMap":{"version":3,"file":"ee/server/apps/storage/AppRealStorage.ts","sourceRoot":"","sources":["ee/server/apps/storage/AppRealStorage.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,yCAAyC,CAAC;AAG7E,MAAM,OAAO,cAAe,SAAQ,kBAAkB;IACjC;IAApB,YAAoB,EAAe;QAClC,KAAK,CAAC,SAAS,CAAC,CAAC;QADE,OAAE,GAAF,EAAE,CAAa;IAEnC,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,IAAqB;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAE5B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;QAEvG,IAAI,GAAG,EAAE,CAAC;YACT,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,EAAE,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,UAA+B,CAAC;QAC3E,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QAEd,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,KAAK,CAAC,WAAW,CAAC,EAAU;QAClC,OAAO,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACxD,CAAC;IAEM,KAAK,CAAC,WAAW;QACvB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QAC9C,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAExC,OAAO,KAAK,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,kBAAkB;QAC9B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,kBAAkB,EAAE,SAAS,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QAC7E,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAExC,OAAO,KAAK,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,IAAqB;QACxC,MAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,EAAU;QAC7B,MAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAChC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC1B,CAAC;CACD","sourcesContent":["import type { IAppStorageItem } from '@rocket.chat/apps-engine/server/storage';\nimport { AppMetadataStorage } from '@rocket.chat/apps-engine/server/storage';\nimport type { Apps } from '@rocket.chat/models';\n\nexport class AppRealStorage extends AppMetadataStorage {\n\tconstructor(private db: typeof Apps) {\n\t\tsuper('mongodb');\n\t}\n\n\tpublic async create(item: IAppStorageItem): Promise<IAppStorageItem> {\n\t\titem.createdAt = new Date();\n\t\titem.updatedAt = new Date();\n\n\t\tconst doc = await this.db.findOne({ $or: [{ id: item.id }, { 'info.nameSlug': item.info.nameSlug }] });\n\n\t\tif (doc) {\n\t\t\tthrow new Error('App already exists.');\n\t\t}\n\n\t\tconst id = (await this.db.insertOne(item)).insertedId as unknown as string;\n\t\titem._id = id;\n\n\t\treturn item;\n\t}\n\n\tpublic async retrieveOne(id: string): Promise<IAppStorageItem> {\n\t\treturn this.db.findOne({ $or: [{ _id: id }, { id }] });\n\t}\n\n\tpublic async retrieveAll(): Promise<Map<string, IAppStorageItem>> {\n\t\tconst docs = await this.db.find({}).toArray();\n\t\tconst items = new Map();\n\n\t\tdocs.forEach((i) => items.set(i.id, i));\n\n\t\treturn items;\n\t}\n\n\tpublic async retrieveAllPrivate(): Promise<Map<string, IAppStorageItem>> {\n\t\tconst docs = await this.db.find({ installationSource: 'private' }).toArray();\n\t\tconst items = new Map();\n\n\t\tdocs.forEach((i) => items.set(i.id, i));\n\n\t\treturn items;\n\t}\n\n\tpublic async update(item: IAppStorageItem): Promise<IAppStorageItem> {\n\t\tawait this.db.updateOne({ id: item.id }, { $set: item });\n\t\treturn this.retrieveOne(item.id);\n\t}\n\n\tpublic async remove(id: string): Promise<{ success: boolean }> {\n\t\tawait this.db.deleteOne({ id });\n\t\treturn { success: true };\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/apps/storage/AppRealStorage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/apps/storage/AppRealStorage.ts","inputSourceMap":{"version":3,"file":"ee/server/apps/storage/AppRealStorage.ts","sourceRoot":"","sources":["ee/server/apps/storage/AppRealStorage.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,yCAAyC,CAAC;AAG7E,MAAM,OAAO,cAAe,SAAQ,kBAAkB;IACjC;IAApB,YAAoB,EAAe;QAClC,KAAK,CAAC,SAAS,CAAC,CAAC;QADE,OAAE,GAAF,EAAE,CAAa;IAEnC,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,IAAqB;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAE5B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;QAEvG,IAAI,GAAG,EAAE,CAAC;YACT,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,EAAE,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,UAA+B,CAAC;QAC3E,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QAEd,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,KAAK,CAAC,WAAW,CAAC,EAAU;QAClC,OAAO,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACxD,CAAC;IAEM,KAAK,CAAC,WAAW;QACvB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QAC9C,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAExC,OAAO,KAAK,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,kBAAkB;QAC9B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,kBAAkB,EAAE,SAAS,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QAC7E,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QAExC,OAAO,KAAK,CAAC;IACd,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,IAAqB;QACxC,MAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACzD,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,EAAU;QAC7B,MAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAChC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;IAC1B,CAAC;CACD","sourcesContent":["import type { IAppStorageItem } from '@rocket.chat/apps-engine/server/storage';\nimport { AppMetadataStorage } from '@rocket.chat/apps-engine/server/storage';\nimport type { Apps } from '@rocket.chat/models';\n\nexport class AppRealStorage extends AppMetadataStorage {\n\tconstructor(private db: typeof Apps) {\n\t\tsuper('mongodb');\n\t}\n\n\tpublic async create(item: IAppStorageItem): Promise<IAppStorageItem> {\n\t\titem.createdAt = new Date();\n\t\titem.updatedAt = new Date();\n\n\t\tconst doc = await this.db.findOne({ $or: [{ id: item.id }, { 'info.nameSlug': item.info.nameSlug }] });\n\n\t\tif (doc) {\n\t\t\tthrow new Error('App already exists.');\n\t\t}\n\n\t\tconst id = (await this.db.insertOne(item)).insertedId as unknown as string;\n\t\titem._id = id;\n\n\t\treturn item;\n\t}\n\n\tpublic async retrieveOne(id: string): Promise<IAppStorageItem> {\n\t\treturn this.db.findOne({ $or: [{ _id: id }, { id }] });\n\t}\n\n\tpublic async retrieveAll(): Promise<Map<string, IAppStorageItem>> {\n\t\tconst docs = await this.db.find({}).toArray();\n\t\tconst items = new Map();\n\n\t\tdocs.forEach((i) => items.set(i.id, i));\n\n\t\treturn items;\n\t}\n\n\tpublic async retrieveAllPrivate(): Promise<Map<string, IAppStorageItem>> {\n\t\tconst docs = await this.db.find({ installationSource: 'private' }).toArray();\n\t\tconst items = new Map();\n\n\t\tdocs.forEach((i) => items.set(i.id, i));\n\n\t\treturn items;\n\t}\n\n\tpublic async update(item: IAppStorageItem): Promise<IAppStorageItem> {\n\t\tawait this.db.updateOne({ id: item.id }, { $set: item });\n\t\treturn this.retrieveOne(item.id);\n\t}\n\n\tpublic async remove(id: string): Promise<{ success: boolean }> {\n\t\tawait this.db.deleteOne({ id });\n\t\treturn { success: true };\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      AppRealStorage: () => AppRealStorage\n    });\n    let AppMetadataStorage;\n    module.link(\"@rocket.chat/apps-engine/server/storage\", {\n      AppMetadataStorage(v) {\n        AppMetadataStorage = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AppRealStorage extends AppMetadataStorage {\n      constructor(db) {\n        super('mongodb');\n        this.db = void 0;\n        this.db = db;\n      }\n      async create(item) {\n        item.createdAt = new Date();\n        item.updatedAt = new Date();\n        const doc = await this.db.findOne({\n          $or: [{\n            id: item.id\n          }, {\n            'info.nameSlug': item.info.nameSlug\n          }]\n        });\n        if (doc) {\n          throw new Error('App already exists.');\n        }\n        const id = (await this.db.insertOne(item)).insertedId;\n        item._id = id;\n        return item;\n      }\n      async retrieveOne(id) {\n        return this.db.findOne({\n          $or: [{\n            _id: id\n          }, {\n            id\n          }]\n        });\n      }\n      async retrieveAll() {\n        const docs = await this.db.find({}).toArray();\n        const items = new Map();\n        docs.forEach(i => items.set(i.id, i));\n        return items;\n      }\n      async retrieveAllPrivate() {\n        const docs = await this.db.find({\n          installationSource: 'private'\n        }).toArray();\n        const items = new Map();\n        docs.forEach(i => items.set(i.id, i));\n        return items;\n      }\n      async update(item) {\n        await this.db.updateOne({\n          id: item.id\n        }, {\n          $set: item\n        });\n        return this.retrieveOne(item.id);\n      }\n      async remove(id) {\n        await this.db.deleteOne({\n          id\n        });\n        return {\n          success: true\n        };\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","AppRealStorage","AppMetadataStorage","link","v","__reifyWaitForDeps__","constructor","db","create","item","createdAt","Date","updatedAt","doc","findOne","$or","id","info","nameSlug","Error","insertOne","insertedId","_id","retrieveOne","retrieveAll","docs","find","toArray","items","Map","forEach","i","set","retrieveAllPrivate","installationSource","update","updateOne","$set","remove","deleteOne","success","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/apps/storage/AppRealStorage.ts"],"sourcesContent":["import type { IAppStorageItem } from '@rocket.chat/apps-engine/server/storage';\nimport { AppMetadataStorage } from '@rocket.chat/apps-engine/server/storage';\nimport type { Apps } from '@rocket.chat/models';\n\nexport class AppRealStorage extends AppMetadataStorage {\n\tconstructor(private db: typeof Apps) {\n\t\tsuper('mongodb');\n\t}\n\n\tpublic async create(item: IAppStorageItem): Promise<IAppStorageItem> {\n\t\titem.createdAt = new Date();\n\t\titem.updatedAt = new Date();\n\n\t\tconst doc = await this.db.findOne({ $or: [{ id: item.id }, { 'info.nameSlug': item.info.nameSlug }] });\n\n\t\tif (doc) {\n\t\t\tthrow new Error('App already exists.');\n\t\t}\n\n\t\tconst id = (await this.db.insertOne(item)).insertedId as unknown as string;\n\t\titem._id = id;\n\n\t\treturn item;\n\t}\n\n\tpublic async retrieveOne(id: string): Promise<IAppStorageItem> {\n\t\treturn this.db.findOne({ $or: [{ _id: id }, { id }] });\n\t}\n\n\tpublic async retrieveAll(): Promise<Map<string, IAppStorageItem>> {\n\t\tconst docs = await this.db.find({}).toArray();\n\t\tconst items = new Map();\n\n\t\tdocs.forEach((i) => items.set(i.id, i));\n\n\t\treturn items;\n\t}\n\n\tpublic async retrieveAllPrivate(): Promise<Map<string, IAppStorageItem>> {\n\t\tconst docs = await this.db.find({ installationSource: 'private' }).toArray();\n\t\tconst items = new Map();\n\n\t\tdocs.forEach((i) => items.set(i.id, i));\n\n\t\treturn items;\n\t}\n\n\tpublic async update(item: IAppStorageItem): Promise<IAppStorageItem> {\n\t\tawait this.db.updateOne({ id: item.id }, { $set: item });\n\t\treturn this.retrieveOne(item.id);\n\t}\n\n\tpublic async remove(id: string): Promise<{ success: boolean }> {\n\t\tawait this.db.deleteOne({ id });\n\t\treturn { success: true };\n\t}\n}\n"],"mappings":";;;IACAA,MAAA,CAAOC,MAAE;MAAAC,cAAoB,EAAAA,CAAA,KAAAA;IAAM;IAAA,IAAAC,kBAAA;IAAAH,MAA0C,CAAAI,IAAA;MAAAD,mBAAAE,CAAA;QAAAF,kBAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,oBAAA,WAAAA,oBAAA;IAGvE,MAAOJ,cAAe,SAAQC,kBAAkB;MACrDI,YAAoBC,EAAe;QAClC,KAAK,CAAC,SAAS,CAAC;QAAC,KADEA,EAAA;QAAA,KAAAA,EAAE,GAAFA,EAAE;MAEtB;MAEO,MAAMC,MAAMA,CAACC,IAAqB;QACxCA,IAAI,CAACC,SAAS,GAAG,IAAIC,IAAI,EAAE;QAC3BF,IAAI,CAACG,SAAS,GAAG,IAAID,IAAI,EAAE;QAE3B,MAAME,GAAG,GAAG,MAAM,IAAI,CAACN,EAAE,CAACO,OAAO,CAAC;UAAEC,GAAG,EAAE,CAAC;YAAEC,EAAE,EAAEP,IAAI,CAACO;UAAE,CAAE,EAAE;YAAE,eAAe,EAAEP,IAAI,CAACQ,IAAI,CAACC;UAAQ,CAAE;QAAC,CAAE,CAAC;QAEtG,IAAIL,GAAG,EAAE;UACR,MAAM,IAAIM,KAAK,CAAC,qBAAqB,CAAC;QACvC;QAEA,MAAMH,EAAE,GAAG,CAAC,MAAM,IAAI,CAACT,EAAE,CAACa,SAAS,CAACX,IAAI,CAAC,EAAEY,UAA+B;QAC1EZ,IAAI,CAACa,GAAG,GAAGN,EAAE;QAEb,OAAOP,IAAI;MACZ;MAEO,MAAMc,WAAWA,CAACP,EAAU;QAClC,OAAO,IAAI,CAACT,EAAE,CAACO,OAAO,CAAC;UAAEC,GAAG,EAAE,CAAC;YAAEO,GAAG,EAAEN;UAAE,CAAE,EAAE;YAAEA;UAAE,CAAE;QAAC,CAAE,CAAC;MACvD;MAEO,MAAMQ,WAAWA,CAAA;QACvB,MAAMC,IAAI,GAAG,MAAM,IAAI,CAAClB,EAAE,CAACmB,IAAI,CAAC,EAAE,CAAC,CAACC,OAAO,EAAE;QAC7C,MAAMC,KAAK,GAAG,IAAIC,GAAG,EAAE;QAEvBJ,IAAI,CAACK,OAAO,CAAEC,CAAC,IAAKH,KAAK,CAACI,GAAG,CAACD,CAAC,CAACf,EAAE,EAAEe,CAAC,CAAC,CAAC;QAEvC,OAAOH,KAAK;MACb;MAEO,MAAMK,kBAAkBA,CAAA;QAC9B,MAAMR,IAAI,GAAG,MAAM,IAAI,CAAClB,EAAE,CAACmB,IAAI,CAAC;UAAEQ,kBAAkB,EAAE;QAAS,CAAE,CAAC,CAACP,OAAO,EAAE;QAC5E,MAAMC,KAAK,GAAG,IAAIC,GAAG,EAAE;QAEvBJ,IAAI,CAACK,OAAO,CAAEC,CAAC,IAAKH,KAAK,CAACI,GAAG,CAACD,CAAC,CAACf,EAAE,EAAEe,CAAC,CAAC,CAAC;QAEvC,OAAOH,KAAK;MACb;MAEO,MAAMO,MAAMA,CAAC1B,IAAqB;QACxC,MAAM,IAAI,CAACF,EAAE,CAAC6B,SAAS,CAAC;UAAEpB,EAAE,EAAEP,IAAI,CAACO;QAAE,CAAE,EAAE;UAAEqB,IAAI,EAAE5B;QAAI,CAAE,CAAC;QACxD,OAAO,IAAI,CAACc,WAAW,CAACd,IAAI,CAACO,EAAE,CAAC;MACjC;MAEO,MAAMsB,MAAMA,CAACtB,EAAU;QAC7B,MAAM,IAAI,CAACT,EAAE,CAACgC,SAAS,CAAC;UAAEvB;QAAE,CAAE,CAAC;QAC/B,OAAO;UAAEwB,OAAO,EAAE;QAAI,CAAE;MACzB;;IACAC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9f3607dd552566571ec36f9502397f050ff87e2c"}
