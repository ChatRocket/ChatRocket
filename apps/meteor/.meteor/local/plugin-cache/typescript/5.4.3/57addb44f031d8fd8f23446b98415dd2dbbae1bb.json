{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/server/functions/provideUsersSuggestedGroupKeys.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/e2e/server/functions/provideUsersSuggestedGroupKeys.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/server/functions/provideUsersSuggestedGroupKeys.ts","inputSourceMap":{"version":3,"file":"app/e2e/server/functions/provideUsersSuggestedGroupKeys.ts","sourceRoot":"","sources":["app/e2e/server/functions/provideUsersSuggestedGroupKeys.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAE3D,OAAO,EAAE,oBAAoB,EAAE,MAAM,uDAAuD,CAAC;AAC7F,OAAO,EAAE,2BAA2B,EAAE,uBAAuB,EAAE,MAAM,wCAAwC,CAAC;AAE9G,MAAM,CAAC,MAAM,8BAA8B,GAAG,KAAK,EAClD,MAAoB,EACpB,uBAA2H,EAC1H,EAAE;IACH,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAErD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACrB,OAAO;IACR,CAAC;IAED,uFAAuF;IACvF,IAAI,KAAK,EAAE,MAAM,MAAM,IAAI,OAAO,EAAE,CAAC;QACpC,IAAI,CAAC,CAAC,MAAM,oBAAoB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC;YACnD,SAAS;QACV,CAAC;QAED,MAAM,sBAAsB,GAAG,EAAE,CAAC;QAClC,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,uBAAuB,CAAC,MAAM,CAAC,EAAE,CAAC;YAC1D,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,aAAa,CAAC,qCAAqC,CAC1E,IAAI,CAAC,GAAG,EACR,MAAM,EACN,IAAI,CAAC,GAAG,EACR,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAC/B,CAAC;YACF,IAAI,CAAC,KAAK,EAAE,CAAC;gBACZ,SAAS;YACV,CAAC;YACD,KAAK,2BAA2B,CAAC,KAAK,CAAC,CAAC;YACxC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvC,CAAC;QAED,MAAM,KAAK,CAAC,gCAAgC,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;QAC7E,KAAK,uBAAuB,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,iBAAiB,GAAG,CAAC,OAAqC,EAAE,EAAE;IACnE,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,OAAO;IACR,CAAC;IAED,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC","sourcesContent":["import type { IRoom, IUser, ISubscription } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions } from '@rocket.chat/models';\n\nimport { canAccessRoomIdAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport { notifyOnSubscriptionChanged, notifyOnRoomChangedById } from '../../../lib/server/lib/notifyListener';\n\nexport const provideUsersSuggestedGroupKeys = async (\n\tuserId: IUser['_id'],\n\tusersSuggestedGroupKeys: Record<IRoom['_id'], { _id: IUser['_id']; key: string; oldKeys?: ISubscription['oldRoomKeys'] }[]>,\n) => {\n\tconst roomIds = Object.keys(usersSuggestedGroupKeys);\n\n\tif (!roomIds.length) {\n\t\treturn;\n\t}\n\n\t// Process should try to process all rooms i have access instead of dying if one is not\n\tfor await (const roomId of roomIds) {\n\t\tif (!(await canAccessRoomIdAsync(roomId, userId))) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst usersWithSuggestedKeys = [];\n\t\tfor await (const user of usersSuggestedGroupKeys[roomId]) {\n\t\t\tconst { value } = await Subscriptions.setGroupE2ESuggestedKeyAndOldRoomKeys(\n\t\t\t\tuser._id,\n\t\t\t\troomId,\n\t\t\t\tuser.key,\n\t\t\t\tparseOldKeysDates(user.oldKeys),\n\t\t\t);\n\t\t\tif (!value) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvoid notifyOnSubscriptionChanged(value);\n\t\t\tusersWithSuggestedKeys.push(user._id);\n\t\t}\n\n\t\tawait Rooms.removeUsersFromE2EEQueueByRoomId(roomId, usersWithSuggestedKeys);\n\t\tvoid notifyOnRoomChangedById(roomId);\n\t}\n};\n\nconst parseOldKeysDates = (oldKeys: ISubscription['oldRoomKeys']) => {\n\tif (!oldKeys) {\n\t\treturn;\n\t}\n\n\treturn oldKeys.map((key) => ({ ...key, ts: new Date(key.ts) }));\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/server/functions/provideUsersSuggestedGroupKeys.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/e2e/server/functions/provideUsersSuggestedGroupKeys.ts","inputSourceMap":{"version":3,"file":"app/e2e/server/functions/provideUsersSuggestedGroupKeys.ts","sourceRoot":"","sources":["app/e2e/server/functions/provideUsersSuggestedGroupKeys.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAE3D,OAAO,EAAE,oBAAoB,EAAE,MAAM,uDAAuD,CAAC;AAC7F,OAAO,EAAE,2BAA2B,EAAE,uBAAuB,EAAE,MAAM,wCAAwC,CAAC;AAE9G,MAAM,CAAC,MAAM,8BAA8B,GAAG,KAAK,EAClD,MAAoB,EACpB,uBAA2H,EAC1H,EAAE;IACH,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAErD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACrB,OAAO;IACR,CAAC;IAED,uFAAuF;IACvF,IAAI,KAAK,EAAE,MAAM,MAAM,IAAI,OAAO,EAAE,CAAC;QACpC,IAAI,CAAC,CAAC,MAAM,oBAAoB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC;YACnD,SAAS;QACV,CAAC;QAED,MAAM,sBAAsB,GAAG,EAAE,CAAC;QAClC,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,uBAAuB,CAAC,MAAM,CAAC,EAAE,CAAC;YAC1D,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,aAAa,CAAC,qCAAqC,CAC1E,IAAI,CAAC,GAAG,EACR,MAAM,EACN,IAAI,CAAC,GAAG,EACR,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAC/B,CAAC;YACF,IAAI,CAAC,KAAK,EAAE,CAAC;gBACZ,SAAS;YACV,CAAC;YACD,KAAK,2BAA2B,CAAC,KAAK,CAAC,CAAC;YACxC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvC,CAAC;QAED,MAAM,KAAK,CAAC,gCAAgC,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;QAC7E,KAAK,uBAAuB,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,iBAAiB,GAAG,CAAC,OAAqC,EAAE,EAAE;IACnE,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,OAAO;IACR,CAAC;IAED,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC","sourcesContent":["import type { IRoom, IUser, ISubscription } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions } from '@rocket.chat/models';\n\nimport { canAccessRoomIdAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport { notifyOnSubscriptionChanged, notifyOnRoomChangedById } from '../../../lib/server/lib/notifyListener';\n\nexport const provideUsersSuggestedGroupKeys = async (\n\tuserId: IUser['_id'],\n\tusersSuggestedGroupKeys: Record<IRoom['_id'], { _id: IUser['_id']; key: string; oldKeys?: ISubscription['oldRoomKeys'] }[]>,\n) => {\n\tconst roomIds = Object.keys(usersSuggestedGroupKeys);\n\n\tif (!roomIds.length) {\n\t\treturn;\n\t}\n\n\t// Process should try to process all rooms i have access instead of dying if one is not\n\tfor await (const roomId of roomIds) {\n\t\tif (!(await canAccessRoomIdAsync(roomId, userId))) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst usersWithSuggestedKeys = [];\n\t\tfor await (const user of usersSuggestedGroupKeys[roomId]) {\n\t\t\tconst { value } = await Subscriptions.setGroupE2ESuggestedKeyAndOldRoomKeys(\n\t\t\t\tuser._id,\n\t\t\t\troomId,\n\t\t\t\tuser.key,\n\t\t\t\tparseOldKeysDates(user.oldKeys),\n\t\t\t);\n\t\t\tif (!value) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvoid notifyOnSubscriptionChanged(value);\n\t\t\tusersWithSuggestedKeys.push(user._id);\n\t\t}\n\n\t\tawait Rooms.removeUsersFromE2EEQueueByRoomId(roomId, usersWithSuggestedKeys);\n\t\tvoid notifyOnRoomChangedById(roomId);\n\t}\n};\n\nconst parseOldKeysDates = (oldKeys: ISubscription['oldRoomKeys']) => {\n\tif (!oldKeys) {\n\t\treturn;\n\t}\n\n\treturn oldKeys.map((key) => ({ ...key, ts: new Date(key.ts) }));\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      provideUsersSuggestedGroupKeys: () => provideUsersSuggestedGroupKeys\n    });\n    let Rooms, Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 0);\n    let canAccessRoomIdAsync;\n    module.link(\"../../../authorization/server/functions/canAccessRoom\", {\n      canAccessRoomIdAsync(v) {\n        canAccessRoomIdAsync = v;\n      }\n    }, 1);\n    let notifyOnSubscriptionChanged, notifyOnRoomChangedById;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnSubscriptionChanged(v) {\n        notifyOnSubscriptionChanged = v;\n      },\n      notifyOnRoomChangedById(v) {\n        notifyOnRoomChangedById = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const provideUsersSuggestedGroupKeys = async (userId, usersSuggestedGroupKeys) => {\n      const roomIds = Object.keys(usersSuggestedGroupKeys);\n      if (!roomIds.length) {\n        return;\n      }\n      // Process should try to process all rooms i have access instead of dying if one is not\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(roomIds), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const roomId = _step.value;\n          {\n            if (!(await canAccessRoomIdAsync(roomId, userId))) {\n              continue;\n            }\n            const usersWithSuggestedKeys = [];\n            var _iteratorAbruptCompletion2 = false;\n            var _didIteratorError2 = false;\n            var _iteratorError2;\n            try {\n              for (var _iterator2 = _asyncIterator(usersSuggestedGroupKeys[roomId]), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n                const user = _step2.value;\n                {\n                  const {\n                    value\n                  } = await Subscriptions.setGroupE2ESuggestedKeyAndOldRoomKeys(user._id, roomId, user.key, parseOldKeysDates(user.oldKeys));\n                  if (!value) {\n                    continue;\n                  }\n                  void notifyOnSubscriptionChanged(value);\n                  usersWithSuggestedKeys.push(user._id);\n                }\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n                  await _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n            await Rooms.removeUsersFromE2EEQueueByRoomId(roomId, usersWithSuggestedKeys);\n            void notifyOnRoomChangedById(roomId);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    };\n    const parseOldKeysDates = oldKeys => {\n      if (!oldKeys) {\n        return;\n      }\n      return oldKeys.map(key => _objectSpread(_objectSpread({}, key), {}, {\n        ts: new Date(key.ts)\n      }));\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","provideUsersSuggestedGroupKeys","Rooms","Subscriptions","canAccessRoomIdAsync","notifyOnSubscriptionChanged","notifyOnRoomChangedById","__reifyWaitForDeps__","userId","usersSuggestedGroupKeys","roomIds","Object","keys","length","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","roomId","value","usersWithSuggestedKeys","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","user","setGroupE2ESuggestedKeyAndOldRoomKeys","_id","key","parseOldKeysDates","oldKeys","push","err","return","removeUsersFromE2EEQueueByRoomId","map","ts","Date","__reify_async_result__","_reifyError","self","async"],"sources":["app/e2e/server/functions/provideUsersSuggestedGroupKeys.ts"],"sourcesContent":["import type { IRoom, IUser, ISubscription } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions } from '@rocket.chat/models';\n\nimport { canAccessRoomIdAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport { notifyOnSubscriptionChanged, notifyOnRoomChangedById } from '../../../lib/server/lib/notifyListener';\n\nexport const provideUsersSuggestedGroupKeys = async (\n\tuserId: IUser['_id'],\n\tusersSuggestedGroupKeys: Record<IRoom['_id'], { _id: IUser['_id']; key: string; oldKeys?: ISubscription['oldRoomKeys'] }[]>,\n) => {\n\tconst roomIds = Object.keys(usersSuggestedGroupKeys);\n\n\tif (!roomIds.length) {\n\t\treturn;\n\t}\n\n\t// Process should try to process all rooms i have access instead of dying if one is not\n\tfor await (const roomId of roomIds) {\n\t\tif (!(await canAccessRoomIdAsync(roomId, userId))) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst usersWithSuggestedKeys = [];\n\t\tfor await (const user of usersSuggestedGroupKeys[roomId]) {\n\t\t\tconst { value } = await Subscriptions.setGroupE2ESuggestedKeyAndOldRoomKeys(\n\t\t\t\tuser._id,\n\t\t\t\troomId,\n\t\t\t\tuser.key,\n\t\t\t\tparseOldKeysDates(user.oldKeys),\n\t\t\t);\n\t\t\tif (!value) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvoid notifyOnSubscriptionChanged(value);\n\t\t\tusersWithSuggestedKeys.push(user._id);\n\t\t}\n\n\t\tawait Rooms.removeUsersFromE2EEQueueByRoomId(roomId, usersWithSuggestedKeys);\n\t\tvoid notifyOnRoomChangedById(roomId);\n\t}\n};\n\nconst parseOldKeysDates = (oldKeys: ISubscription['oldRoomKeys']) => {\n\tif (!oldKeys) {\n\t\treturn;\n\t}\n\n\treturn oldKeys.map((key) => ({ ...key, ts: new Date(key.ts) }));\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"57addb44f031d8fd8f23446b98415dd2dbbae1bb"}
