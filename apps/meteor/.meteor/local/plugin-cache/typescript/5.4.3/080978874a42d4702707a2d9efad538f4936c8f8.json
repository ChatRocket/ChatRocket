{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/videoConference.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/videoConference.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/videoConference.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/videoConference.ts","sourceRoot":"","sources":["app/api/server/v1/videoConference.ts"],"names":[],"mappings":"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","sourcesContent":["import { VideoConf } from '@rocket.chat/core-services';\nimport type { VideoConference } from '@rocket.chat/core-typings';\nimport {\n\tisVideoConfStartProps,\n\tisVideoConfJoinProps,\n\tisVideoConfCancelProps,\n\tisVideoConfInfoProps,\n\tisVideoConfListProps,\n} from '@rocket.chat/rest-typings';\n\nimport { availabilityErrors } from '../../../../lib/videoConference/constants';\nimport { videoConfProviders } from '../../../../server/lib/videoConfProviders';\nimport { canAccessRoomIdAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nAPI.v1.addRoute(\n\t'video-conference.start',\n\t{ authRequired: true, validateParams: isVideoConfStartProps, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 60000 } },\n\t{\n\t\tasync post() {\n\t\t\tconst { roomId, title, allowRinging: requestRinging } = this.bodyParams;\n\t\t\tconst { userId } = this;\n\t\t\tif (!userId || !(await canAccessRoomIdAsync(roomId, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(userId, 'call-management', roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst providerName = videoConfProviders.getActiveProvider();\n\n\t\t\t\tif (!providerName) {\n\t\t\t\t\tthrow new Error(availabilityErrors.NOT_ACTIVE);\n\t\t\t\t}\n\n\t\t\t\tconst allowRinging = Boolean(requestRinging) && (await hasPermissionAsync(userId, 'videoconf-ring-users'));\n\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...(await VideoConf.start(userId, roomId, { title, allowRinging })),\n\t\t\t\t\t\tproviderName,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\treturn API.v1.failure(await VideoConf.diagnoseProvider(userId, roomId));\n\t\t\t}\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.join',\n\t{ authOrAnonRequired: true, validateParams: isVideoConfJoinProps, rateLimiterOptions: { numRequestsAllowed: 2, intervalTimeInMS: 5000 } },\n\t{\n\t\tasync post() {\n\t\t\tconst { callId, state } = this.bodyParams;\n\t\t\tconst { userId } = this;\n\n\t\t\tconst call = await VideoConf.get(callId);\n\t\t\tif (!call) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomIdAsync(call.rid, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tlet url: string | undefined;\n\n\t\t\ttry {\n\t\t\t\turl = await VideoConf.join(userId, callId, {\n\t\t\t\t\t...(state?.cam !== undefined ? { cam: state.cam } : {}),\n\t\t\t\t\t...(state?.mic !== undefined ? { mic: state.mic } : {}),\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tif (userId) {\n\t\t\t\t\treturn API.v1.failure(await VideoConf.diagnoseProvider(userId, call.rid, call.providerName));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!url) {\n\t\t\t\treturn API.v1.failure('failed-to-get-url');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\turl,\n\t\t\t\tproviderName: call.providerName,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.cancel',\n\t{ authRequired: true, validateParams: isVideoConfCancelProps, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 60000 } },\n\t{\n\t\tasync post() {\n\t\t\tconst { callId } = this.bodyParams;\n\t\t\tconst { userId } = this;\n\n\t\t\tconst call = await VideoConf.get(callId);\n\t\t\tif (!call) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tif (!userId || !(await canAccessRoomIdAsync(call.rid, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tawait VideoConf.cancel(userId, callId);\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.info',\n\t{ authRequired: true, validateParams: isVideoConfInfoProps, rateLimiterOptions: { numRequestsAllowed: 15, intervalTimeInMS: 3000 } },\n\t{\n\t\tasync get() {\n\t\t\tconst { callId } = this.queryParams;\n\t\t\tconst { userId } = this;\n\n\t\t\tconst call = await VideoConf.get(callId);\n\t\t\tif (!call) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tif (!userId || !(await canAccessRoomIdAsync(call.rid, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tconst capabilities = await VideoConf.listProviderCapabilities(call.providerName);\n\n\t\t\treturn API.v1.success({\n\t\t\t\t...(call as VideoConference),\n\t\t\t\tcapabilities,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.list',\n\t{ authRequired: true, validateParams: isVideoConfListProps, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 1000 } },\n\t{\n\t\tasync get() {\n\t\t\tconst { roomId } = this.queryParams;\n\t\t\tconst { userId } = this;\n\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tif (!userId || !(await canAccessRoomIdAsync(roomId, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tconst data = await VideoConf.list(roomId, { offset, count });\n\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.providers',\n\t{ authRequired: true, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 1000 } },\n\t{\n\t\tasync get() {\n\t\t\tconst data = await VideoConf.listProviders();\n\n\t\t\treturn API.v1.success({ data });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.capabilities',\n\t{ authRequired: true, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 1000 } },\n\t{\n\t\tasync get() {\n\t\t\tconst data = await VideoConf.listCapabilities();\n\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/videoConference.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/videoConference.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/videoConference.ts","sourceRoot":"","sources":["app/api/server/v1/videoConference.ts"],"names":[],"mappings":"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","sourcesContent":["import { VideoConf } from '@rocket.chat/core-services';\nimport type { VideoConference } from '@rocket.chat/core-typings';\nimport {\n\tisVideoConfStartProps,\n\tisVideoConfJoinProps,\n\tisVideoConfCancelProps,\n\tisVideoConfInfoProps,\n\tisVideoConfListProps,\n} from '@rocket.chat/rest-typings';\n\nimport { availabilityErrors } from '../../../../lib/videoConference/constants';\nimport { videoConfProviders } from '../../../../server/lib/videoConfProviders';\nimport { canAccessRoomIdAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nAPI.v1.addRoute(\n\t'video-conference.start',\n\t{ authRequired: true, validateParams: isVideoConfStartProps, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 60000 } },\n\t{\n\t\tasync post() {\n\t\t\tconst { roomId, title, allowRinging: requestRinging } = this.bodyParams;\n\t\t\tconst { userId } = this;\n\t\t\tif (!userId || !(await canAccessRoomIdAsync(roomId, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(userId, 'call-management', roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst providerName = videoConfProviders.getActiveProvider();\n\n\t\t\t\tif (!providerName) {\n\t\t\t\t\tthrow new Error(availabilityErrors.NOT_ACTIVE);\n\t\t\t\t}\n\n\t\t\t\tconst allowRinging = Boolean(requestRinging) && (await hasPermissionAsync(userId, 'videoconf-ring-users'));\n\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...(await VideoConf.start(userId, roomId, { title, allowRinging })),\n\t\t\t\t\t\tproviderName,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\treturn API.v1.failure(await VideoConf.diagnoseProvider(userId, roomId));\n\t\t\t}\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.join',\n\t{ authOrAnonRequired: true, validateParams: isVideoConfJoinProps, rateLimiterOptions: { numRequestsAllowed: 2, intervalTimeInMS: 5000 } },\n\t{\n\t\tasync post() {\n\t\t\tconst { callId, state } = this.bodyParams;\n\t\t\tconst { userId } = this;\n\n\t\t\tconst call = await VideoConf.get(callId);\n\t\t\tif (!call) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomIdAsync(call.rid, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tlet url: string | undefined;\n\n\t\t\ttry {\n\t\t\t\turl = await VideoConf.join(userId, callId, {\n\t\t\t\t\t...(state?.cam !== undefined ? { cam: state.cam } : {}),\n\t\t\t\t\t...(state?.mic !== undefined ? { mic: state.mic } : {}),\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tif (userId) {\n\t\t\t\t\treturn API.v1.failure(await VideoConf.diagnoseProvider(userId, call.rid, call.providerName));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!url) {\n\t\t\t\treturn API.v1.failure('failed-to-get-url');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\turl,\n\t\t\t\tproviderName: call.providerName,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.cancel',\n\t{ authRequired: true, validateParams: isVideoConfCancelProps, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 60000 } },\n\t{\n\t\tasync post() {\n\t\t\tconst { callId } = this.bodyParams;\n\t\t\tconst { userId } = this;\n\n\t\t\tconst call = await VideoConf.get(callId);\n\t\t\tif (!call) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tif (!userId || !(await canAccessRoomIdAsync(call.rid, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tawait VideoConf.cancel(userId, callId);\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.info',\n\t{ authRequired: true, validateParams: isVideoConfInfoProps, rateLimiterOptions: { numRequestsAllowed: 15, intervalTimeInMS: 3000 } },\n\t{\n\t\tasync get() {\n\t\t\tconst { callId } = this.queryParams;\n\t\t\tconst { userId } = this;\n\n\t\t\tconst call = await VideoConf.get(callId);\n\t\t\tif (!call) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tif (!userId || !(await canAccessRoomIdAsync(call.rid, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tconst capabilities = await VideoConf.listProviderCapabilities(call.providerName);\n\n\t\t\treturn API.v1.success({\n\t\t\t\t...(call as VideoConference),\n\t\t\t\tcapabilities,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.list',\n\t{ authRequired: true, validateParams: isVideoConfListProps, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 1000 } },\n\t{\n\t\tasync get() {\n\t\t\tconst { roomId } = this.queryParams;\n\t\t\tconst { userId } = this;\n\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tif (!userId || !(await canAccessRoomIdAsync(roomId, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tconst data = await VideoConf.list(roomId, { offset, count });\n\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.providers',\n\t{ authRequired: true, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 1000 } },\n\t{\n\t\tasync get() {\n\t\t\tconst data = await VideoConf.listProviders();\n\n\t\t\treturn API.v1.success({ data });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.capabilities',\n\t{ authRequired: true, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 1000 } },\n\t{\n\t\tasync get() {\n\t\t\tconst data = await VideoConf.listCapabilities();\n\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let VideoConf;\n    module.link(\"@rocket.chat/core-services\", {\n      VideoConf(v) {\n        VideoConf = v;\n      }\n    }, 0);\n    let isVideoConfStartProps, isVideoConfJoinProps, isVideoConfCancelProps, isVideoConfInfoProps, isVideoConfListProps;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isVideoConfStartProps(v) {\n        isVideoConfStartProps = v;\n      },\n      isVideoConfJoinProps(v) {\n        isVideoConfJoinProps = v;\n      },\n      isVideoConfCancelProps(v) {\n        isVideoConfCancelProps = v;\n      },\n      isVideoConfInfoProps(v) {\n        isVideoConfInfoProps = v;\n      },\n      isVideoConfListProps(v) {\n        isVideoConfListProps = v;\n      }\n    }, 1);\n    let availabilityErrors;\n    module.link(\"../../../../lib/videoConference/constants\", {\n      availabilityErrors(v) {\n        availabilityErrors = v;\n      }\n    }, 2);\n    let videoConfProviders;\n    module.link(\"../../../../server/lib/videoConfProviders\", {\n      videoConfProviders(v) {\n        videoConfProviders = v;\n      }\n    }, 3);\n    let canAccessRoomIdAsync;\n    module.link(\"../../../authorization/server/functions/canAccessRoom\", {\n      canAccessRoomIdAsync(v) {\n        canAccessRoomIdAsync = v;\n      }\n    }, 4);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 5);\n    let API;\n    module.link(\"../api\", {\n      API(v) {\n        API = v;\n      }\n    }, 6);\n    let getPaginationItems;\n    module.link(\"../helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 7);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('video-conference.start', {\n      authRequired: true,\n      validateParams: isVideoConfStartProps,\n      rateLimiterOptions: {\n        numRequestsAllowed: 3,\n        intervalTimeInMS: 60000\n      }\n    }, {\n      async post() {\n        const {\n          roomId,\n          title,\n          allowRinging: requestRinging\n        } = this.bodyParams;\n        const {\n          userId\n        } = this;\n        if (!userId || !(await canAccessRoomIdAsync(roomId, userId))) {\n          return API.v1.failure('invalid-params');\n        }\n        if (!(await hasPermissionAsync(userId, 'call-management', roomId))) {\n          return API.v1.unauthorized();\n        }\n        try {\n          const providerName = videoConfProviders.getActiveProvider();\n          if (!providerName) {\n            throw new Error(availabilityErrors.NOT_ACTIVE);\n          }\n          const allowRinging = Boolean(requestRinging) && (await hasPermissionAsync(userId, 'videoconf-ring-users'));\n          return API.v1.success({\n            data: _objectSpread(_objectSpread({}, await VideoConf.start(userId, roomId, {\n              title,\n              allowRinging\n            })), {}, {\n              providerName\n            })\n          });\n        } catch (e) {\n          return API.v1.failure(await VideoConf.diagnoseProvider(userId, roomId));\n        }\n      }\n    });\n    API.v1.addRoute('video-conference.join', {\n      authOrAnonRequired: true,\n      validateParams: isVideoConfJoinProps,\n      rateLimiterOptions: {\n        numRequestsAllowed: 2,\n        intervalTimeInMS: 5000\n      }\n    }, {\n      async post() {\n        const {\n          callId,\n          state\n        } = this.bodyParams;\n        const {\n          userId\n        } = this;\n        const call = await VideoConf.get(callId);\n        if (!call) {\n          return API.v1.failure('invalid-params');\n        }\n        if (!(await canAccessRoomIdAsync(call.rid, userId))) {\n          return API.v1.failure('invalid-params');\n        }\n        let url;\n        try {\n          url = await VideoConf.join(userId, callId, _objectSpread(_objectSpread({}, (state === null || state === void 0 ? void 0 : state.cam) !== undefined ? {\n            cam: state.cam\n          } : {}), (state === null || state === void 0 ? void 0 : state.mic) !== undefined ? {\n            mic: state.mic\n          } : {}));\n        } catch (e) {\n          if (userId) {\n            return API.v1.failure(await VideoConf.diagnoseProvider(userId, call.rid, call.providerName));\n          }\n        }\n        if (!url) {\n          return API.v1.failure('failed-to-get-url');\n        }\n        return API.v1.success({\n          url,\n          providerName: call.providerName\n        });\n      }\n    });\n    API.v1.addRoute('video-conference.cancel', {\n      authRequired: true,\n      validateParams: isVideoConfCancelProps,\n      rateLimiterOptions: {\n        numRequestsAllowed: 3,\n        intervalTimeInMS: 60000\n      }\n    }, {\n      async post() {\n        const {\n          callId\n        } = this.bodyParams;\n        const {\n          userId\n        } = this;\n        const call = await VideoConf.get(callId);\n        if (!call) {\n          return API.v1.failure('invalid-params');\n        }\n        if (!userId || !(await canAccessRoomIdAsync(call.rid, userId))) {\n          return API.v1.failure('invalid-params');\n        }\n        await VideoConf.cancel(userId, callId);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('video-conference.info', {\n      authRequired: true,\n      validateParams: isVideoConfInfoProps,\n      rateLimiterOptions: {\n        numRequestsAllowed: 15,\n        intervalTimeInMS: 3000\n      }\n    }, {\n      async get() {\n        const {\n          callId\n        } = this.queryParams;\n        const {\n          userId\n        } = this;\n        const call = await VideoConf.get(callId);\n        if (!call) {\n          return API.v1.failure('invalid-params');\n        }\n        if (!userId || !(await canAccessRoomIdAsync(call.rid, userId))) {\n          return API.v1.failure('invalid-params');\n        }\n        const capabilities = await VideoConf.listProviderCapabilities(call.providerName);\n        return API.v1.success(_objectSpread(_objectSpread({}, call), {}, {\n          capabilities\n        }));\n      }\n    });\n    API.v1.addRoute('video-conference.list', {\n      authRequired: true,\n      validateParams: isVideoConfListProps,\n      rateLimiterOptions: {\n        numRequestsAllowed: 3,\n        intervalTimeInMS: 1000\n      }\n    }, {\n      async get() {\n        const {\n          roomId\n        } = this.queryParams;\n        const {\n          userId\n        } = this;\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        if (!userId || !(await canAccessRoomIdAsync(roomId, userId))) {\n          return API.v1.failure('invalid-params');\n        }\n        const data = await VideoConf.list(roomId, {\n          offset,\n          count\n        });\n        return API.v1.success(data);\n      }\n    });\n    API.v1.addRoute('video-conference.providers', {\n      authRequired: true,\n      rateLimiterOptions: {\n        numRequestsAllowed: 3,\n        intervalTimeInMS: 1000\n      }\n    }, {\n      async get() {\n        const data = await VideoConf.listProviders();\n        return API.v1.success({\n          data\n        });\n      }\n    });\n    API.v1.addRoute('video-conference.capabilities', {\n      authRequired: true,\n      rateLimiterOptions: {\n        numRequestsAllowed: 3,\n        intervalTimeInMS: 1000\n      }\n    }, {\n      async get() {\n        const data = await VideoConf.listCapabilities();\n        return API.v1.success(data);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","VideoConf","isVideoConfStartProps","isVideoConfJoinProps","isVideoConfCancelProps","isVideoConfInfoProps","isVideoConfListProps","availabilityErrors","videoConfProviders","canAccessRoomIdAsync","hasPermissionAsync","API","getPaginationItems","__reifyWaitForDeps__","v1","addRoute","authRequired","validateParams","rateLimiterOptions","numRequestsAllowed","intervalTimeInMS","post","roomId","title","allowRinging","requestRinging","bodyParams","userId","failure","unauthorized","providerName","getActiveProvider","Error","NOT_ACTIVE","Boolean","success","data","start","e","diagnoseProvider","authOrAnonRequired","callId","state","call","get","rid","url","join","cam","undefined","mic","cancel","queryParams","capabilities","listProviderCapabilities","offset","count","list","listProviders","listCapabilities","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/v1/videoConference.ts"],"sourcesContent":["import { VideoConf } from '@rocket.chat/core-services';\nimport type { VideoConference } from '@rocket.chat/core-typings';\nimport {\n\tisVideoConfStartProps,\n\tisVideoConfJoinProps,\n\tisVideoConfCancelProps,\n\tisVideoConfInfoProps,\n\tisVideoConfListProps,\n} from '@rocket.chat/rest-typings';\n\nimport { availabilityErrors } from '../../../../lib/videoConference/constants';\nimport { videoConfProviders } from '../../../../server/lib/videoConfProviders';\nimport { canAccessRoomIdAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nAPI.v1.addRoute(\n\t'video-conference.start',\n\t{ authRequired: true, validateParams: isVideoConfStartProps, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 60000 } },\n\t{\n\t\tasync post() {\n\t\t\tconst { roomId, title, allowRinging: requestRinging } = this.bodyParams;\n\t\t\tconst { userId } = this;\n\t\t\tif (!userId || !(await canAccessRoomIdAsync(roomId, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tif (!(await hasPermissionAsync(userId, 'call-management', roomId))) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst providerName = videoConfProviders.getActiveProvider();\n\n\t\t\t\tif (!providerName) {\n\t\t\t\t\tthrow new Error(availabilityErrors.NOT_ACTIVE);\n\t\t\t\t}\n\n\t\t\t\tconst allowRinging = Boolean(requestRinging) && (await hasPermissionAsync(userId, 'videoconf-ring-users'));\n\n\t\t\t\treturn API.v1.success({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...(await VideoConf.start(userId, roomId, { title, allowRinging })),\n\t\t\t\t\t\tproviderName,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\treturn API.v1.failure(await VideoConf.diagnoseProvider(userId, roomId));\n\t\t\t}\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.join',\n\t{ authOrAnonRequired: true, validateParams: isVideoConfJoinProps, rateLimiterOptions: { numRequestsAllowed: 2, intervalTimeInMS: 5000 } },\n\t{\n\t\tasync post() {\n\t\t\tconst { callId, state } = this.bodyParams;\n\t\t\tconst { userId } = this;\n\n\t\t\tconst call = await VideoConf.get(callId);\n\t\t\tif (!call) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomIdAsync(call.rid, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tlet url: string | undefined;\n\n\t\t\ttry {\n\t\t\t\turl = await VideoConf.join(userId, callId, {\n\t\t\t\t\t...(state?.cam !== undefined ? { cam: state.cam } : {}),\n\t\t\t\t\t...(state?.mic !== undefined ? { mic: state.mic } : {}),\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tif (userId) {\n\t\t\t\t\treturn API.v1.failure(await VideoConf.diagnoseProvider(userId, call.rid, call.providerName));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!url) {\n\t\t\t\treturn API.v1.failure('failed-to-get-url');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\turl,\n\t\t\t\tproviderName: call.providerName,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.cancel',\n\t{ authRequired: true, validateParams: isVideoConfCancelProps, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 60000 } },\n\t{\n\t\tasync post() {\n\t\t\tconst { callId } = this.bodyParams;\n\t\t\tconst { userId } = this;\n\n\t\t\tconst call = await VideoConf.get(callId);\n\t\t\tif (!call) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tif (!userId || !(await canAccessRoomIdAsync(call.rid, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tawait VideoConf.cancel(userId, callId);\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.info',\n\t{ authRequired: true, validateParams: isVideoConfInfoProps, rateLimiterOptions: { numRequestsAllowed: 15, intervalTimeInMS: 3000 } },\n\t{\n\t\tasync get() {\n\t\t\tconst { callId } = this.queryParams;\n\t\t\tconst { userId } = this;\n\n\t\t\tconst call = await VideoConf.get(callId);\n\t\t\tif (!call) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tif (!userId || !(await canAccessRoomIdAsync(call.rid, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tconst capabilities = await VideoConf.listProviderCapabilities(call.providerName);\n\n\t\t\treturn API.v1.success({\n\t\t\t\t...(call as VideoConference),\n\t\t\t\tcapabilities,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.list',\n\t{ authRequired: true, validateParams: isVideoConfListProps, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 1000 } },\n\t{\n\t\tasync get() {\n\t\t\tconst { roomId } = this.queryParams;\n\t\t\tconst { userId } = this;\n\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\n\t\t\tif (!userId || !(await canAccessRoomIdAsync(roomId, userId))) {\n\t\t\t\treturn API.v1.failure('invalid-params');\n\t\t\t}\n\n\t\t\tconst data = await VideoConf.list(roomId, { offset, count });\n\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.providers',\n\t{ authRequired: true, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 1000 } },\n\t{\n\t\tasync get() {\n\t\t\tconst data = await VideoConf.listProviders();\n\n\t\t\treturn API.v1.success({ data });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'video-conference.capabilities',\n\t{ authRequired: true, rateLimiterOptions: { numRequestsAllowed: 3, intervalTimeInMS: 1000 } },\n\t{\n\t\tasync get() {\n\t\t\tconst data = await VideoConf.listCapabilities();\n\n\t\t\treturn API.v1.success(data);\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"080978874a42d4702707a2d9efad538f4936c8f8"}
