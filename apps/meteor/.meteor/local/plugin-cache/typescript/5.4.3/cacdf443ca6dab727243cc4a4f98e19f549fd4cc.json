{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/LivechatContacts.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/LivechatContacts.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/LivechatContacts.ts","inputSourceMap":{"version":3,"file":"server/models/raw/LivechatContacts.ts","sourceRoot":"","sources":["server/models/raw/LivechatContacts.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAG3D,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,mBAAoB,SAAQ,OAAyB;IACjE,YAAY,EAAM,EAAE,KAA6D;QAChF,KAAK,CAAC,EAAE,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;IACtC,CAAC;IAES,YAAY;QACrB,OAAO;YACN;gBACC,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;gBAChB,MAAM,EAAE,KAAK;gBACb,IAAI,EAAE,kBAAkB;gBACxB,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;aAC1D;YACD;gBACC,GAAG,EAAE,EAAE,gBAAgB,EAAE,CAAC,EAAE;gBAC5B,MAAM,EAAE,KAAK;gBACb,IAAI,EAAE,oBAAoB;gBAC1B,uBAAuB,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;gBACtD,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;aAC1D;YACD;gBACC,GAAG,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE;gBAChC,uBAAuB,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;gBACtD,MAAM,EAAE,KAAK;aACb;SACD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,SAAiB,EAAE,IAA+B;QACrE,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAC/C,EAAE,GAAG,EAAE,SAAS,EAAE,EAClB,EAAE,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EACrC,EAAE,cAAc,EAAE,OAAO,EAAE,CAC3B,CAAC;QACF,OAAO,YAAY,CAAC,KAAyB,CAAC;IAC/C,CAAC;IAED,qBAAqB,CAAC,UAAmB,EAAE,OAAqB;QAC/D,MAAM,WAAW,GAAG,YAAY,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC;QACnD,MAAM,KAAK,GAAqE;YAC/E,GAAG,EAAE;gBACJ,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;gBAChD,EAAE,gBAAgB,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;gBAC5D,EAAE,oBAAoB,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;aAChE;SACD,CAAC;QAEF,OAAO,IAAI,CAAC,aAAa,CACxB,EAAE,GAAG,KAAK,EAAE,EACZ;YACC,YAAY,EAAE,IAAI;YAClB,GAAG,OAAO;SACV,CACD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,SAAiB,EAAE,OAAgC;QACnE,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,kBAAkB,CAAC,SAAiB,EAAE,QAAsC;QAC3E,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;IACnE,CAAC;CACD","sourcesContent":["import type { ILivechatContact, ILivechatContactChannel, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { FindPaginated, ILivechatContactsModel } from '@rocket.chat/model-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Collection, Db, RootFilterOperators, Filter, FindOptions, FindCursor, IndexDescription, UpdateResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class LivechatContactsRaw extends BaseRaw<ILivechatContact> implements ILivechatContactsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ILivechatContact>>) {\n\t\tsuper(db, 'livechat_contact', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: { name: 1 },\n\t\t\t\tunique: false,\n\t\t\t\tname: 'name_insensitive',\n\t\t\t\tcollation: { locale: 'en', strength: 2, caseLevel: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: { 'emails.address': 1 },\n\t\t\t\tunique: false,\n\t\t\t\tname: 'emails_insensitive',\n\t\t\t\tpartialFilterExpression: { emails: { $exists: true } },\n\t\t\t\tcollation: { locale: 'en', strength: 2, caseLevel: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: { 'phones.phoneNumber': 1 },\n\t\t\t\tpartialFilterExpression: { phones: { $exists: true } },\n\t\t\t\tunique: false,\n\t\t\t},\n\t\t];\n\t}\n\n\tasync updateContact(contactId: string, data: Partial<ILivechatContact>): Promise<ILivechatContact> {\n\t\tconst updatedValue = await this.findOneAndUpdate(\n\t\t\t{ _id: contactId },\n\t\t\t{ $set: { ...data, unknown: false } },\n\t\t\t{ returnDocument: 'after' },\n\t\t);\n\t\treturn updatedValue.value as ILivechatContact;\n\t}\n\n\tfindPaginatedContacts(searchText?: string, options?: FindOptions): FindPaginated<FindCursor<ILivechatContact>> {\n\t\tconst searchRegex = escapeRegExp(searchText || '');\n\t\tconst match: Filter<ILivechatContact & RootFilterOperators<ILivechatContact>> = {\n\t\t\t$or: [\n\t\t\t\t{ name: { $regex: searchRegex, $options: 'i' } },\n\t\t\t\t{ 'emails.address': { $regex: searchRegex, $options: 'i' } },\n\t\t\t\t{ 'phones.phoneNumber': { $regex: searchRegex, $options: 'i' } },\n\t\t\t],\n\t\t};\n\n\t\treturn this.findPaginated(\n\t\t\t{ ...match },\n\t\t\t{\n\t\t\t\tallowDiskUse: true,\n\t\t\t\t...options,\n\t\t\t},\n\t\t);\n\t}\n\n\tasync addChannel(contactId: string, channel: ILivechatContactChannel): Promise<void> {\n\t\tawait this.updateOne({ _id: contactId }, { $push: { channels: channel } });\n\t}\n\n\tupdateLastChatById(contactId: string, lastChat: ILivechatContact['lastChat']): Promise<UpdateResult> {\n\t\treturn this.updateOne({ _id: contactId }, { $set: { lastChat } });\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/LivechatContacts.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/LivechatContacts.ts","inputSourceMap":{"version":3,"file":"server/models/raw/LivechatContacts.ts","sourceRoot":"","sources":["server/models/raw/LivechatContacts.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAG3D,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,mBAAoB,SAAQ,OAAyB;IACjE,YAAY,EAAM,EAAE,KAA6D;QAChF,KAAK,CAAC,EAAE,EAAE,kBAAkB,EAAE,KAAK,CAAC,CAAC;IACtC,CAAC;IAES,YAAY;QACrB,OAAO;YACN;gBACC,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;gBAChB,MAAM,EAAE,KAAK;gBACb,IAAI,EAAE,kBAAkB;gBACxB,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;aAC1D;YACD;gBACC,GAAG,EAAE,EAAE,gBAAgB,EAAE,CAAC,EAAE;gBAC5B,MAAM,EAAE,KAAK;gBACb,IAAI,EAAE,oBAAoB;gBAC1B,uBAAuB,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;gBACtD,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;aAC1D;YACD;gBACC,GAAG,EAAE,EAAE,oBAAoB,EAAE,CAAC,EAAE;gBAChC,uBAAuB,EAAE,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE;gBACtD,MAAM,EAAE,KAAK;aACb;SACD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,SAAiB,EAAE,IAA+B;QACrE,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAC/C,EAAE,GAAG,EAAE,SAAS,EAAE,EAClB,EAAE,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EACrC,EAAE,cAAc,EAAE,OAAO,EAAE,CAC3B,CAAC;QACF,OAAO,YAAY,CAAC,KAAyB,CAAC;IAC/C,CAAC;IAED,qBAAqB,CAAC,UAAmB,EAAE,OAAqB;QAC/D,MAAM,WAAW,GAAG,YAAY,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC;QACnD,MAAM,KAAK,GAAqE;YAC/E,GAAG,EAAE;gBACJ,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;gBAChD,EAAE,gBAAgB,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;gBAC5D,EAAE,oBAAoB,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;aAChE;SACD,CAAC;QAEF,OAAO,IAAI,CAAC,aAAa,CACxB,EAAE,GAAG,KAAK,EAAE,EACZ;YACC,YAAY,EAAE,IAAI;YAClB,GAAG,OAAO;SACV,CACD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,SAAiB,EAAE,OAAgC;QACnE,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAC5E,CAAC;IAED,kBAAkB,CAAC,SAAiB,EAAE,QAAsC;QAC3E,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;IACnE,CAAC;CACD","sourcesContent":["import type { ILivechatContact, ILivechatContactChannel, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { FindPaginated, ILivechatContactsModel } from '@rocket.chat/model-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Collection, Db, RootFilterOperators, Filter, FindOptions, FindCursor, IndexDescription, UpdateResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class LivechatContactsRaw extends BaseRaw<ILivechatContact> implements ILivechatContactsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ILivechatContact>>) {\n\t\tsuper(db, 'livechat_contact', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: { name: 1 },\n\t\t\t\tunique: false,\n\t\t\t\tname: 'name_insensitive',\n\t\t\t\tcollation: { locale: 'en', strength: 2, caseLevel: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: { 'emails.address': 1 },\n\t\t\t\tunique: false,\n\t\t\t\tname: 'emails_insensitive',\n\t\t\t\tpartialFilterExpression: { emails: { $exists: true } },\n\t\t\t\tcollation: { locale: 'en', strength: 2, caseLevel: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: { 'phones.phoneNumber': 1 },\n\t\t\t\tpartialFilterExpression: { phones: { $exists: true } },\n\t\t\t\tunique: false,\n\t\t\t},\n\t\t];\n\t}\n\n\tasync updateContact(contactId: string, data: Partial<ILivechatContact>): Promise<ILivechatContact> {\n\t\tconst updatedValue = await this.findOneAndUpdate(\n\t\t\t{ _id: contactId },\n\t\t\t{ $set: { ...data, unknown: false } },\n\t\t\t{ returnDocument: 'after' },\n\t\t);\n\t\treturn updatedValue.value as ILivechatContact;\n\t}\n\n\tfindPaginatedContacts(searchText?: string, options?: FindOptions): FindPaginated<FindCursor<ILivechatContact>> {\n\t\tconst searchRegex = escapeRegExp(searchText || '');\n\t\tconst match: Filter<ILivechatContact & RootFilterOperators<ILivechatContact>> = {\n\t\t\t$or: [\n\t\t\t\t{ name: { $regex: searchRegex, $options: 'i' } },\n\t\t\t\t{ 'emails.address': { $regex: searchRegex, $options: 'i' } },\n\t\t\t\t{ 'phones.phoneNumber': { $regex: searchRegex, $options: 'i' } },\n\t\t\t],\n\t\t};\n\n\t\treturn this.findPaginated(\n\t\t\t{ ...match },\n\t\t\t{\n\t\t\t\tallowDiskUse: true,\n\t\t\t\t...options,\n\t\t\t},\n\t\t);\n\t}\n\n\tasync addChannel(contactId: string, channel: ILivechatContactChannel): Promise<void> {\n\t\tawait this.updateOne({ _id: contactId }, { $push: { channels: channel } });\n\t}\n\n\tupdateLastChatById(contactId: string, lastChat: ILivechatContact['lastChat']): Promise<UpdateResult> {\n\t\treturn this.updateOne({ _id: contactId }, { $set: { lastChat } });\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      LivechatContactsRaw: () => LivechatContactsRaw\n    });\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 0);\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class LivechatContactsRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'livechat_contact', trash);\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            name: 1\n          },\n          unique: false,\n          name: 'name_insensitive',\n          collation: {\n            locale: 'en',\n            strength: 2,\n            caseLevel: false\n          }\n        }, {\n          key: {\n            'emails.address': 1\n          },\n          unique: false,\n          name: 'emails_insensitive',\n          partialFilterExpression: {\n            emails: {\n              $exists: true\n            }\n          },\n          collation: {\n            locale: 'en',\n            strength: 2,\n            caseLevel: false\n          }\n        }, {\n          key: {\n            'phones.phoneNumber': 1\n          },\n          partialFilterExpression: {\n            phones: {\n              $exists: true\n            }\n          },\n          unique: false\n        }];\n      }\n      async updateContact(contactId, data) {\n        const updatedValue = await this.findOneAndUpdate({\n          _id: contactId\n        }, {\n          $set: _objectSpread(_objectSpread({}, data), {}, {\n            unknown: false\n          })\n        }, {\n          returnDocument: 'after'\n        });\n        return updatedValue.value;\n      }\n      findPaginatedContacts(searchText, options) {\n        const searchRegex = escapeRegExp(searchText || '');\n        const match = {\n          $or: [{\n            name: {\n              $regex: searchRegex,\n              $options: 'i'\n            }\n          }, {\n            'emails.address': {\n              $regex: searchRegex,\n              $options: 'i'\n            }\n          }, {\n            'phones.phoneNumber': {\n              $regex: searchRegex,\n              $options: 'i'\n            }\n          }]\n        };\n        return this.findPaginated(_objectSpread({}, match), _objectSpread({\n          allowDiskUse: true\n        }, options));\n      }\n      async addChannel(contactId, channel) {\n        await this.updateOne({\n          _id: contactId\n        }, {\n          $push: {\n            channels: channel\n          }\n        });\n      }\n      updateLastChatById(contactId, lastChat) {\n        return this.updateOne({\n          _id: contactId\n        }, {\n          $set: {\n            lastChat\n          }\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","LivechatContactsRaw","escapeRegExp","BaseRaw","__reifyWaitForDeps__","constructor","db","trash","modelIndexes","key","name","unique","collation","locale","strength","caseLevel","partialFilterExpression","emails","$exists","phones","updateContact","contactId","data","updatedValue","findOneAndUpdate","_id","$set","unknown","returnDocument","value","findPaginatedContacts","searchText","options","searchRegex","match","$or","$regex","$options","findPaginated","allowDiskUse","addChannel","channel","updateOne","$push","channels","updateLastChatById","lastChat","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/LivechatContacts.ts"],"sourcesContent":["import type { ILivechatContact, ILivechatContactChannel, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { FindPaginated, ILivechatContactsModel } from '@rocket.chat/model-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Collection, Db, RootFilterOperators, Filter, FindOptions, FindCursor, IndexDescription, UpdateResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class LivechatContactsRaw extends BaseRaw<ILivechatContact> implements ILivechatContactsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ILivechatContact>>) {\n\t\tsuper(db, 'livechat_contact', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: { name: 1 },\n\t\t\t\tunique: false,\n\t\t\t\tname: 'name_insensitive',\n\t\t\t\tcollation: { locale: 'en', strength: 2, caseLevel: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: { 'emails.address': 1 },\n\t\t\t\tunique: false,\n\t\t\t\tname: 'emails_insensitive',\n\t\t\t\tpartialFilterExpression: { emails: { $exists: true } },\n\t\t\t\tcollation: { locale: 'en', strength: 2, caseLevel: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: { 'phones.phoneNumber': 1 },\n\t\t\t\tpartialFilterExpression: { phones: { $exists: true } },\n\t\t\t\tunique: false,\n\t\t\t},\n\t\t];\n\t}\n\n\tasync updateContact(contactId: string, data: Partial<ILivechatContact>): Promise<ILivechatContact> {\n\t\tconst updatedValue = await this.findOneAndUpdate(\n\t\t\t{ _id: contactId },\n\t\t\t{ $set: { ...data, unknown: false } },\n\t\t\t{ returnDocument: 'after' },\n\t\t);\n\t\treturn updatedValue.value as ILivechatContact;\n\t}\n\n\tfindPaginatedContacts(searchText?: string, options?: FindOptions): FindPaginated<FindCursor<ILivechatContact>> {\n\t\tconst searchRegex = escapeRegExp(searchText || '');\n\t\tconst match: Filter<ILivechatContact & RootFilterOperators<ILivechatContact>> = {\n\t\t\t$or: [\n\t\t\t\t{ name: { $regex: searchRegex, $options: 'i' } },\n\t\t\t\t{ 'emails.address': { $regex: searchRegex, $options: 'i' } },\n\t\t\t\t{ 'phones.phoneNumber': { $regex: searchRegex, $options: 'i' } },\n\t\t\t],\n\t\t};\n\n\t\treturn this.findPaginated(\n\t\t\t{ ...match },\n\t\t\t{\n\t\t\t\tallowDiskUse: true,\n\t\t\t\t...options,\n\t\t\t},\n\t\t);\n\t}\n\n\tasync addChannel(contactId: string, channel: ILivechatContactChannel): Promise<void> {\n\t\tawait this.updateOne({ _id: contactId }, { $push: { channels: channel } });\n\t}\n\n\tupdateLastChatById(contactId: string, lastChat: ILivechatContact['lastChat']): Promise<UpdateResult> {\n\t\treturn this.updateOne({ _id: contactId }, { $set: { lastChat } });\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"cacdf443ca6dab727243cc4a4f98e19f549fd4cc"}
