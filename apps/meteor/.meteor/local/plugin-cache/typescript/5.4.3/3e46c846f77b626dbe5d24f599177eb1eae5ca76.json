{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/cas/loginHandler.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/cas/loginHandler.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/cas/loginHandler.ts","inputSourceMap":{"version":3,"file":"server/lib/cas/loginHandler.ts","sourceRoot":"","sources":["server/lib/cas/loginHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { CredentialTokens, Users } from '@rocket.chat/models';\nimport { getObjectKeys, wrapExceptions } from '@rocket.chat/tools';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport { createNewUser } from './createNewUser';\nimport { findExistingCASUser } from './findExistingCASUser';\nimport { logger } from './logger';\nimport { _setRealName } from '../../../app/lib/server/functions/setRealName';\nimport { settings } from '../../../app/settings/server';\n\nexport const loginHandlerCAS = async (options: any): Promise<undefined | Accounts.LoginMethodResult> => {\n\tif (!options.cas) {\n\t\treturn undefined;\n\t}\n\n\t// TODO: Sync wrapper due to the chain conversion to async models\n\tconst credentials = await CredentialTokens.findOneNotExpiredById(options.cas.credentialToken);\n\tif (credentials === undefined || credentials === null) {\n\t\tthrow new Meteor.Error(Accounts.LoginCancelledError.numericError, 'no matching login attempt found');\n\t}\n\n\tconst result = credentials.userInfo;\n\tconst syncUserDataFieldMap = settings.get<string>('CAS_Sync_User_Data_FieldMap').trim();\n\tconst casVersion = parseFloat(settings.get('CAS_version') ?? '1.0');\n\tconst syncEnabled = settings.get('CAS_Sync_User_Data_Enabled');\n\tconst flagEmailAsVerified = settings.get<boolean>('Accounts_Verify_Email_For_External_Accounts');\n\tconst userCreationEnabled = settings.get('CAS_Creation_User_Enabled');\n\n\tconst { username, attributes: credentialsAttributes } = result as { username: string; attributes: Record<string, string[]> };\n\n\t// We have these\n\tconst externalAttributes: Record<string, string> = {\n\t\tusername,\n\t};\n\n\t// We need these\n\tconst internalAttributes: Record<string, string | undefined> = {\n\t\temail: undefined,\n\t\tname: undefined,\n\t\tusername: undefined,\n\t\trooms: undefined,\n\t};\n\n\t// Import response attributes\n\tif (casVersion >= 2.0) {\n\t\t// Clean & import external attributes\n\t\tfor await (const [externalName, value] of Object.entries(credentialsAttributes)) {\n\t\t\tif (value) {\n\t\t\t\texternalAttributes[externalName] = value[0];\n\t\t\t}\n\t\t}\n\t}\n\n\t// Source internal attributes\n\tif (syncUserDataFieldMap) {\n\t\t// Our mapping table: key(int_attr) -> value(ext_attr)\n\t\t// Spoken: Source this internal attribute from these external attributes\n\t\tconst attributeMap = wrapExceptions(() => JSON.parse(syncUserDataFieldMap) as Record<string, any>).catch((err) => {\n\t\t\tlogger.error({ msg: 'Invalid JSON for attribute mapping', err });\n\t\t\tthrow err;\n\t\t});\n\n\t\tfor await (const [internalName, source] of Object.entries(attributeMap)) {\n\t\t\tif (!source || typeof source.valueOf() !== 'string') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet replacedValue = source as string;\n\t\t\tfor await (const externalName of getObjectKeys(externalAttributes)) {\n\t\t\t\treplacedValue = replacedValue.replace(`%${externalName}%`, externalAttributes[externalName]);\n\t\t\t}\n\n\t\t\tif (source !== replacedValue) {\n\t\t\t\tinternalAttributes[internalName] = replacedValue;\n\t\t\t\tlogger.debug(`Sourced internal attribute: ${internalName} = ${replacedValue}`);\n\t\t\t} else {\n\t\t\t\tlogger.debug(`Sourced internal attribute: ${internalName} skipped.`);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Search existing user by its external service id\n\tlogger.debug(`Looking up user by id: ${username}`);\n\t// First, look for a user that has logged in from CAS with this username before\n\tconst user = await findExistingCASUser(username);\n\n\tif (user) {\n\t\tlogger.debug(`Using existing user for '${username}' with id: ${user._id}`);\n\t\tif (syncEnabled) {\n\t\t\tlogger.debug('Syncing user attributes');\n\t\t\t// Update name\n\t\t\tif (internalAttributes.name) {\n\t\t\t\tawait _setRealName(user._id, internalAttributes.name);\n\t\t\t}\n\n\t\t\t// Update email\n\t\t\tif (internalAttributes.email) {\n\t\t\t\tawait Users.updateOne(\n\t\t\t\t\t{ _id: user._id },\n\t\t\t\t\t{ $set: { emails: [{ address: internalAttributes.email, verified: flagEmailAsVerified }] } },\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn { userId: user._id };\n\t}\n\n\tif (!userCreationEnabled) {\n\t\t// Should fail as no user exist and can't be created\n\t\tlogger.debug(`User \"${username}\" does not exist yet, will fail as no user creation is enabled`);\n\t\tthrow new Meteor.Error(Accounts.LoginCancelledError.numericError, 'no matching user account found');\n\t}\n\n\tconst newUser = await createNewUser(username, {\n\t\tattributes: internalAttributes,\n\t\tcasVersion,\n\t\tflagEmailAsVerified,\n\t});\n\n\treturn { userId: newUser._id };\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/cas/loginHandler.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/cas/loginHandler.ts","inputSourceMap":{"version":3,"file":"server/lib/cas/loginHandler.ts","sourceRoot":"","sources":["server/lib/cas/loginHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { CredentialTokens, Users } from '@rocket.chat/models';\nimport { getObjectKeys, wrapExceptions } from '@rocket.chat/tools';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport { createNewUser } from './createNewUser';\nimport { findExistingCASUser } from './findExistingCASUser';\nimport { logger } from './logger';\nimport { _setRealName } from '../../../app/lib/server/functions/setRealName';\nimport { settings } from '../../../app/settings/server';\n\nexport const loginHandlerCAS = async (options: any): Promise<undefined | Accounts.LoginMethodResult> => {\n\tif (!options.cas) {\n\t\treturn undefined;\n\t}\n\n\t// TODO: Sync wrapper due to the chain conversion to async models\n\tconst credentials = await CredentialTokens.findOneNotExpiredById(options.cas.credentialToken);\n\tif (credentials === undefined || credentials === null) {\n\t\tthrow new Meteor.Error(Accounts.LoginCancelledError.numericError, 'no matching login attempt found');\n\t}\n\n\tconst result = credentials.userInfo;\n\tconst syncUserDataFieldMap = settings.get<string>('CAS_Sync_User_Data_FieldMap').trim();\n\tconst casVersion = parseFloat(settings.get('CAS_version') ?? '1.0');\n\tconst syncEnabled = settings.get('CAS_Sync_User_Data_Enabled');\n\tconst flagEmailAsVerified = settings.get<boolean>('Accounts_Verify_Email_For_External_Accounts');\n\tconst userCreationEnabled = settings.get('CAS_Creation_User_Enabled');\n\n\tconst { username, attributes: credentialsAttributes } = result as { username: string; attributes: Record<string, string[]> };\n\n\t// We have these\n\tconst externalAttributes: Record<string, string> = {\n\t\tusername,\n\t};\n\n\t// We need these\n\tconst internalAttributes: Record<string, string | undefined> = {\n\t\temail: undefined,\n\t\tname: undefined,\n\t\tusername: undefined,\n\t\trooms: undefined,\n\t};\n\n\t// Import response attributes\n\tif (casVersion >= 2.0) {\n\t\t// Clean & import external attributes\n\t\tfor await (const [externalName, value] of Object.entries(credentialsAttributes)) {\n\t\t\tif (value) {\n\t\t\t\texternalAttributes[externalName] = value[0];\n\t\t\t}\n\t\t}\n\t}\n\n\t// Source internal attributes\n\tif (syncUserDataFieldMap) {\n\t\t// Our mapping table: key(int_attr) -> value(ext_attr)\n\t\t// Spoken: Source this internal attribute from these external attributes\n\t\tconst attributeMap = wrapExceptions(() => JSON.parse(syncUserDataFieldMap) as Record<string, any>).catch((err) => {\n\t\t\tlogger.error({ msg: 'Invalid JSON for attribute mapping', err });\n\t\t\tthrow err;\n\t\t});\n\n\t\tfor await (const [internalName, source] of Object.entries(attributeMap)) {\n\t\t\tif (!source || typeof source.valueOf() !== 'string') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet replacedValue = source as string;\n\t\t\tfor await (const externalName of getObjectKeys(externalAttributes)) {\n\t\t\t\treplacedValue = replacedValue.replace(`%${externalName}%`, externalAttributes[externalName]);\n\t\t\t}\n\n\t\t\tif (source !== replacedValue) {\n\t\t\t\tinternalAttributes[internalName] = replacedValue;\n\t\t\t\tlogger.debug(`Sourced internal attribute: ${internalName} = ${replacedValue}`);\n\t\t\t} else {\n\t\t\t\tlogger.debug(`Sourced internal attribute: ${internalName} skipped.`);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Search existing user by its external service id\n\tlogger.debug(`Looking up user by id: ${username}`);\n\t// First, look for a user that has logged in from CAS with this username before\n\tconst user = await findExistingCASUser(username);\n\n\tif (user) {\n\t\tlogger.debug(`Using existing user for '${username}' with id: ${user._id}`);\n\t\tif (syncEnabled) {\n\t\t\tlogger.debug('Syncing user attributes');\n\t\t\t// Update name\n\t\t\tif (internalAttributes.name) {\n\t\t\t\tawait _setRealName(user._id, internalAttributes.name);\n\t\t\t}\n\n\t\t\t// Update email\n\t\t\tif (internalAttributes.email) {\n\t\t\t\tawait Users.updateOne(\n\t\t\t\t\t{ _id: user._id },\n\t\t\t\t\t{ $set: { emails: [{ address: internalAttributes.email, verified: flagEmailAsVerified }] } },\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn { userId: user._id };\n\t}\n\n\tif (!userCreationEnabled) {\n\t\t// Should fail as no user exist and can't be created\n\t\tlogger.debug(`User \"${username}\" does not exist yet, will fail as no user creation is enabled`);\n\t\tthrow new Meteor.Error(Accounts.LoginCancelledError.numericError, 'no matching user account found');\n\t}\n\n\tconst newUser = await createNewUser(username, {\n\t\tattributes: internalAttributes,\n\t\tcasVersion,\n\t\tflagEmailAsVerified,\n\t});\n\n\treturn { userId: newUser._id };\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      loginHandlerCAS: () => loginHandlerCAS\n    });\n    let CredentialTokens, Users;\n    module.link(\"@rocket.chat/models\", {\n      CredentialTokens(v) {\n        CredentialTokens = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let getObjectKeys, wrapExceptions;\n    module.link(\"@rocket.chat/tools\", {\n      getObjectKeys(v) {\n        getObjectKeys = v;\n      },\n      wrapExceptions(v) {\n        wrapExceptions = v;\n      }\n    }, 1);\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 2);\n    let createNewUser;\n    module.link(\"./createNewUser\", {\n      createNewUser(v) {\n        createNewUser = v;\n      }\n    }, 3);\n    let findExistingCASUser;\n    module.link(\"./findExistingCASUser\", {\n      findExistingCASUser(v) {\n        findExistingCASUser = v;\n      }\n    }, 4);\n    let logger;\n    module.link(\"./logger\", {\n      logger(v) {\n        logger = v;\n      }\n    }, 5);\n    let _setRealName;\n    module.link(\"../../../app/lib/server/functions/setRealName\", {\n      _setRealName(v) {\n        _setRealName = v;\n      }\n    }, 6);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 7);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const loginHandlerCAS = async options => {\n      var _settings$get;\n      if (!options.cas) {\n        return undefined;\n      }\n      // TODO: Sync wrapper due to the chain conversion to async models\n      const credentials = await CredentialTokens.findOneNotExpiredById(options.cas.credentialToken);\n      if (credentials === undefined || credentials === null) {\n        throw new Meteor.Error(Accounts.LoginCancelledError.numericError, 'no matching login attempt found');\n      }\n      const result = credentials.userInfo;\n      const syncUserDataFieldMap = settings.get('CAS_Sync_User_Data_FieldMap').trim();\n      const casVersion = parseFloat((_settings$get = settings.get('CAS_version')) !== null && _settings$get !== void 0 ? _settings$get : '1.0');\n      const syncEnabled = settings.get('CAS_Sync_User_Data_Enabled');\n      const flagEmailAsVerified = settings.get('Accounts_Verify_Email_For_External_Accounts');\n      const userCreationEnabled = settings.get('CAS_Creation_User_Enabled');\n      const {\n        username,\n        attributes: credentialsAttributes\n      } = result;\n      // We have these\n      const externalAttributes = {\n        username\n      };\n      // We need these\n      const internalAttributes = {\n        email: undefined,\n        name: undefined,\n        username: undefined,\n        rooms: undefined\n      };\n      // Import response attributes\n      if (casVersion >= 2.0) {\n        // Clean & import external attributes\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(Object.entries(credentialsAttributes)), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const [externalName, value] = _step.value;\n            {\n              if (value) {\n                externalAttributes[externalName] = value[0];\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n      // Source internal attributes\n      if (syncUserDataFieldMap) {\n        // Our mapping table: key(int_attr) -> value(ext_attr)\n        // Spoken: Source this internal attribute from these external attributes\n        const attributeMap = wrapExceptions(() => JSON.parse(syncUserDataFieldMap)).catch(err => {\n          logger.error({\n            msg: 'Invalid JSON for attribute mapping',\n            err\n          });\n          throw err;\n        });\n        var _iteratorAbruptCompletion2 = false;\n        var _didIteratorError2 = false;\n        var _iteratorError2;\n        try {\n          for (var _iterator2 = _asyncIterator(Object.entries(attributeMap)), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n            const [internalName, source] = _step2.value;\n            {\n              if (!source || typeof source.valueOf() !== 'string') {\n                continue;\n              }\n              let replacedValue = source;\n              var _iteratorAbruptCompletion3 = false;\n              var _didIteratorError3 = false;\n              var _iteratorError3;\n              try {\n                for (var _iterator3 = _asyncIterator(getObjectKeys(externalAttributes)), _step3; _iteratorAbruptCompletion3 = !(_step3 = await _iterator3.next()).done; _iteratorAbruptCompletion3 = false) {\n                  const externalName = _step3.value;\n                  {\n                    replacedValue = replacedValue.replace(\"%\".concat(externalName, \"%\"), externalAttributes[externalName]);\n                  }\n                }\n              } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n              } finally {\n                try {\n                  if (_iteratorAbruptCompletion3 && _iterator3.return != null) {\n                    await _iterator3.return();\n                  }\n                } finally {\n                  if (_didIteratorError3) {\n                    throw _iteratorError3;\n                  }\n                }\n              }\n              if (source !== replacedValue) {\n                internalAttributes[internalName] = replacedValue;\n                logger.debug(\"Sourced internal attribute: \".concat(internalName, \" = \").concat(replacedValue));\n              } else {\n                logger.debug(\"Sourced internal attribute: \".concat(internalName, \" skipped.\"));\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n              await _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n      // Search existing user by its external service id\n      logger.debug(\"Looking up user by id: \".concat(username));\n      // First, look for a user that has logged in from CAS with this username before\n      const user = await findExistingCASUser(username);\n      if (user) {\n        logger.debug(\"Using existing user for '\".concat(username, \"' with id: \").concat(user._id));\n        if (syncEnabled) {\n          logger.debug('Syncing user attributes');\n          // Update name\n          if (internalAttributes.name) {\n            await _setRealName(user._id, internalAttributes.name);\n          }\n          // Update email\n          if (internalAttributes.email) {\n            await Users.updateOne({\n              _id: user._id\n            }, {\n              $set: {\n                emails: [{\n                  address: internalAttributes.email,\n                  verified: flagEmailAsVerified\n                }]\n              }\n            });\n          }\n        }\n        return {\n          userId: user._id\n        };\n      }\n      if (!userCreationEnabled) {\n        // Should fail as no user exist and can't be created\n        logger.debug(\"User \\\"\".concat(username, \"\\\" does not exist yet, will fail as no user creation is enabled\"));\n        throw new Meteor.Error(Accounts.LoginCancelledError.numericError, 'no matching user account found');\n      }\n      const newUser = await createNewUser(username, {\n        attributes: internalAttributes,\n        casVersion,\n        flagEmailAsVerified\n      });\n      return {\n        userId: newUser._id\n      };\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","loginHandlerCAS","CredentialTokens","Users","getObjectKeys","wrapExceptions","Accounts","createNewUser","findExistingCASUser","logger","_setRealName","settings","__reifyWaitForDeps__","options","_settings$get","cas","undefined","credentials","findOneNotExpiredById","credentialToken","Meteor","Error","LoginCancelledError","numericError","result","userInfo","syncUserDataFieldMap","get","trim","casVersion","parseFloat","syncEnabled","flagEmailAsVerified","userCreationEnabled","username","attributes","credentialsAttributes","externalAttributes","internalAttributes","email","name","rooms","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","Object","entries","_step","next","done","externalName","value","err","return","attributeMap","JSON","parse","catch","error","msg","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","internalName","source","valueOf","replacedValue","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","replace","concat","debug","user","_id","updateOne","$set","emails","address","verified","userId","newUser","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/cas/loginHandler.ts"],"sourcesContent":["import { CredentialTokens, Users } from '@rocket.chat/models';\nimport { getObjectKeys, wrapExceptions } from '@rocket.chat/tools';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport { createNewUser } from './createNewUser';\nimport { findExistingCASUser } from './findExistingCASUser';\nimport { logger } from './logger';\nimport { _setRealName } from '../../../app/lib/server/functions/setRealName';\nimport { settings } from '../../../app/settings/server';\n\nexport const loginHandlerCAS = async (options: any): Promise<undefined | Accounts.LoginMethodResult> => {\n\tif (!options.cas) {\n\t\treturn undefined;\n\t}\n\n\t// TODO: Sync wrapper due to the chain conversion to async models\n\tconst credentials = await CredentialTokens.findOneNotExpiredById(options.cas.credentialToken);\n\tif (credentials === undefined || credentials === null) {\n\t\tthrow new Meteor.Error(Accounts.LoginCancelledError.numericError, 'no matching login attempt found');\n\t}\n\n\tconst result = credentials.userInfo;\n\tconst syncUserDataFieldMap = settings.get<string>('CAS_Sync_User_Data_FieldMap').trim();\n\tconst casVersion = parseFloat(settings.get('CAS_version') ?? '1.0');\n\tconst syncEnabled = settings.get('CAS_Sync_User_Data_Enabled');\n\tconst flagEmailAsVerified = settings.get<boolean>('Accounts_Verify_Email_For_External_Accounts');\n\tconst userCreationEnabled = settings.get('CAS_Creation_User_Enabled');\n\n\tconst { username, attributes: credentialsAttributes } = result as { username: string; attributes: Record<string, string[]> };\n\n\t// We have these\n\tconst externalAttributes: Record<string, string> = {\n\t\tusername,\n\t};\n\n\t// We need these\n\tconst internalAttributes: Record<string, string | undefined> = {\n\t\temail: undefined,\n\t\tname: undefined,\n\t\tusername: undefined,\n\t\trooms: undefined,\n\t};\n\n\t// Import response attributes\n\tif (casVersion >= 2.0) {\n\t\t// Clean & import external attributes\n\t\tfor await (const [externalName, value] of Object.entries(credentialsAttributes)) {\n\t\t\tif (value) {\n\t\t\t\texternalAttributes[externalName] = value[0];\n\t\t\t}\n\t\t}\n\t}\n\n\t// Source internal attributes\n\tif (syncUserDataFieldMap) {\n\t\t// Our mapping table: key(int_attr) -> value(ext_attr)\n\t\t// Spoken: Source this internal attribute from these external attributes\n\t\tconst attributeMap = wrapExceptions(() => JSON.parse(syncUserDataFieldMap) as Record<string, any>).catch((err) => {\n\t\t\tlogger.error({ msg: 'Invalid JSON for attribute mapping', err });\n\t\t\tthrow err;\n\t\t});\n\n\t\tfor await (const [internalName, source] of Object.entries(attributeMap)) {\n\t\t\tif (!source || typeof source.valueOf() !== 'string') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet replacedValue = source as string;\n\t\t\tfor await (const externalName of getObjectKeys(externalAttributes)) {\n\t\t\t\treplacedValue = replacedValue.replace(`%${externalName}%`, externalAttributes[externalName]);\n\t\t\t}\n\n\t\t\tif (source !== replacedValue) {\n\t\t\t\tinternalAttributes[internalName] = replacedValue;\n\t\t\t\tlogger.debug(`Sourced internal attribute: ${internalName} = ${replacedValue}`);\n\t\t\t} else {\n\t\t\t\tlogger.debug(`Sourced internal attribute: ${internalName} skipped.`);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Search existing user by its external service id\n\tlogger.debug(`Looking up user by id: ${username}`);\n\t// First, look for a user that has logged in from CAS with this username before\n\tconst user = await findExistingCASUser(username);\n\n\tif (user) {\n\t\tlogger.debug(`Using existing user for '${username}' with id: ${user._id}`);\n\t\tif (syncEnabled) {\n\t\t\tlogger.debug('Syncing user attributes');\n\t\t\t// Update name\n\t\t\tif (internalAttributes.name) {\n\t\t\t\tawait _setRealName(user._id, internalAttributes.name);\n\t\t\t}\n\n\t\t\t// Update email\n\t\t\tif (internalAttributes.email) {\n\t\t\t\tawait Users.updateOne(\n\t\t\t\t\t{ _id: user._id },\n\t\t\t\t\t{ $set: { emails: [{ address: internalAttributes.email, verified: flagEmailAsVerified }] } },\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn { userId: user._id };\n\t}\n\n\tif (!userCreationEnabled) {\n\t\t// Should fail as no user exist and can't be created\n\t\tlogger.debug(`User \"${username}\" does not exist yet, will fail as no user creation is enabled`);\n\t\tthrow new Meteor.Error(Accounts.LoginCancelledError.numericError, 'no matching user account found');\n\t}\n\n\tconst newUser = await createNewUser(username, {\n\t\tattributes: internalAttributes,\n\t\tcasVersion,\n\t\tflagEmailAsVerified,\n\t});\n\n\treturn { userId: newUser._id };\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"3e46c846f77b626dbe5d24f599177eb1eae5ca76"}
