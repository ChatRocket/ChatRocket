{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveMarkdownParser.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/messages/hooks/BeforeSaveMarkdownParser.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveMarkdownParser.ts","inputSourceMap":{"version":3,"file":"server/services/messages/hooks/BeforeSaveMarkdownParser.ts","sourceRoot":"","sources":["server/services/messages/hooks/BeforeSaveMarkdownParser.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAEzF,OAAO,EAAE,KAAK,EAAE,MAAM,6BAA6B,CAAC;AAYpD,MAAM,OAAO,wBAAwB;IAChB;IAApB,YAAoB,UAAmB,IAAI;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAC1C,QAAQ;IACT,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,MAAM,EAA+C;QACnF,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACnB,OAAO,OAAO,CAAC;QAChB,CAAC;QAED,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC;YACjF,OAAO,OAAO,CAAC;QAChB,CAAC;QAED,IAAI,CAAC;YACJ,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;gBACjB,OAAO,CAAC,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YACzC,CAAC;YAED,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC;gBAC3C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAC1F,CAAC;QACF,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,0DAA0D;QAC7E,CAAC;QAED,OAAO,OAAO,CAAC;IAChB,CAAC;CACD","sourcesContent":["import { isE2EEMessage, isOTRMessage, isOTRAckMessage } from '@rocket.chat/core-typings';\nimport type { IMessage } from '@rocket.chat/core-typings';\nimport { parse } from '@rocket.chat/message-parser';\n\ntype ParserConfig = {\n\tcolors?: boolean;\n\temoticons?: boolean;\n\tcustomDomains?: string[];\n\tkatex?: {\n\t\tdollarSyntax: boolean;\n\t\tparenthesisSyntax: boolean;\n\t};\n};\n\nexport class BeforeSaveMarkdownParser {\n\tconstructor(private enabled: boolean = true) {\n\t\t// no op\n\t}\n\n\tasync parseMarkdown({ message, config }: { message: IMessage; config: ParserConfig }): Promise<IMessage> {\n\t\tif (!this.enabled) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (isE2EEMessage(message) || isOTRMessage(message) || isOTRAckMessage(message)) {\n\t\t\treturn message;\n\t\t}\n\n\t\ttry {\n\t\t\tif (message.msg) {\n\t\t\t\tmessage.md = parse(message.msg, config);\n\t\t\t}\n\n\t\t\tif (message.attachments?.[0]?.description) {\n\t\t\t\tmessage.attachments[0].descriptionMd = parse(message.attachments[0].description, config);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e); // errors logged while the parser is at experimental stage\n\t\t}\n\n\t\treturn message;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveMarkdownParser.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/messages/hooks/BeforeSaveMarkdownParser.ts","inputSourceMap":{"version":3,"file":"server/services/messages/hooks/BeforeSaveMarkdownParser.ts","sourceRoot":"","sources":["server/services/messages/hooks/BeforeSaveMarkdownParser.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAEzF,OAAO,EAAE,KAAK,EAAE,MAAM,6BAA6B,CAAC;AAYpD,MAAM,OAAO,wBAAwB;IAChB;IAApB,YAAoB,UAAmB,IAAI;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAC1C,QAAQ;IACT,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,MAAM,EAA+C;QACnF,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACnB,OAAO,OAAO,CAAC;QAChB,CAAC;QAED,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC;YACjF,OAAO,OAAO,CAAC;QAChB,CAAC;QAED,IAAI,CAAC;YACJ,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;gBACjB,OAAO,CAAC,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YACzC,CAAC;YAED,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC;gBAC3C,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAC1F,CAAC;QACF,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACZ,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,0DAA0D;QAC7E,CAAC;QAED,OAAO,OAAO,CAAC;IAChB,CAAC;CACD","sourcesContent":["import { isE2EEMessage, isOTRMessage, isOTRAckMessage } from '@rocket.chat/core-typings';\nimport type { IMessage } from '@rocket.chat/core-typings';\nimport { parse } from '@rocket.chat/message-parser';\n\ntype ParserConfig = {\n\tcolors?: boolean;\n\temoticons?: boolean;\n\tcustomDomains?: string[];\n\tkatex?: {\n\t\tdollarSyntax: boolean;\n\t\tparenthesisSyntax: boolean;\n\t};\n};\n\nexport class BeforeSaveMarkdownParser {\n\tconstructor(private enabled: boolean = true) {\n\t\t// no op\n\t}\n\n\tasync parseMarkdown({ message, config }: { message: IMessage; config: ParserConfig }): Promise<IMessage> {\n\t\tif (!this.enabled) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (isE2EEMessage(message) || isOTRMessage(message) || isOTRAckMessage(message)) {\n\t\t\treturn message;\n\t\t}\n\n\t\ttry {\n\t\t\tif (message.msg) {\n\t\t\t\tmessage.md = parse(message.msg, config);\n\t\t\t}\n\n\t\t\tif (message.attachments?.[0]?.description) {\n\t\t\t\tmessage.attachments[0].descriptionMd = parse(message.attachments[0].description, config);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e); // errors logged while the parser is at experimental stage\n\t\t}\n\n\t\treturn message;\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      BeforeSaveMarkdownParser: () => BeforeSaveMarkdownParser\n    });\n    let isE2EEMessage, isOTRMessage, isOTRAckMessage;\n    module.link(\"@rocket.chat/core-typings\", {\n      isE2EEMessage(v) {\n        isE2EEMessage = v;\n      },\n      isOTRMessage(v) {\n        isOTRMessage = v;\n      },\n      isOTRAckMessage(v) {\n        isOTRAckMessage = v;\n      }\n    }, 0);\n    let parse;\n    module.link(\"@rocket.chat/message-parser\", {\n      parse(v) {\n        parse = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class BeforeSaveMarkdownParser {\n      constructor() {\n        let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        this.enabled = void 0;\n        this.enabled = enabled;\n        // no op\n      }\n      async parseMarkdown(_ref) {\n        let {\n          message,\n          config\n        } = _ref;\n        if (!this.enabled) {\n          return message;\n        }\n        if (isE2EEMessage(message) || isOTRMessage(message) || isOTRAckMessage(message)) {\n          return message;\n        }\n        try {\n          var _message$attachments, _message$attachments$;\n          if (message.msg) {\n            message.md = parse(message.msg, config);\n          }\n          if ((_message$attachments = message.attachments) !== null && _message$attachments !== void 0 && (_message$attachments$ = _message$attachments[0]) !== null && _message$attachments$ !== void 0 && _message$attachments$.description) {\n            message.attachments[0].descriptionMd = parse(message.attachments[0].description, config);\n          }\n        } catch (e) {\n          console.error(e); // errors logged while the parser is at experimental stage\n        }\n        return message;\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","BeforeSaveMarkdownParser","isE2EEMessage","isOTRMessage","isOTRAckMessage","link","v","parse","__reifyWaitForDeps__","constructor","enabled","arguments","length","undefined","parseMarkdown","_ref","message","config","_message$attachments","_message$attachments$","msg","md","attachments","description","descriptionMd","e","console","error","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/messages/hooks/BeforeSaveMarkdownParser.ts"],"sourcesContent":["import { isE2EEMessage, isOTRMessage, isOTRAckMessage } from '@rocket.chat/core-typings';\nimport type { IMessage } from '@rocket.chat/core-typings';\nimport { parse } from '@rocket.chat/message-parser';\n\ntype ParserConfig = {\n\tcolors?: boolean;\n\temoticons?: boolean;\n\tcustomDomains?: string[];\n\tkatex?: {\n\t\tdollarSyntax: boolean;\n\t\tparenthesisSyntax: boolean;\n\t};\n};\n\nexport class BeforeSaveMarkdownParser {\n\tconstructor(private enabled: boolean = true) {\n\t\t// no op\n\t}\n\n\tasync parseMarkdown({ message, config }: { message: IMessage; config: ParserConfig }): Promise<IMessage> {\n\t\tif (!this.enabled) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (isE2EEMessage(message) || isOTRMessage(message) || isOTRAckMessage(message)) {\n\t\t\treturn message;\n\t\t}\n\n\t\ttry {\n\t\t\tif (message.msg) {\n\t\t\t\tmessage.md = parse(message.msg, config);\n\t\t\t}\n\n\t\t\tif (message.attachments?.[0]?.description) {\n\t\t\t\tmessage.attachments[0].descriptionMd = parse(message.attachments[0].description, config);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e); // errors logged while the parser is at experimental stage\n\t\t}\n\n\t\treturn message;\n\t}\n}\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAE;MAAAC,wBAA6B,EAAAA,CAAA,KAAAA;IAAuB;IAAA,IAAAC,aAA2B,EAACC,YAAA,EAAAC,eAAA;IAAAL,MAAA,CAAAM,IAAA;MAAAH,cAAAI,CAAA;QAAAJ,aAAA,GAAAI,CAAA;MAAA;MAAAH,aAAAG,CAAA;QAAAH,YAAA,GAAAG,CAAA;MAAA;MAAAF,gBAAAE,CAAA;QAAAF,eAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA;IAAAR,MAAA,CAAAM,IAAA;MAAAE,MAAAD,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,oBAAA,WAAAA,oBAAA;IAcnF,MAAOP,wBAAwB;MACpCQ,YAAA,EAA2C;QAAA,IAAvBC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAmB,IAAI;QAAA,KAAvBD,OAAA;QAAA,KAAAA,OAAO,GAAPA,OAAO;QAC1B;MACD;MAEA,MAAMI,aAAaA,CAAAC,IAAA,EAAiE;QAAA,IAAhE;UAAEC,OAAO;UAAEC;QAAM,CAA+C,GAAAF,IAAA;QACnF,IAAI,CAAC,IAAI,CAACL,OAAO,EAAE;UAClB,OAAOM,OAAO;QACf;QAEA,IAAId,aAAa,CAACc,OAAO,CAAC,IAAIb,YAAY,CAACa,OAAO,CAAC,IAAIZ,eAAe,CAACY,OAAO,CAAC,EAAE;UAChF,OAAOA,OAAO;QACf;QAEA,IAAI;UAAA,IAAAE,oBAAA,EAAAC,qBAAA;UACH,IAAIH,OAAO,CAACI,GAAG,EAAE;YAChBJ,OAAO,CAACK,EAAE,GAAGd,KAAK,CAACS,OAAO,CAACI,GAAG,EAAEH,MAAM,CAAC;UACxC;UAEA,KAAAC,oBAAA,GAAIF,OAAO,CAACM,WAAW,cAAAJ,oBAAA,gBAAAC,qBAAA,GAAnBD,oBAAA,CAAsB,CAAC,CAAC,cAAAC,qBAAA,eAAxBA,qBAAA,CAA0BI,WAAW,EAAE;YAC1CP,OAAO,CAACM,WAAW,CAAC,CAAC,CAAC,CAACE,aAAa,GAAGjB,KAAK,CAACS,OAAO,CAACM,WAAW,CAAC,CAAC,CAAC,CAACC,WAAW,EAAEN,MAAM,CAAC;UACzF;QACD,CAAC,CAAC,OAAOQ,CAAC,EAAE;UACXC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC,CAAC,CAAC;QACnB;QAEA,OAAOT,OAAO;MACf;;IACAY,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1f6a1d88f9c219d31d4a57586fd457cb12b3375b"}
