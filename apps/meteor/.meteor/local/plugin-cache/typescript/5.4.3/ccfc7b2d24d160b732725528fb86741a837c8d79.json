{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/chats/readStateManager.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/chats/readStateManager.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/chats/readStateManager.ts","inputSourceMap":{"version":3,"file":"client/lib/chats/readStateManager.ts","sourceRoot":"","sources":["client/lib/chats/readStateManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { ChatMessage } from '../../../app/models/client';\nimport { LegacyRoomManager } from '../../../app/ui-utils/client/lib/LegacyRoomManager';\nimport { RoomHistoryManager } from '../../../app/ui-utils/client/lib/RoomHistoryManager';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { withDebouncing } from '../../../lib/utils/highOrderFunctions';\n\nexport class ReadStateManager extends Emitter {\n\tprivate rid: IRoom['_id'];\n\n\tprivate firstUnreadRecordId?: IMessage['_id'];\n\n\tprivate subscription?: ISubscription;\n\n\tpublic constructor(rid: IRoom['_id']) {\n\t\tsuper();\n\t\tthis.rid = rid;\n\t}\n\n\tpublic getRid() {\n\t\treturn this.rid;\n\t}\n\n\t// TODO: Use ref to get unreadMark\n\t// private unreadMark?: HTMLElement;\n\tprivate get unreadMark() {\n\t\treturn document.querySelector<HTMLElement>('.rcx-message-divider--unread');\n\t}\n\n\tpublic onUnreadStateChange = (callback: () => void): (() => void) => {\n\t\treturn this.on('unread-state-change', callback);\n\t};\n\n\tpublic getFirstUnreadRecordId = () => {\n\t\treturn this.firstUnreadRecordId;\n\t};\n\n\tpublic updateSubscription(subscription?: ISubscription) {\n\t\tif (!subscription) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUpdate = !this.subscription;\n\n\t\tthis.subscription = subscription;\n\t\tLegacyRoomManager.getOpenedRoomByRid(this.rid)?.unreadSince.set(this.subscription.ls);\n\n\t\tconst { unread, alert } = this.subscription;\n\t\tif (!unread && !alert) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate) {\n\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\treturn;\n\t\t}\n\n\t\tif (document.hasFocus() && this.firstUnreadRecordId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateFirstUnreadRecordId();\n\t}\n\n\tprivate updateFirstUnreadRecordId() {\n\t\tif (!this.subscription?.ls) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUnreadRecord = ChatMessage.findOne(\n\t\t\t{\n\t\t\t\t'rid': this.subscription.rid,\n\t\t\t\t'ts': {\n\t\t\t\t\t$gt: this.subscription.ls,\n\t\t\t\t},\n\t\t\t\t'u._id': {\n\t\t\t\t\t$ne: Meteor.userId() ?? undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tts: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.setFirstUnreadRecordId(firstUnreadRecord?._id);\n\n\t\tRoomHistoryManager.once('loaded-messages', () => this.updateFirstUnreadRecordId());\n\t}\n\n\tprivate setFirstUnreadRecordId(firstUnreadRecordId: string | undefined) {\n\t\tthis.firstUnreadRecordId = firstUnreadRecordId;\n\t\tthis.emit('unread-state-change', this.firstUnreadRecordId);\n\t}\n\n\tpublic clearUnreadMark() {\n\t\tthis.setFirstUnreadRecordId(undefined);\n\t}\n\n\tpublic handleWindowEvents = (): (() => void) => {\n\t\tconst handleWindowFocus = () => {\n\t\t\tthis.attemptMarkAsRead();\n\t\t};\n\n\t\tconst handleWindowKeyUp = (event: KeyboardEvent) => {\n\t\t\tif (event.key === 'Escape') {\n\t\t\t\tthis.markAsRead();\n\t\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('focus', handleWindowFocus);\n\t\twindow.addEventListener('keyup', handleWindowKeyUp);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('focus', handleWindowFocus);\n\t\t\twindow.removeEventListener('keyup', handleWindowKeyUp);\n\t\t};\n\t};\n\n\tprivate isUnreadMarkVisible(): boolean {\n\t\tif (!this.unreadMark) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.unreadMark.offsetTop > (this.unreadMark.offsetParent?.scrollTop || 0);\n\t}\n\n\t// This will only mark as read if the unread mark is visible\n\tpublic attemptMarkAsRead() {\n\t\tconst { alert, unread } = this.subscription || {};\n\t\tif (!alert && unread === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!document.hasFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.unreadMark && !this.isUnreadMarkVisible()) {\n\t\t\treturn;\n\t\t}\n\t\t// if there are unloaded unread messages, don't mark as read\n\t\tif (RoomHistoryManager.getRoom(this.rid).unreadNotLoaded.get() > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.markAsRead();\n\t}\n\n\tpublic debouncedMarkAsRead = withDebouncing({ wait: 1000 })(() => {\n\t\ttry {\n\t\t\treturn this.markAsRead();\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t});\n\n\t// this will always mark as read.\n\tpublic async markAsRead() {\n\t\tif (!this.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn sdk.rest.post('/v1/subscriptions.read', { rid: this.rid }).then(() => {\n\t\t\tRoomHistoryManager.getRoom(this.rid).unreadNotLoaded.set(0);\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/chats/readStateManager.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/chats/readStateManager.ts","inputSourceMap":{"version":3,"file":"client/lib/chats/readStateManager.ts","sourceRoot":"","sources":["client/lib/chats/readStateManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { ChatMessage } from '../../../app/models/client';\nimport { LegacyRoomManager } from '../../../app/ui-utils/client/lib/LegacyRoomManager';\nimport { RoomHistoryManager } from '../../../app/ui-utils/client/lib/RoomHistoryManager';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { withDebouncing } from '../../../lib/utils/highOrderFunctions';\n\nexport class ReadStateManager extends Emitter {\n\tprivate rid: IRoom['_id'];\n\n\tprivate firstUnreadRecordId?: IMessage['_id'];\n\n\tprivate subscription?: ISubscription;\n\n\tpublic constructor(rid: IRoom['_id']) {\n\t\tsuper();\n\t\tthis.rid = rid;\n\t}\n\n\tpublic getRid() {\n\t\treturn this.rid;\n\t}\n\n\t// TODO: Use ref to get unreadMark\n\t// private unreadMark?: HTMLElement;\n\tprivate get unreadMark() {\n\t\treturn document.querySelector<HTMLElement>('.rcx-message-divider--unread');\n\t}\n\n\tpublic onUnreadStateChange = (callback: () => void): (() => void) => {\n\t\treturn this.on('unread-state-change', callback);\n\t};\n\n\tpublic getFirstUnreadRecordId = () => {\n\t\treturn this.firstUnreadRecordId;\n\t};\n\n\tpublic updateSubscription(subscription?: ISubscription) {\n\t\tif (!subscription) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUpdate = !this.subscription;\n\n\t\tthis.subscription = subscription;\n\t\tLegacyRoomManager.getOpenedRoomByRid(this.rid)?.unreadSince.set(this.subscription.ls);\n\n\t\tconst { unread, alert } = this.subscription;\n\t\tif (!unread && !alert) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate) {\n\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\treturn;\n\t\t}\n\n\t\tif (document.hasFocus() && this.firstUnreadRecordId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateFirstUnreadRecordId();\n\t}\n\n\tprivate updateFirstUnreadRecordId() {\n\t\tif (!this.subscription?.ls) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUnreadRecord = ChatMessage.findOne(\n\t\t\t{\n\t\t\t\t'rid': this.subscription.rid,\n\t\t\t\t'ts': {\n\t\t\t\t\t$gt: this.subscription.ls,\n\t\t\t\t},\n\t\t\t\t'u._id': {\n\t\t\t\t\t$ne: Meteor.userId() ?? undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tts: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.setFirstUnreadRecordId(firstUnreadRecord?._id);\n\n\t\tRoomHistoryManager.once('loaded-messages', () => this.updateFirstUnreadRecordId());\n\t}\n\n\tprivate setFirstUnreadRecordId(firstUnreadRecordId: string | undefined) {\n\t\tthis.firstUnreadRecordId = firstUnreadRecordId;\n\t\tthis.emit('unread-state-change', this.firstUnreadRecordId);\n\t}\n\n\tpublic clearUnreadMark() {\n\t\tthis.setFirstUnreadRecordId(undefined);\n\t}\n\n\tpublic handleWindowEvents = (): (() => void) => {\n\t\tconst handleWindowFocus = () => {\n\t\t\tthis.attemptMarkAsRead();\n\t\t};\n\n\t\tconst handleWindowKeyUp = (event: KeyboardEvent) => {\n\t\t\tif (event.key === 'Escape') {\n\t\t\t\tthis.markAsRead();\n\t\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('focus', handleWindowFocus);\n\t\twindow.addEventListener('keyup', handleWindowKeyUp);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('focus', handleWindowFocus);\n\t\t\twindow.removeEventListener('keyup', handleWindowKeyUp);\n\t\t};\n\t};\n\n\tprivate isUnreadMarkVisible(): boolean {\n\t\tif (!this.unreadMark) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.unreadMark.offsetTop > (this.unreadMark.offsetParent?.scrollTop || 0);\n\t}\n\n\t// This will only mark as read if the unread mark is visible\n\tpublic attemptMarkAsRead() {\n\t\tconst { alert, unread } = this.subscription || {};\n\t\tif (!alert && unread === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!document.hasFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.unreadMark && !this.isUnreadMarkVisible()) {\n\t\t\treturn;\n\t\t}\n\t\t// if there are unloaded unread messages, don't mark as read\n\t\tif (RoomHistoryManager.getRoom(this.rid).unreadNotLoaded.get() > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.markAsRead();\n\t}\n\n\tpublic debouncedMarkAsRead = withDebouncing({ wait: 1000 })(() => {\n\t\ttry {\n\t\t\treturn this.markAsRead();\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t});\n\n\t// this will always mark as read.\n\tpublic async markAsRead() {\n\t\tif (!this.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn sdk.rest.post('/v1/subscriptions.read', { rid: this.rid }).then(() => {\n\t\t\tRoomHistoryManager.getRoom(this.rid).unreadNotLoaded.set(0);\n\t\t});\n\t}\n}\n"]}}},"code":"module.export({\n  ReadStateManager: () => ReadStateManager\n});\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 1);\nlet ChatMessage;\nmodule.link(\"../../../app/models/client\", {\n  ChatMessage(v) {\n    ChatMessage = v;\n  }\n}, 2);\nlet LegacyRoomManager;\nmodule.link(\"../../../app/ui-utils/client/lib/LegacyRoomManager\", {\n  LegacyRoomManager(v) {\n    LegacyRoomManager = v;\n  }\n}, 3);\nlet RoomHistoryManager;\nmodule.link(\"../../../app/ui-utils/client/lib/RoomHistoryManager\", {\n  RoomHistoryManager(v) {\n    RoomHistoryManager = v;\n  }\n}, 4);\nlet sdk;\nmodule.link(\"../../../app/utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 5);\nlet withDebouncing;\nmodule.link(\"../../../lib/utils/highOrderFunctions\", {\n  withDebouncing(v) {\n    withDebouncing = v;\n  }\n}, 6);\nclass ReadStateManager extends Emitter {\n  constructor(rid) {\n    super();\n    this.rid = void 0;\n    this.firstUnreadRecordId = void 0;\n    this.subscription = void 0;\n    this.onUnreadStateChange = callback => {\n      return this.on('unread-state-change', callback);\n    };\n    this.getFirstUnreadRecordId = () => {\n      return this.firstUnreadRecordId;\n    };\n    this.handleWindowEvents = () => {\n      const handleWindowFocus = () => {\n        this.attemptMarkAsRead();\n      };\n      const handleWindowKeyUp = event => {\n        if (event.key === 'Escape') {\n          this.markAsRead();\n          this.updateFirstUnreadRecordId();\n        }\n      };\n      window.addEventListener('focus', handleWindowFocus);\n      window.addEventListener('keyup', handleWindowKeyUp);\n      return () => {\n        window.removeEventListener('focus', handleWindowFocus);\n        window.removeEventListener('keyup', handleWindowKeyUp);\n      };\n    };\n    this.debouncedMarkAsRead = withDebouncing({\n      wait: 1000\n    })(() => {\n      try {\n        return this.markAsRead();\n      } catch (e) {\n        console.error(e);\n      }\n    });\n    this.rid = rid;\n  }\n  getRid() {\n    return this.rid;\n  }\n  // TODO: Use ref to get unreadMark\n  // private unreadMark?: HTMLElement;\n  get unreadMark() {\n    return document.querySelector('.rcx-message-divider--unread');\n  }\n  updateSubscription(subscription) {\n    var _LegacyRoomManager$ge;\n    if (!subscription) {\n      return;\n    }\n    const firstUpdate = !this.subscription;\n    this.subscription = subscription;\n    (_LegacyRoomManager$ge = LegacyRoomManager.getOpenedRoomByRid(this.rid)) === null || _LegacyRoomManager$ge === void 0 ? void 0 : _LegacyRoomManager$ge.unreadSince.set(this.subscription.ls);\n    const {\n      unread,\n      alert\n    } = this.subscription;\n    if (!unread && !alert) {\n      return;\n    }\n    if (firstUpdate) {\n      this.updateFirstUnreadRecordId();\n      return;\n    }\n    if (document.hasFocus() && this.firstUnreadRecordId) {\n      return;\n    }\n    this.updateFirstUnreadRecordId();\n  }\n  updateFirstUnreadRecordId() {\n    var _this$subscription, _Meteor$userId;\n    if (!((_this$subscription = this.subscription) !== null && _this$subscription !== void 0 && _this$subscription.ls)) {\n      return;\n    }\n    const firstUnreadRecord = ChatMessage.findOne({\n      'rid': this.subscription.rid,\n      'ts': {\n        $gt: this.subscription.ls\n      },\n      'u._id': {\n        $ne: (_Meteor$userId = Meteor.userId()) !== null && _Meteor$userId !== void 0 ? _Meteor$userId : undefined\n      }\n    }, {\n      sort: {\n        ts: 1\n      }\n    });\n    this.setFirstUnreadRecordId(firstUnreadRecord === null || firstUnreadRecord === void 0 ? void 0 : firstUnreadRecord._id);\n    RoomHistoryManager.once('loaded-messages', () => this.updateFirstUnreadRecordId());\n  }\n  setFirstUnreadRecordId(firstUnreadRecordId) {\n    this.firstUnreadRecordId = firstUnreadRecordId;\n    this.emit('unread-state-change', this.firstUnreadRecordId);\n  }\n  clearUnreadMark() {\n    this.setFirstUnreadRecordId(undefined);\n  }\n  isUnreadMarkVisible() {\n    var _this$unreadMark$offs;\n    if (!this.unreadMark) {\n      return false;\n    }\n    return this.unreadMark.offsetTop > (((_this$unreadMark$offs = this.unreadMark.offsetParent) === null || _this$unreadMark$offs === void 0 ? void 0 : _this$unreadMark$offs.scrollTop) || 0);\n  }\n  // This will only mark as read if the unread mark is visible\n  attemptMarkAsRead() {\n    const {\n      alert,\n      unread\n    } = this.subscription || {};\n    if (!alert && unread === 0) {\n      return;\n    }\n    if (!document.hasFocus()) {\n      return;\n    }\n    if (this.unreadMark && !this.isUnreadMarkVisible()) {\n      return;\n    }\n    // if there are unloaded unread messages, don't mark as read\n    if (RoomHistoryManager.getRoom(this.rid).unreadNotLoaded.get() > 0) {\n      return;\n    }\n    return this.markAsRead();\n  }\n  // this will always mark as read.\n  async markAsRead() {\n    if (!this.rid) {\n      return;\n    }\n    return sdk.rest.post('/v1/subscriptions.read', {\n      rid: this.rid\n    }).then(() => {\n      RoomHistoryManager.getRoom(this.rid).unreadNotLoaded.set(0);\n    });\n  }\n}","map":{"version":3,"names":["module","export","ReadStateManager","Emitter","link","v","Meteor","ChatMessage","LegacyRoomManager","RoomHistoryManager","sdk","withDebouncing","constructor","rid","firstUnreadRecordId","subscription","onUnreadStateChange","callback","on","getFirstUnreadRecordId","handleWindowEvents","handleWindowFocus","attemptMarkAsRead","handleWindowKeyUp","event","key","markAsRead","updateFirstUnreadRecordId","window","addEventListener","removeEventListener","debouncedMarkAsRead","wait","e","console","error","getRid","unreadMark","document","querySelector","updateSubscription","_LegacyRoomManager$ge","firstUpdate","getOpenedRoomByRid","unreadSince","set","ls","unread","alert","hasFocus","_this$subscription","_Meteor$userId","firstUnreadRecord","findOne","$gt","$ne","userId","undefined","sort","ts","setFirstUnreadRecordId","_id","once","emit","clearUnreadMark","isUnreadMarkVisible","_this$unreadMark$offs","offsetTop","offsetParent","scrollTop","getRoom","unreadNotLoaded","get","rest","post","then"],"sources":["client/lib/chats/readStateManager.ts"],"sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { ChatMessage } from '../../../app/models/client';\nimport { LegacyRoomManager } from '../../../app/ui-utils/client/lib/LegacyRoomManager';\nimport { RoomHistoryManager } from '../../../app/ui-utils/client/lib/RoomHistoryManager';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { withDebouncing } from '../../../lib/utils/highOrderFunctions';\n\nexport class ReadStateManager extends Emitter {\n\tprivate rid: IRoom['_id'];\n\n\tprivate firstUnreadRecordId?: IMessage['_id'];\n\n\tprivate subscription?: ISubscription;\n\n\tpublic constructor(rid: IRoom['_id']) {\n\t\tsuper();\n\t\tthis.rid = rid;\n\t}\n\n\tpublic getRid() {\n\t\treturn this.rid;\n\t}\n\n\t// TODO: Use ref to get unreadMark\n\t// private unreadMark?: HTMLElement;\n\tprivate get unreadMark() {\n\t\treturn document.querySelector<HTMLElement>('.rcx-message-divider--unread');\n\t}\n\n\tpublic onUnreadStateChange = (callback: () => void): (() => void) => {\n\t\treturn this.on('unread-state-change', callback);\n\t};\n\n\tpublic getFirstUnreadRecordId = () => {\n\t\treturn this.firstUnreadRecordId;\n\t};\n\n\tpublic updateSubscription(subscription?: ISubscription) {\n\t\tif (!subscription) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUpdate = !this.subscription;\n\n\t\tthis.subscription = subscription;\n\t\tLegacyRoomManager.getOpenedRoomByRid(this.rid)?.unreadSince.set(this.subscription.ls);\n\n\t\tconst { unread, alert } = this.subscription;\n\t\tif (!unread && !alert) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate) {\n\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\treturn;\n\t\t}\n\n\t\tif (document.hasFocus() && this.firstUnreadRecordId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateFirstUnreadRecordId();\n\t}\n\n\tprivate updateFirstUnreadRecordId() {\n\t\tif (!this.subscription?.ls) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUnreadRecord = ChatMessage.findOne(\n\t\t\t{\n\t\t\t\t'rid': this.subscription.rid,\n\t\t\t\t'ts': {\n\t\t\t\t\t$gt: this.subscription.ls,\n\t\t\t\t},\n\t\t\t\t'u._id': {\n\t\t\t\t\t$ne: Meteor.userId() ?? undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tts: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.setFirstUnreadRecordId(firstUnreadRecord?._id);\n\n\t\tRoomHistoryManager.once('loaded-messages', () => this.updateFirstUnreadRecordId());\n\t}\n\n\tprivate setFirstUnreadRecordId(firstUnreadRecordId: string | undefined) {\n\t\tthis.firstUnreadRecordId = firstUnreadRecordId;\n\t\tthis.emit('unread-state-change', this.firstUnreadRecordId);\n\t}\n\n\tpublic clearUnreadMark() {\n\t\tthis.setFirstUnreadRecordId(undefined);\n\t}\n\n\tpublic handleWindowEvents = (): (() => void) => {\n\t\tconst handleWindowFocus = () => {\n\t\t\tthis.attemptMarkAsRead();\n\t\t};\n\n\t\tconst handleWindowKeyUp = (event: KeyboardEvent) => {\n\t\t\tif (event.key === 'Escape') {\n\t\t\t\tthis.markAsRead();\n\t\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('focus', handleWindowFocus);\n\t\twindow.addEventListener('keyup', handleWindowKeyUp);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('focus', handleWindowFocus);\n\t\t\twindow.removeEventListener('keyup', handleWindowKeyUp);\n\t\t};\n\t};\n\n\tprivate isUnreadMarkVisible(): boolean {\n\t\tif (!this.unreadMark) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.unreadMark.offsetTop > (this.unreadMark.offsetParent?.scrollTop || 0);\n\t}\n\n\t// This will only mark as read if the unread mark is visible\n\tpublic attemptMarkAsRead() {\n\t\tconst { alert, unread } = this.subscription || {};\n\t\tif (!alert && unread === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!document.hasFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.unreadMark && !this.isUnreadMarkVisible()) {\n\t\t\treturn;\n\t\t}\n\t\t// if there are unloaded unread messages, don't mark as read\n\t\tif (RoomHistoryManager.getRoom(this.rid).unreadNotLoaded.get() > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.markAsRead();\n\t}\n\n\tpublic debouncedMarkAsRead = withDebouncing({ wait: 1000 })(() => {\n\t\ttry {\n\t\t\treturn this.markAsRead();\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t});\n\n\t// this will always mark as read.\n\tpublic async markAsRead() {\n\t\tif (!this.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn sdk.rest.post('/v1/subscriptions.read', { rid: this.rid }).then(() => {\n\t\t\tRoomHistoryManager.getRoom(this.rid).unreadNotLoaded.set(0);\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ccfc7b2d24d160b732725528fb86741a837c8d79"}
