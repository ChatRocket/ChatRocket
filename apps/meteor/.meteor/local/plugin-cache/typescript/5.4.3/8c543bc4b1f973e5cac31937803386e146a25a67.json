{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/providers/SelectedMessagesProvider.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/providers/SelectedMessagesProvider.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/providers/SelectedMessagesProvider.tsx","inputSourceMap":{"version":3,"file":"client/views/room/providers/SelectedMessagesProvider.tsx","sourceRoot":"","sources":["client/views/room/providers/SelectedMessagesProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAE/C,OAAO,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEvC,OAAO,EAAE,sBAAsB,EAAE,MAAM,iDAAiD,CAAC;AAEzF,iBAAiB;AAEjB,MAAM,CAAC,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,kBAAmB,SAAQ,OAKzE;IACA,KAAK,GAAG,IAAI,GAAG,EAAU,CAAC;IAE1B,WAAW,GAAG,KAAK,CAAC;IAEpB,cAAc,CAAC,WAAoB;QAClC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC;IAC7C,CAAC;IAED,cAAc;QACb,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAED,UAAU,CAAC,GAAW;QACrB,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,mBAAmB;QAClB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,GAAW;QACjB,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpB,OAAO;QACR,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,KAAK;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;IACxB,CAAC;IAED,UAAU;QACT,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACpD,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,gBAAgB,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,KAAK;QACJ,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC;CACD,CAAC,EAAE,CAAC;AAML,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,EAAE,QAAQ,EAAiC,EAAE,EAAE;IACvF,MAAM,KAAK,GAAG,OAAO,CACpB,GAAG,EAAE,CAAC,CAAC;QACN,oBAAoB;KACpB,CAAC,EACF,EAAE,CACF,CAAC;IAEF,OAAO,CAAC,sBAAsB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,sBAAsB,CAAC,QAAQ,CAAC,CAAC;AACpG,CAAC,CAAC","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport type { ReactNode } from 'react';\nimport React, { useMemo } from 'react';\n\nimport { SelectedMessageContext } from '../MessageList/contexts/SelectedMessagesContext';\n\n// data-qa-select\n\nexport const selectedMessageStore = new (class SelectMessageStore extends Emitter<\n\t{\n\t\tchange: undefined;\n\t\ttoggleIsSelecting: boolean;\n\t} & { [mid: string]: boolean }\n> {\n\tstore = new Set<string>();\n\n\tisSelecting = false;\n\n\tsetIsSelecting(isSelecting: boolean): void {\n\t\tthis.isSelecting = isSelecting;\n\t\tthis.emit('toggleIsSelecting', isSelecting);\n\t}\n\n\tgetIsSelecting(): boolean {\n\t\treturn this.isSelecting;\n\t}\n\n\tisSelected(mid: string): boolean {\n\t\treturn Boolean(this.store.has(mid));\n\t}\n\n\tgetSelectedMessages(): string[] {\n\t\treturn Array.from(this.store);\n\t}\n\n\ttoggle(mid: string): void {\n\t\tif (this.store.has(mid)) {\n\t\t\tthis.store.delete(mid);\n\t\t\tthis.emit(mid, false);\n\t\t\tthis.emit('change');\n\t\t\treturn;\n\t\t}\n\t\tthis.store.add(mid);\n\t\tthis.emit(mid, true);\n\t\tthis.emit('change');\n\t}\n\n\tcount(): number {\n\t\treturn this.store.size;\n\t}\n\n\tclearStore(): void {\n\t\tconst selectedMessages = this.getSelectedMessages();\n\t\tthis.store.clear();\n\t\tselectedMessages.forEach((mid) => this.emit(mid, false));\n\t\tthis.emit('change');\n\t}\n\n\treset(): void {\n\t\tthis.clearStore();\n\t\tthis.isSelecting = false;\n\t\tthis.emit('toggleIsSelecting', false);\n\t}\n})();\n\ntype SelectedMessagesProviderProps = {\n\tchildren?: ReactNode;\n};\n\nexport const SelectedMessagesProvider = ({ children }: SelectedMessagesProviderProps) => {\n\tconst value = useMemo(\n\t\t() => ({\n\t\t\tselectedMessageStore,\n\t\t}),\n\t\t[],\n\t);\n\n\treturn <SelectedMessageContext.Provider value={value}>{children}</SelectedMessageContext.Provider>;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/providers/SelectedMessagesProvider.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/providers/SelectedMessagesProvider.tsx","inputSourceMap":{"version":3,"file":"client/views/room/providers/SelectedMessagesProvider.tsx","sourceRoot":"","sources":["client/views/room/providers/SelectedMessagesProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAE/C,OAAO,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEvC,OAAO,EAAE,sBAAsB,EAAE,MAAM,iDAAiD,CAAC;AAEzF,iBAAiB;AAEjB,MAAM,CAAC,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,kBAAmB,SAAQ,OAKzE;IACA,KAAK,GAAG,IAAI,GAAG,EAAU,CAAC;IAE1B,WAAW,GAAG,KAAK,CAAC;IAEpB,cAAc,CAAC,WAAoB;QAClC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC;IAC7C,CAAC;IAED,cAAc;QACb,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAED,UAAU,CAAC,GAAW;QACrB,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,mBAAmB;QAClB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,MAAM,CAAC,GAAW;QACjB,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpB,OAAO;QACR,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,KAAK;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;IACxB,CAAC;IAED,UAAU;QACT,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACpD,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,gBAAgB,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,KAAK;QACJ,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC;CACD,CAAC,EAAE,CAAC;AAML,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,EAAE,QAAQ,EAAiC,EAAE,EAAE;IACvF,MAAM,KAAK,GAAG,OAAO,CACpB,GAAG,EAAE,CAAC,CAAC;QACN,oBAAoB;KACpB,CAAC,EACF,EAAE,CACF,CAAC;IAEF,OAAO,CAAC,sBAAsB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,sBAAsB,CAAC,QAAQ,CAAC,CAAC;AACpG,CAAC,CAAC","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport type { ReactNode } from 'react';\nimport React, { useMemo } from 'react';\n\nimport { SelectedMessageContext } from '../MessageList/contexts/SelectedMessagesContext';\n\n// data-qa-select\n\nexport const selectedMessageStore = new (class SelectMessageStore extends Emitter<\n\t{\n\t\tchange: undefined;\n\t\ttoggleIsSelecting: boolean;\n\t} & { [mid: string]: boolean }\n> {\n\tstore = new Set<string>();\n\n\tisSelecting = false;\n\n\tsetIsSelecting(isSelecting: boolean): void {\n\t\tthis.isSelecting = isSelecting;\n\t\tthis.emit('toggleIsSelecting', isSelecting);\n\t}\n\n\tgetIsSelecting(): boolean {\n\t\treturn this.isSelecting;\n\t}\n\n\tisSelected(mid: string): boolean {\n\t\treturn Boolean(this.store.has(mid));\n\t}\n\n\tgetSelectedMessages(): string[] {\n\t\treturn Array.from(this.store);\n\t}\n\n\ttoggle(mid: string): void {\n\t\tif (this.store.has(mid)) {\n\t\t\tthis.store.delete(mid);\n\t\t\tthis.emit(mid, false);\n\t\t\tthis.emit('change');\n\t\t\treturn;\n\t\t}\n\t\tthis.store.add(mid);\n\t\tthis.emit(mid, true);\n\t\tthis.emit('change');\n\t}\n\n\tcount(): number {\n\t\treturn this.store.size;\n\t}\n\n\tclearStore(): void {\n\t\tconst selectedMessages = this.getSelectedMessages();\n\t\tthis.store.clear();\n\t\tselectedMessages.forEach((mid) => this.emit(mid, false));\n\t\tthis.emit('change');\n\t}\n\n\treset(): void {\n\t\tthis.clearStore();\n\t\tthis.isSelecting = false;\n\t\tthis.emit('toggleIsSelecting', false);\n\t}\n})();\n\ntype SelectedMessagesProviderProps = {\n\tchildren?: ReactNode;\n};\n\nexport const SelectedMessagesProvider = ({ children }: SelectedMessagesProviderProps) => {\n\tconst value = useMemo(\n\t\t() => ({\n\t\t\tselectedMessageStore,\n\t\t}),\n\t\t[],\n\t);\n\n\treturn <SelectedMessageContext.Provider value={value}>{children}</SelectedMessageContext.Provider>;\n};\n"]}}},"code":"module.export({\n  selectedMessageStore: () => selectedMessageStore,\n  SelectedMessagesProvider: () => SelectedMessagesProvider\n});\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n}, 0);\nlet React, useMemo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 1);\nlet SelectedMessageContext;\nmodule.link(\"../MessageList/contexts/SelectedMessagesContext\", {\n  SelectedMessageContext(v) {\n    SelectedMessageContext = v;\n  }\n}, 2);\nconst selectedMessageStore = new class SelectMessageStore extends Emitter {\n  constructor() {\n    super(...arguments);\n    this.store = new Set();\n    this.isSelecting = false;\n  }\n  setIsSelecting(isSelecting) {\n    this.isSelecting = isSelecting;\n    this.emit('toggleIsSelecting', isSelecting);\n  }\n  getIsSelecting() {\n    return this.isSelecting;\n  }\n  isSelected(mid) {\n    return Boolean(this.store.has(mid));\n  }\n  getSelectedMessages() {\n    return Array.from(this.store);\n  }\n  toggle(mid) {\n    if (this.store.has(mid)) {\n      this.store.delete(mid);\n      this.emit(mid, false);\n      this.emit('change');\n      return;\n    }\n    this.store.add(mid);\n    this.emit(mid, true);\n    this.emit('change');\n  }\n  count() {\n    return this.store.size;\n  }\n  clearStore() {\n    const selectedMessages = this.getSelectedMessages();\n    this.store.clear();\n    selectedMessages.forEach(mid => this.emit(mid, false));\n    this.emit('change');\n  }\n  reset() {\n    this.clearStore();\n    this.isSelecting = false;\n    this.emit('toggleIsSelecting', false);\n  }\n}();\nconst SelectedMessagesProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const value = useMemo(() => ({\n    selectedMessageStore\n  }), []);\n  return /*#__PURE__*/React.createElement(SelectedMessageContext.Provider, {\n    value: value\n  }, children);\n};","map":{"version":3,"names":["module","export","selectedMessageStore","SelectedMessagesProvider","Emitter","link","v","React","useMemo","default","SelectedMessageContext","SelectMessageStore","constructor","arguments","store","Set","isSelecting","setIsSelecting","emit","getIsSelecting","isSelected","mid","Boolean","has","getSelectedMessages","Array","from","toggle","delete","add","count","size","clearStore","selectedMessages","clear","forEach","reset","_ref","children","value","createElement","Provider"],"sources":["client/views/room/providers/SelectedMessagesProvider.tsx"],"sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport type { ReactNode } from 'react';\nimport React, { useMemo } from 'react';\n\nimport { SelectedMessageContext } from '../MessageList/contexts/SelectedMessagesContext';\n\n// data-qa-select\n\nexport const selectedMessageStore = new (class SelectMessageStore extends Emitter<\n\t{\n\t\tchange: undefined;\n\t\ttoggleIsSelecting: boolean;\n\t} & { [mid: string]: boolean }\n> {\n\tstore = new Set<string>();\n\n\tisSelecting = false;\n\n\tsetIsSelecting(isSelecting: boolean): void {\n\t\tthis.isSelecting = isSelecting;\n\t\tthis.emit('toggleIsSelecting', isSelecting);\n\t}\n\n\tgetIsSelecting(): boolean {\n\t\treturn this.isSelecting;\n\t}\n\n\tisSelected(mid: string): boolean {\n\t\treturn Boolean(this.store.has(mid));\n\t}\n\n\tgetSelectedMessages(): string[] {\n\t\treturn Array.from(this.store);\n\t}\n\n\ttoggle(mid: string): void {\n\t\tif (this.store.has(mid)) {\n\t\t\tthis.store.delete(mid);\n\t\t\tthis.emit(mid, false);\n\t\t\tthis.emit('change');\n\t\t\treturn;\n\t\t}\n\t\tthis.store.add(mid);\n\t\tthis.emit(mid, true);\n\t\tthis.emit('change');\n\t}\n\n\tcount(): number {\n\t\treturn this.store.size;\n\t}\n\n\tclearStore(): void {\n\t\tconst selectedMessages = this.getSelectedMessages();\n\t\tthis.store.clear();\n\t\tselectedMessages.forEach((mid) => this.emit(mid, false));\n\t\tthis.emit('change');\n\t}\n\n\treset(): void {\n\t\tthis.clearStore();\n\t\tthis.isSelecting = false;\n\t\tthis.emit('toggleIsSelecting', false);\n\t}\n})();\n\ntype SelectedMessagesProviderProps = {\n\tchildren?: ReactNode;\n};\n\nexport const SelectedMessagesProvider = ({ children }: SelectedMessagesProviderProps) => {\n\tconst value = useMemo(\n\t\t() => ({\n\t\t\tselectedMessageStore,\n\t\t}),\n\t\t[],\n\t);\n\n\treturn <SelectedMessageContext.Provider value={value}>{children}</SelectedMessageContext.Provider>;\n};\n"],"mappings":"AAAAA,MAAA,CAAOC,MAAE;EAAAC,oBAAe,EAAAA,CAAA,KAAAA,oBAAuB;EAAAC,wBAAA,EAAAA,CAAA,KAAAA;AAAA;AAAA,IAAAC,OAAA;AAAAJ,MAAA,CAAAK,IAAA;EAAAD,QAAAE,CAAA;IAAAF,OAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,KAAA,EAAAC,OAAA;AAAAR,MAAA,CAAAK,IAAA;EAAAI,QAAAH,CAAA;IAAAC,KAAA,GAAAD,CAAA;EAAA;EAAAE,QAAAF,CAAA;IAAAE,OAAA,GAAAF,CAAA;EAAA;AAAA;AAAA,IAAAI,sBAAA;AAAAV,MAAA,CAAAK,IAAA;EAAAK,uBAAAJ,CAAA;IAAAI,sBAAA,GAAAJ,CAAA;EAAA;AAAA;AAQxC,MAAMJ,oBAAoB,GAAG,IAAK,MAAMS,kBAAmB,SAAQP,OAKzE;EAAAQ,YAAA;IAAA,SAAAC,SAAA;IAAA,KACAC,KAAK,GAAG,IAAIC,GAAG,EAAU;IAAA,KAEzBC,WAAW,GAAG,KAAK;EAAA;EAEnBC,cAAcA,CAACD,WAAoB;IAClC,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACE,IAAI,CAAC,mBAAmB,EAAEF,WAAW,CAAC;EAC5C;EAEAG,cAAcA,CAAA;IACb,OAAO,IAAI,CAACH,WAAW;EACxB;EAEAI,UAAUA,CAACC,GAAW;IACrB,OAAOC,OAAO,CAAC,IAAI,CAACR,KAAK,CAACS,GAAG,CAACF,GAAG,CAAC,CAAC;EACpC;EAEAG,mBAAmBA,CAAA;IAClB,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACZ,KAAK,CAAC;EAC9B;EAEAa,MAAMA,CAACN,GAAW;IACjB,IAAI,IAAI,CAACP,KAAK,CAACS,GAAG,CAACF,GAAG,CAAC,EAAE;MACxB,IAAI,CAACP,KAAK,CAACc,MAAM,CAACP,GAAG,CAAC;MACtB,IAAI,CAACH,IAAI,CAACG,GAAG,EAAE,KAAK,CAAC;MACrB,IAAI,CAACH,IAAI,CAAC,QAAQ,CAAC;MACnB;IACD;IACA,IAAI,CAACJ,KAAK,CAACe,GAAG,CAACR,GAAG,CAAC;IACnB,IAAI,CAACH,IAAI,CAACG,GAAG,EAAE,IAAI,CAAC;IACpB,IAAI,CAACH,IAAI,CAAC,QAAQ,CAAC;EACpB;EAEAY,KAAKA,CAAA;IACJ,OAAO,IAAI,CAAChB,KAAK,CAACiB,IAAI;EACvB;EAEAC,UAAUA,CAAA;IACT,MAAMC,gBAAgB,GAAG,IAAI,CAACT,mBAAmB,EAAE;IACnD,IAAI,CAACV,KAAK,CAACoB,KAAK,EAAE;IAClBD,gBAAgB,CAACE,OAAO,CAAEd,GAAG,IAAK,IAAI,CAACH,IAAI,CAACG,GAAG,EAAE,KAAK,CAAC,CAAC;IACxD,IAAI,CAACH,IAAI,CAAC,QAAQ,CAAC;EACpB;EAEAkB,KAAKA,CAAA;IACJ,IAAI,CAACJ,UAAU,EAAE;IACjB,IAAI,CAAChB,WAAW,GAAG,KAAK;IACxB,IAAI,CAACE,IAAI,CAAC,mBAAmB,EAAE,KAAK,CAAC;EACtC;CACA,CAAC,CAAE;AAMG,MAAMf,wBAAwB,GAAGkC,IAAA,IAAgD;EAAA,IAA/C;IAAEC;EAAQ,CAAiC,GAAAD,IAAA;EACnF,MAAME,KAAK,GAAG/B,OAAO,CACpB,OAAO;IACNN;GACA,CAAC,EACF,EAAE,CACF;EAED,oBAAOK,KAAA,CAAAiC,aAAA,CAAC9B,sBAAsB,CAAC+B,QAAQ;IAACF,KAAK,EAAEA;EAAM,GAAED,QAA0C,CAAC;AACnG,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8c543bc4b1f973e5cac31937803386e146a25a67"}
