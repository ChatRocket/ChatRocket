{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/contactHistory/MessageList/ContactHistoryMessage.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/contactHistory/MessageList/ContactHistoryMessage.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/contactHistory/MessageList/ContactHistoryMessage.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/contactHistory/MessageList/ContactHistoryMessage.tsx","sourceRoot":"","sources":["client/views/omnichannel/contactHistory/MessageList/ContactHistoryMessage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { isQuoteAttachment, type IMessage, type MessageAttachment } from '@rocket.chat/core-typings';\nimport {\n\tMessage as MessageTemplate,\n\tMessageLeftContainer,\n\tMessageContainer,\n\tMessageBody,\n\tMessageDivider,\n\tMessageName,\n\tMessageUsername,\n\tMessageTimestamp,\n\tMessageHeader as MessageHeaderTemplate,\n\tMessageSystem,\n\tMessageSystemLeftContainer,\n\tMessageSystemContainer,\n\tMessageSystemBlock,\n\tMessageSystemName,\n\tMessageSystemBody,\n\tMessageSystemTimestamp,\n} from '@rocket.chat/fuselage';\nimport { UserAvatar } from '@rocket.chat/ui-avatar';\nimport React, { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { getUserDisplayName } from '../../../../../lib/getUserDisplayName';\nimport MessageContentBody from '../../../../components/message/MessageContentBody';\nimport StatusIndicators from '../../../../components/message/StatusIndicators';\nimport Attachments from '../../../../components/message/content/Attachments';\nimport UiKitMessageBlock from '../../../../components/message/uikit/UiKitMessageBlock';\nimport { useFormatDate } from '../../../../hooks/useFormatDate';\nimport { useFormatTime } from '../../../../hooks/useFormatTime';\nimport { useUserCard } from '../../../room/contexts/UserCardContext';\n\ntype ContactHistoryMessageProps = {\n\tmessage: IMessage;\n\tsequential: boolean;\n\tisNewDay: boolean;\n\tshowUserAvatar: boolean;\n};\n\nconst ContactHistoryMessage = ({ message, sequential, isNewDay, showUserAvatar }: ContactHistoryMessageProps) => {\n\tconst { t } = useTranslation();\n\tconst { triggerProps, openUserCard } = useUserCard();\n\n\tconst format = useFormatDate();\n\tconst formatTime = useFormatTime();\n\n\tconst quotes = message?.attachments?.filter(isQuoteAttachment) || [];\n\n\tconst attachments = message?.attachments?.filter((attachment: MessageAttachment) => !isQuoteAttachment(attachment)) || [];\n\n\tif (message.t === 'livechat-close') {\n\t\treturn (\n\t\t\t<MessageSystem>\n\t\t\t\t<MessageSystemLeftContainer>\n\t\t\t\t\t{showUserAvatar && (\n\t\t\t\t\t\t<UserAvatar\n\t\t\t\t\t\t\turl={message.avatar}\n\t\t\t\t\t\t\tusername={message.u.username}\n\t\t\t\t\t\t\tsize='x18'\n\t\t\t\t\t\t\tonClick={(e) => openUserCard(e, message.u.username)}\n\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\trole='button'\n\t\t\t\t\t\t\t{...triggerProps}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</MessageSystemLeftContainer>\n\t\t\t\t<MessageSystemContainer>\n\t\t\t\t\t<MessageSystemBlock>\n\t\t\t\t\t\t<MessageSystemName data-username={message.u.username} data-qa-type='username'>\n\t\t\t\t\t\t\t@{message.u.username}\n\t\t\t\t\t\t</MessageSystemName>\n\t\t\t\t\t\t<MessageSystemBody title={message.msg}>{t('Conversation_closed', { comment: message.msg })}</MessageSystemBody>\n\t\t\t\t\t\t<MessageSystemTimestamp title={formatTime(message.ts)}>{formatTime(message.ts)}</MessageSystemTimestamp>\n\t\t\t\t\t</MessageSystemBlock>\n\t\t\t\t</MessageSystemContainer>\n\t\t\t</MessageSystem>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{isNewDay && <MessageDivider>{format(message.ts)}</MessageDivider>}\n\t\t\t<MessageTemplate isPending={message.temp} sequential={sequential} role='listitem' data-qa='chat-history-message'>\n\t\t\t\t<MessageLeftContainer>\n\t\t\t\t\t{!sequential && message.u.username && showUserAvatar && (\n\t\t\t\t\t\t<UserAvatar\n\t\t\t\t\t\t\turl={message.avatar}\n\t\t\t\t\t\t\tusername={message.u.username}\n\t\t\t\t\t\t\tsize='x36'\n\t\t\t\t\t\t\tonClick={(e) => openUserCard(e, message.u.username)}\n\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\trole='button'\n\t\t\t\t\t\t\t{...triggerProps}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{sequential && <StatusIndicators message={message} />}\n\t\t\t\t</MessageLeftContainer>\n\n\t\t\t\t<MessageContainer>\n\t\t\t\t\t{!sequential && (\n\t\t\t\t\t\t<MessageHeaderTemplate>\n\t\t\t\t\t\t\t<MessageName title={`@${message.u.username}`} data-username={message.u.username}>\n\t\t\t\t\t\t\t\t{message.alias || getUserDisplayName(message.u.name, message.u.username, false)}\n\t\t\t\t\t\t\t</MessageName>\n\t\t\t\t\t\t\t<MessageUsername data-username={message.u.username} data-qa-type='username'>\n\t\t\t\t\t\t\t\t@{message.u.username}\n\t\t\t\t\t\t\t</MessageUsername>\n\t\t\t\t\t\t\t<MessageTimestamp title={formatTime(message.ts)}>{formatTime(message.ts)}</MessageTimestamp>\n\t\t\t\t\t\t\t<StatusIndicators message={message} />\n\t\t\t\t\t\t</MessageHeaderTemplate>\n\t\t\t\t\t)}\n\t\t\t\t\t{!!quotes?.length && <Attachments attachments={quotes} />}\n\t\t\t\t\t{!message.blocks && message.md && (\n\t\t\t\t\t\t<MessageBody data-qa-type='message-body' dir='auto'>\n\t\t\t\t\t\t\t<MessageContentBody md={message.md} mentions={message.mentions} channels={message.channels} />\n\t\t\t\t\t\t</MessageBody>\n\t\t\t\t\t)}\n\t\t\t\t\t{message.blocks && <UiKitMessageBlock rid={message.rid} mid={message._id} blocks={message.blocks} />}\n\t\t\t\t\t{!!attachments && <Attachments attachments={attachments} />}\n\t\t\t\t</MessageContainer>\n\t\t\t</MessageTemplate>\n\t\t</>\n\t);\n};\n\nexport default memo(ContactHistoryMessage);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/contactHistory/MessageList/ContactHistoryMessage.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/contactHistory/MessageList/ContactHistoryMessage.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/contactHistory/MessageList/ContactHistoryMessage.tsx","sourceRoot":"","sources":["client/views/omnichannel/contactHistory/MessageList/ContactHistoryMessage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { isQuoteAttachment, type IMessage, type MessageAttachment } from '@rocket.chat/core-typings';\nimport {\n\tMessage as MessageTemplate,\n\tMessageLeftContainer,\n\tMessageContainer,\n\tMessageBody,\n\tMessageDivider,\n\tMessageName,\n\tMessageUsername,\n\tMessageTimestamp,\n\tMessageHeader as MessageHeaderTemplate,\n\tMessageSystem,\n\tMessageSystemLeftContainer,\n\tMessageSystemContainer,\n\tMessageSystemBlock,\n\tMessageSystemName,\n\tMessageSystemBody,\n\tMessageSystemTimestamp,\n} from '@rocket.chat/fuselage';\nimport { UserAvatar } from '@rocket.chat/ui-avatar';\nimport React, { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { getUserDisplayName } from '../../../../../lib/getUserDisplayName';\nimport MessageContentBody from '../../../../components/message/MessageContentBody';\nimport StatusIndicators from '../../../../components/message/StatusIndicators';\nimport Attachments from '../../../../components/message/content/Attachments';\nimport UiKitMessageBlock from '../../../../components/message/uikit/UiKitMessageBlock';\nimport { useFormatDate } from '../../../../hooks/useFormatDate';\nimport { useFormatTime } from '../../../../hooks/useFormatTime';\nimport { useUserCard } from '../../../room/contexts/UserCardContext';\n\ntype ContactHistoryMessageProps = {\n\tmessage: IMessage;\n\tsequential: boolean;\n\tisNewDay: boolean;\n\tshowUserAvatar: boolean;\n};\n\nconst ContactHistoryMessage = ({ message, sequential, isNewDay, showUserAvatar }: ContactHistoryMessageProps) => {\n\tconst { t } = useTranslation();\n\tconst { triggerProps, openUserCard } = useUserCard();\n\n\tconst format = useFormatDate();\n\tconst formatTime = useFormatTime();\n\n\tconst quotes = message?.attachments?.filter(isQuoteAttachment) || [];\n\n\tconst attachments = message?.attachments?.filter((attachment: MessageAttachment) => !isQuoteAttachment(attachment)) || [];\n\n\tif (message.t === 'livechat-close') {\n\t\treturn (\n\t\t\t<MessageSystem>\n\t\t\t\t<MessageSystemLeftContainer>\n\t\t\t\t\t{showUserAvatar && (\n\t\t\t\t\t\t<UserAvatar\n\t\t\t\t\t\t\turl={message.avatar}\n\t\t\t\t\t\t\tusername={message.u.username}\n\t\t\t\t\t\t\tsize='x18'\n\t\t\t\t\t\t\tonClick={(e) => openUserCard(e, message.u.username)}\n\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\trole='button'\n\t\t\t\t\t\t\t{...triggerProps}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</MessageSystemLeftContainer>\n\t\t\t\t<MessageSystemContainer>\n\t\t\t\t\t<MessageSystemBlock>\n\t\t\t\t\t\t<MessageSystemName data-username={message.u.username} data-qa-type='username'>\n\t\t\t\t\t\t\t@{message.u.username}\n\t\t\t\t\t\t</MessageSystemName>\n\t\t\t\t\t\t<MessageSystemBody title={message.msg}>{t('Conversation_closed', { comment: message.msg })}</MessageSystemBody>\n\t\t\t\t\t\t<MessageSystemTimestamp title={formatTime(message.ts)}>{formatTime(message.ts)}</MessageSystemTimestamp>\n\t\t\t\t\t</MessageSystemBlock>\n\t\t\t\t</MessageSystemContainer>\n\t\t\t</MessageSystem>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{isNewDay && <MessageDivider>{format(message.ts)}</MessageDivider>}\n\t\t\t<MessageTemplate isPending={message.temp} sequential={sequential} role='listitem' data-qa='chat-history-message'>\n\t\t\t\t<MessageLeftContainer>\n\t\t\t\t\t{!sequential && message.u.username && showUserAvatar && (\n\t\t\t\t\t\t<UserAvatar\n\t\t\t\t\t\t\turl={message.avatar}\n\t\t\t\t\t\t\tusername={message.u.username}\n\t\t\t\t\t\t\tsize='x36'\n\t\t\t\t\t\t\tonClick={(e) => openUserCard(e, message.u.username)}\n\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\trole='button'\n\t\t\t\t\t\t\t{...triggerProps}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{sequential && <StatusIndicators message={message} />}\n\t\t\t\t</MessageLeftContainer>\n\n\t\t\t\t<MessageContainer>\n\t\t\t\t\t{!sequential && (\n\t\t\t\t\t\t<MessageHeaderTemplate>\n\t\t\t\t\t\t\t<MessageName title={`@${message.u.username}`} data-username={message.u.username}>\n\t\t\t\t\t\t\t\t{message.alias || getUserDisplayName(message.u.name, message.u.username, false)}\n\t\t\t\t\t\t\t</MessageName>\n\t\t\t\t\t\t\t<MessageUsername data-username={message.u.username} data-qa-type='username'>\n\t\t\t\t\t\t\t\t@{message.u.username}\n\t\t\t\t\t\t\t</MessageUsername>\n\t\t\t\t\t\t\t<MessageTimestamp title={formatTime(message.ts)}>{formatTime(message.ts)}</MessageTimestamp>\n\t\t\t\t\t\t\t<StatusIndicators message={message} />\n\t\t\t\t\t\t</MessageHeaderTemplate>\n\t\t\t\t\t)}\n\t\t\t\t\t{!!quotes?.length && <Attachments attachments={quotes} />}\n\t\t\t\t\t{!message.blocks && message.md && (\n\t\t\t\t\t\t<MessageBody data-qa-type='message-body' dir='auto'>\n\t\t\t\t\t\t\t<MessageContentBody md={message.md} mentions={message.mentions} channels={message.channels} />\n\t\t\t\t\t\t</MessageBody>\n\t\t\t\t\t)}\n\t\t\t\t\t{message.blocks && <UiKitMessageBlock rid={message.rid} mid={message._id} blocks={message.blocks} />}\n\t\t\t\t\t{!!attachments && <Attachments attachments={attachments} />}\n\t\t\t\t</MessageContainer>\n\t\t\t</MessageTemplate>\n\t\t</>\n\t);\n};\n\nexport default memo(ContactHistoryMessage);\n"]}}},"code":"let _extends;\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n}, 0);\nlet isQuoteAttachment;\nmodule.link(\"@rocket.chat/core-typings\", {\n  isQuoteAttachment(v) {\n    isQuoteAttachment = v;\n  }\n}, 0);\nlet MessageTemplate, MessageLeftContainer, MessageContainer, MessageBody, MessageDivider, MessageName, MessageUsername, MessageTimestamp, MessageHeaderTemplate, MessageSystem, MessageSystemLeftContainer, MessageSystemContainer, MessageSystemBlock, MessageSystemName, MessageSystemBody, MessageSystemTimestamp;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Message(v) {\n    MessageTemplate = v;\n  },\n  MessageLeftContainer(v) {\n    MessageLeftContainer = v;\n  },\n  MessageContainer(v) {\n    MessageContainer = v;\n  },\n  MessageBody(v) {\n    MessageBody = v;\n  },\n  MessageDivider(v) {\n    MessageDivider = v;\n  },\n  MessageName(v) {\n    MessageName = v;\n  },\n  MessageUsername(v) {\n    MessageUsername = v;\n  },\n  MessageTimestamp(v) {\n    MessageTimestamp = v;\n  },\n  MessageHeader(v) {\n    MessageHeaderTemplate = v;\n  },\n  MessageSystem(v) {\n    MessageSystem = v;\n  },\n  MessageSystemLeftContainer(v) {\n    MessageSystemLeftContainer = v;\n  },\n  MessageSystemContainer(v) {\n    MessageSystemContainer = v;\n  },\n  MessageSystemBlock(v) {\n    MessageSystemBlock = v;\n  },\n  MessageSystemName(v) {\n    MessageSystemName = v;\n  },\n  MessageSystemBody(v) {\n    MessageSystemBody = v;\n  },\n  MessageSystemTimestamp(v) {\n    MessageSystemTimestamp = v;\n  }\n}, 1);\nlet UserAvatar;\nmodule.link(\"@rocket.chat/ui-avatar\", {\n  UserAvatar(v) {\n    UserAvatar = v;\n  }\n}, 2);\nlet React, memo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  memo(v) {\n    memo = v;\n  }\n}, 3);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 4);\nlet getUserDisplayName;\nmodule.link(\"../../../../../lib/getUserDisplayName\", {\n  getUserDisplayName(v) {\n    getUserDisplayName = v;\n  }\n}, 5);\nlet MessageContentBody;\nmodule.link(\"../../../../components/message/MessageContentBody\", {\n  default(v) {\n    MessageContentBody = v;\n  }\n}, 6);\nlet StatusIndicators;\nmodule.link(\"../../../../components/message/StatusIndicators\", {\n  default(v) {\n    StatusIndicators = v;\n  }\n}, 7);\nlet Attachments;\nmodule.link(\"../../../../components/message/content/Attachments\", {\n  default(v) {\n    Attachments = v;\n  }\n}, 8);\nlet UiKitMessageBlock;\nmodule.link(\"../../../../components/message/uikit/UiKitMessageBlock\", {\n  default(v) {\n    UiKitMessageBlock = v;\n  }\n}, 9);\nlet useFormatDate;\nmodule.link(\"../../../../hooks/useFormatDate\", {\n  useFormatDate(v) {\n    useFormatDate = v;\n  }\n}, 10);\nlet useFormatTime;\nmodule.link(\"../../../../hooks/useFormatTime\", {\n  useFormatTime(v) {\n    useFormatTime = v;\n  }\n}, 11);\nlet useUserCard;\nmodule.link(\"../../../room/contexts/UserCardContext\", {\n  useUserCard(v) {\n    useUserCard = v;\n  }\n}, 12);\nconst ContactHistoryMessage = _ref => {\n  var _message$attachments, _message$attachments2;\n  let {\n    message,\n    sequential,\n    isNewDay,\n    showUserAvatar\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    triggerProps,\n    openUserCard\n  } = useUserCard();\n  const format = useFormatDate();\n  const formatTime = useFormatTime();\n  const quotes = (message === null || message === void 0 ? void 0 : (_message$attachments = message.attachments) === null || _message$attachments === void 0 ? void 0 : _message$attachments.filter(isQuoteAttachment)) || [];\n  const attachments = (message === null || message === void 0 ? void 0 : (_message$attachments2 = message.attachments) === null || _message$attachments2 === void 0 ? void 0 : _message$attachments2.filter(attachment => !isQuoteAttachment(attachment))) || [];\n  if (message.t === 'livechat-close') {\n    return /*#__PURE__*/React.createElement(MessageSystem, null, /*#__PURE__*/React.createElement(MessageSystemLeftContainer, null, showUserAvatar && /*#__PURE__*/React.createElement(UserAvatar, _extends({\n      url: message.avatar,\n      username: message.u.username,\n      size: \"x18\",\n      onClick: e => openUserCard(e, message.u.username),\n      style: {\n        cursor: 'pointer'\n      },\n      role: \"button\"\n    }, triggerProps))), /*#__PURE__*/React.createElement(MessageSystemContainer, null, /*#__PURE__*/React.createElement(MessageSystemBlock, null, /*#__PURE__*/React.createElement(MessageSystemName, {\n      \"data-username\": message.u.username,\n      \"data-qa-type\": \"username\"\n    }, \"@\", message.u.username), /*#__PURE__*/React.createElement(MessageSystemBody, {\n      title: message.msg\n    }, t('Conversation_closed', {\n      comment: message.msg\n    })), /*#__PURE__*/React.createElement(MessageSystemTimestamp, {\n      title: formatTime(message.ts)\n    }, formatTime(message.ts)))));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isNewDay && /*#__PURE__*/React.createElement(MessageDivider, null, format(message.ts)), /*#__PURE__*/React.createElement(MessageTemplate, {\n    isPending: message.temp,\n    sequential: sequential,\n    role: \"listitem\",\n    \"data-qa\": \"chat-history-message\"\n  }, /*#__PURE__*/React.createElement(MessageLeftContainer, null, !sequential && message.u.username && showUserAvatar && /*#__PURE__*/React.createElement(UserAvatar, _extends({\n    url: message.avatar,\n    username: message.u.username,\n    size: \"x36\",\n    onClick: e => openUserCard(e, message.u.username),\n    style: {\n      cursor: 'pointer'\n    },\n    role: \"button\"\n  }, triggerProps)), sequential && /*#__PURE__*/React.createElement(StatusIndicators, {\n    message: message\n  })), /*#__PURE__*/React.createElement(MessageContainer, null, !sequential && /*#__PURE__*/React.createElement(MessageHeaderTemplate, null, /*#__PURE__*/React.createElement(MessageName, {\n    title: \"@\".concat(message.u.username),\n    \"data-username\": message.u.username\n  }, message.alias || getUserDisplayName(message.u.name, message.u.username, false)), /*#__PURE__*/React.createElement(MessageUsername, {\n    \"data-username\": message.u.username,\n    \"data-qa-type\": \"username\"\n  }, \"@\", message.u.username), /*#__PURE__*/React.createElement(MessageTimestamp, {\n    title: formatTime(message.ts)\n  }, formatTime(message.ts)), /*#__PURE__*/React.createElement(StatusIndicators, {\n    message: message\n  })), !!(quotes !== null && quotes !== void 0 && quotes.length) && /*#__PURE__*/React.createElement(Attachments, {\n    attachments: quotes\n  }), !message.blocks && message.md && /*#__PURE__*/React.createElement(MessageBody, {\n    \"data-qa-type\": \"message-body\",\n    dir: \"auto\"\n  }, /*#__PURE__*/React.createElement(MessageContentBody, {\n    md: message.md,\n    mentions: message.mentions,\n    channels: message.channels\n  })), message.blocks && /*#__PURE__*/React.createElement(UiKitMessageBlock, {\n    rid: message.rid,\n    mid: message._id,\n    blocks: message.blocks\n  }), !!attachments && /*#__PURE__*/React.createElement(Attachments, {\n    attachments: attachments\n  }))));\n};\nmodule.exportDefault( /*#__PURE__*/memo(ContactHistoryMessage));","map":{"version":3,"names":["_extends","module","link","default","v","isQuoteAttachment","MessageTemplate","MessageLeftContainer","MessageContainer","MessageBody","MessageDivider","MessageName","MessageUsername","MessageTimestamp","MessageHeaderTemplate","MessageSystem","MessageSystemLeftContainer","MessageSystemContainer","MessageSystemBlock","MessageSystemName","MessageSystemBody","MessageSystemTimestamp","Message","MessageHeader","UserAvatar","React","memo","useTranslation","getUserDisplayName","MessageContentBody","StatusIndicators","Attachments","UiKitMessageBlock","useFormatDate","useFormatTime","useUserCard","ContactHistoryMessage","_ref","_message$attachments","_message$attachments2","message","sequential","isNewDay","showUserAvatar","t","triggerProps","openUserCard","format","formatTime","quotes","attachments","filter","attachment","createElement","url","avatar","username","u","size","onClick","e","style","cursor","role","title","msg","comment","ts","Fragment","isPending","temp","concat","alias","name","length","blocks","md","dir","mentions","channels","rid","mid","_id","exportDefault"],"sources":["client/views/omnichannel/contactHistory/MessageList/ContactHistoryMessage.tsx"],"sourcesContent":["import { isQuoteAttachment, type IMessage, type MessageAttachment } from '@rocket.chat/core-typings';\nimport {\n\tMessage as MessageTemplate,\n\tMessageLeftContainer,\n\tMessageContainer,\n\tMessageBody,\n\tMessageDivider,\n\tMessageName,\n\tMessageUsername,\n\tMessageTimestamp,\n\tMessageHeader as MessageHeaderTemplate,\n\tMessageSystem,\n\tMessageSystemLeftContainer,\n\tMessageSystemContainer,\n\tMessageSystemBlock,\n\tMessageSystemName,\n\tMessageSystemBody,\n\tMessageSystemTimestamp,\n} from '@rocket.chat/fuselage';\nimport { UserAvatar } from '@rocket.chat/ui-avatar';\nimport React, { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { getUserDisplayName } from '../../../../../lib/getUserDisplayName';\nimport MessageContentBody from '../../../../components/message/MessageContentBody';\nimport StatusIndicators from '../../../../components/message/StatusIndicators';\nimport Attachments from '../../../../components/message/content/Attachments';\nimport UiKitMessageBlock from '../../../../components/message/uikit/UiKitMessageBlock';\nimport { useFormatDate } from '../../../../hooks/useFormatDate';\nimport { useFormatTime } from '../../../../hooks/useFormatTime';\nimport { useUserCard } from '../../../room/contexts/UserCardContext';\n\ntype ContactHistoryMessageProps = {\n\tmessage: IMessage;\n\tsequential: boolean;\n\tisNewDay: boolean;\n\tshowUserAvatar: boolean;\n};\n\nconst ContactHistoryMessage = ({ message, sequential, isNewDay, showUserAvatar }: ContactHistoryMessageProps) => {\n\tconst { t } = useTranslation();\n\tconst { triggerProps, openUserCard } = useUserCard();\n\n\tconst format = useFormatDate();\n\tconst formatTime = useFormatTime();\n\n\tconst quotes = message?.attachments?.filter(isQuoteAttachment) || [];\n\n\tconst attachments = message?.attachments?.filter((attachment: MessageAttachment) => !isQuoteAttachment(attachment)) || [];\n\n\tif (message.t === 'livechat-close') {\n\t\treturn (\n\t\t\t<MessageSystem>\n\t\t\t\t<MessageSystemLeftContainer>\n\t\t\t\t\t{showUserAvatar && (\n\t\t\t\t\t\t<UserAvatar\n\t\t\t\t\t\t\turl={message.avatar}\n\t\t\t\t\t\t\tusername={message.u.username}\n\t\t\t\t\t\t\tsize='x18'\n\t\t\t\t\t\t\tonClick={(e) => openUserCard(e, message.u.username)}\n\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\trole='button'\n\t\t\t\t\t\t\t{...triggerProps}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</MessageSystemLeftContainer>\n\t\t\t\t<MessageSystemContainer>\n\t\t\t\t\t<MessageSystemBlock>\n\t\t\t\t\t\t<MessageSystemName data-username={message.u.username} data-qa-type='username'>\n\t\t\t\t\t\t\t@{message.u.username}\n\t\t\t\t\t\t</MessageSystemName>\n\t\t\t\t\t\t<MessageSystemBody title={message.msg}>{t('Conversation_closed', { comment: message.msg })}</MessageSystemBody>\n\t\t\t\t\t\t<MessageSystemTimestamp title={formatTime(message.ts)}>{formatTime(message.ts)}</MessageSystemTimestamp>\n\t\t\t\t\t</MessageSystemBlock>\n\t\t\t\t</MessageSystemContainer>\n\t\t\t</MessageSystem>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{isNewDay && <MessageDivider>{format(message.ts)}</MessageDivider>}\n\t\t\t<MessageTemplate isPending={message.temp} sequential={sequential} role='listitem' data-qa='chat-history-message'>\n\t\t\t\t<MessageLeftContainer>\n\t\t\t\t\t{!sequential && message.u.username && showUserAvatar && (\n\t\t\t\t\t\t<UserAvatar\n\t\t\t\t\t\t\turl={message.avatar}\n\t\t\t\t\t\t\tusername={message.u.username}\n\t\t\t\t\t\t\tsize='x36'\n\t\t\t\t\t\t\tonClick={(e) => openUserCard(e, message.u.username)}\n\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\trole='button'\n\t\t\t\t\t\t\t{...triggerProps}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{sequential && <StatusIndicators message={message} />}\n\t\t\t\t</MessageLeftContainer>\n\n\t\t\t\t<MessageContainer>\n\t\t\t\t\t{!sequential && (\n\t\t\t\t\t\t<MessageHeaderTemplate>\n\t\t\t\t\t\t\t<MessageName title={`@${message.u.username}`} data-username={message.u.username}>\n\t\t\t\t\t\t\t\t{message.alias || getUserDisplayName(message.u.name, message.u.username, false)}\n\t\t\t\t\t\t\t</MessageName>\n\t\t\t\t\t\t\t<MessageUsername data-username={message.u.username} data-qa-type='username'>\n\t\t\t\t\t\t\t\t@{message.u.username}\n\t\t\t\t\t\t\t</MessageUsername>\n\t\t\t\t\t\t\t<MessageTimestamp title={formatTime(message.ts)}>{formatTime(message.ts)}</MessageTimestamp>\n\t\t\t\t\t\t\t<StatusIndicators message={message} />\n\t\t\t\t\t\t</MessageHeaderTemplate>\n\t\t\t\t\t)}\n\t\t\t\t\t{!!quotes?.length && <Attachments attachments={quotes} />}\n\t\t\t\t\t{!message.blocks && message.md && (\n\t\t\t\t\t\t<MessageBody data-qa-type='message-body' dir='auto'>\n\t\t\t\t\t\t\t<MessageContentBody md={message.md} mentions={message.mentions} channels={message.channels} />\n\t\t\t\t\t\t</MessageBody>\n\t\t\t\t\t)}\n\t\t\t\t\t{message.blocks && <UiKitMessageBlock rid={message.rid} mid={message._id} blocks={message.blocks} />}\n\t\t\t\t\t{!!attachments && <Attachments attachments={attachments} />}\n\t\t\t\t</MessageContainer>\n\t\t\t</MessageTemplate>\n\t\t</>\n\t);\n};\n\nexport default memo(ContactHistoryMessage);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"917977f884bb4f5c88f0ab3ba6e0dab5fc652cb6"}
