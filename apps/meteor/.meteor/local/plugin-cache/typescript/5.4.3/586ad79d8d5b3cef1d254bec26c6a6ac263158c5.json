{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/hooks/sendToCRM.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/hooks/sendToCRM.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/hooks/sendToCRM.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/hooks/sendToCRM.ts","sourceRoot":"","sources":["app/livechat/server/hooks/sendToCRM.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelRoom, IOmnichannelSystemMessage, IMessage } from '@rocket.chat/core-typings';\nimport { isEditedMessage, isOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { LivechatRooms, Messages } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { settings } from '../../../settings/server';\nimport { normalizeMessageFileUpload } from '../../../utils/server/functions/normalizeMessageFileUpload';\nimport { Livechat as LivechatTyped } from '../lib/LivechatTyped';\n\ntype AdditionalFields =\n\t| Record<string, unknown>\n\t| {\n\t\t\tdepartmentId: IOmnichannelRoom['departmentId'];\n\t  }\n\t| {\n\t\t\tdepartmentId: IOmnichannelRoom['departmentId'];\n\t\t\tservedBy: IOmnichannelRoom['servedBy'];\n\t  }\n\t| {\n\t\t\tdepartmentId: IOmnichannelRoom['departmentId'];\n\t\t\tservedBy: IOmnichannelRoom['servedBy'];\n\t\t\toldDepartmentId: IOmnichannelRoom['departmentId'];\n\t\t\toldServedBy: { _id: string; ts: Date; username?: string };\n\t  }\n\t| {\n\t\t\tdepartmentId: IOmnichannelRoom['departmentId'];\n\t\t\tservedBy: IOmnichannelRoom['servedBy'];\n\t\t\tclosedAt: IOmnichannelRoom['closedAt'];\n\t\t\tclosedBy: IOmnichannelRoom['closedBy'];\n\t\t\tcloser: IOmnichannelRoom['closer'];\n\t  };\n\ntype OmnichannelRoomWithExtraFields = IOmnichannelRoom & {\n\toldServedBy?: { _id: string; ts: Date; username?: string };\n\toldDepartmentId?: IOmnichannelRoom['departmentId'];\n};\n\ntype CRMActions =\n\t| 'LivechatSessionStart'\n\t| 'LivechatSessionQueued'\n\t| 'LivechatSession'\n\t| 'LivechatSessionTaken'\n\t| 'LivechatSessionForwarded'\n\t| 'LivechatEdit'\n\t| 'Message'\n\t| 'LeadCapture';\n\nconst msgNavType = 'livechat_navigation_history';\nconst msgClosingType = 'livechat-close';\n\nexport const isOmnichannelNavigationMessage = (message: IMessage): message is IOmnichannelSystemMessage => {\n\treturn message.t === msgNavType;\n};\n\nexport const isOmnichannelClosingMessage = (message: IMessage): message is IOmnichannelSystemMessage => {\n\treturn message.t === msgClosingType;\n};\n\nexport const sendMessageType = (msgType: string): boolean => {\n\tswitch (msgType) {\n\t\tcase msgClosingType:\n\t\t\treturn true;\n\t\tcase msgNavType:\n\t\t\treturn (\n\t\t\t\tsettings.get<boolean>('Livechat_Visitor_navigation_as_a_message') &&\n\t\t\t\tsettings.get<boolean>('Send_visitor_navigation_history_livechat_webhook_request')\n\t\t\t);\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\n\nexport const getAdditionalFieldsByType = (type: CRMActions, room: OmnichannelRoomWithExtraFields): AdditionalFields => {\n\tconst { departmentId, servedBy, closedAt, closedBy, closer, oldServedBy, oldDepartmentId } = room;\n\tswitch (type) {\n\t\tcase 'LivechatSessionStart':\n\t\tcase 'LivechatSessionQueued':\n\t\t\treturn { departmentId };\n\t\tcase 'LivechatSession':\n\t\t\treturn { departmentId, servedBy, closedAt, closedBy, closer };\n\t\tcase 'LivechatSessionTaken':\n\t\t\treturn { departmentId, servedBy };\n\t\tcase 'LivechatSessionForwarded':\n\t\t\treturn { departmentId, servedBy, oldDepartmentId, oldServedBy };\n\t\tdefault:\n\t\t\treturn {};\n\t}\n};\n\nasync function sendToCRM(\n\ttype: CRMActions,\n\troom: OmnichannelRoomWithExtraFields,\n\tincludeMessages: boolean | IOmnichannelSystemMessage[] = true,\n): Promise<OmnichannelRoomWithExtraFields> {\n\tif (!settings.get('Livechat_webhookUrl')) {\n\t\treturn room;\n\t}\n\n\tconst postData: Awaited<ReturnType<typeof LivechatTyped.getLivechatRoomGuestInfo>> & {\n\t\ttype: string;\n\t\tmessages: IOmnichannelSystemMessage[];\n\t} = {\n\t\t...(await LivechatTyped.getLivechatRoomGuestInfo(room)),\n\t\ttype,\n\t\tmessages: [],\n\t};\n\n\tlet messages: IOmnichannelSystemMessage[] | null = null;\n\tif (typeof includeMessages === 'boolean' && includeMessages) {\n\t\tmessages = await Messages.findVisibleByRoomId<IOmnichannelSystemMessage>(room._id, { sort: { ts: 1 } }).toArray();\n\t} else if (includeMessages instanceof Array) {\n\t\tmessages = includeMessages;\n\t}\n\n\tif (messages) {\n\t\tfor await (const message of messages) {\n\t\t\tif (message.t && !sendMessageType(message.t)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst msg = {\n\t\t\t\t_id: message._id,\n\t\t\t\tusername: message.u.username,\n\t\t\t\tmsg: message.msg || JSON.stringify(message.blocks),\n\t\t\t\t...(message.blocks && message.blocks.length > 0 ? { blocks: message.blocks } : {}),\n\t\t\t\tts: message.ts,\n\t\t\t\trid: message.rid,\n\t\t\t\t...(isEditedMessage(message) && { editedAt: message.editedAt }),\n\t\t\t\t...(message.u.username !== postData.visitor.username && { agentId: message.u._id }),\n\t\t\t\t...(isOmnichannelNavigationMessage(message) && { navigation: message.navigation }),\n\t\t\t\t...(isOmnichannelClosingMessage(message) && { closingMessage: true }),\n\t\t\t\t...(message.file && { file: message.file, attachments: message.attachments }),\n\t\t\t};\n\n\t\t\tconst { u } = message;\n\t\t\tpostData.messages.push({ ...(await normalizeMessageFileUpload({ u, ...msg })), ...{ _updatedAt: message._updatedAt } });\n\t\t}\n\t}\n\n\tconst additionalData = getAdditionalFieldsByType(type, room);\n\tconst responseData = Object.assign(postData, additionalData);\n\n\tconst response = await LivechatTyped.sendRequest(responseData);\n\n\tif (response) {\n\t\tconst responseData = await response.text();\n\t\tawait LivechatRooms.saveCRMDataByRoomId(room._id, responseData);\n\t}\n\n\treturn room;\n}\n\ncallbacks.add(\n\t'livechat.closeRoom',\n\tasync (params) => {\n\t\tconst { room } = params;\n\t\tif (!settings.get('Livechat_webhook_on_close')) {\n\t\t\treturn params;\n\t\t}\n\n\t\tawait sendToCRM('LivechatSession', room);\n\n\t\treturn params;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-close-room',\n);\n\ncallbacks.add(\n\t'livechat.newRoom',\n\tasync (room) => {\n\t\tif (!settings.get('Livechat_webhook_on_start')) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatSessionStart', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-start-room',\n);\n\ncallbacks.add(\n\t'livechat.afterTakeInquiry',\n\tasync ({ inquiry, room }) => {\n\t\tif (!settings.get('Livechat_webhook_on_chat_taken')) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\treturn sendToCRM('LivechatSessionTaken', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-taken',\n);\n\ncallbacks.add(\n\t'livechat.chatQueued',\n\t(room) => {\n\t\tif (!settings.get('Livechat_webhook_on_chat_queued')) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatSessionQueued', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-queued',\n);\n\ncallbacks.add(\n\t'livechat.afterForwardChatToAgent',\n\tasync (params) => {\n\t\tconst { rid, oldServedBy } = params;\n\t\tif (!settings.get('Livechat_webhook_on_forward')) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst originalRoom = await LivechatRooms.findOneById(rid);\n\t\tif (!originalRoom) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst room = Object.assign(originalRoom, { oldServedBy });\n\t\tawait sendToCRM('LivechatSessionForwarded', room);\n\t\treturn params;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-forwarded-to-agent',\n);\n\ncallbacks.add(\n\t'livechat.afterForwardChatToDepartment',\n\tasync (params) => {\n\t\tconst { rid, oldDepartmentId } = params;\n\t\tif (!settings.get('Livechat_webhook_on_forward')) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst originalRoom = await LivechatRooms.findOneById(rid);\n\t\tif (!originalRoom) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst room = Object.assign(originalRoom, { oldDepartmentId });\n\t\tawait sendToCRM('LivechatSessionForwarded', room);\n\t\treturn params;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-forwarded-to-department',\n);\n\ncallbacks.add(\n\t'livechat.saveInfo',\n\tasync (room) => {\n\t\t// Do not send to CRM if the chat is still open\n\t\tif (!isOmnichannelRoom(room) || room.open) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatEdit', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-save-info',\n);\n\ncallbacks.add(\n\t'afterOmnichannelSaveMessage',\n\tasync (message, { room }) => {\n\t\t// if the message has a token, it was sent from the visitor\n\t\t// if not, it was sent from the agent\n\t\tif (message.token && !settings.get('Livechat_webhook_on_visitor_message')) {\n\t\t\treturn message;\n\t\t}\n\t\tif (!message.token && !settings.get('Livechat_webhook_on_agent_message')) {\n\t\t\treturn message;\n\t\t}\n\t\t// if the message has a type means it is a special message (like the closing comment), so skips\n\t\t// unless the settings that handle with visitor navigation history are enabled\n\t\tif (message.t && !sendMessageType(message.t)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tawait sendToCRM('Message', room, [message]);\n\t\treturn message;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-message',\n);\n\ncallbacks.add(\n\t'livechat.leadCapture',\n\t(room) => {\n\t\tif (!settings.get('Livechat_webhook_on_capture')) {\n\t\t\treturn room;\n\t\t}\n\t\treturn sendToCRM('LeadCapture', room, false);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-lead-capture',\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/hooks/sendToCRM.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/hooks/sendToCRM.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/hooks/sendToCRM.ts","sourceRoot":"","sources":["app/livechat/server/hooks/sendToCRM.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelRoom, IOmnichannelSystemMessage, IMessage } from '@rocket.chat/core-typings';\nimport { isEditedMessage, isOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { LivechatRooms, Messages } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { settings } from '../../../settings/server';\nimport { normalizeMessageFileUpload } from '../../../utils/server/functions/normalizeMessageFileUpload';\nimport { Livechat as LivechatTyped } from '../lib/LivechatTyped';\n\ntype AdditionalFields =\n\t| Record<string, unknown>\n\t| {\n\t\t\tdepartmentId: IOmnichannelRoom['departmentId'];\n\t  }\n\t| {\n\t\t\tdepartmentId: IOmnichannelRoom['departmentId'];\n\t\t\tservedBy: IOmnichannelRoom['servedBy'];\n\t  }\n\t| {\n\t\t\tdepartmentId: IOmnichannelRoom['departmentId'];\n\t\t\tservedBy: IOmnichannelRoom['servedBy'];\n\t\t\toldDepartmentId: IOmnichannelRoom['departmentId'];\n\t\t\toldServedBy: { _id: string; ts: Date; username?: string };\n\t  }\n\t| {\n\t\t\tdepartmentId: IOmnichannelRoom['departmentId'];\n\t\t\tservedBy: IOmnichannelRoom['servedBy'];\n\t\t\tclosedAt: IOmnichannelRoom['closedAt'];\n\t\t\tclosedBy: IOmnichannelRoom['closedBy'];\n\t\t\tcloser: IOmnichannelRoom['closer'];\n\t  };\n\ntype OmnichannelRoomWithExtraFields = IOmnichannelRoom & {\n\toldServedBy?: { _id: string; ts: Date; username?: string };\n\toldDepartmentId?: IOmnichannelRoom['departmentId'];\n};\n\ntype CRMActions =\n\t| 'LivechatSessionStart'\n\t| 'LivechatSessionQueued'\n\t| 'LivechatSession'\n\t| 'LivechatSessionTaken'\n\t| 'LivechatSessionForwarded'\n\t| 'LivechatEdit'\n\t| 'Message'\n\t| 'LeadCapture';\n\nconst msgNavType = 'livechat_navigation_history';\nconst msgClosingType = 'livechat-close';\n\nexport const isOmnichannelNavigationMessage = (message: IMessage): message is IOmnichannelSystemMessage => {\n\treturn message.t === msgNavType;\n};\n\nexport const isOmnichannelClosingMessage = (message: IMessage): message is IOmnichannelSystemMessage => {\n\treturn message.t === msgClosingType;\n};\n\nexport const sendMessageType = (msgType: string): boolean => {\n\tswitch (msgType) {\n\t\tcase msgClosingType:\n\t\t\treturn true;\n\t\tcase msgNavType:\n\t\t\treturn (\n\t\t\t\tsettings.get<boolean>('Livechat_Visitor_navigation_as_a_message') &&\n\t\t\t\tsettings.get<boolean>('Send_visitor_navigation_history_livechat_webhook_request')\n\t\t\t);\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\n\nexport const getAdditionalFieldsByType = (type: CRMActions, room: OmnichannelRoomWithExtraFields): AdditionalFields => {\n\tconst { departmentId, servedBy, closedAt, closedBy, closer, oldServedBy, oldDepartmentId } = room;\n\tswitch (type) {\n\t\tcase 'LivechatSessionStart':\n\t\tcase 'LivechatSessionQueued':\n\t\t\treturn { departmentId };\n\t\tcase 'LivechatSession':\n\t\t\treturn { departmentId, servedBy, closedAt, closedBy, closer };\n\t\tcase 'LivechatSessionTaken':\n\t\t\treturn { departmentId, servedBy };\n\t\tcase 'LivechatSessionForwarded':\n\t\t\treturn { departmentId, servedBy, oldDepartmentId, oldServedBy };\n\t\tdefault:\n\t\t\treturn {};\n\t}\n};\n\nasync function sendToCRM(\n\ttype: CRMActions,\n\troom: OmnichannelRoomWithExtraFields,\n\tincludeMessages: boolean | IOmnichannelSystemMessage[] = true,\n): Promise<OmnichannelRoomWithExtraFields> {\n\tif (!settings.get('Livechat_webhookUrl')) {\n\t\treturn room;\n\t}\n\n\tconst postData: Awaited<ReturnType<typeof LivechatTyped.getLivechatRoomGuestInfo>> & {\n\t\ttype: string;\n\t\tmessages: IOmnichannelSystemMessage[];\n\t} = {\n\t\t...(await LivechatTyped.getLivechatRoomGuestInfo(room)),\n\t\ttype,\n\t\tmessages: [],\n\t};\n\n\tlet messages: IOmnichannelSystemMessage[] | null = null;\n\tif (typeof includeMessages === 'boolean' && includeMessages) {\n\t\tmessages = await Messages.findVisibleByRoomId<IOmnichannelSystemMessage>(room._id, { sort: { ts: 1 } }).toArray();\n\t} else if (includeMessages instanceof Array) {\n\t\tmessages = includeMessages;\n\t}\n\n\tif (messages) {\n\t\tfor await (const message of messages) {\n\t\t\tif (message.t && !sendMessageType(message.t)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst msg = {\n\t\t\t\t_id: message._id,\n\t\t\t\tusername: message.u.username,\n\t\t\t\tmsg: message.msg || JSON.stringify(message.blocks),\n\t\t\t\t...(message.blocks && message.blocks.length > 0 ? { blocks: message.blocks } : {}),\n\t\t\t\tts: message.ts,\n\t\t\t\trid: message.rid,\n\t\t\t\t...(isEditedMessage(message) && { editedAt: message.editedAt }),\n\t\t\t\t...(message.u.username !== postData.visitor.username && { agentId: message.u._id }),\n\t\t\t\t...(isOmnichannelNavigationMessage(message) && { navigation: message.navigation }),\n\t\t\t\t...(isOmnichannelClosingMessage(message) && { closingMessage: true }),\n\t\t\t\t...(message.file && { file: message.file, attachments: message.attachments }),\n\t\t\t};\n\n\t\t\tconst { u } = message;\n\t\t\tpostData.messages.push({ ...(await normalizeMessageFileUpload({ u, ...msg })), ...{ _updatedAt: message._updatedAt } });\n\t\t}\n\t}\n\n\tconst additionalData = getAdditionalFieldsByType(type, room);\n\tconst responseData = Object.assign(postData, additionalData);\n\n\tconst response = await LivechatTyped.sendRequest(responseData);\n\n\tif (response) {\n\t\tconst responseData = await response.text();\n\t\tawait LivechatRooms.saveCRMDataByRoomId(room._id, responseData);\n\t}\n\n\treturn room;\n}\n\ncallbacks.add(\n\t'livechat.closeRoom',\n\tasync (params) => {\n\t\tconst { room } = params;\n\t\tif (!settings.get('Livechat_webhook_on_close')) {\n\t\t\treturn params;\n\t\t}\n\n\t\tawait sendToCRM('LivechatSession', room);\n\n\t\treturn params;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-close-room',\n);\n\ncallbacks.add(\n\t'livechat.newRoom',\n\tasync (room) => {\n\t\tif (!settings.get('Livechat_webhook_on_start')) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatSessionStart', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-start-room',\n);\n\ncallbacks.add(\n\t'livechat.afterTakeInquiry',\n\tasync ({ inquiry, room }) => {\n\t\tif (!settings.get('Livechat_webhook_on_chat_taken')) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\treturn sendToCRM('LivechatSessionTaken', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-taken',\n);\n\ncallbacks.add(\n\t'livechat.chatQueued',\n\t(room) => {\n\t\tif (!settings.get('Livechat_webhook_on_chat_queued')) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatSessionQueued', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-queued',\n);\n\ncallbacks.add(\n\t'livechat.afterForwardChatToAgent',\n\tasync (params) => {\n\t\tconst { rid, oldServedBy } = params;\n\t\tif (!settings.get('Livechat_webhook_on_forward')) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst originalRoom = await LivechatRooms.findOneById(rid);\n\t\tif (!originalRoom) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst room = Object.assign(originalRoom, { oldServedBy });\n\t\tawait sendToCRM('LivechatSessionForwarded', room);\n\t\treturn params;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-forwarded-to-agent',\n);\n\ncallbacks.add(\n\t'livechat.afterForwardChatToDepartment',\n\tasync (params) => {\n\t\tconst { rid, oldDepartmentId } = params;\n\t\tif (!settings.get('Livechat_webhook_on_forward')) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst originalRoom = await LivechatRooms.findOneById(rid);\n\t\tif (!originalRoom) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst room = Object.assign(originalRoom, { oldDepartmentId });\n\t\tawait sendToCRM('LivechatSessionForwarded', room);\n\t\treturn params;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-forwarded-to-department',\n);\n\ncallbacks.add(\n\t'livechat.saveInfo',\n\tasync (room) => {\n\t\t// Do not send to CRM if the chat is still open\n\t\tif (!isOmnichannelRoom(room) || room.open) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatEdit', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-save-info',\n);\n\ncallbacks.add(\n\t'afterOmnichannelSaveMessage',\n\tasync (message, { room }) => {\n\t\t// if the message has a token, it was sent from the visitor\n\t\t// if not, it was sent from the agent\n\t\tif (message.token && !settings.get('Livechat_webhook_on_visitor_message')) {\n\t\t\treturn message;\n\t\t}\n\t\tif (!message.token && !settings.get('Livechat_webhook_on_agent_message')) {\n\t\t\treturn message;\n\t\t}\n\t\t// if the message has a type means it is a special message (like the closing comment), so skips\n\t\t// unless the settings that handle with visitor navigation history are enabled\n\t\tif (message.t && !sendMessageType(message.t)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tawait sendToCRM('Message', room, [message]);\n\t\treturn message;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-message',\n);\n\ncallbacks.add(\n\t'livechat.leadCapture',\n\t(room) => {\n\t\tif (!settings.get('Livechat_webhook_on_capture')) {\n\t\t\treturn room;\n\t\t}\n\t\treturn sendToCRM('LeadCapture', room, false);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-lead-capture',\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      isOmnichannelNavigationMessage: () => isOmnichannelNavigationMessage,\n      isOmnichannelClosingMessage: () => isOmnichannelClosingMessage,\n      sendMessageType: () => sendMessageType,\n      getAdditionalFieldsByType: () => getAdditionalFieldsByType\n    });\n    let isEditedMessage, isOmnichannelRoom;\n    module.link(\"@rocket.chat/core-typings\", {\n      isEditedMessage(v) {\n        isEditedMessage = v;\n      },\n      isOmnichannelRoom(v) {\n        isOmnichannelRoom = v;\n      }\n    }, 0);\n    let LivechatRooms, Messages;\n    module.link(\"@rocket.chat/models\", {\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      },\n      Messages(v) {\n        Messages = v;\n      }\n    }, 1);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    let normalizeMessageFileUpload;\n    module.link(\"../../../utils/server/functions/normalizeMessageFileUpload\", {\n      normalizeMessageFileUpload(v) {\n        normalizeMessageFileUpload = v;\n      }\n    }, 4);\n    let LivechatTyped;\n    module.link(\"../lib/LivechatTyped\", {\n      Livechat(v) {\n        LivechatTyped = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const msgNavType = 'livechat_navigation_history';\n    const msgClosingType = 'livechat-close';\n    const isOmnichannelNavigationMessage = message => {\n      return message.t === msgNavType;\n    };\n    const isOmnichannelClosingMessage = message => {\n      return message.t === msgClosingType;\n    };\n    const sendMessageType = msgType => {\n      switch (msgType) {\n        case msgClosingType:\n          return true;\n        case msgNavType:\n          return settings.get('Livechat_Visitor_navigation_as_a_message') && settings.get('Send_visitor_navigation_history_livechat_webhook_request');\n        default:\n          return false;\n      }\n    };\n    const getAdditionalFieldsByType = (type, room) => {\n      const {\n        departmentId,\n        servedBy,\n        closedAt,\n        closedBy,\n        closer,\n        oldServedBy,\n        oldDepartmentId\n      } = room;\n      switch (type) {\n        case 'LivechatSessionStart':\n        case 'LivechatSessionQueued':\n          return {\n            departmentId\n          };\n        case 'LivechatSession':\n          return {\n            departmentId,\n            servedBy,\n            closedAt,\n            closedBy,\n            closer\n          };\n        case 'LivechatSessionTaken':\n          return {\n            departmentId,\n            servedBy\n          };\n        case 'LivechatSessionForwarded':\n          return {\n            departmentId,\n            servedBy,\n            oldDepartmentId,\n            oldServedBy\n          };\n        default:\n          return {};\n      }\n    };\n    async function sendToCRM(type, room) {\n      let includeMessages = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (!settings.get('Livechat_webhookUrl')) {\n        return room;\n      }\n      const postData = _objectSpread(_objectSpread({}, await LivechatTyped.getLivechatRoomGuestInfo(room)), {}, {\n        type,\n        messages: []\n      });\n      let messages = null;\n      if (typeof includeMessages === 'boolean' && includeMessages) {\n        messages = await Messages.findVisibleByRoomId(room._id, {\n          sort: {\n            ts: 1\n          }\n        }).toArray();\n      } else if (includeMessages instanceof Array) {\n        messages = includeMessages;\n      }\n      if (messages) {\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(messages), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const message = _step.value;\n            {\n              if (message.t && !sendMessageType(message.t)) {\n                continue;\n              }\n              const msg = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n                _id: message._id,\n                username: message.u.username,\n                msg: message.msg || JSON.stringify(message.blocks)\n              }, message.blocks && message.blocks.length > 0 ? {\n                blocks: message.blocks\n              } : {}), {}, {\n                ts: message.ts,\n                rid: message.rid\n              }, isEditedMessage(message) && {\n                editedAt: message.editedAt\n              }), message.u.username !== postData.visitor.username && {\n                agentId: message.u._id\n              }), isOmnichannelNavigationMessage(message) && {\n                navigation: message.navigation\n              }), isOmnichannelClosingMessage(message) && {\n                closingMessage: true\n              }), message.file && {\n                file: message.file,\n                attachments: message.attachments\n              });\n              const {\n                u\n              } = message;\n              postData.messages.push(_objectSpread(_objectSpread({}, await normalizeMessageFileUpload(_objectSpread({\n                u\n              }, msg))), {\n                _updatedAt: message._updatedAt\n              }));\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n      const additionalData = getAdditionalFieldsByType(type, room);\n      const responseData = Object.assign(postData, additionalData);\n      const response = await LivechatTyped.sendRequest(responseData);\n      if (response) {\n        const responseData = await response.text();\n        await LivechatRooms.saveCRMDataByRoomId(room._id, responseData);\n      }\n      return room;\n    }\n    callbacks.add('livechat.closeRoom', async params => {\n      const {\n        room\n      } = params;\n      if (!settings.get('Livechat_webhook_on_close')) {\n        return params;\n      }\n      await sendToCRM('LivechatSession', room);\n      return params;\n    }, callbacks.priority.MEDIUM, 'livechat-send-crm-close-room');\n    callbacks.add('livechat.newRoom', async room => {\n      if (!settings.get('Livechat_webhook_on_start')) {\n        return room;\n      }\n      return sendToCRM('LivechatSessionStart', room);\n    }, callbacks.priority.MEDIUM, 'livechat-send-crm-start-room');\n    callbacks.add('livechat.afterTakeInquiry', async _ref => {\n      let {\n        inquiry,\n        room\n      } = _ref;\n      if (!settings.get('Livechat_webhook_on_chat_taken')) {\n        return inquiry;\n      }\n      return sendToCRM('LivechatSessionTaken', room);\n    }, callbacks.priority.MEDIUM, 'livechat-send-crm-room-taken');\n    callbacks.add('livechat.chatQueued', room => {\n      if (!settings.get('Livechat_webhook_on_chat_queued')) {\n        return room;\n      }\n      return sendToCRM('LivechatSessionQueued', room);\n    }, callbacks.priority.MEDIUM, 'livechat-send-crm-room-queued');\n    callbacks.add('livechat.afterForwardChatToAgent', async params => {\n      const {\n        rid,\n        oldServedBy\n      } = params;\n      if (!settings.get('Livechat_webhook_on_forward')) {\n        return params;\n      }\n      const originalRoom = await LivechatRooms.findOneById(rid);\n      if (!originalRoom) {\n        return params;\n      }\n      const room = Object.assign(originalRoom, {\n        oldServedBy\n      });\n      await sendToCRM('LivechatSessionForwarded', room);\n      return params;\n    }, callbacks.priority.MEDIUM, 'livechat-send-crm-room-forwarded-to-agent');\n    callbacks.add('livechat.afterForwardChatToDepartment', async params => {\n      const {\n        rid,\n        oldDepartmentId\n      } = params;\n      if (!settings.get('Livechat_webhook_on_forward')) {\n        return params;\n      }\n      const originalRoom = await LivechatRooms.findOneById(rid);\n      if (!originalRoom) {\n        return params;\n      }\n      const room = Object.assign(originalRoom, {\n        oldDepartmentId\n      });\n      await sendToCRM('LivechatSessionForwarded', room);\n      return params;\n    }, callbacks.priority.MEDIUM, 'livechat-send-crm-room-forwarded-to-department');\n    callbacks.add('livechat.saveInfo', async room => {\n      // Do not send to CRM if the chat is still open\n      if (!isOmnichannelRoom(room) || room.open) {\n        return room;\n      }\n      return sendToCRM('LivechatEdit', room);\n    }, callbacks.priority.MEDIUM, 'livechat-send-crm-save-info');\n    callbacks.add('afterOmnichannelSaveMessage', async (message, _ref2) => {\n      let {\n        room\n      } = _ref2;\n      // if the message has a token, it was sent from the visitor\n      // if not, it was sent from the agent\n      if (message.token && !settings.get('Livechat_webhook_on_visitor_message')) {\n        return message;\n      }\n      if (!message.token && !settings.get('Livechat_webhook_on_agent_message')) {\n        return message;\n      }\n      // if the message has a type means it is a special message (like the closing comment), so skips\n      // unless the settings that handle with visitor navigation history are enabled\n      if (message.t && !sendMessageType(message.t)) {\n        return message;\n      }\n      await sendToCRM('Message', room, [message]);\n      return message;\n    }, callbacks.priority.MEDIUM, 'livechat-send-crm-message');\n    callbacks.add('livechat.leadCapture', room => {\n      if (!settings.get('Livechat_webhook_on_capture')) {\n        return room;\n      }\n      return sendToCRM('LeadCapture', room, false);\n    }, callbacks.priority.MEDIUM, 'livechat-send-crm-lead-capture');\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","isOmnichannelNavigationMessage","isOmnichannelClosingMessage","sendMessageType","getAdditionalFieldsByType","isEditedMessage","isOmnichannelRoom","LivechatRooms","Messages","callbacks","settings","normalizeMessageFileUpload","LivechatTyped","Livechat","__reifyWaitForDeps__","msgNavType","msgClosingType","message","t","msgType","get","type","room","departmentId","servedBy","closedAt","closedBy","closer","oldServedBy","oldDepartmentId","sendToCRM","includeMessages","arguments","length","undefined","postData","getLivechatRoomGuestInfo","messages","findVisibleByRoomId","_id","sort","ts","toArray","Array","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","msg","username","u","JSON","stringify","blocks","rid","editedAt","visitor","agentId","navigation","closingMessage","file","attachments","push","_updatedAt","err","return","additionalData","responseData","Object","assign","response","sendRequest","text","saveCRMDataByRoomId","add","params","priority","MEDIUM","_ref","inquiry","originalRoom","findOneById","open","_ref2","token","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/hooks/sendToCRM.ts"],"sourcesContent":["import type { IOmnichannelRoom, IOmnichannelSystemMessage, IMessage } from '@rocket.chat/core-typings';\nimport { isEditedMessage, isOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { LivechatRooms, Messages } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { settings } from '../../../settings/server';\nimport { normalizeMessageFileUpload } from '../../../utils/server/functions/normalizeMessageFileUpload';\nimport { Livechat as LivechatTyped } from '../lib/LivechatTyped';\n\ntype AdditionalFields =\n\t| Record<string, unknown>\n\t| {\n\t\t\tdepartmentId: IOmnichannelRoom['departmentId'];\n\t  }\n\t| {\n\t\t\tdepartmentId: IOmnichannelRoom['departmentId'];\n\t\t\tservedBy: IOmnichannelRoom['servedBy'];\n\t  }\n\t| {\n\t\t\tdepartmentId: IOmnichannelRoom['departmentId'];\n\t\t\tservedBy: IOmnichannelRoom['servedBy'];\n\t\t\toldDepartmentId: IOmnichannelRoom['departmentId'];\n\t\t\toldServedBy: { _id: string; ts: Date; username?: string };\n\t  }\n\t| {\n\t\t\tdepartmentId: IOmnichannelRoom['departmentId'];\n\t\t\tservedBy: IOmnichannelRoom['servedBy'];\n\t\t\tclosedAt: IOmnichannelRoom['closedAt'];\n\t\t\tclosedBy: IOmnichannelRoom['closedBy'];\n\t\t\tcloser: IOmnichannelRoom['closer'];\n\t  };\n\ntype OmnichannelRoomWithExtraFields = IOmnichannelRoom & {\n\toldServedBy?: { _id: string; ts: Date; username?: string };\n\toldDepartmentId?: IOmnichannelRoom['departmentId'];\n};\n\ntype CRMActions =\n\t| 'LivechatSessionStart'\n\t| 'LivechatSessionQueued'\n\t| 'LivechatSession'\n\t| 'LivechatSessionTaken'\n\t| 'LivechatSessionForwarded'\n\t| 'LivechatEdit'\n\t| 'Message'\n\t| 'LeadCapture';\n\nconst msgNavType = 'livechat_navigation_history';\nconst msgClosingType = 'livechat-close';\n\nexport const isOmnichannelNavigationMessage = (message: IMessage): message is IOmnichannelSystemMessage => {\n\treturn message.t === msgNavType;\n};\n\nexport const isOmnichannelClosingMessage = (message: IMessage): message is IOmnichannelSystemMessage => {\n\treturn message.t === msgClosingType;\n};\n\nexport const sendMessageType = (msgType: string): boolean => {\n\tswitch (msgType) {\n\t\tcase msgClosingType:\n\t\t\treturn true;\n\t\tcase msgNavType:\n\t\t\treturn (\n\t\t\t\tsettings.get<boolean>('Livechat_Visitor_navigation_as_a_message') &&\n\t\t\t\tsettings.get<boolean>('Send_visitor_navigation_history_livechat_webhook_request')\n\t\t\t);\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\n\nexport const getAdditionalFieldsByType = (type: CRMActions, room: OmnichannelRoomWithExtraFields): AdditionalFields => {\n\tconst { departmentId, servedBy, closedAt, closedBy, closer, oldServedBy, oldDepartmentId } = room;\n\tswitch (type) {\n\t\tcase 'LivechatSessionStart':\n\t\tcase 'LivechatSessionQueued':\n\t\t\treturn { departmentId };\n\t\tcase 'LivechatSession':\n\t\t\treturn { departmentId, servedBy, closedAt, closedBy, closer };\n\t\tcase 'LivechatSessionTaken':\n\t\t\treturn { departmentId, servedBy };\n\t\tcase 'LivechatSessionForwarded':\n\t\t\treturn { departmentId, servedBy, oldDepartmentId, oldServedBy };\n\t\tdefault:\n\t\t\treturn {};\n\t}\n};\n\nasync function sendToCRM(\n\ttype: CRMActions,\n\troom: OmnichannelRoomWithExtraFields,\n\tincludeMessages: boolean | IOmnichannelSystemMessage[] = true,\n): Promise<OmnichannelRoomWithExtraFields> {\n\tif (!settings.get('Livechat_webhookUrl')) {\n\t\treturn room;\n\t}\n\n\tconst postData: Awaited<ReturnType<typeof LivechatTyped.getLivechatRoomGuestInfo>> & {\n\t\ttype: string;\n\t\tmessages: IOmnichannelSystemMessage[];\n\t} = {\n\t\t...(await LivechatTyped.getLivechatRoomGuestInfo(room)),\n\t\ttype,\n\t\tmessages: [],\n\t};\n\n\tlet messages: IOmnichannelSystemMessage[] | null = null;\n\tif (typeof includeMessages === 'boolean' && includeMessages) {\n\t\tmessages = await Messages.findVisibleByRoomId<IOmnichannelSystemMessage>(room._id, { sort: { ts: 1 } }).toArray();\n\t} else if (includeMessages instanceof Array) {\n\t\tmessages = includeMessages;\n\t}\n\n\tif (messages) {\n\t\tfor await (const message of messages) {\n\t\t\tif (message.t && !sendMessageType(message.t)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst msg = {\n\t\t\t\t_id: message._id,\n\t\t\t\tusername: message.u.username,\n\t\t\t\tmsg: message.msg || JSON.stringify(message.blocks),\n\t\t\t\t...(message.blocks && message.blocks.length > 0 ? { blocks: message.blocks } : {}),\n\t\t\t\tts: message.ts,\n\t\t\t\trid: message.rid,\n\t\t\t\t...(isEditedMessage(message) && { editedAt: message.editedAt }),\n\t\t\t\t...(message.u.username !== postData.visitor.username && { agentId: message.u._id }),\n\t\t\t\t...(isOmnichannelNavigationMessage(message) && { navigation: message.navigation }),\n\t\t\t\t...(isOmnichannelClosingMessage(message) && { closingMessage: true }),\n\t\t\t\t...(message.file && { file: message.file, attachments: message.attachments }),\n\t\t\t};\n\n\t\t\tconst { u } = message;\n\t\t\tpostData.messages.push({ ...(await normalizeMessageFileUpload({ u, ...msg })), ...{ _updatedAt: message._updatedAt } });\n\t\t}\n\t}\n\n\tconst additionalData = getAdditionalFieldsByType(type, room);\n\tconst responseData = Object.assign(postData, additionalData);\n\n\tconst response = await LivechatTyped.sendRequest(responseData);\n\n\tif (response) {\n\t\tconst responseData = await response.text();\n\t\tawait LivechatRooms.saveCRMDataByRoomId(room._id, responseData);\n\t}\n\n\treturn room;\n}\n\ncallbacks.add(\n\t'livechat.closeRoom',\n\tasync (params) => {\n\t\tconst { room } = params;\n\t\tif (!settings.get('Livechat_webhook_on_close')) {\n\t\t\treturn params;\n\t\t}\n\n\t\tawait sendToCRM('LivechatSession', room);\n\n\t\treturn params;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-close-room',\n);\n\ncallbacks.add(\n\t'livechat.newRoom',\n\tasync (room) => {\n\t\tif (!settings.get('Livechat_webhook_on_start')) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatSessionStart', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-start-room',\n);\n\ncallbacks.add(\n\t'livechat.afterTakeInquiry',\n\tasync ({ inquiry, room }) => {\n\t\tif (!settings.get('Livechat_webhook_on_chat_taken')) {\n\t\t\treturn inquiry;\n\t\t}\n\n\t\treturn sendToCRM('LivechatSessionTaken', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-taken',\n);\n\ncallbacks.add(\n\t'livechat.chatQueued',\n\t(room) => {\n\t\tif (!settings.get('Livechat_webhook_on_chat_queued')) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatSessionQueued', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-queued',\n);\n\ncallbacks.add(\n\t'livechat.afterForwardChatToAgent',\n\tasync (params) => {\n\t\tconst { rid, oldServedBy } = params;\n\t\tif (!settings.get('Livechat_webhook_on_forward')) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst originalRoom = await LivechatRooms.findOneById(rid);\n\t\tif (!originalRoom) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst room = Object.assign(originalRoom, { oldServedBy });\n\t\tawait sendToCRM('LivechatSessionForwarded', room);\n\t\treturn params;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-forwarded-to-agent',\n);\n\ncallbacks.add(\n\t'livechat.afterForwardChatToDepartment',\n\tasync (params) => {\n\t\tconst { rid, oldDepartmentId } = params;\n\t\tif (!settings.get('Livechat_webhook_on_forward')) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst originalRoom = await LivechatRooms.findOneById(rid);\n\t\tif (!originalRoom) {\n\t\t\treturn params;\n\t\t}\n\n\t\tconst room = Object.assign(originalRoom, { oldDepartmentId });\n\t\tawait sendToCRM('LivechatSessionForwarded', room);\n\t\treturn params;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-room-forwarded-to-department',\n);\n\ncallbacks.add(\n\t'livechat.saveInfo',\n\tasync (room) => {\n\t\t// Do not send to CRM if the chat is still open\n\t\tif (!isOmnichannelRoom(room) || room.open) {\n\t\t\treturn room;\n\t\t}\n\n\t\treturn sendToCRM('LivechatEdit', room);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-save-info',\n);\n\ncallbacks.add(\n\t'afterOmnichannelSaveMessage',\n\tasync (message, { room }) => {\n\t\t// if the message has a token, it was sent from the visitor\n\t\t// if not, it was sent from the agent\n\t\tif (message.token && !settings.get('Livechat_webhook_on_visitor_message')) {\n\t\t\treturn message;\n\t\t}\n\t\tif (!message.token && !settings.get('Livechat_webhook_on_agent_message')) {\n\t\t\treturn message;\n\t\t}\n\t\t// if the message has a type means it is a special message (like the closing comment), so skips\n\t\t// unless the settings that handle with visitor navigation history are enabled\n\t\tif (message.t && !sendMessageType(message.t)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tawait sendToCRM('Message', room, [message]);\n\t\treturn message;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-message',\n);\n\ncallbacks.add(\n\t'livechat.leadCapture',\n\t(room) => {\n\t\tif (!settings.get('Livechat_webhook_on_capture')) {\n\t\t\treturn room;\n\t\t}\n\t\treturn sendToCRM('LeadCapture', room, false);\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-send-crm-lead-capture',\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"586ad79d8d5b3cef1d254bec26c6a6ac263158c5"}
