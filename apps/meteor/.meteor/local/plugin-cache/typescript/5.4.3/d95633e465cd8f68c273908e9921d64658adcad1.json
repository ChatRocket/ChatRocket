{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebar/hooks/useRoomList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/sidebar/hooks/useRoomList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebar/hooks/useRoomList.ts","inputSourceMap":{"version":3,"file":"client/sidebar/hooks/useRoomList.ts","sourceRoot":"","sources":["client/sidebar/hooks/useRoomList.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { useDebouncedState } from '@rocket.chat/fuselage-hooks';\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport { useQueryOptions } from './useQueryOptions';\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: ILivechatInquiryRecord[] = [];\n\nconst order: (\n\t| 'Incoming_Calls'\n\t| 'Incoming_Livechats'\n\t| 'Open_Livechats'\n\t| 'On_Hold_Chats'\n\t| 'Unread'\n\t| 'Favorites'\n\t| 'Teams'\n\t| 'Discussions'\n\t| 'Channels'\n\t| 'Direct_Messages'\n\t| 'Conversations'\n)[] = [\n\t'Incoming_Calls',\n\t'Incoming_Livechats',\n\t'Open_Livechats',\n\t'On_Hold_Chats',\n\t'Unread',\n\t'Favorites',\n\t'Teams',\n\t'Discussions',\n\t'Channels',\n\t'Direct_Messages',\n\t'Conversations',\n];\n\nexport const useRoomList = (): Array<ISubscription & IRoom> => {\n\tconst [roomList, setRoomList] = useDebouncedState<(ISubscription & IRoom)[]>([], 150);\n\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tconst incomingCalls = useVideoConfIncomingCalls();\n\n\tlet queue = emptyQueue;\n\tif (inquiries.enabled) {\n\t\tqueue = inquiries.queue;\n\t}\n\n\tuseEffect(() => {\n\t\tsetRoomList(() => {\n\t\t\tconst incomingCall = new Set();\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (incomingCalls.find((call) => call.rid === room.rid)) {\n\t\t\t\t\treturn incomingCall.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tchannels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tdirect.add(room);\n\t\t\t\t}\n\n\t\t\t\tconversation.add(room);\n\t\t\t});\n\n\t\t\tconst groups = new Map();\n\t\t\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\t\t\treturn sidebarOrder\n\t\t\t\t.map((key) => {\n\t\t\t\t\tconst group = groups.get(key);\n\t\t\t\t\tif (!group) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [key, ...group];\n\t\t\t\t})\n\t\t\t\t.flat();\n\t\t});\n\t}, [\n\t\trooms,\n\t\tshowOmnichannel,\n\t\tincomingCalls,\n\t\tinquiries.enabled,\n\t\tqueue,\n\t\tsidebarShowUnread,\n\t\tfavoritesEnabled,\n\t\tsidebarGroupByType,\n\t\tsetRoomList,\n\t\tisDiscussionEnabled,\n\t\tsidebarOrder,\n\t]);\n\n\treturn roomList;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebar/hooks/useRoomList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/sidebar/hooks/useRoomList.ts","inputSourceMap":{"version":3,"file":"client/sidebar/hooks/useRoomList.ts","sourceRoot":"","sources":["client/sidebar/hooks/useRoomList.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { useDebouncedState } from '@rocket.chat/fuselage-hooks';\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport { useQueryOptions } from './useQueryOptions';\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: ILivechatInquiryRecord[] = [];\n\nconst order: (\n\t| 'Incoming_Calls'\n\t| 'Incoming_Livechats'\n\t| 'Open_Livechats'\n\t| 'On_Hold_Chats'\n\t| 'Unread'\n\t| 'Favorites'\n\t| 'Teams'\n\t| 'Discussions'\n\t| 'Channels'\n\t| 'Direct_Messages'\n\t| 'Conversations'\n)[] = [\n\t'Incoming_Calls',\n\t'Incoming_Livechats',\n\t'Open_Livechats',\n\t'On_Hold_Chats',\n\t'Unread',\n\t'Favorites',\n\t'Teams',\n\t'Discussions',\n\t'Channels',\n\t'Direct_Messages',\n\t'Conversations',\n];\n\nexport const useRoomList = (): Array<ISubscription & IRoom> => {\n\tconst [roomList, setRoomList] = useDebouncedState<(ISubscription & IRoom)[]>([], 150);\n\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tconst incomingCalls = useVideoConfIncomingCalls();\n\n\tlet queue = emptyQueue;\n\tif (inquiries.enabled) {\n\t\tqueue = inquiries.queue;\n\t}\n\n\tuseEffect(() => {\n\t\tsetRoomList(() => {\n\t\t\tconst incomingCall = new Set();\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (incomingCalls.find((call) => call.rid === room.rid)) {\n\t\t\t\t\treturn incomingCall.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tchannels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tdirect.add(room);\n\t\t\t\t}\n\n\t\t\t\tconversation.add(room);\n\t\t\t});\n\n\t\t\tconst groups = new Map();\n\t\t\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\t\t\treturn sidebarOrder\n\t\t\t\t.map((key) => {\n\t\t\t\t\tconst group = groups.get(key);\n\t\t\t\t\tif (!group) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [key, ...group];\n\t\t\t\t})\n\t\t\t\t.flat();\n\t\t});\n\t}, [\n\t\trooms,\n\t\tshowOmnichannel,\n\t\tincomingCalls,\n\t\tinquiries.enabled,\n\t\tqueue,\n\t\tsidebarShowUnread,\n\t\tfavoritesEnabled,\n\t\tsidebarGroupByType,\n\t\tsetRoomList,\n\t\tisDiscussionEnabled,\n\t\tsidebarOrder,\n\t]);\n\n\treturn roomList;\n};\n"]}}},"code":"module.export({\n  useRoomList: () => useRoomList\n});\nlet useDebouncedState;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useDebouncedState(v) {\n    useDebouncedState = v;\n  }\n}, 0);\nlet useUserPreference, useUserSubscriptions, useSetting;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useUserPreference(v) {\n    useUserPreference = v;\n  },\n  useUserSubscriptions(v) {\n    useUserSubscriptions = v;\n  },\n  useSetting(v) {\n    useSetting = v;\n  }\n}, 1);\nlet useEffect;\nmodule.link(\"react\", {\n  useEffect(v) {\n    useEffect = v;\n  }\n}, 2);\nlet useQueryOptions;\nmodule.link(\"./useQueryOptions\", {\n  useQueryOptions(v) {\n    useQueryOptions = v;\n  }\n}, 3);\nlet useVideoConfIncomingCalls;\nmodule.link(\"../../contexts/VideoConfContext\", {\n  useVideoConfIncomingCalls(v) {\n    useVideoConfIncomingCalls = v;\n  }\n}, 4);\nlet useOmnichannelEnabled;\nmodule.link(\"../../hooks/omnichannel/useOmnichannelEnabled\", {\n  useOmnichannelEnabled(v) {\n    useOmnichannelEnabled = v;\n  }\n}, 5);\nlet useQueuedInquiries;\nmodule.link(\"../../hooks/omnichannel/useQueuedInquiries\", {\n  useQueuedInquiries(v) {\n    useQueuedInquiries = v;\n  }\n}, 6);\nconst query = {\n  open: {\n    $ne: false\n  }\n};\nconst emptyQueue = [];\nconst order = ['Incoming_Calls', 'Incoming_Livechats', 'Open_Livechats', 'On_Hold_Chats', 'Unread', 'Favorites', 'Teams', 'Discussions', 'Channels', 'Direct_Messages', 'Conversations'];\nconst useRoomList = () => {\n  var _useUserPreference;\n  const [roomList, setRoomList] = useDebouncedState([], 150);\n  const showOmnichannel = useOmnichannelEnabled();\n  const sidebarGroupByType = useUserPreference('sidebarGroupByType');\n  const favoritesEnabled = useUserPreference('sidebarShowFavorites');\n  const sidebarOrder = (_useUserPreference = useUserPreference('sidebarSectionsOrder')) !== null && _useUserPreference !== void 0 ? _useUserPreference : order;\n  const isDiscussionEnabled = useSetting('Discussion_enabled');\n  const sidebarShowUnread = useUserPreference('sidebarShowUnread');\n  const options = useQueryOptions();\n  const rooms = useUserSubscriptions(query, options);\n  const inquiries = useQueuedInquiries();\n  const incomingCalls = useVideoConfIncomingCalls();\n  let queue = emptyQueue;\n  if (inquiries.enabled) {\n    queue = inquiries.queue;\n  }\n  useEffect(() => {\n    setRoomList(() => {\n      const incomingCall = new Set();\n      const favorite = new Set();\n      const team = new Set();\n      const omnichannel = new Set();\n      const unread = new Set();\n      const channels = new Set();\n      const direct = new Set();\n      const discussion = new Set();\n      const conversation = new Set();\n      const onHold = new Set();\n      rooms.forEach(room => {\n        if (room.archived) {\n          return;\n        }\n        if (incomingCalls.find(call => call.rid === room.rid)) {\n          return incomingCall.add(room);\n        }\n        if (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\n          return unread.add(room);\n        }\n        if (favoritesEnabled && room.f) {\n          return favorite.add(room);\n        }\n        if (sidebarGroupByType && room.teamMain) {\n          return team.add(room);\n        }\n        if (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n          return discussion.add(room);\n        }\n        if (room.t === 'c' || room.t === 'p') {\n          channels.add(room);\n        }\n        if (room.t === 'l' && room.onHold) {\n          return showOmnichannel && onHold.add(room);\n        }\n        if (room.t === 'l') {\n          return showOmnichannel && omnichannel.add(room);\n        }\n        if (room.t === 'd') {\n          direct.add(room);\n        }\n        conversation.add(room);\n      });\n      const groups = new Map();\n      incomingCall.size && groups.set('Incoming_Calls', incomingCall);\n      showOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\n      showOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n      showOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n      sidebarShowUnread && unread.size && groups.set('Unread', unread);\n      favoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n      sidebarGroupByType && team.size && groups.set('Teams', team);\n      sidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n      sidebarGroupByType && channels.size && groups.set('Channels', channels);\n      sidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n      !sidebarGroupByType && groups.set('Conversations', conversation);\n      return sidebarOrder.map(key => {\n        const group = groups.get(key);\n        if (!group) {\n          return [];\n        }\n        return [key, ...group];\n      }).flat();\n    });\n  }, [rooms, showOmnichannel, incomingCalls, inquiries.enabled, queue, sidebarShowUnread, favoritesEnabled, sidebarGroupByType, setRoomList, isDiscussionEnabled, sidebarOrder]);\n  return roomList;\n};","map":{"version":3,"names":["module","export","useRoomList","useDebouncedState","link","v","useUserPreference","useUserSubscriptions","useSetting","useEffect","useQueryOptions","useVideoConfIncomingCalls","useOmnichannelEnabled","useQueuedInquiries","query","open","$ne","emptyQueue","order","_useUserPreference","roomList","setRoomList","showOmnichannel","sidebarGroupByType","favoritesEnabled","sidebarOrder","isDiscussionEnabled","sidebarShowUnread","options","rooms","inquiries","incomingCalls","queue","enabled","incomingCall","Set","favorite","team","omnichannel","unread","channels","direct","discussion","conversation","onHold","forEach","room","archived","find","call","rid","add","alert","hideUnreadStatus","f","teamMain","prid","t","groups","Map","size","set","length","map","key","group","get","flat"],"sources":["client/sidebar/hooks/useRoomList.ts"],"sourcesContent":["import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { useDebouncedState } from '@rocket.chat/fuselage-hooks';\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport { useQueryOptions } from './useQueryOptions';\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: ILivechatInquiryRecord[] = [];\n\nconst order: (\n\t| 'Incoming_Calls'\n\t| 'Incoming_Livechats'\n\t| 'Open_Livechats'\n\t| 'On_Hold_Chats'\n\t| 'Unread'\n\t| 'Favorites'\n\t| 'Teams'\n\t| 'Discussions'\n\t| 'Channels'\n\t| 'Direct_Messages'\n\t| 'Conversations'\n)[] = [\n\t'Incoming_Calls',\n\t'Incoming_Livechats',\n\t'Open_Livechats',\n\t'On_Hold_Chats',\n\t'Unread',\n\t'Favorites',\n\t'Teams',\n\t'Discussions',\n\t'Channels',\n\t'Direct_Messages',\n\t'Conversations',\n];\n\nexport const useRoomList = (): Array<ISubscription & IRoom> => {\n\tconst [roomList, setRoomList] = useDebouncedState<(ISubscription & IRoom)[]>([], 150);\n\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tconst incomingCalls = useVideoConfIncomingCalls();\n\n\tlet queue = emptyQueue;\n\tif (inquiries.enabled) {\n\t\tqueue = inquiries.queue;\n\t}\n\n\tuseEffect(() => {\n\t\tsetRoomList(() => {\n\t\t\tconst incomingCall = new Set();\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (incomingCalls.find((call) => call.rid === room.rid)) {\n\t\t\t\t\treturn incomingCall.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tchannels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tdirect.add(room);\n\t\t\t\t}\n\n\t\t\t\tconversation.add(room);\n\t\t\t});\n\n\t\t\tconst groups = new Map();\n\t\t\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', queue);\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\t\t\treturn sidebarOrder\n\t\t\t\t.map((key) => {\n\t\t\t\t\tconst group = groups.get(key);\n\t\t\t\t\tif (!group) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn [key, ...group];\n\t\t\t\t})\n\t\t\t\t.flat();\n\t\t});\n\t}, [\n\t\trooms,\n\t\tshowOmnichannel,\n\t\tincomingCalls,\n\t\tinquiries.enabled,\n\t\tqueue,\n\t\tsidebarShowUnread,\n\t\tfavoritesEnabled,\n\t\tsidebarGroupByType,\n\t\tsetRoomList,\n\t\tisDiscussionEnabled,\n\t\tsidebarOrder,\n\t]);\n\n\treturn roomList;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d95633e465cd8f68c273908e9921d64658adcad1"}
