{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/addUserToRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/addUserToRoom.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/addUserToRoom.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/addUserToRoom.ts","sourceRoot":"","sources":["app/lib/server/functions/addUserToRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Message, Team } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { getSubscriptionAutotranslateDefaultConfig } from '../../../../server/lib/getSubscriptionAutotranslateDefaultConfig';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\nimport { settings } from '../../../settings/server';\nimport { getDefaultSubscriptionPref } from '../../../utils/lib/getDefaultSubscriptionPref';\nimport { notifyOnRoomChangedById, notifyOnSubscriptionChangedById } from '../lib/notifyListener';\n\nexport const addUserToRoom = async function (\n\trid: string,\n\tuser: Pick<IUser, '_id'> | string,\n\tinviter?: Pick<IUser, '_id' | 'username'>,\n\t{\n\t\tskipSystemMessage,\n\t\tskipAlertSound,\n\t}: {\n\t\tskipSystemMessage?: boolean;\n\t\tskipAlertSound?: boolean;\n\t} = {},\n): Promise<boolean | undefined> {\n\tconst now = new Date();\n\tconst room = await Rooms.findOneById(rid);\n\n\tif (!room) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\tmethod: 'addUserToRoom',\n\t\t});\n\t}\n\n\tconst userToBeAdded = typeof user === 'string' ? await Users.findOneByUsername(user.replace('@', '')) : await Users.findOneById(user._id);\n\tconst roomDirectives = roomCoordinator.getRoomDirectives(room.t);\n\n\tif (!userToBeAdded) {\n\t\tthrow new Meteor.Error('user-not-found');\n\t}\n\n\tif (\n\t\t!(await roomDirectives.allowMemberAction(room, RoomMemberActions.JOIN, userToBeAdded._id)) &&\n\t\t!(await roomDirectives.allowMemberAction(room, RoomMemberActions.INVITE, userToBeAdded._id))\n\t) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait callbacks.run('federation.beforeAddUserToARoom', { user: userToBeAdded, inviter }, room);\n\t} catch (error) {\n\t\tthrow new Meteor.Error((error as any)?.message);\n\t}\n\n\tawait callbacks.run('beforeAddedToRoom', { user: userToBeAdded, inviter });\n\n\t// Check if user is already in room\n\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(rid, userToBeAdded._id);\n\tif (subscription || !userToBeAdded) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait Apps.self?.triggerEvent(AppEvents.IPreRoomUserJoined, room, userToBeAdded, inviter);\n\t} catch (error: any) {\n\t\tif (error.name === AppsEngineException.name) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\tif (room.t === 'c' || room.t === 'p' || room.t === 'l') {\n\t\t// Add a new event, with an optional inviter\n\t\tawait callbacks.run('beforeAddedToRoom', { user: userToBeAdded, inviter }, room);\n\n\t\t// Keep the current event\n\t\tawait callbacks.run('beforeJoinRoom', userToBeAdded, room);\n\t}\n\n\tconst autoTranslateConfig = getSubscriptionAutotranslateDefaultConfig(userToBeAdded);\n\n\tconst { insertedId } = await Subscriptions.createWithRoomAndUser(room, userToBeAdded as IUser, {\n\t\tts: now,\n\t\topen: true,\n\t\talert: !skipAlertSound,\n\t\tunread: 1,\n\t\tuserMentions: 1,\n\t\tgroupMentions: 0,\n\t\t...autoTranslateConfig,\n\t\t...getDefaultSubscriptionPref(userToBeAdded as IUser),\n\t});\n\n\tif (insertedId) {\n\t\tvoid notifyOnSubscriptionChangedById(insertedId, 'inserted');\n\t}\n\n\tif (!userToBeAdded.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Cannot add an user to a room without a username');\n\t}\n\n\tif (!skipSystemMessage) {\n\t\tif (inviter) {\n\t\t\tconst extraData = {\n\t\t\t\tts: now,\n\t\t\t\tu: {\n\t\t\t\t\t_id: inviter._id,\n\t\t\t\t\tusername: inviter.username,\n\t\t\t\t},\n\t\t\t};\n\t\t\tif (room.teamMain) {\n\t\t\t\tawait Message.saveSystemMessage('added-user-to-team', rid, userToBeAdded.username, userToBeAdded, extraData);\n\t\t\t} else {\n\t\t\t\tawait Message.saveSystemMessage('au', rid, userToBeAdded.username, userToBeAdded, extraData);\n\t\t\t}\n\t\t} else if (room.prid) {\n\t\t\tawait Message.saveSystemMessage('ut', rid, userToBeAdded.username, userToBeAdded, { ts: now });\n\t\t} else if (room.teamMain) {\n\t\t\tawait Message.saveSystemMessage('ujt', rid, userToBeAdded.username, userToBeAdded, { ts: now });\n\t\t} else {\n\t\t\tawait Message.saveSystemMessage('uj', rid, userToBeAdded.username, userToBeAdded, { ts: now });\n\t\t}\n\t}\n\n\tif (room.t === 'c' || room.t === 'p') {\n\t\tprocess.nextTick(async () => {\n\t\t\t// Add a new event, with an optional inviter\n\t\t\tawait callbacks.run('afterAddedToRoom', { user: userToBeAdded, inviter }, room);\n\n\t\t\t// Keep the current event\n\t\t\tawait callbacks.run('afterJoinRoom', userToBeAdded, room);\n\n\t\t\tvoid Apps.self?.triggerEvent(AppEvents.IPostRoomUserJoined, room, userToBeAdded, inviter);\n\t\t});\n\t}\n\n\tif (room.teamMain && room.teamId) {\n\t\t// if user is joining to main team channel, create a membership\n\t\tawait Team.addMember(inviter || userToBeAdded, userToBeAdded._id, room.teamId);\n\t}\n\n\tif (room.encrypted && settings.get('E2E_Enable') && userToBeAdded.e2e?.public_key) {\n\t\tawait Rooms.addUserIdToE2EEQueueByRoomIds([room._id], userToBeAdded._id);\n\t}\n\n\tvoid notifyOnRoomChangedById(rid);\n\treturn true;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/addUserToRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/addUserToRoom.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/addUserToRoom.ts","sourceRoot":"","sources":["app/lib/server/functions/addUserToRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Message, Team } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { getSubscriptionAutotranslateDefaultConfig } from '../../../../server/lib/getSubscriptionAutotranslateDefaultConfig';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\nimport { settings } from '../../../settings/server';\nimport { getDefaultSubscriptionPref } from '../../../utils/lib/getDefaultSubscriptionPref';\nimport { notifyOnRoomChangedById, notifyOnSubscriptionChangedById } from '../lib/notifyListener';\n\nexport const addUserToRoom = async function (\n\trid: string,\n\tuser: Pick<IUser, '_id'> | string,\n\tinviter?: Pick<IUser, '_id' | 'username'>,\n\t{\n\t\tskipSystemMessage,\n\t\tskipAlertSound,\n\t}: {\n\t\tskipSystemMessage?: boolean;\n\t\tskipAlertSound?: boolean;\n\t} = {},\n): Promise<boolean | undefined> {\n\tconst now = new Date();\n\tconst room = await Rooms.findOneById(rid);\n\n\tif (!room) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\tmethod: 'addUserToRoom',\n\t\t});\n\t}\n\n\tconst userToBeAdded = typeof user === 'string' ? await Users.findOneByUsername(user.replace('@', '')) : await Users.findOneById(user._id);\n\tconst roomDirectives = roomCoordinator.getRoomDirectives(room.t);\n\n\tif (!userToBeAdded) {\n\t\tthrow new Meteor.Error('user-not-found');\n\t}\n\n\tif (\n\t\t!(await roomDirectives.allowMemberAction(room, RoomMemberActions.JOIN, userToBeAdded._id)) &&\n\t\t!(await roomDirectives.allowMemberAction(room, RoomMemberActions.INVITE, userToBeAdded._id))\n\t) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait callbacks.run('federation.beforeAddUserToARoom', { user: userToBeAdded, inviter }, room);\n\t} catch (error) {\n\t\tthrow new Meteor.Error((error as any)?.message);\n\t}\n\n\tawait callbacks.run('beforeAddedToRoom', { user: userToBeAdded, inviter });\n\n\t// Check if user is already in room\n\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(rid, userToBeAdded._id);\n\tif (subscription || !userToBeAdded) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait Apps.self?.triggerEvent(AppEvents.IPreRoomUserJoined, room, userToBeAdded, inviter);\n\t} catch (error: any) {\n\t\tif (error.name === AppsEngineException.name) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\tif (room.t === 'c' || room.t === 'p' || room.t === 'l') {\n\t\t// Add a new event, with an optional inviter\n\t\tawait callbacks.run('beforeAddedToRoom', { user: userToBeAdded, inviter }, room);\n\n\t\t// Keep the current event\n\t\tawait callbacks.run('beforeJoinRoom', userToBeAdded, room);\n\t}\n\n\tconst autoTranslateConfig = getSubscriptionAutotranslateDefaultConfig(userToBeAdded);\n\n\tconst { insertedId } = await Subscriptions.createWithRoomAndUser(room, userToBeAdded as IUser, {\n\t\tts: now,\n\t\topen: true,\n\t\talert: !skipAlertSound,\n\t\tunread: 1,\n\t\tuserMentions: 1,\n\t\tgroupMentions: 0,\n\t\t...autoTranslateConfig,\n\t\t...getDefaultSubscriptionPref(userToBeAdded as IUser),\n\t});\n\n\tif (insertedId) {\n\t\tvoid notifyOnSubscriptionChangedById(insertedId, 'inserted');\n\t}\n\n\tif (!userToBeAdded.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Cannot add an user to a room without a username');\n\t}\n\n\tif (!skipSystemMessage) {\n\t\tif (inviter) {\n\t\t\tconst extraData = {\n\t\t\t\tts: now,\n\t\t\t\tu: {\n\t\t\t\t\t_id: inviter._id,\n\t\t\t\t\tusername: inviter.username,\n\t\t\t\t},\n\t\t\t};\n\t\t\tif (room.teamMain) {\n\t\t\t\tawait Message.saveSystemMessage('added-user-to-team', rid, userToBeAdded.username, userToBeAdded, extraData);\n\t\t\t} else {\n\t\t\t\tawait Message.saveSystemMessage('au', rid, userToBeAdded.username, userToBeAdded, extraData);\n\t\t\t}\n\t\t} else if (room.prid) {\n\t\t\tawait Message.saveSystemMessage('ut', rid, userToBeAdded.username, userToBeAdded, { ts: now });\n\t\t} else if (room.teamMain) {\n\t\t\tawait Message.saveSystemMessage('ujt', rid, userToBeAdded.username, userToBeAdded, { ts: now });\n\t\t} else {\n\t\t\tawait Message.saveSystemMessage('uj', rid, userToBeAdded.username, userToBeAdded, { ts: now });\n\t\t}\n\t}\n\n\tif (room.t === 'c' || room.t === 'p') {\n\t\tprocess.nextTick(async () => {\n\t\t\t// Add a new event, with an optional inviter\n\t\t\tawait callbacks.run('afterAddedToRoom', { user: userToBeAdded, inviter }, room);\n\n\t\t\t// Keep the current event\n\t\t\tawait callbacks.run('afterJoinRoom', userToBeAdded, room);\n\n\t\t\tvoid Apps.self?.triggerEvent(AppEvents.IPostRoomUserJoined, room, userToBeAdded, inviter);\n\t\t});\n\t}\n\n\tif (room.teamMain && room.teamId) {\n\t\t// if user is joining to main team channel, create a membership\n\t\tawait Team.addMember(inviter || userToBeAdded, userToBeAdded._id, room.teamId);\n\t}\n\n\tif (room.encrypted && settings.get('E2E_Enable') && userToBeAdded.e2e?.public_key) {\n\t\tawait Rooms.addUserIdToE2EEQueueByRoomIds([room._id], userToBeAdded._id);\n\t}\n\n\tvoid notifyOnRoomChangedById(rid);\n\treturn true;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      addUserToRoom: () => addUserToRoom\n    });\n    let Apps, AppEvents;\n    module.link(\"@rocket.chat/apps\", {\n      Apps(v) {\n        Apps = v;\n      },\n      AppEvents(v) {\n        AppEvents = v;\n      }\n    }, 0);\n    let AppsEngineException;\n    module.link(\"@rocket.chat/apps-engine/definition/exceptions\", {\n      AppsEngineException(v) {\n        AppsEngineException = v;\n      }\n    }, 1);\n    let Message, Team;\n    module.link(\"@rocket.chat/core-services\", {\n      Message(v) {\n        Message = v;\n      },\n      Team(v) {\n        Team = v;\n      }\n    }, 2);\n    let Subscriptions, Users, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let RoomMemberActions;\n    module.link(\"../../../../definition/IRoomTypeConfig\", {\n      RoomMemberActions(v) {\n        RoomMemberActions = v;\n      }\n    }, 5);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 6);\n    let getSubscriptionAutotranslateDefaultConfig;\n    module.link(\"../../../../server/lib/getSubscriptionAutotranslateDefaultConfig\", {\n      getSubscriptionAutotranslateDefaultConfig(v) {\n        getSubscriptionAutotranslateDefaultConfig = v;\n      }\n    }, 7);\n    let roomCoordinator;\n    module.link(\"../../../../server/lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 8);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 9);\n    let getDefaultSubscriptionPref;\n    module.link(\"../../../utils/lib/getDefaultSubscriptionPref\", {\n      getDefaultSubscriptionPref(v) {\n        getDefaultSubscriptionPref = v;\n      }\n    }, 10);\n    let notifyOnRoomChangedById, notifyOnSubscriptionChangedById;\n    module.link(\"../lib/notifyListener\", {\n      notifyOnRoomChangedById(v) {\n        notifyOnRoomChangedById = v;\n      },\n      notifyOnSubscriptionChangedById(v) {\n        notifyOnSubscriptionChangedById = v;\n      }\n    }, 11);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const addUserToRoom = async function (rid, user, inviter) {\n      var _userToBeAdded$e2e;\n      let {\n        skipSystemMessage,\n        skipAlertSound\n      } = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      const now = new Date();\n      const room = await Rooms.findOneById(rid);\n      if (!room) {\n        throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n          method: 'addUserToRoom'\n        });\n      }\n      const userToBeAdded = typeof user === 'string' ? await Users.findOneByUsername(user.replace('@', '')) : await Users.findOneById(user._id);\n      const roomDirectives = roomCoordinator.getRoomDirectives(room.t);\n      if (!userToBeAdded) {\n        throw new Meteor.Error('user-not-found');\n      }\n      if (!(await roomDirectives.allowMemberAction(room, RoomMemberActions.JOIN, userToBeAdded._id)) && !(await roomDirectives.allowMemberAction(room, RoomMemberActions.INVITE, userToBeAdded._id))) {\n        return;\n      }\n      try {\n        await callbacks.run('federation.beforeAddUserToARoom', {\n          user: userToBeAdded,\n          inviter\n        }, room);\n      } catch (error) {\n        throw new Meteor.Error(error === null || error === void 0 ? void 0 : error.message);\n      }\n      await callbacks.run('beforeAddedToRoom', {\n        user: userToBeAdded,\n        inviter\n      });\n      // Check if user is already in room\n      const subscription = await Subscriptions.findOneByRoomIdAndUserId(rid, userToBeAdded._id);\n      if (subscription || !userToBeAdded) {\n        return;\n      }\n      try {\n        var _Apps$self;\n        await ((_Apps$self = Apps.self) === null || _Apps$self === void 0 ? void 0 : _Apps$self.triggerEvent(AppEvents.IPreRoomUserJoined, room, userToBeAdded, inviter));\n      } catch (error) {\n        if (error.name === AppsEngineException.name) {\n          throw new Meteor.Error('error-app-prevented', error.message);\n        }\n        throw error;\n      }\n      if (room.t === 'c' || room.t === 'p' || room.t === 'l') {\n        // Add a new event, with an optional inviter\n        await callbacks.run('beforeAddedToRoom', {\n          user: userToBeAdded,\n          inviter\n        }, room);\n        // Keep the current event\n        await callbacks.run('beforeJoinRoom', userToBeAdded, room);\n      }\n      const autoTranslateConfig = getSubscriptionAutotranslateDefaultConfig(userToBeAdded);\n      const {\n        insertedId\n      } = await Subscriptions.createWithRoomAndUser(room, userToBeAdded, _objectSpread(_objectSpread({\n        ts: now,\n        open: true,\n        alert: !skipAlertSound,\n        unread: 1,\n        userMentions: 1,\n        groupMentions: 0\n      }, autoTranslateConfig), getDefaultSubscriptionPref(userToBeAdded)));\n      if (insertedId) {\n        void notifyOnSubscriptionChangedById(insertedId, 'inserted');\n      }\n      if (!userToBeAdded.username) {\n        throw new Meteor.Error('error-invalid-user', 'Cannot add an user to a room without a username');\n      }\n      if (!skipSystemMessage) {\n        if (inviter) {\n          const extraData = {\n            ts: now,\n            u: {\n              _id: inviter._id,\n              username: inviter.username\n            }\n          };\n          if (room.teamMain) {\n            await Message.saveSystemMessage('added-user-to-team', rid, userToBeAdded.username, userToBeAdded, extraData);\n          } else {\n            await Message.saveSystemMessage('au', rid, userToBeAdded.username, userToBeAdded, extraData);\n          }\n        } else if (room.prid) {\n          await Message.saveSystemMessage('ut', rid, userToBeAdded.username, userToBeAdded, {\n            ts: now\n          });\n        } else if (room.teamMain) {\n          await Message.saveSystemMessage('ujt', rid, userToBeAdded.username, userToBeAdded, {\n            ts: now\n          });\n        } else {\n          await Message.saveSystemMessage('uj', rid, userToBeAdded.username, userToBeAdded, {\n            ts: now\n          });\n        }\n      }\n      if (room.t === 'c' || room.t === 'p') {\n        process.nextTick(async () => {\n          var _Apps$self2;\n          // Add a new event, with an optional inviter\n          await callbacks.run('afterAddedToRoom', {\n            user: userToBeAdded,\n            inviter\n          }, room);\n          // Keep the current event\n          await callbacks.run('afterJoinRoom', userToBeAdded, room);\n          void ((_Apps$self2 = Apps.self) === null || _Apps$self2 === void 0 ? void 0 : _Apps$self2.triggerEvent(AppEvents.IPostRoomUserJoined, room, userToBeAdded, inviter));\n        });\n      }\n      if (room.teamMain && room.teamId) {\n        // if user is joining to main team channel, create a membership\n        await Team.addMember(inviter || userToBeAdded, userToBeAdded._id, room.teamId);\n      }\n      if (room.encrypted && settings.get('E2E_Enable') && (_userToBeAdded$e2e = userToBeAdded.e2e) !== null && _userToBeAdded$e2e !== void 0 && _userToBeAdded$e2e.public_key) {\n        await Rooms.addUserIdToE2EEQueueByRoomIds([room._id], userToBeAdded._id);\n      }\n      void notifyOnRoomChangedById(rid);\n      return true;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","addUserToRoom","Apps","AppEvents","AppsEngineException","Message","Team","Subscriptions","Users","Rooms","Meteor","RoomMemberActions","callbacks","getSubscriptionAutotranslateDefaultConfig","roomCoordinator","settings","getDefaultSubscriptionPref","notifyOnRoomChangedById","notifyOnSubscriptionChangedById","__reifyWaitForDeps__","rid","user","inviter","_userToBeAdded$e2e","skipSystemMessage","skipAlertSound","arguments","length","undefined","now","Date","room","findOneById","Error","method","userToBeAdded","findOneByUsername","replace","_id","roomDirectives","getRoomDirectives","t","allowMemberAction","JOIN","INVITE","run","error","message","subscription","findOneByRoomIdAndUserId","_Apps$self","self","triggerEvent","IPreRoomUserJoined","name","autoTranslateConfig","insertedId","createWithRoomAndUser","ts","open","alert","unread","userMentions","groupMentions","username","extraData","u","teamMain","saveSystemMessage","prid","process","nextTick","_Apps$self2","IPostRoomUserJoined","teamId","addMember","encrypted","get","e2e","public_key","addUserIdToE2EEQueueByRoomIds","__reify_async_result__","_reifyError","async"],"sources":["app/lib/server/functions/addUserToRoom.ts"],"sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Message, Team } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { getSubscriptionAutotranslateDefaultConfig } from '../../../../server/lib/getSubscriptionAutotranslateDefaultConfig';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\nimport { settings } from '../../../settings/server';\nimport { getDefaultSubscriptionPref } from '../../../utils/lib/getDefaultSubscriptionPref';\nimport { notifyOnRoomChangedById, notifyOnSubscriptionChangedById } from '../lib/notifyListener';\n\nexport const addUserToRoom = async function (\n\trid: string,\n\tuser: Pick<IUser, '_id'> | string,\n\tinviter?: Pick<IUser, '_id' | 'username'>,\n\t{\n\t\tskipSystemMessage,\n\t\tskipAlertSound,\n\t}: {\n\t\tskipSystemMessage?: boolean;\n\t\tskipAlertSound?: boolean;\n\t} = {},\n): Promise<boolean | undefined> {\n\tconst now = new Date();\n\tconst room = await Rooms.findOneById(rid);\n\n\tif (!room) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\tmethod: 'addUserToRoom',\n\t\t});\n\t}\n\n\tconst userToBeAdded = typeof user === 'string' ? await Users.findOneByUsername(user.replace('@', '')) : await Users.findOneById(user._id);\n\tconst roomDirectives = roomCoordinator.getRoomDirectives(room.t);\n\n\tif (!userToBeAdded) {\n\t\tthrow new Meteor.Error('user-not-found');\n\t}\n\n\tif (\n\t\t!(await roomDirectives.allowMemberAction(room, RoomMemberActions.JOIN, userToBeAdded._id)) &&\n\t\t!(await roomDirectives.allowMemberAction(room, RoomMemberActions.INVITE, userToBeAdded._id))\n\t) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait callbacks.run('federation.beforeAddUserToARoom', { user: userToBeAdded, inviter }, room);\n\t} catch (error) {\n\t\tthrow new Meteor.Error((error as any)?.message);\n\t}\n\n\tawait callbacks.run('beforeAddedToRoom', { user: userToBeAdded, inviter });\n\n\t// Check if user is already in room\n\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(rid, userToBeAdded._id);\n\tif (subscription || !userToBeAdded) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait Apps.self?.triggerEvent(AppEvents.IPreRoomUserJoined, room, userToBeAdded, inviter);\n\t} catch (error: any) {\n\t\tif (error.name === AppsEngineException.name) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\tif (room.t === 'c' || room.t === 'p' || room.t === 'l') {\n\t\t// Add a new event, with an optional inviter\n\t\tawait callbacks.run('beforeAddedToRoom', { user: userToBeAdded, inviter }, room);\n\n\t\t// Keep the current event\n\t\tawait callbacks.run('beforeJoinRoom', userToBeAdded, room);\n\t}\n\n\tconst autoTranslateConfig = getSubscriptionAutotranslateDefaultConfig(userToBeAdded);\n\n\tconst { insertedId } = await Subscriptions.createWithRoomAndUser(room, userToBeAdded as IUser, {\n\t\tts: now,\n\t\topen: true,\n\t\talert: !skipAlertSound,\n\t\tunread: 1,\n\t\tuserMentions: 1,\n\t\tgroupMentions: 0,\n\t\t...autoTranslateConfig,\n\t\t...getDefaultSubscriptionPref(userToBeAdded as IUser),\n\t});\n\n\tif (insertedId) {\n\t\tvoid notifyOnSubscriptionChangedById(insertedId, 'inserted');\n\t}\n\n\tif (!userToBeAdded.username) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Cannot add an user to a room without a username');\n\t}\n\n\tif (!skipSystemMessage) {\n\t\tif (inviter) {\n\t\t\tconst extraData = {\n\t\t\t\tts: now,\n\t\t\t\tu: {\n\t\t\t\t\t_id: inviter._id,\n\t\t\t\t\tusername: inviter.username,\n\t\t\t\t},\n\t\t\t};\n\t\t\tif (room.teamMain) {\n\t\t\t\tawait Message.saveSystemMessage('added-user-to-team', rid, userToBeAdded.username, userToBeAdded, extraData);\n\t\t\t} else {\n\t\t\t\tawait Message.saveSystemMessage('au', rid, userToBeAdded.username, userToBeAdded, extraData);\n\t\t\t}\n\t\t} else if (room.prid) {\n\t\t\tawait Message.saveSystemMessage('ut', rid, userToBeAdded.username, userToBeAdded, { ts: now });\n\t\t} else if (room.teamMain) {\n\t\t\tawait Message.saveSystemMessage('ujt', rid, userToBeAdded.username, userToBeAdded, { ts: now });\n\t\t} else {\n\t\t\tawait Message.saveSystemMessage('uj', rid, userToBeAdded.username, userToBeAdded, { ts: now });\n\t\t}\n\t}\n\n\tif (room.t === 'c' || room.t === 'p') {\n\t\tprocess.nextTick(async () => {\n\t\t\t// Add a new event, with an optional inviter\n\t\t\tawait callbacks.run('afterAddedToRoom', { user: userToBeAdded, inviter }, room);\n\n\t\t\t// Keep the current event\n\t\t\tawait callbacks.run('afterJoinRoom', userToBeAdded, room);\n\n\t\t\tvoid Apps.self?.triggerEvent(AppEvents.IPostRoomUserJoined, room, userToBeAdded, inviter);\n\t\t});\n\t}\n\n\tif (room.teamMain && room.teamId) {\n\t\t// if user is joining to main team channel, create a membership\n\t\tawait Team.addMember(inviter || userToBeAdded, userToBeAdded._id, room.teamId);\n\t}\n\n\tif (room.encrypted && settings.get('E2E_Enable') && userToBeAdded.e2e?.public_key) {\n\t\tawait Rooms.addUserIdToE2EEQueueByRoomIds([room._id], userToBeAdded._id);\n\t}\n\n\tvoid notifyOnRoomChangedById(rid);\n\treturn true;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"929cb94286f1fa9c5e29b74b359fdda629f092ec"}
