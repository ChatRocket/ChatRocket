{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/departments.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/api/departments.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/departments.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/departments.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/departments.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tisLivechatAnalyticsDepartmentsAmountOfChatsProps,\n\tisLivechatAnalyticsDepartmentsAverageServiceTimeProps,\n\tisLivechatAnalyticsDepartmentsAverageChatDurationTimeProps,\n\tisLivechatAnalyticsDepartmentsTotalServiceTimeProps,\n\tisLivechatAnalyticsDepartmentsAverageWaitingTimeProps,\n\tisLivechatAnalyticsDepartmentsTotalTransferredChatsProps,\n\tisLivechatAnalyticsDepartmentsTotalAbandonedChatsProps,\n\tisLivechatAnalyticsDepartmentsPercentageAbandonedChatsProps,\n} from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../../app/api/server';\nimport { getPaginationItems } from '../../../../../app/api/server/helpers/getPaginationItems';\nimport {\n\tfindAllRoomsAsync,\n\tfindAllAverageServiceTimeAsync,\n\tfindAllServiceTimeAsync,\n\tfindAllAverageWaitingTimeAsync,\n\tfindAllNumberOfTransferredRoomsAsync,\n\tfindAllNumberOfAbandonedRoomsAsync,\n\tfindPercentageOfAbandonedRoomsAsync,\n\tfindAllAverageOfChatDurationTimeAsync,\n} from '../../../../../app/livechat/server/lib/analytics/departments';\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/amount-of-chats',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'], validateParams: isLivechatAnalyticsDepartmentsAmountOfChatsProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { answered, departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllRoomsAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tanswered: answered === 'true',\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/average-service-time',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsAverageServiceTimeProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllAverageServiceTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/average-chat-duration-time',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsAverageChatDurationTimeProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllAverageOfChatDurationTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/total-service-time',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsTotalServiceTimeProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllServiceTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/average-waiting-time',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsAverageWaitingTimeProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllAverageWaitingTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/total-transferred-chats',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsTotalTransferredChatsProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllNumberOfTransferredRoomsAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/total-abandoned-chats',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsTotalAbandonedChatsProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllNumberOfAbandonedRoomsAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/percentage-abandoned-chats',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsPercentageAbandonedChatsProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findPercentageOfAbandonedRoomsAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/departments.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/api/departments.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/departments.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/departments.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tisLivechatAnalyticsDepartmentsAmountOfChatsProps,\n\tisLivechatAnalyticsDepartmentsAverageServiceTimeProps,\n\tisLivechatAnalyticsDepartmentsAverageChatDurationTimeProps,\n\tisLivechatAnalyticsDepartmentsTotalServiceTimeProps,\n\tisLivechatAnalyticsDepartmentsAverageWaitingTimeProps,\n\tisLivechatAnalyticsDepartmentsTotalTransferredChatsProps,\n\tisLivechatAnalyticsDepartmentsTotalAbandonedChatsProps,\n\tisLivechatAnalyticsDepartmentsPercentageAbandonedChatsProps,\n} from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../../app/api/server';\nimport { getPaginationItems } from '../../../../../app/api/server/helpers/getPaginationItems';\nimport {\n\tfindAllRoomsAsync,\n\tfindAllAverageServiceTimeAsync,\n\tfindAllServiceTimeAsync,\n\tfindAllAverageWaitingTimeAsync,\n\tfindAllNumberOfTransferredRoomsAsync,\n\tfindAllNumberOfAbandonedRoomsAsync,\n\tfindPercentageOfAbandonedRoomsAsync,\n\tfindAllAverageOfChatDurationTimeAsync,\n} from '../../../../../app/livechat/server/lib/analytics/departments';\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/amount-of-chats',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'], validateParams: isLivechatAnalyticsDepartmentsAmountOfChatsProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { answered, departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllRoomsAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tanswered: answered === 'true',\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/average-service-time',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsAverageServiceTimeProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllAverageServiceTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/average-chat-duration-time',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsAverageChatDurationTimeProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllAverageOfChatDurationTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/total-service-time',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsTotalServiceTimeProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllServiceTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/average-waiting-time',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsAverageWaitingTimeProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllAverageWaitingTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/total-transferred-chats',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsTotalTransferredChatsProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllNumberOfTransferredRoomsAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/total-abandoned-chats',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsTotalAbandonedChatsProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllNumberOfAbandonedRoomsAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/percentage-abandoned-chats',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsPercentageAbandonedChatsProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findPercentageOfAbandonedRoomsAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let isLivechatAnalyticsDepartmentsAmountOfChatsProps, isLivechatAnalyticsDepartmentsAverageServiceTimeProps, isLivechatAnalyticsDepartmentsAverageChatDurationTimeProps, isLivechatAnalyticsDepartmentsTotalServiceTimeProps, isLivechatAnalyticsDepartmentsAverageWaitingTimeProps, isLivechatAnalyticsDepartmentsTotalTransferredChatsProps, isLivechatAnalyticsDepartmentsTotalAbandonedChatsProps, isLivechatAnalyticsDepartmentsPercentageAbandonedChatsProps;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isLivechatAnalyticsDepartmentsAmountOfChatsProps(v) {\n        isLivechatAnalyticsDepartmentsAmountOfChatsProps = v;\n      },\n      isLivechatAnalyticsDepartmentsAverageServiceTimeProps(v) {\n        isLivechatAnalyticsDepartmentsAverageServiceTimeProps = v;\n      },\n      isLivechatAnalyticsDepartmentsAverageChatDurationTimeProps(v) {\n        isLivechatAnalyticsDepartmentsAverageChatDurationTimeProps = v;\n      },\n      isLivechatAnalyticsDepartmentsTotalServiceTimeProps(v) {\n        isLivechatAnalyticsDepartmentsTotalServiceTimeProps = v;\n      },\n      isLivechatAnalyticsDepartmentsAverageWaitingTimeProps(v) {\n        isLivechatAnalyticsDepartmentsAverageWaitingTimeProps = v;\n      },\n      isLivechatAnalyticsDepartmentsTotalTransferredChatsProps(v) {\n        isLivechatAnalyticsDepartmentsTotalTransferredChatsProps = v;\n      },\n      isLivechatAnalyticsDepartmentsTotalAbandonedChatsProps(v) {\n        isLivechatAnalyticsDepartmentsTotalAbandonedChatsProps = v;\n      },\n      isLivechatAnalyticsDepartmentsPercentageAbandonedChatsProps(v) {\n        isLivechatAnalyticsDepartmentsPercentageAbandonedChatsProps = v;\n      }\n    }, 0);\n    let API;\n    module.link(\"../../../../../app/api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 1);\n    let getPaginationItems;\n    module.link(\"../../../../../app/api/server/helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 2);\n    let findAllRoomsAsync, findAllAverageServiceTimeAsync, findAllServiceTimeAsync, findAllAverageWaitingTimeAsync, findAllNumberOfTransferredRoomsAsync, findAllNumberOfAbandonedRoomsAsync, findPercentageOfAbandonedRoomsAsync, findAllAverageOfChatDurationTimeAsync;\n    module.link(\"../../../../../app/livechat/server/lib/analytics/departments\", {\n      findAllRoomsAsync(v) {\n        findAllRoomsAsync = v;\n      },\n      findAllAverageServiceTimeAsync(v) {\n        findAllAverageServiceTimeAsync = v;\n      },\n      findAllServiceTimeAsync(v) {\n        findAllServiceTimeAsync = v;\n      },\n      findAllAverageWaitingTimeAsync(v) {\n        findAllAverageWaitingTimeAsync = v;\n      },\n      findAllNumberOfTransferredRoomsAsync(v) {\n        findAllNumberOfTransferredRoomsAsync = v;\n      },\n      findAllNumberOfAbandonedRoomsAsync(v) {\n        findAllNumberOfAbandonedRoomsAsync = v;\n      },\n      findPercentageOfAbandonedRoomsAsync(v) {\n        findPercentageOfAbandonedRoomsAsync = v;\n      },\n      findAllAverageOfChatDurationTimeAsync(v) {\n        findAllAverageOfChatDurationTimeAsync = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('livechat/analytics/departments/amount-of-chats', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: isLivechatAnalyticsDepartmentsAmountOfChatsProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          start,\n          end\n        } = this.queryParams;\n        const {\n          answered,\n          departmentId\n        } = this.queryParams;\n        if (isNaN(Date.parse(start))) {\n          return API.v1.failure('The \"start\" query parameter must be a valid date.');\n        }\n        const startDate = new Date(start);\n        if (isNaN(Date.parse(end))) {\n          return API.v1.failure('The \"end\" query parameter must be a valid date.');\n        }\n        const endDate = new Date(end);\n        const {\n          departments,\n          total\n        } = await findAllRoomsAsync({\n          start: startDate,\n          end: endDate,\n          answered: answered === 'true',\n          departmentId,\n          options: {\n            offset,\n            count\n          }\n        });\n        return API.v1.success({\n          departments,\n          count: departments.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('livechat/analytics/departments/average-service-time', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: isLivechatAnalyticsDepartmentsAverageServiceTimeProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          start,\n          end\n        } = this.queryParams;\n        const {\n          departmentId\n        } = this.queryParams;\n        if (isNaN(Date.parse(start))) {\n          return API.v1.failure('The \"start\" query parameter must be a valid date.');\n        }\n        const startDate = new Date(start);\n        if (isNaN(Date.parse(end))) {\n          return API.v1.failure('The \"end\" query parameter must be a valid date.');\n        }\n        const endDate = new Date(end);\n        const {\n          departments,\n          total\n        } = await findAllAverageServiceTimeAsync({\n          start: startDate,\n          end: endDate,\n          departmentId,\n          options: {\n            offset,\n            count\n          }\n        });\n        return API.v1.success({\n          departments,\n          count: departments.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('livechat/analytics/departments/average-chat-duration-time', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: isLivechatAnalyticsDepartmentsAverageChatDurationTimeProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          start,\n          end\n        } = this.queryParams;\n        const {\n          departmentId\n        } = this.queryParams;\n        if (isNaN(Date.parse(start))) {\n          return API.v1.failure('The \"start\" query parameter must be a valid date.');\n        }\n        const startDate = new Date(start);\n        if (isNaN(Date.parse(end))) {\n          return API.v1.failure('The \"end\" query parameter must be a valid date.');\n        }\n        const endDate = new Date(end);\n        const {\n          departments,\n          total\n        } = await findAllAverageOfChatDurationTimeAsync({\n          start: startDate,\n          end: endDate,\n          departmentId,\n          options: {\n            offset,\n            count\n          }\n        });\n        return API.v1.success({\n          departments,\n          count: departments.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('livechat/analytics/departments/total-service-time', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: isLivechatAnalyticsDepartmentsTotalServiceTimeProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          start,\n          end\n        } = this.queryParams;\n        const {\n          departmentId\n        } = this.queryParams;\n        if (isNaN(Date.parse(start))) {\n          return API.v1.failure('The \"start\" query parameter must be a valid date.');\n        }\n        const startDate = new Date(start);\n        if (isNaN(Date.parse(end))) {\n          return API.v1.failure('The \"end\" query parameter must be a valid date.');\n        }\n        const endDate = new Date(end);\n        const {\n          departments,\n          total\n        } = await findAllServiceTimeAsync({\n          start: startDate,\n          end: endDate,\n          departmentId,\n          options: {\n            offset,\n            count\n          }\n        });\n        return API.v1.success({\n          departments,\n          count: departments.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('livechat/analytics/departments/average-waiting-time', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: isLivechatAnalyticsDepartmentsAverageWaitingTimeProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          start,\n          end\n        } = this.queryParams;\n        const {\n          departmentId\n        } = this.queryParams;\n        if (isNaN(Date.parse(start))) {\n          return API.v1.failure('The \"start\" query parameter must be a valid date.');\n        }\n        const startDate = new Date(start);\n        if (isNaN(Date.parse(end))) {\n          return API.v1.failure('The \"end\" query parameter must be a valid date.');\n        }\n        const endDate = new Date(end);\n        const {\n          departments,\n          total\n        } = await findAllAverageWaitingTimeAsync({\n          start: startDate,\n          end: endDate,\n          departmentId,\n          options: {\n            offset,\n            count\n          }\n        });\n        return API.v1.success({\n          departments,\n          count: departments.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('livechat/analytics/departments/total-transferred-chats', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: isLivechatAnalyticsDepartmentsTotalTransferredChatsProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          start,\n          end\n        } = this.queryParams;\n        const {\n          departmentId\n        } = this.queryParams;\n        if (isNaN(Date.parse(start))) {\n          return API.v1.failure('The \"start\" query parameter must be a valid date.');\n        }\n        const startDate = new Date(start);\n        if (isNaN(Date.parse(end))) {\n          return API.v1.failure('The \"end\" query parameter must be a valid date.');\n        }\n        const endDate = new Date(end);\n        const {\n          departments,\n          total\n        } = await findAllNumberOfTransferredRoomsAsync({\n          start: startDate,\n          end: endDate,\n          departmentId,\n          options: {\n            offset,\n            count\n          }\n        });\n        return API.v1.success({\n          departments,\n          count: departments.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('livechat/analytics/departments/total-abandoned-chats', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: isLivechatAnalyticsDepartmentsTotalAbandonedChatsProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          start,\n          end\n        } = this.queryParams;\n        const {\n          departmentId\n        } = this.queryParams;\n        if (isNaN(Date.parse(start))) {\n          return API.v1.failure('The \"start\" query parameter must be a valid date.');\n        }\n        const startDate = new Date(start);\n        if (isNaN(Date.parse(end))) {\n          return API.v1.failure('The \"end\" query parameter must be a valid date.');\n        }\n        const endDate = new Date(end);\n        const {\n          departments,\n          total\n        } = await findAllNumberOfAbandonedRoomsAsync({\n          start: startDate,\n          end: endDate,\n          departmentId,\n          options: {\n            offset,\n            count\n          }\n        });\n        return API.v1.success({\n          departments,\n          count: departments.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('livechat/analytics/departments/percentage-abandoned-chats', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: isLivechatAnalyticsDepartmentsPercentageAbandonedChatsProps\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          start,\n          end\n        } = this.queryParams;\n        const {\n          departmentId\n        } = this.queryParams;\n        if (isNaN(Date.parse(start))) {\n          return API.v1.failure('The \"start\" query parameter must be a valid date.');\n        }\n        const startDate = new Date(start);\n        if (isNaN(Date.parse(end))) {\n          return API.v1.failure('The \"end\" query parameter must be a valid date.');\n        }\n        const endDate = new Date(end);\n        const {\n          departments,\n          total\n        } = await findPercentageOfAbandonedRoomsAsync({\n          start: startDate,\n          end: endDate,\n          departmentId,\n          options: {\n            offset,\n            count\n          }\n        });\n        return API.v1.success({\n          departments,\n          count: departments.length,\n          offset,\n          total\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["isLivechatAnalyticsDepartmentsAmountOfChatsProps","isLivechatAnalyticsDepartmentsAverageServiceTimeProps","isLivechatAnalyticsDepartmentsAverageChatDurationTimeProps","isLivechatAnalyticsDepartmentsTotalServiceTimeProps","isLivechatAnalyticsDepartmentsAverageWaitingTimeProps","isLivechatAnalyticsDepartmentsTotalTransferredChatsProps","isLivechatAnalyticsDepartmentsTotalAbandonedChatsProps","isLivechatAnalyticsDepartmentsPercentageAbandonedChatsProps","module","link","v","API","getPaginationItems","findAllRoomsAsync","findAllAverageServiceTimeAsync","findAllServiceTimeAsync","findAllAverageWaitingTimeAsync","findAllNumberOfTransferredRoomsAsync","findAllNumberOfAbandonedRoomsAsync","findPercentageOfAbandonedRoomsAsync","findAllAverageOfChatDurationTimeAsync","__reifyWaitForDeps__","v1","addRoute","authRequired","permissionsRequired","validateParams","get","offset","count","queryParams","start","end","answered","departmentId","isNaN","Date","parse","failure","startDate","endDate","departments","total","options","success","length","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/api/departments.ts"],"sourcesContent":["import {\n\tisLivechatAnalyticsDepartmentsAmountOfChatsProps,\n\tisLivechatAnalyticsDepartmentsAverageServiceTimeProps,\n\tisLivechatAnalyticsDepartmentsAverageChatDurationTimeProps,\n\tisLivechatAnalyticsDepartmentsTotalServiceTimeProps,\n\tisLivechatAnalyticsDepartmentsAverageWaitingTimeProps,\n\tisLivechatAnalyticsDepartmentsTotalTransferredChatsProps,\n\tisLivechatAnalyticsDepartmentsTotalAbandonedChatsProps,\n\tisLivechatAnalyticsDepartmentsPercentageAbandonedChatsProps,\n} from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../../app/api/server';\nimport { getPaginationItems } from '../../../../../app/api/server/helpers/getPaginationItems';\nimport {\n\tfindAllRoomsAsync,\n\tfindAllAverageServiceTimeAsync,\n\tfindAllServiceTimeAsync,\n\tfindAllAverageWaitingTimeAsync,\n\tfindAllNumberOfTransferredRoomsAsync,\n\tfindAllNumberOfAbandonedRoomsAsync,\n\tfindPercentageOfAbandonedRoomsAsync,\n\tfindAllAverageOfChatDurationTimeAsync,\n} from '../../../../../app/livechat/server/lib/analytics/departments';\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/amount-of-chats',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'], validateParams: isLivechatAnalyticsDepartmentsAmountOfChatsProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { answered, departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllRoomsAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tanswered: answered === 'true',\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/average-service-time',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsAverageServiceTimeProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllAverageServiceTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/average-chat-duration-time',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsAverageChatDurationTimeProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllAverageOfChatDurationTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/total-service-time',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsTotalServiceTimeProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllServiceTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/average-waiting-time',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsAverageWaitingTimeProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllAverageWaitingTimeAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/total-transferred-chats',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsTotalTransferredChatsProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllNumberOfTransferredRoomsAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/total-abandoned-chats',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsTotalAbandonedChatsProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findAllNumberOfAbandonedRoomsAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/analytics/departments/percentage-abandoned-chats',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: isLivechatAnalyticsDepartmentsPercentageAbandonedChatsProps,\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { start, end } = this.queryParams;\n\t\t\tconst { departmentId } = this.queryParams;\n\n\t\t\tif (isNaN(Date.parse(start))) {\n\t\t\t\treturn API.v1.failure('The \"start\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst startDate = new Date(start);\n\n\t\t\tif (isNaN(Date.parse(end))) {\n\t\t\t\treturn API.v1.failure('The \"end\" query parameter must be a valid date.');\n\t\t\t}\n\t\t\tconst endDate = new Date(end);\n\n\t\t\tconst { departments, total } = await findPercentageOfAbandonedRoomsAsync({\n\t\t\t\tstart: startDate,\n\t\t\t\tend: endDate,\n\t\t\t\tdepartmentId,\n\t\t\t\toptions: { offset, count },\n\t\t\t});\n\t\t\treturn API.v1.success({\n\t\t\t\tdepartments,\n\t\t\t\tcount: departments.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"fb7051b30ad2faba91d7ccfdc463908a00f2e877"}
