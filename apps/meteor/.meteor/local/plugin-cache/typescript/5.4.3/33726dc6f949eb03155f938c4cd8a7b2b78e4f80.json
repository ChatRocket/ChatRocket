{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/cloud/server/functions/connectWorkspace.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/cloud/server/functions/connectWorkspace.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/cloud/server/functions/connectWorkspace.ts","inputSourceMap":{"version":3,"file":"app/cloud/server/functions/connectWorkspace.ts","sourceRoot":"","sources":["app/cloud/server/functions/connectWorkspace.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,IAAI,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEjE,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAC9D,OAAO,EAAE,6BAA6B,EAAE,MAAM,sDAAsD,CAAC;AACrG,OAAO,EAAE,YAAY,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAEpD,MAAM,4BAA4B,GAAG,KAAK,EAAE,EAC3C,KAAK,EACL,IAAI,GAQJ,EAAE,EAAE;IACJ,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAS,WAAW,CAAC,CAAC;IACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,QAAQ,oBAAoB,EAAE;QAC7D,MAAM,EAAE,MAAM;QACd,OAAO,EAAE;YACR,aAAa,EAAE,UAAU,KAAK,EAAE;SAChC;QACD,IAAI;KACJ,CAAC,CAAC;IAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;QAClB,IAAI,CAAC;YACJ,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACxC,MAAM,IAAI,6BAA6B,CAAC,2CAA2C,KAAK,EAAE,CAAC,CAAC;QAC7F,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,MAAM,IAAI,6BAA6B,CAAC,2CAA2C,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;QAC3G,CAAC;IACF,CAAC;IAED,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IAEtC,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,KAAa;IACnD,IAAI,CAAC,KAAK,EAAE,CAAC;QACZ,MAAM,IAAI,6BAA6B,CAAC,4BAA4B,CAAC,CAAC;IACvE,CAAC;IAED,IAAI,CAAC;QACJ,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;QAErC,MAAM,IAAI,GAAG;YACZ,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAS,oBAAoB,CAAC;YACjD,WAAW,EAAE,QAAQ,CAAC,GAAG,CAAS,WAAW,CAAC;YAC9C,aAAa,EAAE,CAAC,WAAW,CAAC;SAC5B,CAAC;QAEF,MAAM,OAAO,GAAG,MAAM,4BAA4B,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QAEpE,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,OAAO,KAAK,CAAC;QACd,CAAC;QAED,MAAM,oBAAoB,CAAC,OAAO,CAAC,CAAC;QAEpC,OAAO,IAAI,CAAC;IACb,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACd,YAAY,CAAC,KAAK,CAAC;YAClB,GAAG,EAAE,0CAA0C;YAC/C,GAAG,EAAE,oBAAoB;YACzB,GAAG;SACH,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC;IACd,CAAC;AACF,CAAC","sourcesContent":["import { serverFetch as fetch } from '@rocket.chat/server-fetch';\n\nimport { getRedirectUri } from './getRedirectUri';\nimport { saveRegistrationData } from './saveRegistrationData';\nimport { CloudWorkspaceConnectionError } from '../../../../lib/errors/CloudWorkspaceConnectionError';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { settings } from '../../../settings/server';\n\nconst fetchRegistrationDataPayload = async ({\n\ttoken,\n\tbody,\n}: {\n\ttoken: string;\n\tbody: {\n\t\temail: string;\n\t\tclient_name: string;\n\t\tredirect_uris: string[];\n\t};\n}) => {\n\tconst cloudUrl = settings.get<string>('Cloud_Url');\n\tconst response = await fetch(`${cloudUrl}/api/oauth/clients`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t},\n\t\tbody,\n\t});\n\n\tif (!response.ok) {\n\t\ttry {\n\t\t\tconst { error } = await response.json();\n\t\t\tthrow new CloudWorkspaceConnectionError(`Failed to connect to Rocket.Chat Cloud: ${error}`);\n\t\t} catch (error) {\n\t\t\tthrow new CloudWorkspaceConnectionError(`Failed to connect to Rocket.Chat Cloud: ${response.statusText}`);\n\t\t}\n\t}\n\n\tconst payload = await response.json();\n\n\tif (!payload) {\n\t\treturn undefined;\n\t}\n\n\treturn payload;\n};\n\nexport async function connectWorkspace(token: string) {\n\tif (!token) {\n\t\tthrow new CloudWorkspaceConnectionError('Invalid registration token');\n\t}\n\n\ttry {\n\t\tconst redirectUri = getRedirectUri();\n\n\t\tconst body = {\n\t\t\temail: settings.get<string>('Organization_Email'),\n\t\t\tclient_name: settings.get<string>('Site_Name'),\n\t\t\tredirect_uris: [redirectUri],\n\t\t};\n\n\t\tconst payload = await fetchRegistrationDataPayload({ token, body });\n\n\t\tif (!payload) {\n\t\t\treturn false;\n\t\t}\n\n\t\tawait saveRegistrationData(payload);\n\n\t\treturn true;\n\t} catch (err) {\n\t\tSystemLogger.error({\n\t\t\tmsg: 'Failed to Connect with Rocket.Chat Cloud',\n\t\t\turl: '/api/oauth/clients',\n\t\t\terr,\n\t\t});\n\n\t\treturn false;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/cloud/server/functions/connectWorkspace.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/cloud/server/functions/connectWorkspace.ts","inputSourceMap":{"version":3,"file":"app/cloud/server/functions/connectWorkspace.ts","sourceRoot":"","sources":["app/cloud/server/functions/connectWorkspace.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,IAAI,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEjE,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAC9D,OAAO,EAAE,6BAA6B,EAAE,MAAM,sDAAsD,CAAC;AACrG,OAAO,EAAE,YAAY,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAEpD,MAAM,4BAA4B,GAAG,KAAK,EAAE,EAC3C,KAAK,EACL,IAAI,GAQJ,EAAE,EAAE;IACJ,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAS,WAAW,CAAC,CAAC;IACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,QAAQ,oBAAoB,EAAE;QAC7D,MAAM,EAAE,MAAM;QACd,OAAO,EAAE;YACR,aAAa,EAAE,UAAU,KAAK,EAAE;SAChC;QACD,IAAI;KACJ,CAAC,CAAC;IAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;QAClB,IAAI,CAAC;YACJ,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACxC,MAAM,IAAI,6BAA6B,CAAC,2CAA2C,KAAK,EAAE,CAAC,CAAC;QAC7F,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,MAAM,IAAI,6BAA6B,CAAC,2CAA2C,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;QAC3G,CAAC;IACF,CAAC;IAED,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IAEtC,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,KAAa;IACnD,IAAI,CAAC,KAAK,EAAE,CAAC;QACZ,MAAM,IAAI,6BAA6B,CAAC,4BAA4B,CAAC,CAAC;IACvE,CAAC;IAED,IAAI,CAAC;QACJ,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;QAErC,MAAM,IAAI,GAAG;YACZ,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAS,oBAAoB,CAAC;YACjD,WAAW,EAAE,QAAQ,CAAC,GAAG,CAAS,WAAW,CAAC;YAC9C,aAAa,EAAE,CAAC,WAAW,CAAC;SAC5B,CAAC;QAEF,MAAM,OAAO,GAAG,MAAM,4BAA4B,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QAEpE,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,OAAO,KAAK,CAAC;QACd,CAAC;QAED,MAAM,oBAAoB,CAAC,OAAO,CAAC,CAAC;QAEpC,OAAO,IAAI,CAAC;IACb,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACd,YAAY,CAAC,KAAK,CAAC;YAClB,GAAG,EAAE,0CAA0C;YAC/C,GAAG,EAAE,oBAAoB;YACzB,GAAG;SACH,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC;IACd,CAAC;AACF,CAAC","sourcesContent":["import { serverFetch as fetch } from '@rocket.chat/server-fetch';\n\nimport { getRedirectUri } from './getRedirectUri';\nimport { saveRegistrationData } from './saveRegistrationData';\nimport { CloudWorkspaceConnectionError } from '../../../../lib/errors/CloudWorkspaceConnectionError';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { settings } from '../../../settings/server';\n\nconst fetchRegistrationDataPayload = async ({\n\ttoken,\n\tbody,\n}: {\n\ttoken: string;\n\tbody: {\n\t\temail: string;\n\t\tclient_name: string;\n\t\tredirect_uris: string[];\n\t};\n}) => {\n\tconst cloudUrl = settings.get<string>('Cloud_Url');\n\tconst response = await fetch(`${cloudUrl}/api/oauth/clients`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t},\n\t\tbody,\n\t});\n\n\tif (!response.ok) {\n\t\ttry {\n\t\t\tconst { error } = await response.json();\n\t\t\tthrow new CloudWorkspaceConnectionError(`Failed to connect to Rocket.Chat Cloud: ${error}`);\n\t\t} catch (error) {\n\t\t\tthrow new CloudWorkspaceConnectionError(`Failed to connect to Rocket.Chat Cloud: ${response.statusText}`);\n\t\t}\n\t}\n\n\tconst payload = await response.json();\n\n\tif (!payload) {\n\t\treturn undefined;\n\t}\n\n\treturn payload;\n};\n\nexport async function connectWorkspace(token: string) {\n\tif (!token) {\n\t\tthrow new CloudWorkspaceConnectionError('Invalid registration token');\n\t}\n\n\ttry {\n\t\tconst redirectUri = getRedirectUri();\n\n\t\tconst body = {\n\t\t\temail: settings.get<string>('Organization_Email'),\n\t\t\tclient_name: settings.get<string>('Site_Name'),\n\t\t\tredirect_uris: [redirectUri],\n\t\t};\n\n\t\tconst payload = await fetchRegistrationDataPayload({ token, body });\n\n\t\tif (!payload) {\n\t\t\treturn false;\n\t\t}\n\n\t\tawait saveRegistrationData(payload);\n\n\t\treturn true;\n\t} catch (err) {\n\t\tSystemLogger.error({\n\t\t\tmsg: 'Failed to Connect with Rocket.Chat Cloud',\n\t\t\turl: '/api/oauth/clients',\n\t\t\terr,\n\t\t});\n\n\t\treturn false;\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      connectWorkspace: () => connectWorkspace\n    });\n    let fetch;\n    module.link(\"@rocket.chat/server-fetch\", {\n      serverFetch(v) {\n        fetch = v;\n      }\n    }, 0);\n    let getRedirectUri;\n    module.link(\"./getRedirectUri\", {\n      getRedirectUri(v) {\n        getRedirectUri = v;\n      }\n    }, 1);\n    let saveRegistrationData;\n    module.link(\"./saveRegistrationData\", {\n      saveRegistrationData(v) {\n        saveRegistrationData = v;\n      }\n    }, 2);\n    let CloudWorkspaceConnectionError;\n    module.link(\"../../../../lib/errors/CloudWorkspaceConnectionError\", {\n      CloudWorkspaceConnectionError(v) {\n        CloudWorkspaceConnectionError = v;\n      }\n    }, 3);\n    let SystemLogger;\n    module.link(\"../../../../server/lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 4);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const fetchRegistrationDataPayload = async _ref => {\n      let {\n        token,\n        body\n      } = _ref;\n      const cloudUrl = settings.get('Cloud_Url');\n      const response = await fetch(\"\".concat(cloudUrl, \"/api/oauth/clients\"), {\n        method: 'POST',\n        headers: {\n          Authorization: \"Bearer \".concat(token)\n        },\n        body\n      });\n      if (!response.ok) {\n        try {\n          const {\n            error\n          } = await response.json();\n          throw new CloudWorkspaceConnectionError(\"Failed to connect to Rocket.Chat Cloud: \".concat(error));\n        } catch (error) {\n          throw new CloudWorkspaceConnectionError(\"Failed to connect to Rocket.Chat Cloud: \".concat(response.statusText));\n        }\n      }\n      const payload = await response.json();\n      if (!payload) {\n        return undefined;\n      }\n      return payload;\n    };\n    async function connectWorkspace(token) {\n      if (!token) {\n        throw new CloudWorkspaceConnectionError('Invalid registration token');\n      }\n      try {\n        const redirectUri = getRedirectUri();\n        const body = {\n          email: settings.get('Organization_Email'),\n          client_name: settings.get('Site_Name'),\n          redirect_uris: [redirectUri]\n        };\n        const payload = await fetchRegistrationDataPayload({\n          token,\n          body\n        });\n        if (!payload) {\n          return false;\n        }\n        await saveRegistrationData(payload);\n        return true;\n      } catch (err) {\n        SystemLogger.error({\n          msg: 'Failed to Connect with Rocket.Chat Cloud',\n          url: '/api/oauth/clients',\n          err\n        });\n        return false;\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","connectWorkspace","fetch","link","serverFetch","v","getRedirectUri","saveRegistrationData","CloudWorkspaceConnectionError","SystemLogger","settings","__reifyWaitForDeps__","fetchRegistrationDataPayload","_ref","token","body","cloudUrl","get","response","concat","method","headers","Authorization","ok","error","json","statusText","payload","undefined","redirectUri","email","client_name","redirect_uris","err","msg","url","__reify_async_result__","_reifyError","self","async"],"sources":["app/cloud/server/functions/connectWorkspace.ts"],"sourcesContent":["import { serverFetch as fetch } from '@rocket.chat/server-fetch';\n\nimport { getRedirectUri } from './getRedirectUri';\nimport { saveRegistrationData } from './saveRegistrationData';\nimport { CloudWorkspaceConnectionError } from '../../../../lib/errors/CloudWorkspaceConnectionError';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { settings } from '../../../settings/server';\n\nconst fetchRegistrationDataPayload = async ({\n\ttoken,\n\tbody,\n}: {\n\ttoken: string;\n\tbody: {\n\t\temail: string;\n\t\tclient_name: string;\n\t\tredirect_uris: string[];\n\t};\n}) => {\n\tconst cloudUrl = settings.get<string>('Cloud_Url');\n\tconst response = await fetch(`${cloudUrl}/api/oauth/clients`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${token}`,\n\t\t},\n\t\tbody,\n\t});\n\n\tif (!response.ok) {\n\t\ttry {\n\t\t\tconst { error } = await response.json();\n\t\t\tthrow new CloudWorkspaceConnectionError(`Failed to connect to Rocket.Chat Cloud: ${error}`);\n\t\t} catch (error) {\n\t\t\tthrow new CloudWorkspaceConnectionError(`Failed to connect to Rocket.Chat Cloud: ${response.statusText}`);\n\t\t}\n\t}\n\n\tconst payload = await response.json();\n\n\tif (!payload) {\n\t\treturn undefined;\n\t}\n\n\treturn payload;\n};\n\nexport async function connectWorkspace(token: string) {\n\tif (!token) {\n\t\tthrow new CloudWorkspaceConnectionError('Invalid registration token');\n\t}\n\n\ttry {\n\t\tconst redirectUri = getRedirectUri();\n\n\t\tconst body = {\n\t\t\temail: settings.get<string>('Organization_Email'),\n\t\t\tclient_name: settings.get<string>('Site_Name'),\n\t\t\tredirect_uris: [redirectUri],\n\t\t};\n\n\t\tconst payload = await fetchRegistrationDataPayload({ token, body });\n\n\t\tif (!payload) {\n\t\t\treturn false;\n\t\t}\n\n\t\tawait saveRegistrationData(payload);\n\n\t\treturn true;\n\t} catch (err) {\n\t\tSystemLogger.error({\n\t\t\tmsg: 'Failed to Connect with Rocket.Chat Cloud',\n\t\t\turl: '/api/oauth/clients',\n\t\t\terr,\n\t\t});\n\n\t\treturn false;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"33726dc6f949eb03155f938c4cd8a7b2b78e4f80"}
