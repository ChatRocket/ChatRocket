{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/lib/getUploadFormData.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/lib/getUploadFormData.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/lib/getUploadFormData.ts","inputSourceMap":{"version":3,"file":"app/api/server/lib/getUploadFormData.ts","sourceRoot":"","sources":["app/api/server/lib/getUploadFormData.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Readable } from 'stream';\n\nimport { MeteorError } from '@rocket.chat/core-services';\nimport type { ValidateFunction } from 'ajv';\nimport busboy from 'busboy';\nimport type { Request } from 'express';\n\nimport { getMimeType } from '../../../utils/lib/mimeTypes';\n\ntype UploadResult<K> = {\n\tfile: Readable & { truncated: boolean };\n\tfieldname: string;\n\tfilename: string;\n\tencoding: string;\n\tmimetype: string;\n\tfileBuffer: Buffer;\n\tfields: K;\n};\n\nexport async function getUploadFormData<\n\tT extends string,\n\tK extends Record<string, string> = Record<string, string>,\n\tV extends ValidateFunction<K> = ValidateFunction<K>,\n>(\n\t{ request }: { request: Request },\n\toptions: {\n\t\tfield?: T;\n\t\tvalidate?: V;\n\t\tsizeLimit?: number;\n\t} = {},\n): Promise<UploadResult<K>> {\n\tconst limits = {\n\t\tfiles: 1,\n\t\t...(options.sizeLimit && options.sizeLimit > -1 && { fileSize: options.sizeLimit }),\n\t};\n\n\tconst bb = busboy({ headers: request.headers, defParamCharset: 'utf8', limits });\n\tconst fields = Object.create(null) as K;\n\n\tlet uploadedFile: UploadResult<K> | undefined;\n\n\tlet returnResult = (_value: UploadResult<K>) => {\n\t\t// noop\n\t};\n\tlet returnError = (_error?: Error | string | null | undefined) => {\n\t\t// noop\n\t};\n\n\tfunction onField(fieldname: keyof K, value: K[keyof K]) {\n\t\tfields[fieldname] = value;\n\t}\n\n\tfunction onEnd() {\n\t\tif (!uploadedFile) {\n\t\t\treturn returnError(new MeteorError('No file uploaded'));\n\t\t}\n\t\tif (options.validate !== undefined && !options.validate(fields)) {\n\t\t\treturn returnError(new MeteorError(`Invalid fields ${options.validate.errors?.join(', ')}`));\n\t\t}\n\t\treturn returnResult(uploadedFile);\n\t}\n\n\tfunction onFile(\n\t\tfieldname: string,\n\t\tfile: Readable & { truncated: boolean },\n\t\t{ filename, encoding, mimeType: mimetype }: { filename: string; encoding: string; mimeType: string },\n\t) {\n\t\tif (options.field && fieldname !== options.field) {\n\t\t\tfile.resume();\n\t\t\treturn returnError(new MeteorError('invalid-field'));\n\t\t}\n\n\t\tconst fileChunks: Uint8Array[] = [];\n\t\tfile.on('data', (chunk) => {\n\t\t\tfileChunks.push(chunk);\n\t\t});\n\n\t\tfile.on('end', () => {\n\t\t\tif (file.truncated) {\n\t\t\t\tfileChunks.length = 0;\n\t\t\t\treturn returnError(new MeteorError('error-file-too-large'));\n\t\t\t}\n\n\t\t\tuploadedFile = {\n\t\t\t\tfile,\n\t\t\t\tfilename,\n\t\t\t\tencoding,\n\t\t\t\tmimetype: getMimeType(mimetype, filename),\n\t\t\t\tfieldname,\n\t\t\t\tfields,\n\t\t\t\tfileBuffer: Buffer.concat(fileChunks),\n\t\t\t};\n\t\t});\n\t}\n\n\tfunction cleanup() {\n\t\trequest.unpipe(bb);\n\t\trequest.on('readable', request.read.bind(request));\n\t\tbb.removeAllListeners();\n\t}\n\n\tbb.on('field', onField);\n\tbb.on('file', onFile);\n\tbb.on('close', cleanup);\n\tbb.on('end', onEnd);\n\tbb.on('finish', onEnd);\n\n\tbb.on('error', (err: Error) => {\n\t\treturnError(err);\n\t});\n\n\tbb.on('partsLimit', () => {\n\t\treturnError();\n\t});\n\tbb.on('filesLimit', () => {\n\t\treturnError('Just 1 file is allowed');\n\t});\n\tbb.on('fieldsLimit', () => {\n\t\treturnError();\n\t});\n\n\trequest.pipe(bb);\n\n\treturn new Promise((resolve, reject) => {\n\t\treturnResult = resolve;\n\t\treturnError = reject;\n\t});\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/lib/getUploadFormData.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/lib/getUploadFormData.ts","inputSourceMap":{"version":3,"file":"app/api/server/lib/getUploadFormData.ts","sourceRoot":"","sources":["app/api/server/lib/getUploadFormData.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Readable } from 'stream';\n\nimport { MeteorError } from '@rocket.chat/core-services';\nimport type { ValidateFunction } from 'ajv';\nimport busboy from 'busboy';\nimport type { Request } from 'express';\n\nimport { getMimeType } from '../../../utils/lib/mimeTypes';\n\ntype UploadResult<K> = {\n\tfile: Readable & { truncated: boolean };\n\tfieldname: string;\n\tfilename: string;\n\tencoding: string;\n\tmimetype: string;\n\tfileBuffer: Buffer;\n\tfields: K;\n};\n\nexport async function getUploadFormData<\n\tT extends string,\n\tK extends Record<string, string> = Record<string, string>,\n\tV extends ValidateFunction<K> = ValidateFunction<K>,\n>(\n\t{ request }: { request: Request },\n\toptions: {\n\t\tfield?: T;\n\t\tvalidate?: V;\n\t\tsizeLimit?: number;\n\t} = {},\n): Promise<UploadResult<K>> {\n\tconst limits = {\n\t\tfiles: 1,\n\t\t...(options.sizeLimit && options.sizeLimit > -1 && { fileSize: options.sizeLimit }),\n\t};\n\n\tconst bb = busboy({ headers: request.headers, defParamCharset: 'utf8', limits });\n\tconst fields = Object.create(null) as K;\n\n\tlet uploadedFile: UploadResult<K> | undefined;\n\n\tlet returnResult = (_value: UploadResult<K>) => {\n\t\t// noop\n\t};\n\tlet returnError = (_error?: Error | string | null | undefined) => {\n\t\t// noop\n\t};\n\n\tfunction onField(fieldname: keyof K, value: K[keyof K]) {\n\t\tfields[fieldname] = value;\n\t}\n\n\tfunction onEnd() {\n\t\tif (!uploadedFile) {\n\t\t\treturn returnError(new MeteorError('No file uploaded'));\n\t\t}\n\t\tif (options.validate !== undefined && !options.validate(fields)) {\n\t\t\treturn returnError(new MeteorError(`Invalid fields ${options.validate.errors?.join(', ')}`));\n\t\t}\n\t\treturn returnResult(uploadedFile);\n\t}\n\n\tfunction onFile(\n\t\tfieldname: string,\n\t\tfile: Readable & { truncated: boolean },\n\t\t{ filename, encoding, mimeType: mimetype }: { filename: string; encoding: string; mimeType: string },\n\t) {\n\t\tif (options.field && fieldname !== options.field) {\n\t\t\tfile.resume();\n\t\t\treturn returnError(new MeteorError('invalid-field'));\n\t\t}\n\n\t\tconst fileChunks: Uint8Array[] = [];\n\t\tfile.on('data', (chunk) => {\n\t\t\tfileChunks.push(chunk);\n\t\t});\n\n\t\tfile.on('end', () => {\n\t\t\tif (file.truncated) {\n\t\t\t\tfileChunks.length = 0;\n\t\t\t\treturn returnError(new MeteorError('error-file-too-large'));\n\t\t\t}\n\n\t\t\tuploadedFile = {\n\t\t\t\tfile,\n\t\t\t\tfilename,\n\t\t\t\tencoding,\n\t\t\t\tmimetype: getMimeType(mimetype, filename),\n\t\t\t\tfieldname,\n\t\t\t\tfields,\n\t\t\t\tfileBuffer: Buffer.concat(fileChunks),\n\t\t\t};\n\t\t});\n\t}\n\n\tfunction cleanup() {\n\t\trequest.unpipe(bb);\n\t\trequest.on('readable', request.read.bind(request));\n\t\tbb.removeAllListeners();\n\t}\n\n\tbb.on('field', onField);\n\tbb.on('file', onFile);\n\tbb.on('close', cleanup);\n\tbb.on('end', onEnd);\n\tbb.on('finish', onEnd);\n\n\tbb.on('error', (err: Error) => {\n\t\treturnError(err);\n\t});\n\n\tbb.on('partsLimit', () => {\n\t\treturnError();\n\t});\n\tbb.on('filesLimit', () => {\n\t\treturnError('Just 1 file is allowed');\n\t});\n\tbb.on('fieldsLimit', () => {\n\t\treturnError();\n\t});\n\n\trequest.pipe(bb);\n\n\treturn new Promise((resolve, reject) => {\n\t\treturnResult = resolve;\n\t\treturnError = reject;\n\t});\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      getUploadFormData: () => getUploadFormData\n    });\n    let MeteorError;\n    module.link(\"@rocket.chat/core-services\", {\n      MeteorError(v) {\n        MeteorError = v;\n      }\n    }, 0);\n    let busboy;\n    module.link(\"busboy\", {\n      default(v) {\n        busboy = v;\n      }\n    }, 1);\n    let getMimeType;\n    module.link(\"../../../utils/lib/mimeTypes\", {\n      getMimeType(v) {\n        getMimeType = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function getUploadFormData(_ref) {\n      let {\n        request\n      } = _ref;\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const limits = _objectSpread({\n        files: 1\n      }, options.sizeLimit && options.sizeLimit > -1 && {\n        fileSize: options.sizeLimit\n      });\n      const bb = busboy({\n        headers: request.headers,\n        defParamCharset: 'utf8',\n        limits\n      });\n      const fields = Object.create(null);\n      let uploadedFile;\n      let returnResult = _value => {\n        // noop\n      };\n      let returnError = _error => {\n        // noop\n      };\n      function onField(fieldname, value) {\n        fields[fieldname] = value;\n      }\n      function onEnd() {\n        if (!uploadedFile) {\n          return returnError(new MeteorError('No file uploaded'));\n        }\n        if (options.validate !== undefined && !options.validate(fields)) {\n          var _options$validate$err;\n          return returnError(new MeteorError(\"Invalid fields \".concat((_options$validate$err = options.validate.errors) === null || _options$validate$err === void 0 ? void 0 : _options$validate$err.join(', '))));\n        }\n        return returnResult(uploadedFile);\n      }\n      function onFile(fieldname, file, _ref2) {\n        let {\n          filename,\n          encoding,\n          mimeType: mimetype\n        } = _ref2;\n        if (options.field && fieldname !== options.field) {\n          file.resume();\n          return returnError(new MeteorError('invalid-field'));\n        }\n        const fileChunks = [];\n        file.on('data', chunk => {\n          fileChunks.push(chunk);\n        });\n        file.on('end', () => {\n          if (file.truncated) {\n            fileChunks.length = 0;\n            return returnError(new MeteorError('error-file-too-large'));\n          }\n          uploadedFile = {\n            file,\n            filename,\n            encoding,\n            mimetype: getMimeType(mimetype, filename),\n            fieldname,\n            fields,\n            fileBuffer: Buffer.concat(fileChunks)\n          };\n        });\n      }\n      function cleanup() {\n        request.unpipe(bb);\n        request.on('readable', request.read.bind(request));\n        bb.removeAllListeners();\n      }\n      bb.on('field', onField);\n      bb.on('file', onFile);\n      bb.on('close', cleanup);\n      bb.on('end', onEnd);\n      bb.on('finish', onEnd);\n      bb.on('error', err => {\n        returnError(err);\n      });\n      bb.on('partsLimit', () => {\n        returnError();\n      });\n      bb.on('filesLimit', () => {\n        returnError('Just 1 file is allowed');\n      });\n      bb.on('fieldsLimit', () => {\n        returnError();\n      });\n      request.pipe(bb);\n      return new Promise((resolve, reject) => {\n        returnResult = resolve;\n        returnError = reject;\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","getUploadFormData","MeteorError","busboy","getMimeType","__reifyWaitForDeps__","_ref","request","options","arguments","length","undefined","limits","files","sizeLimit","fileSize","bb","headers","defParamCharset","fields","Object","create","uploadedFile","returnResult","_value","returnError","_error","onField","fieldname","value","onEnd","validate","_options$validate$err","concat","errors","join","onFile","file","_ref2","filename","encoding","mimeType","mimetype","field","resume","fileChunks","on","chunk","push","truncated","fileBuffer","Buffer","cleanup","unpipe","read","bind","removeAllListeners","err","pipe","Promise","resolve","reject","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/lib/getUploadFormData.ts"],"sourcesContent":["import type { Readable } from 'stream';\n\nimport { MeteorError } from '@rocket.chat/core-services';\nimport type { ValidateFunction } from 'ajv';\nimport busboy from 'busboy';\nimport type { Request } from 'express';\n\nimport { getMimeType } from '../../../utils/lib/mimeTypes';\n\ntype UploadResult<K> = {\n\tfile: Readable & { truncated: boolean };\n\tfieldname: string;\n\tfilename: string;\n\tencoding: string;\n\tmimetype: string;\n\tfileBuffer: Buffer;\n\tfields: K;\n};\n\nexport async function getUploadFormData<\n\tT extends string,\n\tK extends Record<string, string> = Record<string, string>,\n\tV extends ValidateFunction<K> = ValidateFunction<K>,\n>(\n\t{ request }: { request: Request },\n\toptions: {\n\t\tfield?: T;\n\t\tvalidate?: V;\n\t\tsizeLimit?: number;\n\t} = {},\n): Promise<UploadResult<K>> {\n\tconst limits = {\n\t\tfiles: 1,\n\t\t...(options.sizeLimit && options.sizeLimit > -1 && { fileSize: options.sizeLimit }),\n\t};\n\n\tconst bb = busboy({ headers: request.headers, defParamCharset: 'utf8', limits });\n\tconst fields = Object.create(null) as K;\n\n\tlet uploadedFile: UploadResult<K> | undefined;\n\n\tlet returnResult = (_value: UploadResult<K>) => {\n\t\t// noop\n\t};\n\tlet returnError = (_error?: Error | string | null | undefined) => {\n\t\t// noop\n\t};\n\n\tfunction onField(fieldname: keyof K, value: K[keyof K]) {\n\t\tfields[fieldname] = value;\n\t}\n\n\tfunction onEnd() {\n\t\tif (!uploadedFile) {\n\t\t\treturn returnError(new MeteorError('No file uploaded'));\n\t\t}\n\t\tif (options.validate !== undefined && !options.validate(fields)) {\n\t\t\treturn returnError(new MeteorError(`Invalid fields ${options.validate.errors?.join(', ')}`));\n\t\t}\n\t\treturn returnResult(uploadedFile);\n\t}\n\n\tfunction onFile(\n\t\tfieldname: string,\n\t\tfile: Readable & { truncated: boolean },\n\t\t{ filename, encoding, mimeType: mimetype }: { filename: string; encoding: string; mimeType: string },\n\t) {\n\t\tif (options.field && fieldname !== options.field) {\n\t\t\tfile.resume();\n\t\t\treturn returnError(new MeteorError('invalid-field'));\n\t\t}\n\n\t\tconst fileChunks: Uint8Array[] = [];\n\t\tfile.on('data', (chunk) => {\n\t\t\tfileChunks.push(chunk);\n\t\t});\n\n\t\tfile.on('end', () => {\n\t\t\tif (file.truncated) {\n\t\t\t\tfileChunks.length = 0;\n\t\t\t\treturn returnError(new MeteorError('error-file-too-large'));\n\t\t\t}\n\n\t\t\tuploadedFile = {\n\t\t\t\tfile,\n\t\t\t\tfilename,\n\t\t\t\tencoding,\n\t\t\t\tmimetype: getMimeType(mimetype, filename),\n\t\t\t\tfieldname,\n\t\t\t\tfields,\n\t\t\t\tfileBuffer: Buffer.concat(fileChunks),\n\t\t\t};\n\t\t});\n\t}\n\n\tfunction cleanup() {\n\t\trequest.unpipe(bb);\n\t\trequest.on('readable', request.read.bind(request));\n\t\tbb.removeAllListeners();\n\t}\n\n\tbb.on('field', onField);\n\tbb.on('file', onFile);\n\tbb.on('close', cleanup);\n\tbb.on('end', onEnd);\n\tbb.on('finish', onEnd);\n\n\tbb.on('error', (err: Error) => {\n\t\treturnError(err);\n\t});\n\n\tbb.on('partsLimit', () => {\n\t\treturnError();\n\t});\n\tbb.on('filesLimit', () => {\n\t\treturnError('Just 1 file is allowed');\n\t});\n\tbb.on('fieldsLimit', () => {\n\t\treturnError();\n\t});\n\n\trequest.pipe(bb);\n\n\treturn new Promise((resolve, reject) => {\n\t\treturnResult = resolve;\n\t\treturnError = reject;\n\t});\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7925ce8836c6df71a07fec6b38b15c04dafce825"}
