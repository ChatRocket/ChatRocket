{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/adapters/File.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/infrastructure/rocket-chat/adapters/File.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/adapters/File.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/rocket-chat/adapters/File.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/rocket-chat/adapters/File.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAC;AAEvD,OAAO,EAAE,UAAU,EAAE,MAAM,0CAA0C,CAAC;AACtE,OAAO,EAAE,+BAA+B,EAAE,MAAM,kEAAkE,CAAC;AAOnH,MAAM,OAAO,qBAAqB;IAC1B,KAAK,CAAC,UAAU,CACtB,cAA8B,EAC9B,cAAsB,EACtB,YAAmB,EACnB,UAA4B;QAE5B,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAEjD,MAAM,YAAY,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QACxE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,MAAM,+BAA+B,CAAC,YAAY,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;QAEjH,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;IAC/B,CAAC;IAEM,KAAK,CAAC,uBAAuB,CAAC,UAAmB;QACvD,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACtD,IAAI,CAAC,CAAC,MAAM,YAAY,MAAM,CAAC,EAAE,CAAC;YACjC,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;QACD,OAAO,MAAM,CAAC;IACf,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAAC,MAAc;QAC5C,OAAO,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAEM,KAAK,CAAC,uBAAuB,CAAC,IAAa;QACjD,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACrC,MAAM,QAAQ,GAAG,MAAM,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAExD,OAAO;gBACN,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,KAAK,EAAE,QAAQ,CAAC,KAAK;aACrB,CAAC;QACH,CAAC;QACD,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACrC,OAAO;gBACN,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,GAAG;aACV,CAAC;QACH,CAAC;QACD,OAAO,EAAE,CAAC;IACX,CAAC;IAEM,KAAK,CAAC,sBAAsB,CAAC,QAAgB;QACnD,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;YAChB,OAAO;QACR,CAAC;QACD,OAAO,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAEM,KAAK,CAAC,4BAA4B,CAAC,QAAgB;QACzD,MAAM,IAAI,GAAG,CAAC,MAAM,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAwB,CAAC;QAE5E,OAAO;YACN,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;SACf,CAAC;IACH,CAAC;CACD","sourcesContent":["import type { IMessage, IUpload, IUser } from '@rocket.chat/core-typings';\nimport { Avatars, Uploads } from '@rocket.chat/models';\n\nimport { FileUpload } from '../../../../../../app/file-upload/server';\nimport { parseFileIntoMessageAttachments } from '../../../../../../app/file-upload/server/methods/sendFileMessage';\n\ninterface IAvatarMetadataFile {\n\ttype: string;\n\tname: string;\n}\n\nexport class RocketChatFileAdapter {\n\tpublic async uploadFile(\n\t\treadableStream: ReadableStream,\n\t\tinternalRoomId: string,\n\t\tinternalUser: IUser,\n\t\tfileRecord: Partial<IUpload>,\n\t): Promise<{ files: IMessage['files']; attachments: IMessage['attachments'] }> {\n\t\tconst fileStore = FileUpload.getStore('Uploads');\n\n\t\tconst uploadedFile = await fileStore.insert(fileRecord, readableStream);\n\t\tconst { files, attachments } = await parseFileIntoMessageAttachments(uploadedFile, internalRoomId, internalUser);\n\n\t\treturn { files, attachments };\n\t}\n\n\tpublic async getBufferFromFileRecord(fileRecord: IUpload): Promise<Buffer> {\n\t\tconst buffer = await FileUpload.getBuffer(fileRecord);\n\t\tif (!(buffer instanceof Buffer)) {\n\t\t\tthrow new Error('Unknown error');\n\t\t}\n\t\treturn buffer;\n\t}\n\n\tpublic async getFileRecordById(fileId: string): Promise<IUpload | undefined | null> {\n\t\treturn Uploads.findOneById(fileId);\n\t}\n\n\tpublic async extractMetadataFromFile(file: IUpload): Promise<{ height?: number; width?: number; format?: string }> {\n\t\tif (file.type?.startsWith('image/')) {\n\t\t\tconst metadata = await FileUpload.extractMetadata(file);\n\n\t\t\treturn {\n\t\t\t\tformat: metadata.format,\n\t\t\t\theight: metadata.height,\n\t\t\t\twidth: metadata.width,\n\t\t\t};\n\t\t}\n\t\tif (file.type?.startsWith('video/')) {\n\t\t\treturn {\n\t\t\t\theight: 200,\n\t\t\t\twidth: 250,\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n\n\tpublic async getBufferForAvatarFile(username: string): Promise<any> {\n\t\tconst file = await Avatars.findOneByName(username);\n\t\tif (!file?._id) {\n\t\t\treturn;\n\t\t}\n\t\treturn FileUpload.getBuffer(file);\n\t}\n\n\tpublic async getFileMetadataForAvatarFile(username: string): Promise<IAvatarMetadataFile> {\n\t\tconst file = (await Avatars.findOneByName(username)) as Record<string, any>;\n\n\t\treturn {\n\t\t\ttype: file.type,\n\t\t\tname: file.name,\n\t\t};\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/adapters/File.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/infrastructure/rocket-chat/adapters/File.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/rocket-chat/adapters/File.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/rocket-chat/adapters/File.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,qBAAqB,CAAC;AAEvD,OAAO,EAAE,UAAU,EAAE,MAAM,0CAA0C,CAAC;AACtE,OAAO,EAAE,+BAA+B,EAAE,MAAM,kEAAkE,CAAC;AAOnH,MAAM,OAAO,qBAAqB;IAC1B,KAAK,CAAC,UAAU,CACtB,cAA8B,EAC9B,cAAsB,EACtB,YAAmB,EACnB,UAA4B;QAE5B,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAEjD,MAAM,YAAY,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QACxE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,MAAM,+BAA+B,CAAC,YAAY,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;QAEjH,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;IAC/B,CAAC;IAEM,KAAK,CAAC,uBAAuB,CAAC,UAAmB;QACvD,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACtD,IAAI,CAAC,CAAC,MAAM,YAAY,MAAM,CAAC,EAAE,CAAC;YACjC,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;QAClC,CAAC;QACD,OAAO,MAAM,CAAC;IACf,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAAC,MAAc;QAC5C,OAAO,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAEM,KAAK,CAAC,uBAAuB,CAAC,IAAa;QACjD,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACrC,MAAM,QAAQ,GAAG,MAAM,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAExD,OAAO;gBACN,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,KAAK,EAAE,QAAQ,CAAC,KAAK;aACrB,CAAC;QACH,CAAC;QACD,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACrC,OAAO;gBACN,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,GAAG;aACV,CAAC;QACH,CAAC;QACD,OAAO,EAAE,CAAC;IACX,CAAC;IAEM,KAAK,CAAC,sBAAsB,CAAC,QAAgB;QACnD,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;YAChB,OAAO;QACR,CAAC;QACD,OAAO,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAEM,KAAK,CAAC,4BAA4B,CAAC,QAAgB;QACzD,MAAM,IAAI,GAAG,CAAC,MAAM,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAwB,CAAC;QAE5E,OAAO;YACN,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;SACf,CAAC;IACH,CAAC;CACD","sourcesContent":["import type { IMessage, IUpload, IUser } from '@rocket.chat/core-typings';\nimport { Avatars, Uploads } from '@rocket.chat/models';\n\nimport { FileUpload } from '../../../../../../app/file-upload/server';\nimport { parseFileIntoMessageAttachments } from '../../../../../../app/file-upload/server/methods/sendFileMessage';\n\ninterface IAvatarMetadataFile {\n\ttype: string;\n\tname: string;\n}\n\nexport class RocketChatFileAdapter {\n\tpublic async uploadFile(\n\t\treadableStream: ReadableStream,\n\t\tinternalRoomId: string,\n\t\tinternalUser: IUser,\n\t\tfileRecord: Partial<IUpload>,\n\t): Promise<{ files: IMessage['files']; attachments: IMessage['attachments'] }> {\n\t\tconst fileStore = FileUpload.getStore('Uploads');\n\n\t\tconst uploadedFile = await fileStore.insert(fileRecord, readableStream);\n\t\tconst { files, attachments } = await parseFileIntoMessageAttachments(uploadedFile, internalRoomId, internalUser);\n\n\t\treturn { files, attachments };\n\t}\n\n\tpublic async getBufferFromFileRecord(fileRecord: IUpload): Promise<Buffer> {\n\t\tconst buffer = await FileUpload.getBuffer(fileRecord);\n\t\tif (!(buffer instanceof Buffer)) {\n\t\t\tthrow new Error('Unknown error');\n\t\t}\n\t\treturn buffer;\n\t}\n\n\tpublic async getFileRecordById(fileId: string): Promise<IUpload | undefined | null> {\n\t\treturn Uploads.findOneById(fileId);\n\t}\n\n\tpublic async extractMetadataFromFile(file: IUpload): Promise<{ height?: number; width?: number; format?: string }> {\n\t\tif (file.type?.startsWith('image/')) {\n\t\t\tconst metadata = await FileUpload.extractMetadata(file);\n\n\t\t\treturn {\n\t\t\t\tformat: metadata.format,\n\t\t\t\theight: metadata.height,\n\t\t\t\twidth: metadata.width,\n\t\t\t};\n\t\t}\n\t\tif (file.type?.startsWith('video/')) {\n\t\t\treturn {\n\t\t\t\theight: 200,\n\t\t\t\twidth: 250,\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n\n\tpublic async getBufferForAvatarFile(username: string): Promise<any> {\n\t\tconst file = await Avatars.findOneByName(username);\n\t\tif (!file?._id) {\n\t\t\treturn;\n\t\t}\n\t\treturn FileUpload.getBuffer(file);\n\t}\n\n\tpublic async getFileMetadataForAvatarFile(username: string): Promise<IAvatarMetadataFile> {\n\t\tconst file = (await Avatars.findOneByName(username)) as Record<string, any>;\n\n\t\treturn {\n\t\t\ttype: file.type,\n\t\t\tname: file.name,\n\t\t};\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      RocketChatFileAdapter: () => RocketChatFileAdapter\n    });\n    let Avatars, Uploads;\n    module.link(\"@rocket.chat/models\", {\n      Avatars(v) {\n        Avatars = v;\n      },\n      Uploads(v) {\n        Uploads = v;\n      }\n    }, 0);\n    let FileUpload;\n    module.link(\"../../../../../../app/file-upload/server\", {\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 1);\n    let parseFileIntoMessageAttachments;\n    module.link(\"../../../../../../app/file-upload/server/methods/sendFileMessage\", {\n      parseFileIntoMessageAttachments(v) {\n        parseFileIntoMessageAttachments = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class RocketChatFileAdapter {\n      async uploadFile(readableStream, internalRoomId, internalUser, fileRecord) {\n        const fileStore = FileUpload.getStore('Uploads');\n        const uploadedFile = await fileStore.insert(fileRecord, readableStream);\n        const {\n          files,\n          attachments\n        } = await parseFileIntoMessageAttachments(uploadedFile, internalRoomId, internalUser);\n        return {\n          files,\n          attachments\n        };\n      }\n      async getBufferFromFileRecord(fileRecord) {\n        const buffer = await FileUpload.getBuffer(fileRecord);\n        if (!(buffer instanceof Buffer)) {\n          throw new Error('Unknown error');\n        }\n        return buffer;\n      }\n      async getFileRecordById(fileId) {\n        return Uploads.findOneById(fileId);\n      }\n      async extractMetadataFromFile(file) {\n        var _file$type, _file$type2;\n        if ((_file$type = file.type) !== null && _file$type !== void 0 && _file$type.startsWith('image/')) {\n          const metadata = await FileUpload.extractMetadata(file);\n          return {\n            format: metadata.format,\n            height: metadata.height,\n            width: metadata.width\n          };\n        }\n        if ((_file$type2 = file.type) !== null && _file$type2 !== void 0 && _file$type2.startsWith('video/')) {\n          return {\n            height: 200,\n            width: 250\n          };\n        }\n        return {};\n      }\n      async getBufferForAvatarFile(username) {\n        const file = await Avatars.findOneByName(username);\n        if (!(file !== null && file !== void 0 && file._id)) {\n          return;\n        }\n        return FileUpload.getBuffer(file);\n      }\n      async getFileMetadataForAvatarFile(username) {\n        const file = await Avatars.findOneByName(username);\n        return {\n          type: file.type,\n          name: file.name\n        };\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","RocketChatFileAdapter","Avatars","Uploads","link","v","FileUpload","parseFileIntoMessageAttachments","__reifyWaitForDeps__","uploadFile","readableStream","internalRoomId","internalUser","fileRecord","fileStore","getStore","uploadedFile","insert","files","attachments","getBufferFromFileRecord","buffer","getBuffer","Buffer","Error","getFileRecordById","fileId","findOneById","extractMetadataFromFile","file","_file$type","_file$type2","type","startsWith","metadata","extractMetadata","format","height","width","getBufferForAvatarFile","username","findOneByName","_id","getFileMetadataForAvatarFile","name","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/federation/infrastructure/rocket-chat/adapters/File.ts"],"sourcesContent":["import type { IMessage, IUpload, IUser } from '@rocket.chat/core-typings';\nimport { Avatars, Uploads } from '@rocket.chat/models';\n\nimport { FileUpload } from '../../../../../../app/file-upload/server';\nimport { parseFileIntoMessageAttachments } from '../../../../../../app/file-upload/server/methods/sendFileMessage';\n\ninterface IAvatarMetadataFile {\n\ttype: string;\n\tname: string;\n}\n\nexport class RocketChatFileAdapter {\n\tpublic async uploadFile(\n\t\treadableStream: ReadableStream,\n\t\tinternalRoomId: string,\n\t\tinternalUser: IUser,\n\t\tfileRecord: Partial<IUpload>,\n\t): Promise<{ files: IMessage['files']; attachments: IMessage['attachments'] }> {\n\t\tconst fileStore = FileUpload.getStore('Uploads');\n\n\t\tconst uploadedFile = await fileStore.insert(fileRecord, readableStream);\n\t\tconst { files, attachments } = await parseFileIntoMessageAttachments(uploadedFile, internalRoomId, internalUser);\n\n\t\treturn { files, attachments };\n\t}\n\n\tpublic async getBufferFromFileRecord(fileRecord: IUpload): Promise<Buffer> {\n\t\tconst buffer = await FileUpload.getBuffer(fileRecord);\n\t\tif (!(buffer instanceof Buffer)) {\n\t\t\tthrow new Error('Unknown error');\n\t\t}\n\t\treturn buffer;\n\t}\n\n\tpublic async getFileRecordById(fileId: string): Promise<IUpload | undefined | null> {\n\t\treturn Uploads.findOneById(fileId);\n\t}\n\n\tpublic async extractMetadataFromFile(file: IUpload): Promise<{ height?: number; width?: number; format?: string }> {\n\t\tif (file.type?.startsWith('image/')) {\n\t\t\tconst metadata = await FileUpload.extractMetadata(file);\n\n\t\t\treturn {\n\t\t\t\tformat: metadata.format,\n\t\t\t\theight: metadata.height,\n\t\t\t\twidth: metadata.width,\n\t\t\t};\n\t\t}\n\t\tif (file.type?.startsWith('video/')) {\n\t\t\treturn {\n\t\t\t\theight: 200,\n\t\t\t\twidth: 250,\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n\n\tpublic async getBufferForAvatarFile(username: string): Promise<any> {\n\t\tconst file = await Avatars.findOneByName(username);\n\t\tif (!file?._id) {\n\t\t\treturn;\n\t\t}\n\t\treturn FileUpload.getBuffer(file);\n\t}\n\n\tpublic async getFileMetadataForAvatarFile(username: string): Promise<IAvatarMetadataFile> {\n\t\tconst file = (await Avatars.findOneByName(username)) as Record<string, any>;\n\n\t\treturn {\n\t\t\ttype: file.type,\n\t\t\tname: file.name,\n\t\t};\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"5eab6357cf33382506f9af492a0b6f536d48047f"}
