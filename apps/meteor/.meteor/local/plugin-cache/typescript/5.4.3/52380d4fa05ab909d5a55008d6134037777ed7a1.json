{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/MessageList/hooks/useMessages.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/MessageList/hooks/useMessages.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/MessageList/hooks/useMessages.ts","inputSourceMap":{"version":3,"file":"client/views/room/MessageList/hooks/useMessages.ts","sourceRoot":"","sources":["client/views/room/MessageList/hooks/useMessages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAC7D,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAEzE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAE7C,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAC;AAC/D,OAAO,EAAE,gBAAgB,EAAE,MAAM,oCAAoC,CAAC;AACtE,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,MAAM,oBAAoB,GAAG,CAC5B,YAAuC,EACvC,YAAuC,EACX,EAAE;IAC9B,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,YAAY,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,EAAE,GAAG,EAAyB,EAAc,EAAE;IACzE,MAAM,wBAAwB,GAAG,iBAAiB,CAAU,0BAA0B,EAAE,KAAK,CAAC,CAAC;IAC/F,MAAM,iBAAiB,GAAG,UAAU,CAAuB,sBAAsB,EAAE,EAAE,CAAC,CAAC;IACvF,MAAM,IAAI,GAAG,OAAO,EAAE,CAAC;IACvB,MAAM,cAAc,GAA8B,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;IAEhG,MAAM,eAAe,GAAG,cAAc,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC,CAAC;IAEhG,MAAM,KAAK,GAA6B,OAAO,CAC9C,GAAG,EAAE,CAAC,CAAC;QACN,GAAG;QACH,OAAO,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;QACtB,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE;QAC5B,GAAG,CAAC,CAAC,wBAAwB,IAAI;YAChC,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;SAC7D,CAAC;KACF,CAAC,EACF,CAAC,GAAG,EAAE,eAAe,EAAE,wBAAwB,CAAC,CAChD,CAAC;IAEF,OAAO,gBAAgB,CACtB,WAAW,CACV,GAAG,EAAE,CACJ,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE;QACvB,IAAI,EAAE;YACL,EAAE,EAAE,CAAC;SACL;KACD,CAAC,CAAC,KAAK,EAAE,EACX,CAAC,KAAK,CAAC,CACP,CACD,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { IRoom, IMessage, MessageTypesValues } from '@rocket.chat/core-typings';\nimport { useStableArray } from '@rocket.chat/fuselage-hooks';\nimport { useSetting, useUserPreference } from '@rocket.chat/ui-contexts';\nimport type { Mongo } from 'meteor/mongo';\nimport { useCallback, useMemo } from 'react';\n\nimport { ChatMessage } from '../../../../../app/models/client';\nimport { useReactiveValue } from '../../../../hooks/useReactiveValue';\nimport { useRoom } from '../../contexts/RoomContext';\n\nconst mergeHideSysMessages = (\n\tsysMesArray1: Array<MessageTypesValues>,\n\tsysMesArray2: Array<MessageTypesValues>,\n): Array<MessageTypesValues> => {\n\treturn Array.from(new Set([...sysMesArray1, ...sysMesArray2]));\n};\n\nexport const useMessages = ({ rid }: { rid: IRoom['_id'] }): IMessage[] => {\n\tconst showThreadsInMainChannel = useUserPreference<boolean>('showThreadsInMainChannel', false);\n\tconst hideSysMesSetting = useSetting<MessageTypesValues[]>('Hide_System_Messages', []);\n\tconst room = useRoom();\n\tconst hideRoomSysMes: Array<MessageTypesValues> = Array.isArray(room.sysMes) ? room.sysMes : [];\n\n\tconst hideSysMessages = useStableArray(mergeHideSysMessages(hideSysMesSetting, hideRoomSysMes));\n\n\tconst query: Mongo.Selector<IMessage> = useMemo(\n\t\t() => ({\n\t\t\trid,\n\t\t\t_hidden: { $ne: true },\n\t\t\tt: { $nin: hideSysMessages },\n\t\t\t...(!showThreadsInMainChannel && {\n\t\t\t\t$or: [{ tmid: { $exists: false } }, { tshow: { $eq: true } }],\n\t\t\t}),\n\t\t}),\n\t\t[rid, hideSysMessages, showThreadsInMainChannel],\n\t);\n\n\treturn useReactiveValue(\n\t\tuseCallback(\n\t\t\t() =>\n\t\t\t\tChatMessage.find(query, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tts: 1,\n\t\t\t\t\t},\n\t\t\t\t}).fetch(),\n\t\t\t[query],\n\t\t),\n\t);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/MessageList/hooks/useMessages.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/MessageList/hooks/useMessages.ts","inputSourceMap":{"version":3,"file":"client/views/room/MessageList/hooks/useMessages.ts","sourceRoot":"","sources":["client/views/room/MessageList/hooks/useMessages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAC7D,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAEzE,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAE7C,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAC;AAC/D,OAAO,EAAE,gBAAgB,EAAE,MAAM,oCAAoC,CAAC;AACtE,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,MAAM,oBAAoB,GAAG,CAC5B,YAAuC,EACvC,YAAuC,EACX,EAAE;IAC9B,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,YAAY,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,EAAE,GAAG,EAAyB,EAAc,EAAE;IACzE,MAAM,wBAAwB,GAAG,iBAAiB,CAAU,0BAA0B,EAAE,KAAK,CAAC,CAAC;IAC/F,MAAM,iBAAiB,GAAG,UAAU,CAAuB,sBAAsB,EAAE,EAAE,CAAC,CAAC;IACvF,MAAM,IAAI,GAAG,OAAO,EAAE,CAAC;IACvB,MAAM,cAAc,GAA8B,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;IAEhG,MAAM,eAAe,GAAG,cAAc,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC,CAAC;IAEhG,MAAM,KAAK,GAA6B,OAAO,CAC9C,GAAG,EAAE,CAAC,CAAC;QACN,GAAG;QACH,OAAO,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;QACtB,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,EAAE;QAC5B,GAAG,CAAC,CAAC,wBAAwB,IAAI;YAChC,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;SAC7D,CAAC;KACF,CAAC,EACF,CAAC,GAAG,EAAE,eAAe,EAAE,wBAAwB,CAAC,CAChD,CAAC;IAEF,OAAO,gBAAgB,CACtB,WAAW,CACV,GAAG,EAAE,CACJ,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE;QACvB,IAAI,EAAE;YACL,EAAE,EAAE,CAAC;SACL;KACD,CAAC,CAAC,KAAK,EAAE,EACX,CAAC,KAAK,CAAC,CACP,CACD,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { IRoom, IMessage, MessageTypesValues } from '@rocket.chat/core-typings';\nimport { useStableArray } from '@rocket.chat/fuselage-hooks';\nimport { useSetting, useUserPreference } from '@rocket.chat/ui-contexts';\nimport type { Mongo } from 'meteor/mongo';\nimport { useCallback, useMemo } from 'react';\n\nimport { ChatMessage } from '../../../../../app/models/client';\nimport { useReactiveValue } from '../../../../hooks/useReactiveValue';\nimport { useRoom } from '../../contexts/RoomContext';\n\nconst mergeHideSysMessages = (\n\tsysMesArray1: Array<MessageTypesValues>,\n\tsysMesArray2: Array<MessageTypesValues>,\n): Array<MessageTypesValues> => {\n\treturn Array.from(new Set([...sysMesArray1, ...sysMesArray2]));\n};\n\nexport const useMessages = ({ rid }: { rid: IRoom['_id'] }): IMessage[] => {\n\tconst showThreadsInMainChannel = useUserPreference<boolean>('showThreadsInMainChannel', false);\n\tconst hideSysMesSetting = useSetting<MessageTypesValues[]>('Hide_System_Messages', []);\n\tconst room = useRoom();\n\tconst hideRoomSysMes: Array<MessageTypesValues> = Array.isArray(room.sysMes) ? room.sysMes : [];\n\n\tconst hideSysMessages = useStableArray(mergeHideSysMessages(hideSysMesSetting, hideRoomSysMes));\n\n\tconst query: Mongo.Selector<IMessage> = useMemo(\n\t\t() => ({\n\t\t\trid,\n\t\t\t_hidden: { $ne: true },\n\t\t\tt: { $nin: hideSysMessages },\n\t\t\t...(!showThreadsInMainChannel && {\n\t\t\t\t$or: [{ tmid: { $exists: false } }, { tshow: { $eq: true } }],\n\t\t\t}),\n\t\t}),\n\t\t[rid, hideSysMessages, showThreadsInMainChannel],\n\t);\n\n\treturn useReactiveValue(\n\t\tuseCallback(\n\t\t\t() =>\n\t\t\t\tChatMessage.find(query, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tts: 1,\n\t\t\t\t\t},\n\t\t\t\t}).fetch(),\n\t\t\t[query],\n\t\t),\n\t);\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  useMessages: () => useMessages\n});\nlet useStableArray;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useStableArray(v) {\n    useStableArray = v;\n  }\n}, 0);\nlet useSetting, useUserPreference;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useSetting(v) {\n    useSetting = v;\n  },\n  useUserPreference(v) {\n    useUserPreference = v;\n  }\n}, 1);\nlet useCallback, useMemo;\nmodule.link(\"react\", {\n  useCallback(v) {\n    useCallback = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 2);\nlet ChatMessage;\nmodule.link(\"../../../../../app/models/client\", {\n  ChatMessage(v) {\n    ChatMessage = v;\n  }\n}, 3);\nlet useReactiveValue;\nmodule.link(\"../../../../hooks/useReactiveValue\", {\n  useReactiveValue(v) {\n    useReactiveValue = v;\n  }\n}, 4);\nlet useRoom;\nmodule.link(\"../../contexts/RoomContext\", {\n  useRoom(v) {\n    useRoom = v;\n  }\n}, 5);\nconst mergeHideSysMessages = (sysMesArray1, sysMesArray2) => {\n  return Array.from(new Set([...sysMesArray1, ...sysMesArray2]));\n};\nconst useMessages = _ref => {\n  let {\n    rid\n  } = _ref;\n  const showThreadsInMainChannel = useUserPreference('showThreadsInMainChannel', false);\n  const hideSysMesSetting = useSetting('Hide_System_Messages', []);\n  const room = useRoom();\n  const hideRoomSysMes = Array.isArray(room.sysMes) ? room.sysMes : [];\n  const hideSysMessages = useStableArray(mergeHideSysMessages(hideSysMesSetting, hideRoomSysMes));\n  const query = useMemo(() => _objectSpread({\n    rid,\n    _hidden: {\n      $ne: true\n    },\n    t: {\n      $nin: hideSysMessages\n    }\n  }, !showThreadsInMainChannel && {\n    $or: [{\n      tmid: {\n        $exists: false\n      }\n    }, {\n      tshow: {\n        $eq: true\n      }\n    }]\n  }), [rid, hideSysMessages, showThreadsInMainChannel]);\n  return useReactiveValue(useCallback(() => ChatMessage.find(query, {\n    sort: {\n      ts: 1\n    }\n  }).fetch(), [query]));\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","useMessages","useStableArray","useSetting","useUserPreference","useCallback","useMemo","ChatMessage","useReactiveValue","useRoom","mergeHideSysMessages","sysMesArray1","sysMesArray2","Array","from","Set","_ref","rid","showThreadsInMainChannel","hideSysMesSetting","room","hideRoomSysMes","isArray","sysMes","hideSysMessages","query","_hidden","$ne","t","$nin","$or","tmid","$exists","tshow","$eq","find","sort","ts","fetch"],"sources":["client/views/room/MessageList/hooks/useMessages.ts"],"sourcesContent":["import type { IRoom, IMessage, MessageTypesValues } from '@rocket.chat/core-typings';\nimport { useStableArray } from '@rocket.chat/fuselage-hooks';\nimport { useSetting, useUserPreference } from '@rocket.chat/ui-contexts';\nimport type { Mongo } from 'meteor/mongo';\nimport { useCallback, useMemo } from 'react';\n\nimport { ChatMessage } from '../../../../../app/models/client';\nimport { useReactiveValue } from '../../../../hooks/useReactiveValue';\nimport { useRoom } from '../../contexts/RoomContext';\n\nconst mergeHideSysMessages = (\n\tsysMesArray1: Array<MessageTypesValues>,\n\tsysMesArray2: Array<MessageTypesValues>,\n): Array<MessageTypesValues> => {\n\treturn Array.from(new Set([...sysMesArray1, ...sysMesArray2]));\n};\n\nexport const useMessages = ({ rid }: { rid: IRoom['_id'] }): IMessage[] => {\n\tconst showThreadsInMainChannel = useUserPreference<boolean>('showThreadsInMainChannel', false);\n\tconst hideSysMesSetting = useSetting<MessageTypesValues[]>('Hide_System_Messages', []);\n\tconst room = useRoom();\n\tconst hideRoomSysMes: Array<MessageTypesValues> = Array.isArray(room.sysMes) ? room.sysMes : [];\n\n\tconst hideSysMessages = useStableArray(mergeHideSysMessages(hideSysMesSetting, hideRoomSysMes));\n\n\tconst query: Mongo.Selector<IMessage> = useMemo(\n\t\t() => ({\n\t\t\trid,\n\t\t\t_hidden: { $ne: true },\n\t\t\tt: { $nin: hideSysMessages },\n\t\t\t...(!showThreadsInMainChannel && {\n\t\t\t\t$or: [{ tmid: { $exists: false } }, { tshow: { $eq: true } }],\n\t\t\t}),\n\t\t}),\n\t\t[rid, hideSysMessages, showThreadsInMainChannel],\n\t);\n\n\treturn useReactiveValue(\n\t\tuseCallback(\n\t\t\t() =>\n\t\t\t\tChatMessage.find(query, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tts: 1,\n\t\t\t\t\t},\n\t\t\t\t}).fetch(),\n\t\t\t[query],\n\t\t),\n\t);\n};\n"],"mappings":"AACA,IAAAA,aAAS;AAAAC,MAAc,CAAEC,IAAA,uCAAoC;EAAAC,QAAAC,CAAA;IAAAJ,aAAA,GAAAI,CAAA;EAAA;AAAA;AAA7DH,MAAA,CAAOI,MAAE;EAAAC,WAAgB,EAAAA,CAAA,KAAMA;AAAA;AAAA,IAAAC,cAA8B;AAAAN,MAAA,CAAAC,IAAA;EAAAK,eAAAH,CAAA;IAAAG,cAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAI,UAAA,EAAAC,iBAAA;AAAAR,MAAA,CAAAC,IAAA;EAAAM,WAAAJ,CAAA;IAAAI,UAAA,GAAAJ,CAAA;EAAA;EAAAK,kBAAAL,CAAA;IAAAK,iBAAA,GAAAL,CAAA;EAAA;AAAA;AAAA,IAAAM,WAAA,EAAAC,OAAA;AAAAV,MAAA,CAAAC,IAAA;EAAAQ,YAAAN,CAAA;IAAAM,WAAA,GAAAN,CAAA;EAAA;EAAAO,QAAAP,CAAA;IAAAO,OAAA,GAAAP,CAAA;EAAA;AAAA;AAAA,IAAAQ,WAAA;AAAAX,MAAA,CAAAC,IAAA;EAAAU,YAAAR,CAAA;IAAAQ,WAAA,GAAAR,CAAA;EAAA;AAAA;AAAA,IAAAS,gBAAA;AAAAZ,MAAA,CAAAC,IAAA;EAAAW,iBAAAT,CAAA;IAAAS,gBAAA,GAAAT,CAAA;EAAA;AAAA;AAAA,IAAAU,OAAA;AAAAb,MAAA,CAAAC,IAAA;EAAAY,QAAAV,CAAA;IAAAU,OAAA,GAAAV,CAAA;EAAA;AAAA;AAS7D,MAAMW,oBAAoB,GAAGA,CAC5BC,YAAuC,EACvCC,YAAuC,KACT;EAC9B,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAAC,CAAC,GAAGJ,YAAY,EAAE,GAAGC,YAAY,CAAC,CAAC,CAAC;AAC/D,CAAC;AAEM,MAAMX,WAAW,GAAGe,IAAA,IAA+C;EAAA,IAA9C;IAAEC;EAAG,CAAyB,GAAAD,IAAA;EACzD,MAAME,wBAAwB,GAAGd,iBAAiB,CAAU,0BAA0B,EAAE,KAAK,CAAC;EAC9F,MAAMe,iBAAiB,GAAGhB,UAAU,CAAuB,sBAAsB,EAAE,EAAE,CAAC;EACtF,MAAMiB,IAAI,GAAGX,OAAO,EAAE;EACtB,MAAMY,cAAc,GAA8BR,KAAK,CAACS,OAAO,CAACF,IAAI,CAACG,MAAM,CAAC,GAAGH,IAAI,CAACG,MAAM,GAAG,EAAE;EAE/F,MAAMC,eAAe,GAAGtB,cAAc,CAACQ,oBAAoB,CAACS,iBAAiB,EAAEE,cAAc,CAAC,CAAC;EAE/F,MAAMI,KAAK,GAA6BnB,OAAO,CAC9C,MAAAX,aAAA;IACCsB,GAAG;IACHS,OAAO,EAAE;MAAEC,GAAG,EAAE;IAAI,CAAE;IACtBC,CAAC,EAAE;MAAEC,IAAI,EAAEL;IAAe;EAAE,GACxB,CAACN,wBAAwB,IAAI;IAChCY,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE;QAAEC,OAAO,EAAE;MAAK;IAAE,CAAE,EAAE;MAAEC,KAAK,EAAE;QAAEC,GAAG,EAAE;MAAI;IAAE,CAAE;GAC5D,CACA,EACF,CAACjB,GAAG,EAAEO,eAAe,EAAEN,wBAAwB,CAAC,CAChD;EAED,OAAOV,gBAAgB,CACtBH,WAAW,CACV,MACCE,WAAW,CAAC4B,IAAI,CAACV,KAAK,EAAE;IACvBW,IAAI,EAAE;MACLC,EAAE,EAAE;;GAEL,CAAC,CAACC,KAAK,EAAE,EACX,CAACb,KAAK,CAAC,CACP,CACD;AACF,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"52380d4fa05ab909d5a55008d6134037777ed7a1"}
