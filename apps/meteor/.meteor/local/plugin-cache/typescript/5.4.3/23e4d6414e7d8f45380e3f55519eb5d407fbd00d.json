{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveBadWords.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/messages/hooks/BeforeSaveBadWords.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveBadWords.ts","inputSourceMap":{"version":3,"file":"server/services/messages/hooks/BeforeSaveBadWords.ts","sourceRoot":"","sources":["server/services/messages/hooks/BeforeSaveBadWords.ts"],"names":[],"mappings":"AAGA,MAAM,OAAO,kBAAkB;IAC9B,QAAQ,GAA0B,IAAI,CAAC;IAEvC,KAAK,CAAC,SAAS,CAAC,YAAqB,EAAE,aAAsB;QAC5D,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC;QAEtD,MAAM,OAAO,GAAG;YACf,IAAI,EACH,YAAY;gBACX,EAAE,KAAK,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;iBAC1B,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE;YACxB,wDAAwD;YACxD,OAAO,EAAE,SAAS;YAClB,UAAU,EAAE,SAAS;YACrB,WAAW,EAAE,SAAS;YACtB,KAAK,EAAE,SAAS;YAChB,YAAY,EAAE,SAAS;YACvB,SAAS,EAAE,SAAS;SACpB,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;QAEpC,IAAI,aAAa,EAAE,MAAM,EAAE,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACnF,CAAC;IACF,CAAC;IAED,OAAO;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,EAAE,OAAO,EAAyB;QACtD,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpC,OAAO,OAAO,CAAC;QAChB,CAAC;QAED,IAAI,CAAC;YACJ,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,SAAS;QACV,CAAC;QAED,OAAO,OAAO,CAAC;IAChB,CAAC;CACD","sourcesContent":["import { type IMessage } from '@rocket.chat/core-typings';\nimport type BadWordsFilter from 'bad-words';\n\nexport class BeforeSaveBadWords {\n\tbadWords: BadWordsFilter | null = null;\n\n\tasync configure(badWordsList?: string, goodWordsList?: string) {\n\t\tconst { default: Filter } = await import('bad-words');\n\n\t\tconst options = {\n\t\t\tlist:\n\t\t\t\tbadWordsList\n\t\t\t\t\t?.split(',')\n\t\t\t\t\t.map((word) => word.trim())\n\t\t\t\t\t.filter(Boolean) || [],\n\t\t\t// library definition does not allow optional definition\n\t\t\texclude: undefined,\n\t\t\tsplitRegex: undefined,\n\t\t\tplaceHolder: undefined,\n\t\t\tregex: undefined,\n\t\t\treplaceRegex: undefined,\n\t\t\temptyList: undefined,\n\t\t};\n\n\t\tthis.badWords = new Filter(options);\n\n\t\tif (goodWordsList?.length) {\n\t\t\tthis.badWords.removeWords(...goodWordsList.split(',').map((word) => word.trim()));\n\t\t}\n\t}\n\n\tdisable() {\n\t\tthis.badWords = null;\n\t}\n\n\tasync filterBadWords({ message }: { message: IMessage }): Promise<IMessage> {\n\t\tif (!message.msg || !this.badWords) {\n\t\t\treturn message;\n\t\t}\n\n\t\ttry {\n\t\t\tmessage.msg = this.badWords.clean(message.msg);\n\t\t} catch (error) {\n\t\t\t// ignore\n\t\t}\n\n\t\treturn message;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveBadWords.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/messages/hooks/BeforeSaveBadWords.ts","inputSourceMap":{"version":3,"file":"server/services/messages/hooks/BeforeSaveBadWords.ts","sourceRoot":"","sources":["server/services/messages/hooks/BeforeSaveBadWords.ts"],"names":[],"mappings":"AAGA,MAAM,OAAO,kBAAkB;IAC9B,QAAQ,GAA0B,IAAI,CAAC;IAEvC,KAAK,CAAC,SAAS,CAAC,YAAqB,EAAE,aAAsB;QAC5D,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC;QAEtD,MAAM,OAAO,GAAG;YACf,IAAI,EACH,YAAY;gBACX,EAAE,KAAK,CAAC,GAAG,CAAC;iBACX,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;iBAC1B,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE;YACxB,wDAAwD;YACxD,OAAO,EAAE,SAAS;YAClB,UAAU,EAAE,SAAS;YACrB,WAAW,EAAE,SAAS;YACtB,KAAK,EAAE,SAAS;YAChB,YAAY,EAAE,SAAS;YACvB,SAAS,EAAE,SAAS;SACpB,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;QAEpC,IAAI,aAAa,EAAE,MAAM,EAAE,CAAC;YAC3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACnF,CAAC;IACF,CAAC;IAED,OAAO;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,EAAE,OAAO,EAAyB;QACtD,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpC,OAAO,OAAO,CAAC;QAChB,CAAC;QAED,IAAI,CAAC;YACJ,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,SAAS;QACV,CAAC;QAED,OAAO,OAAO,CAAC;IAChB,CAAC;CACD","sourcesContent":["import { type IMessage } from '@rocket.chat/core-typings';\nimport type BadWordsFilter from 'bad-words';\n\nexport class BeforeSaveBadWords {\n\tbadWords: BadWordsFilter | null = null;\n\n\tasync configure(badWordsList?: string, goodWordsList?: string) {\n\t\tconst { default: Filter } = await import('bad-words');\n\n\t\tconst options = {\n\t\t\tlist:\n\t\t\t\tbadWordsList\n\t\t\t\t\t?.split(',')\n\t\t\t\t\t.map((word) => word.trim())\n\t\t\t\t\t.filter(Boolean) || [],\n\t\t\t// library definition does not allow optional definition\n\t\t\texclude: undefined,\n\t\t\tsplitRegex: undefined,\n\t\t\tplaceHolder: undefined,\n\t\t\tregex: undefined,\n\t\t\treplaceRegex: undefined,\n\t\t\temptyList: undefined,\n\t\t};\n\n\t\tthis.badWords = new Filter(options);\n\n\t\tif (goodWordsList?.length) {\n\t\t\tthis.badWords.removeWords(...goodWordsList.split(',').map((word) => word.trim()));\n\t\t}\n\t}\n\n\tdisable() {\n\t\tthis.badWords = null;\n\t}\n\n\tasync filterBadWords({ message }: { message: IMessage }): Promise<IMessage> {\n\t\tif (!message.msg || !this.badWords) {\n\t\t\treturn message;\n\t\t}\n\n\t\ttry {\n\t\t\tmessage.msg = this.badWords.clean(message.msg);\n\t\t} catch (error) {\n\t\t\t// ignore\n\t\t}\n\n\t\treturn message;\n\t}\n}\n"]}}},"code":"module.export({\n  BeforeSaveBadWords: () => BeforeSaveBadWords\n});\nclass BeforeSaveBadWords {\n  constructor() {\n    this.badWords = null;\n  }\n  async configure(badWordsList, goodWordsList) {\n    const {\n      default: Filter\n    } = await module.dynamicImport('bad-words');\n    const options = {\n      list: (badWordsList === null || badWordsList === void 0 ? void 0 : badWordsList.split(',').map(word => word.trim()).filter(Boolean)) || [],\n      // library definition does not allow optional definition\n      exclude: undefined,\n      splitRegex: undefined,\n      placeHolder: undefined,\n      regex: undefined,\n      replaceRegex: undefined,\n      emptyList: undefined\n    };\n    this.badWords = new Filter(options);\n    if (goodWordsList !== null && goodWordsList !== void 0 && goodWordsList.length) {\n      this.badWords.removeWords(...goodWordsList.split(',').map(word => word.trim()));\n    }\n  }\n  disable() {\n    this.badWords = null;\n  }\n  async filterBadWords(_ref) {\n    let {\n      message\n    } = _ref;\n    if (!message.msg || !this.badWords) {\n      return message;\n    }\n    try {\n      message.msg = this.badWords.clean(message.msg);\n    } catch (error) {\n      // ignore\n    }\n    return message;\n  }\n}","map":{"version":3,"names":["module","export","BeforeSaveBadWords","constructor","badWords","configure","badWordsList","goodWordsList","default","Filter","dynamicImport","options","list","split","map","word","trim","filter","Boolean","exclude","undefined","splitRegex","placeHolder","regex","replaceRegex","emptyList","length","removeWords","disable","filterBadWords","_ref","message","msg","clean","error"],"sources":["server/services/messages/hooks/BeforeSaveBadWords.ts"],"sourcesContent":["import { type IMessage } from '@rocket.chat/core-typings';\nimport type BadWordsFilter from 'bad-words';\n\nexport class BeforeSaveBadWords {\n\tbadWords: BadWordsFilter | null = null;\n\n\tasync configure(badWordsList?: string, goodWordsList?: string) {\n\t\tconst { default: Filter } = await import('bad-words');\n\n\t\tconst options = {\n\t\t\tlist:\n\t\t\t\tbadWordsList\n\t\t\t\t\t?.split(',')\n\t\t\t\t\t.map((word) => word.trim())\n\t\t\t\t\t.filter(Boolean) || [],\n\t\t\t// library definition does not allow optional definition\n\t\t\texclude: undefined,\n\t\t\tsplitRegex: undefined,\n\t\t\tplaceHolder: undefined,\n\t\t\tregex: undefined,\n\t\t\treplaceRegex: undefined,\n\t\t\temptyList: undefined,\n\t\t};\n\n\t\tthis.badWords = new Filter(options);\n\n\t\tif (goodWordsList?.length) {\n\t\t\tthis.badWords.removeWords(...goodWordsList.split(',').map((word) => word.trim()));\n\t\t}\n\t}\n\n\tdisable() {\n\t\tthis.badWords = null;\n\t}\n\n\tasync filterBadWords({ message }: { message: IMessage }): Promise<IMessage> {\n\t\tif (!message.msg || !this.badWords) {\n\t\t\treturn message;\n\t\t}\n\n\t\ttry {\n\t\t\tmessage.msg = this.badWords.clean(message.msg);\n\t\t} catch (error) {\n\t\t\t// ignore\n\t\t}\n\n\t\treturn message;\n\t}\n}\n"],"mappings":"AAGAA,MAAM,CAAAC,MAAO;EAAAC,kBAAkB,EAAAA,CAAA,KAAAA;AAAA;AAAzB,MAAOA,kBAAkB;EAAAC,YAAA;IAAA,KAC9BC,QAAQ,GAA0B,IAAI;EAAA;EAEtC,MAAMC,SAASA,CAACC,YAAqB,EAAEC,aAAsB;IAC5D,MAAM;MAAEC,OAAO,EAAEC;IAAM,CAAE,GAAG,MAAMT,MAAA,CAAAU,aAAA,CAAO,WAAW,CAAC;IAErD,MAAMC,OAAO,GAAG;MACfC,IAAI,EACH,CAAAN,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CACTO,KAAK,CAAC,GAAG,CAAC,CACXC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAAC,CAC1BC,MAAM,CAACC,OAAO,CAAC,KAAI,EAAE;MACxB;MACAC,OAAO,EAAEC,SAAS;MAClBC,UAAU,EAAED,SAAS;MACrBE,WAAW,EAAEF,SAAS;MACtBG,KAAK,EAAEH,SAAS;MAChBI,YAAY,EAAEJ,SAAS;MACvBK,SAAS,EAAEL;KACX;IAED,IAAI,CAAChB,QAAQ,GAAG,IAAIK,MAAM,CAACE,OAAO,CAAC;IAEnC,IAAIJ,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAEmB,MAAM,EAAE;MAC1B,IAAI,CAACtB,QAAQ,CAACuB,WAAW,CAAC,GAAGpB,aAAa,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAAC,CAAC;IAClF;EACD;EAEAY,OAAOA,CAAA;IACN,IAAI,CAACxB,QAAQ,GAAG,IAAI;EACrB;EAEA,MAAMyB,cAAcA,CAAAC,IAAA,EAAmC;IAAA,IAAlC;MAAEC;IAAO,CAAyB,GAAAD,IAAA;IACtD,IAAI,CAACC,OAAO,CAACC,GAAG,IAAI,CAAC,IAAI,CAAC5B,QAAQ,EAAE;MACnC,OAAO2B,OAAO;IACf;IAEA,IAAI;MACHA,OAAO,CAACC,GAAG,GAAG,IAAI,CAAC5B,QAAQ,CAAC6B,KAAK,CAACF,OAAO,CAACC,GAAG,CAAC;IAC/C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACf;IAAA;IAGD,OAAOH,OAAO;EACf","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"23e4d6414e7d8f45380e3f55519eb5d407fbd00d"}
