{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/lib/audit/methods.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/lib/audit/methods.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/lib/audit/methods.ts","inputSourceMap":{"version":3,"file":"ee/server/lib/audit/methods.ts","sourceRoot":"","sources":["ee/server/lib/audit/methods.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AACtF,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AACzD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,8DAA8D,CAAC;AAClG,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,IAAI,EAAE,MAAM,6BAA6B,CAAC;AAEnD,MAAM,QAAQ,GAAG,CAAC,IAAkB,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;AAEvF,MAAM,sBAAsB,GAAG,KAAK,EAAE,SAA8B,EAAE,EAAE;IACvE,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;IAExG,OAAO,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC5D,CAAC,CAAC;AAEF,MAAM,wBAAwB,GAAG,KAAK,EAAE,EACvC,IAAI,EACJ,MAAM,EAAE,GAAG,EACX,KAAK,EAAE,SAAS,EAChB,OAAO,EACP,KAAK,GAOL,EAAE,EAAE;IACJ,IAAI,GAAG,EAAE,CAAC;QACT,OAAO,QAAQ,CAAC,MAAM,KAAK,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;QAClB,OAAO,QAAQ,CAAC,MAAM,KAAK,CAAC,oCAAoC,CAAC,SAAS,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;QAClB,OAAO,CAAC,IAAI,CAAC,8EAA8E,CAAC,CAAC;QAC7F,MAAM,UAAU,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,gCAAgC,EAAE,EAAE,CAAC,CAAC;QAC7E,MAAM,KAAK,GAAY,MAAM,aAAa,CAAC,yBAAyB,CACnE,OAAO,EACP,KAAK,EACL;YACC,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;SACtB,EACD,UAAU,CACV,CAAC,OAAO,EAAE,CAAC;QACZ,OAAO,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;IACvG,CAAC;AACF,CAAC,CAAC;AA4BF,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,2BAA2B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;QACpG,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACvB,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAErB,MAAM,IAAI,GAAG,CAAC,MAAM,MAAM,CAAC,SAAS,EAAE,CAAU,CAAC;QACjD,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC;YACjE,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACvC,CAAC;QAED,MAAM,UAAU,GAAG;YAClB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;YACrC,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;SACvD,CAAC;QAEF,MAAM,KAAK,GAAY,MAAM,aAAa,CAAC,yBAAyB,CAAC,OAAO,EAAE,KAAK,EAAE;YACpF,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;SACtB,CAAC,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,GAAG,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACrE,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;QAEnC,MAAM,KAAK,GAAqB;YAC/B,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;YAClB,EAAE,EAAE;gBACH,GAAG,EAAE,SAAS;gBACd,GAAG,EAAE,OAAO;aACZ;SACD,CAAC;QAEF,IAAI,GAAG,EAAE,CAAC;YACT,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC;YACxD,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QACnB,CAAC;QACD,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;QAEtD,0HAA0H;QAE1H,MAAM,QAAQ,CAAC,SAAS,CAAC;YACxB,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,OAAO,EAAE,QAAQ,CAAC,MAAM;YACxB,CAAC,EAAE,UAAU;YACb,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;SAC7F,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;IACjB,CAAC;IACD,KAAK,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;QAC9F,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACvB,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAErB,MAAM,IAAI,GAAG,CAAC,MAAM,MAAM,CAAC,SAAS,EAAE,CAAU,CAAC;QACjD,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC;YACjE,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACvC,CAAC;QAED,MAAM,UAAU,GAAG;YAClB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;YACrC,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;SACvD,CAAC;QAEF,IAAI,IAAI,CAAC;QACT,IAAI,IAAI,CAAC;QAET,MAAM,KAAK,GAAqB;YAC/B,EAAE,EAAE;gBACH,GAAG,EAAE,SAAS;gBACd,GAAG,EAAE,OAAO;aACZ;SACD,CAAC;QAEF,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;YAClB,MAAM,OAAO,GAAG,MAAM,sBAAsB,CAAC,SAAS,CAAC,CAAC;YACxD,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC;QACnC,CAAC;aAAM,CAAC;YACP,MAAM,QAAQ,GAAG,MAAM,wBAAwB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;YACzG,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACf,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;YAC9C,CAAC;YAED,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YACrB,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YACrB,KAAK,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAC3B,CAAC;QAED,IAAI,GAAG,EAAE,CAAC;YACT,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC;YACxD,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QACnB,CAAC;QAED,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;QAEtD,0HAA0H;QAE1H,MAAM,QAAQ,CAAC,SAAS,CAAC;YACxB,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,OAAO,EAAE,QAAQ,CAAC,MAAM;YACxB,CAAC,EAAE,UAAU;YACb,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;SAC7F,CAAC,CAAC;QAEH,aAAa,CAAC,EAAE,UAAU,EAAE,mCAAmC,EAAE,CAAC,CAAC;QAEnE,OAAO,QAAQ,CAAC;IACjB,CAAC;IACD,KAAK,CAAC,iBAAiB,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE;QAC7C,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACvB,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACrB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC,EAAE,CAAC;YAC/D,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACvC,CAAC;QACD,OAAO,QAAQ,CAAC,IAAI,CACnB;YACC,mBAAmB;YACnB,EAAE,EAAE;gBACH,GAAG,EAAE,SAAS;gBACd,GAAG,EAAE,OAAO;aACZ;SACD,EACD;YACC,UAAU,EAAE;gBACX,YAAY,EAAE,CAAC;gBACf,SAAS,EAAE,CAAC;gBACZ,aAAa,EAAE,CAAC;gBAChB,oBAAoB,EAAE,CAAC;gBACvB,UAAU,EAAE,CAAC;aACb;SACD,CACD,CAAC,OAAO,EAAE,CAAC;IACb,CAAC;CACD,CAAC,CAAC;AAEH,cAAc,CAAC,OAAO,CACrB;IACC,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,mBAAmB;IACzB,MAAM,EAAC,WAAW;QACjB,OAAO,IAAI,CAAC;IACb,CAAC;CACD,EACD,EAAE,EACF,KAAK,CACL,CAAC;AAEF,cAAc,CAAC,OAAO,CACrB;IACC,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,kBAAkB;IACxB,MAAM,EAAC,WAAW;QACjB,OAAO,IAAI,CAAC;IACb,CAAC;CACD,EACD,EAAE,EACF,KAAK,CACL,CAAC","sourcesContent":["import type { ILivechatAgent, ILivechatVisitor, IMessage, IRoom, IUser, IAuditLog } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { LivechatRooms, Messages, Rooms, Users, AuditLog } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { check } from 'meteor/check';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter } from 'mongodb';\n\nimport { hasPermissionAsync } from '../../../../app/authorization/server/functions/hasPermission';\nimport { updateCounter } from '../../../../app/statistics/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { i18n } from '../../../../server/lib/i18n';\n\nconst getValue = (room: IRoom | null) => room && { rids: [room._id], name: room.name };\n\nconst getUsersIdFromUserName = async (usernames: IUser['username'][]) => {\n\tconst users = usernames ? await Users.findByUsernames(usernames.filter(isTruthy)).toArray() : undefined;\n\n\treturn users?.filter(isTruthy).map((userId) => userId._id);\n};\n\nconst getRoomInfoByAuditParams = async ({\n\ttype,\n\troomId: rid,\n\tusers: usernames,\n\tvisitor,\n\tagent,\n}: {\n\ttype: string;\n\troomId: IRoom['_id'];\n\tusers: NonNullable<IUser['username']>[];\n\tvisitor: ILivechatVisitor['_id'];\n\tagent: ILivechatAgent['_id'];\n}) => {\n\tif (rid) {\n\t\treturn getValue(await Rooms.findOne({ _id: rid }));\n\t}\n\n\tif (type === 'd') {\n\t\treturn getValue(await Rooms.findDirectRoomContainingAllUsernames(usernames));\n\t}\n\n\tif (type === 'l') {\n\t\tconsole.warn('Deprecation Warning! This method will be removed in the next version (4.0.0)');\n\t\tconst extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n\t\tconst rooms: IRoom[] = await LivechatRooms.findByVisitorIdAndAgentId(\n\t\t\tvisitor,\n\t\t\tagent,\n\t\t\t{\n\t\t\t\tprojection: { _id: 1 },\n\t\t\t},\n\t\t\textraQuery,\n\t\t).toArray();\n\t\treturn rooms?.length ? { rids: rooms.map(({ _id }) => _id), name: i18n.t('Omnichannel') } : undefined;\n\t}\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tauditGetAuditions: (params: { startDate: Date; endDate: Date }) => IAuditLog[];\n\t\tauditGetMessages: (params: {\n\t\t\trid: IRoom['_id'];\n\t\t\tstartDate: Date;\n\t\t\tendDate: Date;\n\t\t\tusers: NonNullable<IUser['username']>[];\n\t\t\tmsg: IMessage['msg'];\n\t\t\ttype: string;\n\t\t\tvisitor: ILivechatVisitor['_id'];\n\t\t\tagent: ILivechatAgent['_id'];\n\t\t}) => IMessage[];\n\t\tauditGetOmnichannelMessages: (params: {\n\t\t\tstartDate: Date;\n\t\t\tendDate: Date;\n\t\t\tusers: NonNullable<IUser['username']>[];\n\t\t\tmsg: IMessage['msg'];\n\t\t\ttype: string;\n\t\t\tvisitor?: ILivechatVisitor['_id'];\n\t\t\tagent?: ILivechatAgent['_id'];\n\t\t}) => IMessage[];\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync auditGetOmnichannelMessages({ startDate, endDate, users: usernames, msg, type, visitor, agent }) {\n\t\tcheck(startDate, Date);\n\t\tcheck(endDate, Date);\n\n\t\tconst user = (await Meteor.userAsync()) as IUser;\n\t\tif (!user || !(await hasPermissionAsync(user._id, 'can-audit'))) {\n\t\t\tthrow new Meteor.Error('Not allowed');\n\t\t}\n\n\t\tconst userFields = {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t\t...(user.name && { name: user.name }),\n\t\t\t...(user.avatarETag && { avatarETag: user.avatarETag }),\n\t\t};\n\n\t\tconst rooms: IRoom[] = await LivechatRooms.findByVisitorIdAndAgentId(visitor, agent, {\n\t\t\tprojection: { _id: 1 },\n\t\t}).toArray();\n\t\tconst rids = rooms?.length ? rooms.map(({ _id }) => _id) : undefined;\n\t\tconst name = i18n.t('Omnichannel');\n\n\t\tconst query: Filter<IMessage> = {\n\t\t\trid: { $in: rids },\n\t\t\tts: {\n\t\t\t\t$gt: startDate,\n\t\t\t\t$lt: endDate,\n\t\t\t},\n\t\t};\n\n\t\tif (msg) {\n\t\t\tconst regex = new RegExp(escapeRegExp(msg).trim(), 'i');\n\t\t\tquery.msg = regex;\n\t\t}\n\t\tconst messages = await Messages.find(query).toArray();\n\n\t\t// Once the filter is applied, messages will be shown and a log containing all filters will be saved for further auditing.\n\n\t\tawait AuditLog.insertOne({\n\t\t\tts: new Date(),\n\t\t\tresults: messages.length,\n\t\t\tu: userFields,\n\t\t\tfields: { msg, users: usernames, rids, room: name, startDate, endDate, type, visitor, agent },\n\t\t});\n\n\t\treturn messages;\n\t},\n\tasync auditGetMessages({ rid, startDate, endDate, users: usernames, msg, type, visitor, agent }) {\n\t\tcheck(startDate, Date);\n\t\tcheck(endDate, Date);\n\n\t\tconst user = (await Meteor.userAsync()) as IUser;\n\t\tif (!user || !(await hasPermissionAsync(user._id, 'can-audit'))) {\n\t\t\tthrow new Meteor.Error('Not allowed');\n\t\t}\n\n\t\tconst userFields = {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t\t...(user.name && { name: user.name }),\n\t\t\t...(user.avatarETag && { avatarETag: user.avatarETag }),\n\t\t};\n\n\t\tlet rids;\n\t\tlet name;\n\n\t\tconst query: Filter<IMessage> = {\n\t\t\tts: {\n\t\t\t\t$gt: startDate,\n\t\t\t\t$lt: endDate,\n\t\t\t},\n\t\t};\n\n\t\tif (type === 'u') {\n\t\t\tconst usersId = await getUsersIdFromUserName(usernames);\n\t\t\tquery['u._id'] = { $in: usersId };\n\t\t} else {\n\t\t\tconst roomInfo = await getRoomInfoByAuditParams({ type, roomId: rid, users: usernames, visitor, agent });\n\t\t\tif (!roomInfo) {\n\t\t\t\tthrow new Meteor.Error('Room doesn`t exist');\n\t\t\t}\n\n\t\t\trids = roomInfo.rids;\n\t\t\tname = roomInfo.name;\n\t\t\tquery.rid = { $in: rids };\n\t\t}\n\n\t\tif (msg) {\n\t\t\tconst regex = new RegExp(escapeRegExp(msg).trim(), 'i');\n\t\t\tquery.msg = regex;\n\t\t}\n\n\t\tconst messages = await Messages.find(query).toArray();\n\n\t\t// Once the filter is applied, messages will be shown and a log containing all filters will be saved for further auditing.\n\n\t\tawait AuditLog.insertOne({\n\t\t\tts: new Date(),\n\t\t\tresults: messages.length,\n\t\t\tu: userFields,\n\t\t\tfields: { msg, users: usernames, rids, room: name, startDate, endDate, type, visitor, agent },\n\t\t});\n\n\t\tupdateCounter({ settingsId: 'Message_Auditing_Panel_Load_Count' });\n\n\t\treturn messages;\n\t},\n\tasync auditGetAuditions({ startDate, endDate }) {\n\t\tcheck(startDate, Date);\n\t\tcheck(endDate, Date);\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid || !(await hasPermissionAsync(uid, 'can-audit-log'))) {\n\t\t\tthrow new Meteor.Error('Not allowed');\n\t\t}\n\t\treturn AuditLog.find(\n\t\t\t{\n\t\t\t\t// 'u._id': userId,\n\t\t\t\tts: {\n\t\t\t\t\t$gt: startDate,\n\t\t\t\t\t$lt: endDate,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tprojection: {\n\t\t\t\t\t'u.services': 0,\n\t\t\t\t\t'u.roles': 0,\n\t\t\t\t\t'u.lastLogin': 0,\n\t\t\t\t\t'u.statusConnection': 0,\n\t\t\t\t\t'u.emails': 0,\n\t\t\t\t},\n\t\t\t},\n\t\t).toArray();\n\t},\n});\n\nDDPRateLimiter.addRule(\n\t{\n\t\ttype: 'method',\n\t\tname: 'auditGetAuditions',\n\t\tuserId(/* userId*/) {\n\t\t\treturn true;\n\t\t},\n\t},\n\t10,\n\t60000,\n);\n\nDDPRateLimiter.addRule(\n\t{\n\t\ttype: 'method',\n\t\tname: 'auditGetMessages',\n\t\tuserId(/* userId*/) {\n\t\t\treturn true;\n\t\t},\n\t},\n\t10,\n\t60000,\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/lib/audit/methods.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/lib/audit/methods.ts","inputSourceMap":{"version":3,"file":"ee/server/lib/audit/methods.ts","sourceRoot":"","sources":["ee/server/lib/audit/methods.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AACtF,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AACzD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,8DAA8D,CAAC;AAClG,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,IAAI,EAAE,MAAM,6BAA6B,CAAC;AAEnD,MAAM,QAAQ,GAAG,CAAC,IAAkB,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;AAEvF,MAAM,sBAAsB,GAAG,KAAK,EAAE,SAA8B,EAAE,EAAE;IACvE,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;IAExG,OAAO,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC5D,CAAC,CAAC;AAEF,MAAM,wBAAwB,GAAG,KAAK,EAAE,EACvC,IAAI,EACJ,MAAM,EAAE,GAAG,EACX,KAAK,EAAE,SAAS,EAChB,OAAO,EACP,KAAK,GAOL,EAAE,EAAE;IACJ,IAAI,GAAG,EAAE,CAAC;QACT,OAAO,QAAQ,CAAC,MAAM,KAAK,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;QAClB,OAAO,QAAQ,CAAC,MAAM,KAAK,CAAC,oCAAoC,CAAC,SAAS,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;QAClB,OAAO,CAAC,IAAI,CAAC,8EAA8E,CAAC,CAAC;QAC7F,MAAM,UAAU,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,gCAAgC,EAAE,EAAE,CAAC,CAAC;QAC7E,MAAM,KAAK,GAAY,MAAM,aAAa,CAAC,yBAAyB,CACnE,OAAO,EACP,KAAK,EACL;YACC,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;SACtB,EACD,UAAU,CACV,CAAC,OAAO,EAAE,CAAC;QACZ,OAAO,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;IACvG,CAAC;AACF,CAAC,CAAC;AA4BF,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,2BAA2B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;QACpG,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACvB,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAErB,MAAM,IAAI,GAAG,CAAC,MAAM,MAAM,CAAC,SAAS,EAAE,CAAU,CAAC;QACjD,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC;YACjE,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACvC,CAAC;QAED,MAAM,UAAU,GAAG;YAClB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;YACrC,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;SACvD,CAAC;QAEF,MAAM,KAAK,GAAY,MAAM,aAAa,CAAC,yBAAyB,CAAC,OAAO,EAAE,KAAK,EAAE;YACpF,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;SACtB,CAAC,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,GAAG,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACrE,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;QAEnC,MAAM,KAAK,GAAqB;YAC/B,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;YAClB,EAAE,EAAE;gBACH,GAAG,EAAE,SAAS;gBACd,GAAG,EAAE,OAAO;aACZ;SACD,CAAC;QAEF,IAAI,GAAG,EAAE,CAAC;YACT,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC;YACxD,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QACnB,CAAC;QACD,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;QAEtD,0HAA0H;QAE1H,MAAM,QAAQ,CAAC,SAAS,CAAC;YACxB,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,OAAO,EAAE,QAAQ,CAAC,MAAM;YACxB,CAAC,EAAE,UAAU;YACb,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;SAC7F,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;IACjB,CAAC;IACD,KAAK,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;QAC9F,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACvB,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAErB,MAAM,IAAI,GAAG,CAAC,MAAM,MAAM,CAAC,SAAS,EAAE,CAAU,CAAC;QACjD,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC;YACjE,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACvC,CAAC;QAED,MAAM,UAAU,GAAG;YAClB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;YACrC,GAAG,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;SACvD,CAAC;QAEF,IAAI,IAAI,CAAC;QACT,IAAI,IAAI,CAAC;QAET,MAAM,KAAK,GAAqB;YAC/B,EAAE,EAAE;gBACH,GAAG,EAAE,SAAS;gBACd,GAAG,EAAE,OAAO;aACZ;SACD,CAAC;QAEF,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;YAClB,MAAM,OAAO,GAAG,MAAM,sBAAsB,CAAC,SAAS,CAAC,CAAC;YACxD,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC;QACnC,CAAC;aAAM,CAAC;YACP,MAAM,QAAQ,GAAG,MAAM,wBAAwB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;YACzG,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACf,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;YAC9C,CAAC;YAED,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YACrB,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YACrB,KAAK,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAC3B,CAAC;QAED,IAAI,GAAG,EAAE,CAAC;YACT,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC;YACxD,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QACnB,CAAC;QAED,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;QAEtD,0HAA0H;QAE1H,MAAM,QAAQ,CAAC,SAAS,CAAC;YACxB,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,OAAO,EAAE,QAAQ,CAAC,MAAM;YACxB,CAAC,EAAE,UAAU;YACb,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;SAC7F,CAAC,CAAC;QAEH,aAAa,CAAC,EAAE,UAAU,EAAE,mCAAmC,EAAE,CAAC,CAAC;QAEnE,OAAO,QAAQ,CAAC;IACjB,CAAC;IACD,KAAK,CAAC,iBAAiB,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE;QAC7C,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACvB,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACrB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC,EAAE,CAAC;YAC/D,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACvC,CAAC;QACD,OAAO,QAAQ,CAAC,IAAI,CACnB;YACC,mBAAmB;YACnB,EAAE,EAAE;gBACH,GAAG,EAAE,SAAS;gBACd,GAAG,EAAE,OAAO;aACZ;SACD,EACD;YACC,UAAU,EAAE;gBACX,YAAY,EAAE,CAAC;gBACf,SAAS,EAAE,CAAC;gBACZ,aAAa,EAAE,CAAC;gBAChB,oBAAoB,EAAE,CAAC;gBACvB,UAAU,EAAE,CAAC;aACb;SACD,CACD,CAAC,OAAO,EAAE,CAAC;IACb,CAAC;CACD,CAAC,CAAC;AAEH,cAAc,CAAC,OAAO,CACrB;IACC,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,mBAAmB;IACzB,MAAM,EAAC,WAAW;QACjB,OAAO,IAAI,CAAC;IACb,CAAC;CACD,EACD,EAAE,EACF,KAAK,CACL,CAAC;AAEF,cAAc,CAAC,OAAO,CACrB;IACC,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,kBAAkB;IACxB,MAAM,EAAC,WAAW;QACjB,OAAO,IAAI,CAAC;IACb,CAAC;CACD,EACD,EAAE,EACF,KAAK,CACL,CAAC","sourcesContent":["import type { ILivechatAgent, ILivechatVisitor, IMessage, IRoom, IUser, IAuditLog } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { LivechatRooms, Messages, Rooms, Users, AuditLog } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { check } from 'meteor/check';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter } from 'mongodb';\n\nimport { hasPermissionAsync } from '../../../../app/authorization/server/functions/hasPermission';\nimport { updateCounter } from '../../../../app/statistics/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { i18n } from '../../../../server/lib/i18n';\n\nconst getValue = (room: IRoom | null) => room && { rids: [room._id], name: room.name };\n\nconst getUsersIdFromUserName = async (usernames: IUser['username'][]) => {\n\tconst users = usernames ? await Users.findByUsernames(usernames.filter(isTruthy)).toArray() : undefined;\n\n\treturn users?.filter(isTruthy).map((userId) => userId._id);\n};\n\nconst getRoomInfoByAuditParams = async ({\n\ttype,\n\troomId: rid,\n\tusers: usernames,\n\tvisitor,\n\tagent,\n}: {\n\ttype: string;\n\troomId: IRoom['_id'];\n\tusers: NonNullable<IUser['username']>[];\n\tvisitor: ILivechatVisitor['_id'];\n\tagent: ILivechatAgent['_id'];\n}) => {\n\tif (rid) {\n\t\treturn getValue(await Rooms.findOne({ _id: rid }));\n\t}\n\n\tif (type === 'd') {\n\t\treturn getValue(await Rooms.findDirectRoomContainingAllUsernames(usernames));\n\t}\n\n\tif (type === 'l') {\n\t\tconsole.warn('Deprecation Warning! This method will be removed in the next version (4.0.0)');\n\t\tconst extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n\t\tconst rooms: IRoom[] = await LivechatRooms.findByVisitorIdAndAgentId(\n\t\t\tvisitor,\n\t\t\tagent,\n\t\t\t{\n\t\t\t\tprojection: { _id: 1 },\n\t\t\t},\n\t\t\textraQuery,\n\t\t).toArray();\n\t\treturn rooms?.length ? { rids: rooms.map(({ _id }) => _id), name: i18n.t('Omnichannel') } : undefined;\n\t}\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tauditGetAuditions: (params: { startDate: Date; endDate: Date }) => IAuditLog[];\n\t\tauditGetMessages: (params: {\n\t\t\trid: IRoom['_id'];\n\t\t\tstartDate: Date;\n\t\t\tendDate: Date;\n\t\t\tusers: NonNullable<IUser['username']>[];\n\t\t\tmsg: IMessage['msg'];\n\t\t\ttype: string;\n\t\t\tvisitor: ILivechatVisitor['_id'];\n\t\t\tagent: ILivechatAgent['_id'];\n\t\t}) => IMessage[];\n\t\tauditGetOmnichannelMessages: (params: {\n\t\t\tstartDate: Date;\n\t\t\tendDate: Date;\n\t\t\tusers: NonNullable<IUser['username']>[];\n\t\t\tmsg: IMessage['msg'];\n\t\t\ttype: string;\n\t\t\tvisitor?: ILivechatVisitor['_id'];\n\t\t\tagent?: ILivechatAgent['_id'];\n\t\t}) => IMessage[];\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync auditGetOmnichannelMessages({ startDate, endDate, users: usernames, msg, type, visitor, agent }) {\n\t\tcheck(startDate, Date);\n\t\tcheck(endDate, Date);\n\n\t\tconst user = (await Meteor.userAsync()) as IUser;\n\t\tif (!user || !(await hasPermissionAsync(user._id, 'can-audit'))) {\n\t\t\tthrow new Meteor.Error('Not allowed');\n\t\t}\n\n\t\tconst userFields = {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t\t...(user.name && { name: user.name }),\n\t\t\t...(user.avatarETag && { avatarETag: user.avatarETag }),\n\t\t};\n\n\t\tconst rooms: IRoom[] = await LivechatRooms.findByVisitorIdAndAgentId(visitor, agent, {\n\t\t\tprojection: { _id: 1 },\n\t\t}).toArray();\n\t\tconst rids = rooms?.length ? rooms.map(({ _id }) => _id) : undefined;\n\t\tconst name = i18n.t('Omnichannel');\n\n\t\tconst query: Filter<IMessage> = {\n\t\t\trid: { $in: rids },\n\t\t\tts: {\n\t\t\t\t$gt: startDate,\n\t\t\t\t$lt: endDate,\n\t\t\t},\n\t\t};\n\n\t\tif (msg) {\n\t\t\tconst regex = new RegExp(escapeRegExp(msg).trim(), 'i');\n\t\t\tquery.msg = regex;\n\t\t}\n\t\tconst messages = await Messages.find(query).toArray();\n\n\t\t// Once the filter is applied, messages will be shown and a log containing all filters will be saved for further auditing.\n\n\t\tawait AuditLog.insertOne({\n\t\t\tts: new Date(),\n\t\t\tresults: messages.length,\n\t\t\tu: userFields,\n\t\t\tfields: { msg, users: usernames, rids, room: name, startDate, endDate, type, visitor, agent },\n\t\t});\n\n\t\treturn messages;\n\t},\n\tasync auditGetMessages({ rid, startDate, endDate, users: usernames, msg, type, visitor, agent }) {\n\t\tcheck(startDate, Date);\n\t\tcheck(endDate, Date);\n\n\t\tconst user = (await Meteor.userAsync()) as IUser;\n\t\tif (!user || !(await hasPermissionAsync(user._id, 'can-audit'))) {\n\t\t\tthrow new Meteor.Error('Not allowed');\n\t\t}\n\n\t\tconst userFields = {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t\t...(user.name && { name: user.name }),\n\t\t\t...(user.avatarETag && { avatarETag: user.avatarETag }),\n\t\t};\n\n\t\tlet rids;\n\t\tlet name;\n\n\t\tconst query: Filter<IMessage> = {\n\t\t\tts: {\n\t\t\t\t$gt: startDate,\n\t\t\t\t$lt: endDate,\n\t\t\t},\n\t\t};\n\n\t\tif (type === 'u') {\n\t\t\tconst usersId = await getUsersIdFromUserName(usernames);\n\t\t\tquery['u._id'] = { $in: usersId };\n\t\t} else {\n\t\t\tconst roomInfo = await getRoomInfoByAuditParams({ type, roomId: rid, users: usernames, visitor, agent });\n\t\t\tif (!roomInfo) {\n\t\t\t\tthrow new Meteor.Error('Room doesn`t exist');\n\t\t\t}\n\n\t\t\trids = roomInfo.rids;\n\t\t\tname = roomInfo.name;\n\t\t\tquery.rid = { $in: rids };\n\t\t}\n\n\t\tif (msg) {\n\t\t\tconst regex = new RegExp(escapeRegExp(msg).trim(), 'i');\n\t\t\tquery.msg = regex;\n\t\t}\n\n\t\tconst messages = await Messages.find(query).toArray();\n\n\t\t// Once the filter is applied, messages will be shown and a log containing all filters will be saved for further auditing.\n\n\t\tawait AuditLog.insertOne({\n\t\t\tts: new Date(),\n\t\t\tresults: messages.length,\n\t\t\tu: userFields,\n\t\t\tfields: { msg, users: usernames, rids, room: name, startDate, endDate, type, visitor, agent },\n\t\t});\n\n\t\tupdateCounter({ settingsId: 'Message_Auditing_Panel_Load_Count' });\n\n\t\treturn messages;\n\t},\n\tasync auditGetAuditions({ startDate, endDate }) {\n\t\tcheck(startDate, Date);\n\t\tcheck(endDate, Date);\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid || !(await hasPermissionAsync(uid, 'can-audit-log'))) {\n\t\t\tthrow new Meteor.Error('Not allowed');\n\t\t}\n\t\treturn AuditLog.find(\n\t\t\t{\n\t\t\t\t// 'u._id': userId,\n\t\t\t\tts: {\n\t\t\t\t\t$gt: startDate,\n\t\t\t\t\t$lt: endDate,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tprojection: {\n\t\t\t\t\t'u.services': 0,\n\t\t\t\t\t'u.roles': 0,\n\t\t\t\t\t'u.lastLogin': 0,\n\t\t\t\t\t'u.statusConnection': 0,\n\t\t\t\t\t'u.emails': 0,\n\t\t\t\t},\n\t\t\t},\n\t\t).toArray();\n\t},\n});\n\nDDPRateLimiter.addRule(\n\t{\n\t\ttype: 'method',\n\t\tname: 'auditGetAuditions',\n\t\tuserId(/* userId*/) {\n\t\t\treturn true;\n\t\t},\n\t},\n\t10,\n\t60000,\n);\n\nDDPRateLimiter.addRule(\n\t{\n\t\ttype: 'method',\n\t\tname: 'auditGetMessages',\n\t\tuserId(/* userId*/) {\n\t\t\treturn true;\n\t\t},\n\t},\n\t10,\n\t60000,\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let LivechatRooms, Messages, Rooms, Users, AuditLog;\n    module.link(\"@rocket.chat/models\", {\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      },\n      Messages(v) {\n        Messages = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      AuditLog(v) {\n        AuditLog = v;\n      }\n    }, 0);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 1);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 2);\n    let DDPRateLimiter;\n    module.link(\"meteor/ddp-rate-limiter\", {\n      DDPRateLimiter(v) {\n        DDPRateLimiter = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let hasPermissionAsync;\n    module.link(\"../../../../app/authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 5);\n    let updateCounter;\n    module.link(\"../../../../app/statistics/server\", {\n      updateCounter(v) {\n        updateCounter = v;\n      }\n    }, 6);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 7);\n    let isTruthy;\n    module.link(\"../../../../lib/isTruthy\", {\n      isTruthy(v) {\n        isTruthy = v;\n      }\n    }, 8);\n    let i18n;\n    module.link(\"../../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 9);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const getValue = room => room && {\n      rids: [room._id],\n      name: room.name\n    };\n    const getUsersIdFromUserName = async usernames => {\n      const users = usernames ? await Users.findByUsernames(usernames.filter(isTruthy)).toArray() : undefined;\n      return users === null || users === void 0 ? void 0 : users.filter(isTruthy).map(userId => userId._id);\n    };\n    const getRoomInfoByAuditParams = async _ref => {\n      let {\n        type,\n        roomId: rid,\n        users: usernames,\n        visitor,\n        agent\n      } = _ref;\n      if (rid) {\n        return getValue(await Rooms.findOne({\n          _id: rid\n        }));\n      }\n      if (type === 'd') {\n        return getValue(await Rooms.findDirectRoomContainingAllUsernames(usernames));\n      }\n      if (type === 'l') {\n        console.warn('Deprecation Warning! This method will be removed in the next version (4.0.0)');\n        const extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n        const rooms = await LivechatRooms.findByVisitorIdAndAgentId(visitor, agent, {\n          projection: {\n            _id: 1\n          }\n        }, extraQuery).toArray();\n        return rooms !== null && rooms !== void 0 && rooms.length ? {\n          rids: rooms.map(_ref2 => {\n            let {\n              _id\n            } = _ref2;\n            return _id;\n          }),\n          name: i18n.t('Omnichannel')\n        } : undefined;\n      }\n    };\n    Meteor.methods({\n      async auditGetOmnichannelMessages(_ref3) {\n        let {\n          startDate,\n          endDate,\n          users: usernames,\n          msg,\n          type,\n          visitor,\n          agent\n        } = _ref3;\n        check(startDate, Date);\n        check(endDate, Date);\n        const user = await Meteor.userAsync();\n        if (!user || !(await hasPermissionAsync(user._id, 'can-audit'))) {\n          throw new Meteor.Error('Not allowed');\n        }\n        const userFields = _objectSpread(_objectSpread({\n          _id: user._id,\n          username: user.username\n        }, user.name && {\n          name: user.name\n        }), user.avatarETag && {\n          avatarETag: user.avatarETag\n        });\n        const rooms = await LivechatRooms.findByVisitorIdAndAgentId(visitor, agent, {\n          projection: {\n            _id: 1\n          }\n        }).toArray();\n        const rids = rooms !== null && rooms !== void 0 && rooms.length ? rooms.map(_ref4 => {\n          let {\n            _id\n          } = _ref4;\n          return _id;\n        }) : undefined;\n        const name = i18n.t('Omnichannel');\n        const query = {\n          rid: {\n            $in: rids\n          },\n          ts: {\n            $gt: startDate,\n            $lt: endDate\n          }\n        };\n        if (msg) {\n          const regex = new RegExp(escapeRegExp(msg).trim(), 'i');\n          query.msg = regex;\n        }\n        const messages = await Messages.find(query).toArray();\n        // Once the filter is applied, messages will be shown and a log containing all filters will be saved for further auditing.\n        await AuditLog.insertOne({\n          ts: new Date(),\n          results: messages.length,\n          u: userFields,\n          fields: {\n            msg,\n            users: usernames,\n            rids,\n            room: name,\n            startDate,\n            endDate,\n            type,\n            visitor,\n            agent\n          }\n        });\n        return messages;\n      },\n      async auditGetMessages(_ref5) {\n        let {\n          rid,\n          startDate,\n          endDate,\n          users: usernames,\n          msg,\n          type,\n          visitor,\n          agent\n        } = _ref5;\n        check(startDate, Date);\n        check(endDate, Date);\n        const user = await Meteor.userAsync();\n        if (!user || !(await hasPermissionAsync(user._id, 'can-audit'))) {\n          throw new Meteor.Error('Not allowed');\n        }\n        const userFields = _objectSpread(_objectSpread({\n          _id: user._id,\n          username: user.username\n        }, user.name && {\n          name: user.name\n        }), user.avatarETag && {\n          avatarETag: user.avatarETag\n        });\n        let rids;\n        let name;\n        const query = {\n          ts: {\n            $gt: startDate,\n            $lt: endDate\n          }\n        };\n        if (type === 'u') {\n          const usersId = await getUsersIdFromUserName(usernames);\n          query['u._id'] = {\n            $in: usersId\n          };\n        } else {\n          const roomInfo = await getRoomInfoByAuditParams({\n            type,\n            roomId: rid,\n            users: usernames,\n            visitor,\n            agent\n          });\n          if (!roomInfo) {\n            throw new Meteor.Error('Room doesn`t exist');\n          }\n          rids = roomInfo.rids;\n          name = roomInfo.name;\n          query.rid = {\n            $in: rids\n          };\n        }\n        if (msg) {\n          const regex = new RegExp(escapeRegExp(msg).trim(), 'i');\n          query.msg = regex;\n        }\n        const messages = await Messages.find(query).toArray();\n        // Once the filter is applied, messages will be shown and a log containing all filters will be saved for further auditing.\n        await AuditLog.insertOne({\n          ts: new Date(),\n          results: messages.length,\n          u: userFields,\n          fields: {\n            msg,\n            users: usernames,\n            rids,\n            room: name,\n            startDate,\n            endDate,\n            type,\n            visitor,\n            agent\n          }\n        });\n        updateCounter({\n          settingsId: 'Message_Auditing_Panel_Load_Count'\n        });\n        return messages;\n      },\n      async auditGetAuditions(_ref6) {\n        let {\n          startDate,\n          endDate\n        } = _ref6;\n        check(startDate, Date);\n        check(endDate, Date);\n        const uid = Meteor.userId();\n        if (!uid || !(await hasPermissionAsync(uid, 'can-audit-log'))) {\n          throw new Meteor.Error('Not allowed');\n        }\n        return AuditLog.find({\n          // 'u._id': userId,\n          ts: {\n            $gt: startDate,\n            $lt: endDate\n          }\n        }, {\n          projection: {\n            'u.services': 0,\n            'u.roles': 0,\n            'u.lastLogin': 0,\n            'u.statusConnection': 0,\n            'u.emails': 0\n          }\n        }).toArray();\n      }\n    });\n    DDPRateLimiter.addRule({\n      type: 'method',\n      name: 'auditGetAuditions',\n      userId( /* userId*/\n      ) {\n        return true;\n      }\n    }, 10, 60000);\n    DDPRateLimiter.addRule({\n      type: 'method',\n      name: 'auditGetMessages',\n      userId( /* userId*/\n      ) {\n        return true;\n      }\n    }, 10, 60000);\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","LivechatRooms","Messages","Rooms","Users","AuditLog","escapeRegExp","check","DDPRateLimiter","Meteor","hasPermissionAsync","updateCounter","callbacks","isTruthy","i18n","__reifyWaitForDeps__","getValue","room","rids","_id","name","getUsersIdFromUserName","usernames","users","findByUsernames","filter","toArray","undefined","map","userId","getRoomInfoByAuditParams","_ref","type","roomId","rid","visitor","agent","findOne","findDirectRoomContainingAllUsernames","console","warn","extraQuery","run","rooms","findByVisitorIdAndAgentId","projection","length","_ref2","t","methods","auditGetOmnichannelMessages","_ref3","startDate","endDate","msg","Date","user","userAsync","Error","userFields","username","avatarETag","_ref4","query","$in","ts","$gt","$lt","regex","RegExp","trim","messages","find","insertOne","results","u","fields","auditGetMessages","_ref5","usersId","roomInfo","settingsId","auditGetAuditions","_ref6","uid","addRule","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/lib/audit/methods.ts"],"sourcesContent":["import type { ILivechatAgent, ILivechatVisitor, IMessage, IRoom, IUser, IAuditLog } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { LivechatRooms, Messages, Rooms, Users, AuditLog } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { check } from 'meteor/check';\nimport { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter } from 'mongodb';\n\nimport { hasPermissionAsync } from '../../../../app/authorization/server/functions/hasPermission';\nimport { updateCounter } from '../../../../app/statistics/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { i18n } from '../../../../server/lib/i18n';\n\nconst getValue = (room: IRoom | null) => room && { rids: [room._id], name: room.name };\n\nconst getUsersIdFromUserName = async (usernames: IUser['username'][]) => {\n\tconst users = usernames ? await Users.findByUsernames(usernames.filter(isTruthy)).toArray() : undefined;\n\n\treturn users?.filter(isTruthy).map((userId) => userId._id);\n};\n\nconst getRoomInfoByAuditParams = async ({\n\ttype,\n\troomId: rid,\n\tusers: usernames,\n\tvisitor,\n\tagent,\n}: {\n\ttype: string;\n\troomId: IRoom['_id'];\n\tusers: NonNullable<IUser['username']>[];\n\tvisitor: ILivechatVisitor['_id'];\n\tagent: ILivechatAgent['_id'];\n}) => {\n\tif (rid) {\n\t\treturn getValue(await Rooms.findOne({ _id: rid }));\n\t}\n\n\tif (type === 'd') {\n\t\treturn getValue(await Rooms.findDirectRoomContainingAllUsernames(usernames));\n\t}\n\n\tif (type === 'l') {\n\t\tconsole.warn('Deprecation Warning! This method will be removed in the next version (4.0.0)');\n\t\tconst extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n\t\tconst rooms: IRoom[] = await LivechatRooms.findByVisitorIdAndAgentId(\n\t\t\tvisitor,\n\t\t\tagent,\n\t\t\t{\n\t\t\t\tprojection: { _id: 1 },\n\t\t\t},\n\t\t\textraQuery,\n\t\t).toArray();\n\t\treturn rooms?.length ? { rids: rooms.map(({ _id }) => _id), name: i18n.t('Omnichannel') } : undefined;\n\t}\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tauditGetAuditions: (params: { startDate: Date; endDate: Date }) => IAuditLog[];\n\t\tauditGetMessages: (params: {\n\t\t\trid: IRoom['_id'];\n\t\t\tstartDate: Date;\n\t\t\tendDate: Date;\n\t\t\tusers: NonNullable<IUser['username']>[];\n\t\t\tmsg: IMessage['msg'];\n\t\t\ttype: string;\n\t\t\tvisitor: ILivechatVisitor['_id'];\n\t\t\tagent: ILivechatAgent['_id'];\n\t\t}) => IMessage[];\n\t\tauditGetOmnichannelMessages: (params: {\n\t\t\tstartDate: Date;\n\t\t\tendDate: Date;\n\t\t\tusers: NonNullable<IUser['username']>[];\n\t\t\tmsg: IMessage['msg'];\n\t\t\ttype: string;\n\t\t\tvisitor?: ILivechatVisitor['_id'];\n\t\t\tagent?: ILivechatAgent['_id'];\n\t\t}) => IMessage[];\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync auditGetOmnichannelMessages({ startDate, endDate, users: usernames, msg, type, visitor, agent }) {\n\t\tcheck(startDate, Date);\n\t\tcheck(endDate, Date);\n\n\t\tconst user = (await Meteor.userAsync()) as IUser;\n\t\tif (!user || !(await hasPermissionAsync(user._id, 'can-audit'))) {\n\t\t\tthrow new Meteor.Error('Not allowed');\n\t\t}\n\n\t\tconst userFields = {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t\t...(user.name && { name: user.name }),\n\t\t\t...(user.avatarETag && { avatarETag: user.avatarETag }),\n\t\t};\n\n\t\tconst rooms: IRoom[] = await LivechatRooms.findByVisitorIdAndAgentId(visitor, agent, {\n\t\t\tprojection: { _id: 1 },\n\t\t}).toArray();\n\t\tconst rids = rooms?.length ? rooms.map(({ _id }) => _id) : undefined;\n\t\tconst name = i18n.t('Omnichannel');\n\n\t\tconst query: Filter<IMessage> = {\n\t\t\trid: { $in: rids },\n\t\t\tts: {\n\t\t\t\t$gt: startDate,\n\t\t\t\t$lt: endDate,\n\t\t\t},\n\t\t};\n\n\t\tif (msg) {\n\t\t\tconst regex = new RegExp(escapeRegExp(msg).trim(), 'i');\n\t\t\tquery.msg = regex;\n\t\t}\n\t\tconst messages = await Messages.find(query).toArray();\n\n\t\t// Once the filter is applied, messages will be shown and a log containing all filters will be saved for further auditing.\n\n\t\tawait AuditLog.insertOne({\n\t\t\tts: new Date(),\n\t\t\tresults: messages.length,\n\t\t\tu: userFields,\n\t\t\tfields: { msg, users: usernames, rids, room: name, startDate, endDate, type, visitor, agent },\n\t\t});\n\n\t\treturn messages;\n\t},\n\tasync auditGetMessages({ rid, startDate, endDate, users: usernames, msg, type, visitor, agent }) {\n\t\tcheck(startDate, Date);\n\t\tcheck(endDate, Date);\n\n\t\tconst user = (await Meteor.userAsync()) as IUser;\n\t\tif (!user || !(await hasPermissionAsync(user._id, 'can-audit'))) {\n\t\t\tthrow new Meteor.Error('Not allowed');\n\t\t}\n\n\t\tconst userFields = {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t\t...(user.name && { name: user.name }),\n\t\t\t...(user.avatarETag && { avatarETag: user.avatarETag }),\n\t\t};\n\n\t\tlet rids;\n\t\tlet name;\n\n\t\tconst query: Filter<IMessage> = {\n\t\t\tts: {\n\t\t\t\t$gt: startDate,\n\t\t\t\t$lt: endDate,\n\t\t\t},\n\t\t};\n\n\t\tif (type === 'u') {\n\t\t\tconst usersId = await getUsersIdFromUserName(usernames);\n\t\t\tquery['u._id'] = { $in: usersId };\n\t\t} else {\n\t\t\tconst roomInfo = await getRoomInfoByAuditParams({ type, roomId: rid, users: usernames, visitor, agent });\n\t\t\tif (!roomInfo) {\n\t\t\t\tthrow new Meteor.Error('Room doesn`t exist');\n\t\t\t}\n\n\t\t\trids = roomInfo.rids;\n\t\t\tname = roomInfo.name;\n\t\t\tquery.rid = { $in: rids };\n\t\t}\n\n\t\tif (msg) {\n\t\t\tconst regex = new RegExp(escapeRegExp(msg).trim(), 'i');\n\t\t\tquery.msg = regex;\n\t\t}\n\n\t\tconst messages = await Messages.find(query).toArray();\n\n\t\t// Once the filter is applied, messages will be shown and a log containing all filters will be saved for further auditing.\n\n\t\tawait AuditLog.insertOne({\n\t\t\tts: new Date(),\n\t\t\tresults: messages.length,\n\t\t\tu: userFields,\n\t\t\tfields: { msg, users: usernames, rids, room: name, startDate, endDate, type, visitor, agent },\n\t\t});\n\n\t\tupdateCounter({ settingsId: 'Message_Auditing_Panel_Load_Count' });\n\n\t\treturn messages;\n\t},\n\tasync auditGetAuditions({ startDate, endDate }) {\n\t\tcheck(startDate, Date);\n\t\tcheck(endDate, Date);\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid || !(await hasPermissionAsync(uid, 'can-audit-log'))) {\n\t\t\tthrow new Meteor.Error('Not allowed');\n\t\t}\n\t\treturn AuditLog.find(\n\t\t\t{\n\t\t\t\t// 'u._id': userId,\n\t\t\t\tts: {\n\t\t\t\t\t$gt: startDate,\n\t\t\t\t\t$lt: endDate,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tprojection: {\n\t\t\t\t\t'u.services': 0,\n\t\t\t\t\t'u.roles': 0,\n\t\t\t\t\t'u.lastLogin': 0,\n\t\t\t\t\t'u.statusConnection': 0,\n\t\t\t\t\t'u.emails': 0,\n\t\t\t\t},\n\t\t\t},\n\t\t).toArray();\n\t},\n});\n\nDDPRateLimiter.addRule(\n\t{\n\t\ttype: 'method',\n\t\tname: 'auditGetAuditions',\n\t\tuserId(/* userId*/) {\n\t\t\treturn true;\n\t\t},\n\t},\n\t10,\n\t60000,\n);\n\nDDPRateLimiter.addRule(\n\t{\n\t\ttype: 'method',\n\t\tname: 'auditGetMessages',\n\t\tuserId(/* userId*/) {\n\t\t\treturn true;\n\t\t},\n\t},\n\t10,\n\t60000,\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0d0ca0114848088647b09c96e65d62a7a9d6f6aa"}
