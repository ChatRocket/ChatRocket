{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/loadHistory.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/loadHistory.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/loadHistory.ts","inputSourceMap":{"version":3,"file":"server/methods/loadHistory.ts","sourceRoot":"","sources":["server/methods/loadHistory.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC3D,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,MAAM,gCAAgC,CAAC;AAC1F,OAAO,EAAE,kBAAkB,EAAE,MAAM,wDAAwD,CAAC;AAC5F,OAAO,EAAE,kBAAkB,EAAE,MAAM,mDAAmD,CAAC;AACvF,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AAqBrD,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,GAAG,EAAE,EAAE,EAAE,EAAE,kBAAkB,GAAG,IAAI;QACpE,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAEnB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,QAAQ,CAAC,GAAG,CAAC,6BAA6B,CAAC,KAAK,KAAK,EAAE,CAAC;YAC/E,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC5D,MAAM,EAAE,aAAa;aACrB,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAE/B,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,oBAAoB,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7F,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO,KAAK,CAAC;QACd,CAAC;QAED,0EAA0E;QAC1E,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC;YAC7E,OAAO,KAAK,CAAC;QACd,CAAC;QAED,2FAA2F;QAC3F,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,OAAO,kBAAkB,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACxE,CAAC;QAED,MAAM,UAAU,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;QAEtE,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,MAAM,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;YAC/H,OAAO,KAAK,CAAC;QACd,CAAC;QAED,OAAO,kBAAkB,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,kBAAkB,EAAE,CAAC,CAAC;IACxF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Subscriptions, Rooms } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomAsync, roomAccessAttributes } from '../../app/authorization/server';\nimport { hasPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { loadMessageHistory } from '../../app/lib/server/functions/loadMessageHistory';\nimport { settings } from '../../app/settings/server';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tloadHistory(\n\t\t\trid: IRoom['_id'],\n\t\t\tts?: Date,\n\t\t\tlimit?: number,\n\t\t\tls?: string | Date,\n\t\t\tshowThreadMessages?: boolean,\n\t\t):\n\t\t\t| {\n\t\t\t\t\tmessages: IMessage[];\n\t\t\t\t\tfirstUnread: IMessage | undefined;\n\t\t\t\t\tunreadNotLoaded: number;\n\t\t\t  }\n\t\t\t| false;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync loadHistory(rid, end, limit = 20, ls, showThreadMessages = true) {\n\t\tcheck(rid, String);\n\n\t\tif (!Meteor.userId() && settings.get('Accounts_AllowAnonymousRead') === false) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'loadHistory',\n\t\t\t});\n\t\t}\n\n\t\tconst fromId = Meteor.userId();\n\n\t\tconst room = await Rooms.findOneById(rid, { projection: { ...roomAccessAttributes, t: 1 } });\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// this checks the Allow Anonymous Read setting, so no need to check again\n\t\tif (!(await canAccessRoomAsync(room, fromId ? { _id: fromId } : undefined))) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// if fromId is undefined and it passed the previous check, the user is reading anonymously\n\t\tif (!fromId) {\n\t\t\treturn loadMessageHistory({ rid, end, limit, ls, showThreadMessages });\n\t\t}\n\n\t\tconst canPreview = await hasPermissionAsync(fromId, 'preview-c-room');\n\n\t\tif (room.t === 'c' && !canPreview && !(await Subscriptions.findOneByRoomIdAndUserId(rid, fromId, { projection: { _id: 1 } }))) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn loadMessageHistory({ userId: fromId, rid, end, limit, ls, showThreadMessages });\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/loadHistory.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/loadHistory.ts","inputSourceMap":{"version":3,"file":"server/methods/loadHistory.ts","sourceRoot":"","sources":["server/methods/loadHistory.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC3D,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,MAAM,gCAAgC,CAAC;AAC1F,OAAO,EAAE,kBAAkB,EAAE,MAAM,wDAAwD,CAAC;AAC5F,OAAO,EAAE,kBAAkB,EAAE,MAAM,mDAAmD,CAAC;AACvF,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AAqBrD,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,GAAG,EAAE,EAAE,EAAE,EAAE,kBAAkB,GAAG,IAAI;QACpE,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAEnB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,QAAQ,CAAC,GAAG,CAAC,6BAA6B,CAAC,KAAK,KAAK,EAAE,CAAC;YAC/E,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC5D,MAAM,EAAE,aAAa;aACrB,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAE/B,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,oBAAoB,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7F,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO,KAAK,CAAC;QACd,CAAC;QAED,0EAA0E;QAC1E,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC;YAC7E,OAAO,KAAK,CAAC;QACd,CAAC;QAED,2FAA2F;QAC3F,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,OAAO,kBAAkB,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACxE,CAAC;QAED,MAAM,UAAU,GAAG,MAAM,kBAAkB,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;QAEtE,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC,MAAM,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;YAC/H,OAAO,KAAK,CAAC;QACd,CAAC;QAED,OAAO,kBAAkB,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,kBAAkB,EAAE,CAAC,CAAC;IACxF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Subscriptions, Rooms } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomAsync, roomAccessAttributes } from '../../app/authorization/server';\nimport { hasPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { loadMessageHistory } from '../../app/lib/server/functions/loadMessageHistory';\nimport { settings } from '../../app/settings/server';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tloadHistory(\n\t\t\trid: IRoom['_id'],\n\t\t\tts?: Date,\n\t\t\tlimit?: number,\n\t\t\tls?: string | Date,\n\t\t\tshowThreadMessages?: boolean,\n\t\t):\n\t\t\t| {\n\t\t\t\t\tmessages: IMessage[];\n\t\t\t\t\tfirstUnread: IMessage | undefined;\n\t\t\t\t\tunreadNotLoaded: number;\n\t\t\t  }\n\t\t\t| false;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync loadHistory(rid, end, limit = 20, ls, showThreadMessages = true) {\n\t\tcheck(rid, String);\n\n\t\tif (!Meteor.userId() && settings.get('Accounts_AllowAnonymousRead') === false) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'loadHistory',\n\t\t\t});\n\t\t}\n\n\t\tconst fromId = Meteor.userId();\n\n\t\tconst room = await Rooms.findOneById(rid, { projection: { ...roomAccessAttributes, t: 1 } });\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// this checks the Allow Anonymous Read setting, so no need to check again\n\t\tif (!(await canAccessRoomAsync(room, fromId ? { _id: fromId } : undefined))) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// if fromId is undefined and it passed the previous check, the user is reading anonymously\n\t\tif (!fromId) {\n\t\t\treturn loadMessageHistory({ rid, end, limit, ls, showThreadMessages });\n\t\t}\n\n\t\tconst canPreview = await hasPermissionAsync(fromId, 'preview-c-room');\n\n\t\tif (room.t === 'c' && !canPreview && !(await Subscriptions.findOneByRoomIdAndUserId(rid, fromId, { projection: { _id: 1 } }))) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn loadMessageHistory({ userId: fromId, rid, end, limit, ls, showThreadMessages });\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let Subscriptions, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 0);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let canAccessRoomAsync, roomAccessAttributes;\n    module.link(\"../../app/authorization/server\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      },\n      roomAccessAttributes(v) {\n        roomAccessAttributes = v;\n      }\n    }, 3);\n    let hasPermissionAsync;\n    module.link(\"../../app/authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 4);\n    let loadMessageHistory;\n    module.link(\"../../app/lib/server/functions/loadMessageHistory\", {\n      loadMessageHistory(v) {\n        loadMessageHistory = v;\n      }\n    }, 5);\n    let settings;\n    module.link(\"../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async loadHistory(rid, end) {\n        let limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 20;\n        let ls = arguments.length > 3 ? arguments[3] : undefined;\n        let showThreadMessages = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n        check(rid, String);\n        if (!Meteor.userId() && settings.get('Accounts_AllowAnonymousRead') === false) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'loadHistory'\n          });\n        }\n        const fromId = Meteor.userId();\n        const room = await Rooms.findOneById(rid, {\n          projection: _objectSpread(_objectSpread({}, roomAccessAttributes), {}, {\n            t: 1\n          })\n        });\n        if (!room) {\n          return false;\n        }\n        // this checks the Allow Anonymous Read setting, so no need to check again\n        if (!(await canAccessRoomAsync(room, fromId ? {\n          _id: fromId\n        } : undefined))) {\n          return false;\n        }\n        // if fromId is undefined and it passed the previous check, the user is reading anonymously\n        if (!fromId) {\n          return loadMessageHistory({\n            rid,\n            end,\n            limit,\n            ls,\n            showThreadMessages\n          });\n        }\n        const canPreview = await hasPermissionAsync(fromId, 'preview-c-room');\n        if (room.t === 'c' && !canPreview && !(await Subscriptions.findOneByRoomIdAndUserId(rid, fromId, {\n          projection: {\n            _id: 1\n          }\n        }))) {\n          return false;\n        }\n        return loadMessageHistory({\n          userId: fromId,\n          rid,\n          end,\n          limit,\n          ls,\n          showThreadMessages\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","Subscriptions","Rooms","check","Meteor","canAccessRoomAsync","roomAccessAttributes","hasPermissionAsync","loadMessageHistory","settings","__reifyWaitForDeps__","methods","loadHistory","rid","end","limit","arguments","length","undefined","ls","showThreadMessages","String","userId","get","Error","method","fromId","room","findOneById","projection","t","_id","canPreview","findOneByRoomIdAndUserId","__reify_async_result__","_reifyError","self","async"],"sources":["server/methods/loadHistory.ts"],"sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Subscriptions, Rooms } from '@rocket.chat/models';\nimport { check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomAsync, roomAccessAttributes } from '../../app/authorization/server';\nimport { hasPermissionAsync } from '../../app/authorization/server/functions/hasPermission';\nimport { loadMessageHistory } from '../../app/lib/server/functions/loadMessageHistory';\nimport { settings } from '../../app/settings/server';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tloadHistory(\n\t\t\trid: IRoom['_id'],\n\t\t\tts?: Date,\n\t\t\tlimit?: number,\n\t\t\tls?: string | Date,\n\t\t\tshowThreadMessages?: boolean,\n\t\t):\n\t\t\t| {\n\t\t\t\t\tmessages: IMessage[];\n\t\t\t\t\tfirstUnread: IMessage | undefined;\n\t\t\t\t\tunreadNotLoaded: number;\n\t\t\t  }\n\t\t\t| false;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync loadHistory(rid, end, limit = 20, ls, showThreadMessages = true) {\n\t\tcheck(rid, String);\n\n\t\tif (!Meteor.userId() && settings.get('Accounts_AllowAnonymousRead') === false) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'loadHistory',\n\t\t\t});\n\t\t}\n\n\t\tconst fromId = Meteor.userId();\n\n\t\tconst room = await Rooms.findOneById(rid, { projection: { ...roomAccessAttributes, t: 1 } });\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// this checks the Allow Anonymous Read setting, so no need to check again\n\t\tif (!(await canAccessRoomAsync(room, fromId ? { _id: fromId } : undefined))) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// if fromId is undefined and it passed the previous check, the user is reading anonymously\n\t\tif (!fromId) {\n\t\t\treturn loadMessageHistory({ rid, end, limit, ls, showThreadMessages });\n\t\t}\n\n\t\tconst canPreview = await hasPermissionAsync(fromId, 'preview-c-room');\n\n\t\tif (room.t === 'c' && !canPreview && !(await Subscriptions.findOneByRoomIdAndUserId(rid, fromId, { projection: { _id: 1 } }))) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn loadMessageHistory({ userId: fromId, rid, end, limit, ls, showThreadMessages });\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d129468a737f07500f2331c1ae1dc92bd300e157"}
