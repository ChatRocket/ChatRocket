{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/ldap/Connection.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/ldap/Connection.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/ldap/Connection.ts","inputSourceMap":{"version":3,"file":"server/lib/ldap/Connection.ts","sourceRoot":"","sources":["server/lib/ldap/Connection.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n\tILDAPConnectionOptions,\n\tLDAPEncryptionType,\n\tLDAPSearchScope,\n\tILDAPEntry,\n\tILDAPCallback,\n\tILDAPPageCallback,\n} from '@rocket.chat/core-typings';\nimport ldapjs from 'ldapjs';\n\nimport { settings } from '../../../app/settings/server';\nimport { ensureArray } from '../../../lib/utils/arrayUtils';\nimport { logger, connLogger, searchLogger, authLogger, bindLogger, mapLogger } from './Logger';\nimport { getLDAPConditionalSetting } from './getLDAPConditionalSetting';\n\ninterface ILDAPEntryCallback<T> {\n\t(entry: ldapjs.SearchEntry): T | undefined;\n}\n\ninterface ILDAPSearchEndCallback {\n\t(error?: any): void;\n}\n\ninterface ILDAPSearchPageCallback {\n\t(result: ldapjs.SearchEntry[]): void;\n}\n\ninterface ILDAPSearchAllCallbacks<T> {\n\tdataCallback?: ILDAPSearchPageCallback;\n\tendCallback?: ILDAPSearchEndCallback;\n\tentryCallback?: ILDAPEntryCallback<T>;\n}\n\ntype ILDAPExtractedValue = string | Array<ILDAPExtractedValue>;\n\nexport class LDAPConnection {\n\tpublic ldapjs: any;\n\n\tpublic connected: boolean;\n\n\tpublic options: ILDAPConnectionOptions;\n\n\tpublic client: ldapjs.Client;\n\n\tprivate _receivedResponse: boolean;\n\n\tprivate _connectionTimedOut: boolean;\n\n\tprivate _connectionCallback: ILDAPCallback;\n\n\tprivate usingAuthentication: boolean;\n\n\tconstructor() {\n\t\tthis.ldapjs = ldapjs;\n\n\t\tthis.connected = false;\n\t\tthis._receivedResponse = false;\n\t\tthis._connectionTimedOut = false;\n\n\t\tthis.options = {\n\t\t\thost: settings.get<string>('LDAP_Host') ?? '',\n\t\t\tport: settings.get<number>('LDAP_Port') ?? 389,\n\t\t\treconnect: settings.get<boolean>('LDAP_Reconnect') ?? false,\n\t\t\ttimeout: settings.get<number>('LDAP_Timeout') ?? 60000,\n\t\t\tconnectionTimeout: settings.get<number>('LDAP_Connect_Timeout') ?? 1000,\n\t\t\tidleTimeout: settings.get<number>('LDAP_Idle_Timeout') ?? 1000,\n\t\t\tencryption: settings.get<LDAPEncryptionType>('LDAP_Encryption') ?? 'plain',\n\t\t\tcaCert: settings.get<string>('LDAP_CA_Cert'),\n\t\t\trejectUnauthorized: settings.get<boolean>('LDAP_Reject_Unauthorized') || false,\n\t\t\tbaseDN: settings.get<string>('LDAP_BaseDN') ?? '',\n\t\t\tuserSearchFilter: settings.get<string>('LDAP_User_Search_Filter') ?? '',\n\t\t\tuserSearchScope: settings.get<LDAPSearchScope>('LDAP_User_Search_Scope') ?? 'sub',\n\t\t\tuserSearchField: getLDAPConditionalSetting<string>('LDAP_User_Search_Field') ?? '',\n\t\t\tsearchPageSize: settings.get<number>('LDAP_Search_Page_Size') ?? 250,\n\t\t\tsearchSizeLimit: settings.get<number>('LDAP_Search_Size_Limit') ?? 1000,\n\t\t\tuniqueIdentifierField: settings.get<string>('LDAP_Unique_Identifier_Field'),\n\t\t\tgroupFilterEnabled: settings.get<boolean>('LDAP_Group_Filter_Enable') ?? false,\n\t\t\tgroupFilterObjectClass: settings.get<string>('LDAP_Group_Filter_ObjectClass'),\n\t\t\tgroupFilterGroupIdAttribute: settings.get<string>('LDAP_Group_Filter_Group_Id_Attribute'),\n\t\t\tgroupFilterGroupMemberAttribute: settings.get<string>('LDAP_Group_Filter_Group_Member_Attribute'),\n\t\t\tgroupFilterGroupMemberFormat: settings.get<string>('LDAP_Group_Filter_Group_Member_Format'),\n\t\t\tgroupFilterGroupName: settings.get<string>('LDAP_Group_Filter_Group_Name'),\n\t\t\tauthentication: settings.get<boolean>('LDAP_Authentication') ?? false,\n\t\t\tauthenticationUserDN: settings.get<string>('LDAP_Authentication_UserDN') ?? '',\n\t\t\tauthenticationPassword: settings.get<string>('LDAP_Authentication_Password') ?? '',\n\t\t\tattributesToQuery: this.parseAttributeList(settings.get<string>('LDAP_User_Search_AttributesToQuery')),\n\t\t};\n\n\t\tif (!this.options.host) {\n\t\t\tlogger.warn('LDAP Host is not configured.');\n\t\t}\n\t\tif (!this.options.baseDN) {\n\t\t\tlogger.warn('LDAP Search BaseDN is not configured.');\n\t\t}\n\t}\n\n\tpublic async connect(): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.initializeConnection((error, result) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\treturn resolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic disconnect(): void {\n\t\tthis.usingAuthentication = false;\n\t\tthis.connected = false;\n\t\tconnLogger.info('Disconnecting');\n\n\t\tif (this.client) {\n\t\t\tthis.client.unbind();\n\t\t}\n\t}\n\n\tpublic async testConnection(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.connect();\n\t\t\tawait this.maybeBindDN();\n\t\t} finally {\n\t\t\tthis.disconnect();\n\t\t}\n\t}\n\n\tpublic async searchByUsername(escapedUsername: string): Promise<ILDAPEntry[]> {\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tfilter: this.getUserFilter(escapedUsername),\n\t\t\tscope: this.options.userSearchScope || 'sub',\n\t\t\tsizeLimit: this.options.searchSizeLimit,\n\t\t\tattributes: this.options.attributesToQuery,\n\t\t};\n\n\t\tif (this.options.searchPageSize > 0) {\n\t\t\tsearchOptions.paged = {\n\t\t\t\tpageSize: this.options.searchPageSize,\n\t\t\t\tpagePause: false,\n\t\t\t};\n\t\t}\n\n\t\tsearchLogger.info({\n\t\t\tmsg: 'Searching by username',\n\t\t\tusername: escapedUsername,\n\t\t\tbaseDN: this.options.baseDN,\n\t\t\tsearchOptions,\n\t\t});\n\t\treturn this.search(this.options.baseDN, searchOptions);\n\t}\n\n\tpublic async findOneByUsername(username: string): Promise<ILDAPEntry | undefined> {\n\t\tconst results = await this.searchByUsername(username);\n\n\t\tif (results.length === 1) {\n\t\t\treturn results[0];\n\t\t}\n\t}\n\n\tpublic async searchById(id: string, attribute?: string): Promise<ILDAPEntry[]> {\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tscope: this.options.userSearchScope || 'sub',\n\t\t\tattributes: this.options.attributesToQuery,\n\t\t};\n\n\t\tif (attribute) {\n\t\t\tsearchOptions.filter = new this.ldapjs.filters.EqualityFilter({\n\t\t\t\tattribute,\n\t\t\t\tvalue: Buffer.from(id, 'hex'),\n\t\t\t});\n\t\t} else if (this.options.uniqueIdentifierField) {\n\t\t\t// If we don't know what attribute the id came from, we have to look for all of them.\n\t\t\tconst possibleFields = this.options.uniqueIdentifierField.split(',').concat(this.options.userSearchField.split(','));\n\t\t\tconst filters = [];\n\t\t\tfor (const field of possibleFields) {\n\t\t\t\tif (!field) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfilters.push(\n\t\t\t\t\tnew this.ldapjs.filters.EqualityFilter({\n\t\t\t\t\t\tattribute: field,\n\t\t\t\t\t\tvalue: Buffer.from(id, 'hex'),\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t\tsearchOptions.filter = new this.ldapjs.filters.OrFilter({ filters });\n\t\t} else {\n\t\t\tthrow new Error('Unique Identifier Field is not configured.');\n\t\t}\n\n\t\tsearchLogger.info({ msg: 'Searching by id', id });\n\t\tsearchLogger.debug({ msg: 'search filter', searchOptions, baseDN: this.options.baseDN });\n\n\t\treturn this.search(this.options.baseDN, searchOptions);\n\t}\n\n\tpublic async findOneById(id: string, attribute?: string): Promise<ILDAPEntry | undefined> {\n\t\tconst results = await this.searchById(id, attribute);\n\t\tif (results.length === 1) {\n\t\t\treturn results[0];\n\t\t}\n\t}\n\n\tpublic async searchAllUsers<T = ldapjs.SearchEntry>({\n\t\tdataCallback,\n\t\tendCallback,\n\t\tentryCallback,\n\t}: ILDAPSearchAllCallbacks<T>): Promise<void> {\n\t\tsearchLogger.info('Searching all users');\n\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tfilter: this.getUserFilter('*'),\n\t\t\tscope: this.options.userSearchScope || 'sub',\n\t\t\tsizeLimit: this.options.searchSizeLimit,\n\t\t\tattributes: this.options.attributesToQuery,\n\t\t};\n\n\t\tif (this.options.searchPageSize > 0) {\n\t\t\tlet count = 0;\n\t\t\tawait this.doPagedSearch<T>(\n\t\t\t\tthis.options.baseDN,\n\t\t\t\tsearchOptions,\n\t\t\t\tthis.options.searchPageSize,\n\t\t\t\t(error, entries: ldapjs.SearchEntry[], { end, next } = { end: false, next: undefined }) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tendCallback?.(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcount += entries.length;\n\t\t\t\t\tdataCallback?.(entries);\n\t\t\t\t\tif (end) {\n\t\t\t\t\t\tendCallback?.();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnext(count);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tentryCallback,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.doAsyncSearch(\n\t\t\tthis.options.baseDN,\n\t\t\tsearchOptions,\n\t\t\t(error, result) => {\n\t\t\t\tdataCallback?.(result);\n\t\t\t\tendCallback?.(error);\n\t\t\t},\n\t\t\tentryCallback,\n\t\t);\n\t}\n\n\tpublic async authenticate(dn: string, password: string): Promise<boolean> {\n\t\tauthLogger.info({ msg: 'Authenticating', dn });\n\n\t\ttry {\n\t\t\tawait this.bindDN(dn, password);\n\n\t\t\tauthLogger.info({ msg: 'Authenticated', dn });\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tauthLogger.info({ msg: 'Not authenticated', dn });\n\t\t\tauthLogger.debug({ msg: 'error', error });\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic async search(baseDN: string, searchOptions: ldapjs.SearchOptions): Promise<ILDAPEntry[]> {\n\t\treturn this.doCustomSearch<ILDAPEntry>(baseDN, searchOptions, (entry) => this.extractLdapEntryData(entry));\n\t}\n\n\tpublic async searchRaw(baseDN: string, searchOptions: ldapjs.SearchOptions): Promise<ldapjs.SearchEntry[]> {\n\t\treturn this.doCustomSearch<ldapjs.SearchEntry>(baseDN, searchOptions, (entry) => entry);\n\t}\n\n\tpublic async searchAndCount(baseDN: string, searchOptions: ldapjs.SearchOptions): Promise<number> {\n\t\tlet count = 0;\n\t\tawait this.doCustomSearch(baseDN, searchOptions, async () => {\n\t\t\tcount++;\n\t\t});\n\n\t\treturn count;\n\t}\n\n\tpublic extractLdapAttribute(value: Buffer | Buffer[] | string): ILDAPExtractedValue {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value.map((item) => this.extractLdapAttribute(item));\n\t\t}\n\n\t\tif (value instanceof Buffer) {\n\t\t\treturn value.toString();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic extractLdapEntryData(entry: ldapjs.SearchEntry): ILDAPEntry {\n\t\tconst values: ILDAPEntry = {\n\t\t\t_raw: entry.raw,\n\t\t};\n\n\t\tObject.keys(values._raw).forEach((key) => {\n\t\t\tvalues[key] = this.extractLdapAttribute(values._raw[key]);\n\n\t\t\tconst dataType = typeof values[key];\n\t\t\t// eslint-disable-next-line no-control-regex\n\t\t\tif (dataType === 'string' && values[key].length > 100 && /[\\x00-\\x1F]/.test(values[key])) {\n\t\t\t\tmapLogger.debug({\n\t\t\t\t\tmsg: 'Extracted Attribute',\n\t\t\t\t\tkey,\n\t\t\t\t\ttype: dataType,\n\t\t\t\t\tlength: values[key].length,\n\t\t\t\t\tvalue: `${values[key].substr(0, 100)}...`,\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmapLogger.debug({ msg: 'Extracted Attribute', key, type: dataType, value: values[key] });\n\t\t});\n\n\t\treturn values;\n\t}\n\n\tpublic async doCustomSearch<T>(baseDN: string, searchOptions: ldapjs.SearchOptions, entryCallback: ILDAPEntryCallback<T>): Promise<T[]> {\n\t\tawait this.runBeforeSearch(searchOptions);\n\n\t\tif (!searchOptions.scope) {\n\t\t\tsearchOptions.scope = this.options.userSearchScope || 'sub';\n\t\t}\n\t\tsearchLogger.debug({ msg: 'searchOptions', searchOptions, baseDN });\n\n\t\tlet realEntries = 0;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.client.search(baseDN, searchOptions, (error, res: ldapjs.SearchCallbackResponse) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tsearchLogger.error(error);\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tres.on('error', (error) => {\n\t\t\t\t\tsearchLogger.error(error);\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\n\t\t\t\tconst entries: T[] = [];\n\n\t\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst result = entryCallback(entry);\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tentries.push(result as T);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trealEntries++;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tsearchLogger.error(e);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tres.on('end', () => {\n\t\t\t\t\tsearchLogger.info(`LDAP Search found ${realEntries} entries and loaded the data of ${entries.length}.`);\n\t\t\t\t\tresolve(entries);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/*\n\t\tCreate an LDAP search filter based on the username\n\t*/\n\tpublic getUserFilter(username: string): string {\n\t\tconst filter: string[] = [];\n\n\t\tthis.addUserFilters(filter, username);\n\n\t\tconst usernameFilter = this.options.userSearchField.split(',').map((item) => `(${item}=${username})`);\n\n\t\tif (usernameFilter.length === 0) {\n\t\t\tlogger.error('LDAP_LDAP_User_Search_Field not defined');\n\t\t} else if (usernameFilter.length === 1) {\n\t\t\tfilter.push(`${usernameFilter[0]}`);\n\t\t} else {\n\t\t\tfilter.push(`(|${usernameFilter.join('')})`);\n\t\t}\n\n\t\treturn `(&${filter.join('')})`;\n\t}\n\n\tpublic async searchMembersOfGroupFilter(): Promise<string[]> {\n\t\tif (!this.options.groupFilterEnabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (!this.options.groupFilterGroupMemberAttribute) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (!this.options.groupFilterGroupMemberFormat) {\n\t\t\tsearchLogger.debug(`LDAP Group Filter is enabled but no group member format is set.`);\n\t\t\treturn [];\n\t\t}\n\n\t\tconst filter = ['(&'];\n\n\t\tif (this.options.groupFilterObjectClass) {\n\t\t\tfilter.push(`(objectclass=${this.options.groupFilterObjectClass})`);\n\t\t}\n\n\t\tif (this.options.groupFilterGroupIdAttribute) {\n\t\t\tfilter.push(`(${this.options.groupFilterGroupIdAttribute}=${this.options.groupFilterGroupName})`);\n\t\t}\n\t\tfilter.push(')');\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tfilter: filter.join(''),\n\t\t\tscope: 'sub',\n\t\t};\n\n\t\tsearchLogger.debug({ msg: 'Group filter LDAP:', filter: searchOptions.filter });\n\n\t\tconst result = await this.searchRaw(this.options.baseDN, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\tsearchLogger.debug({ msg: 'No groups found', result });\n\t\t\treturn [];\n\t\t}\n\n\t\tconst members = this.extractLdapAttribute(result[0].raw[this.options.groupFilterGroupMemberAttribute]) as string | string[];\n\n\t\treturn ensureArray<string>(members);\n\t}\n\n\tpublic async isUserAcceptedByGroupFilter(username: string, userdn: string): Promise<boolean> {\n\t\tif (!this.options.groupFilterEnabled) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst filter = ['(&'];\n\n\t\tif (this.options.groupFilterObjectClass) {\n\t\t\tfilter.push(`(objectclass=${this.options.groupFilterObjectClass})`);\n\t\t}\n\n\t\tif (this.options.groupFilterGroupMemberAttribute) {\n\t\t\tfilter.push(`(${this.options.groupFilterGroupMemberAttribute}=${this.options.groupFilterGroupMemberFormat})`);\n\t\t}\n\n\t\tif (this.options.groupFilterGroupIdAttribute) {\n\t\t\tfilter.push(`(${this.options.groupFilterGroupIdAttribute}=${this.options.groupFilterGroupName})`);\n\t\t}\n\t\tfilter.push(')');\n\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tfilter: filter\n\t\t\t\t.join('')\n\t\t\t\t.replace(/#{username}/g, username)\n\t\t\t\t.replace(/#{userdn}/g, userdn),\n\t\t\tscope: 'sub',\n\t\t};\n\n\t\tsearchLogger.debug({ msg: 'Group filter LDAP:', filter: searchOptions.filter });\n\n\t\tconst result = await this.searchAndCount(this.options.baseDN, searchOptions);\n\n\t\tif (result === 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected addUserFilters(filters: string[], _username: string): void {\n\t\tconst { userSearchFilter } = this.options;\n\n\t\tif (userSearchFilter !== '') {\n\t\t\tif (userSearchFilter[0] === '(') {\n\t\t\t\tfilters.push(`${userSearchFilter}`);\n\t\t\t} else {\n\t\t\t\tfilters.push(`(${userSearchFilter})`);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async bindDN(dn: string, password: string): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tthis.client.bind(dn, password, (error) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doAsyncSearch<T = ldapjs.SearchEntry>(\n\t\tbaseDN: string,\n\t\tsearchOptions: ldapjs.SearchOptions,\n\t\tcallback: ILDAPCallback,\n\t\tentryCallback?: ILDAPEntryCallback<T>,\n\t): Promise<void> {\n\t\tawait this.runBeforeSearch(searchOptions);\n\n\t\tsearchLogger.debug({ msg: 'searchOptions', searchOptions, baseDN });\n\n\t\tthis.client.search(baseDN, searchOptions, (error: ldapjs.Error | null, res: ldapjs.SearchCallbackResponse): void => {\n\t\t\tif (error) {\n\t\t\t\tsearchLogger.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', (error) => {\n\t\t\t\tsearchLogger.error(error);\n\t\t\t\tcallback(error);\n\t\t\t});\n\n\t\t\tconst entries: T[] = [];\n\n\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = entryCallback ? entryCallback(entry) : entry;\n\t\t\t\t\tentries.push(result as T);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsearchLogger.error(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('end', () => {\n\t\t\t\tsearchLogger.info({ msg: 'Search result count', count: entries.length });\n\t\t\t\tcallback(null, entries);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate processSearchPage<T>(\n\t\t{ entries, title, end, next }: { entries: T[]; title: string; end: boolean; next?: () => void },\n\t\tcallback: ILDAPPageCallback,\n\t): void {\n\t\tsearchLogger.info(title);\n\t\t// Force LDAP idle to wait the record processing\n\t\tthis._updateIdle(true);\n\n\t\tcallback(null, entries, {\n\t\t\tend,\n\t\t\tnext: () => {\n\t\t\t\t// Reset idle timer\n\t\t\t\tthis._updateIdle();\n\t\t\t\tnext?.();\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate async doPagedSearch<T = ldapjs.SearchEntry>(\n\t\tbaseDN: string,\n\t\tsearchOptions: ldapjs.SearchOptions,\n\t\tpageSize: number,\n\t\tcallback: ILDAPPageCallback,\n\t\tentryCallback?: ILDAPEntryCallback<T>,\n\t): Promise<void> {\n\t\tsearchOptions.paged = {\n\t\t\tpageSize,\n\t\t\tpagePause: true,\n\t\t};\n\n\t\tawait this.runBeforeSearch(searchOptions);\n\n\t\tsearchLogger.debug({ msg: 'searchOptions', searchOptions, baseDN });\n\n\t\tthis.client.search(baseDN, searchOptions, (error: ldapjs.Error | null, res: ldapjs.SearchCallbackResponse): void => {\n\t\t\tif (error) {\n\t\t\t\tsearchLogger.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', (error) => {\n\t\t\t\tsearchLogger.error(error);\n\t\t\t\tcallback(error);\n\t\t\t});\n\n\t\t\tlet entries: T[] = [];\n\t\t\tconst internalPageSize = pageSize * 2;\n\n\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = entryCallback ? entryCallback(entry) : entry;\n\t\t\t\t\tentries.push(result as T);\n\n\t\t\t\t\tif (entries.length >= internalPageSize) {\n\t\t\t\t\t\tthis.processSearchPage<T>(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\t\ttitle: 'Internal Page',\n\t\t\t\t\t\t\t\tend: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcallback,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tentries = [];\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsearchLogger.error(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('page', (_result, next) => {\n\t\t\t\tif (!next) {\n\t\t\t\t\tthis._updateIdle(true);\n\t\t\t\t\tthis.processSearchPage<T>(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\ttitle: 'Final Page',\n\t\t\t\t\t\t\tend: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback,\n\t\t\t\t\t);\n\t\t\t\t\tentries = [];\n\t\t\t\t} else if (entries.length) {\n\t\t\t\t\tthis.processSearchPage<T>(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\ttitle: 'Page',\n\t\t\t\t\t\t\tend: false,\n\t\t\t\t\t\t\tnext,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback,\n\t\t\t\t\t);\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('end', () => {\n\t\t\t\tif (entries.length) {\n\t\t\t\t\tthis.processSearchPage<T>(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\ttitle: 'Final Page',\n\t\t\t\t\t\t\tend: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback,\n\t\t\t\t\t);\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _updateIdle(override?: boolean): void {\n\t\t// @ts-expect-error use a private function to signal to the lib that we're still working\n\t\tthis.client._updateIdle(override);\n\t}\n\n\tprotected async maybeBindDN({ forceBindAuthenticationUser = false } = {}): Promise<void> {\n\t\tif (!forceBindAuthenticationUser && (this.usingAuthentication || !this.options.authentication)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.options.authenticationUserDN) {\n\t\t\tlogger.error('Invalid UserDN for authentication');\n\t\t\treturn;\n\t\t}\n\n\t\tbindLogger.info({ msg: 'Binding UserDN', userDN: this.options.authenticationUserDN });\n\t\ttry {\n\t\t\tawait this.bindDN(this.options.authenticationUserDN, this.options.authenticationPassword);\n\t\t\tthis.usingAuthentication = true;\n\t\t} catch (error) {\n\t\t\tauthLogger.error({\n\t\t\t\tmsg: 'Base Authentication Issue',\n\t\t\t\terr: error,\n\t\t\t\tdn: this.options.authenticationUserDN,\n\t\t\t});\n\t\t\tthis.usingAuthentication = false;\n\t\t}\n\t}\n\n\tprotected async runBeforeSearch(_searchOptions: ldapjs.SearchOptions): Promise<void> {\n\t\treturn this.maybeBindDN();\n\t}\n\n\tpublic async bindAuthenticationUser(): Promise<void> {\n\t\treturn this.maybeBindDN({ forceBindAuthenticationUser: true });\n\t}\n\n\t/*\n\t\tGet list of options to initialize a new ldapjs Client\n\t*/\n\tprivate getClientOptions(): {\n\t\tclientOptions: ldapjs.ClientOptions;\n\t\ttlsOptions: Record<string, any>;\n\t} {\n\t\tconst clientOptions: ldapjs.ClientOptions = {\n\t\t\turl: `${this.options.host}:${this.options.port}`,\n\t\t\ttimeout: this.options.timeout,\n\t\t\tconnectTimeout: this.options.connectionTimeout,\n\t\t\tidleTimeout: this.options.idleTimeout,\n\t\t\treconnect: this.options.reconnect,\n\t\t\tlog: connLogger,\n\t\t};\n\n\t\tconst tlsOptions: Record<string, any> = {\n\t\t\trejectUnauthorized: this.options.rejectUnauthorized,\n\t\t};\n\n\t\tif (this.options.caCert) {\n\t\t\t// Split CA cert into array of strings\n\t\t\tconst chainLines = this.options.caCert.split('\\n');\n\t\t\tlet cert: string[] = [];\n\t\t\tconst ca: string[] = [];\n\t\t\tchainLines.forEach((line) => {\n\t\t\t\tcert.push(line);\n\t\t\t\tif (line.match(/-END CERTIFICATE-/)) {\n\t\t\t\t\tca.push(cert.join('\\n'));\n\t\t\t\t\tcert = [];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttlsOptions.ca = ca;\n\t\t}\n\n\t\tif (this.options.encryption === 'ssl') {\n\t\t\tclientOptions.url = `ldaps://${clientOptions.url}`;\n\t\t\tclientOptions.tlsOptions = tlsOptions;\n\t\t} else {\n\t\t\tclientOptions.url = `ldap://${clientOptions.url}`;\n\t\t}\n\n\t\treturn {\n\t\t\tclientOptions,\n\t\t\ttlsOptions,\n\t\t};\n\t}\n\n\tprivate handleConnectionResponse(error: any, response?: any): void {\n\t\tif (!this._receivedResponse) {\n\t\t\tthis._receivedResponse = true;\n\t\t\tthis._connectionCallback(error, response);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._connectionTimedOut && !error) {\n\t\t\tconnLogger.info('Received a response after the connection timedout.');\n\t\t} else {\n\t\t\tlogger.debug('Ignored error/response:');\n\t\t}\n\n\t\tif (error) {\n\t\t\tconnLogger.debug(error);\n\t\t} else {\n\t\t\tconnLogger.debug(response);\n\t\t}\n\t}\n\n\tprivate initializeConnection(callback: ILDAPCallback): void {\n\t\tconnLogger.info('Init Setup');\n\t\tthis._receivedResponse = false;\n\t\tthis._connectionTimedOut = false;\n\t\tthis._connectionCallback = callback;\n\n\t\tconst { clientOptions, tlsOptions } = this.getClientOptions();\n\t\tconnLogger.info({ msg: 'Connecting', url: clientOptions.url });\n\t\tconnLogger.debug({ msg: 'clientOptions', clientOptions });\n\n\t\tthis.client = ldapjs.createClient(clientOptions);\n\n\t\tthis.client.on('error', (error) => {\n\t\t\tconnLogger.error(error);\n\t\t\tthis.handleConnectionResponse(error, null);\n\t\t});\n\n\t\tthis.client.on('idle', () => {\n\t\t\tsearchLogger.info('Idle');\n\t\t\tthis.disconnect();\n\t\t});\n\n\t\tthis.client.on('close', () => {\n\t\t\tsearchLogger.info('Closed');\n\t\t});\n\n\t\tif (this.options.encryption === 'tls') {\n\t\t\t// Set host parameter for tls.connect which is used by ldapjs starttls. This may not be needed anymore\n\t\t\t// https://github.com/RocketChat/Rocket.Chat/issues/2035\n\t\t\t// https://github.com/mcavage/node-ldapjs/issues/349\n\t\t\ttlsOptions.host = this.options.host;\n\n\t\t\tconnLogger.info('Starting TLS');\n\t\t\tconnLogger.debug({ msg: 'tlsOptions', tlsOptions });\n\n\t\t\tthis.client.starttls(tlsOptions, null, (error, response) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconnLogger.error({ msg: 'TLS connection', error });\n\t\t\t\t\treturn this.handleConnectionResponse(error, null);\n\t\t\t\t}\n\n\t\t\t\tconnLogger.info('TLS connected');\n\t\t\t\tthis.connected = true;\n\t\t\t\tthis.handleConnectionResponse(null, response);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.client.on('connect', (response) => {\n\t\t\t\tconnLogger.info('LDAP connected');\n\t\t\t\tthis.connected = true;\n\t\t\t\tthis.handleConnectionResponse(null, response);\n\t\t\t});\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tif (!this._receivedResponse) {\n\t\t\t\tconnLogger.error({ msg: 'connection time out', timeout: clientOptions.connectTimeout });\n\t\t\t\tthis.handleConnectionResponse(new Error('Timeout'));\n\t\t\t\tthis._connectionTimedOut = true;\n\t\t\t}\n\t\t}, clientOptions.connectTimeout);\n\t}\n\n\tprivate parseAttributeList(csv: string | undefined): Array<string> {\n\t\tif (!csv) {\n\t\t\treturn ['*', '+'];\n\t\t}\n\n\t\tconst list = csv.split(',').map((item) => item.trim());\n\t\tif (!list?.length) {\n\t\t\treturn ['*', '+'];\n\t\t}\n\n\t\treturn list;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/ldap/Connection.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/ldap/Connection.ts","inputSourceMap":{"version":3,"file":"server/lib/ldap/Connection.ts","sourceRoot":"","sources":["server/lib/ldap/Connection.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n\tILDAPConnectionOptions,\n\tLDAPEncryptionType,\n\tLDAPSearchScope,\n\tILDAPEntry,\n\tILDAPCallback,\n\tILDAPPageCallback,\n} from '@rocket.chat/core-typings';\nimport ldapjs from 'ldapjs';\n\nimport { settings } from '../../../app/settings/server';\nimport { ensureArray } from '../../../lib/utils/arrayUtils';\nimport { logger, connLogger, searchLogger, authLogger, bindLogger, mapLogger } from './Logger';\nimport { getLDAPConditionalSetting } from './getLDAPConditionalSetting';\n\ninterface ILDAPEntryCallback<T> {\n\t(entry: ldapjs.SearchEntry): T | undefined;\n}\n\ninterface ILDAPSearchEndCallback {\n\t(error?: any): void;\n}\n\ninterface ILDAPSearchPageCallback {\n\t(result: ldapjs.SearchEntry[]): void;\n}\n\ninterface ILDAPSearchAllCallbacks<T> {\n\tdataCallback?: ILDAPSearchPageCallback;\n\tendCallback?: ILDAPSearchEndCallback;\n\tentryCallback?: ILDAPEntryCallback<T>;\n}\n\ntype ILDAPExtractedValue = string | Array<ILDAPExtractedValue>;\n\nexport class LDAPConnection {\n\tpublic ldapjs: any;\n\n\tpublic connected: boolean;\n\n\tpublic options: ILDAPConnectionOptions;\n\n\tpublic client: ldapjs.Client;\n\n\tprivate _receivedResponse: boolean;\n\n\tprivate _connectionTimedOut: boolean;\n\n\tprivate _connectionCallback: ILDAPCallback;\n\n\tprivate usingAuthentication: boolean;\n\n\tconstructor() {\n\t\tthis.ldapjs = ldapjs;\n\n\t\tthis.connected = false;\n\t\tthis._receivedResponse = false;\n\t\tthis._connectionTimedOut = false;\n\n\t\tthis.options = {\n\t\t\thost: settings.get<string>('LDAP_Host') ?? '',\n\t\t\tport: settings.get<number>('LDAP_Port') ?? 389,\n\t\t\treconnect: settings.get<boolean>('LDAP_Reconnect') ?? false,\n\t\t\ttimeout: settings.get<number>('LDAP_Timeout') ?? 60000,\n\t\t\tconnectionTimeout: settings.get<number>('LDAP_Connect_Timeout') ?? 1000,\n\t\t\tidleTimeout: settings.get<number>('LDAP_Idle_Timeout') ?? 1000,\n\t\t\tencryption: settings.get<LDAPEncryptionType>('LDAP_Encryption') ?? 'plain',\n\t\t\tcaCert: settings.get<string>('LDAP_CA_Cert'),\n\t\t\trejectUnauthorized: settings.get<boolean>('LDAP_Reject_Unauthorized') || false,\n\t\t\tbaseDN: settings.get<string>('LDAP_BaseDN') ?? '',\n\t\t\tuserSearchFilter: settings.get<string>('LDAP_User_Search_Filter') ?? '',\n\t\t\tuserSearchScope: settings.get<LDAPSearchScope>('LDAP_User_Search_Scope') ?? 'sub',\n\t\t\tuserSearchField: getLDAPConditionalSetting<string>('LDAP_User_Search_Field') ?? '',\n\t\t\tsearchPageSize: settings.get<number>('LDAP_Search_Page_Size') ?? 250,\n\t\t\tsearchSizeLimit: settings.get<number>('LDAP_Search_Size_Limit') ?? 1000,\n\t\t\tuniqueIdentifierField: settings.get<string>('LDAP_Unique_Identifier_Field'),\n\t\t\tgroupFilterEnabled: settings.get<boolean>('LDAP_Group_Filter_Enable') ?? false,\n\t\t\tgroupFilterObjectClass: settings.get<string>('LDAP_Group_Filter_ObjectClass'),\n\t\t\tgroupFilterGroupIdAttribute: settings.get<string>('LDAP_Group_Filter_Group_Id_Attribute'),\n\t\t\tgroupFilterGroupMemberAttribute: settings.get<string>('LDAP_Group_Filter_Group_Member_Attribute'),\n\t\t\tgroupFilterGroupMemberFormat: settings.get<string>('LDAP_Group_Filter_Group_Member_Format'),\n\t\t\tgroupFilterGroupName: settings.get<string>('LDAP_Group_Filter_Group_Name'),\n\t\t\tauthentication: settings.get<boolean>('LDAP_Authentication') ?? false,\n\t\t\tauthenticationUserDN: settings.get<string>('LDAP_Authentication_UserDN') ?? '',\n\t\t\tauthenticationPassword: settings.get<string>('LDAP_Authentication_Password') ?? '',\n\t\t\tattributesToQuery: this.parseAttributeList(settings.get<string>('LDAP_User_Search_AttributesToQuery')),\n\t\t};\n\n\t\tif (!this.options.host) {\n\t\t\tlogger.warn('LDAP Host is not configured.');\n\t\t}\n\t\tif (!this.options.baseDN) {\n\t\t\tlogger.warn('LDAP Search BaseDN is not configured.');\n\t\t}\n\t}\n\n\tpublic async connect(): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.initializeConnection((error, result) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\treturn resolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic disconnect(): void {\n\t\tthis.usingAuthentication = false;\n\t\tthis.connected = false;\n\t\tconnLogger.info('Disconnecting');\n\n\t\tif (this.client) {\n\t\t\tthis.client.unbind();\n\t\t}\n\t}\n\n\tpublic async testConnection(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.connect();\n\t\t\tawait this.maybeBindDN();\n\t\t} finally {\n\t\t\tthis.disconnect();\n\t\t}\n\t}\n\n\tpublic async searchByUsername(escapedUsername: string): Promise<ILDAPEntry[]> {\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tfilter: this.getUserFilter(escapedUsername),\n\t\t\tscope: this.options.userSearchScope || 'sub',\n\t\t\tsizeLimit: this.options.searchSizeLimit,\n\t\t\tattributes: this.options.attributesToQuery,\n\t\t};\n\n\t\tif (this.options.searchPageSize > 0) {\n\t\t\tsearchOptions.paged = {\n\t\t\t\tpageSize: this.options.searchPageSize,\n\t\t\t\tpagePause: false,\n\t\t\t};\n\t\t}\n\n\t\tsearchLogger.info({\n\t\t\tmsg: 'Searching by username',\n\t\t\tusername: escapedUsername,\n\t\t\tbaseDN: this.options.baseDN,\n\t\t\tsearchOptions,\n\t\t});\n\t\treturn this.search(this.options.baseDN, searchOptions);\n\t}\n\n\tpublic async findOneByUsername(username: string): Promise<ILDAPEntry | undefined> {\n\t\tconst results = await this.searchByUsername(username);\n\n\t\tif (results.length === 1) {\n\t\t\treturn results[0];\n\t\t}\n\t}\n\n\tpublic async searchById(id: string, attribute?: string): Promise<ILDAPEntry[]> {\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tscope: this.options.userSearchScope || 'sub',\n\t\t\tattributes: this.options.attributesToQuery,\n\t\t};\n\n\t\tif (attribute) {\n\t\t\tsearchOptions.filter = new this.ldapjs.filters.EqualityFilter({\n\t\t\t\tattribute,\n\t\t\t\tvalue: Buffer.from(id, 'hex'),\n\t\t\t});\n\t\t} else if (this.options.uniqueIdentifierField) {\n\t\t\t// If we don't know what attribute the id came from, we have to look for all of them.\n\t\t\tconst possibleFields = this.options.uniqueIdentifierField.split(',').concat(this.options.userSearchField.split(','));\n\t\t\tconst filters = [];\n\t\t\tfor (const field of possibleFields) {\n\t\t\t\tif (!field) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfilters.push(\n\t\t\t\t\tnew this.ldapjs.filters.EqualityFilter({\n\t\t\t\t\t\tattribute: field,\n\t\t\t\t\t\tvalue: Buffer.from(id, 'hex'),\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t\tsearchOptions.filter = new this.ldapjs.filters.OrFilter({ filters });\n\t\t} else {\n\t\t\tthrow new Error('Unique Identifier Field is not configured.');\n\t\t}\n\n\t\tsearchLogger.info({ msg: 'Searching by id', id });\n\t\tsearchLogger.debug({ msg: 'search filter', searchOptions, baseDN: this.options.baseDN });\n\n\t\treturn this.search(this.options.baseDN, searchOptions);\n\t}\n\n\tpublic async findOneById(id: string, attribute?: string): Promise<ILDAPEntry | undefined> {\n\t\tconst results = await this.searchById(id, attribute);\n\t\tif (results.length === 1) {\n\t\t\treturn results[0];\n\t\t}\n\t}\n\n\tpublic async searchAllUsers<T = ldapjs.SearchEntry>({\n\t\tdataCallback,\n\t\tendCallback,\n\t\tentryCallback,\n\t}: ILDAPSearchAllCallbacks<T>): Promise<void> {\n\t\tsearchLogger.info('Searching all users');\n\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tfilter: this.getUserFilter('*'),\n\t\t\tscope: this.options.userSearchScope || 'sub',\n\t\t\tsizeLimit: this.options.searchSizeLimit,\n\t\t\tattributes: this.options.attributesToQuery,\n\t\t};\n\n\t\tif (this.options.searchPageSize > 0) {\n\t\t\tlet count = 0;\n\t\t\tawait this.doPagedSearch<T>(\n\t\t\t\tthis.options.baseDN,\n\t\t\t\tsearchOptions,\n\t\t\t\tthis.options.searchPageSize,\n\t\t\t\t(error, entries: ldapjs.SearchEntry[], { end, next } = { end: false, next: undefined }) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tendCallback?.(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcount += entries.length;\n\t\t\t\t\tdataCallback?.(entries);\n\t\t\t\t\tif (end) {\n\t\t\t\t\t\tendCallback?.();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnext(count);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tentryCallback,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.doAsyncSearch(\n\t\t\tthis.options.baseDN,\n\t\t\tsearchOptions,\n\t\t\t(error, result) => {\n\t\t\t\tdataCallback?.(result);\n\t\t\t\tendCallback?.(error);\n\t\t\t},\n\t\t\tentryCallback,\n\t\t);\n\t}\n\n\tpublic async authenticate(dn: string, password: string): Promise<boolean> {\n\t\tauthLogger.info({ msg: 'Authenticating', dn });\n\n\t\ttry {\n\t\t\tawait this.bindDN(dn, password);\n\n\t\t\tauthLogger.info({ msg: 'Authenticated', dn });\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tauthLogger.info({ msg: 'Not authenticated', dn });\n\t\t\tauthLogger.debug({ msg: 'error', error });\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic async search(baseDN: string, searchOptions: ldapjs.SearchOptions): Promise<ILDAPEntry[]> {\n\t\treturn this.doCustomSearch<ILDAPEntry>(baseDN, searchOptions, (entry) => this.extractLdapEntryData(entry));\n\t}\n\n\tpublic async searchRaw(baseDN: string, searchOptions: ldapjs.SearchOptions): Promise<ldapjs.SearchEntry[]> {\n\t\treturn this.doCustomSearch<ldapjs.SearchEntry>(baseDN, searchOptions, (entry) => entry);\n\t}\n\n\tpublic async searchAndCount(baseDN: string, searchOptions: ldapjs.SearchOptions): Promise<number> {\n\t\tlet count = 0;\n\t\tawait this.doCustomSearch(baseDN, searchOptions, async () => {\n\t\t\tcount++;\n\t\t});\n\n\t\treturn count;\n\t}\n\n\tpublic extractLdapAttribute(value: Buffer | Buffer[] | string): ILDAPExtractedValue {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value.map((item) => this.extractLdapAttribute(item));\n\t\t}\n\n\t\tif (value instanceof Buffer) {\n\t\t\treturn value.toString();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic extractLdapEntryData(entry: ldapjs.SearchEntry): ILDAPEntry {\n\t\tconst values: ILDAPEntry = {\n\t\t\t_raw: entry.raw,\n\t\t};\n\n\t\tObject.keys(values._raw).forEach((key) => {\n\t\t\tvalues[key] = this.extractLdapAttribute(values._raw[key]);\n\n\t\t\tconst dataType = typeof values[key];\n\t\t\t// eslint-disable-next-line no-control-regex\n\t\t\tif (dataType === 'string' && values[key].length > 100 && /[\\x00-\\x1F]/.test(values[key])) {\n\t\t\t\tmapLogger.debug({\n\t\t\t\t\tmsg: 'Extracted Attribute',\n\t\t\t\t\tkey,\n\t\t\t\t\ttype: dataType,\n\t\t\t\t\tlength: values[key].length,\n\t\t\t\t\tvalue: `${values[key].substr(0, 100)}...`,\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmapLogger.debug({ msg: 'Extracted Attribute', key, type: dataType, value: values[key] });\n\t\t});\n\n\t\treturn values;\n\t}\n\n\tpublic async doCustomSearch<T>(baseDN: string, searchOptions: ldapjs.SearchOptions, entryCallback: ILDAPEntryCallback<T>): Promise<T[]> {\n\t\tawait this.runBeforeSearch(searchOptions);\n\n\t\tif (!searchOptions.scope) {\n\t\t\tsearchOptions.scope = this.options.userSearchScope || 'sub';\n\t\t}\n\t\tsearchLogger.debug({ msg: 'searchOptions', searchOptions, baseDN });\n\n\t\tlet realEntries = 0;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.client.search(baseDN, searchOptions, (error, res: ldapjs.SearchCallbackResponse) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tsearchLogger.error(error);\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tres.on('error', (error) => {\n\t\t\t\t\tsearchLogger.error(error);\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\n\t\t\t\tconst entries: T[] = [];\n\n\t\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst result = entryCallback(entry);\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tentries.push(result as T);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trealEntries++;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tsearchLogger.error(e);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tres.on('end', () => {\n\t\t\t\t\tsearchLogger.info(`LDAP Search found ${realEntries} entries and loaded the data of ${entries.length}.`);\n\t\t\t\t\tresolve(entries);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/*\n\t\tCreate an LDAP search filter based on the username\n\t*/\n\tpublic getUserFilter(username: string): string {\n\t\tconst filter: string[] = [];\n\n\t\tthis.addUserFilters(filter, username);\n\n\t\tconst usernameFilter = this.options.userSearchField.split(',').map((item) => `(${item}=${username})`);\n\n\t\tif (usernameFilter.length === 0) {\n\t\t\tlogger.error('LDAP_LDAP_User_Search_Field not defined');\n\t\t} else if (usernameFilter.length === 1) {\n\t\t\tfilter.push(`${usernameFilter[0]}`);\n\t\t} else {\n\t\t\tfilter.push(`(|${usernameFilter.join('')})`);\n\t\t}\n\n\t\treturn `(&${filter.join('')})`;\n\t}\n\n\tpublic async searchMembersOfGroupFilter(): Promise<string[]> {\n\t\tif (!this.options.groupFilterEnabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (!this.options.groupFilterGroupMemberAttribute) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (!this.options.groupFilterGroupMemberFormat) {\n\t\t\tsearchLogger.debug(`LDAP Group Filter is enabled but no group member format is set.`);\n\t\t\treturn [];\n\t\t}\n\n\t\tconst filter = ['(&'];\n\n\t\tif (this.options.groupFilterObjectClass) {\n\t\t\tfilter.push(`(objectclass=${this.options.groupFilterObjectClass})`);\n\t\t}\n\n\t\tif (this.options.groupFilterGroupIdAttribute) {\n\t\t\tfilter.push(`(${this.options.groupFilterGroupIdAttribute}=${this.options.groupFilterGroupName})`);\n\t\t}\n\t\tfilter.push(')');\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tfilter: filter.join(''),\n\t\t\tscope: 'sub',\n\t\t};\n\n\t\tsearchLogger.debug({ msg: 'Group filter LDAP:', filter: searchOptions.filter });\n\n\t\tconst result = await this.searchRaw(this.options.baseDN, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\tsearchLogger.debug({ msg: 'No groups found', result });\n\t\t\treturn [];\n\t\t}\n\n\t\tconst members = this.extractLdapAttribute(result[0].raw[this.options.groupFilterGroupMemberAttribute]) as string | string[];\n\n\t\treturn ensureArray<string>(members);\n\t}\n\n\tpublic async isUserAcceptedByGroupFilter(username: string, userdn: string): Promise<boolean> {\n\t\tif (!this.options.groupFilterEnabled) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst filter = ['(&'];\n\n\t\tif (this.options.groupFilterObjectClass) {\n\t\t\tfilter.push(`(objectclass=${this.options.groupFilterObjectClass})`);\n\t\t}\n\n\t\tif (this.options.groupFilterGroupMemberAttribute) {\n\t\t\tfilter.push(`(${this.options.groupFilterGroupMemberAttribute}=${this.options.groupFilterGroupMemberFormat})`);\n\t\t}\n\n\t\tif (this.options.groupFilterGroupIdAttribute) {\n\t\t\tfilter.push(`(${this.options.groupFilterGroupIdAttribute}=${this.options.groupFilterGroupName})`);\n\t\t}\n\t\tfilter.push(')');\n\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tfilter: filter\n\t\t\t\t.join('')\n\t\t\t\t.replace(/#{username}/g, username)\n\t\t\t\t.replace(/#{userdn}/g, userdn),\n\t\t\tscope: 'sub',\n\t\t};\n\n\t\tsearchLogger.debug({ msg: 'Group filter LDAP:', filter: searchOptions.filter });\n\n\t\tconst result = await this.searchAndCount(this.options.baseDN, searchOptions);\n\n\t\tif (result === 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected addUserFilters(filters: string[], _username: string): void {\n\t\tconst { userSearchFilter } = this.options;\n\n\t\tif (userSearchFilter !== '') {\n\t\t\tif (userSearchFilter[0] === '(') {\n\t\t\t\tfilters.push(`${userSearchFilter}`);\n\t\t\t} else {\n\t\t\t\tfilters.push(`(${userSearchFilter})`);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async bindDN(dn: string, password: string): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tthis.client.bind(dn, password, (error) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doAsyncSearch<T = ldapjs.SearchEntry>(\n\t\tbaseDN: string,\n\t\tsearchOptions: ldapjs.SearchOptions,\n\t\tcallback: ILDAPCallback,\n\t\tentryCallback?: ILDAPEntryCallback<T>,\n\t): Promise<void> {\n\t\tawait this.runBeforeSearch(searchOptions);\n\n\t\tsearchLogger.debug({ msg: 'searchOptions', searchOptions, baseDN });\n\n\t\tthis.client.search(baseDN, searchOptions, (error: ldapjs.Error | null, res: ldapjs.SearchCallbackResponse): void => {\n\t\t\tif (error) {\n\t\t\t\tsearchLogger.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', (error) => {\n\t\t\t\tsearchLogger.error(error);\n\t\t\t\tcallback(error);\n\t\t\t});\n\n\t\t\tconst entries: T[] = [];\n\n\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = entryCallback ? entryCallback(entry) : entry;\n\t\t\t\t\tentries.push(result as T);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsearchLogger.error(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('end', () => {\n\t\t\t\tsearchLogger.info({ msg: 'Search result count', count: entries.length });\n\t\t\t\tcallback(null, entries);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate processSearchPage<T>(\n\t\t{ entries, title, end, next }: { entries: T[]; title: string; end: boolean; next?: () => void },\n\t\tcallback: ILDAPPageCallback,\n\t): void {\n\t\tsearchLogger.info(title);\n\t\t// Force LDAP idle to wait the record processing\n\t\tthis._updateIdle(true);\n\n\t\tcallback(null, entries, {\n\t\t\tend,\n\t\t\tnext: () => {\n\t\t\t\t// Reset idle timer\n\t\t\t\tthis._updateIdle();\n\t\t\t\tnext?.();\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate async doPagedSearch<T = ldapjs.SearchEntry>(\n\t\tbaseDN: string,\n\t\tsearchOptions: ldapjs.SearchOptions,\n\t\tpageSize: number,\n\t\tcallback: ILDAPPageCallback,\n\t\tentryCallback?: ILDAPEntryCallback<T>,\n\t): Promise<void> {\n\t\tsearchOptions.paged = {\n\t\t\tpageSize,\n\t\t\tpagePause: true,\n\t\t};\n\n\t\tawait this.runBeforeSearch(searchOptions);\n\n\t\tsearchLogger.debug({ msg: 'searchOptions', searchOptions, baseDN });\n\n\t\tthis.client.search(baseDN, searchOptions, (error: ldapjs.Error | null, res: ldapjs.SearchCallbackResponse): void => {\n\t\t\tif (error) {\n\t\t\t\tsearchLogger.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', (error) => {\n\t\t\t\tsearchLogger.error(error);\n\t\t\t\tcallback(error);\n\t\t\t});\n\n\t\t\tlet entries: T[] = [];\n\t\t\tconst internalPageSize = pageSize * 2;\n\n\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = entryCallback ? entryCallback(entry) : entry;\n\t\t\t\t\tentries.push(result as T);\n\n\t\t\t\t\tif (entries.length >= internalPageSize) {\n\t\t\t\t\t\tthis.processSearchPage<T>(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\t\ttitle: 'Internal Page',\n\t\t\t\t\t\t\t\tend: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcallback,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tentries = [];\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsearchLogger.error(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('page', (_result, next) => {\n\t\t\t\tif (!next) {\n\t\t\t\t\tthis._updateIdle(true);\n\t\t\t\t\tthis.processSearchPage<T>(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\ttitle: 'Final Page',\n\t\t\t\t\t\t\tend: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback,\n\t\t\t\t\t);\n\t\t\t\t\tentries = [];\n\t\t\t\t} else if (entries.length) {\n\t\t\t\t\tthis.processSearchPage<T>(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\ttitle: 'Page',\n\t\t\t\t\t\t\tend: false,\n\t\t\t\t\t\t\tnext,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback,\n\t\t\t\t\t);\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('end', () => {\n\t\t\t\tif (entries.length) {\n\t\t\t\t\tthis.processSearchPage<T>(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\ttitle: 'Final Page',\n\t\t\t\t\t\t\tend: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback,\n\t\t\t\t\t);\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _updateIdle(override?: boolean): void {\n\t\t// @ts-expect-error use a private function to signal to the lib that we're still working\n\t\tthis.client._updateIdle(override);\n\t}\n\n\tprotected async maybeBindDN({ forceBindAuthenticationUser = false } = {}): Promise<void> {\n\t\tif (!forceBindAuthenticationUser && (this.usingAuthentication || !this.options.authentication)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.options.authenticationUserDN) {\n\t\t\tlogger.error('Invalid UserDN for authentication');\n\t\t\treturn;\n\t\t}\n\n\t\tbindLogger.info({ msg: 'Binding UserDN', userDN: this.options.authenticationUserDN });\n\t\ttry {\n\t\t\tawait this.bindDN(this.options.authenticationUserDN, this.options.authenticationPassword);\n\t\t\tthis.usingAuthentication = true;\n\t\t} catch (error) {\n\t\t\tauthLogger.error({\n\t\t\t\tmsg: 'Base Authentication Issue',\n\t\t\t\terr: error,\n\t\t\t\tdn: this.options.authenticationUserDN,\n\t\t\t});\n\t\t\tthis.usingAuthentication = false;\n\t\t}\n\t}\n\n\tprotected async runBeforeSearch(_searchOptions: ldapjs.SearchOptions): Promise<void> {\n\t\treturn this.maybeBindDN();\n\t}\n\n\tpublic async bindAuthenticationUser(): Promise<void> {\n\t\treturn this.maybeBindDN({ forceBindAuthenticationUser: true });\n\t}\n\n\t/*\n\t\tGet list of options to initialize a new ldapjs Client\n\t*/\n\tprivate getClientOptions(): {\n\t\tclientOptions: ldapjs.ClientOptions;\n\t\ttlsOptions: Record<string, any>;\n\t} {\n\t\tconst clientOptions: ldapjs.ClientOptions = {\n\t\t\turl: `${this.options.host}:${this.options.port}`,\n\t\t\ttimeout: this.options.timeout,\n\t\t\tconnectTimeout: this.options.connectionTimeout,\n\t\t\tidleTimeout: this.options.idleTimeout,\n\t\t\treconnect: this.options.reconnect,\n\t\t\tlog: connLogger,\n\t\t};\n\n\t\tconst tlsOptions: Record<string, any> = {\n\t\t\trejectUnauthorized: this.options.rejectUnauthorized,\n\t\t};\n\n\t\tif (this.options.caCert) {\n\t\t\t// Split CA cert into array of strings\n\t\t\tconst chainLines = this.options.caCert.split('\\n');\n\t\t\tlet cert: string[] = [];\n\t\t\tconst ca: string[] = [];\n\t\t\tchainLines.forEach((line) => {\n\t\t\t\tcert.push(line);\n\t\t\t\tif (line.match(/-END CERTIFICATE-/)) {\n\t\t\t\t\tca.push(cert.join('\\n'));\n\t\t\t\t\tcert = [];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttlsOptions.ca = ca;\n\t\t}\n\n\t\tif (this.options.encryption === 'ssl') {\n\t\t\tclientOptions.url = `ldaps://${clientOptions.url}`;\n\t\t\tclientOptions.tlsOptions = tlsOptions;\n\t\t} else {\n\t\t\tclientOptions.url = `ldap://${clientOptions.url}`;\n\t\t}\n\n\t\treturn {\n\t\t\tclientOptions,\n\t\t\ttlsOptions,\n\t\t};\n\t}\n\n\tprivate handleConnectionResponse(error: any, response?: any): void {\n\t\tif (!this._receivedResponse) {\n\t\t\tthis._receivedResponse = true;\n\t\t\tthis._connectionCallback(error, response);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._connectionTimedOut && !error) {\n\t\t\tconnLogger.info('Received a response after the connection timedout.');\n\t\t} else {\n\t\t\tlogger.debug('Ignored error/response:');\n\t\t}\n\n\t\tif (error) {\n\t\t\tconnLogger.debug(error);\n\t\t} else {\n\t\t\tconnLogger.debug(response);\n\t\t}\n\t}\n\n\tprivate initializeConnection(callback: ILDAPCallback): void {\n\t\tconnLogger.info('Init Setup');\n\t\tthis._receivedResponse = false;\n\t\tthis._connectionTimedOut = false;\n\t\tthis._connectionCallback = callback;\n\n\t\tconst { clientOptions, tlsOptions } = this.getClientOptions();\n\t\tconnLogger.info({ msg: 'Connecting', url: clientOptions.url });\n\t\tconnLogger.debug({ msg: 'clientOptions', clientOptions });\n\n\t\tthis.client = ldapjs.createClient(clientOptions);\n\n\t\tthis.client.on('error', (error) => {\n\t\t\tconnLogger.error(error);\n\t\t\tthis.handleConnectionResponse(error, null);\n\t\t});\n\n\t\tthis.client.on('idle', () => {\n\t\t\tsearchLogger.info('Idle');\n\t\t\tthis.disconnect();\n\t\t});\n\n\t\tthis.client.on('close', () => {\n\t\t\tsearchLogger.info('Closed');\n\t\t});\n\n\t\tif (this.options.encryption === 'tls') {\n\t\t\t// Set host parameter for tls.connect which is used by ldapjs starttls. This may not be needed anymore\n\t\t\t// https://github.com/RocketChat/Rocket.Chat/issues/2035\n\t\t\t// https://github.com/mcavage/node-ldapjs/issues/349\n\t\t\ttlsOptions.host = this.options.host;\n\n\t\t\tconnLogger.info('Starting TLS');\n\t\t\tconnLogger.debug({ msg: 'tlsOptions', tlsOptions });\n\n\t\t\tthis.client.starttls(tlsOptions, null, (error, response) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconnLogger.error({ msg: 'TLS connection', error });\n\t\t\t\t\treturn this.handleConnectionResponse(error, null);\n\t\t\t\t}\n\n\t\t\t\tconnLogger.info('TLS connected');\n\t\t\t\tthis.connected = true;\n\t\t\t\tthis.handleConnectionResponse(null, response);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.client.on('connect', (response) => {\n\t\t\t\tconnLogger.info('LDAP connected');\n\t\t\t\tthis.connected = true;\n\t\t\t\tthis.handleConnectionResponse(null, response);\n\t\t\t});\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tif (!this._receivedResponse) {\n\t\t\t\tconnLogger.error({ msg: 'connection time out', timeout: clientOptions.connectTimeout });\n\t\t\t\tthis.handleConnectionResponse(new Error('Timeout'));\n\t\t\t\tthis._connectionTimedOut = true;\n\t\t\t}\n\t\t}, clientOptions.connectTimeout);\n\t}\n\n\tprivate parseAttributeList(csv: string | undefined): Array<string> {\n\t\tif (!csv) {\n\t\t\treturn ['*', '+'];\n\t\t}\n\n\t\tconst list = csv.split(',').map((item) => item.trim());\n\t\tif (!list?.length) {\n\t\t\treturn ['*', '+'];\n\t\t}\n\n\t\treturn list;\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      LDAPConnection: () => LDAPConnection\n    });\n    let ldapjs;\n    module.link(\"ldapjs\", {\n      default(v) {\n        ldapjs = v;\n      }\n    }, 0);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 1);\n    let ensureArray;\n    module.link(\"../../../lib/utils/arrayUtils\", {\n      ensureArray(v) {\n        ensureArray = v;\n      }\n    }, 2);\n    let logger, connLogger, searchLogger, authLogger, bindLogger, mapLogger;\n    module.link(\"./Logger\", {\n      logger(v) {\n        logger = v;\n      },\n      connLogger(v) {\n        connLogger = v;\n      },\n      searchLogger(v) {\n        searchLogger = v;\n      },\n      authLogger(v) {\n        authLogger = v;\n      },\n      bindLogger(v) {\n        bindLogger = v;\n      },\n      mapLogger(v) {\n        mapLogger = v;\n      }\n    }, 3);\n    let getLDAPConditionalSetting;\n    module.link(\"./getLDAPConditionalSetting\", {\n      getLDAPConditionalSetting(v) {\n        getLDAPConditionalSetting = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class LDAPConnection {\n      constructor() {\n        var _settings$get, _settings$get2, _settings$get3, _settings$get4, _settings$get5, _settings$get6, _settings$get7, _settings$get8, _settings$get9, _settings$get10, _getLDAPConditionalSe, _settings$get11, _settings$get12, _settings$get13, _settings$get14, _settings$get15, _settings$get16;\n        this.ldapjs = void 0;\n        this.connected = void 0;\n        this.options = void 0;\n        this.client = void 0;\n        this._receivedResponse = void 0;\n        this._connectionTimedOut = void 0;\n        this._connectionCallback = void 0;\n        this.usingAuthentication = void 0;\n        this.ldapjs = ldapjs;\n        this.connected = false;\n        this._receivedResponse = false;\n        this._connectionTimedOut = false;\n        this.options = {\n          host: (_settings$get = settings.get('LDAP_Host')) !== null && _settings$get !== void 0 ? _settings$get : '',\n          port: (_settings$get2 = settings.get('LDAP_Port')) !== null && _settings$get2 !== void 0 ? _settings$get2 : 389,\n          reconnect: (_settings$get3 = settings.get('LDAP_Reconnect')) !== null && _settings$get3 !== void 0 ? _settings$get3 : false,\n          timeout: (_settings$get4 = settings.get('LDAP_Timeout')) !== null && _settings$get4 !== void 0 ? _settings$get4 : 60000,\n          connectionTimeout: (_settings$get5 = settings.get('LDAP_Connect_Timeout')) !== null && _settings$get5 !== void 0 ? _settings$get5 : 1000,\n          idleTimeout: (_settings$get6 = settings.get('LDAP_Idle_Timeout')) !== null && _settings$get6 !== void 0 ? _settings$get6 : 1000,\n          encryption: (_settings$get7 = settings.get('LDAP_Encryption')) !== null && _settings$get7 !== void 0 ? _settings$get7 : 'plain',\n          caCert: settings.get('LDAP_CA_Cert'),\n          rejectUnauthorized: settings.get('LDAP_Reject_Unauthorized') || false,\n          baseDN: (_settings$get8 = settings.get('LDAP_BaseDN')) !== null && _settings$get8 !== void 0 ? _settings$get8 : '',\n          userSearchFilter: (_settings$get9 = settings.get('LDAP_User_Search_Filter')) !== null && _settings$get9 !== void 0 ? _settings$get9 : '',\n          userSearchScope: (_settings$get10 = settings.get('LDAP_User_Search_Scope')) !== null && _settings$get10 !== void 0 ? _settings$get10 : 'sub',\n          userSearchField: (_getLDAPConditionalSe = getLDAPConditionalSetting('LDAP_User_Search_Field')) !== null && _getLDAPConditionalSe !== void 0 ? _getLDAPConditionalSe : '',\n          searchPageSize: (_settings$get11 = settings.get('LDAP_Search_Page_Size')) !== null && _settings$get11 !== void 0 ? _settings$get11 : 250,\n          searchSizeLimit: (_settings$get12 = settings.get('LDAP_Search_Size_Limit')) !== null && _settings$get12 !== void 0 ? _settings$get12 : 1000,\n          uniqueIdentifierField: settings.get('LDAP_Unique_Identifier_Field'),\n          groupFilterEnabled: (_settings$get13 = settings.get('LDAP_Group_Filter_Enable')) !== null && _settings$get13 !== void 0 ? _settings$get13 : false,\n          groupFilterObjectClass: settings.get('LDAP_Group_Filter_ObjectClass'),\n          groupFilterGroupIdAttribute: settings.get('LDAP_Group_Filter_Group_Id_Attribute'),\n          groupFilterGroupMemberAttribute: settings.get('LDAP_Group_Filter_Group_Member_Attribute'),\n          groupFilterGroupMemberFormat: settings.get('LDAP_Group_Filter_Group_Member_Format'),\n          groupFilterGroupName: settings.get('LDAP_Group_Filter_Group_Name'),\n          authentication: (_settings$get14 = settings.get('LDAP_Authentication')) !== null && _settings$get14 !== void 0 ? _settings$get14 : false,\n          authenticationUserDN: (_settings$get15 = settings.get('LDAP_Authentication_UserDN')) !== null && _settings$get15 !== void 0 ? _settings$get15 : '',\n          authenticationPassword: (_settings$get16 = settings.get('LDAP_Authentication_Password')) !== null && _settings$get16 !== void 0 ? _settings$get16 : '',\n          attributesToQuery: this.parseAttributeList(settings.get('LDAP_User_Search_AttributesToQuery'))\n        };\n        if (!this.options.host) {\n          logger.warn('LDAP Host is not configured.');\n        }\n        if (!this.options.baseDN) {\n          logger.warn('LDAP Search BaseDN is not configured.');\n        }\n      }\n      async connect() {\n        return new Promise((resolve, reject) => {\n          this.initializeConnection((error, result) => {\n            if (error) {\n              return reject(error);\n            }\n            return resolve(result);\n          });\n        });\n      }\n      disconnect() {\n        this.usingAuthentication = false;\n        this.connected = false;\n        connLogger.info('Disconnecting');\n        if (this.client) {\n          this.client.unbind();\n        }\n      }\n      async testConnection() {\n        try {\n          await this.connect();\n          await this.maybeBindDN();\n        } finally {\n          this.disconnect();\n        }\n      }\n      async searchByUsername(escapedUsername) {\n        const searchOptions = {\n          filter: this.getUserFilter(escapedUsername),\n          scope: this.options.userSearchScope || 'sub',\n          sizeLimit: this.options.searchSizeLimit,\n          attributes: this.options.attributesToQuery\n        };\n        if (this.options.searchPageSize > 0) {\n          searchOptions.paged = {\n            pageSize: this.options.searchPageSize,\n            pagePause: false\n          };\n        }\n        searchLogger.info({\n          msg: 'Searching by username',\n          username: escapedUsername,\n          baseDN: this.options.baseDN,\n          searchOptions\n        });\n        return this.search(this.options.baseDN, searchOptions);\n      }\n      async findOneByUsername(username) {\n        const results = await this.searchByUsername(username);\n        if (results.length === 1) {\n          return results[0];\n        }\n      }\n      async searchById(id, attribute) {\n        const searchOptions = {\n          scope: this.options.userSearchScope || 'sub',\n          attributes: this.options.attributesToQuery\n        };\n        if (attribute) {\n          searchOptions.filter = new this.ldapjs.filters.EqualityFilter({\n            attribute,\n            value: Buffer.from(id, 'hex')\n          });\n        } else if (this.options.uniqueIdentifierField) {\n          // If we don't know what attribute the id came from, we have to look for all of them.\n          const possibleFields = this.options.uniqueIdentifierField.split(',').concat(this.options.userSearchField.split(','));\n          const filters = [];\n          for (const field of possibleFields) {\n            if (!field) {\n              continue;\n            }\n            filters.push(new this.ldapjs.filters.EqualityFilter({\n              attribute: field,\n              value: Buffer.from(id, 'hex')\n            }));\n          }\n          searchOptions.filter = new this.ldapjs.filters.OrFilter({\n            filters\n          });\n        } else {\n          throw new Error('Unique Identifier Field is not configured.');\n        }\n        searchLogger.info({\n          msg: 'Searching by id',\n          id\n        });\n        searchLogger.debug({\n          msg: 'search filter',\n          searchOptions,\n          baseDN: this.options.baseDN\n        });\n        return this.search(this.options.baseDN, searchOptions);\n      }\n      async findOneById(id, attribute) {\n        const results = await this.searchById(id, attribute);\n        if (results.length === 1) {\n          return results[0];\n        }\n      }\n      async searchAllUsers(_ref) {\n        let {\n          dataCallback,\n          endCallback,\n          entryCallback\n        } = _ref;\n        searchLogger.info('Searching all users');\n        const searchOptions = {\n          filter: this.getUserFilter('*'),\n          scope: this.options.userSearchScope || 'sub',\n          sizeLimit: this.options.searchSizeLimit,\n          attributes: this.options.attributesToQuery\n        };\n        if (this.options.searchPageSize > 0) {\n          let count = 0;\n          await this.doPagedSearch(this.options.baseDN, searchOptions, this.options.searchPageSize, function (error, entries) {\n            let {\n              end,\n              next\n            } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n              end: false,\n              next: undefined\n            };\n            if (error) {\n              endCallback === null || endCallback === void 0 ? void 0 : endCallback(error);\n              return;\n            }\n            count += entries.length;\n            dataCallback === null || dataCallback === void 0 ? void 0 : dataCallback(entries);\n            if (end) {\n              endCallback === null || endCallback === void 0 ? void 0 : endCallback();\n            }\n            if (next) {\n              next(count);\n            }\n          }, entryCallback);\n          return;\n        }\n        await this.doAsyncSearch(this.options.baseDN, searchOptions, (error, result) => {\n          dataCallback === null || dataCallback === void 0 ? void 0 : dataCallback(result);\n          endCallback === null || endCallback === void 0 ? void 0 : endCallback(error);\n        }, entryCallback);\n      }\n      async authenticate(dn, password) {\n        authLogger.info({\n          msg: 'Authenticating',\n          dn\n        });\n        try {\n          await this.bindDN(dn, password);\n          authLogger.info({\n            msg: 'Authenticated',\n            dn\n          });\n          return true;\n        } catch (error) {\n          authLogger.info({\n            msg: 'Not authenticated',\n            dn\n          });\n          authLogger.debug({\n            msg: 'error',\n            error\n          });\n          return false;\n        }\n      }\n      async search(baseDN, searchOptions) {\n        return this.doCustomSearch(baseDN, searchOptions, entry => this.extractLdapEntryData(entry));\n      }\n      async searchRaw(baseDN, searchOptions) {\n        return this.doCustomSearch(baseDN, searchOptions, entry => entry);\n      }\n      async searchAndCount(baseDN, searchOptions) {\n        let count = 0;\n        await this.doCustomSearch(baseDN, searchOptions, async () => {\n          count++;\n        });\n        return count;\n      }\n      extractLdapAttribute(value) {\n        if (Array.isArray(value)) {\n          return value.map(item => this.extractLdapAttribute(item));\n        }\n        if (value instanceof Buffer) {\n          return value.toString();\n        }\n        return value;\n      }\n      extractLdapEntryData(entry) {\n        const values = {\n          _raw: entry.raw\n        };\n        Object.keys(values._raw).forEach(key => {\n          values[key] = this.extractLdapAttribute(values._raw[key]);\n          const dataType = typeof values[key];\n          // eslint-disable-next-line no-control-regex\n          if (dataType === 'string' && values[key].length > 100 && /[\\x00-\\x1F]/.test(values[key])) {\n            mapLogger.debug({\n              msg: 'Extracted Attribute',\n              key,\n              type: dataType,\n              length: values[key].length,\n              value: \"\".concat(values[key].substr(0, 100), \"...\")\n            });\n            return;\n          }\n          mapLogger.debug({\n            msg: 'Extracted Attribute',\n            key,\n            type: dataType,\n            value: values[key]\n          });\n        });\n        return values;\n      }\n      async doCustomSearch(baseDN, searchOptions, entryCallback) {\n        await this.runBeforeSearch(searchOptions);\n        if (!searchOptions.scope) {\n          searchOptions.scope = this.options.userSearchScope || 'sub';\n        }\n        searchLogger.debug({\n          msg: 'searchOptions',\n          searchOptions,\n          baseDN\n        });\n        let realEntries = 0;\n        return new Promise((resolve, reject) => {\n          this.client.search(baseDN, searchOptions, (error, res) => {\n            if (error) {\n              searchLogger.error(error);\n              reject(error);\n              return;\n            }\n            res.on('error', error => {\n              searchLogger.error(error);\n              reject(error);\n            });\n            const entries = [];\n            res.on('searchEntry', entry => {\n              try {\n                const result = entryCallback(entry);\n                if (result) {\n                  entries.push(result);\n                }\n                realEntries++;\n              } catch (e) {\n                searchLogger.error(e);\n                throw e;\n              }\n            });\n            res.on('end', () => {\n              searchLogger.info(\"LDAP Search found \".concat(realEntries, \" entries and loaded the data of \").concat(entries.length, \".\"));\n              resolve(entries);\n            });\n          });\n        });\n      }\n      /*\n          Create an LDAP search filter based on the username\n      */\n      getUserFilter(username) {\n        const filter = [];\n        this.addUserFilters(filter, username);\n        const usernameFilter = this.options.userSearchField.split(',').map(item => \"(\".concat(item, \"=\").concat(username, \")\"));\n        if (usernameFilter.length === 0) {\n          logger.error('LDAP_LDAP_User_Search_Field not defined');\n        } else if (usernameFilter.length === 1) {\n          filter.push(\"\".concat(usernameFilter[0]));\n        } else {\n          filter.push(\"(|\".concat(usernameFilter.join(''), \")\"));\n        }\n        return \"(&\".concat(filter.join(''), \")\");\n      }\n      async searchMembersOfGroupFilter() {\n        if (!this.options.groupFilterEnabled) {\n          return [];\n        }\n        if (!this.options.groupFilterGroupMemberAttribute) {\n          return [];\n        }\n        if (!this.options.groupFilterGroupMemberFormat) {\n          searchLogger.debug(\"LDAP Group Filter is enabled but no group member format is set.\");\n          return [];\n        }\n        const filter = ['(&'];\n        if (this.options.groupFilterObjectClass) {\n          filter.push(\"(objectclass=\".concat(this.options.groupFilterObjectClass, \")\"));\n        }\n        if (this.options.groupFilterGroupIdAttribute) {\n          filter.push(\"(\".concat(this.options.groupFilterGroupIdAttribute, \"=\").concat(this.options.groupFilterGroupName, \")\"));\n        }\n        filter.push(')');\n        const searchOptions = {\n          filter: filter.join(''),\n          scope: 'sub'\n        };\n        searchLogger.debug({\n          msg: 'Group filter LDAP:',\n          filter: searchOptions.filter\n        });\n        const result = await this.searchRaw(this.options.baseDN, searchOptions);\n        if (!Array.isArray(result) || result.length === 0) {\n          searchLogger.debug({\n            msg: 'No groups found',\n            result\n          });\n          return [];\n        }\n        const members = this.extractLdapAttribute(result[0].raw[this.options.groupFilterGroupMemberAttribute]);\n        return ensureArray(members);\n      }\n      async isUserAcceptedByGroupFilter(username, userdn) {\n        if (!this.options.groupFilterEnabled) {\n          return true;\n        }\n        const filter = ['(&'];\n        if (this.options.groupFilterObjectClass) {\n          filter.push(\"(objectclass=\".concat(this.options.groupFilterObjectClass, \")\"));\n        }\n        if (this.options.groupFilterGroupMemberAttribute) {\n          filter.push(\"(\".concat(this.options.groupFilterGroupMemberAttribute, \"=\").concat(this.options.groupFilterGroupMemberFormat, \")\"));\n        }\n        if (this.options.groupFilterGroupIdAttribute) {\n          filter.push(\"(\".concat(this.options.groupFilterGroupIdAttribute, \"=\").concat(this.options.groupFilterGroupName, \")\"));\n        }\n        filter.push(')');\n        const searchOptions = {\n          filter: filter.join('').replace(/#{username}/g, username).replace(/#{userdn}/g, userdn),\n          scope: 'sub'\n        };\n        searchLogger.debug({\n          msg: 'Group filter LDAP:',\n          filter: searchOptions.filter\n        });\n        const result = await this.searchAndCount(this.options.baseDN, searchOptions);\n        if (result === 0) {\n          return false;\n        }\n        return true;\n      }\n      addUserFilters(filters, _username) {\n        const {\n          userSearchFilter\n        } = this.options;\n        if (userSearchFilter !== '') {\n          if (userSearchFilter[0] === '(') {\n            filters.push(\"\".concat(userSearchFilter));\n          } else {\n            filters.push(\"(\".concat(userSearchFilter, \")\"));\n          }\n        }\n      }\n      async bindDN(dn, password) {\n        return new Promise((resolve, reject) => {\n          try {\n            this.client.bind(dn, password, error => {\n              if (error) {\n                return reject(error);\n              }\n              resolve();\n            });\n          } catch (error) {\n            reject(error);\n          }\n        });\n      }\n      async doAsyncSearch(baseDN, searchOptions, callback, entryCallback) {\n        await this.runBeforeSearch(searchOptions);\n        searchLogger.debug({\n          msg: 'searchOptions',\n          searchOptions,\n          baseDN\n        });\n        this.client.search(baseDN, searchOptions, (error, res) => {\n          if (error) {\n            searchLogger.error(error);\n            callback(error);\n            return;\n          }\n          res.on('error', error => {\n            searchLogger.error(error);\n            callback(error);\n          });\n          const entries = [];\n          res.on('searchEntry', entry => {\n            try {\n              const result = entryCallback ? entryCallback(entry) : entry;\n              entries.push(result);\n            } catch (e) {\n              searchLogger.error(e);\n              throw e;\n            }\n          });\n          res.on('end', () => {\n            searchLogger.info({\n              msg: 'Search result count',\n              count: entries.length\n            });\n            callback(null, entries);\n          });\n        });\n      }\n      processSearchPage(_ref2, callback) {\n        let {\n          entries,\n          title,\n          end,\n          next\n        } = _ref2;\n        searchLogger.info(title);\n        // Force LDAP idle to wait the record processing\n        this._updateIdle(true);\n        callback(null, entries, {\n          end,\n          next: () => {\n            // Reset idle timer\n            this._updateIdle();\n            next === null || next === void 0 ? void 0 : next();\n          }\n        });\n      }\n      async doPagedSearch(baseDN, searchOptions, pageSize, callback, entryCallback) {\n        searchOptions.paged = {\n          pageSize,\n          pagePause: true\n        };\n        await this.runBeforeSearch(searchOptions);\n        searchLogger.debug({\n          msg: 'searchOptions',\n          searchOptions,\n          baseDN\n        });\n        this.client.search(baseDN, searchOptions, (error, res) => {\n          if (error) {\n            searchLogger.error(error);\n            callback(error);\n            return;\n          }\n          res.on('error', error => {\n            searchLogger.error(error);\n            callback(error);\n          });\n          let entries = [];\n          const internalPageSize = pageSize * 2;\n          res.on('searchEntry', entry => {\n            try {\n              const result = entryCallback ? entryCallback(entry) : entry;\n              entries.push(result);\n              if (entries.length >= internalPageSize) {\n                this.processSearchPage({\n                  entries,\n                  title: 'Internal Page',\n                  end: false\n                }, callback);\n                entries = [];\n              }\n            } catch (e) {\n              searchLogger.error(e);\n              throw e;\n            }\n          });\n          res.on('page', (_result, next) => {\n            if (!next) {\n              this._updateIdle(true);\n              this.processSearchPage({\n                entries,\n                title: 'Final Page',\n                end: true\n              }, callback);\n              entries = [];\n            } else if (entries.length) {\n              this.processSearchPage({\n                entries,\n                title: 'Page',\n                end: false,\n                next\n              }, callback);\n              entries = [];\n            }\n          });\n          res.on('end', () => {\n            if (entries.length) {\n              this.processSearchPage({\n                entries,\n                title: 'Final Page',\n                end: true\n              }, callback);\n              entries = [];\n            }\n          });\n        });\n      }\n      _updateIdle(override) {\n        // @ts-expect-error use a private function to signal to the lib that we're still working\n        this.client._updateIdle(override);\n      }\n      async maybeBindDN() {\n        let {\n          forceBindAuthenticationUser = false\n        } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        if (!forceBindAuthenticationUser && (this.usingAuthentication || !this.options.authentication)) {\n          return;\n        }\n        if (!this.options.authenticationUserDN) {\n          logger.error('Invalid UserDN for authentication');\n          return;\n        }\n        bindLogger.info({\n          msg: 'Binding UserDN',\n          userDN: this.options.authenticationUserDN\n        });\n        try {\n          await this.bindDN(this.options.authenticationUserDN, this.options.authenticationPassword);\n          this.usingAuthentication = true;\n        } catch (error) {\n          authLogger.error({\n            msg: 'Base Authentication Issue',\n            err: error,\n            dn: this.options.authenticationUserDN\n          });\n          this.usingAuthentication = false;\n        }\n      }\n      async runBeforeSearch(_searchOptions) {\n        return this.maybeBindDN();\n      }\n      async bindAuthenticationUser() {\n        return this.maybeBindDN({\n          forceBindAuthenticationUser: true\n        });\n      }\n      /*\n          Get list of options to initialize a new ldapjs Client\n      */\n      getClientOptions() {\n        const clientOptions = {\n          url: \"\".concat(this.options.host, \":\").concat(this.options.port),\n          timeout: this.options.timeout,\n          connectTimeout: this.options.connectionTimeout,\n          idleTimeout: this.options.idleTimeout,\n          reconnect: this.options.reconnect,\n          log: connLogger\n        };\n        const tlsOptions = {\n          rejectUnauthorized: this.options.rejectUnauthorized\n        };\n        if (this.options.caCert) {\n          // Split CA cert into array of strings\n          const chainLines = this.options.caCert.split('\\n');\n          let cert = [];\n          const ca = [];\n          chainLines.forEach(line => {\n            cert.push(line);\n            if (line.match(/-END CERTIFICATE-/)) {\n              ca.push(cert.join('\\n'));\n              cert = [];\n            }\n          });\n          tlsOptions.ca = ca;\n        }\n        if (this.options.encryption === 'ssl') {\n          clientOptions.url = \"ldaps://\".concat(clientOptions.url);\n          clientOptions.tlsOptions = tlsOptions;\n        } else {\n          clientOptions.url = \"ldap://\".concat(clientOptions.url);\n        }\n        return {\n          clientOptions,\n          tlsOptions\n        };\n      }\n      handleConnectionResponse(error, response) {\n        if (!this._receivedResponse) {\n          this._receivedResponse = true;\n          this._connectionCallback(error, response);\n          return;\n        }\n        if (this._connectionTimedOut && !error) {\n          connLogger.info('Received a response after the connection timedout.');\n        } else {\n          logger.debug('Ignored error/response:');\n        }\n        if (error) {\n          connLogger.debug(error);\n        } else {\n          connLogger.debug(response);\n        }\n      }\n      initializeConnection(callback) {\n        connLogger.info('Init Setup');\n        this._receivedResponse = false;\n        this._connectionTimedOut = false;\n        this._connectionCallback = callback;\n        const {\n          clientOptions,\n          tlsOptions\n        } = this.getClientOptions();\n        connLogger.info({\n          msg: 'Connecting',\n          url: clientOptions.url\n        });\n        connLogger.debug({\n          msg: 'clientOptions',\n          clientOptions\n        });\n        this.client = ldapjs.createClient(clientOptions);\n        this.client.on('error', error => {\n          connLogger.error(error);\n          this.handleConnectionResponse(error, null);\n        });\n        this.client.on('idle', () => {\n          searchLogger.info('Idle');\n          this.disconnect();\n        });\n        this.client.on('close', () => {\n          searchLogger.info('Closed');\n        });\n        if (this.options.encryption === 'tls') {\n          // Set host parameter for tls.connect which is used by ldapjs starttls. This may not be needed anymore\n          // https://github.com/RocketChat/Rocket.Chat/issues/2035\n          // https://github.com/mcavage/node-ldapjs/issues/349\n          tlsOptions.host = this.options.host;\n          connLogger.info('Starting TLS');\n          connLogger.debug({\n            msg: 'tlsOptions',\n            tlsOptions\n          });\n          this.client.starttls(tlsOptions, null, (error, response) => {\n            if (error) {\n              connLogger.error({\n                msg: 'TLS connection',\n                error\n              });\n              return this.handleConnectionResponse(error, null);\n            }\n            connLogger.info('TLS connected');\n            this.connected = true;\n            this.handleConnectionResponse(null, response);\n          });\n        } else {\n          this.client.on('connect', response => {\n            connLogger.info('LDAP connected');\n            this.connected = true;\n            this.handleConnectionResponse(null, response);\n          });\n        }\n        setTimeout(() => {\n          if (!this._receivedResponse) {\n            connLogger.error({\n              msg: 'connection time out',\n              timeout: clientOptions.connectTimeout\n            });\n            this.handleConnectionResponse(new Error('Timeout'));\n            this._connectionTimedOut = true;\n          }\n        }, clientOptions.connectTimeout);\n      }\n      parseAttributeList(csv) {\n        if (!csv) {\n          return ['*', '+'];\n        }\n        const list = csv.split(',').map(item => item.trim());\n        if (!(list !== null && list !== void 0 && list.length)) {\n          return ['*', '+'];\n        }\n        return list;\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","LDAPConnection","ldapjs","link","default","v","settings","ensureArray","logger","connLogger","searchLogger","authLogger","bindLogger","mapLogger","getLDAPConditionalSetting","__reifyWaitForDeps__","constructor","_settings$get","_settings$get2","_settings$get3","_settings$get4","_settings$get5","_settings$get6","_settings$get7","_settings$get8","_settings$get9","_settings$get10","_getLDAPConditionalSe","_settings$get11","_settings$get12","_settings$get13","_settings$get14","_settings$get15","_settings$get16","connected","options","client","_receivedResponse","_connectionTimedOut","_connectionCallback","usingAuthentication","host","get","port","reconnect","timeout","connectionTimeout","idleTimeout","encryption","caCert","rejectUnauthorized","baseDN","userSearchFilter","userSearchScope","userSearchField","searchPageSize","searchSizeLimit","uniqueIdentifierField","groupFilterEnabled","groupFilterObjectClass","groupFilterGroupIdAttribute","groupFilterGroupMemberAttribute","groupFilterGroupMemberFormat","groupFilterGroupName","authentication","authenticationUserDN","authenticationPassword","attributesToQuery","parseAttributeList","warn","connect","Promise","resolve","reject","initializeConnection","error","result","disconnect","info","unbind","testConnection","maybeBindDN","searchByUsername","escapedUsername","searchOptions","filter","getUserFilter","scope","sizeLimit","attributes","paged","pageSize","pagePause","msg","username","search","findOneByUsername","results","length","searchById","id","attribute","filters","EqualityFilter","value","Buffer","from","possibleFields","split","concat","field","push","OrFilter","Error","debug","findOneById","searchAllUsers","_ref","dataCallback","endCallback","entryCallback","count","doPagedSearch","entries","end","next","arguments","undefined","doAsyncSearch","authenticate","dn","password","bindDN","doCustomSearch","entry","extractLdapEntryData","searchRaw","searchAndCount","extractLdapAttribute","Array","isArray","map","item","toString","values","_raw","raw","Object","keys","forEach","key","dataType","test","type","substr","runBeforeSearch","realEntries","res","on","e","addUserFilters","usernameFilter","join","searchMembersOfGroupFilter","members","isUserAcceptedByGroupFilter","userdn","replace","_username","bind","callback","processSearchPage","_ref2","title","_updateIdle","internalPageSize","_result","override","forceBindAuthenticationUser","userDN","err","_searchOptions","bindAuthenticationUser","getClientOptions","clientOptions","url","connectTimeout","log","tlsOptions","chainLines","cert","ca","line","match","handleConnectionResponse","response","createClient","starttls","setTimeout","csv","list","trim","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/ldap/Connection.ts"],"sourcesContent":["import type {\n\tILDAPConnectionOptions,\n\tLDAPEncryptionType,\n\tLDAPSearchScope,\n\tILDAPEntry,\n\tILDAPCallback,\n\tILDAPPageCallback,\n} from '@rocket.chat/core-typings';\nimport ldapjs from 'ldapjs';\n\nimport { settings } from '../../../app/settings/server';\nimport { ensureArray } from '../../../lib/utils/arrayUtils';\nimport { logger, connLogger, searchLogger, authLogger, bindLogger, mapLogger } from './Logger';\nimport { getLDAPConditionalSetting } from './getLDAPConditionalSetting';\n\ninterface ILDAPEntryCallback<T> {\n\t(entry: ldapjs.SearchEntry): T | undefined;\n}\n\ninterface ILDAPSearchEndCallback {\n\t(error?: any): void;\n}\n\ninterface ILDAPSearchPageCallback {\n\t(result: ldapjs.SearchEntry[]): void;\n}\n\ninterface ILDAPSearchAllCallbacks<T> {\n\tdataCallback?: ILDAPSearchPageCallback;\n\tendCallback?: ILDAPSearchEndCallback;\n\tentryCallback?: ILDAPEntryCallback<T>;\n}\n\ntype ILDAPExtractedValue = string | Array<ILDAPExtractedValue>;\n\nexport class LDAPConnection {\n\tpublic ldapjs: any;\n\n\tpublic connected: boolean;\n\n\tpublic options: ILDAPConnectionOptions;\n\n\tpublic client: ldapjs.Client;\n\n\tprivate _receivedResponse: boolean;\n\n\tprivate _connectionTimedOut: boolean;\n\n\tprivate _connectionCallback: ILDAPCallback;\n\n\tprivate usingAuthentication: boolean;\n\n\tconstructor() {\n\t\tthis.ldapjs = ldapjs;\n\n\t\tthis.connected = false;\n\t\tthis._receivedResponse = false;\n\t\tthis._connectionTimedOut = false;\n\n\t\tthis.options = {\n\t\t\thost: settings.get<string>('LDAP_Host') ?? '',\n\t\t\tport: settings.get<number>('LDAP_Port') ?? 389,\n\t\t\treconnect: settings.get<boolean>('LDAP_Reconnect') ?? false,\n\t\t\ttimeout: settings.get<number>('LDAP_Timeout') ?? 60000,\n\t\t\tconnectionTimeout: settings.get<number>('LDAP_Connect_Timeout') ?? 1000,\n\t\t\tidleTimeout: settings.get<number>('LDAP_Idle_Timeout') ?? 1000,\n\t\t\tencryption: settings.get<LDAPEncryptionType>('LDAP_Encryption') ?? 'plain',\n\t\t\tcaCert: settings.get<string>('LDAP_CA_Cert'),\n\t\t\trejectUnauthorized: settings.get<boolean>('LDAP_Reject_Unauthorized') || false,\n\t\t\tbaseDN: settings.get<string>('LDAP_BaseDN') ?? '',\n\t\t\tuserSearchFilter: settings.get<string>('LDAP_User_Search_Filter') ?? '',\n\t\t\tuserSearchScope: settings.get<LDAPSearchScope>('LDAP_User_Search_Scope') ?? 'sub',\n\t\t\tuserSearchField: getLDAPConditionalSetting<string>('LDAP_User_Search_Field') ?? '',\n\t\t\tsearchPageSize: settings.get<number>('LDAP_Search_Page_Size') ?? 250,\n\t\t\tsearchSizeLimit: settings.get<number>('LDAP_Search_Size_Limit') ?? 1000,\n\t\t\tuniqueIdentifierField: settings.get<string>('LDAP_Unique_Identifier_Field'),\n\t\t\tgroupFilterEnabled: settings.get<boolean>('LDAP_Group_Filter_Enable') ?? false,\n\t\t\tgroupFilterObjectClass: settings.get<string>('LDAP_Group_Filter_ObjectClass'),\n\t\t\tgroupFilterGroupIdAttribute: settings.get<string>('LDAP_Group_Filter_Group_Id_Attribute'),\n\t\t\tgroupFilterGroupMemberAttribute: settings.get<string>('LDAP_Group_Filter_Group_Member_Attribute'),\n\t\t\tgroupFilterGroupMemberFormat: settings.get<string>('LDAP_Group_Filter_Group_Member_Format'),\n\t\t\tgroupFilterGroupName: settings.get<string>('LDAP_Group_Filter_Group_Name'),\n\t\t\tauthentication: settings.get<boolean>('LDAP_Authentication') ?? false,\n\t\t\tauthenticationUserDN: settings.get<string>('LDAP_Authentication_UserDN') ?? '',\n\t\t\tauthenticationPassword: settings.get<string>('LDAP_Authentication_Password') ?? '',\n\t\t\tattributesToQuery: this.parseAttributeList(settings.get<string>('LDAP_User_Search_AttributesToQuery')),\n\t\t};\n\n\t\tif (!this.options.host) {\n\t\t\tlogger.warn('LDAP Host is not configured.');\n\t\t}\n\t\tif (!this.options.baseDN) {\n\t\t\tlogger.warn('LDAP Search BaseDN is not configured.');\n\t\t}\n\t}\n\n\tpublic async connect(): Promise<any> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.initializeConnection((error, result) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\treturn resolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic disconnect(): void {\n\t\tthis.usingAuthentication = false;\n\t\tthis.connected = false;\n\t\tconnLogger.info('Disconnecting');\n\n\t\tif (this.client) {\n\t\t\tthis.client.unbind();\n\t\t}\n\t}\n\n\tpublic async testConnection(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.connect();\n\t\t\tawait this.maybeBindDN();\n\t\t} finally {\n\t\t\tthis.disconnect();\n\t\t}\n\t}\n\n\tpublic async searchByUsername(escapedUsername: string): Promise<ILDAPEntry[]> {\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tfilter: this.getUserFilter(escapedUsername),\n\t\t\tscope: this.options.userSearchScope || 'sub',\n\t\t\tsizeLimit: this.options.searchSizeLimit,\n\t\t\tattributes: this.options.attributesToQuery,\n\t\t};\n\n\t\tif (this.options.searchPageSize > 0) {\n\t\t\tsearchOptions.paged = {\n\t\t\t\tpageSize: this.options.searchPageSize,\n\t\t\t\tpagePause: false,\n\t\t\t};\n\t\t}\n\n\t\tsearchLogger.info({\n\t\t\tmsg: 'Searching by username',\n\t\t\tusername: escapedUsername,\n\t\t\tbaseDN: this.options.baseDN,\n\t\t\tsearchOptions,\n\t\t});\n\t\treturn this.search(this.options.baseDN, searchOptions);\n\t}\n\n\tpublic async findOneByUsername(username: string): Promise<ILDAPEntry | undefined> {\n\t\tconst results = await this.searchByUsername(username);\n\n\t\tif (results.length === 1) {\n\t\t\treturn results[0];\n\t\t}\n\t}\n\n\tpublic async searchById(id: string, attribute?: string): Promise<ILDAPEntry[]> {\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tscope: this.options.userSearchScope || 'sub',\n\t\t\tattributes: this.options.attributesToQuery,\n\t\t};\n\n\t\tif (attribute) {\n\t\t\tsearchOptions.filter = new this.ldapjs.filters.EqualityFilter({\n\t\t\t\tattribute,\n\t\t\t\tvalue: Buffer.from(id, 'hex'),\n\t\t\t});\n\t\t} else if (this.options.uniqueIdentifierField) {\n\t\t\t// If we don't know what attribute the id came from, we have to look for all of them.\n\t\t\tconst possibleFields = this.options.uniqueIdentifierField.split(',').concat(this.options.userSearchField.split(','));\n\t\t\tconst filters = [];\n\t\t\tfor (const field of possibleFields) {\n\t\t\t\tif (!field) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfilters.push(\n\t\t\t\t\tnew this.ldapjs.filters.EqualityFilter({\n\t\t\t\t\t\tattribute: field,\n\t\t\t\t\t\tvalue: Buffer.from(id, 'hex'),\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t\tsearchOptions.filter = new this.ldapjs.filters.OrFilter({ filters });\n\t\t} else {\n\t\t\tthrow new Error('Unique Identifier Field is not configured.');\n\t\t}\n\n\t\tsearchLogger.info({ msg: 'Searching by id', id });\n\t\tsearchLogger.debug({ msg: 'search filter', searchOptions, baseDN: this.options.baseDN });\n\n\t\treturn this.search(this.options.baseDN, searchOptions);\n\t}\n\n\tpublic async findOneById(id: string, attribute?: string): Promise<ILDAPEntry | undefined> {\n\t\tconst results = await this.searchById(id, attribute);\n\t\tif (results.length === 1) {\n\t\t\treturn results[0];\n\t\t}\n\t}\n\n\tpublic async searchAllUsers<T = ldapjs.SearchEntry>({\n\t\tdataCallback,\n\t\tendCallback,\n\t\tentryCallback,\n\t}: ILDAPSearchAllCallbacks<T>): Promise<void> {\n\t\tsearchLogger.info('Searching all users');\n\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tfilter: this.getUserFilter('*'),\n\t\t\tscope: this.options.userSearchScope || 'sub',\n\t\t\tsizeLimit: this.options.searchSizeLimit,\n\t\t\tattributes: this.options.attributesToQuery,\n\t\t};\n\n\t\tif (this.options.searchPageSize > 0) {\n\t\t\tlet count = 0;\n\t\t\tawait this.doPagedSearch<T>(\n\t\t\t\tthis.options.baseDN,\n\t\t\t\tsearchOptions,\n\t\t\t\tthis.options.searchPageSize,\n\t\t\t\t(error, entries: ldapjs.SearchEntry[], { end, next } = { end: false, next: undefined }) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tendCallback?.(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcount += entries.length;\n\t\t\t\t\tdataCallback?.(entries);\n\t\t\t\t\tif (end) {\n\t\t\t\t\t\tendCallback?.();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnext(count);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tentryCallback,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.doAsyncSearch(\n\t\t\tthis.options.baseDN,\n\t\t\tsearchOptions,\n\t\t\t(error, result) => {\n\t\t\t\tdataCallback?.(result);\n\t\t\t\tendCallback?.(error);\n\t\t\t},\n\t\t\tentryCallback,\n\t\t);\n\t}\n\n\tpublic async authenticate(dn: string, password: string): Promise<boolean> {\n\t\tauthLogger.info({ msg: 'Authenticating', dn });\n\n\t\ttry {\n\t\t\tawait this.bindDN(dn, password);\n\n\t\t\tauthLogger.info({ msg: 'Authenticated', dn });\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tauthLogger.info({ msg: 'Not authenticated', dn });\n\t\t\tauthLogger.debug({ msg: 'error', error });\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic async search(baseDN: string, searchOptions: ldapjs.SearchOptions): Promise<ILDAPEntry[]> {\n\t\treturn this.doCustomSearch<ILDAPEntry>(baseDN, searchOptions, (entry) => this.extractLdapEntryData(entry));\n\t}\n\n\tpublic async searchRaw(baseDN: string, searchOptions: ldapjs.SearchOptions): Promise<ldapjs.SearchEntry[]> {\n\t\treturn this.doCustomSearch<ldapjs.SearchEntry>(baseDN, searchOptions, (entry) => entry);\n\t}\n\n\tpublic async searchAndCount(baseDN: string, searchOptions: ldapjs.SearchOptions): Promise<number> {\n\t\tlet count = 0;\n\t\tawait this.doCustomSearch(baseDN, searchOptions, async () => {\n\t\t\tcount++;\n\t\t});\n\n\t\treturn count;\n\t}\n\n\tpublic extractLdapAttribute(value: Buffer | Buffer[] | string): ILDAPExtractedValue {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value.map((item) => this.extractLdapAttribute(item));\n\t\t}\n\n\t\tif (value instanceof Buffer) {\n\t\t\treturn value.toString();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic extractLdapEntryData(entry: ldapjs.SearchEntry): ILDAPEntry {\n\t\tconst values: ILDAPEntry = {\n\t\t\t_raw: entry.raw,\n\t\t};\n\n\t\tObject.keys(values._raw).forEach((key) => {\n\t\t\tvalues[key] = this.extractLdapAttribute(values._raw[key]);\n\n\t\t\tconst dataType = typeof values[key];\n\t\t\t// eslint-disable-next-line no-control-regex\n\t\t\tif (dataType === 'string' && values[key].length > 100 && /[\\x00-\\x1F]/.test(values[key])) {\n\t\t\t\tmapLogger.debug({\n\t\t\t\t\tmsg: 'Extracted Attribute',\n\t\t\t\t\tkey,\n\t\t\t\t\ttype: dataType,\n\t\t\t\t\tlength: values[key].length,\n\t\t\t\t\tvalue: `${values[key].substr(0, 100)}...`,\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmapLogger.debug({ msg: 'Extracted Attribute', key, type: dataType, value: values[key] });\n\t\t});\n\n\t\treturn values;\n\t}\n\n\tpublic async doCustomSearch<T>(baseDN: string, searchOptions: ldapjs.SearchOptions, entryCallback: ILDAPEntryCallback<T>): Promise<T[]> {\n\t\tawait this.runBeforeSearch(searchOptions);\n\n\t\tif (!searchOptions.scope) {\n\t\t\tsearchOptions.scope = this.options.userSearchScope || 'sub';\n\t\t}\n\t\tsearchLogger.debug({ msg: 'searchOptions', searchOptions, baseDN });\n\n\t\tlet realEntries = 0;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.client.search(baseDN, searchOptions, (error, res: ldapjs.SearchCallbackResponse) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tsearchLogger.error(error);\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tres.on('error', (error) => {\n\t\t\t\t\tsearchLogger.error(error);\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\n\t\t\t\tconst entries: T[] = [];\n\n\t\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst result = entryCallback(entry);\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tentries.push(result as T);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trealEntries++;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tsearchLogger.error(e);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tres.on('end', () => {\n\t\t\t\t\tsearchLogger.info(`LDAP Search found ${realEntries} entries and loaded the data of ${entries.length}.`);\n\t\t\t\t\tresolve(entries);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/*\n\t\tCreate an LDAP search filter based on the username\n\t*/\n\tpublic getUserFilter(username: string): string {\n\t\tconst filter: string[] = [];\n\n\t\tthis.addUserFilters(filter, username);\n\n\t\tconst usernameFilter = this.options.userSearchField.split(',').map((item) => `(${item}=${username})`);\n\n\t\tif (usernameFilter.length === 0) {\n\t\t\tlogger.error('LDAP_LDAP_User_Search_Field not defined');\n\t\t} else if (usernameFilter.length === 1) {\n\t\t\tfilter.push(`${usernameFilter[0]}`);\n\t\t} else {\n\t\t\tfilter.push(`(|${usernameFilter.join('')})`);\n\t\t}\n\n\t\treturn `(&${filter.join('')})`;\n\t}\n\n\tpublic async searchMembersOfGroupFilter(): Promise<string[]> {\n\t\tif (!this.options.groupFilterEnabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (!this.options.groupFilterGroupMemberAttribute) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (!this.options.groupFilterGroupMemberFormat) {\n\t\t\tsearchLogger.debug(`LDAP Group Filter is enabled but no group member format is set.`);\n\t\t\treturn [];\n\t\t}\n\n\t\tconst filter = ['(&'];\n\n\t\tif (this.options.groupFilterObjectClass) {\n\t\t\tfilter.push(`(objectclass=${this.options.groupFilterObjectClass})`);\n\t\t}\n\n\t\tif (this.options.groupFilterGroupIdAttribute) {\n\t\t\tfilter.push(`(${this.options.groupFilterGroupIdAttribute}=${this.options.groupFilterGroupName})`);\n\t\t}\n\t\tfilter.push(')');\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tfilter: filter.join(''),\n\t\t\tscope: 'sub',\n\t\t};\n\n\t\tsearchLogger.debug({ msg: 'Group filter LDAP:', filter: searchOptions.filter });\n\n\t\tconst result = await this.searchRaw(this.options.baseDN, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\tsearchLogger.debug({ msg: 'No groups found', result });\n\t\t\treturn [];\n\t\t}\n\n\t\tconst members = this.extractLdapAttribute(result[0].raw[this.options.groupFilterGroupMemberAttribute]) as string | string[];\n\n\t\treturn ensureArray<string>(members);\n\t}\n\n\tpublic async isUserAcceptedByGroupFilter(username: string, userdn: string): Promise<boolean> {\n\t\tif (!this.options.groupFilterEnabled) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst filter = ['(&'];\n\n\t\tif (this.options.groupFilterObjectClass) {\n\t\t\tfilter.push(`(objectclass=${this.options.groupFilterObjectClass})`);\n\t\t}\n\n\t\tif (this.options.groupFilterGroupMemberAttribute) {\n\t\t\tfilter.push(`(${this.options.groupFilterGroupMemberAttribute}=${this.options.groupFilterGroupMemberFormat})`);\n\t\t}\n\n\t\tif (this.options.groupFilterGroupIdAttribute) {\n\t\t\tfilter.push(`(${this.options.groupFilterGroupIdAttribute}=${this.options.groupFilterGroupName})`);\n\t\t}\n\t\tfilter.push(')');\n\n\t\tconst searchOptions: ldapjs.SearchOptions = {\n\t\t\tfilter: filter\n\t\t\t\t.join('')\n\t\t\t\t.replace(/#{username}/g, username)\n\t\t\t\t.replace(/#{userdn}/g, userdn),\n\t\t\tscope: 'sub',\n\t\t};\n\n\t\tsearchLogger.debug({ msg: 'Group filter LDAP:', filter: searchOptions.filter });\n\n\t\tconst result = await this.searchAndCount(this.options.baseDN, searchOptions);\n\n\t\tif (result === 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected addUserFilters(filters: string[], _username: string): void {\n\t\tconst { userSearchFilter } = this.options;\n\n\t\tif (userSearchFilter !== '') {\n\t\t\tif (userSearchFilter[0] === '(') {\n\t\t\t\tfilters.push(`${userSearchFilter}`);\n\t\t\t} else {\n\t\t\t\tfilters.push(`(${userSearchFilter})`);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async bindDN(dn: string, password: string): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tthis.client.bind(dn, password, (error) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doAsyncSearch<T = ldapjs.SearchEntry>(\n\t\tbaseDN: string,\n\t\tsearchOptions: ldapjs.SearchOptions,\n\t\tcallback: ILDAPCallback,\n\t\tentryCallback?: ILDAPEntryCallback<T>,\n\t): Promise<void> {\n\t\tawait this.runBeforeSearch(searchOptions);\n\n\t\tsearchLogger.debug({ msg: 'searchOptions', searchOptions, baseDN });\n\n\t\tthis.client.search(baseDN, searchOptions, (error: ldapjs.Error | null, res: ldapjs.SearchCallbackResponse): void => {\n\t\t\tif (error) {\n\t\t\t\tsearchLogger.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', (error) => {\n\t\t\t\tsearchLogger.error(error);\n\t\t\t\tcallback(error);\n\t\t\t});\n\n\t\t\tconst entries: T[] = [];\n\n\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = entryCallback ? entryCallback(entry) : entry;\n\t\t\t\t\tentries.push(result as T);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsearchLogger.error(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('end', () => {\n\t\t\t\tsearchLogger.info({ msg: 'Search result count', count: entries.length });\n\t\t\t\tcallback(null, entries);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate processSearchPage<T>(\n\t\t{ entries, title, end, next }: { entries: T[]; title: string; end: boolean; next?: () => void },\n\t\tcallback: ILDAPPageCallback,\n\t): void {\n\t\tsearchLogger.info(title);\n\t\t// Force LDAP idle to wait the record processing\n\t\tthis._updateIdle(true);\n\n\t\tcallback(null, entries, {\n\t\t\tend,\n\t\t\tnext: () => {\n\t\t\t\t// Reset idle timer\n\t\t\t\tthis._updateIdle();\n\t\t\t\tnext?.();\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate async doPagedSearch<T = ldapjs.SearchEntry>(\n\t\tbaseDN: string,\n\t\tsearchOptions: ldapjs.SearchOptions,\n\t\tpageSize: number,\n\t\tcallback: ILDAPPageCallback,\n\t\tentryCallback?: ILDAPEntryCallback<T>,\n\t): Promise<void> {\n\t\tsearchOptions.paged = {\n\t\t\tpageSize,\n\t\t\tpagePause: true,\n\t\t};\n\n\t\tawait this.runBeforeSearch(searchOptions);\n\n\t\tsearchLogger.debug({ msg: 'searchOptions', searchOptions, baseDN });\n\n\t\tthis.client.search(baseDN, searchOptions, (error: ldapjs.Error | null, res: ldapjs.SearchCallbackResponse): void => {\n\t\t\tif (error) {\n\t\t\t\tsearchLogger.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', (error) => {\n\t\t\t\tsearchLogger.error(error);\n\t\t\t\tcallback(error);\n\t\t\t});\n\n\t\t\tlet entries: T[] = [];\n\t\t\tconst internalPageSize = pageSize * 2;\n\n\t\t\tres.on('searchEntry', (entry) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = entryCallback ? entryCallback(entry) : entry;\n\t\t\t\t\tentries.push(result as T);\n\n\t\t\t\t\tif (entries.length >= internalPageSize) {\n\t\t\t\t\t\tthis.processSearchPage<T>(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\t\ttitle: 'Internal Page',\n\t\t\t\t\t\t\t\tend: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcallback,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tentries = [];\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsearchLogger.error(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('page', (_result, next) => {\n\t\t\t\tif (!next) {\n\t\t\t\t\tthis._updateIdle(true);\n\t\t\t\t\tthis.processSearchPage<T>(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\ttitle: 'Final Page',\n\t\t\t\t\t\t\tend: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback,\n\t\t\t\t\t);\n\t\t\t\t\tentries = [];\n\t\t\t\t} else if (entries.length) {\n\t\t\t\t\tthis.processSearchPage<T>(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\ttitle: 'Page',\n\t\t\t\t\t\t\tend: false,\n\t\t\t\t\t\t\tnext,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback,\n\t\t\t\t\t);\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tres.on('end', () => {\n\t\t\t\tif (entries.length) {\n\t\t\t\t\tthis.processSearchPage<T>(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\ttitle: 'Final Page',\n\t\t\t\t\t\t\tend: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback,\n\t\t\t\t\t);\n\t\t\t\t\tentries = [];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _updateIdle(override?: boolean): void {\n\t\t// @ts-expect-error use a private function to signal to the lib that we're still working\n\t\tthis.client._updateIdle(override);\n\t}\n\n\tprotected async maybeBindDN({ forceBindAuthenticationUser = false } = {}): Promise<void> {\n\t\tif (!forceBindAuthenticationUser && (this.usingAuthentication || !this.options.authentication)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.options.authenticationUserDN) {\n\t\t\tlogger.error('Invalid UserDN for authentication');\n\t\t\treturn;\n\t\t}\n\n\t\tbindLogger.info({ msg: 'Binding UserDN', userDN: this.options.authenticationUserDN });\n\t\ttry {\n\t\t\tawait this.bindDN(this.options.authenticationUserDN, this.options.authenticationPassword);\n\t\t\tthis.usingAuthentication = true;\n\t\t} catch (error) {\n\t\t\tauthLogger.error({\n\t\t\t\tmsg: 'Base Authentication Issue',\n\t\t\t\terr: error,\n\t\t\t\tdn: this.options.authenticationUserDN,\n\t\t\t});\n\t\t\tthis.usingAuthentication = false;\n\t\t}\n\t}\n\n\tprotected async runBeforeSearch(_searchOptions: ldapjs.SearchOptions): Promise<void> {\n\t\treturn this.maybeBindDN();\n\t}\n\n\tpublic async bindAuthenticationUser(): Promise<void> {\n\t\treturn this.maybeBindDN({ forceBindAuthenticationUser: true });\n\t}\n\n\t/*\n\t\tGet list of options to initialize a new ldapjs Client\n\t*/\n\tprivate getClientOptions(): {\n\t\tclientOptions: ldapjs.ClientOptions;\n\t\ttlsOptions: Record<string, any>;\n\t} {\n\t\tconst clientOptions: ldapjs.ClientOptions = {\n\t\t\turl: `${this.options.host}:${this.options.port}`,\n\t\t\ttimeout: this.options.timeout,\n\t\t\tconnectTimeout: this.options.connectionTimeout,\n\t\t\tidleTimeout: this.options.idleTimeout,\n\t\t\treconnect: this.options.reconnect,\n\t\t\tlog: connLogger,\n\t\t};\n\n\t\tconst tlsOptions: Record<string, any> = {\n\t\t\trejectUnauthorized: this.options.rejectUnauthorized,\n\t\t};\n\n\t\tif (this.options.caCert) {\n\t\t\t// Split CA cert into array of strings\n\t\t\tconst chainLines = this.options.caCert.split('\\n');\n\t\t\tlet cert: string[] = [];\n\t\t\tconst ca: string[] = [];\n\t\t\tchainLines.forEach((line) => {\n\t\t\t\tcert.push(line);\n\t\t\t\tif (line.match(/-END CERTIFICATE-/)) {\n\t\t\t\t\tca.push(cert.join('\\n'));\n\t\t\t\t\tcert = [];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttlsOptions.ca = ca;\n\t\t}\n\n\t\tif (this.options.encryption === 'ssl') {\n\t\t\tclientOptions.url = `ldaps://${clientOptions.url}`;\n\t\t\tclientOptions.tlsOptions = tlsOptions;\n\t\t} else {\n\t\t\tclientOptions.url = `ldap://${clientOptions.url}`;\n\t\t}\n\n\t\treturn {\n\t\t\tclientOptions,\n\t\t\ttlsOptions,\n\t\t};\n\t}\n\n\tprivate handleConnectionResponse(error: any, response?: any): void {\n\t\tif (!this._receivedResponse) {\n\t\t\tthis._receivedResponse = true;\n\t\t\tthis._connectionCallback(error, response);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._connectionTimedOut && !error) {\n\t\t\tconnLogger.info('Received a response after the connection timedout.');\n\t\t} else {\n\t\t\tlogger.debug('Ignored error/response:');\n\t\t}\n\n\t\tif (error) {\n\t\t\tconnLogger.debug(error);\n\t\t} else {\n\t\t\tconnLogger.debug(response);\n\t\t}\n\t}\n\n\tprivate initializeConnection(callback: ILDAPCallback): void {\n\t\tconnLogger.info('Init Setup');\n\t\tthis._receivedResponse = false;\n\t\tthis._connectionTimedOut = false;\n\t\tthis._connectionCallback = callback;\n\n\t\tconst { clientOptions, tlsOptions } = this.getClientOptions();\n\t\tconnLogger.info({ msg: 'Connecting', url: clientOptions.url });\n\t\tconnLogger.debug({ msg: 'clientOptions', clientOptions });\n\n\t\tthis.client = ldapjs.createClient(clientOptions);\n\n\t\tthis.client.on('error', (error) => {\n\t\t\tconnLogger.error(error);\n\t\t\tthis.handleConnectionResponse(error, null);\n\t\t});\n\n\t\tthis.client.on('idle', () => {\n\t\t\tsearchLogger.info('Idle');\n\t\t\tthis.disconnect();\n\t\t});\n\n\t\tthis.client.on('close', () => {\n\t\t\tsearchLogger.info('Closed');\n\t\t});\n\n\t\tif (this.options.encryption === 'tls') {\n\t\t\t// Set host parameter for tls.connect which is used by ldapjs starttls. This may not be needed anymore\n\t\t\t// https://github.com/RocketChat/Rocket.Chat/issues/2035\n\t\t\t// https://github.com/mcavage/node-ldapjs/issues/349\n\t\t\ttlsOptions.host = this.options.host;\n\n\t\t\tconnLogger.info('Starting TLS');\n\t\t\tconnLogger.debug({ msg: 'tlsOptions', tlsOptions });\n\n\t\t\tthis.client.starttls(tlsOptions, null, (error, response) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconnLogger.error({ msg: 'TLS connection', error });\n\t\t\t\t\treturn this.handleConnectionResponse(error, null);\n\t\t\t\t}\n\n\t\t\t\tconnLogger.info('TLS connected');\n\t\t\t\tthis.connected = true;\n\t\t\t\tthis.handleConnectionResponse(null, response);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.client.on('connect', (response) => {\n\t\t\t\tconnLogger.info('LDAP connected');\n\t\t\t\tthis.connected = true;\n\t\t\t\tthis.handleConnectionResponse(null, response);\n\t\t\t});\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tif (!this._receivedResponse) {\n\t\t\t\tconnLogger.error({ msg: 'connection time out', timeout: clientOptions.connectTimeout });\n\t\t\t\tthis.handleConnectionResponse(new Error('Timeout'));\n\t\t\t\tthis._connectionTimedOut = true;\n\t\t\t}\n\t\t}, clientOptions.connectTimeout);\n\t}\n\n\tprivate parseAttributeList(csv: string | undefined): Array<string> {\n\t\tif (!csv) {\n\t\t\treturn ['*', '+'];\n\t\t}\n\n\t\tconst list = csv.split(',').map((item) => item.trim());\n\t\tif (!list?.length) {\n\t\t\treturn ['*', '+'];\n\t\t}\n\n\t\treturn list;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c42a81dbfef8ecb3dff1b2a492d354ce2423ae68"}
