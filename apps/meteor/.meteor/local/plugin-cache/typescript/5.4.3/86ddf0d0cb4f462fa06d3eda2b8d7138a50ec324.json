{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/adapters/Notification.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/infrastructure/rocket-chat/adapters/Notification.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/adapters/Notification.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/rocket-chat/adapters/Notification.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/rocket-chat/adapters/Notification.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AACjD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,OAAO,aAAa,MAAM,8DAA8D,CAAC;AACzF,OAAO,EAAE,IAAI,EAAE,MAAM,yBAAyB,CAAC;AAE/C,MAAM,OAAO,6BAA6B;IAClC,KAAK,CAAC,sBAAsB,CAAC,cAAsB,EAAE,QAAgB,EAAE,QAAiB;QAC9F,aAAa,CAAC,UAAU,CAAC,cAAc,EAAE,eAAe,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACtG,CAAC;IAEM,KAAK,CAAC,2CAA2C,CACvD,QAAwE;QAExE,MAAM,KAAK,CAAC,kBAAkB,CAAC,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAC3E,IAAI,CAAC,4CAA4C,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CACrE,CAAC;IACH,CAAC;IAEM,4CAA4C,CAClD,MAAc,EACd,QAAwE;QAExE,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,MAAM,gBAAgB,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE;YAC7E,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC;gBACvF,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YACtC,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,yBAAyB,CAAC,QAAgB,EAAE,QAAkB,EAAE,MAAc;QAC1F,KAAK,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE;YACjC,IAAI,EAAE,EAAE,QAAQ,EAAE;YAClB,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC;YAC1C,MAAM;SACN,CAAC,CAAC;IACJ,CAAC;IAEM,0BAA0B,CAAC,cAAsB,EAAE,MAAc,EAAE,MAAc,EAAE,QAAQ,GAAG,IAAI;QACxG,KAAK,GAAG,CAAC,SAAS,CAAC,yBAAyB,EAAE,MAAM,EAAE,MAAM,EAAE;YAC7D,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,cAAc,EAAE;gBAC3B,WAAW,EAAE,SAAS;gBACtB,GAAG,EAAE,QAAQ;aACb,CAAC;SACF,CAAC,CAAC;IACJ,CAAC;CACD","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport { Rooms } from '@rocket.chat/models';\n\nimport notifications from '../../../../../../app/notifications/server/lib/Notifications';\nimport { i18n } from '../../../../../lib/i18n';\n\nexport class RocketChatNotificationAdapter {\n\tpublic async notifyUserTypingOnRoom(internalRoomId: string, username: string, isTyping: boolean): Promise<void> {\n\t\tnotifications.notifyRoom(internalRoomId, 'user-activity', username, isTyping ? ['user-typing'] : []);\n\t}\n\n\tpublic async subscribeToUserTypingEventsOnFederatedRooms(\n\t\tcallback: (username: string, activity: string[], roomId: string) => void,\n\t): Promise<void> {\n\t\tawait Rooms.findFederatedRooms({ projection: { _id: 1 } }).forEach((room) =>\n\t\t\tthis.subscribeToUserTypingEventsOnFederatedRoomId(room._id, callback),\n\t\t);\n\t}\n\n\tpublic subscribeToUserTypingEventsOnFederatedRoomId(\n\t\troomId: string,\n\t\tcallback: (username: string, activity: string[], roomId: string) => void,\n\t): void {\n\t\tnotifications.streamRoom.on(`${roomId}/user-activity`, (username, activity) => {\n\t\t\tif (Array.isArray(activity) && (!activity.length || activity.includes('user-typing'))) {\n\t\t\t\tcallback(username, activity, roomId);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async broadcastUserTypingOnRoom(username: string, activity: string[], roomId: string): Promise<void> {\n\t\tvoid api.broadcast('user.typing', {\n\t\t\tuser: { username },\n\t\t\tisTyping: activity.includes('user-typing'),\n\t\t\troomId,\n\t\t});\n\t}\n\n\tpublic notifyWithEphemeralMessage(i18nMessageKey: string, userId: string, roomId: string, language = 'en'): void {\n\t\tvoid api.broadcast('notify.ephemeralMessage', userId, roomId, {\n\t\t\tmsg: i18n.t(i18nMessageKey, {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tlng: language,\n\t\t\t}),\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/adapters/Notification.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/infrastructure/rocket-chat/adapters/Notification.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/rocket-chat/adapters/Notification.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/rocket-chat/adapters/Notification.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AACjD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,OAAO,aAAa,MAAM,8DAA8D,CAAC;AACzF,OAAO,EAAE,IAAI,EAAE,MAAM,yBAAyB,CAAC;AAE/C,MAAM,OAAO,6BAA6B;IAClC,KAAK,CAAC,sBAAsB,CAAC,cAAsB,EAAE,QAAgB,EAAE,QAAiB;QAC9F,aAAa,CAAC,UAAU,CAAC,cAAc,EAAE,eAAe,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACtG,CAAC;IAEM,KAAK,CAAC,2CAA2C,CACvD,QAAwE;QAExE,MAAM,KAAK,CAAC,kBAAkB,CAAC,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAC3E,IAAI,CAAC,4CAA4C,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CACrE,CAAC;IACH,CAAC;IAEM,4CAA4C,CAClD,MAAc,EACd,QAAwE;QAExE,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,MAAM,gBAAgB,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE;YAC7E,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC;gBACvF,QAAQ,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YACtC,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,yBAAyB,CAAC,QAAgB,EAAE,QAAkB,EAAE,MAAc;QAC1F,KAAK,GAAG,CAAC,SAAS,CAAC,aAAa,EAAE;YACjC,IAAI,EAAE,EAAE,QAAQ,EAAE;YAClB,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC;YAC1C,MAAM;SACN,CAAC,CAAC;IACJ,CAAC;IAEM,0BAA0B,CAAC,cAAsB,EAAE,MAAc,EAAE,MAAc,EAAE,QAAQ,GAAG,IAAI;QACxG,KAAK,GAAG,CAAC,SAAS,CAAC,yBAAyB,EAAE,MAAM,EAAE,MAAM,EAAE;YAC7D,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,cAAc,EAAE;gBAC3B,WAAW,EAAE,SAAS;gBACtB,GAAG,EAAE,QAAQ;aACb,CAAC;SACF,CAAC,CAAC;IACJ,CAAC;CACD","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport { Rooms } from '@rocket.chat/models';\n\nimport notifications from '../../../../../../app/notifications/server/lib/Notifications';\nimport { i18n } from '../../../../../lib/i18n';\n\nexport class RocketChatNotificationAdapter {\n\tpublic async notifyUserTypingOnRoom(internalRoomId: string, username: string, isTyping: boolean): Promise<void> {\n\t\tnotifications.notifyRoom(internalRoomId, 'user-activity', username, isTyping ? ['user-typing'] : []);\n\t}\n\n\tpublic async subscribeToUserTypingEventsOnFederatedRooms(\n\t\tcallback: (username: string, activity: string[], roomId: string) => void,\n\t): Promise<void> {\n\t\tawait Rooms.findFederatedRooms({ projection: { _id: 1 } }).forEach((room) =>\n\t\t\tthis.subscribeToUserTypingEventsOnFederatedRoomId(room._id, callback),\n\t\t);\n\t}\n\n\tpublic subscribeToUserTypingEventsOnFederatedRoomId(\n\t\troomId: string,\n\t\tcallback: (username: string, activity: string[], roomId: string) => void,\n\t): void {\n\t\tnotifications.streamRoom.on(`${roomId}/user-activity`, (username, activity) => {\n\t\t\tif (Array.isArray(activity) && (!activity.length || activity.includes('user-typing'))) {\n\t\t\t\tcallback(username, activity, roomId);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async broadcastUserTypingOnRoom(username: string, activity: string[], roomId: string): Promise<void> {\n\t\tvoid api.broadcast('user.typing', {\n\t\t\tuser: { username },\n\t\t\tisTyping: activity.includes('user-typing'),\n\t\t\troomId,\n\t\t});\n\t}\n\n\tpublic notifyWithEphemeralMessage(i18nMessageKey: string, userId: string, roomId: string, language = 'en'): void {\n\t\tvoid api.broadcast('notify.ephemeralMessage', userId, roomId, {\n\t\t\tmsg: i18n.t(i18nMessageKey, {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tlng: language,\n\t\t\t}),\n\t\t});\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      RocketChatNotificationAdapter: () => RocketChatNotificationAdapter\n    });\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 1);\n    let notifications;\n    module.link(\"../../../../../../app/notifications/server/lib/Notifications\", {\n      default(v) {\n        notifications = v;\n      }\n    }, 2);\n    let i18n;\n    module.link(\"../../../../../lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class RocketChatNotificationAdapter {\n      async notifyUserTypingOnRoom(internalRoomId, username, isTyping) {\n        notifications.notifyRoom(internalRoomId, 'user-activity', username, isTyping ? ['user-typing'] : []);\n      }\n      async subscribeToUserTypingEventsOnFederatedRooms(callback) {\n        await Rooms.findFederatedRooms({\n          projection: {\n            _id: 1\n          }\n        }).forEach(room => this.subscribeToUserTypingEventsOnFederatedRoomId(room._id, callback));\n      }\n      subscribeToUserTypingEventsOnFederatedRoomId(roomId, callback) {\n        notifications.streamRoom.on(\"\".concat(roomId, \"/user-activity\"), (username, activity) => {\n          if (Array.isArray(activity) && (!activity.length || activity.includes('user-typing'))) {\n            callback(username, activity, roomId);\n          }\n        });\n      }\n      async broadcastUserTypingOnRoom(username, activity, roomId) {\n        void api.broadcast('user.typing', {\n          user: {\n            username\n          },\n          isTyping: activity.includes('user-typing'),\n          roomId\n        });\n      }\n      notifyWithEphemeralMessage(i18nMessageKey, userId, roomId) {\n        let language = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'en';\n        void api.broadcast('notify.ephemeralMessage', userId, roomId, {\n          msg: i18n.t(i18nMessageKey, {\n            postProcess: 'sprintf',\n            lng: language\n          })\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","RocketChatNotificationAdapter","api","link","v","Rooms","notifications","default","i18n","__reifyWaitForDeps__","notifyUserTypingOnRoom","internalRoomId","username","isTyping","notifyRoom","subscribeToUserTypingEventsOnFederatedRooms","callback","findFederatedRooms","projection","_id","forEach","room","subscribeToUserTypingEventsOnFederatedRoomId","roomId","streamRoom","on","concat","activity","Array","isArray","length","includes","broadcastUserTypingOnRoom","broadcast","user","notifyWithEphemeralMessage","i18nMessageKey","userId","language","arguments","undefined","msg","t","postProcess","lng","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/federation/infrastructure/rocket-chat/adapters/Notification.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport { Rooms } from '@rocket.chat/models';\n\nimport notifications from '../../../../../../app/notifications/server/lib/Notifications';\nimport { i18n } from '../../../../../lib/i18n';\n\nexport class RocketChatNotificationAdapter {\n\tpublic async notifyUserTypingOnRoom(internalRoomId: string, username: string, isTyping: boolean): Promise<void> {\n\t\tnotifications.notifyRoom(internalRoomId, 'user-activity', username, isTyping ? ['user-typing'] : []);\n\t}\n\n\tpublic async subscribeToUserTypingEventsOnFederatedRooms(\n\t\tcallback: (username: string, activity: string[], roomId: string) => void,\n\t): Promise<void> {\n\t\tawait Rooms.findFederatedRooms({ projection: { _id: 1 } }).forEach((room) =>\n\t\t\tthis.subscribeToUserTypingEventsOnFederatedRoomId(room._id, callback),\n\t\t);\n\t}\n\n\tpublic subscribeToUserTypingEventsOnFederatedRoomId(\n\t\troomId: string,\n\t\tcallback: (username: string, activity: string[], roomId: string) => void,\n\t): void {\n\t\tnotifications.streamRoom.on(`${roomId}/user-activity`, (username, activity) => {\n\t\t\tif (Array.isArray(activity) && (!activity.length || activity.includes('user-typing'))) {\n\t\t\t\tcallback(username, activity, roomId);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async broadcastUserTypingOnRoom(username: string, activity: string[], roomId: string): Promise<void> {\n\t\tvoid api.broadcast('user.typing', {\n\t\t\tuser: { username },\n\t\t\tisTyping: activity.includes('user-typing'),\n\t\t\troomId,\n\t\t});\n\t}\n\n\tpublic notifyWithEphemeralMessage(i18nMessageKey: string, userId: string, roomId: string, language = 'en'): void {\n\t\tvoid api.broadcast('notify.ephemeralMessage', userId, roomId, {\n\t\t\tmsg: i18n.t(i18nMessageKey, {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tlng: language,\n\t\t\t}),\n\t\t});\n\t}\n}\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAK,CAAE;MAAAC,6BAAM,EAAAA,CAAA,KAA6BA;IAAA;IAAA,IAAAC,GAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,IAAAE,CAAA;QAAAF,GAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA;IAAAN,MAAA,CAAAI,IAAA;MAAAE,MAAAD,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,aAAA;IAAAP,MAAA,CAAAI,IAAA;MAAAI,QAAAH,CAAA;QAAAE,aAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAI,IAAA;IAAAT,MAAA,CAAAI,IAAA;MAAAK,KAAAJ,CAAA;QAAAI,IAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,oBAAA,WAAAA,oBAAA;IAM3C,MAAOR,6BAA6B;MAClC,MAAMS,sBAAsBA,CAACC,cAAsB,EAAEC,QAAgB,EAAEC,QAAiB;QAC9FP,aAAa,CAACQ,UAAU,CAACH,cAAc,EAAE,eAAe,EAAEC,QAAQ,EAAEC,QAAQ,GAAG,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;MACrG;MAEO,MAAME,2CAA2CA,CACvDC,QAAwE;QAExE,MAAMX,KAAK,CAACY,kBAAkB,CAAC;UAAEC,UAAU,EAAE;YAAEC,GAAG,EAAE;UAAC;QAAE,CAAE,CAAC,CAACC,OAAO,CAAEC,IAAI,IACvE,IAAI,CAACC,4CAA4C,CAACD,IAAI,CAACF,GAAG,EAAEH,QAAQ,CAAC,CACrE;MACF;MAEOM,4CAA4CA,CAClDC,MAAc,EACdP,QAAwE;QAExEV,aAAa,CAACkB,UAAU,CAACC,EAAE,IAAAC,MAAA,CAAIH,MAAM,qBAAkB,CAACX,QAAQ,EAAEe,QAAQ,KAAI;UAC7E,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,KAAK,CAACA,QAAQ,CAACG,MAAM,IAAIH,QAAQ,CAACI,QAAQ,CAAC,aAAa,CAAC,CAAC,EAAE;YACtFf,QAAQ,CAACJ,QAAQ,EAAEe,QAAQ,EAAEJ,MAAM,CAAC;UACrC;QACD,CAAC,CAAC;MACH;MAEO,MAAMS,yBAAyBA,CAACpB,QAAgB,EAAEe,QAAkB,EAAEJ,MAAc;QAC1F,KAAKrB,GAAG,CAAC+B,SAAS,CAAC,aAAa,EAAE;UACjCC,IAAI,EAAE;YAAEtB;UAAQ,CAAE;UAClBC,QAAQ,EAAEc,QAAQ,CAACI,QAAQ,CAAC,aAAa,CAAC;UAC1CR;SACA,CAAC;MACH;MAEOY,0BAA0BA,CAACC,cAAsB,EAAEC,MAAc,EAAEd,MAAc,EAAiB;QAAA,IAAfe,QAAQ,GAAAC,SAAA,CAAAT,MAAA,QAAAS,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;QACxG,KAAKrC,GAAG,CAAC+B,SAAS,CAAC,yBAAyB,EAAEI,MAAM,EAAEd,MAAM,EAAE;UAC7DkB,GAAG,EAAEjC,IAAI,CAACkC,CAAC,CAACN,cAAc,EAAE;YAC3BO,WAAW,EAAE,SAAS;YACtBC,GAAG,EAAEN;WACL;SACD,CAAC;MACH;;IACAO,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"86ddf0d0cb4f462fa06d3eda2b8d7138a50ec324"}
