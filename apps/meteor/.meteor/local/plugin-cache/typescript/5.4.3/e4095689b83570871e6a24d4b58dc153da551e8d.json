{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/appearance.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/imports/server/rest/appearance.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/appearance.ts","inputSourceMap":{"version":3,"file":"app/livechat/imports/server/rest/appearance.ts","sourceRoot":"","sources":["app/livechat/imports/server/rest/appearance.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISettingSelectOption } from '@rocket.chat/core-typings';\nimport { Settings } from '@rocket.chat/models';\nimport { isPOSTLivechatAppearanceParams } from '@rocket.chat/rest-typings';\n\nimport { isTruthy } from '../../../../../lib/isTruthy';\nimport { API } from '../../../../api/server';\nimport { notifyOnSettingChangedById } from '../../../../lib/server/lib/notifyListener';\nimport { findAppearance } from '../../../server/api/lib/appearance';\n\nAPI.v1.addRoute(\n\t'livechat/appearance',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: {\n\t\t\tPOST: isPOSTLivechatAppearanceParams,\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { appearance } = await findAppearance();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tappearance,\n\t\t\t});\n\t\t},\n\t\tasync post() {\n\t\t\tconst settings = this.bodyParams;\n\n\t\t\tconst validSettingList = [\n\t\t\t\t'Livechat_title',\n\t\t\t\t'Livechat_title_color',\n\t\t\t\t'Livechat_enable_message_character_limit',\n\t\t\t\t'Livechat_message_character_limit',\n\t\t\t\t'Livechat_show_agent_info',\n\t\t\t\t'Livechat_show_agent_email',\n\t\t\t\t'Livechat_display_offline_form',\n\t\t\t\t'Livechat_offline_form_unavailable',\n\t\t\t\t'Livechat_offline_message',\n\t\t\t\t'Livechat_offline_success_message',\n\t\t\t\t'Livechat_offline_title',\n\t\t\t\t'Livechat_offline_title_color',\n\t\t\t\t'Livechat_offline_email',\n\t\t\t\t'Livechat_conversation_finished_message',\n\t\t\t\t'Livechat_conversation_finished_text',\n\t\t\t\t'Livechat_registration_form',\n\t\t\t\t'Livechat_name_field_registration_form',\n\t\t\t\t'Livechat_email_field_registration_form',\n\t\t\t\t'Livechat_registration_form_message',\n\t\t\t\t'Livechat_hide_watermark',\n\t\t\t\t'Livechat_background',\n\t\t\t\t'Livechat_widget_position',\n\t\t\t\t'Livechat_hide_system_messages',\n\t\t\t\t'Omnichannel_allow_visitors_to_close_conversation',\n\t\t\t];\n\n\t\t\tconst valid = settings.every((setting) => validSettingList.includes(setting._id));\n\n\t\t\tif (!valid) {\n\t\t\t\tthrow new Error('invalid-setting');\n\t\t\t}\n\n\t\t\tconst dbSettings = await Settings.findByIds(validSettingList, { projection: { _id: 1, value: 1, type: 1, values: 1 } })\n\t\t\t\t.map((dbSetting) => {\n\t\t\t\t\tconst setting = settings.find(({ _id }) => _id === dbSetting._id);\n\t\t\t\t\tif (!setting || dbSetting.value === setting.value) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dbSetting.type === 'multiSelect' && (!Array.isArray(setting.value) || !validateValues(setting.value, dbSetting.values))) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (dbSetting?.type) {\n\t\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t_id: dbSetting._id,\n\t\t\t\t\t\t\t\tvalue: setting.value === 'true' || setting.value === true,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'int':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t_id: dbSetting._id,\n\t\t\t\t\t\t\t\tvalue: coerceInt(setting.value),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t_id: dbSetting._id,\n\t\t\t\t\t\t\t\tvalue: setting?.value,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.toArray();\n\n\t\t\tconst eligibleSettings = dbSettings.filter(isTruthy);\n\t\t\tconst promises = eligibleSettings.map(({ _id, value }) => Settings.updateValueById(_id, value));\n\t\t\t(await Promise.all(promises)).forEach((value, index) => {\n\t\t\t\tif (value?.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSettingChangedById(eligibleSettings[index]._id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nfunction validateValues(values: string[], allowedValues: ISettingSelectOption[] = []): boolean {\n\treturn values.every((value) => allowedValues.some((allowedValue) => allowedValue.key === value));\n}\n\nfunction coerceInt(value: string | number | boolean | string[]): number {\n\tif (typeof value === 'number') {\n\t\treturn value;\n\t}\n\n\tif (typeof value === 'boolean') {\n\t\treturn 0;\n\t}\n\n\tif (Array.isArray(value)) {\n\t\treturn 0;\n\t}\n\n\tconst parsedValue = parseInt(value, 10);\n\tif (Number.isNaN(parsedValue)) {\n\t\treturn 0;\n\t}\n\n\treturn parsedValue;\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/appearance.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/imports/server/rest/appearance.ts","inputSourceMap":{"version":3,"file":"app/livechat/imports/server/rest/appearance.ts","sourceRoot":"","sources":["app/livechat/imports/server/rest/appearance.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISettingSelectOption } from '@rocket.chat/core-typings';\nimport { Settings } from '@rocket.chat/models';\nimport { isPOSTLivechatAppearanceParams } from '@rocket.chat/rest-typings';\n\nimport { isTruthy } from '../../../../../lib/isTruthy';\nimport { API } from '../../../../api/server';\nimport { notifyOnSettingChangedById } from '../../../../lib/server/lib/notifyListener';\nimport { findAppearance } from '../../../server/api/lib/appearance';\n\nAPI.v1.addRoute(\n\t'livechat/appearance',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: {\n\t\t\tPOST: isPOSTLivechatAppearanceParams,\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { appearance } = await findAppearance();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tappearance,\n\t\t\t});\n\t\t},\n\t\tasync post() {\n\t\t\tconst settings = this.bodyParams;\n\n\t\t\tconst validSettingList = [\n\t\t\t\t'Livechat_title',\n\t\t\t\t'Livechat_title_color',\n\t\t\t\t'Livechat_enable_message_character_limit',\n\t\t\t\t'Livechat_message_character_limit',\n\t\t\t\t'Livechat_show_agent_info',\n\t\t\t\t'Livechat_show_agent_email',\n\t\t\t\t'Livechat_display_offline_form',\n\t\t\t\t'Livechat_offline_form_unavailable',\n\t\t\t\t'Livechat_offline_message',\n\t\t\t\t'Livechat_offline_success_message',\n\t\t\t\t'Livechat_offline_title',\n\t\t\t\t'Livechat_offline_title_color',\n\t\t\t\t'Livechat_offline_email',\n\t\t\t\t'Livechat_conversation_finished_message',\n\t\t\t\t'Livechat_conversation_finished_text',\n\t\t\t\t'Livechat_registration_form',\n\t\t\t\t'Livechat_name_field_registration_form',\n\t\t\t\t'Livechat_email_field_registration_form',\n\t\t\t\t'Livechat_registration_form_message',\n\t\t\t\t'Livechat_hide_watermark',\n\t\t\t\t'Livechat_background',\n\t\t\t\t'Livechat_widget_position',\n\t\t\t\t'Livechat_hide_system_messages',\n\t\t\t\t'Omnichannel_allow_visitors_to_close_conversation',\n\t\t\t];\n\n\t\t\tconst valid = settings.every((setting) => validSettingList.includes(setting._id));\n\n\t\t\tif (!valid) {\n\t\t\t\tthrow new Error('invalid-setting');\n\t\t\t}\n\n\t\t\tconst dbSettings = await Settings.findByIds(validSettingList, { projection: { _id: 1, value: 1, type: 1, values: 1 } })\n\t\t\t\t.map((dbSetting) => {\n\t\t\t\t\tconst setting = settings.find(({ _id }) => _id === dbSetting._id);\n\t\t\t\t\tif (!setting || dbSetting.value === setting.value) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dbSetting.type === 'multiSelect' && (!Array.isArray(setting.value) || !validateValues(setting.value, dbSetting.values))) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (dbSetting?.type) {\n\t\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t_id: dbSetting._id,\n\t\t\t\t\t\t\t\tvalue: setting.value === 'true' || setting.value === true,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'int':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t_id: dbSetting._id,\n\t\t\t\t\t\t\t\tvalue: coerceInt(setting.value),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t_id: dbSetting._id,\n\t\t\t\t\t\t\t\tvalue: setting?.value,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.toArray();\n\n\t\t\tconst eligibleSettings = dbSettings.filter(isTruthy);\n\t\t\tconst promises = eligibleSettings.map(({ _id, value }) => Settings.updateValueById(_id, value));\n\t\t\t(await Promise.all(promises)).forEach((value, index) => {\n\t\t\t\tif (value?.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSettingChangedById(eligibleSettings[index]._id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nfunction validateValues(values: string[], allowedValues: ISettingSelectOption[] = []): boolean {\n\treturn values.every((value) => allowedValues.some((allowedValue) => allowedValue.key === value));\n}\n\nfunction coerceInt(value: string | number | boolean | string[]): number {\n\tif (typeof value === 'number') {\n\t\treturn value;\n\t}\n\n\tif (typeof value === 'boolean') {\n\t\treturn 0;\n\t}\n\n\tif (Array.isArray(value)) {\n\t\treturn 0;\n\t}\n\n\tconst parsedValue = parseInt(value, 10);\n\tif (Number.isNaN(parsedValue)) {\n\t\treturn 0;\n\t}\n\n\treturn parsedValue;\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Settings;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      }\n    }, 0);\n    let isPOSTLivechatAppearanceParams;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isPOSTLivechatAppearanceParams(v) {\n        isPOSTLivechatAppearanceParams = v;\n      }\n    }, 1);\n    let isTruthy;\n    module.link(\"../../../../../lib/isTruthy\", {\n      isTruthy(v) {\n        isTruthy = v;\n      }\n    }, 2);\n    let API;\n    module.link(\"../../../../api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 3);\n    let notifyOnSettingChangedById;\n    module.link(\"../../../../lib/server/lib/notifyListener\", {\n      notifyOnSettingChangedById(v) {\n        notifyOnSettingChangedById = v;\n      }\n    }, 4);\n    let findAppearance;\n    module.link(\"../../../server/api/lib/appearance\", {\n      findAppearance(v) {\n        findAppearance = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('livechat/appearance', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: {\n        POST: isPOSTLivechatAppearanceParams\n      }\n    }, {\n      async get() {\n        const {\n          appearance\n        } = await findAppearance();\n        return API.v1.success({\n          appearance\n        });\n      },\n      async post() {\n        const settings = this.bodyParams;\n        const validSettingList = ['Livechat_title', 'Livechat_title_color', 'Livechat_enable_message_character_limit', 'Livechat_message_character_limit', 'Livechat_show_agent_info', 'Livechat_show_agent_email', 'Livechat_display_offline_form', 'Livechat_offline_form_unavailable', 'Livechat_offline_message', 'Livechat_offline_success_message', 'Livechat_offline_title', 'Livechat_offline_title_color', 'Livechat_offline_email', 'Livechat_conversation_finished_message', 'Livechat_conversation_finished_text', 'Livechat_registration_form', 'Livechat_name_field_registration_form', 'Livechat_email_field_registration_form', 'Livechat_registration_form_message', 'Livechat_hide_watermark', 'Livechat_background', 'Livechat_widget_position', 'Livechat_hide_system_messages', 'Omnichannel_allow_visitors_to_close_conversation'];\n        const valid = settings.every(setting => validSettingList.includes(setting._id));\n        if (!valid) {\n          throw new Error('invalid-setting');\n        }\n        const dbSettings = await Settings.findByIds(validSettingList, {\n          projection: {\n            _id: 1,\n            value: 1,\n            type: 1,\n            values: 1\n          }\n        }).map(dbSetting => {\n          const setting = settings.find(_ref => {\n            let {\n              _id\n            } = _ref;\n            return _id === dbSetting._id;\n          });\n          if (!setting || dbSetting.value === setting.value) {\n            return;\n          }\n          if (dbSetting.type === 'multiSelect' && (!Array.isArray(setting.value) || !validateValues(setting.value, dbSetting.values))) {\n            return;\n          }\n          switch (dbSetting === null || dbSetting === void 0 ? void 0 : dbSetting.type) {\n            case 'boolean':\n              return {\n                _id: dbSetting._id,\n                value: setting.value === 'true' || setting.value === true\n              };\n            case 'int':\n              return {\n                _id: dbSetting._id,\n                value: coerceInt(setting.value)\n              };\n            default:\n              return {\n                _id: dbSetting._id,\n                value: setting === null || setting === void 0 ? void 0 : setting.value\n              };\n          }\n        }).toArray();\n        const eligibleSettings = dbSettings.filter(isTruthy);\n        const promises = eligibleSettings.map(_ref2 => {\n          let {\n            _id,\n            value\n          } = _ref2;\n          return Settings.updateValueById(_id, value);\n        });\n        (await Promise.all(promises)).forEach((value, index) => {\n          if (value !== null && value !== void 0 && value.modifiedCount) {\n            void notifyOnSettingChangedById(eligibleSettings[index]._id);\n          }\n        });\n        return API.v1.success();\n      }\n    });\n    function validateValues(values) {\n      let allowedValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      return values.every(value => allowedValues.some(allowedValue => allowedValue.key === value));\n    }\n    function coerceInt(value) {\n      if (typeof value === 'number') {\n        return value;\n      }\n      if (typeof value === 'boolean') {\n        return 0;\n      }\n      if (Array.isArray(value)) {\n        return 0;\n      }\n      const parsedValue = parseInt(value, 10);\n      if (Number.isNaN(parsedValue)) {\n        return 0;\n      }\n      return parsedValue;\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Settings","module","link","v","isPOSTLivechatAppearanceParams","isTruthy","API","notifyOnSettingChangedById","findAppearance","__reifyWaitForDeps__","v1","addRoute","authRequired","permissionsRequired","validateParams","POST","get","appearance","success","post","settings","bodyParams","validSettingList","valid","every","setting","includes","_id","Error","dbSettings","findByIds","projection","value","type","values","map","dbSetting","find","_ref","Array","isArray","validateValues","coerceInt","toArray","eligibleSettings","filter","promises","_ref2","updateValueById","Promise","all","forEach","index","modifiedCount","allowedValues","arguments","length","undefined","some","allowedValue","key","parsedValue","parseInt","Number","isNaN","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/imports/server/rest/appearance.ts"],"sourcesContent":["import type { ISettingSelectOption } from '@rocket.chat/core-typings';\nimport { Settings } from '@rocket.chat/models';\nimport { isPOSTLivechatAppearanceParams } from '@rocket.chat/rest-typings';\n\nimport { isTruthy } from '../../../../../lib/isTruthy';\nimport { API } from '../../../../api/server';\nimport { notifyOnSettingChangedById } from '../../../../lib/server/lib/notifyListener';\nimport { findAppearance } from '../../../server/api/lib/appearance';\n\nAPI.v1.addRoute(\n\t'livechat/appearance',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['view-livechat-manager'],\n\t\tvalidateParams: {\n\t\t\tPOST: isPOSTLivechatAppearanceParams,\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { appearance } = await findAppearance();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tappearance,\n\t\t\t});\n\t\t},\n\t\tasync post() {\n\t\t\tconst settings = this.bodyParams;\n\n\t\t\tconst validSettingList = [\n\t\t\t\t'Livechat_title',\n\t\t\t\t'Livechat_title_color',\n\t\t\t\t'Livechat_enable_message_character_limit',\n\t\t\t\t'Livechat_message_character_limit',\n\t\t\t\t'Livechat_show_agent_info',\n\t\t\t\t'Livechat_show_agent_email',\n\t\t\t\t'Livechat_display_offline_form',\n\t\t\t\t'Livechat_offline_form_unavailable',\n\t\t\t\t'Livechat_offline_message',\n\t\t\t\t'Livechat_offline_success_message',\n\t\t\t\t'Livechat_offline_title',\n\t\t\t\t'Livechat_offline_title_color',\n\t\t\t\t'Livechat_offline_email',\n\t\t\t\t'Livechat_conversation_finished_message',\n\t\t\t\t'Livechat_conversation_finished_text',\n\t\t\t\t'Livechat_registration_form',\n\t\t\t\t'Livechat_name_field_registration_form',\n\t\t\t\t'Livechat_email_field_registration_form',\n\t\t\t\t'Livechat_registration_form_message',\n\t\t\t\t'Livechat_hide_watermark',\n\t\t\t\t'Livechat_background',\n\t\t\t\t'Livechat_widget_position',\n\t\t\t\t'Livechat_hide_system_messages',\n\t\t\t\t'Omnichannel_allow_visitors_to_close_conversation',\n\t\t\t];\n\n\t\t\tconst valid = settings.every((setting) => validSettingList.includes(setting._id));\n\n\t\t\tif (!valid) {\n\t\t\t\tthrow new Error('invalid-setting');\n\t\t\t}\n\n\t\t\tconst dbSettings = await Settings.findByIds(validSettingList, { projection: { _id: 1, value: 1, type: 1, values: 1 } })\n\t\t\t\t.map((dbSetting) => {\n\t\t\t\t\tconst setting = settings.find(({ _id }) => _id === dbSetting._id);\n\t\t\t\t\tif (!setting || dbSetting.value === setting.value) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dbSetting.type === 'multiSelect' && (!Array.isArray(setting.value) || !validateValues(setting.value, dbSetting.values))) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (dbSetting?.type) {\n\t\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t_id: dbSetting._id,\n\t\t\t\t\t\t\t\tvalue: setting.value === 'true' || setting.value === true,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tcase 'int':\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t_id: dbSetting._id,\n\t\t\t\t\t\t\t\tvalue: coerceInt(setting.value),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t_id: dbSetting._id,\n\t\t\t\t\t\t\t\tvalue: setting?.value,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.toArray();\n\n\t\t\tconst eligibleSettings = dbSettings.filter(isTruthy);\n\t\t\tconst promises = eligibleSettings.map(({ _id, value }) => Settings.updateValueById(_id, value));\n\t\t\t(await Promise.all(promises)).forEach((value, index) => {\n\t\t\t\tif (value?.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSettingChangedById(eligibleSettings[index]._id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nfunction validateValues(values: string[], allowedValues: ISettingSelectOption[] = []): boolean {\n\treturn values.every((value) => allowedValues.some((allowedValue) => allowedValue.key === value));\n}\n\nfunction coerceInt(value: string | number | boolean | string[]): number {\n\tif (typeof value === 'number') {\n\t\treturn value;\n\t}\n\n\tif (typeof value === 'boolean') {\n\t\treturn 0;\n\t}\n\n\tif (Array.isArray(value)) {\n\t\treturn 0;\n\t}\n\n\tconst parsedValue = parseInt(value, 10);\n\tif (Number.isNaN(parsedValue)) {\n\t\treturn 0;\n\t}\n\n\treturn parsedValue;\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e4095689b83570871e6a24d4b58dc153da551e8d"}
