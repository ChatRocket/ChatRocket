{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/lib/rooms/coordinator.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"lib/rooms/coordinator.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/lib/rooms/coordinator.ts","inputSourceMap":{"version":3,"file":"lib/rooms/coordinator.ts","sourceRoot":"","sources":["lib/rooms/coordinator.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RoomType } from '@rocket.chat/core-typings';\nimport type { LocationPathname } from '@rocket.chat/ui-contexts';\n\nimport type {\n\tIRoomTypeConfig,\n\tIRoomTypeClientDirectives,\n\tIRoomTypeServerDirectives,\n\tRoomIdentification,\n} from '../../definition/IRoomTypeConfig';\n\nexport abstract class RoomCoordinator {\n\tprotected roomTypes: Record<string, { config: IRoomTypeConfig; directives: IRoomTypeClientDirectives | IRoomTypeServerDirectives }> = {};\n\n\tprotected validateRoomConfig(roomConfig: IRoomTypeConfig): void {\n\t\tconst { identifier } = roomConfig;\n\n\t\tif (typeof identifier !== 'string' || identifier.length === 0) {\n\t\t\tthrow new Error('The identifier must be a string.');\n\t\t}\n\t}\n\n\tprotected addRoomType(roomConfig: IRoomTypeConfig, directives: IRoomTypeClientDirectives | IRoomTypeServerDirectives): void {\n\t\tthis.validateRoomConfig(roomConfig);\n\n\t\tif (this.roomTypes[roomConfig.identifier]) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.roomTypes[roomConfig.identifier] = { config: roomConfig, directives };\n\t}\n\n\tprotected getRoomTypeConfig(identifier: RoomType): IRoomTypeConfig & Pick<Required<IRoomTypeConfig>, 'route'>;\n\n\tprotected getRoomTypeConfig(identifier: string): IRoomTypeConfig | undefined;\n\n\tprotected getRoomTypeConfig(identifier: string): IRoomTypeConfig | undefined {\n\t\tif (!this.roomTypes[identifier]) {\n\t\t\tthrow new Error(`Room type with identifier ${identifier} does not exist.`);\n\t\t}\n\n\t\treturn this.roomTypes[identifier].config;\n\t}\n\n\tpublic getRouteLink(roomType: string, subData: RoomIdentification): LocationPathname | false {\n\t\tconst config = this.getRoomTypeConfig(roomType);\n\t\tif (!config?.route) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst routeData = this.getRouteData(roomType, subData);\n\t\tif (!routeData) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!config.route.path) {\n\t\t\tconsole.warn(`The route for the room type ${roomType} does not have a path`);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathDef = config.route.path;\n\t\tconst fields = routeData;\n\n\t\tconst regExp = /(:[\\w\\(\\)\\\\\\+\\*\\.\\?]+)+/g;\n\t\tlet path = pathDef.replace(regExp, (key) => {\n\t\t\tconst firstRegexpChar = key.indexOf('(');\n\t\t\t// get the content behind : and (\\\\d+/)\n\t\t\tkey = key.substring(1, firstRegexpChar > 0 ? firstRegexpChar : undefined);\n\t\t\t// remove +?*\n\t\t\tkey = key.replace(/[\\+\\*\\?]+/g, '');\n\n\t\t\treturn fields[key] || '';\n\t\t});\n\n\t\tpath = path.replace(/\\/\\/+/g, '/'); // Replace multiple slashes with single slash\n\n\t\t// remove trailing slash\n\t\t// but keep the root slash if it's the only one\n\t\tpath = path.match(/^\\/{1}$/) ? path : path.replace(/\\/$/, '');\n\n\t\treturn path as LocationPathname;\n\t}\n\n\tprotected getRouteData(roomType: string, subData: RoomIdentification): Record<string, string> | false {\n\t\tif (!subData.rid && (subData as Record<string, string>)._id) {\n\t\t\tconsole.warn('Deprecated: RoomCoordinator.getRouteData received a room object');\n\t\t\tsubData.rid = (subData as Record<string, string>)._id;\n\t\t}\n\n\t\tconst config = this.getRoomTypeConfig(roomType);\n\t\tif (!config) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet routeData = {};\n\t\tif (config.route?.link) {\n\t\t\trouteData = config.route.link(subData);\n\t\t} else if (subData?.name) {\n\t\t\trouteData = {\n\t\t\t\trid: subData.rid,\n\t\t\t\tname: subData.name,\n\t\t\t};\n\t\t}\n\n\t\treturn routeData;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/lib/rooms/coordinator.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/rooms/coordinator.ts","inputSourceMap":{"version":3,"file":"lib/rooms/coordinator.ts","sourceRoot":"","sources":["lib/rooms/coordinator.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RoomType } from '@rocket.chat/core-typings';\nimport type { LocationPathname } from '@rocket.chat/ui-contexts';\n\nimport type {\n\tIRoomTypeConfig,\n\tIRoomTypeClientDirectives,\n\tIRoomTypeServerDirectives,\n\tRoomIdentification,\n} from '../../definition/IRoomTypeConfig';\n\nexport abstract class RoomCoordinator {\n\tprotected roomTypes: Record<string, { config: IRoomTypeConfig; directives: IRoomTypeClientDirectives | IRoomTypeServerDirectives }> = {};\n\n\tprotected validateRoomConfig(roomConfig: IRoomTypeConfig): void {\n\t\tconst { identifier } = roomConfig;\n\n\t\tif (typeof identifier !== 'string' || identifier.length === 0) {\n\t\t\tthrow new Error('The identifier must be a string.');\n\t\t}\n\t}\n\n\tprotected addRoomType(roomConfig: IRoomTypeConfig, directives: IRoomTypeClientDirectives | IRoomTypeServerDirectives): void {\n\t\tthis.validateRoomConfig(roomConfig);\n\n\t\tif (this.roomTypes[roomConfig.identifier]) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.roomTypes[roomConfig.identifier] = { config: roomConfig, directives };\n\t}\n\n\tprotected getRoomTypeConfig(identifier: RoomType): IRoomTypeConfig & Pick<Required<IRoomTypeConfig>, 'route'>;\n\n\tprotected getRoomTypeConfig(identifier: string): IRoomTypeConfig | undefined;\n\n\tprotected getRoomTypeConfig(identifier: string): IRoomTypeConfig | undefined {\n\t\tif (!this.roomTypes[identifier]) {\n\t\t\tthrow new Error(`Room type with identifier ${identifier} does not exist.`);\n\t\t}\n\n\t\treturn this.roomTypes[identifier].config;\n\t}\n\n\tpublic getRouteLink(roomType: string, subData: RoomIdentification): LocationPathname | false {\n\t\tconst config = this.getRoomTypeConfig(roomType);\n\t\tif (!config?.route) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst routeData = this.getRouteData(roomType, subData);\n\t\tif (!routeData) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!config.route.path) {\n\t\t\tconsole.warn(`The route for the room type ${roomType} does not have a path`);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathDef = config.route.path;\n\t\tconst fields = routeData;\n\n\t\tconst regExp = /(:[\\w\\(\\)\\\\\\+\\*\\.\\?]+)+/g;\n\t\tlet path = pathDef.replace(regExp, (key) => {\n\t\t\tconst firstRegexpChar = key.indexOf('(');\n\t\t\t// get the content behind : and (\\\\d+/)\n\t\t\tkey = key.substring(1, firstRegexpChar > 0 ? firstRegexpChar : undefined);\n\t\t\t// remove +?*\n\t\t\tkey = key.replace(/[\\+\\*\\?]+/g, '');\n\n\t\t\treturn fields[key] || '';\n\t\t});\n\n\t\tpath = path.replace(/\\/\\/+/g, '/'); // Replace multiple slashes with single slash\n\n\t\t// remove trailing slash\n\t\t// but keep the root slash if it's the only one\n\t\tpath = path.match(/^\\/{1}$/) ? path : path.replace(/\\/$/, '');\n\n\t\treturn path as LocationPathname;\n\t}\n\n\tprotected getRouteData(roomType: string, subData: RoomIdentification): Record<string, string> | false {\n\t\tif (!subData.rid && (subData as Record<string, string>)._id) {\n\t\t\tconsole.warn('Deprecated: RoomCoordinator.getRouteData received a room object');\n\t\t\tsubData.rid = (subData as Record<string, string>)._id;\n\t\t}\n\n\t\tconst config = this.getRoomTypeConfig(roomType);\n\t\tif (!config) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet routeData = {};\n\t\tif (config.route?.link) {\n\t\t\trouteData = config.route.link(subData);\n\t\t} else if (subData?.name) {\n\t\t\trouteData = {\n\t\t\t\trid: subData.rid,\n\t\t\t\tname: subData.name,\n\t\t\t};\n\t\t}\n\n\t\treturn routeData;\n\t}\n}\n"]}}},"code":"module.export({\n  RoomCoordinator: () => RoomCoordinator\n});\nclass RoomCoordinator {\n  constructor() {\n    this.roomTypes = {};\n  }\n  validateRoomConfig(roomConfig) {\n    const {\n      identifier\n    } = roomConfig;\n    if (typeof identifier !== 'string' || identifier.length === 0) {\n      throw new Error('The identifier must be a string.');\n    }\n  }\n  addRoomType(roomConfig, directives) {\n    this.validateRoomConfig(roomConfig);\n    if (this.roomTypes[roomConfig.identifier]) {\n      return;\n    }\n    this.roomTypes[roomConfig.identifier] = {\n      config: roomConfig,\n      directives\n    };\n  }\n  getRoomTypeConfig(identifier) {\n    if (!this.roomTypes[identifier]) {\n      throw new Error(\"Room type with identifier \".concat(identifier, \" does not exist.\"));\n    }\n    return this.roomTypes[identifier].config;\n  }\n  getRouteLink(roomType, subData) {\n    const config = this.getRoomTypeConfig(roomType);\n    if (!(config !== null && config !== void 0 && config.route)) {\n      return false;\n    }\n    const routeData = this.getRouteData(roomType, subData);\n    if (!routeData) {\n      return false;\n    }\n    if (!config.route.path) {\n      console.warn(\"The route for the room type \".concat(roomType, \" does not have a path\"));\n      return false;\n    }\n    const pathDef = config.route.path;\n    const fields = routeData;\n    const regExp = /(:[\\w\\(\\)\\\\\\+\\*\\.\\?]+)+/g;\n    let path = pathDef.replace(regExp, key => {\n      const firstRegexpChar = key.indexOf('(');\n      // get the content behind : and (\\\\d+/)\n      key = key.substring(1, firstRegexpChar > 0 ? firstRegexpChar : undefined);\n      // remove +?*\n      key = key.replace(/[\\+\\*\\?]+/g, '');\n      return fields[key] || '';\n    });\n    path = path.replace(/\\/\\/+/g, '/'); // Replace multiple slashes with single slash\n    // remove trailing slash\n    // but keep the root slash if it's the only one\n    path = path.match(/^\\/{1}$/) ? path : path.replace(/\\/$/, '');\n    return path;\n  }\n  getRouteData(roomType, subData) {\n    var _config$route;\n    if (!subData.rid && subData._id) {\n      console.warn('Deprecated: RoomCoordinator.getRouteData received a room object');\n      subData.rid = subData._id;\n    }\n    const config = this.getRoomTypeConfig(roomType);\n    if (!config) {\n      return false;\n    }\n    let routeData = {};\n    if ((_config$route = config.route) !== null && _config$route !== void 0 && _config$route.link) {\n      routeData = config.route.link(subData);\n    } else if (subData !== null && subData !== void 0 && subData.name) {\n      routeData = {\n        rid: subData.rid,\n        name: subData.name\n      };\n    }\n    return routeData;\n  }\n}","map":{"version":3,"names":["module","export","RoomCoordinator","constructor","roomTypes","validateRoomConfig","roomConfig","identifier","length","Error","addRoomType","directives","config","getRoomTypeConfig","concat","getRouteLink","roomType","subData","route","routeData","getRouteData","path","console","warn","pathDef","fields","regExp","replace","key","firstRegexpChar","indexOf","substring","undefined","match","_config$route","rid","_id","link","name"],"sources":["lib/rooms/coordinator.ts"],"sourcesContent":["import type { RoomType } from '@rocket.chat/core-typings';\nimport type { LocationPathname } from '@rocket.chat/ui-contexts';\n\nimport type {\n\tIRoomTypeConfig,\n\tIRoomTypeClientDirectives,\n\tIRoomTypeServerDirectives,\n\tRoomIdentification,\n} from '../../definition/IRoomTypeConfig';\n\nexport abstract class RoomCoordinator {\n\tprotected roomTypes: Record<string, { config: IRoomTypeConfig; directives: IRoomTypeClientDirectives | IRoomTypeServerDirectives }> = {};\n\n\tprotected validateRoomConfig(roomConfig: IRoomTypeConfig): void {\n\t\tconst { identifier } = roomConfig;\n\n\t\tif (typeof identifier !== 'string' || identifier.length === 0) {\n\t\t\tthrow new Error('The identifier must be a string.');\n\t\t}\n\t}\n\n\tprotected addRoomType(roomConfig: IRoomTypeConfig, directives: IRoomTypeClientDirectives | IRoomTypeServerDirectives): void {\n\t\tthis.validateRoomConfig(roomConfig);\n\n\t\tif (this.roomTypes[roomConfig.identifier]) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.roomTypes[roomConfig.identifier] = { config: roomConfig, directives };\n\t}\n\n\tprotected getRoomTypeConfig(identifier: RoomType): IRoomTypeConfig & Pick<Required<IRoomTypeConfig>, 'route'>;\n\n\tprotected getRoomTypeConfig(identifier: string): IRoomTypeConfig | undefined;\n\n\tprotected getRoomTypeConfig(identifier: string): IRoomTypeConfig | undefined {\n\t\tif (!this.roomTypes[identifier]) {\n\t\t\tthrow new Error(`Room type with identifier ${identifier} does not exist.`);\n\t\t}\n\n\t\treturn this.roomTypes[identifier].config;\n\t}\n\n\tpublic getRouteLink(roomType: string, subData: RoomIdentification): LocationPathname | false {\n\t\tconst config = this.getRoomTypeConfig(roomType);\n\t\tif (!config?.route) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst routeData = this.getRouteData(roomType, subData);\n\t\tif (!routeData) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!config.route.path) {\n\t\t\tconsole.warn(`The route for the room type ${roomType} does not have a path`);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathDef = config.route.path;\n\t\tconst fields = routeData;\n\n\t\tconst regExp = /(:[\\w\\(\\)\\\\\\+\\*\\.\\?]+)+/g;\n\t\tlet path = pathDef.replace(regExp, (key) => {\n\t\t\tconst firstRegexpChar = key.indexOf('(');\n\t\t\t// get the content behind : and (\\\\d+/)\n\t\t\tkey = key.substring(1, firstRegexpChar > 0 ? firstRegexpChar : undefined);\n\t\t\t// remove +?*\n\t\t\tkey = key.replace(/[\\+\\*\\?]+/g, '');\n\n\t\t\treturn fields[key] || '';\n\t\t});\n\n\t\tpath = path.replace(/\\/\\/+/g, '/'); // Replace multiple slashes with single slash\n\n\t\t// remove trailing slash\n\t\t// but keep the root slash if it's the only one\n\t\tpath = path.match(/^\\/{1}$/) ? path : path.replace(/\\/$/, '');\n\n\t\treturn path as LocationPathname;\n\t}\n\n\tprotected getRouteData(roomType: string, subData: RoomIdentification): Record<string, string> | false {\n\t\tif (!subData.rid && (subData as Record<string, string>)._id) {\n\t\t\tconsole.warn('Deprecated: RoomCoordinator.getRouteData received a room object');\n\t\t\tsubData.rid = (subData as Record<string, string>)._id;\n\t\t}\n\n\t\tconst config = this.getRoomTypeConfig(roomType);\n\t\tif (!config) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet routeData = {};\n\t\tif (config.route?.link) {\n\t\t\trouteData = config.route.link(subData);\n\t\t} else if (subData?.name) {\n\t\t\trouteData = {\n\t\t\t\trid: subData.rid,\n\t\t\t\tname: subData.name,\n\t\t\t};\n\t\t}\n\n\t\treturn routeData;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"194e1f8128290a75d93acc3906ddaa2a98ee71ee"}
