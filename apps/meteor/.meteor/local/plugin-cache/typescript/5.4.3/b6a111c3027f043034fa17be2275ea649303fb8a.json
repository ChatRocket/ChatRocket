{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/ufs/GoogleStorage/server.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/file-upload/ufs/GoogleStorage/server.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/ufs/GoogleStorage/server.ts","inputSourceMap":{"version":3,"file":"app/file-upload/ufs/GoogleStorage/server.ts","sourceRoot":"","sources":["app/file-upload/ufs/GoogleStorage/server.ts"],"names":[],"mappings":"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","sourcesContent":["import type { GetSignedUrlConfig } from '@google-cloud/storage';\nimport { Storage } from '@google-cloud/storage';\nimport type { IUpload } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport { check } from 'meteor/check';\nimport type { OptionalId } from 'mongodb';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { UploadFS } from '../../../../server/ufs';\nimport type { StoreOptions } from '../../../../server/ufs/ufs-store';\n\ntype GStoreOptions = StoreOptions & {\n\tconnection: {\n\t\tcredentials: {\n\t\t\tclient_email: string;\n\t\t\tprivate_key: string;\n\t\t\tprojectId: string;\n\t\t};\n\t};\n\tbucket: string;\n\tURLExpiryTimeSpan: number;\n\tgetPath: (file: OptionalId<IUpload>) => string;\n};\n\nclass GoogleStorageStore extends UploadFS.Store {\n\tprotected getPath: (file: IUpload) => string;\n\n\tconstructor(options: GStoreOptions) {\n\t\tsuper(options);\n\n\t\tconst gcs = new Storage(options.connection);\n\t\tconst bucket = gcs.bucket(options.bucket);\n\n\t\toptions.getPath =\n\t\t\toptions.getPath ||\n\t\t\tfunction (file) {\n\t\t\t\treturn file._id;\n\t\t\t};\n\n\t\tthis.getPath = function (file) {\n\t\t\tif (file.GoogleStorage) {\n\t\t\t\treturn file.GoogleStorage.path;\n\t\t\t}\n\t\t\t// Compatibility\n\t\t\t// TODO: Migration\n\t\t\tif (file.googleCloudStorage) {\n\t\t\t\treturn file.googleCloudStorage.path + file._id;\n\t\t\t}\n\n\t\t\treturn file._id;\n\t\t};\n\n\t\tthis.getRedirectURL = async (file, forceDownload = false) => {\n\t\t\tconst params: GetSignedUrlConfig = {\n\t\t\t\taction: 'read',\n\t\t\t\tresponseDisposition: forceDownload ? 'attachment' : 'inline',\n\t\t\t\texpires: Date.now() + options.URLExpiryTimeSpan * 1000,\n\t\t\t};\n\n\t\t\tconst res = await bucket.file(this.getPath(file)).getSignedUrl(params);\n\t\t\treturn res[0];\n\t\t};\n\n\t\t/**\n\t\t * Creates the file in the collection\n\t\t * @param file\n\t\t * @param callback\n\t\t * @return {string}\n\t\t */\n\t\tthis.create = async function (file) {\n\t\t\tcheck(file, Object);\n\n\t\t\tif (file._id == null) {\n\t\t\t\tfile._id = Random.id();\n\t\t\t}\n\n\t\t\tfile.GoogleStorage = {\n\t\t\t\tpath: options.getPath(file),\n\t\t\t};\n\n\t\t\tfile.store = this.options.name; // assign store to file\n\n\t\t\treturn (await this.getCollection().insertOne(file)).insertedId;\n\t\t};\n\n\t\t/**\n\t\t * Removes the file\n\t\t * @param fileId\n\t\t * @param callback\n\t\t */\n\t\tthis.delete = async function (fileId) {\n\t\t\t// TODO\n\t\t\tconst file = await this.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\tthrow new Error('File not found');\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\treturn bucket.file(this.getPath(file)).delete();\n\t\t\t} catch (err: any) {\n\t\t\t\tSystemLogger.error(err);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Returns the file read stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getReadStream = async function (_fileId, file, options = {}) {\n\t\t\tconst config: {\n\t\t\t\tstart?: number;\n\t\t\t\tend?: number;\n\t\t\t} = {};\n\n\t\t\tif (options.start != null) {\n\t\t\t\tconfig.start = options.start;\n\t\t\t}\n\n\t\t\tif (options.end != null) {\n\t\t\t\tconfig.end = options.end;\n\t\t\t}\n\n\t\t\treturn bucket.file(this.getPath(file)).createReadStream(config);\n\t\t};\n\n\t\t/**\n\t\t * Returns the file write stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getWriteStream = async function (_fileId, file /* , options*/) {\n\t\t\treturn bucket.file(this.getPath(file)).createWriteStream({\n\t\t\t\tgzip: false,\n\t\t\t\tmetadata: {\n\t\t\t\t\tcontentType: file.type,\n\t\t\t\t\tcontentDisposition: `inline; filename=${file.name}`,\n\t\t\t\t\t// metadata: {\n\t\t\t\t\t// \tcustom: 'metadata'\n\t\t\t\t\t// }\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t}\n}\n\n// Add store to UFS namespace\nUploadFS.store.GoogleStorage = GoogleStorageStore;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/ufs/GoogleStorage/server.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/file-upload/ufs/GoogleStorage/server.ts","inputSourceMap":{"version":3,"file":"app/file-upload/ufs/GoogleStorage/server.ts","sourceRoot":"","sources":["app/file-upload/ufs/GoogleStorage/server.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAEhD,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAGrC,OAAO,EAAE,YAAY,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAgBlD,MAAM,kBAAmB,SAAQ,QAAQ,CAAC,KAAK;IACpC,OAAO,CAA4B;IAE7C,YAAY,OAAsB;QACjC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC5C,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAE1C,OAAO,CAAC,OAAO;YACd,OAAO,CAAC,OAAO;gBACf,UAAU,IAAI;oBACb,OAAO,IAAI,CAAC,GAAG,CAAC;gBACjB,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,UAAU,IAAI;YAC5B,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;gBACxB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YAChC,CAAC;YACD,gBAAgB;YAChB,kBAAkB;YAClB,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC7B,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;YAChD,CAAC;YAED,OAAO,IAAI,CAAC,GAAG,CAAC;QACjB,CAAC,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG,KAAK,EAAE,IAAI,EAAE,aAAa,GAAG,KAAK,EAAE,EAAE;YAC3D,MAAM,MAAM,GAAuB;gBAClC,MAAM,EAAE,MAAM;gBACd,mBAAmB,EAAE,aAAa,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ;gBAC5D,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,iBAAiB,GAAG,IAAI;aACtD,CAAC;YAEF,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACvE,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC;QAEF;;;;;WAKG;QACH,IAAI,CAAC,MAAM,GAAG,KAAK,WAAW,IAAI;YACjC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAEpB,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;gBACtB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE,EAAE,CAAC;YACxB,CAAC;YAED,IAAI,CAAC,aAAa,GAAG;gBACpB,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;aAC3B,CAAC;YAEF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,uBAAuB;YAEvD,OAAO,CAAC,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC;QAChE,CAAC,CAAC;QAEF;;;;WAIG;QACH,IAAI,CAAC,MAAM,GAAG,KAAK,WAAW,MAAM;YACnC,OAAO;YACP,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;YACnC,CAAC;YAED,IAAI,CAAC;gBACJ,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;YACjD,CAAC;YAAC,OAAO,GAAQ,EAAE,CAAC;gBACnB,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC;QACF,CAAC,CAAC;QAEF;;;;;;WAMG;QACH,IAAI,CAAC,aAAa,GAAG,KAAK,WAAW,OAAO,EAAE,IAAI,EAAE,OAAO,GAAG,EAAE;YAC/D,MAAM,MAAM,GAGR,EAAE,CAAC;YAEP,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC;gBAC3B,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC9B,CAAC;YAED,IAAI,OAAO,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;gBACzB,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;YAC1B,CAAC;YAED,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACjE,CAAC,CAAC;QAEF;;;;;;WAMG;QACH,IAAI,CAAC,cAAc,GAAG,KAAK,WAAW,OAAO,EAAE,IAAI,CAAC,cAAc;YACjE,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC;gBACxD,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE;oBACT,WAAW,EAAE,IAAI,CAAC,IAAI;oBACtB,kBAAkB,EAAE,oBAAoB,IAAI,CAAC,IAAI,EAAE;oBACnD,cAAc;oBACd,sBAAsB;oBACtB,IAAI;iBACJ;aACD,CAAC,CAAC;QACJ,CAAC,CAAC;IACH,CAAC;CACD;AAED,6BAA6B;AAC7B,QAAQ,CAAC,KAAK,CAAC,aAAa,GAAG,kBAAkB,CAAC","sourcesContent":["import type { GetSignedUrlConfig } from '@google-cloud/storage';\nimport { Storage } from '@google-cloud/storage';\nimport type { IUpload } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport { check } from 'meteor/check';\nimport type { OptionalId } from 'mongodb';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { UploadFS } from '../../../../server/ufs';\nimport type { StoreOptions } from '../../../../server/ufs/ufs-store';\n\ntype GStoreOptions = StoreOptions & {\n\tconnection: {\n\t\tcredentials: {\n\t\t\tclient_email: string;\n\t\t\tprivate_key: string;\n\t\t\tprojectId: string;\n\t\t};\n\t};\n\tbucket: string;\n\tURLExpiryTimeSpan: number;\n\tgetPath: (file: OptionalId<IUpload>) => string;\n};\n\nclass GoogleStorageStore extends UploadFS.Store {\n\tprotected getPath: (file: IUpload) => string;\n\n\tconstructor(options: GStoreOptions) {\n\t\tsuper(options);\n\n\t\tconst gcs = new Storage(options.connection);\n\t\tconst bucket = gcs.bucket(options.bucket);\n\n\t\toptions.getPath =\n\t\t\toptions.getPath ||\n\t\t\tfunction (file) {\n\t\t\t\treturn file._id;\n\t\t\t};\n\n\t\tthis.getPath = function (file) {\n\t\t\tif (file.GoogleStorage) {\n\t\t\t\treturn file.GoogleStorage.path;\n\t\t\t}\n\t\t\t// Compatibility\n\t\t\t// TODO: Migration\n\t\t\tif (file.googleCloudStorage) {\n\t\t\t\treturn file.googleCloudStorage.path + file._id;\n\t\t\t}\n\n\t\t\treturn file._id;\n\t\t};\n\n\t\tthis.getRedirectURL = async (file, forceDownload = false) => {\n\t\t\tconst params: GetSignedUrlConfig = {\n\t\t\t\taction: 'read',\n\t\t\t\tresponseDisposition: forceDownload ? 'attachment' : 'inline',\n\t\t\t\texpires: Date.now() + options.URLExpiryTimeSpan * 1000,\n\t\t\t};\n\n\t\t\tconst res = await bucket.file(this.getPath(file)).getSignedUrl(params);\n\t\t\treturn res[0];\n\t\t};\n\n\t\t/**\n\t\t * Creates the file in the collection\n\t\t * @param file\n\t\t * @param callback\n\t\t * @return {string}\n\t\t */\n\t\tthis.create = async function (file) {\n\t\t\tcheck(file, Object);\n\n\t\t\tif (file._id == null) {\n\t\t\t\tfile._id = Random.id();\n\t\t\t}\n\n\t\t\tfile.GoogleStorage = {\n\t\t\t\tpath: options.getPath(file),\n\t\t\t};\n\n\t\t\tfile.store = this.options.name; // assign store to file\n\n\t\t\treturn (await this.getCollection().insertOne(file)).insertedId;\n\t\t};\n\n\t\t/**\n\t\t * Removes the file\n\t\t * @param fileId\n\t\t * @param callback\n\t\t */\n\t\tthis.delete = async function (fileId) {\n\t\t\t// TODO\n\t\t\tconst file = await this.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\tthrow new Error('File not found');\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\treturn bucket.file(this.getPath(file)).delete();\n\t\t\t} catch (err: any) {\n\t\t\t\tSystemLogger.error(err);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Returns the file read stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getReadStream = async function (_fileId, file, options = {}) {\n\t\t\tconst config: {\n\t\t\t\tstart?: number;\n\t\t\t\tend?: number;\n\t\t\t} = {};\n\n\t\t\tif (options.start != null) {\n\t\t\t\tconfig.start = options.start;\n\t\t\t}\n\n\t\t\tif (options.end != null) {\n\t\t\t\tconfig.end = options.end;\n\t\t\t}\n\n\t\t\treturn bucket.file(this.getPath(file)).createReadStream(config);\n\t\t};\n\n\t\t/**\n\t\t * Returns the file write stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getWriteStream = async function (_fileId, file /* , options*/) {\n\t\t\treturn bucket.file(this.getPath(file)).createWriteStream({\n\t\t\t\tgzip: false,\n\t\t\t\tmetadata: {\n\t\t\t\t\tcontentType: file.type,\n\t\t\t\t\tcontentDisposition: `inline; filename=${file.name}`,\n\t\t\t\t\t// metadata: {\n\t\t\t\t\t// \tcustom: 'metadata'\n\t\t\t\t\t// }\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t}\n}\n\n// Add store to UFS namespace\nUploadFS.store.GoogleStorage = GoogleStorageStore;\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Storage;\n    module.link(\"@google-cloud/storage\", {\n      Storage(v) {\n        Storage = v;\n      }\n    }, 0);\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 1);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 2);\n    let SystemLogger;\n    module.link(\"../../../../server/lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 3);\n    let UploadFS;\n    module.link(\"../../../../server/ufs\", {\n      UploadFS(v) {\n        UploadFS = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class GoogleStorageStore extends UploadFS.Store {\n      constructor(options) {\n        var _this;\n        super(options);\n        _this = this;\n        this.getPath = void 0;\n        const gcs = new Storage(options.connection);\n        const bucket = gcs.bucket(options.bucket);\n        options.getPath = options.getPath || function (file) {\n          return file._id;\n        };\n        this.getPath = function (file) {\n          if (file.GoogleStorage) {\n            return file.GoogleStorage.path;\n          }\n          // Compatibility\n          // TODO: Migration\n          if (file.googleCloudStorage) {\n            return file.googleCloudStorage.path + file._id;\n          }\n          return file._id;\n        };\n        this.getRedirectURL = async function (file) {\n          let forceDownload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          const params = {\n            action: 'read',\n            responseDisposition: forceDownload ? 'attachment' : 'inline',\n            expires: Date.now() + options.URLExpiryTimeSpan * 1000\n          };\n          const res = await bucket.file(_this.getPath(file)).getSignedUrl(params);\n          return res[0];\n        };\n        /**\n         * Creates the file in the collection\n         * @param file\n         * @param callback\n         * @return {string}\n         */\n        this.create = async function (file) {\n          check(file, Object);\n          if (file._id == null) {\n            file._id = Random.id();\n          }\n          file.GoogleStorage = {\n            path: options.getPath(file)\n          };\n          file.store = this.options.name; // assign store to file\n          return (await this.getCollection().insertOne(file)).insertedId;\n        };\n        /**\n         * Removes the file\n         * @param fileId\n         * @param callback\n         */\n        this.delete = async function (fileId) {\n          // TODO\n          const file = await this.getCollection().findOne({\n            _id: fileId\n          });\n          if (!file) {\n            throw new Error('File not found');\n          }\n          try {\n            return bucket.file(this.getPath(file)).delete();\n          } catch (err) {\n            SystemLogger.error(err);\n          }\n        };\n        /**\n         * Returns the file read stream\n         * @param fileId\n         * @param file\n         * @param options\n         * @return {*}\n         */\n        this.getReadStream = async function (_fileId, file) {\n          let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n          const config = {};\n          if (options.start != null) {\n            config.start = options.start;\n          }\n          if (options.end != null) {\n            config.end = options.end;\n          }\n          return bucket.file(this.getPath(file)).createReadStream(config);\n        };\n        /**\n         * Returns the file write stream\n         * @param fileId\n         * @param file\n         * @param options\n         * @return {*}\n         */\n        this.getWriteStream = async function (_fileId, file /* , options*/) {\n          return bucket.file(this.getPath(file)).createWriteStream({\n            gzip: false,\n            metadata: {\n              contentType: file.type,\n              contentDisposition: \"inline; filename=\".concat(file.name)\n              // metadata: {\n              // \tcustom: 'metadata'\n              // }\n            }\n          });\n        };\n      }\n    }\n    // Add store to UFS namespace\n    UploadFS.store.GoogleStorage = GoogleStorageStore;\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Storage","module","link","v","Random","check","SystemLogger","UploadFS","__reifyWaitForDeps__","GoogleStorageStore","Store","constructor","options","_this","this","getPath","gcs","connection","bucket","file","_id","GoogleStorage","path","googleCloudStorage","getRedirectURL","forceDownload","arguments","length","undefined","params","action","responseDisposition","expires","Date","now","URLExpiryTimeSpan","res","getSignedUrl","create","Object","id","store","name","getCollection","insertOne","insertedId","delete","fileId","findOne","Error","err","error","getReadStream","_fileId","config","start","end","createReadStream","getWriteStream","createWriteStream","gzip","metadata","contentType","type","contentDisposition","concat","__reify_async_result__","_reifyError","self","async"],"sources":["app/file-upload/ufs/GoogleStorage/server.ts"],"sourcesContent":["import type { GetSignedUrlConfig } from '@google-cloud/storage';\nimport { Storage } from '@google-cloud/storage';\nimport type { IUpload } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport { check } from 'meteor/check';\nimport type { OptionalId } from 'mongodb';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { UploadFS } from '../../../../server/ufs';\nimport type { StoreOptions } from '../../../../server/ufs/ufs-store';\n\ntype GStoreOptions = StoreOptions & {\n\tconnection: {\n\t\tcredentials: {\n\t\t\tclient_email: string;\n\t\t\tprivate_key: string;\n\t\t\tprojectId: string;\n\t\t};\n\t};\n\tbucket: string;\n\tURLExpiryTimeSpan: number;\n\tgetPath: (file: OptionalId<IUpload>) => string;\n};\n\nclass GoogleStorageStore extends UploadFS.Store {\n\tprotected getPath: (file: IUpload) => string;\n\n\tconstructor(options: GStoreOptions) {\n\t\tsuper(options);\n\n\t\tconst gcs = new Storage(options.connection);\n\t\tconst bucket = gcs.bucket(options.bucket);\n\n\t\toptions.getPath =\n\t\t\toptions.getPath ||\n\t\t\tfunction (file) {\n\t\t\t\treturn file._id;\n\t\t\t};\n\n\t\tthis.getPath = function (file) {\n\t\t\tif (file.GoogleStorage) {\n\t\t\t\treturn file.GoogleStorage.path;\n\t\t\t}\n\t\t\t// Compatibility\n\t\t\t// TODO: Migration\n\t\t\tif (file.googleCloudStorage) {\n\t\t\t\treturn file.googleCloudStorage.path + file._id;\n\t\t\t}\n\n\t\t\treturn file._id;\n\t\t};\n\n\t\tthis.getRedirectURL = async (file, forceDownload = false) => {\n\t\t\tconst params: GetSignedUrlConfig = {\n\t\t\t\taction: 'read',\n\t\t\t\tresponseDisposition: forceDownload ? 'attachment' : 'inline',\n\t\t\t\texpires: Date.now() + options.URLExpiryTimeSpan * 1000,\n\t\t\t};\n\n\t\t\tconst res = await bucket.file(this.getPath(file)).getSignedUrl(params);\n\t\t\treturn res[0];\n\t\t};\n\n\t\t/**\n\t\t * Creates the file in the collection\n\t\t * @param file\n\t\t * @param callback\n\t\t * @return {string}\n\t\t */\n\t\tthis.create = async function (file) {\n\t\t\tcheck(file, Object);\n\n\t\t\tif (file._id == null) {\n\t\t\t\tfile._id = Random.id();\n\t\t\t}\n\n\t\t\tfile.GoogleStorage = {\n\t\t\t\tpath: options.getPath(file),\n\t\t\t};\n\n\t\t\tfile.store = this.options.name; // assign store to file\n\n\t\t\treturn (await this.getCollection().insertOne(file)).insertedId;\n\t\t};\n\n\t\t/**\n\t\t * Removes the file\n\t\t * @param fileId\n\t\t * @param callback\n\t\t */\n\t\tthis.delete = async function (fileId) {\n\t\t\t// TODO\n\t\t\tconst file = await this.getCollection().findOne({ _id: fileId });\n\t\t\tif (!file) {\n\t\t\t\tthrow new Error('File not found');\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\treturn bucket.file(this.getPath(file)).delete();\n\t\t\t} catch (err: any) {\n\t\t\t\tSystemLogger.error(err);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Returns the file read stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getReadStream = async function (_fileId, file, options = {}) {\n\t\t\tconst config: {\n\t\t\t\tstart?: number;\n\t\t\t\tend?: number;\n\t\t\t} = {};\n\n\t\t\tif (options.start != null) {\n\t\t\t\tconfig.start = options.start;\n\t\t\t}\n\n\t\t\tif (options.end != null) {\n\t\t\t\tconfig.end = options.end;\n\t\t\t}\n\n\t\t\treturn bucket.file(this.getPath(file)).createReadStream(config);\n\t\t};\n\n\t\t/**\n\t\t * Returns the file write stream\n\t\t * @param fileId\n\t\t * @param file\n\t\t * @param options\n\t\t * @return {*}\n\t\t */\n\t\tthis.getWriteStream = async function (_fileId, file /* , options*/) {\n\t\t\treturn bucket.file(this.getPath(file)).createWriteStream({\n\t\t\t\tgzip: false,\n\t\t\t\tmetadata: {\n\t\t\t\t\tcontentType: file.type,\n\t\t\t\t\tcontentDisposition: `inline; filename=${file.name}`,\n\t\t\t\t\t// metadata: {\n\t\t\t\t\t// \tcustom: 'metadata'\n\t\t\t\t\t// }\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t}\n}\n\n// Add store to UFS namespace\nUploadFS.store.GoogleStorage = GoogleStorageStore;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b6a111c3027f043034fa17be2275ea649303fb8a"}
