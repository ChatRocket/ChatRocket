{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/2fa/process2faReturn.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/2fa/process2faReturn.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/2fa/process2faReturn.ts","inputSourceMap":{"version":3,"file":"client/lib/2fa/process2faReturn.ts","sourceRoot":"","sources":["client/lib/2fa/process2faReturn.ts"],"names":[],"mappings":"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","sourcesContent":["import { SHA256 } from '@rocket.chat/sha256';\nimport { Meteor } from 'meteor/meteor';\nimport { lazy } from 'react';\n\nimport { imperativeModal } from '../imperativeModal';\nimport type { LoginCallback } from './overrideLoginMethod';\nimport { isTotpInvalidError, isTotpRequiredError } from './utils';\n\nconst TwoFactorModal = lazy(() => import('../../components/TwoFactorModal'));\n\nconst twoFactorMethods = ['totp', 'email', 'password'] as const;\n\ntype TwoFactorMethod = (typeof twoFactorMethods)[number];\n\nconst isTwoFactorMethod = (method: string): method is TwoFactorMethod => twoFactorMethods.includes(method as TwoFactorMethod);\n\nconst hasRequiredTwoFactorMethod = (\n\terror: Meteor.Error,\n): error is Meteor.Error & { details: { method: TwoFactorMethod; emailOrUsername?: string } } => {\n\tconst details = error.details as unknown;\n\n\treturn (\n\t\ttypeof details === 'object' &&\n\t\tdetails !== null &&\n\t\ttypeof (details as { method: unknown }).method === 'string' &&\n\t\tisTwoFactorMethod((details as { method: string }).method)\n\t);\n};\n\nfunction assertModalProps(props: {\n\tmethod: TwoFactorMethod;\n\temailOrUsername?: string;\n}): asserts props is { method: 'totp' } | { method: 'password' } | { method: 'email'; emailOrUsername: string } {\n\tif (props.method === 'email' && typeof props.emailOrUsername !== 'string') {\n\t\tthrow new Error('Invalid Two Factor method');\n\t}\n}\n\nconst getProps = (\n\tmethod: 'totp' | 'email' | 'password',\n\temailOrUsername?: { username: string } | { email: string } | { id: string } | string,\n) => {\n\tswitch (method) {\n\t\tcase 'totp':\n\t\t\treturn { method };\n\t\tcase 'email':\n\t\t\treturn {\n\t\t\t\tmethod,\n\t\t\t\temailOrUsername: typeof emailOrUsername === 'string' ? emailOrUsername : Meteor.user()?.username,\n\t\t\t};\n\t\tcase 'password':\n\t\t\treturn { method };\n\t}\n};\n\nexport async function process2faReturn({\n\terror,\n\tresult,\n\toriginalCallback,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: globalThis.Error | Meteor.Error | Meteor.TypedError | undefined;\n\tresult: unknown;\n\toriginalCallback: LoginCallback | undefined;\n\tonCode: (code: string, method: string) => void;\n\temailOrUsername: { username: string } | { email: string } | { id: string } | string | null | undefined;\n}): Promise<void> {\n\tif (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n\t\toriginalCallback?.(error, result);\n\t\treturn;\n\t}\n\n\tconst props = {\n\t\t...getProps(error.details.method, emailOrUsername || error.details.emailOrUsername),\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tinvalidAttempt: isTotpInvalidError(error),\n\t};\n\n\ttry {\n\t\tconst code = await invokeTwoFactorModal(props);\n\n\t\tonCode(code, props.method);\n\t} catch (error) {\n\t\tprocess2faReturn({\n\t\t\terror: error as globalThis.Error | Meteor.Error | Meteor.TypedError | undefined,\n\t\t\tresult,\n\t\t\toriginalCallback,\n\t\t\tonCode,\n\t\t\temailOrUsername,\n\t\t});\n\t}\n}\n\nexport async function process2faAsyncReturn({\n\terror,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: unknown;\n\tonCode: (code: string, method: string) => unknown | Promise<unknown>;\n\temailOrUsername: string | null | undefined;\n}): Promise<unknown> {\n\t// if the promise is rejected, we need to check if it's a 2fa error\n\t// if it's not a 2fa error, we reject the promise\n\tif (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n\t\tthrow error;\n\t}\n\n\tconst props = {\n\t\tmethod: error.details.method,\n\t\temailOrUsername: emailOrUsername || error.details.emailOrUsername || Meteor.user()?.username,\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tinvalidAttempt: isTotpInvalidError(error),\n\t};\n\n\tassertModalProps(props);\n\n\ttry {\n\t\tconst code = await invokeTwoFactorModal(props);\n\n\t\treturn onCode(code, props.method);\n\t} catch (error) {\n\t\treturn process2faAsyncReturn({\n\t\t\terror,\n\t\t\tonCode,\n\t\t\temailOrUsername,\n\t\t});\n\t}\n}\n\nexport const invokeTwoFactorModal = async (props: {\n\tmethod: 'totp' | 'email' | 'password';\n\temailOrUsername?: string | undefined;\n\tinvalidAttempt?: boolean;\n}) => {\n\tassertModalProps(props);\n\n\treturn new Promise<string>((resolve, reject) => {\n\t\timperativeModal.open({\n\t\t\tcomponent: TwoFactorModal,\n\t\t\tprops: {\n\t\t\t\t...props,\n\t\t\t\tonConfirm: (code: string, method: string): void => {\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t\tresolve(method === 'password' ? SHA256(code) : code);\n\t\t\t\t},\n\t\t\t\tonClose: (): void => {\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t\treject(new Meteor.Error('totp-canceled'));\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/2fa/process2faReturn.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/2fa/process2faReturn.ts","inputSourceMap":{"version":3,"file":"client/lib/2fa/process2faReturn.ts","sourceRoot":"","sources":["client/lib/2fa/process2faReturn.ts"],"names":[],"mappings":"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","sourcesContent":["import { SHA256 } from '@rocket.chat/sha256';\nimport { Meteor } from 'meteor/meteor';\nimport { lazy } from 'react';\n\nimport { imperativeModal } from '../imperativeModal';\nimport type { LoginCallback } from './overrideLoginMethod';\nimport { isTotpInvalidError, isTotpRequiredError } from './utils';\n\nconst TwoFactorModal = lazy(() => import('../../components/TwoFactorModal'));\n\nconst twoFactorMethods = ['totp', 'email', 'password'] as const;\n\ntype TwoFactorMethod = (typeof twoFactorMethods)[number];\n\nconst isTwoFactorMethod = (method: string): method is TwoFactorMethod => twoFactorMethods.includes(method as TwoFactorMethod);\n\nconst hasRequiredTwoFactorMethod = (\n\terror: Meteor.Error,\n): error is Meteor.Error & { details: { method: TwoFactorMethod; emailOrUsername?: string } } => {\n\tconst details = error.details as unknown;\n\n\treturn (\n\t\ttypeof details === 'object' &&\n\t\tdetails !== null &&\n\t\ttypeof (details as { method: unknown }).method === 'string' &&\n\t\tisTwoFactorMethod((details as { method: string }).method)\n\t);\n};\n\nfunction assertModalProps(props: {\n\tmethod: TwoFactorMethod;\n\temailOrUsername?: string;\n}): asserts props is { method: 'totp' } | { method: 'password' } | { method: 'email'; emailOrUsername: string } {\n\tif (props.method === 'email' && typeof props.emailOrUsername !== 'string') {\n\t\tthrow new Error('Invalid Two Factor method');\n\t}\n}\n\nconst getProps = (\n\tmethod: 'totp' | 'email' | 'password',\n\temailOrUsername?: { username: string } | { email: string } | { id: string } | string,\n) => {\n\tswitch (method) {\n\t\tcase 'totp':\n\t\t\treturn { method };\n\t\tcase 'email':\n\t\t\treturn {\n\t\t\t\tmethod,\n\t\t\t\temailOrUsername: typeof emailOrUsername === 'string' ? emailOrUsername : Meteor.user()?.username,\n\t\t\t};\n\t\tcase 'password':\n\t\t\treturn { method };\n\t}\n};\n\nexport async function process2faReturn({\n\terror,\n\tresult,\n\toriginalCallback,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: globalThis.Error | Meteor.Error | Meteor.TypedError | undefined;\n\tresult: unknown;\n\toriginalCallback: LoginCallback | undefined;\n\tonCode: (code: string, method: string) => void;\n\temailOrUsername: { username: string } | { email: string } | { id: string } | string | null | undefined;\n}): Promise<void> {\n\tif (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n\t\toriginalCallback?.(error, result);\n\t\treturn;\n\t}\n\n\tconst props = {\n\t\t...getProps(error.details.method, emailOrUsername || error.details.emailOrUsername),\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tinvalidAttempt: isTotpInvalidError(error),\n\t};\n\n\ttry {\n\t\tconst code = await invokeTwoFactorModal(props);\n\n\t\tonCode(code, props.method);\n\t} catch (error) {\n\t\tprocess2faReturn({\n\t\t\terror: error as globalThis.Error | Meteor.Error | Meteor.TypedError | undefined,\n\t\t\tresult,\n\t\t\toriginalCallback,\n\t\t\tonCode,\n\t\t\temailOrUsername,\n\t\t});\n\t}\n}\n\nexport async function process2faAsyncReturn({\n\terror,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: unknown;\n\tonCode: (code: string, method: string) => unknown | Promise<unknown>;\n\temailOrUsername: string | null | undefined;\n}): Promise<unknown> {\n\t// if the promise is rejected, we need to check if it's a 2fa error\n\t// if it's not a 2fa error, we reject the promise\n\tif (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n\t\tthrow error;\n\t}\n\n\tconst props = {\n\t\tmethod: error.details.method,\n\t\temailOrUsername: emailOrUsername || error.details.emailOrUsername || Meteor.user()?.username,\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tinvalidAttempt: isTotpInvalidError(error),\n\t};\n\n\tassertModalProps(props);\n\n\ttry {\n\t\tconst code = await invokeTwoFactorModal(props);\n\n\t\treturn onCode(code, props.method);\n\t} catch (error) {\n\t\treturn process2faAsyncReturn({\n\t\t\terror,\n\t\t\tonCode,\n\t\t\temailOrUsername,\n\t\t});\n\t}\n}\n\nexport const invokeTwoFactorModal = async (props: {\n\tmethod: 'totp' | 'email' | 'password';\n\temailOrUsername?: string | undefined;\n\tinvalidAttempt?: boolean;\n}) => {\n\tassertModalProps(props);\n\n\treturn new Promise<string>((resolve, reject) => {\n\t\timperativeModal.open({\n\t\t\tcomponent: TwoFactorModal,\n\t\t\tprops: {\n\t\t\t\t...props,\n\t\t\t\tonConfirm: (code: string, method: string): void => {\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t\tresolve(method === 'password' ? SHA256(code) : code);\n\t\t\t\t},\n\t\t\t\tonClose: (): void => {\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t\treject(new Meteor.Error('totp-canceled'));\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t});\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  process2faReturn: () => process2faReturn,\n  process2faAsyncReturn: () => process2faAsyncReturn,\n  invokeTwoFactorModal: () => invokeTwoFactorModal\n});\nlet SHA256;\nmodule.link(\"@rocket.chat/sha256\", {\n  SHA256(v) {\n    SHA256 = v;\n  }\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 1);\nlet lazy;\nmodule.link(\"react\", {\n  lazy(v) {\n    lazy = v;\n  }\n}, 2);\nlet imperativeModal;\nmodule.link(\"../imperativeModal\", {\n  imperativeModal(v) {\n    imperativeModal = v;\n  }\n}, 3);\nlet isTotpInvalidError, isTotpRequiredError;\nmodule.link(\"./utils\", {\n  isTotpInvalidError(v) {\n    isTotpInvalidError = v;\n  },\n  isTotpRequiredError(v) {\n    isTotpRequiredError = v;\n  }\n}, 4);\nconst TwoFactorModal = /*#__PURE__*/lazy(() => module.dynamicImport('../../components/TwoFactorModal'));\nconst twoFactorMethods = ['totp', 'email', 'password'];\nconst isTwoFactorMethod = method => twoFactorMethods.includes(method);\nconst hasRequiredTwoFactorMethod = error => {\n  const details = error.details;\n  return typeof details === 'object' && details !== null && typeof details.method === 'string' && isTwoFactorMethod(details.method);\n};\nfunction assertModalProps(props) {\n  if (props.method === 'email' && typeof props.emailOrUsername !== 'string') {\n    throw new Error('Invalid Two Factor method');\n  }\n}\nconst getProps = (method, emailOrUsername) => {\n  var _Meteor$user;\n  switch (method) {\n    case 'totp':\n      return {\n        method\n      };\n    case 'email':\n      return {\n        method,\n        emailOrUsername: typeof emailOrUsername === 'string' ? emailOrUsername : (_Meteor$user = Meteor.user()) === null || _Meteor$user === void 0 ? void 0 : _Meteor$user.username\n      };\n    case 'password':\n      return {\n        method\n      };\n  }\n};\nasync function process2faReturn(_ref) {\n  let {\n    error,\n    result,\n    originalCallback,\n    onCode,\n    emailOrUsername\n  } = _ref;\n  if (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n    originalCallback === null || originalCallback === void 0 ? void 0 : originalCallback(error, result);\n    return;\n  }\n  const props = _objectSpread(_objectSpread({}, getProps(error.details.method, emailOrUsername || error.details.emailOrUsername)), {}, {\n    // eslint-disable-next-line no-nested-ternary\n    invalidAttempt: isTotpInvalidError(error)\n  });\n  try {\n    const code = await invokeTwoFactorModal(props);\n    onCode(code, props.method);\n  } catch (error) {\n    process2faReturn({\n      error: error,\n      result,\n      originalCallback,\n      onCode,\n      emailOrUsername\n    });\n  }\n}\nasync function process2faAsyncReturn(_ref2) {\n  var _Meteor$user2;\n  let {\n    error,\n    onCode,\n    emailOrUsername\n  } = _ref2;\n  // if the promise is rejected, we need to check if it's a 2fa error\n  // if it's not a 2fa error, we reject the promise\n  if (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n    throw error;\n  }\n  const props = {\n    method: error.details.method,\n    emailOrUsername: emailOrUsername || error.details.emailOrUsername || ((_Meteor$user2 = Meteor.user()) === null || _Meteor$user2 === void 0 ? void 0 : _Meteor$user2.username),\n    // eslint-disable-next-line no-nested-ternary\n    invalidAttempt: isTotpInvalidError(error)\n  };\n  assertModalProps(props);\n  try {\n    const code = await invokeTwoFactorModal(props);\n    return onCode(code, props.method);\n  } catch (error) {\n    return process2faAsyncReturn({\n      error,\n      onCode,\n      emailOrUsername\n    });\n  }\n}\nconst invokeTwoFactorModal = async props => {\n  assertModalProps(props);\n  return new Promise((resolve, reject) => {\n    imperativeModal.open({\n      component: TwoFactorModal,\n      props: _objectSpread(_objectSpread({}, props), {}, {\n        onConfirm: (code, method) => {\n          imperativeModal.close();\n          resolve(method === 'password' ? SHA256(code) : code);\n        },\n        onClose: () => {\n          imperativeModal.close();\n          reject(new Meteor.Error('totp-canceled'));\n        }\n      })\n    });\n  });\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","process2faReturn","process2faAsyncReturn","invokeTwoFactorModal","SHA256","Meteor","lazy","imperativeModal","isTotpInvalidError","isTotpRequiredError","TwoFactorModal","dynamicImport","twoFactorMethods","isTwoFactorMethod","method","includes","hasRequiredTwoFactorMethod","error","details","assertModalProps","props","emailOrUsername","Error","getProps","_Meteor$user","user","username","_ref","result","originalCallback","onCode","invalidAttempt","code","_ref2","_Meteor$user2","Promise","resolve","reject","open","component","onConfirm","close","onClose"],"sources":["client/lib/2fa/process2faReturn.ts"],"sourcesContent":["import { SHA256 } from '@rocket.chat/sha256';\nimport { Meteor } from 'meteor/meteor';\nimport { lazy } from 'react';\n\nimport { imperativeModal } from '../imperativeModal';\nimport type { LoginCallback } from './overrideLoginMethod';\nimport { isTotpInvalidError, isTotpRequiredError } from './utils';\n\nconst TwoFactorModal = lazy(() => import('../../components/TwoFactorModal'));\n\nconst twoFactorMethods = ['totp', 'email', 'password'] as const;\n\ntype TwoFactorMethod = (typeof twoFactorMethods)[number];\n\nconst isTwoFactorMethod = (method: string): method is TwoFactorMethod => twoFactorMethods.includes(method as TwoFactorMethod);\n\nconst hasRequiredTwoFactorMethod = (\n\terror: Meteor.Error,\n): error is Meteor.Error & { details: { method: TwoFactorMethod; emailOrUsername?: string } } => {\n\tconst details = error.details as unknown;\n\n\treturn (\n\t\ttypeof details === 'object' &&\n\t\tdetails !== null &&\n\t\ttypeof (details as { method: unknown }).method === 'string' &&\n\t\tisTwoFactorMethod((details as { method: string }).method)\n\t);\n};\n\nfunction assertModalProps(props: {\n\tmethod: TwoFactorMethod;\n\temailOrUsername?: string;\n}): asserts props is { method: 'totp' } | { method: 'password' } | { method: 'email'; emailOrUsername: string } {\n\tif (props.method === 'email' && typeof props.emailOrUsername !== 'string') {\n\t\tthrow new Error('Invalid Two Factor method');\n\t}\n}\n\nconst getProps = (\n\tmethod: 'totp' | 'email' | 'password',\n\temailOrUsername?: { username: string } | { email: string } | { id: string } | string,\n) => {\n\tswitch (method) {\n\t\tcase 'totp':\n\t\t\treturn { method };\n\t\tcase 'email':\n\t\t\treturn {\n\t\t\t\tmethod,\n\t\t\t\temailOrUsername: typeof emailOrUsername === 'string' ? emailOrUsername : Meteor.user()?.username,\n\t\t\t};\n\t\tcase 'password':\n\t\t\treturn { method };\n\t}\n};\n\nexport async function process2faReturn({\n\terror,\n\tresult,\n\toriginalCallback,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: globalThis.Error | Meteor.Error | Meteor.TypedError | undefined;\n\tresult: unknown;\n\toriginalCallback: LoginCallback | undefined;\n\tonCode: (code: string, method: string) => void;\n\temailOrUsername: { username: string } | { email: string } | { id: string } | string | null | undefined;\n}): Promise<void> {\n\tif (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n\t\toriginalCallback?.(error, result);\n\t\treturn;\n\t}\n\n\tconst props = {\n\t\t...getProps(error.details.method, emailOrUsername || error.details.emailOrUsername),\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tinvalidAttempt: isTotpInvalidError(error),\n\t};\n\n\ttry {\n\t\tconst code = await invokeTwoFactorModal(props);\n\n\t\tonCode(code, props.method);\n\t} catch (error) {\n\t\tprocess2faReturn({\n\t\t\terror: error as globalThis.Error | Meteor.Error | Meteor.TypedError | undefined,\n\t\t\tresult,\n\t\t\toriginalCallback,\n\t\t\tonCode,\n\t\t\temailOrUsername,\n\t\t});\n\t}\n}\n\nexport async function process2faAsyncReturn({\n\terror,\n\tonCode,\n\temailOrUsername,\n}: {\n\terror: unknown;\n\tonCode: (code: string, method: string) => unknown | Promise<unknown>;\n\temailOrUsername: string | null | undefined;\n}): Promise<unknown> {\n\t// if the promise is rejected, we need to check if it's a 2fa error\n\t// if it's not a 2fa error, we reject the promise\n\tif (!(isTotpRequiredError(error) || isTotpInvalidError(error)) || !hasRequiredTwoFactorMethod(error)) {\n\t\tthrow error;\n\t}\n\n\tconst props = {\n\t\tmethod: error.details.method,\n\t\temailOrUsername: emailOrUsername || error.details.emailOrUsername || Meteor.user()?.username,\n\t\t// eslint-disable-next-line no-nested-ternary\n\t\tinvalidAttempt: isTotpInvalidError(error),\n\t};\n\n\tassertModalProps(props);\n\n\ttry {\n\t\tconst code = await invokeTwoFactorModal(props);\n\n\t\treturn onCode(code, props.method);\n\t} catch (error) {\n\t\treturn process2faAsyncReturn({\n\t\t\terror,\n\t\t\tonCode,\n\t\t\temailOrUsername,\n\t\t});\n\t}\n}\n\nexport const invokeTwoFactorModal = async (props: {\n\tmethod: 'totp' | 'email' | 'password';\n\temailOrUsername?: string | undefined;\n\tinvalidAttempt?: boolean;\n}) => {\n\tassertModalProps(props);\n\n\treturn new Promise<string>((resolve, reject) => {\n\t\timperativeModal.open({\n\t\t\tcomponent: TwoFactorModal,\n\t\t\tprops: {\n\t\t\t\t...props,\n\t\t\t\tonConfirm: (code: string, method: string): void => {\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t\tresolve(method === 'password' ? SHA256(code) : code);\n\t\t\t\t},\n\t\t\t\tonClose: (): void => {\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t\treject(new Meteor.Error('totp-canceled'));\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"27e7983351c1658e76a97df1ba68e8faebc8d2a5"}
