{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/models/client/models/CachedChatSubscription.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/models/client/models/CachedChatSubscription.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/models/client/models/CachedChatSubscription.ts","inputSourceMap":{"version":3,"file":"app/models/client/models/CachedChatSubscription.ts","sourceRoot":"","sources":["app/models/client/models/CachedChatSubscription.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelRoom, IRoomWithRetentionPolicy, ISubscription } from '@rocket.chat/core-typings';\nimport { DEFAULT_SLA_CONFIG, LivechatPriorityWeight } from '@rocket.chat/core-typings';\nimport type { SubscriptionWithRoom } from '@rocket.chat/ui-contexts';\n\nimport { CachedCollection } from '../../../ui-cached-collection/client/models/CachedCollection';\nimport { CachedChatRoom } from './CachedChatRoom';\n\ndeclare module '@rocket.chat/core-typings' {\n\tinterface ISubscription {\n\t\tlowerCaseName: string;\n\t\tlowerCaseFName: string;\n\t}\n}\n\nclass CachedChatSubscription extends CachedCollection<SubscriptionWithRoom, ISubscription> {\n\tconstructor() {\n\t\tsuper({ name: 'subscriptions' });\n\t}\n\n\tprotected handleLoadFromServer(record: ISubscription) {\n\t\treturn this.mergeWithRoom(record);\n\t}\n\n\tprotected handleReceived(record: ISubscription) {\n\t\treturn this.mergeWithRoom(record);\n\t}\n\n\tprotected handleSync(record: ISubscription) {\n\t\treturn this.mergeWithRoom(record);\n\t}\n\n\tprivate mergeWithRoom(subscription: ISubscription): SubscriptionWithRoom {\n\t\tconst options = {\n\t\t\tfields: {\n\t\t\t\tlm: 1,\n\t\t\t\tlastMessage: 1,\n\t\t\t\tuids: 1,\n\t\t\t\tusernames: 1,\n\t\t\t\tusersCount: 1,\n\t\t\t\ttopic: 1,\n\t\t\t\tencrypted: 1,\n\t\t\t\tdescription: 1,\n\t\t\t\tannouncement: 1,\n\t\t\t\tbroadcast: 1,\n\t\t\t\tarchived: 1,\n\t\t\t\tavatarETag: 1,\n\t\t\t\tretention: 1,\n\t\t\t\tteamId: 1,\n\t\t\t\tteamMain: 1,\n\t\t\t\tmsgs: 1,\n\t\t\t\tonHold: 1,\n\t\t\t\tmetrics: 1,\n\t\t\t\tmuted: 1,\n\t\t\t\tservedBy: 1,\n\t\t\t\tts: 1,\n\t\t\t\twaitingResponse: 1,\n\t\t\t\tv: 1,\n\t\t\t\ttranscriptRequest: 1,\n\t\t\t\ttags: 1,\n\t\t\t\tclosedAt: 1,\n\t\t\t\tresponseBy: 1,\n\t\t\t\tpriorityId: 1,\n\t\t\t\tpriorityWeight: 1,\n\t\t\t\tslaId: 1,\n\t\t\t\testimatedWaitingTimeQueue: 1,\n\t\t\t\tlivechatData: 1,\n\t\t\t\tdepartmentId: 1,\n\t\t\t\tsource: 1,\n\t\t\t\tqueuedAt: 1,\n\t\t\t\tfederated: 1,\n\t\t\t},\n\t\t};\n\n\t\tconst room = CachedChatRoom.collection.findOne({ _id: subscription.rid }, options);\n\n\t\tconst lastRoomUpdate = room?.lm || subscription.ts || room?.ts;\n\n\t\treturn {\n\t\t\t...subscription,\n\t\t\t...(() => {\n\t\t\t\tconst { name } = subscription;\n\t\t\t\tconst fname = subscription.fname || name;\n\t\t\t\treturn {\n\t\t\t\t\tlowerCaseName: String(!subscription.prid ? name : fname).toLowerCase(),\n\t\t\t\t\tlowerCaseFName: String(fname).toLowerCase(),\n\t\t\t\t};\n\t\t\t})(),\n\t\t\tencrypted: room?.encrypted,\n\t\t\tdescription: room?.description,\n\t\t\tcl: room?.cl,\n\t\t\ttopic: room?.topic,\n\t\t\tannouncement: room?.announcement,\n\t\t\tbroadcast: room?.broadcast,\n\t\t\tarchived: room?.archived,\n\t\t\tavatarETag: room?.avatarETag,\n\t\t\tretention: (room as IRoomWithRetentionPolicy | undefined)?.retention,\n\t\t\tlastMessage: room?.lastMessage,\n\t\t\tteamId: room?.teamId,\n\t\t\tteamMain: room?.teamMain,\n\t\t\tuids: room?.uids,\n\t\t\tusernames: room?.usernames,\n\t\t\tusersCount: room?.usersCount ?? 0,\n\t\t\tv: (room as IOmnichannelRoom | undefined)?.v,\n\t\t\ttranscriptRequest: (room as IOmnichannelRoom | undefined)?.transcriptRequest,\n\t\t\tservedBy: (room as IOmnichannelRoom | undefined)?.servedBy,\n\t\t\tonHold: (room as IOmnichannelRoom | undefined)?.onHold,\n\t\t\ttags: (room as IOmnichannelRoom | undefined)?.tags,\n\t\t\tclosedAt: (room as IOmnichannelRoom | undefined)?.closedAt,\n\t\t\tmetrics: (room as IOmnichannelRoom | undefined)?.metrics,\n\t\t\tmuted: room?.muted,\n\t\t\twaitingResponse: (room as IOmnichannelRoom | undefined)?.waitingResponse,\n\t\t\tresponseBy: (room as IOmnichannelRoom | undefined)?.responseBy,\n\t\t\tpriorityId: (room as IOmnichannelRoom | undefined)?.priorityId,\n\t\t\tslaId: (room as IOmnichannelRoom | undefined)?.slaId,\n\t\t\tpriorityWeight: (room as IOmnichannelRoom | undefined)?.priorityWeight || LivechatPriorityWeight.NOT_SPECIFIED,\n\t\t\testimatedWaitingTimeQueue:\n\t\t\t\t(room as IOmnichannelRoom | undefined)?.estimatedWaitingTimeQueue || DEFAULT_SLA_CONFIG.ESTIMATED_WAITING_TIME_QUEUE,\n\t\t\tlivechatData: (room as IOmnichannelRoom | undefined)?.livechatData,\n\t\t\tdepartmentId: (room as IOmnichannelRoom | undefined)?.departmentId,\n\t\t\tts: room?.ts ?? subscription.ts,\n\t\t\tsource: (room as IOmnichannelRoom | undefined)?.source,\n\t\t\tqueuedAt: (room as IOmnichannelRoom | undefined)?.queuedAt,\n\t\t\tfederated: room?.federated,\n\t\t\tlm: subscription.lr ? new Date(Math.max(subscription.lr.getTime(), lastRoomUpdate?.getTime() || 0)) : lastRoomUpdate,\n\t\t};\n\t}\n\n\tprotected deserializeFromCache(record: unknown) {\n\t\tconst deserialized = super.deserializeFromCache(record);\n\n\t\tif (deserialized?.lastMessage?._updatedAt) {\n\t\t\tdeserialized.lastMessage._updatedAt = new Date(deserialized.lastMessage._updatedAt);\n\t\t}\n\n\t\treturn deserialized;\n\t}\n}\n\nconst instance = new CachedChatSubscription();\n\nexport {\n\t/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\n\tinstance as CachedChatSubscription,\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/models/client/models/CachedChatSubscription.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/client/models/CachedChatSubscription.ts","inputSourceMap":{"version":3,"file":"app/models/client/models/CachedChatSubscription.ts","sourceRoot":"","sources":["app/models/client/models/CachedChatSubscription.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelRoom, IRoomWithRetentionPolicy, ISubscription } from '@rocket.chat/core-typings';\nimport { DEFAULT_SLA_CONFIG, LivechatPriorityWeight } from '@rocket.chat/core-typings';\nimport type { SubscriptionWithRoom } from '@rocket.chat/ui-contexts';\n\nimport { CachedCollection } from '../../../ui-cached-collection/client/models/CachedCollection';\nimport { CachedChatRoom } from './CachedChatRoom';\n\ndeclare module '@rocket.chat/core-typings' {\n\tinterface ISubscription {\n\t\tlowerCaseName: string;\n\t\tlowerCaseFName: string;\n\t}\n}\n\nclass CachedChatSubscription extends CachedCollection<SubscriptionWithRoom, ISubscription> {\n\tconstructor() {\n\t\tsuper({ name: 'subscriptions' });\n\t}\n\n\tprotected handleLoadFromServer(record: ISubscription) {\n\t\treturn this.mergeWithRoom(record);\n\t}\n\n\tprotected handleReceived(record: ISubscription) {\n\t\treturn this.mergeWithRoom(record);\n\t}\n\n\tprotected handleSync(record: ISubscription) {\n\t\treturn this.mergeWithRoom(record);\n\t}\n\n\tprivate mergeWithRoom(subscription: ISubscription): SubscriptionWithRoom {\n\t\tconst options = {\n\t\t\tfields: {\n\t\t\t\tlm: 1,\n\t\t\t\tlastMessage: 1,\n\t\t\t\tuids: 1,\n\t\t\t\tusernames: 1,\n\t\t\t\tusersCount: 1,\n\t\t\t\ttopic: 1,\n\t\t\t\tencrypted: 1,\n\t\t\t\tdescription: 1,\n\t\t\t\tannouncement: 1,\n\t\t\t\tbroadcast: 1,\n\t\t\t\tarchived: 1,\n\t\t\t\tavatarETag: 1,\n\t\t\t\tretention: 1,\n\t\t\t\tteamId: 1,\n\t\t\t\tteamMain: 1,\n\t\t\t\tmsgs: 1,\n\t\t\t\tonHold: 1,\n\t\t\t\tmetrics: 1,\n\t\t\t\tmuted: 1,\n\t\t\t\tservedBy: 1,\n\t\t\t\tts: 1,\n\t\t\t\twaitingResponse: 1,\n\t\t\t\tv: 1,\n\t\t\t\ttranscriptRequest: 1,\n\t\t\t\ttags: 1,\n\t\t\t\tclosedAt: 1,\n\t\t\t\tresponseBy: 1,\n\t\t\t\tpriorityId: 1,\n\t\t\t\tpriorityWeight: 1,\n\t\t\t\tslaId: 1,\n\t\t\t\testimatedWaitingTimeQueue: 1,\n\t\t\t\tlivechatData: 1,\n\t\t\t\tdepartmentId: 1,\n\t\t\t\tsource: 1,\n\t\t\t\tqueuedAt: 1,\n\t\t\t\tfederated: 1,\n\t\t\t},\n\t\t};\n\n\t\tconst room = CachedChatRoom.collection.findOne({ _id: subscription.rid }, options);\n\n\t\tconst lastRoomUpdate = room?.lm || subscription.ts || room?.ts;\n\n\t\treturn {\n\t\t\t...subscription,\n\t\t\t...(() => {\n\t\t\t\tconst { name } = subscription;\n\t\t\t\tconst fname = subscription.fname || name;\n\t\t\t\treturn {\n\t\t\t\t\tlowerCaseName: String(!subscription.prid ? name : fname).toLowerCase(),\n\t\t\t\t\tlowerCaseFName: String(fname).toLowerCase(),\n\t\t\t\t};\n\t\t\t})(),\n\t\t\tencrypted: room?.encrypted,\n\t\t\tdescription: room?.description,\n\t\t\tcl: room?.cl,\n\t\t\ttopic: room?.topic,\n\t\t\tannouncement: room?.announcement,\n\t\t\tbroadcast: room?.broadcast,\n\t\t\tarchived: room?.archived,\n\t\t\tavatarETag: room?.avatarETag,\n\t\t\tretention: (room as IRoomWithRetentionPolicy | undefined)?.retention,\n\t\t\tlastMessage: room?.lastMessage,\n\t\t\tteamId: room?.teamId,\n\t\t\tteamMain: room?.teamMain,\n\t\t\tuids: room?.uids,\n\t\t\tusernames: room?.usernames,\n\t\t\tusersCount: room?.usersCount ?? 0,\n\t\t\tv: (room as IOmnichannelRoom | undefined)?.v,\n\t\t\ttranscriptRequest: (room as IOmnichannelRoom | undefined)?.transcriptRequest,\n\t\t\tservedBy: (room as IOmnichannelRoom | undefined)?.servedBy,\n\t\t\tonHold: (room as IOmnichannelRoom | undefined)?.onHold,\n\t\t\ttags: (room as IOmnichannelRoom | undefined)?.tags,\n\t\t\tclosedAt: (room as IOmnichannelRoom | undefined)?.closedAt,\n\t\t\tmetrics: (room as IOmnichannelRoom | undefined)?.metrics,\n\t\t\tmuted: room?.muted,\n\t\t\twaitingResponse: (room as IOmnichannelRoom | undefined)?.waitingResponse,\n\t\t\tresponseBy: (room as IOmnichannelRoom | undefined)?.responseBy,\n\t\t\tpriorityId: (room as IOmnichannelRoom | undefined)?.priorityId,\n\t\t\tslaId: (room as IOmnichannelRoom | undefined)?.slaId,\n\t\t\tpriorityWeight: (room as IOmnichannelRoom | undefined)?.priorityWeight || LivechatPriorityWeight.NOT_SPECIFIED,\n\t\t\testimatedWaitingTimeQueue:\n\t\t\t\t(room as IOmnichannelRoom | undefined)?.estimatedWaitingTimeQueue || DEFAULT_SLA_CONFIG.ESTIMATED_WAITING_TIME_QUEUE,\n\t\t\tlivechatData: (room as IOmnichannelRoom | undefined)?.livechatData,\n\t\t\tdepartmentId: (room as IOmnichannelRoom | undefined)?.departmentId,\n\t\t\tts: room?.ts ?? subscription.ts,\n\t\t\tsource: (room as IOmnichannelRoom | undefined)?.source,\n\t\t\tqueuedAt: (room as IOmnichannelRoom | undefined)?.queuedAt,\n\t\t\tfederated: room?.federated,\n\t\t\tlm: subscription.lr ? new Date(Math.max(subscription.lr.getTime(), lastRoomUpdate?.getTime() || 0)) : lastRoomUpdate,\n\t\t};\n\t}\n\n\tprotected deserializeFromCache(record: unknown) {\n\t\tconst deserialized = super.deserializeFromCache(record);\n\n\t\tif (deserialized?.lastMessage?._updatedAt) {\n\t\t\tdeserialized.lastMessage._updatedAt = new Date(deserialized.lastMessage._updatedAt);\n\t\t}\n\n\t\treturn deserialized;\n\t}\n}\n\nconst instance = new CachedChatSubscription();\n\nexport {\n\t/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\n\tinstance as CachedChatSubscription,\n};\n"]}}},"code":"var _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nvar _inheritsLoose;\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  CachedChatSubscription: function () {\n    return instance;\n  }\n});\nvar DEFAULT_SLA_CONFIG, LivechatPriorityWeight;\nmodule.link(\"@rocket.chat/core-typings\", {\n  DEFAULT_SLA_CONFIG: function (v) {\n    DEFAULT_SLA_CONFIG = v;\n  },\n  LivechatPriorityWeight: function (v) {\n    LivechatPriorityWeight = v;\n  }\n}, 0);\nvar CachedCollection;\nmodule.link(\"../../../ui-cached-collection/client/models/CachedCollection\", {\n  CachedCollection: function (v) {\n    CachedCollection = v;\n  }\n}, 1);\nvar CachedChatRoom;\nmodule.link(\"./CachedChatRoom\", {\n  CachedChatRoom: function (v) {\n    CachedChatRoom = v;\n  }\n}, 2);\nvar CachedChatSubscription = /*#__PURE__*/function (_CachedCollection) {\n  function CachedChatSubscription() {\n    return _CachedCollection.call(this, {\n      name: 'subscriptions'\n    }) || this;\n  }\n  _inheritsLoose(CachedChatSubscription, _CachedCollection);\n  var _proto = CachedChatSubscription.prototype;\n  _proto.handleLoadFromServer = function () {\n    function handleLoadFromServer(record) {\n      return this.mergeWithRoom(record);\n    }\n    return handleLoadFromServer;\n  }();\n  _proto.handleReceived = function () {\n    function handleReceived(record) {\n      return this.mergeWithRoom(record);\n    }\n    return handleReceived;\n  }();\n  _proto.handleSync = function () {\n    function handleSync(record) {\n      return this.mergeWithRoom(record);\n    }\n    return handleSync;\n  }();\n  _proto.mergeWithRoom = function () {\n    function mergeWithRoom(subscription) {\n      var _room$usersCount, _room$ts;\n      var options = {\n        fields: {\n          lm: 1,\n          lastMessage: 1,\n          uids: 1,\n          usernames: 1,\n          usersCount: 1,\n          topic: 1,\n          encrypted: 1,\n          description: 1,\n          announcement: 1,\n          broadcast: 1,\n          archived: 1,\n          avatarETag: 1,\n          retention: 1,\n          teamId: 1,\n          teamMain: 1,\n          msgs: 1,\n          onHold: 1,\n          metrics: 1,\n          muted: 1,\n          servedBy: 1,\n          ts: 1,\n          waitingResponse: 1,\n          v: 1,\n          transcriptRequest: 1,\n          tags: 1,\n          closedAt: 1,\n          responseBy: 1,\n          priorityId: 1,\n          priorityWeight: 1,\n          slaId: 1,\n          estimatedWaitingTimeQueue: 1,\n          livechatData: 1,\n          departmentId: 1,\n          source: 1,\n          queuedAt: 1,\n          federated: 1\n        }\n      };\n      var room = CachedChatRoom.collection.findOne({\n        _id: subscription.rid\n      }, options);\n      var lastRoomUpdate = (room === null || room === void 0 ? void 0 : room.lm) || subscription.ts || (room === null || room === void 0 ? void 0 : room.ts);\n      return _objectSpread(_objectSpread(_objectSpread({}, subscription), function () {\n        var name = subscription.name;\n        var fname = subscription.fname || name;\n        return {\n          lowerCaseName: String(!subscription.prid ? name : fname).toLowerCase(),\n          lowerCaseFName: String(fname).toLowerCase()\n        };\n      }()), {}, {\n        encrypted: room === null || room === void 0 ? void 0 : room.encrypted,\n        description: room === null || room === void 0 ? void 0 : room.description,\n        cl: room === null || room === void 0 ? void 0 : room.cl,\n        topic: room === null || room === void 0 ? void 0 : room.topic,\n        announcement: room === null || room === void 0 ? void 0 : room.announcement,\n        broadcast: room === null || room === void 0 ? void 0 : room.broadcast,\n        archived: room === null || room === void 0 ? void 0 : room.archived,\n        avatarETag: room === null || room === void 0 ? void 0 : room.avatarETag,\n        retention: room === null || room === void 0 ? void 0 : room.retention,\n        lastMessage: room === null || room === void 0 ? void 0 : room.lastMessage,\n        teamId: room === null || room === void 0 ? void 0 : room.teamId,\n        teamMain: room === null || room === void 0 ? void 0 : room.teamMain,\n        uids: room === null || room === void 0 ? void 0 : room.uids,\n        usernames: room === null || room === void 0 ? void 0 : room.usernames,\n        usersCount: (_room$usersCount = room === null || room === void 0 ? void 0 : room.usersCount) !== null && _room$usersCount !== void 0 ? _room$usersCount : 0,\n        v: room === null || room === void 0 ? void 0 : room.v,\n        transcriptRequest: room === null || room === void 0 ? void 0 : room.transcriptRequest,\n        servedBy: room === null || room === void 0 ? void 0 : room.servedBy,\n        onHold: room === null || room === void 0 ? void 0 : room.onHold,\n        tags: room === null || room === void 0 ? void 0 : room.tags,\n        closedAt: room === null || room === void 0 ? void 0 : room.closedAt,\n        metrics: room === null || room === void 0 ? void 0 : room.metrics,\n        muted: room === null || room === void 0 ? void 0 : room.muted,\n        waitingResponse: room === null || room === void 0 ? void 0 : room.waitingResponse,\n        responseBy: room === null || room === void 0 ? void 0 : room.responseBy,\n        priorityId: room === null || room === void 0 ? void 0 : room.priorityId,\n        slaId: room === null || room === void 0 ? void 0 : room.slaId,\n        priorityWeight: (room === null || room === void 0 ? void 0 : room.priorityWeight) || LivechatPriorityWeight.NOT_SPECIFIED,\n        estimatedWaitingTimeQueue: (room === null || room === void 0 ? void 0 : room.estimatedWaitingTimeQueue) || DEFAULT_SLA_CONFIG.ESTIMATED_WAITING_TIME_QUEUE,\n        livechatData: room === null || room === void 0 ? void 0 : room.livechatData,\n        departmentId: room === null || room === void 0 ? void 0 : room.departmentId,\n        ts: (_room$ts = room === null || room === void 0 ? void 0 : room.ts) !== null && _room$ts !== void 0 ? _room$ts : subscription.ts,\n        source: room === null || room === void 0 ? void 0 : room.source,\n        queuedAt: room === null || room === void 0 ? void 0 : room.queuedAt,\n        federated: room === null || room === void 0 ? void 0 : room.federated,\n        lm: subscription.lr ? new Date(Math.max(subscription.lr.getTime(), (lastRoomUpdate === null || lastRoomUpdate === void 0 ? void 0 : lastRoomUpdate.getTime()) || 0)) : lastRoomUpdate\n      });\n    }\n    return mergeWithRoom;\n  }();\n  _proto.deserializeFromCache = function () {\n    function deserializeFromCache(record) {\n      var _deserialized$lastMes;\n      var deserialized = _CachedCollection.prototype.deserializeFromCache.call(this, record);\n      if (deserialized !== null && deserialized !== void 0 && (_deserialized$lastMes = deserialized.lastMessage) !== null && _deserialized$lastMes !== void 0 && _deserialized$lastMes._updatedAt) {\n        deserialized.lastMessage._updatedAt = new Date(deserialized.lastMessage._updatedAt);\n      }\n      return deserialized;\n    }\n    return deserializeFromCache;\n  }();\n  return CachedChatSubscription;\n}(CachedCollection);\nvar instance = new CachedChatSubscription();","map":{"version":3,"names":["_objectSpread","module","link","default","v","_inheritsLoose","export","CachedChatSubscription","instance","DEFAULT_SLA_CONFIG","LivechatPriorityWeight","CachedCollection","CachedChatRoom","_CachedCollection","call","name","_proto","prototype","handleLoadFromServer","record","mergeWithRoom","handleReceived","handleSync","subscription","_room$usersCount","_room$ts","options","fields","lm","lastMessage","uids","usernames","usersCount","topic","encrypted","description","announcement","broadcast","archived","avatarETag","retention","teamId","teamMain","msgs","onHold","metrics","muted","servedBy","ts","waitingResponse","transcriptRequest","tags","closedAt","responseBy","priorityId","priorityWeight","slaId","estimatedWaitingTimeQueue","livechatData","departmentId","source","queuedAt","federated","room","collection","findOne","_id","rid","lastRoomUpdate","fname","lowerCaseName","String","prid","toLowerCase","lowerCaseFName","cl","NOT_SPECIFIED","ESTIMATED_WAITING_TIME_QUEUE","lr","Date","Math","max","getTime","deserializeFromCache","_deserialized$lastMes","deserialized","_updatedAt"],"sources":["app/models/client/models/CachedChatSubscription.ts"],"sourcesContent":["import type { IOmnichannelRoom, IRoomWithRetentionPolicy, ISubscription } from '@rocket.chat/core-typings';\nimport { DEFAULT_SLA_CONFIG, LivechatPriorityWeight } from '@rocket.chat/core-typings';\nimport type { SubscriptionWithRoom } from '@rocket.chat/ui-contexts';\n\nimport { CachedCollection } from '../../../ui-cached-collection/client/models/CachedCollection';\nimport { CachedChatRoom } from './CachedChatRoom';\n\ndeclare module '@rocket.chat/core-typings' {\n\tinterface ISubscription {\n\t\tlowerCaseName: string;\n\t\tlowerCaseFName: string;\n\t}\n}\n\nclass CachedChatSubscription extends CachedCollection<SubscriptionWithRoom, ISubscription> {\n\tconstructor() {\n\t\tsuper({ name: 'subscriptions' });\n\t}\n\n\tprotected handleLoadFromServer(record: ISubscription) {\n\t\treturn this.mergeWithRoom(record);\n\t}\n\n\tprotected handleReceived(record: ISubscription) {\n\t\treturn this.mergeWithRoom(record);\n\t}\n\n\tprotected handleSync(record: ISubscription) {\n\t\treturn this.mergeWithRoom(record);\n\t}\n\n\tprivate mergeWithRoom(subscription: ISubscription): SubscriptionWithRoom {\n\t\tconst options = {\n\t\t\tfields: {\n\t\t\t\tlm: 1,\n\t\t\t\tlastMessage: 1,\n\t\t\t\tuids: 1,\n\t\t\t\tusernames: 1,\n\t\t\t\tusersCount: 1,\n\t\t\t\ttopic: 1,\n\t\t\t\tencrypted: 1,\n\t\t\t\tdescription: 1,\n\t\t\t\tannouncement: 1,\n\t\t\t\tbroadcast: 1,\n\t\t\t\tarchived: 1,\n\t\t\t\tavatarETag: 1,\n\t\t\t\tretention: 1,\n\t\t\t\tteamId: 1,\n\t\t\t\tteamMain: 1,\n\t\t\t\tmsgs: 1,\n\t\t\t\tonHold: 1,\n\t\t\t\tmetrics: 1,\n\t\t\t\tmuted: 1,\n\t\t\t\tservedBy: 1,\n\t\t\t\tts: 1,\n\t\t\t\twaitingResponse: 1,\n\t\t\t\tv: 1,\n\t\t\t\ttranscriptRequest: 1,\n\t\t\t\ttags: 1,\n\t\t\t\tclosedAt: 1,\n\t\t\t\tresponseBy: 1,\n\t\t\t\tpriorityId: 1,\n\t\t\t\tpriorityWeight: 1,\n\t\t\t\tslaId: 1,\n\t\t\t\testimatedWaitingTimeQueue: 1,\n\t\t\t\tlivechatData: 1,\n\t\t\t\tdepartmentId: 1,\n\t\t\t\tsource: 1,\n\t\t\t\tqueuedAt: 1,\n\t\t\t\tfederated: 1,\n\t\t\t},\n\t\t};\n\n\t\tconst room = CachedChatRoom.collection.findOne({ _id: subscription.rid }, options);\n\n\t\tconst lastRoomUpdate = room?.lm || subscription.ts || room?.ts;\n\n\t\treturn {\n\t\t\t...subscription,\n\t\t\t...(() => {\n\t\t\t\tconst { name } = subscription;\n\t\t\t\tconst fname = subscription.fname || name;\n\t\t\t\treturn {\n\t\t\t\t\tlowerCaseName: String(!subscription.prid ? name : fname).toLowerCase(),\n\t\t\t\t\tlowerCaseFName: String(fname).toLowerCase(),\n\t\t\t\t};\n\t\t\t})(),\n\t\t\tencrypted: room?.encrypted,\n\t\t\tdescription: room?.description,\n\t\t\tcl: room?.cl,\n\t\t\ttopic: room?.topic,\n\t\t\tannouncement: room?.announcement,\n\t\t\tbroadcast: room?.broadcast,\n\t\t\tarchived: room?.archived,\n\t\t\tavatarETag: room?.avatarETag,\n\t\t\tretention: (room as IRoomWithRetentionPolicy | undefined)?.retention,\n\t\t\tlastMessage: room?.lastMessage,\n\t\t\tteamId: room?.teamId,\n\t\t\tteamMain: room?.teamMain,\n\t\t\tuids: room?.uids,\n\t\t\tusernames: room?.usernames,\n\t\t\tusersCount: room?.usersCount ?? 0,\n\t\t\tv: (room as IOmnichannelRoom | undefined)?.v,\n\t\t\ttranscriptRequest: (room as IOmnichannelRoom | undefined)?.transcriptRequest,\n\t\t\tservedBy: (room as IOmnichannelRoom | undefined)?.servedBy,\n\t\t\tonHold: (room as IOmnichannelRoom | undefined)?.onHold,\n\t\t\ttags: (room as IOmnichannelRoom | undefined)?.tags,\n\t\t\tclosedAt: (room as IOmnichannelRoom | undefined)?.closedAt,\n\t\t\tmetrics: (room as IOmnichannelRoom | undefined)?.metrics,\n\t\t\tmuted: room?.muted,\n\t\t\twaitingResponse: (room as IOmnichannelRoom | undefined)?.waitingResponse,\n\t\t\tresponseBy: (room as IOmnichannelRoom | undefined)?.responseBy,\n\t\t\tpriorityId: (room as IOmnichannelRoom | undefined)?.priorityId,\n\t\t\tslaId: (room as IOmnichannelRoom | undefined)?.slaId,\n\t\t\tpriorityWeight: (room as IOmnichannelRoom | undefined)?.priorityWeight || LivechatPriorityWeight.NOT_SPECIFIED,\n\t\t\testimatedWaitingTimeQueue:\n\t\t\t\t(room as IOmnichannelRoom | undefined)?.estimatedWaitingTimeQueue || DEFAULT_SLA_CONFIG.ESTIMATED_WAITING_TIME_QUEUE,\n\t\t\tlivechatData: (room as IOmnichannelRoom | undefined)?.livechatData,\n\t\t\tdepartmentId: (room as IOmnichannelRoom | undefined)?.departmentId,\n\t\t\tts: room?.ts ?? subscription.ts,\n\t\t\tsource: (room as IOmnichannelRoom | undefined)?.source,\n\t\t\tqueuedAt: (room as IOmnichannelRoom | undefined)?.queuedAt,\n\t\t\tfederated: room?.federated,\n\t\t\tlm: subscription.lr ? new Date(Math.max(subscription.lr.getTime(), lastRoomUpdate?.getTime() || 0)) : lastRoomUpdate,\n\t\t};\n\t}\n\n\tprotected deserializeFromCache(record: unknown) {\n\t\tconst deserialized = super.deserializeFromCache(record);\n\n\t\tif (deserialized?.lastMessage?._updatedAt) {\n\t\t\tdeserialized.lastMessage._updatedAt = new Date(deserialized.lastMessage._updatedAt);\n\t\t}\n\n\t\treturn deserialized;\n\t}\n}\n\nconst instance = new CachedChatSubscription();\n\nexport {\n\t/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\n\tinstance as CachedChatSubscription,\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9cb0e3a2e6cbca9704e52cfd8a696cd8dd4eeefd"}
