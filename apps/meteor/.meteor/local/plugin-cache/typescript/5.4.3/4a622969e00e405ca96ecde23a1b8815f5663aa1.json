{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/lib/ServiceProvider.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/meteor-accounts-saml/server/lib/ServiceProvider.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/lib/ServiceProvider.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/lib/ServiceProvider.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/lib/ServiceProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import crypto from 'crypto';\nimport querystring from 'querystring';\nimport util from 'util';\nimport zlib from 'zlib';\n\nimport { Meteor } from 'meteor/meteor';\n\nimport { SAMLUtils } from './Utils';\nimport type { ILogoutResponse } from '../definition/ILogoutResponse';\nimport type { ISAMLRequest } from '../definition/ISAMLRequest';\nimport type { IServiceProviderOptions } from '../definition/IServiceProviderOptions';\nimport type { ILogoutRequestValidateCallback, ILogoutResponseValidateCallback, IResponseValidateCallback } from '../definition/callbacks';\nimport { AuthorizeRequest } from './generators/AuthorizeRequest';\nimport { LogoutRequest } from './generators/LogoutRequest';\nimport { LogoutResponse } from './generators/LogoutResponse';\nimport { ServiceProviderMetadata } from './generators/ServiceProviderMetadata';\nimport { LogoutRequestParser } from './parsers/LogoutRequest';\nimport { LogoutResponseParser } from './parsers/LogoutResponse';\nimport { ResponseParser } from './parsers/Response';\n\nexport class SAMLServiceProvider {\n\tserviceProviderOptions: IServiceProviderOptions;\n\n\tconstructor(serviceProviderOptions: IServiceProviderOptions) {\n\t\tif (!serviceProviderOptions) {\n\t\t\tthrow new Error('SAMLServiceProvider instantiated without an options object');\n\t\t}\n\n\t\tthis.serviceProviderOptions = serviceProviderOptions;\n\t}\n\n\tprivate signRequest(xml: string): string {\n\t\tconst signer = crypto.createSign('RSA-SHA1');\n\t\tsigner.update(xml);\n\t\treturn signer.sign(this.serviceProviderOptions.privateKey, 'base64');\n\t}\n\n\tpublic generateAuthorizeRequest(): string {\n\t\tconst identifiedRequest = AuthorizeRequest.generate(this.serviceProviderOptions);\n\t\treturn identifiedRequest.request;\n\t}\n\n\tpublic generateLogoutResponse({\n\t\tnameID,\n\t\tsessionIndex,\n\t\tinResponseToId,\n\t}: {\n\t\tnameID: string;\n\t\tsessionIndex: string;\n\t\tinResponseToId: string;\n\t}): ILogoutResponse {\n\t\treturn LogoutResponse.generate(this.serviceProviderOptions, nameID, sessionIndex, inResponseToId);\n\t}\n\n\tpublic generateLogoutRequest({ nameID, sessionIndex }: { nameID: string; sessionIndex: string }): ISAMLRequest {\n\t\treturn LogoutRequest.generate(this.serviceProviderOptions, nameID, sessionIndex);\n\t}\n\n\t/*\n\t\tThis method will generate the response URL with all the query string params and pass it to the callback\n\t*/\n\tpublic logoutResponseToUrl(response: string, callback: (err: string | object | null, url?: string) => void): void {\n\t\tzlib.deflateRaw(response, (err, buffer) => {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst base64 = buffer.toString('base64');\n\t\t\t\tlet target = this.serviceProviderOptions.idpSLORedirectURL;\n\n\t\t\t\tif (target.indexOf('?') > 0) {\n\t\t\t\t\ttarget += '&';\n\t\t\t\t} else {\n\t\t\t\t\ttarget += '?';\n\t\t\t\t}\n\n\t\t\t\t// TBD. We should really include a proper RelayState here\n\t\t\t\tconst relayState = Meteor.absoluteUrl();\n\n\t\t\t\tconst samlResponse: Record<string, any> = {\n\t\t\t\t\tSAMLResponse: base64,\n\t\t\t\t\tRelayState: relayState,\n\t\t\t\t};\n\n\t\t\t\tif (this.serviceProviderOptions.privateCert) {\n\t\t\t\t\tsamlResponse.SigAlg = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1';\n\t\t\t\t\tsamlResponse.Signature = this.signRequest(querystring.stringify(samlResponse));\n\t\t\t\t}\n\n\t\t\t\ttarget += querystring.stringify(samlResponse);\n\n\t\t\t\treturn callback(null, target);\n\t\t\t} catch (error) {\n\t\t\t\treturn callback(error instanceof Error ? error : String(error));\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n\t\tThis method will generate the request URL with all the query string params and pass it to the callback\n\t*/\n\tpublic async requestToUrl(request: string, operation: string): Promise<string | undefined> {\n\t\tconst buffer = await util.promisify(zlib.deflateRaw)(request);\n\t\ttry {\n\t\t\tconst base64 = buffer.toString('base64');\n\t\t\tlet target = this.serviceProviderOptions.entryPoint;\n\n\t\t\tif (operation === 'logout') {\n\t\t\t\tif (this.serviceProviderOptions.idpSLORedirectURL) {\n\t\t\t\t\ttarget = this.serviceProviderOptions.idpSLORedirectURL;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (target.indexOf('?') > 0) {\n\t\t\t\ttarget += '&';\n\t\t\t} else {\n\t\t\t\ttarget += '?';\n\t\t\t}\n\n\t\t\t// TBD. We should really include a proper RelayState here\n\t\t\tlet relayState;\n\t\t\tif (operation === 'logout') {\n\t\t\t\t// in case of logout we want to be redirected back to the Meteor app.\n\t\t\t\trelayState = Meteor.absoluteUrl();\n\t\t\t} else {\n\t\t\t\trelayState = this.serviceProviderOptions.provider;\n\t\t\t}\n\n\t\t\tconst samlRequest: Record<string, any> = {\n\t\t\t\tSAMLRequest: base64,\n\t\t\t\tRelayState: relayState,\n\t\t\t};\n\n\t\t\tif (this.serviceProviderOptions.privateCert) {\n\t\t\t\tsamlRequest.SigAlg = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1';\n\t\t\t\tsamlRequest.Signature = this.signRequest(querystring.stringify(samlRequest));\n\t\t\t}\n\n\t\t\ttarget += querystring.stringify(samlRequest);\n\n\t\t\tSAMLUtils.log(`requestToUrl: ${target}`);\n\n\t\t\tif (operation === 'logout') {\n\t\t\t\t// in case of logout we want to be redirected back to the Meteor app.\n\t\t\t\treturn target;\n\t\t\t}\n\t\t\treturn target;\n\t\t} catch (error) {\n\t\t\tthrow error instanceof Error ? error : String(error);\n\t\t}\n\t}\n\n\tpublic async getAuthorizeUrl(): Promise<string | undefined> {\n\t\tconst request = this.generateAuthorizeRequest();\n\t\tSAMLUtils.log('-----REQUEST------');\n\t\tSAMLUtils.log(request);\n\n\t\treturn this.requestToUrl(request, 'authorize');\n\t}\n\n\tpublic async validateLogoutRequest(samlRequest: string, callback: ILogoutRequestValidateCallback): Promise<void> {\n\t\tawait SAMLUtils.inflateXml(\n\t\t\tsamlRequest,\n\t\t\tasync (xml: string) => {\n\t\t\t\tconst parser = new LogoutRequestParser(this.serviceProviderOptions);\n\t\t\t\treturn parser.validate(xml, callback);\n\t\t\t},\n\t\t\tasync (err: string | object | null) => {\n\t\t\t\tawait callback(err, null);\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async validateLogoutResponse(samlResponse: string, callback: ILogoutResponseValidateCallback): Promise<void> {\n\t\tawait SAMLUtils.inflateXml(\n\t\t\tsamlResponse,\n\t\t\tasync (xml: string) => {\n\t\t\t\tconst parser = new LogoutResponseParser(this.serviceProviderOptions);\n\t\t\t\treturn parser.validate(xml, callback);\n\t\t\t},\n\t\t\tasync (err: string | object | null) => {\n\t\t\t\tawait callback(err, null);\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic validateResponse(samlResponse: string, callback: IResponseValidateCallback): void {\n\t\tconst xml = Buffer.from(samlResponse, 'base64').toString('utf8');\n\n\t\tconst parser = new ResponseParser(this.serviceProviderOptions);\n\t\treturn parser.validate(xml, callback);\n\t}\n\n\tpublic generateServiceProviderMetadata(): string {\n\t\treturn ServiceProviderMetadata.generate(this.serviceProviderOptions);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/lib/ServiceProvider.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-accounts-saml/server/lib/ServiceProvider.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/lib/ServiceProvider.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/lib/ServiceProvider.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,WAAW,MAAM,aAAa,CAAC;AACtC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS,CAAC;AAKpC,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AACjE,OAAO,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAC;AAC3D,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AAC7D,OAAO,EAAE,uBAAuB,EAAE,MAAM,sCAAsC,CAAC;AAC/E,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAC9D,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;AAChE,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AAEpD,MAAM,OAAO,mBAAmB;IAC/B,sBAAsB,CAA0B;IAEhD,YAAY,sBAA+C;QAC1D,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC7B,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;QAC/E,CAAC;QAED,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;IACtD,CAAC;IAEO,WAAW,CAAC,GAAW;QAC9B,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACnB,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACtE,CAAC;IAEM,wBAAwB;QAC9B,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACjF,OAAO,iBAAiB,CAAC,OAAO,CAAC;IAClC,CAAC;IAEM,sBAAsB,CAAC,EAC7B,MAAM,EACN,YAAY,EACZ,cAAc,GAKd;QACA,OAAO,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,EAAE,MAAM,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;IACnG,CAAC;IAEM,qBAAqB,CAAC,EAAE,MAAM,EAAE,YAAY,EAA4C;QAC9F,OAAO,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;IAClF,CAAC;IAED;;MAEE;IACK,mBAAmB,CAAC,QAAgB,EAAE,QAA6D;QACzG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;YACzC,IAAI,GAAG,EAAE,CAAC;gBACT,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;YACtB,CAAC;YAED,IAAI,CAAC;gBACJ,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACzC,IAAI,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC;gBAE3D,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;oBAC7B,MAAM,IAAI,GAAG,CAAC;gBACf,CAAC;qBAAM,CAAC;oBACP,MAAM,IAAI,GAAG,CAAC;gBACf,CAAC;gBAED,yDAAyD;gBACzD,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;gBAExC,MAAM,YAAY,GAAwB;oBACzC,YAAY,EAAE,MAAM;oBACpB,UAAU,EAAE,UAAU;iBACtB,CAAC;gBAEF,IAAI,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;oBAC7C,YAAY,CAAC,MAAM,GAAG,4CAA4C,CAAC;oBACnE,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;gBAChF,CAAC;gBAED,MAAM,IAAI,WAAW,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;gBAE9C,OAAO,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAC/B,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBAChB,OAAO,QAAQ,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACjE,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;MAEE;IACK,KAAK,CAAC,YAAY,CAAC,OAAe,EAAE,SAAiB;QAC3D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;QAC9D,IAAI,CAAC;YACJ,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACzC,IAAI,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC;YAEpD,IAAI,SAAS,KAAK,QAAQ,EAAE,CAAC;gBAC5B,IAAI,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,CAAC;oBACnD,MAAM,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC;gBACxD,CAAC;YACF,CAAC;YAED,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC7B,MAAM,IAAI,GAAG,CAAC;YACf,CAAC;iBAAM,CAAC;gBACP,MAAM,IAAI,GAAG,CAAC;YACf,CAAC;YAED,yDAAyD;YACzD,IAAI,UAAU,CAAC;YACf,IAAI,SAAS,KAAK,QAAQ,EAAE,CAAC;gBAC5B,qEAAqE;gBACrE,UAAU,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;YACnC,CAAC;iBAAM,CAAC;gBACP,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC;YACnD,CAAC;YAED,MAAM,WAAW,GAAwB;gBACxC,WAAW,EAAE,MAAM;gBACnB,UAAU,EAAE,UAAU;aACtB,CAAC;YAEF,IAAI,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;gBAC7C,WAAW,CAAC,MAAM,GAAG,4CAA4C,CAAC;gBAClE,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;YAC9E,CAAC;YAED,MAAM,IAAI,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YAE7C,SAAS,CAAC,GAAG,CAAC,iBAAiB,MAAM,EAAE,CAAC,CAAC;YAEzC,IAAI,SAAS,KAAK,QAAQ,EAAE,CAAC;gBAC5B,qEAAqE;gBACrE,OAAO,MAAM,CAAC;YACf,CAAC;YACD,OAAO,MAAM,CAAC;QACf,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,MAAM,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACtD,CAAC;IACF,CAAC;IAEM,KAAK,CAAC,eAAe;QAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChD,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACpC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAEvB,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAChD,CAAC;IAEM,KAAK,CAAC,qBAAqB,CAAC,WAAmB,EAAE,QAAwC;QAC/F,MAAM,SAAS,CAAC,UAAU,CACzB,WAAW,EACX,KAAK,EAAE,GAAW,EAAE,EAAE;YACrB,MAAM,MAAM,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;YACpE,OAAO,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QACvC,CAAC,EACD,KAAK,EAAE,GAA2B,EAAE,EAAE;YACrC,MAAM,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC3B,CAAC,CACD,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,sBAAsB,CAAC,YAAoB,EAAE,QAAyC;QAClG,MAAM,SAAS,CAAC,UAAU,CACzB,YAAY,EACZ,KAAK,EAAE,GAAW,EAAE,EAAE;YACrB,MAAM,MAAM,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;YACrE,OAAO,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QACvC,CAAC,EACD,KAAK,EAAE,GAA2B,EAAE,EAAE;YACrC,MAAM,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC3B,CAAC,CACD,CAAC;IACH,CAAC;IAEM,gBAAgB,CAAC,YAAoB,EAAE,QAAmC;QAChF,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEjE,MAAM,MAAM,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC/D,OAAO,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACvC,CAAC;IAEM,+BAA+B;QACrC,OAAO,uBAAuB,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACtE,CAAC;CACD","sourcesContent":["import crypto from 'crypto';\nimport querystring from 'querystring';\nimport util from 'util';\nimport zlib from 'zlib';\n\nimport { Meteor } from 'meteor/meteor';\n\nimport { SAMLUtils } from './Utils';\nimport type { ILogoutResponse } from '../definition/ILogoutResponse';\nimport type { ISAMLRequest } from '../definition/ISAMLRequest';\nimport type { IServiceProviderOptions } from '../definition/IServiceProviderOptions';\nimport type { ILogoutRequestValidateCallback, ILogoutResponseValidateCallback, IResponseValidateCallback } from '../definition/callbacks';\nimport { AuthorizeRequest } from './generators/AuthorizeRequest';\nimport { LogoutRequest } from './generators/LogoutRequest';\nimport { LogoutResponse } from './generators/LogoutResponse';\nimport { ServiceProviderMetadata } from './generators/ServiceProviderMetadata';\nimport { LogoutRequestParser } from './parsers/LogoutRequest';\nimport { LogoutResponseParser } from './parsers/LogoutResponse';\nimport { ResponseParser } from './parsers/Response';\n\nexport class SAMLServiceProvider {\n\tserviceProviderOptions: IServiceProviderOptions;\n\n\tconstructor(serviceProviderOptions: IServiceProviderOptions) {\n\t\tif (!serviceProviderOptions) {\n\t\t\tthrow new Error('SAMLServiceProvider instantiated without an options object');\n\t\t}\n\n\t\tthis.serviceProviderOptions = serviceProviderOptions;\n\t}\n\n\tprivate signRequest(xml: string): string {\n\t\tconst signer = crypto.createSign('RSA-SHA1');\n\t\tsigner.update(xml);\n\t\treturn signer.sign(this.serviceProviderOptions.privateKey, 'base64');\n\t}\n\n\tpublic generateAuthorizeRequest(): string {\n\t\tconst identifiedRequest = AuthorizeRequest.generate(this.serviceProviderOptions);\n\t\treturn identifiedRequest.request;\n\t}\n\n\tpublic generateLogoutResponse({\n\t\tnameID,\n\t\tsessionIndex,\n\t\tinResponseToId,\n\t}: {\n\t\tnameID: string;\n\t\tsessionIndex: string;\n\t\tinResponseToId: string;\n\t}): ILogoutResponse {\n\t\treturn LogoutResponse.generate(this.serviceProviderOptions, nameID, sessionIndex, inResponseToId);\n\t}\n\n\tpublic generateLogoutRequest({ nameID, sessionIndex }: { nameID: string; sessionIndex: string }): ISAMLRequest {\n\t\treturn LogoutRequest.generate(this.serviceProviderOptions, nameID, sessionIndex);\n\t}\n\n\t/*\n\t\tThis method will generate the response URL with all the query string params and pass it to the callback\n\t*/\n\tpublic logoutResponseToUrl(response: string, callback: (err: string | object | null, url?: string) => void): void {\n\t\tzlib.deflateRaw(response, (err, buffer) => {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst base64 = buffer.toString('base64');\n\t\t\t\tlet target = this.serviceProviderOptions.idpSLORedirectURL;\n\n\t\t\t\tif (target.indexOf('?') > 0) {\n\t\t\t\t\ttarget += '&';\n\t\t\t\t} else {\n\t\t\t\t\ttarget += '?';\n\t\t\t\t}\n\n\t\t\t\t// TBD. We should really include a proper RelayState here\n\t\t\t\tconst relayState = Meteor.absoluteUrl();\n\n\t\t\t\tconst samlResponse: Record<string, any> = {\n\t\t\t\t\tSAMLResponse: base64,\n\t\t\t\t\tRelayState: relayState,\n\t\t\t\t};\n\n\t\t\t\tif (this.serviceProviderOptions.privateCert) {\n\t\t\t\t\tsamlResponse.SigAlg = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1';\n\t\t\t\t\tsamlResponse.Signature = this.signRequest(querystring.stringify(samlResponse));\n\t\t\t\t}\n\n\t\t\t\ttarget += querystring.stringify(samlResponse);\n\n\t\t\t\treturn callback(null, target);\n\t\t\t} catch (error) {\n\t\t\t\treturn callback(error instanceof Error ? error : String(error));\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n\t\tThis method will generate the request URL with all the query string params and pass it to the callback\n\t*/\n\tpublic async requestToUrl(request: string, operation: string): Promise<string | undefined> {\n\t\tconst buffer = await util.promisify(zlib.deflateRaw)(request);\n\t\ttry {\n\t\t\tconst base64 = buffer.toString('base64');\n\t\t\tlet target = this.serviceProviderOptions.entryPoint;\n\n\t\t\tif (operation === 'logout') {\n\t\t\t\tif (this.serviceProviderOptions.idpSLORedirectURL) {\n\t\t\t\t\ttarget = this.serviceProviderOptions.idpSLORedirectURL;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (target.indexOf('?') > 0) {\n\t\t\t\ttarget += '&';\n\t\t\t} else {\n\t\t\t\ttarget += '?';\n\t\t\t}\n\n\t\t\t// TBD. We should really include a proper RelayState here\n\t\t\tlet relayState;\n\t\t\tif (operation === 'logout') {\n\t\t\t\t// in case of logout we want to be redirected back to the Meteor app.\n\t\t\t\trelayState = Meteor.absoluteUrl();\n\t\t\t} else {\n\t\t\t\trelayState = this.serviceProviderOptions.provider;\n\t\t\t}\n\n\t\t\tconst samlRequest: Record<string, any> = {\n\t\t\t\tSAMLRequest: base64,\n\t\t\t\tRelayState: relayState,\n\t\t\t};\n\n\t\t\tif (this.serviceProviderOptions.privateCert) {\n\t\t\t\tsamlRequest.SigAlg = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1';\n\t\t\t\tsamlRequest.Signature = this.signRequest(querystring.stringify(samlRequest));\n\t\t\t}\n\n\t\t\ttarget += querystring.stringify(samlRequest);\n\n\t\t\tSAMLUtils.log(`requestToUrl: ${target}`);\n\n\t\t\tif (operation === 'logout') {\n\t\t\t\t// in case of logout we want to be redirected back to the Meteor app.\n\t\t\t\treturn target;\n\t\t\t}\n\t\t\treturn target;\n\t\t} catch (error) {\n\t\t\tthrow error instanceof Error ? error : String(error);\n\t\t}\n\t}\n\n\tpublic async getAuthorizeUrl(): Promise<string | undefined> {\n\t\tconst request = this.generateAuthorizeRequest();\n\t\tSAMLUtils.log('-----REQUEST------');\n\t\tSAMLUtils.log(request);\n\n\t\treturn this.requestToUrl(request, 'authorize');\n\t}\n\n\tpublic async validateLogoutRequest(samlRequest: string, callback: ILogoutRequestValidateCallback): Promise<void> {\n\t\tawait SAMLUtils.inflateXml(\n\t\t\tsamlRequest,\n\t\t\tasync (xml: string) => {\n\t\t\t\tconst parser = new LogoutRequestParser(this.serviceProviderOptions);\n\t\t\t\treturn parser.validate(xml, callback);\n\t\t\t},\n\t\t\tasync (err: string | object | null) => {\n\t\t\t\tawait callback(err, null);\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async validateLogoutResponse(samlResponse: string, callback: ILogoutResponseValidateCallback): Promise<void> {\n\t\tawait SAMLUtils.inflateXml(\n\t\t\tsamlResponse,\n\t\t\tasync (xml: string) => {\n\t\t\t\tconst parser = new LogoutResponseParser(this.serviceProviderOptions);\n\t\t\t\treturn parser.validate(xml, callback);\n\t\t\t},\n\t\t\tasync (err: string | object | null) => {\n\t\t\t\tawait callback(err, null);\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic validateResponse(samlResponse: string, callback: IResponseValidateCallback): void {\n\t\tconst xml = Buffer.from(samlResponse, 'base64').toString('utf8');\n\n\t\tconst parser = new ResponseParser(this.serviceProviderOptions);\n\t\treturn parser.validate(xml, callback);\n\t}\n\n\tpublic generateServiceProviderMetadata(): string {\n\t\treturn ServiceProviderMetadata.generate(this.serviceProviderOptions);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      SAMLServiceProvider: () => SAMLServiceProvider\n    });\n    let crypto;\n    module.link(\"crypto\", {\n      default(v) {\n        crypto = v;\n      }\n    }, 0);\n    let querystring;\n    module.link(\"querystring\", {\n      default(v) {\n        querystring = v;\n      }\n    }, 1);\n    let util;\n    module.link(\"util\", {\n      default(v) {\n        util = v;\n      }\n    }, 2);\n    let zlib;\n    module.link(\"zlib\", {\n      default(v) {\n        zlib = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let SAMLUtils;\n    module.link(\"./Utils\", {\n      SAMLUtils(v) {\n        SAMLUtils = v;\n      }\n    }, 5);\n    let AuthorizeRequest;\n    module.link(\"./generators/AuthorizeRequest\", {\n      AuthorizeRequest(v) {\n        AuthorizeRequest = v;\n      }\n    }, 6);\n    let LogoutRequest;\n    module.link(\"./generators/LogoutRequest\", {\n      LogoutRequest(v) {\n        LogoutRequest = v;\n      }\n    }, 7);\n    let LogoutResponse;\n    module.link(\"./generators/LogoutResponse\", {\n      LogoutResponse(v) {\n        LogoutResponse = v;\n      }\n    }, 8);\n    let ServiceProviderMetadata;\n    module.link(\"./generators/ServiceProviderMetadata\", {\n      ServiceProviderMetadata(v) {\n        ServiceProviderMetadata = v;\n      }\n    }, 9);\n    let LogoutRequestParser;\n    module.link(\"./parsers/LogoutRequest\", {\n      LogoutRequestParser(v) {\n        LogoutRequestParser = v;\n      }\n    }, 10);\n    let LogoutResponseParser;\n    module.link(\"./parsers/LogoutResponse\", {\n      LogoutResponseParser(v) {\n        LogoutResponseParser = v;\n      }\n    }, 11);\n    let ResponseParser;\n    module.link(\"./parsers/Response\", {\n      ResponseParser(v) {\n        ResponseParser = v;\n      }\n    }, 12);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class SAMLServiceProvider {\n      constructor(serviceProviderOptions) {\n        this.serviceProviderOptions = void 0;\n        if (!serviceProviderOptions) {\n          throw new Error('SAMLServiceProvider instantiated without an options object');\n        }\n        this.serviceProviderOptions = serviceProviderOptions;\n      }\n      signRequest(xml) {\n        const signer = crypto.createSign('RSA-SHA1');\n        signer.update(xml);\n        return signer.sign(this.serviceProviderOptions.privateKey, 'base64');\n      }\n      generateAuthorizeRequest() {\n        const identifiedRequest = AuthorizeRequest.generate(this.serviceProviderOptions);\n        return identifiedRequest.request;\n      }\n      generateLogoutResponse(_ref) {\n        let {\n          nameID,\n          sessionIndex,\n          inResponseToId\n        } = _ref;\n        return LogoutResponse.generate(this.serviceProviderOptions, nameID, sessionIndex, inResponseToId);\n      }\n      generateLogoutRequest(_ref2) {\n        let {\n          nameID,\n          sessionIndex\n        } = _ref2;\n        return LogoutRequest.generate(this.serviceProviderOptions, nameID, sessionIndex);\n      }\n      /*\n          This method will generate the response URL with all the query string params and pass it to the callback\n      */\n      logoutResponseToUrl(response, callback) {\n        zlib.deflateRaw(response, (err, buffer) => {\n          if (err) {\n            return callback(err);\n          }\n          try {\n            const base64 = buffer.toString('base64');\n            let target = this.serviceProviderOptions.idpSLORedirectURL;\n            if (target.indexOf('?') > 0) {\n              target += '&';\n            } else {\n              target += '?';\n            }\n            // TBD. We should really include a proper RelayState here\n            const relayState = Meteor.absoluteUrl();\n            const samlResponse = {\n              SAMLResponse: base64,\n              RelayState: relayState\n            };\n            if (this.serviceProviderOptions.privateCert) {\n              samlResponse.SigAlg = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1';\n              samlResponse.Signature = this.signRequest(querystring.stringify(samlResponse));\n            }\n            target += querystring.stringify(samlResponse);\n            return callback(null, target);\n          } catch (error) {\n            return callback(error instanceof Error ? error : String(error));\n          }\n        });\n      }\n      /*\n          This method will generate the request URL with all the query string params and pass it to the callback\n      */\n      async requestToUrl(request, operation) {\n        const buffer = await util.promisify(zlib.deflateRaw)(request);\n        try {\n          const base64 = buffer.toString('base64');\n          let target = this.serviceProviderOptions.entryPoint;\n          if (operation === 'logout') {\n            if (this.serviceProviderOptions.idpSLORedirectURL) {\n              target = this.serviceProviderOptions.idpSLORedirectURL;\n            }\n          }\n          if (target.indexOf('?') > 0) {\n            target += '&';\n          } else {\n            target += '?';\n          }\n          // TBD. We should really include a proper RelayState here\n          let relayState;\n          if (operation === 'logout') {\n            // in case of logout we want to be redirected back to the Meteor app.\n            relayState = Meteor.absoluteUrl();\n          } else {\n            relayState = this.serviceProviderOptions.provider;\n          }\n          const samlRequest = {\n            SAMLRequest: base64,\n            RelayState: relayState\n          };\n          if (this.serviceProviderOptions.privateCert) {\n            samlRequest.SigAlg = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1';\n            samlRequest.Signature = this.signRequest(querystring.stringify(samlRequest));\n          }\n          target += querystring.stringify(samlRequest);\n          SAMLUtils.log(\"requestToUrl: \".concat(target));\n          if (operation === 'logout') {\n            // in case of logout we want to be redirected back to the Meteor app.\n            return target;\n          }\n          return target;\n        } catch (error) {\n          throw error instanceof Error ? error : String(error);\n        }\n      }\n      async getAuthorizeUrl() {\n        const request = this.generateAuthorizeRequest();\n        SAMLUtils.log('-----REQUEST------');\n        SAMLUtils.log(request);\n        return this.requestToUrl(request, 'authorize');\n      }\n      async validateLogoutRequest(samlRequest, callback) {\n        await SAMLUtils.inflateXml(samlRequest, async xml => {\n          const parser = new LogoutRequestParser(this.serviceProviderOptions);\n          return parser.validate(xml, callback);\n        }, async err => {\n          await callback(err, null);\n        });\n      }\n      async validateLogoutResponse(samlResponse, callback) {\n        await SAMLUtils.inflateXml(samlResponse, async xml => {\n          const parser = new LogoutResponseParser(this.serviceProviderOptions);\n          return parser.validate(xml, callback);\n        }, async err => {\n          await callback(err, null);\n        });\n      }\n      validateResponse(samlResponse, callback) {\n        const xml = Buffer.from(samlResponse, 'base64').toString('utf8');\n        const parser = new ResponseParser(this.serviceProviderOptions);\n        return parser.validate(xml, callback);\n      }\n      generateServiceProviderMetadata() {\n        return ServiceProviderMetadata.generate(this.serviceProviderOptions);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","SAMLServiceProvider","crypto","link","default","v","querystring","util","zlib","Meteor","SAMLUtils","AuthorizeRequest","LogoutRequest","LogoutResponse","ServiceProviderMetadata","LogoutRequestParser","LogoutResponseParser","ResponseParser","__reifyWaitForDeps__","constructor","serviceProviderOptions","Error","signRequest","xml","signer","createSign","update","sign","privateKey","generateAuthorizeRequest","identifiedRequest","generate","request","generateLogoutResponse","_ref","nameID","sessionIndex","inResponseToId","generateLogoutRequest","_ref2","logoutResponseToUrl","response","callback","deflateRaw","err","buffer","base64","toString","target","idpSLORedirectURL","indexOf","relayState","absoluteUrl","samlResponse","SAMLResponse","RelayState","privateCert","SigAlg","Signature","stringify","error","String","requestToUrl","operation","promisify","entryPoint","provider","samlRequest","SAMLRequest","log","concat","getAuthorizeUrl","validateLogoutRequest","inflateXml","parser","validate","validateLogoutResponse","validateResponse","Buffer","from","generateServiceProviderMetadata","__reify_async_result__","_reifyError","self","async"],"sources":["app/meteor-accounts-saml/server/lib/ServiceProvider.ts"],"sourcesContent":["import crypto from 'crypto';\nimport querystring from 'querystring';\nimport util from 'util';\nimport zlib from 'zlib';\n\nimport { Meteor } from 'meteor/meteor';\n\nimport { SAMLUtils } from './Utils';\nimport type { ILogoutResponse } from '../definition/ILogoutResponse';\nimport type { ISAMLRequest } from '../definition/ISAMLRequest';\nimport type { IServiceProviderOptions } from '../definition/IServiceProviderOptions';\nimport type { ILogoutRequestValidateCallback, ILogoutResponseValidateCallback, IResponseValidateCallback } from '../definition/callbacks';\nimport { AuthorizeRequest } from './generators/AuthorizeRequest';\nimport { LogoutRequest } from './generators/LogoutRequest';\nimport { LogoutResponse } from './generators/LogoutResponse';\nimport { ServiceProviderMetadata } from './generators/ServiceProviderMetadata';\nimport { LogoutRequestParser } from './parsers/LogoutRequest';\nimport { LogoutResponseParser } from './parsers/LogoutResponse';\nimport { ResponseParser } from './parsers/Response';\n\nexport class SAMLServiceProvider {\n\tserviceProviderOptions: IServiceProviderOptions;\n\n\tconstructor(serviceProviderOptions: IServiceProviderOptions) {\n\t\tif (!serviceProviderOptions) {\n\t\t\tthrow new Error('SAMLServiceProvider instantiated without an options object');\n\t\t}\n\n\t\tthis.serviceProviderOptions = serviceProviderOptions;\n\t}\n\n\tprivate signRequest(xml: string): string {\n\t\tconst signer = crypto.createSign('RSA-SHA1');\n\t\tsigner.update(xml);\n\t\treturn signer.sign(this.serviceProviderOptions.privateKey, 'base64');\n\t}\n\n\tpublic generateAuthorizeRequest(): string {\n\t\tconst identifiedRequest = AuthorizeRequest.generate(this.serviceProviderOptions);\n\t\treturn identifiedRequest.request;\n\t}\n\n\tpublic generateLogoutResponse({\n\t\tnameID,\n\t\tsessionIndex,\n\t\tinResponseToId,\n\t}: {\n\t\tnameID: string;\n\t\tsessionIndex: string;\n\t\tinResponseToId: string;\n\t}): ILogoutResponse {\n\t\treturn LogoutResponse.generate(this.serviceProviderOptions, nameID, sessionIndex, inResponseToId);\n\t}\n\n\tpublic generateLogoutRequest({ nameID, sessionIndex }: { nameID: string; sessionIndex: string }): ISAMLRequest {\n\t\treturn LogoutRequest.generate(this.serviceProviderOptions, nameID, sessionIndex);\n\t}\n\n\t/*\n\t\tThis method will generate the response URL with all the query string params and pass it to the callback\n\t*/\n\tpublic logoutResponseToUrl(response: string, callback: (err: string | object | null, url?: string) => void): void {\n\t\tzlib.deflateRaw(response, (err, buffer) => {\n\t\t\tif (err) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst base64 = buffer.toString('base64');\n\t\t\t\tlet target = this.serviceProviderOptions.idpSLORedirectURL;\n\n\t\t\t\tif (target.indexOf('?') > 0) {\n\t\t\t\t\ttarget += '&';\n\t\t\t\t} else {\n\t\t\t\t\ttarget += '?';\n\t\t\t\t}\n\n\t\t\t\t// TBD. We should really include a proper RelayState here\n\t\t\t\tconst relayState = Meteor.absoluteUrl();\n\n\t\t\t\tconst samlResponse: Record<string, any> = {\n\t\t\t\t\tSAMLResponse: base64,\n\t\t\t\t\tRelayState: relayState,\n\t\t\t\t};\n\n\t\t\t\tif (this.serviceProviderOptions.privateCert) {\n\t\t\t\t\tsamlResponse.SigAlg = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1';\n\t\t\t\t\tsamlResponse.Signature = this.signRequest(querystring.stringify(samlResponse));\n\t\t\t\t}\n\n\t\t\t\ttarget += querystring.stringify(samlResponse);\n\n\t\t\t\treturn callback(null, target);\n\t\t\t} catch (error) {\n\t\t\t\treturn callback(error instanceof Error ? error : String(error));\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n\t\tThis method will generate the request URL with all the query string params and pass it to the callback\n\t*/\n\tpublic async requestToUrl(request: string, operation: string): Promise<string | undefined> {\n\t\tconst buffer = await util.promisify(zlib.deflateRaw)(request);\n\t\ttry {\n\t\t\tconst base64 = buffer.toString('base64');\n\t\t\tlet target = this.serviceProviderOptions.entryPoint;\n\n\t\t\tif (operation === 'logout') {\n\t\t\t\tif (this.serviceProviderOptions.idpSLORedirectURL) {\n\t\t\t\t\ttarget = this.serviceProviderOptions.idpSLORedirectURL;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (target.indexOf('?') > 0) {\n\t\t\t\ttarget += '&';\n\t\t\t} else {\n\t\t\t\ttarget += '?';\n\t\t\t}\n\n\t\t\t// TBD. We should really include a proper RelayState here\n\t\t\tlet relayState;\n\t\t\tif (operation === 'logout') {\n\t\t\t\t// in case of logout we want to be redirected back to the Meteor app.\n\t\t\t\trelayState = Meteor.absoluteUrl();\n\t\t\t} else {\n\t\t\t\trelayState = this.serviceProviderOptions.provider;\n\t\t\t}\n\n\t\t\tconst samlRequest: Record<string, any> = {\n\t\t\t\tSAMLRequest: base64,\n\t\t\t\tRelayState: relayState,\n\t\t\t};\n\n\t\t\tif (this.serviceProviderOptions.privateCert) {\n\t\t\t\tsamlRequest.SigAlg = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1';\n\t\t\t\tsamlRequest.Signature = this.signRequest(querystring.stringify(samlRequest));\n\t\t\t}\n\n\t\t\ttarget += querystring.stringify(samlRequest);\n\n\t\t\tSAMLUtils.log(`requestToUrl: ${target}`);\n\n\t\t\tif (operation === 'logout') {\n\t\t\t\t// in case of logout we want to be redirected back to the Meteor app.\n\t\t\t\treturn target;\n\t\t\t}\n\t\t\treturn target;\n\t\t} catch (error) {\n\t\t\tthrow error instanceof Error ? error : String(error);\n\t\t}\n\t}\n\n\tpublic async getAuthorizeUrl(): Promise<string | undefined> {\n\t\tconst request = this.generateAuthorizeRequest();\n\t\tSAMLUtils.log('-----REQUEST------');\n\t\tSAMLUtils.log(request);\n\n\t\treturn this.requestToUrl(request, 'authorize');\n\t}\n\n\tpublic async validateLogoutRequest(samlRequest: string, callback: ILogoutRequestValidateCallback): Promise<void> {\n\t\tawait SAMLUtils.inflateXml(\n\t\t\tsamlRequest,\n\t\t\tasync (xml: string) => {\n\t\t\t\tconst parser = new LogoutRequestParser(this.serviceProviderOptions);\n\t\t\t\treturn parser.validate(xml, callback);\n\t\t\t},\n\t\t\tasync (err: string | object | null) => {\n\t\t\t\tawait callback(err, null);\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async validateLogoutResponse(samlResponse: string, callback: ILogoutResponseValidateCallback): Promise<void> {\n\t\tawait SAMLUtils.inflateXml(\n\t\t\tsamlResponse,\n\t\t\tasync (xml: string) => {\n\t\t\t\tconst parser = new LogoutResponseParser(this.serviceProviderOptions);\n\t\t\t\treturn parser.validate(xml, callback);\n\t\t\t},\n\t\t\tasync (err: string | object | null) => {\n\t\t\t\tawait callback(err, null);\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic validateResponse(samlResponse: string, callback: IResponseValidateCallback): void {\n\t\tconst xml = Buffer.from(samlResponse, 'base64').toString('utf8');\n\n\t\tconst parser = new ResponseParser(this.serviceProviderOptions);\n\t\treturn parser.validate(xml, callback);\n\t}\n\n\tpublic generateServiceProviderMetadata(): string {\n\t\treturn ServiceProviderMetadata.generate(this.serviceProviderOptions);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"4a622969e00e405ca96ecde23a1b8815f5663aa1"}
