{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts"],"names":[],"mappings":"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","sourcesContent":["import { Agenda } from '@rocket.chat/agenda';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport type { MainLogger } from '@rocket.chat/logger';\nimport { LivechatRooms, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport { MongoInternals } from 'meteor/mongo';\n\nimport { schedulerLogger } from './logger';\nimport { forwardRoomToAgent } from '../../../../../app/livechat/server/lib/Helper';\nimport { Livechat as LivechatTyped } from '../../../../../app/livechat/server/lib/LivechatTyped';\nimport { RoutingManager } from '../../../../../app/livechat/server/lib/RoutingManager';\nimport { settings } from '../../../../../app/settings/server';\n\nconst SCHEDULER_NAME = 'omnichannel_scheduler';\n\nclass AutoTransferChatSchedulerClass {\n\tscheduler: Agenda;\n\n\trunning: boolean;\n\n\tuser: IUser;\n\n\tlogger: MainLogger;\n\n\tconstructor() {\n\t\tthis.logger = schedulerLogger.section('AutoTransferChatScheduler');\n\t}\n\n\tpublic async init(): Promise<void> {\n\t\tif (this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scheduler = new Agenda({\n\t\t\tmongo: (MongoInternals.defaultRemoteCollectionDriver().mongo as any).client.db(),\n\t\t\tdb: { collection: SCHEDULER_NAME },\n\t\t\tdefaultConcurrency: 1,\n\t\t\tprocessEvery: process.env.TEST_MODE === 'true' ? '3 seconds' : '1 minute',\n\t\t});\n\n\t\tawait this.scheduler.start();\n\t\tthis.running = true;\n\t\tthis.logger.info('Service started');\n\t}\n\n\tprivate async getSchedulerUser(): Promise<IUser | null> {\n\t\treturn Users.findOneById('rocket.cat');\n\t}\n\n\tpublic async scheduleRoom(roomId: string, timeout: number): Promise<void> {\n\t\tthis.logger.debug(`Scheduling room ${roomId} to be transferred in ${timeout} seconds`);\n\t\tawait this.unscheduleRoom(roomId);\n\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\t\tconst when = new Date();\n\t\twhen.setSeconds(when.getSeconds() + timeout);\n\n\t\tthis.scheduler.define(jobName, this.executeJob.bind(this));\n\t\tawait this.scheduler.schedule(when, jobName, { roomId });\n\t\tawait LivechatRooms.setAutoTransferOngoingById(roomId);\n\t}\n\n\tpublic async unscheduleRoom(roomId: string): Promise<void> {\n\t\tthis.logger.debug(`Unscheduling room ${roomId}`);\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\n\t\tawait LivechatRooms.unsetAutoTransferOngoingById(roomId);\n\t\tawait this.scheduler.cancel({ name: jobName });\n\t}\n\n\tprivate async transferRoom(roomId: string): Promise<void> {\n\t\tthis.logger.debug(`Transferring room ${roomId}`);\n\t\tconst room = await LivechatRooms.findOneById(roomId, {\n\t\t\t_id: 1,\n\t\t\tv: 1,\n\t\t\tservedBy: 1,\n\t\t\topen: 1,\n\t\t\tdepartmentId: 1,\n\t\t});\n\t\tif (!room?.open || !room?.servedBy?._id) {\n\t\t\tthrow new Error('Room is not open or is not being served by an agent');\n\t\t}\n\n\t\tconst {\n\t\t\tdepartmentId,\n\t\t\tservedBy: { _id: ignoreAgentId },\n\t\t} = room;\n\n\t\tconst timeoutDuration = settings.get<number>('Livechat_auto_transfer_chat_timeout').toString();\n\n\t\tif (!RoutingManager.getConfig()?.autoAssignAgent) {\n\t\t\tthis.logger.debug(`Auto-assign agent is disabled, returning room ${roomId} as inquiry`);\n\n\t\t\tawait LivechatTyped.returnRoomAsInquiry(room, departmentId, {\n\t\t\t\tscope: 'autoTransferUnansweredChatsToQueue',\n\t\t\t\tcomment: timeoutDuration,\n\t\t\t\ttransferredBy: await this.getSchedulerUser(),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst agent = await RoutingManager.getNextAgent(departmentId, ignoreAgentId);\n\t\tif (!agent) {\n\t\t\tthis.logger.error(`No agent found to transfer room ${room._id} which hasn't been answered in ${timeoutDuration} seconds`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logger.debug(`Transferring room ${roomId} to agent ${agent.agentId}`);\n\n\t\tconst transferredBy = await this.getSchedulerUser();\n\n\t\tif (!transferredBy) {\n\t\t\tthis.logger.error(`Error while transferring room ${room._id}: user not found`);\n\t\t\treturn;\n\t\t}\n\n\t\tawait forwardRoomToAgent(room, {\n\t\t\tuserId: agent.agentId,\n\t\t\ttransferredBy: { ...transferredBy, userType: 'user' },\n\t\t\ttransferredTo: agent,\n\t\t\tscope: 'autoTransferUnansweredChatsToAgent',\n\t\t\tcomment: timeoutDuration,\n\t\t});\n\t}\n\n\tprivate async executeJob({ attrs: { data } }: any = {}): Promise<void> {\n\t\tconst { roomId } = data;\n\n\t\ttry {\n\t\t\tawait this.transferRoom(roomId);\n\n\t\t\tawait Promise.all([LivechatRooms.setAutoTransferredAtById(roomId), this.unscheduleRoom(roomId)]);\n\t\t} catch (error) {\n\t\t\tthis.logger.error(`Error while executing job ${SCHEDULER_NAME} for room ${roomId}:`, error);\n\t\t}\n\t}\n}\n\nexport const AutoTransferChatScheduler = new AutoTransferChatSchedulerClass();\n\nMeteor.startup(() => {\n\tvoid AutoTransferChatScheduler.init();\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts"],"names":[],"mappings":"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","sourcesContent":["import { Agenda } from '@rocket.chat/agenda';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport type { MainLogger } from '@rocket.chat/logger';\nimport { LivechatRooms, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport { MongoInternals } from 'meteor/mongo';\n\nimport { schedulerLogger } from './logger';\nimport { forwardRoomToAgent } from '../../../../../app/livechat/server/lib/Helper';\nimport { Livechat as LivechatTyped } from '../../../../../app/livechat/server/lib/LivechatTyped';\nimport { RoutingManager } from '../../../../../app/livechat/server/lib/RoutingManager';\nimport { settings } from '../../../../../app/settings/server';\n\nconst SCHEDULER_NAME = 'omnichannel_scheduler';\n\nclass AutoTransferChatSchedulerClass {\n\tscheduler: Agenda;\n\n\trunning: boolean;\n\n\tuser: IUser;\n\n\tlogger: MainLogger;\n\n\tconstructor() {\n\t\tthis.logger = schedulerLogger.section('AutoTransferChatScheduler');\n\t}\n\n\tpublic async init(): Promise<void> {\n\t\tif (this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scheduler = new Agenda({\n\t\t\tmongo: (MongoInternals.defaultRemoteCollectionDriver().mongo as any).client.db(),\n\t\t\tdb: { collection: SCHEDULER_NAME },\n\t\t\tdefaultConcurrency: 1,\n\t\t\tprocessEvery: process.env.TEST_MODE === 'true' ? '3 seconds' : '1 minute',\n\t\t});\n\n\t\tawait this.scheduler.start();\n\t\tthis.running = true;\n\t\tthis.logger.info('Service started');\n\t}\n\n\tprivate async getSchedulerUser(): Promise<IUser | null> {\n\t\treturn Users.findOneById('rocket.cat');\n\t}\n\n\tpublic async scheduleRoom(roomId: string, timeout: number): Promise<void> {\n\t\tthis.logger.debug(`Scheduling room ${roomId} to be transferred in ${timeout} seconds`);\n\t\tawait this.unscheduleRoom(roomId);\n\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\t\tconst when = new Date();\n\t\twhen.setSeconds(when.getSeconds() + timeout);\n\n\t\tthis.scheduler.define(jobName, this.executeJob.bind(this));\n\t\tawait this.scheduler.schedule(when, jobName, { roomId });\n\t\tawait LivechatRooms.setAutoTransferOngoingById(roomId);\n\t}\n\n\tpublic async unscheduleRoom(roomId: string): Promise<void> {\n\t\tthis.logger.debug(`Unscheduling room ${roomId}`);\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\n\t\tawait LivechatRooms.unsetAutoTransferOngoingById(roomId);\n\t\tawait this.scheduler.cancel({ name: jobName });\n\t}\n\n\tprivate async transferRoom(roomId: string): Promise<void> {\n\t\tthis.logger.debug(`Transferring room ${roomId}`);\n\t\tconst room = await LivechatRooms.findOneById(roomId, {\n\t\t\t_id: 1,\n\t\t\tv: 1,\n\t\t\tservedBy: 1,\n\t\t\topen: 1,\n\t\t\tdepartmentId: 1,\n\t\t});\n\t\tif (!room?.open || !room?.servedBy?._id) {\n\t\t\tthrow new Error('Room is not open or is not being served by an agent');\n\t\t}\n\n\t\tconst {\n\t\t\tdepartmentId,\n\t\t\tservedBy: { _id: ignoreAgentId },\n\t\t} = room;\n\n\t\tconst timeoutDuration = settings.get<number>('Livechat_auto_transfer_chat_timeout').toString();\n\n\t\tif (!RoutingManager.getConfig()?.autoAssignAgent) {\n\t\t\tthis.logger.debug(`Auto-assign agent is disabled, returning room ${roomId} as inquiry`);\n\n\t\t\tawait LivechatTyped.returnRoomAsInquiry(room, departmentId, {\n\t\t\t\tscope: 'autoTransferUnansweredChatsToQueue',\n\t\t\t\tcomment: timeoutDuration,\n\t\t\t\ttransferredBy: await this.getSchedulerUser(),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst agent = await RoutingManager.getNextAgent(departmentId, ignoreAgentId);\n\t\tif (!agent) {\n\t\t\tthis.logger.error(`No agent found to transfer room ${room._id} which hasn't been answered in ${timeoutDuration} seconds`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logger.debug(`Transferring room ${roomId} to agent ${agent.agentId}`);\n\n\t\tconst transferredBy = await this.getSchedulerUser();\n\n\t\tif (!transferredBy) {\n\t\t\tthis.logger.error(`Error while transferring room ${room._id}: user not found`);\n\t\t\treturn;\n\t\t}\n\n\t\tawait forwardRoomToAgent(room, {\n\t\t\tuserId: agent.agentId,\n\t\t\ttransferredBy: { ...transferredBy, userType: 'user' },\n\t\t\ttransferredTo: agent,\n\t\t\tscope: 'autoTransferUnansweredChatsToAgent',\n\t\t\tcomment: timeoutDuration,\n\t\t});\n\t}\n\n\tprivate async executeJob({ attrs: { data } }: any = {}): Promise<void> {\n\t\tconst { roomId } = data;\n\n\t\ttry {\n\t\t\tawait this.transferRoom(roomId);\n\n\t\t\tawait Promise.all([LivechatRooms.setAutoTransferredAtById(roomId), this.unscheduleRoom(roomId)]);\n\t\t} catch (error) {\n\t\t\tthis.logger.error(`Error while executing job ${SCHEDULER_NAME} for room ${roomId}:`, error);\n\t\t}\n\t}\n}\n\nexport const AutoTransferChatScheduler = new AutoTransferChatSchedulerClass();\n\nMeteor.startup(() => {\n\tvoid AutoTransferChatScheduler.init();\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      AutoTransferChatScheduler: () => AutoTransferChatScheduler\n    });\n    let Agenda;\n    module.link(\"@rocket.chat/agenda\", {\n      Agenda(v) {\n        Agenda = v;\n      }\n    }, 0);\n    let LivechatRooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let MongoInternals;\n    module.link(\"meteor/mongo\", {\n      MongoInternals(v) {\n        MongoInternals = v;\n      }\n    }, 3);\n    let schedulerLogger;\n    module.link(\"./logger\", {\n      schedulerLogger(v) {\n        schedulerLogger = v;\n      }\n    }, 4);\n    let forwardRoomToAgent;\n    module.link(\"../../../../../app/livechat/server/lib/Helper\", {\n      forwardRoomToAgent(v) {\n        forwardRoomToAgent = v;\n      }\n    }, 5);\n    let LivechatTyped;\n    module.link(\"../../../../../app/livechat/server/lib/LivechatTyped\", {\n      Livechat(v) {\n        LivechatTyped = v;\n      }\n    }, 6);\n    let RoutingManager;\n    module.link(\"../../../../../app/livechat/server/lib/RoutingManager\", {\n      RoutingManager(v) {\n        RoutingManager = v;\n      }\n    }, 7);\n    let settings;\n    module.link(\"../../../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const SCHEDULER_NAME = 'omnichannel_scheduler';\n    class AutoTransferChatSchedulerClass {\n      constructor() {\n        this.scheduler = void 0;\n        this.running = void 0;\n        this.user = void 0;\n        this.logger = void 0;\n        this.logger = schedulerLogger.section('AutoTransferChatScheduler');\n      }\n      async init() {\n        if (this.running) {\n          return;\n        }\n        this.scheduler = new Agenda({\n          mongo: MongoInternals.defaultRemoteCollectionDriver().mongo.client.db(),\n          db: {\n            collection: SCHEDULER_NAME\n          },\n          defaultConcurrency: 1,\n          processEvery: process.env.TEST_MODE === 'true' ? '3 seconds' : '1 minute'\n        });\n        await this.scheduler.start();\n        this.running = true;\n        this.logger.info('Service started');\n      }\n      async getSchedulerUser() {\n        return Users.findOneById('rocket.cat');\n      }\n      async scheduleRoom(roomId, timeout) {\n        this.logger.debug(\"Scheduling room \".concat(roomId, \" to be transferred in \").concat(timeout, \" seconds\"));\n        await this.unscheduleRoom(roomId);\n        const jobName = \"\".concat(SCHEDULER_NAME, \"-\").concat(roomId);\n        const when = new Date();\n        when.setSeconds(when.getSeconds() + timeout);\n        this.scheduler.define(jobName, this.executeJob.bind(this));\n        await this.scheduler.schedule(when, jobName, {\n          roomId\n        });\n        await LivechatRooms.setAutoTransferOngoingById(roomId);\n      }\n      async unscheduleRoom(roomId) {\n        this.logger.debug(\"Unscheduling room \".concat(roomId));\n        const jobName = \"\".concat(SCHEDULER_NAME, \"-\").concat(roomId);\n        await LivechatRooms.unsetAutoTransferOngoingById(roomId);\n        await this.scheduler.cancel({\n          name: jobName\n        });\n      }\n      async transferRoom(roomId) {\n        var _room$servedBy, _RoutingManager$getCo;\n        this.logger.debug(\"Transferring room \".concat(roomId));\n        const room = await LivechatRooms.findOneById(roomId, {\n          _id: 1,\n          v: 1,\n          servedBy: 1,\n          open: 1,\n          departmentId: 1\n        });\n        if (!(room !== null && room !== void 0 && room.open) || !(room !== null && room !== void 0 && (_room$servedBy = room.servedBy) !== null && _room$servedBy !== void 0 && _room$servedBy._id)) {\n          throw new Error('Room is not open or is not being served by an agent');\n        }\n        const {\n          departmentId,\n          servedBy: {\n            _id: ignoreAgentId\n          }\n        } = room;\n        const timeoutDuration = settings.get('Livechat_auto_transfer_chat_timeout').toString();\n        if (!((_RoutingManager$getCo = RoutingManager.getConfig()) !== null && _RoutingManager$getCo !== void 0 && _RoutingManager$getCo.autoAssignAgent)) {\n          this.logger.debug(\"Auto-assign agent is disabled, returning room \".concat(roomId, \" as inquiry\"));\n          await LivechatTyped.returnRoomAsInquiry(room, departmentId, {\n            scope: 'autoTransferUnansweredChatsToQueue',\n            comment: timeoutDuration,\n            transferredBy: await this.getSchedulerUser()\n          });\n          return;\n        }\n        const agent = await RoutingManager.getNextAgent(departmentId, ignoreAgentId);\n        if (!agent) {\n          this.logger.error(\"No agent found to transfer room \".concat(room._id, \" which hasn't been answered in \").concat(timeoutDuration, \" seconds\"));\n          return;\n        }\n        this.logger.debug(\"Transferring room \".concat(roomId, \" to agent \").concat(agent.agentId));\n        const transferredBy = await this.getSchedulerUser();\n        if (!transferredBy) {\n          this.logger.error(\"Error while transferring room \".concat(room._id, \": user not found\"));\n          return;\n        }\n        await forwardRoomToAgent(room, {\n          userId: agent.agentId,\n          transferredBy: _objectSpread(_objectSpread({}, transferredBy), {}, {\n            userType: 'user'\n          }),\n          transferredTo: agent,\n          scope: 'autoTransferUnansweredChatsToAgent',\n          comment: timeoutDuration\n        });\n      }\n      async executeJob() {\n        let {\n          attrs: {\n            data\n          }\n        } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const {\n          roomId\n        } = data;\n        try {\n          await this.transferRoom(roomId);\n          await Promise.all([LivechatRooms.setAutoTransferredAtById(roomId), this.unscheduleRoom(roomId)]);\n        } catch (error) {\n          this.logger.error(\"Error while executing job \".concat(SCHEDULER_NAME, \" for room \").concat(roomId, \":\"), error);\n        }\n      }\n    }\n    const AutoTransferChatScheduler = new AutoTransferChatSchedulerClass();\n    Meteor.startup(() => {\n      void AutoTransferChatScheduler.init();\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","AutoTransferChatScheduler","Agenda","LivechatRooms","Users","Meteor","MongoInternals","schedulerLogger","forwardRoomToAgent","LivechatTyped","Livechat","RoutingManager","settings","__reifyWaitForDeps__","SCHEDULER_NAME","AutoTransferChatSchedulerClass","constructor","scheduler","running","user","logger","section","init","mongo","defaultRemoteCollectionDriver","client","db","collection","defaultConcurrency","processEvery","process","env","TEST_MODE","start","info","getSchedulerUser","findOneById","scheduleRoom","roomId","timeout","debug","concat","unscheduleRoom","jobName","when","Date","setSeconds","getSeconds","define","executeJob","bind","schedule","setAutoTransferOngoingById","unsetAutoTransferOngoingById","cancel","name","transferRoom","_room$servedBy","_RoutingManager$getCo","room","_id","servedBy","open","departmentId","Error","ignoreAgentId","timeoutDuration","get","toString","getConfig","autoAssignAgent","returnRoomAsInquiry","scope","comment","transferredBy","agent","getNextAgent","error","agentId","userId","userType","transferredTo","attrs","data","arguments","length","undefined","Promise","all","setAutoTransferredAtById","startup","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/lib/AutoTransferChatScheduler.ts"],"sourcesContent":["import { Agenda } from '@rocket.chat/agenda';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport type { MainLogger } from '@rocket.chat/logger';\nimport { LivechatRooms, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport { MongoInternals } from 'meteor/mongo';\n\nimport { schedulerLogger } from './logger';\nimport { forwardRoomToAgent } from '../../../../../app/livechat/server/lib/Helper';\nimport { Livechat as LivechatTyped } from '../../../../../app/livechat/server/lib/LivechatTyped';\nimport { RoutingManager } from '../../../../../app/livechat/server/lib/RoutingManager';\nimport { settings } from '../../../../../app/settings/server';\n\nconst SCHEDULER_NAME = 'omnichannel_scheduler';\n\nclass AutoTransferChatSchedulerClass {\n\tscheduler: Agenda;\n\n\trunning: boolean;\n\n\tuser: IUser;\n\n\tlogger: MainLogger;\n\n\tconstructor() {\n\t\tthis.logger = schedulerLogger.section('AutoTransferChatScheduler');\n\t}\n\n\tpublic async init(): Promise<void> {\n\t\tif (this.running) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scheduler = new Agenda({\n\t\t\tmongo: (MongoInternals.defaultRemoteCollectionDriver().mongo as any).client.db(),\n\t\t\tdb: { collection: SCHEDULER_NAME },\n\t\t\tdefaultConcurrency: 1,\n\t\t\tprocessEvery: process.env.TEST_MODE === 'true' ? '3 seconds' : '1 minute',\n\t\t});\n\n\t\tawait this.scheduler.start();\n\t\tthis.running = true;\n\t\tthis.logger.info('Service started');\n\t}\n\n\tprivate async getSchedulerUser(): Promise<IUser | null> {\n\t\treturn Users.findOneById('rocket.cat');\n\t}\n\n\tpublic async scheduleRoom(roomId: string, timeout: number): Promise<void> {\n\t\tthis.logger.debug(`Scheduling room ${roomId} to be transferred in ${timeout} seconds`);\n\t\tawait this.unscheduleRoom(roomId);\n\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\t\tconst when = new Date();\n\t\twhen.setSeconds(when.getSeconds() + timeout);\n\n\t\tthis.scheduler.define(jobName, this.executeJob.bind(this));\n\t\tawait this.scheduler.schedule(when, jobName, { roomId });\n\t\tawait LivechatRooms.setAutoTransferOngoingById(roomId);\n\t}\n\n\tpublic async unscheduleRoom(roomId: string): Promise<void> {\n\t\tthis.logger.debug(`Unscheduling room ${roomId}`);\n\t\tconst jobName = `${SCHEDULER_NAME}-${roomId}`;\n\n\t\tawait LivechatRooms.unsetAutoTransferOngoingById(roomId);\n\t\tawait this.scheduler.cancel({ name: jobName });\n\t}\n\n\tprivate async transferRoom(roomId: string): Promise<void> {\n\t\tthis.logger.debug(`Transferring room ${roomId}`);\n\t\tconst room = await LivechatRooms.findOneById(roomId, {\n\t\t\t_id: 1,\n\t\t\tv: 1,\n\t\t\tservedBy: 1,\n\t\t\topen: 1,\n\t\t\tdepartmentId: 1,\n\t\t});\n\t\tif (!room?.open || !room?.servedBy?._id) {\n\t\t\tthrow new Error('Room is not open or is not being served by an agent');\n\t\t}\n\n\t\tconst {\n\t\t\tdepartmentId,\n\t\t\tservedBy: { _id: ignoreAgentId },\n\t\t} = room;\n\n\t\tconst timeoutDuration = settings.get<number>('Livechat_auto_transfer_chat_timeout').toString();\n\n\t\tif (!RoutingManager.getConfig()?.autoAssignAgent) {\n\t\t\tthis.logger.debug(`Auto-assign agent is disabled, returning room ${roomId} as inquiry`);\n\n\t\t\tawait LivechatTyped.returnRoomAsInquiry(room, departmentId, {\n\t\t\t\tscope: 'autoTransferUnansweredChatsToQueue',\n\t\t\t\tcomment: timeoutDuration,\n\t\t\t\ttransferredBy: await this.getSchedulerUser(),\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst agent = await RoutingManager.getNextAgent(departmentId, ignoreAgentId);\n\t\tif (!agent) {\n\t\t\tthis.logger.error(`No agent found to transfer room ${room._id} which hasn't been answered in ${timeoutDuration} seconds`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logger.debug(`Transferring room ${roomId} to agent ${agent.agentId}`);\n\n\t\tconst transferredBy = await this.getSchedulerUser();\n\n\t\tif (!transferredBy) {\n\t\t\tthis.logger.error(`Error while transferring room ${room._id}: user not found`);\n\t\t\treturn;\n\t\t}\n\n\t\tawait forwardRoomToAgent(room, {\n\t\t\tuserId: agent.agentId,\n\t\t\ttransferredBy: { ...transferredBy, userType: 'user' },\n\t\t\ttransferredTo: agent,\n\t\t\tscope: 'autoTransferUnansweredChatsToAgent',\n\t\t\tcomment: timeoutDuration,\n\t\t});\n\t}\n\n\tprivate async executeJob({ attrs: { data } }: any = {}): Promise<void> {\n\t\tconst { roomId } = data;\n\n\t\ttry {\n\t\t\tawait this.transferRoom(roomId);\n\n\t\t\tawait Promise.all([LivechatRooms.setAutoTransferredAtById(roomId), this.unscheduleRoom(roomId)]);\n\t\t} catch (error) {\n\t\t\tthis.logger.error(`Error while executing job ${SCHEDULER_NAME} for room ${roomId}:`, error);\n\t\t}\n\t}\n}\n\nexport const AutoTransferChatScheduler = new AutoTransferChatSchedulerClass();\n\nMeteor.startup(() => {\n\tvoid AutoTransferChatScheduler.init();\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"5d31520410d09db36f14b54cec5746177f542e1b"}
