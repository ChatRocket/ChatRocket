{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/uploads.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/bridges/uploads.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/uploads.ts","inputSourceMap":{"version":3,"file":"app/apps/server/bridges/uploads.ts","sourceRoot":"","sources":["app/apps/server/bridges/uploads.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAppServerOrchestrator } from '@rocket.chat/apps';\nimport type { IUpload } from '@rocket.chat/apps-engine/definition/uploads';\nimport type { IUploadDetails } from '@rocket.chat/apps-engine/definition/uploads/IUploadDetails';\nimport { UploadBridge } from '@rocket.chat/apps-engine/server/bridges/UploadBridge';\n\nimport { determineFileType } from '../../../../ee/lib/misc/determineFileType';\nimport { FileUpload } from '../../../file-upload/server';\nimport { sendFileMessage } from '../../../file-upload/server/methods/sendFileMessage';\nimport { sendFileLivechatMessage } from '../../../livechat/server/methods/sendFileLivechatMessage';\n\nconst getUploadDetails = (details: IUploadDetails): Partial<IUploadDetails> => {\n\tif (details.visitorToken) {\n\t\tconst { userId, ...result } = details;\n\t\treturn result;\n\t}\n\treturn details;\n};\nexport class AppUploadBridge extends UploadBridge {\n\tconstructor(private readonly orch: IAppServerOrchestrator) {\n\t\tsuper();\n\t}\n\n\tprotected async getById(id: string, appId: string): Promise<IUpload> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the upload: \"${id}\"`);\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst promise: Promise<IUpload | undefined> = this.orch.getConverters()?.get('uploads').convertById(id);\n\t\treturn promise as Promise<IUpload>;\n\t}\n\n\tprotected async getBuffer(upload: IUpload, appId: string): Promise<Buffer> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the upload: \"${upload.id}\"`);\n\n\t\tconst rocketChatUpload = this.orch.getConverters()?.get('uploads').convertToRocketChat(upload);\n\n\t\tconst result = await FileUpload.getBuffer(rocketChatUpload);\n\n\t\tif (!(result instanceof Buffer)) {\n\t\t\tthrow new Error('Unknown error');\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected async createUpload(details: IUploadDetails, buffer: Buffer, appId: string): Promise<IUpload> {\n\t\tthis.orch.debugLog(`The App ${appId} is creating an upload \"${details.name}\"`);\n\n\t\tif (!details.userId && !details.visitorToken) {\n\t\t\tthrow new Error('Missing user to perform the upload operation');\n\t\t}\n\n\t\tconst fileStore = FileUpload.getStore('Uploads');\n\n\t\tdetails.type = determineFileType(buffer, details.name);\n\n\t\tconst uploadedFile = await fileStore.insert(getUploadDetails(details), buffer);\n\t\tthis.orch.debugLog(`The App ${appId} has created an upload`, uploadedFile);\n\t\tif (details.visitorToken) {\n\t\t\tawait sendFileLivechatMessage({ roomId: details.rid, visitorToken: details.visitorToken, file: uploadedFile });\n\t\t} else {\n\t\t\tawait sendFileMessage(details.userId, { roomId: details.rid, file: uploadedFile });\n\t\t}\n\t\treturn this.orch.getConverters()?.get('uploads').convertToApp(uploadedFile);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/uploads.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/bridges/uploads.ts","inputSourceMap":{"version":3,"file":"app/apps/server/bridges/uploads.ts","sourceRoot":"","sources":["app/apps/server/bridges/uploads.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAppServerOrchestrator } from '@rocket.chat/apps';\nimport type { IUpload } from '@rocket.chat/apps-engine/definition/uploads';\nimport type { IUploadDetails } from '@rocket.chat/apps-engine/definition/uploads/IUploadDetails';\nimport { UploadBridge } from '@rocket.chat/apps-engine/server/bridges/UploadBridge';\n\nimport { determineFileType } from '../../../../ee/lib/misc/determineFileType';\nimport { FileUpload } from '../../../file-upload/server';\nimport { sendFileMessage } from '../../../file-upload/server/methods/sendFileMessage';\nimport { sendFileLivechatMessage } from '../../../livechat/server/methods/sendFileLivechatMessage';\n\nconst getUploadDetails = (details: IUploadDetails): Partial<IUploadDetails> => {\n\tif (details.visitorToken) {\n\t\tconst { userId, ...result } = details;\n\t\treturn result;\n\t}\n\treturn details;\n};\nexport class AppUploadBridge extends UploadBridge {\n\tconstructor(private readonly orch: IAppServerOrchestrator) {\n\t\tsuper();\n\t}\n\n\tprotected async getById(id: string, appId: string): Promise<IUpload> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the upload: \"${id}\"`);\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst promise: Promise<IUpload | undefined> = this.orch.getConverters()?.get('uploads').convertById(id);\n\t\treturn promise as Promise<IUpload>;\n\t}\n\n\tprotected async getBuffer(upload: IUpload, appId: string): Promise<Buffer> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the upload: \"${upload.id}\"`);\n\n\t\tconst rocketChatUpload = this.orch.getConverters()?.get('uploads').convertToRocketChat(upload);\n\n\t\tconst result = await FileUpload.getBuffer(rocketChatUpload);\n\n\t\tif (!(result instanceof Buffer)) {\n\t\t\tthrow new Error('Unknown error');\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected async createUpload(details: IUploadDetails, buffer: Buffer, appId: string): Promise<IUpload> {\n\t\tthis.orch.debugLog(`The App ${appId} is creating an upload \"${details.name}\"`);\n\n\t\tif (!details.userId && !details.visitorToken) {\n\t\t\tthrow new Error('Missing user to perform the upload operation');\n\t\t}\n\n\t\tconst fileStore = FileUpload.getStore('Uploads');\n\n\t\tdetails.type = determineFileType(buffer, details.name);\n\n\t\tconst uploadedFile = await fileStore.insert(getUploadDetails(details), buffer);\n\t\tthis.orch.debugLog(`The App ${appId} has created an upload`, uploadedFile);\n\t\tif (details.visitorToken) {\n\t\t\tawait sendFileLivechatMessage({ roomId: details.rid, visitorToken: details.visitorToken, file: uploadedFile });\n\t\t} else {\n\t\t\tawait sendFileMessage(details.userId, { roomId: details.rid, file: uploadedFile });\n\t\t}\n\t\treturn this.orch.getConverters()?.get('uploads').convertToApp(uploadedFile);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectWithoutProperties;\n    module.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n      default(v) {\n        _objectWithoutProperties = v;\n      }\n    }, 0);\n    const _excluded = [\"userId\"];\n    module.export({\n      AppUploadBridge: () => AppUploadBridge\n    });\n    let UploadBridge;\n    module.link(\"@rocket.chat/apps-engine/server/bridges/UploadBridge\", {\n      UploadBridge(v) {\n        UploadBridge = v;\n      }\n    }, 0);\n    let determineFileType;\n    module.link(\"../../../../ee/lib/misc/determineFileType\", {\n      determineFileType(v) {\n        determineFileType = v;\n      }\n    }, 1);\n    let FileUpload;\n    module.link(\"../../../file-upload/server\", {\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 2);\n    let sendFileMessage;\n    module.link(\"../../../file-upload/server/methods/sendFileMessage\", {\n      sendFileMessage(v) {\n        sendFileMessage = v;\n      }\n    }, 3);\n    let sendFileLivechatMessage;\n    module.link(\"../../../livechat/server/methods/sendFileLivechatMessage\", {\n      sendFileLivechatMessage(v) {\n        sendFileLivechatMessage = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const getUploadDetails = details => {\n      if (details.visitorToken) {\n        const {\n            userId\n          } = details,\n          result = _objectWithoutProperties(details, _excluded);\n        return result;\n      }\n      return details;\n    };\n    class AppUploadBridge extends UploadBridge {\n      constructor(orch) {\n        super();\n        this.orch = void 0;\n        this.orch = orch;\n      }\n      async getById(id, appId) {\n        var _this$orch$getConvert;\n        this.orch.debugLog(\"The App \".concat(appId, \" is getting the upload: \\\"\").concat(id, \"\\\"\"));\n        // #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n        const promise = (_this$orch$getConvert = this.orch.getConverters()) === null || _this$orch$getConvert === void 0 ? void 0 : _this$orch$getConvert.get('uploads').convertById(id);\n        return promise;\n      }\n      async getBuffer(upload, appId) {\n        var _this$orch$getConvert2;\n        this.orch.debugLog(\"The App \".concat(appId, \" is getting the upload: \\\"\").concat(upload.id, \"\\\"\"));\n        const rocketChatUpload = (_this$orch$getConvert2 = this.orch.getConverters()) === null || _this$orch$getConvert2 === void 0 ? void 0 : _this$orch$getConvert2.get('uploads').convertToRocketChat(upload);\n        const result = await FileUpload.getBuffer(rocketChatUpload);\n        if (!(result instanceof Buffer)) {\n          throw new Error('Unknown error');\n        }\n        return result;\n      }\n      async createUpload(details, buffer, appId) {\n        var _this$orch$getConvert3;\n        this.orch.debugLog(\"The App \".concat(appId, \" is creating an upload \\\"\").concat(details.name, \"\\\"\"));\n        if (!details.userId && !details.visitorToken) {\n          throw new Error('Missing user to perform the upload operation');\n        }\n        const fileStore = FileUpload.getStore('Uploads');\n        details.type = determineFileType(buffer, details.name);\n        const uploadedFile = await fileStore.insert(getUploadDetails(details), buffer);\n        this.orch.debugLog(\"The App \".concat(appId, \" has created an upload\"), uploadedFile);\n        if (details.visitorToken) {\n          await sendFileLivechatMessage({\n            roomId: details.rid,\n            visitorToken: details.visitorToken,\n            file: uploadedFile\n          });\n        } else {\n          await sendFileMessage(details.userId, {\n            roomId: details.rid,\n            file: uploadedFile\n          });\n        }\n        return (_this$orch$getConvert3 = this.orch.getConverters()) === null || _this$orch$getConvert3 === void 0 ? void 0 : _this$orch$getConvert3.get('uploads').convertToApp(uploadedFile);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectWithoutProperties","module","link","default","v","_excluded","export","AppUploadBridge","UploadBridge","determineFileType","FileUpload","sendFileMessage","sendFileLivechatMessage","__reifyWaitForDeps__","getUploadDetails","details","visitorToken","userId","result","constructor","orch","getById","id","appId","_this$orch$getConvert","debugLog","concat","promise","getConverters","get","convertById","getBuffer","upload","_this$orch$getConvert2","rocketChatUpload","convertToRocketChat","Buffer","Error","createUpload","buffer","_this$orch$getConvert3","name","fileStore","getStore","type","uploadedFile","insert","roomId","rid","file","convertToApp","__reify_async_result__","_reifyError","self","async"],"sources":["app/apps/server/bridges/uploads.ts"],"sourcesContent":["import type { IAppServerOrchestrator } from '@rocket.chat/apps';\nimport type { IUpload } from '@rocket.chat/apps-engine/definition/uploads';\nimport type { IUploadDetails } from '@rocket.chat/apps-engine/definition/uploads/IUploadDetails';\nimport { UploadBridge } from '@rocket.chat/apps-engine/server/bridges/UploadBridge';\n\nimport { determineFileType } from '../../../../ee/lib/misc/determineFileType';\nimport { FileUpload } from '../../../file-upload/server';\nimport { sendFileMessage } from '../../../file-upload/server/methods/sendFileMessage';\nimport { sendFileLivechatMessage } from '../../../livechat/server/methods/sendFileLivechatMessage';\n\nconst getUploadDetails = (details: IUploadDetails): Partial<IUploadDetails> => {\n\tif (details.visitorToken) {\n\t\tconst { userId, ...result } = details;\n\t\treturn result;\n\t}\n\treturn details;\n};\nexport class AppUploadBridge extends UploadBridge {\n\tconstructor(private readonly orch: IAppServerOrchestrator) {\n\t\tsuper();\n\t}\n\n\tprotected async getById(id: string, appId: string): Promise<IUpload> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the upload: \"${id}\"`);\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst promise: Promise<IUpload | undefined> = this.orch.getConverters()?.get('uploads').convertById(id);\n\t\treturn promise as Promise<IUpload>;\n\t}\n\n\tprotected async getBuffer(upload: IUpload, appId: string): Promise<Buffer> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the upload: \"${upload.id}\"`);\n\n\t\tconst rocketChatUpload = this.orch.getConverters()?.get('uploads').convertToRocketChat(upload);\n\n\t\tconst result = await FileUpload.getBuffer(rocketChatUpload);\n\n\t\tif (!(result instanceof Buffer)) {\n\t\t\tthrow new Error('Unknown error');\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprotected async createUpload(details: IUploadDetails, buffer: Buffer, appId: string): Promise<IUpload> {\n\t\tthis.orch.debugLog(`The App ${appId} is creating an upload \"${details.name}\"`);\n\n\t\tif (!details.userId && !details.visitorToken) {\n\t\t\tthrow new Error('Missing user to perform the upload operation');\n\t\t}\n\n\t\tconst fileStore = FileUpload.getStore('Uploads');\n\n\t\tdetails.type = determineFileType(buffer, details.name);\n\n\t\tconst uploadedFile = await fileStore.insert(getUploadDetails(details), buffer);\n\t\tthis.orch.debugLog(`The App ${appId} has created an upload`, uploadedFile);\n\t\tif (details.visitorToken) {\n\t\t\tawait sendFileLivechatMessage({ roomId: details.rid, visitorToken: details.visitorToken, file: uploadedFile });\n\t\t} else {\n\t\t\tawait sendFileMessage(details.userId, { roomId: details.rid, file: uploadedFile });\n\t\t}\n\t\treturn this.orch.getConverters()?.get('uploads').convertToApp(uploadedFile);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"52af1ca490f46c59e5e2ec2b6483dfce4ca90471"}
