{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/insertMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/insertMessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/insertMessage.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/insertMessage.ts","sourceRoot":"","sources":["app/lib/server/functions/insertMessage.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAEtD,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAC1D,OAAO,EAAE,eAAe,EAAE,oBAAoB,EAAE,MAAM,eAAe,CAAC;AAEtE,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,WACjC,IAAqC,EACrC,OAAiB,EACjB,GAAiB,EACjB,MAAM,GAAG,KAAK;IAEd,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;QAC/B,OAAO,KAAK,CAAC;IACd,CAAC;IAED,MAAM,eAAe,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;IACnD,oBAAoB,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACzC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAE5B,IAAI,OAAO,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QAC3B,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,GAAG,OAAO,CAAC;QACjC,MAAM,eAAe,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACxD,IAAI,eAAe,EAAE,CAAC;YACrB,MAAM,QAAQ,CAAC,SAAS,CACvB;gBACC,GAAG;gBACH,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG;aACtB,EACD,EAAE,IAAI,EAAE,IAAI,EAAE,CACd,CAAC;QACH,CAAC;aAAM,CAAC;YACP,MAAM,QAAQ,CAAC,SAAS,CAAC;gBACxB,GAAG;gBACH,GAAG,IAAI;aACP,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC;QACD,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;SAAM,CAAC;QACP,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC;QAChC,MAAM,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Messages, Rooms } from '@rocket.chat/models';\n\nimport { parseUrlsInMessage } from './parseUrlsInMessage';\nimport { validateMessage, prepareMessageObject } from './sendMessage';\n\nexport const insertMessage = async function (\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tmessage: IMessage,\n\trid: IRoom['_id'],\n\tupsert = false,\n): Promise<IMessage | boolean> {\n\tif (!user || !message || !rid) {\n\t\treturn false;\n\t}\n\n\tawait validateMessage(message, { _id: rid }, user);\n\tprepareMessageObject(message, rid, user);\n\tparseUrlsInMessage(message);\n\n\tif (message._id && upsert) {\n\t\tconst { _id, ...rest } = message;\n\t\tconst existingMessage = await Messages.findOneById(_id);\n\t\tif (existingMessage) {\n\t\t\tawait Messages.updateOne(\n\t\t\t\t{\n\t\t\t\t\t_id,\n\t\t\t\t\t'u._id': message.u._id,\n\t\t\t\t},\n\t\t\t\t{ $set: rest },\n\t\t\t);\n\t\t} else {\n\t\t\tawait Messages.insertOne({\n\t\t\t\t_id,\n\t\t\t\t...rest,\n\t\t\t});\n\t\t\tawait Rooms.incMsgCountById(rid, 1);\n\t\t}\n\t\tmessage._id = _id;\n\t} else {\n\t\tconst result = await Messages.insertOne(message);\n\t\tmessage._id = result.insertedId;\n\t\tawait Rooms.incMsgCountById(rid, 1);\n\t}\n\n\treturn message;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/insertMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/insertMessage.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/insertMessage.ts","sourceRoot":"","sources":["app/lib/server/functions/insertMessage.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAEtD,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAC1D,OAAO,EAAE,eAAe,EAAE,oBAAoB,EAAE,MAAM,eAAe,CAAC;AAEtE,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,WACjC,IAAqC,EACrC,OAAiB,EACjB,GAAiB,EACjB,MAAM,GAAG,KAAK;IAEd,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;QAC/B,OAAO,KAAK,CAAC;IACd,CAAC;IAED,MAAM,eAAe,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;IACnD,oBAAoB,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACzC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAE5B,IAAI,OAAO,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;QAC3B,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,GAAG,OAAO,CAAC;QACjC,MAAM,eAAe,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACxD,IAAI,eAAe,EAAE,CAAC;YACrB,MAAM,QAAQ,CAAC,SAAS,CACvB;gBACC,GAAG;gBACH,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG;aACtB,EACD,EAAE,IAAI,EAAE,IAAI,EAAE,CACd,CAAC;QACH,CAAC;aAAM,CAAC;YACP,MAAM,QAAQ,CAAC,SAAS,CAAC;gBACxB,GAAG;gBACH,GAAG,IAAI;aACP,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC;QACD,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;SAAM,CAAC;QACP,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC;QAChC,MAAM,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Messages, Rooms } from '@rocket.chat/models';\n\nimport { parseUrlsInMessage } from './parseUrlsInMessage';\nimport { validateMessage, prepareMessageObject } from './sendMessage';\n\nexport const insertMessage = async function (\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tmessage: IMessage,\n\trid: IRoom['_id'],\n\tupsert = false,\n): Promise<IMessage | boolean> {\n\tif (!user || !message || !rid) {\n\t\treturn false;\n\t}\n\n\tawait validateMessage(message, { _id: rid }, user);\n\tprepareMessageObject(message, rid, user);\n\tparseUrlsInMessage(message);\n\n\tif (message._id && upsert) {\n\t\tconst { _id, ...rest } = message;\n\t\tconst existingMessage = await Messages.findOneById(_id);\n\t\tif (existingMessage) {\n\t\t\tawait Messages.updateOne(\n\t\t\t\t{\n\t\t\t\t\t_id,\n\t\t\t\t\t'u._id': message.u._id,\n\t\t\t\t},\n\t\t\t\t{ $set: rest },\n\t\t\t);\n\t\t} else {\n\t\t\tawait Messages.insertOne({\n\t\t\t\t_id,\n\t\t\t\t...rest,\n\t\t\t});\n\t\t\tawait Rooms.incMsgCountById(rid, 1);\n\t\t}\n\t\tmessage._id = _id;\n\t} else {\n\t\tconst result = await Messages.insertOne(message);\n\t\tmessage._id = result.insertedId;\n\t\tawait Rooms.incMsgCountById(rid, 1);\n\t}\n\n\treturn message;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _objectWithoutProperties;\n    module.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n      default(v) {\n        _objectWithoutProperties = v;\n      }\n    }, 1);\n    const _excluded = [\"_id\"];\n    module.export({\n      insertMessage: () => insertMessage\n    });\n    let Messages, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 0);\n    let parseUrlsInMessage;\n    module.link(\"./parseUrlsInMessage\", {\n      parseUrlsInMessage(v) {\n        parseUrlsInMessage = v;\n      }\n    }, 1);\n    let validateMessage, prepareMessageObject;\n    module.link(\"./sendMessage\", {\n      validateMessage(v) {\n        validateMessage = v;\n      },\n      prepareMessageObject(v) {\n        prepareMessageObject = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const insertMessage = async function (user, message, rid) {\n      let upsert = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (!user || !message || !rid) {\n        return false;\n      }\n      await validateMessage(message, {\n        _id: rid\n      }, user);\n      prepareMessageObject(message, rid, user);\n      parseUrlsInMessage(message);\n      if (message._id && upsert) {\n        const {\n            _id\n          } = message,\n          rest = _objectWithoutProperties(message, _excluded);\n        const existingMessage = await Messages.findOneById(_id);\n        if (existingMessage) {\n          await Messages.updateOne({\n            _id,\n            'u._id': message.u._id\n          }, {\n            $set: rest\n          });\n        } else {\n          await Messages.insertOne(_objectSpread({\n            _id\n          }, rest));\n          await Rooms.incMsgCountById(rid, 1);\n        }\n        message._id = _id;\n      } else {\n        const result = await Messages.insertOne(message);\n        message._id = result.insertedId;\n        await Rooms.incMsgCountById(rid, 1);\n      }\n      return message;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","_excluded","export","insertMessage","Messages","Rooms","parseUrlsInMessage","validateMessage","prepareMessageObject","__reifyWaitForDeps__","user","message","rid","upsert","arguments","length","undefined","_id","rest","existingMessage","findOneById","updateOne","u","$set","insertOne","incMsgCountById","result","insertedId","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/insertMessage.ts"],"sourcesContent":["import type { IMessage, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Messages, Rooms } from '@rocket.chat/models';\n\nimport { parseUrlsInMessage } from './parseUrlsInMessage';\nimport { validateMessage, prepareMessageObject } from './sendMessage';\n\nexport const insertMessage = async function (\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tmessage: IMessage,\n\trid: IRoom['_id'],\n\tupsert = false,\n): Promise<IMessage | boolean> {\n\tif (!user || !message || !rid) {\n\t\treturn false;\n\t}\n\n\tawait validateMessage(message, { _id: rid }, user);\n\tprepareMessageObject(message, rid, user);\n\tparseUrlsInMessage(message);\n\n\tif (message._id && upsert) {\n\t\tconst { _id, ...rest } = message;\n\t\tconst existingMessage = await Messages.findOneById(_id);\n\t\tif (existingMessage) {\n\t\t\tawait Messages.updateOne(\n\t\t\t\t{\n\t\t\t\t\t_id,\n\t\t\t\t\t'u._id': message.u._id,\n\t\t\t\t},\n\t\t\t\t{ $set: rest },\n\t\t\t);\n\t\t} else {\n\t\t\tawait Messages.insertOne({\n\t\t\t\t_id,\n\t\t\t\t...rest,\n\t\t\t});\n\t\t\tawait Rooms.incMsgCountById(rid, 1);\n\t\t}\n\t\tmessage._id = _id;\n\t} else {\n\t\tconst result = await Messages.insertOne(message);\n\t\tmessage._id = result.insertedId;\n\t\tawait Rooms.incMsgCountById(rid, 1);\n\t}\n\n\treturn message;\n};\n"],"mappings":";;;IACA,IAAAA,aAAiB;IAAAC,MAAO,CAAAC,IAAE,uCAA4B;MAAAC,QAAAC,CAAA;QAAAJ,aAAA,GAAAI,CAAA;MAAA;IAAA;IAAA,IAAAC,wBAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAC,QAAAC,CAAA;QAAAC,wBAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,MAAAE,SAAA;IAAtDL,MAAA,CAAOM,MAAE;MAAAC,aAAiB,EAAAA,CAAA,KAAMA;IAAA;IAAA,IAAqBC,QAAC,EAAAC,KAAA;IAAAT,MAAA,CAAAC,IAAA;MAAAO,SAAAL,CAAA;QAAAK,QAAA,GAAAL,CAAA;MAAA;MAAAM,MAAAN,CAAA;QAAAM,KAAA,GAAAN,CAAA;MAAA;IAAA;IAAA,IAAAO,kBAAA;IAAAV,MAAA,CAAAC,IAAA;MAAAS,mBAAAP,CAAA;QAAAO,kBAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,eAAA,EAAAC,oBAAA;IAAAZ,MAAA,CAAAC,IAAA;MAAAU,gBAAAR,CAAA;QAAAQ,eAAA,GAAAR,CAAA;MAAA;MAAAS,qBAAAT,CAAA;QAAAS,oBAAA,GAAAT,CAAA;MAAA;IAAA;IAAA,IAAAU,oBAAA,WAAAA,oBAAA;IAK/C,MAAMN,aAAa,GAAG,eAAAA,CAC5BO,IAAqC,EACrCC,OAAiB,EACjBC,GAAiB,EACH;MAAA,IAAdC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;MAEd,IAAI,CAACJ,IAAI,IAAI,CAACC,OAAO,IAAI,CAACC,GAAG,EAAE;QAC9B,OAAO,KAAK;MACb;MAEA,MAAML,eAAe,CAACI,OAAO,EAAE;QAAEM,GAAG,EAAEL;MAAG,CAAE,EAAEF,IAAI,CAAC;MAClDF,oBAAoB,CAACG,OAAO,EAAEC,GAAG,EAAEF,IAAI,CAAC;MACxCJ,kBAAkB,CAACK,OAAO,CAAC;MAE3B,IAAIA,OAAO,CAACM,GAAG,IAAIJ,MAAM,EAAE;QAC1B,MAAM;YAAEI;UAAY,CAAE,GAAGN,OAAO;UAAhBO,IAAI,GAAAlB,wBAAA,CAAKW,OAAO,EAAAV,SAAA;QAChC,MAAMkB,eAAe,GAAG,MAAMf,QAAQ,CAACgB,WAAW,CAACH,GAAG,CAAC;QACvD,IAAIE,eAAe,EAAE;UACpB,MAAMf,QAAQ,CAACiB,SAAS,CACvB;YACCJ,GAAG;YACH,OAAO,EAAEN,OAAO,CAACW,CAAC,CAACL;WACnB,EACD;YAAEM,IAAI,EAAEL;UAAI,CAAE,CACd;QACF,CAAC,MAAM;UACN,MAAMd,QAAQ,CAACoB,SAAS,CAAA7B,aAAA;YACvBsB;UAAG,GACAC,IAAI,CACP,CAAC;UACF,MAAMb,KAAK,CAACoB,eAAe,CAACb,GAAG,EAAE,CAAC,CAAC;QACpC;QACAD,OAAO,CAACM,GAAG,GAAGA,GAAG;MAClB,CAAC,MAAM;QACN,MAAMS,MAAM,GAAG,MAAMtB,QAAQ,CAACoB,SAAS,CAACb,OAAO,CAAC;QAChDA,OAAO,CAACM,GAAG,GAAGS,MAAM,CAACC,UAAU;QAC/B,MAAMtB,KAAK,CAACoB,eAAe,CAACb,GAAG,EAAE,CAAC,CAAC;MACpC;MAEA,OAAOD,OAAO;IACf,CAAC;IAACiB,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b2215ca4d6898b0e36ddb02e317cfcb17c59d207"}
