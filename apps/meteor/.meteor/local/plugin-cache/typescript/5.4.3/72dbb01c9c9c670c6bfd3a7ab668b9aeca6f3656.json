{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/well-known.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/infrastructure/rocket-chat/well-known.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/well-known.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/rocket-chat/well-known.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/rocket-chat/well-known.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,UAAU,CAAC;AAE/B,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAE9D,KAAK,UAAU,sBAAsB,CAAC,CAAkB,EAAE,GAAmB;IAC5E,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAU,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAU,oCAAoC,CAAC,EAAE,CAAC;QACzH,OAAO,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACjC,CAAC;IAED,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAS,kCAAkC,CAAC,CAAC;IAC/E,MAAM,EAAE,QAAQ,EAAE,IAAI,GAAG,KAAK,EAAE,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,gIAAgI;IAE3L,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;IAElD,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,GAAG,QAAQ,IAAI,IAAI,IAAI,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IAE1E,GAAG,CAAC,GAAG,EAAE,CAAC;AACX,CAAC;AAED,KAAK,UAAU,sBAAsB,CAAC,CAAkB,EAAE,GAAmB;IAC5E,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAU,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAU,oCAAoC,CAAC,EAAE,CAAC;QACzH,OAAO,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACjC,CAAC;IAED,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAS,kCAAkC,CAAC,CAAC;IAC/E,MAAM,EAAE,QAAQ,GAAG,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,CAAC;IAEjE,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;IAElD,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,EAAE,QAAQ,EAAE,GAAG,QAAQ,KAAK,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAExF,GAAG,CAAC,GAAG,EAAE,CAAC;AACX,CAAC;AAED,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,4BAA4B,EAAE,sBAAsB,CAAC,CAAC;AACjF,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,4BAA4B,EAAE,sBAAsB,CAAC,CAAC","sourcesContent":["import type { ServerResponse, IncomingMessage } from 'node:http';\nimport { URL } from 'node:url';\n\nimport { WebApp } from 'meteor/webapp';\n\nimport { settings } from '../../../../../app/settings/server';\n\nasync function returnMatrixServerJSON(_: IncomingMessage, res: ServerResponse) {\n\tif (!settings.get<boolean>('Federation_Matrix_enabled') || !settings.get<boolean>('Federation_Matrix_serve_well_known')) {\n\t\treturn res.writeHead(404).end();\n\t}\n\n\tconst homeserverUrl = settings.get<string>('Federation_Matrix_homeserver_url');\n\tconst { hostname, port = '443' } = new URL(homeserverUrl); // a case where port isn't specified would be if it's 80 or 443, if 80, federation isn't going to work, so we simply assume 443.\n\n\tres.setHeader('content-type', 'application/json');\n\n\tres.write(JSON.stringify({ 'm.server': `${hostname}:${port || '443'}` }));\n\n\tres.end();\n}\n\nasync function returnMatrixClientJSON(_: IncomingMessage, res: ServerResponse) {\n\tif (!settings.get<boolean>('Federation_Matrix_enabled') || !settings.get<boolean>('Federation_Matrix_serve_well_known')) {\n\t\treturn res.writeHead(404).end();\n\t}\n\n\tconst homeserverUrl = settings.get<string>('Federation_Matrix_homeserver_url');\n\tconst { protocol = 'https:', hostname } = new URL(homeserverUrl);\n\n\tres.setHeader('content-type', 'application/json');\n\n\tres.write(JSON.stringify({ 'm.homeserver': { base_url: `${protocol}//${hostname}` } }));\n\n\tres.end();\n}\n\nWebApp.connectHandlers.use('/.well-known/matrix/server', returnMatrixServerJSON);\nWebApp.connectHandlers.use('/.well-known/matrix/client', returnMatrixClientJSON);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/well-known.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/infrastructure/rocket-chat/well-known.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/rocket-chat/well-known.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/rocket-chat/well-known.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,UAAU,CAAC;AAE/B,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAE9D,KAAK,UAAU,sBAAsB,CAAC,CAAkB,EAAE,GAAmB;IAC5E,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAU,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAU,oCAAoC,CAAC,EAAE,CAAC;QACzH,OAAO,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACjC,CAAC;IAED,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAS,kCAAkC,CAAC,CAAC;IAC/E,MAAM,EAAE,QAAQ,EAAE,IAAI,GAAG,KAAK,EAAE,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,gIAAgI;IAE3L,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;IAElD,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,GAAG,QAAQ,IAAI,IAAI,IAAI,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IAE1E,GAAG,CAAC,GAAG,EAAE,CAAC;AACX,CAAC;AAED,KAAK,UAAU,sBAAsB,CAAC,CAAkB,EAAE,GAAmB;IAC5E,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAU,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAU,oCAAoC,CAAC,EAAE,CAAC;QACzH,OAAO,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACjC,CAAC;IAED,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAS,kCAAkC,CAAC,CAAC;IAC/E,MAAM,EAAE,QAAQ,GAAG,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,CAAC;IAEjE,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;IAElD,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,EAAE,QAAQ,EAAE,GAAG,QAAQ,KAAK,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAExF,GAAG,CAAC,GAAG,EAAE,CAAC;AACX,CAAC;AAED,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,4BAA4B,EAAE,sBAAsB,CAAC,CAAC;AACjF,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,4BAA4B,EAAE,sBAAsB,CAAC,CAAC","sourcesContent":["import type { ServerResponse, IncomingMessage } from 'node:http';\nimport { URL } from 'node:url';\n\nimport { WebApp } from 'meteor/webapp';\n\nimport { settings } from '../../../../../app/settings/server';\n\nasync function returnMatrixServerJSON(_: IncomingMessage, res: ServerResponse) {\n\tif (!settings.get<boolean>('Federation_Matrix_enabled') || !settings.get<boolean>('Federation_Matrix_serve_well_known')) {\n\t\treturn res.writeHead(404).end();\n\t}\n\n\tconst homeserverUrl = settings.get<string>('Federation_Matrix_homeserver_url');\n\tconst { hostname, port = '443' } = new URL(homeserverUrl); // a case where port isn't specified would be if it's 80 or 443, if 80, federation isn't going to work, so we simply assume 443.\n\n\tres.setHeader('content-type', 'application/json');\n\n\tres.write(JSON.stringify({ 'm.server': `${hostname}:${port || '443'}` }));\n\n\tres.end();\n}\n\nasync function returnMatrixClientJSON(_: IncomingMessage, res: ServerResponse) {\n\tif (!settings.get<boolean>('Federation_Matrix_enabled') || !settings.get<boolean>('Federation_Matrix_serve_well_known')) {\n\t\treturn res.writeHead(404).end();\n\t}\n\n\tconst homeserverUrl = settings.get<string>('Federation_Matrix_homeserver_url');\n\tconst { protocol = 'https:', hostname } = new URL(homeserverUrl);\n\n\tres.setHeader('content-type', 'application/json');\n\n\tres.write(JSON.stringify({ 'm.homeserver': { base_url: `${protocol}//${hostname}` } }));\n\n\tres.end();\n}\n\nWebApp.connectHandlers.use('/.well-known/matrix/server', returnMatrixServerJSON);\nWebApp.connectHandlers.use('/.well-known/matrix/client', returnMatrixClientJSON);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let URL;\n    module.link(\"node:url\", {\n      URL(v) {\n        URL = v;\n      }\n    }, 0);\n    let WebApp;\n    module.link(\"meteor/webapp\", {\n      WebApp(v) {\n        WebApp = v;\n      }\n    }, 1);\n    let settings;\n    module.link(\"../../../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function returnMatrixServerJSON(_, res) {\n      if (!settings.get('Federation_Matrix_enabled') || !settings.get('Federation_Matrix_serve_well_known')) {\n        return res.writeHead(404).end();\n      }\n      const homeserverUrl = settings.get('Federation_Matrix_homeserver_url');\n      const {\n        hostname,\n        port = '443'\n      } = new URL(homeserverUrl); // a case where port isn't specified would be if it's 80 or 443, if 80, federation isn't going to work, so we simply assume 443.\n      res.setHeader('content-type', 'application/json');\n      res.write(JSON.stringify({\n        'm.server': \"\".concat(hostname, \":\").concat(port || '443')\n      }));\n      res.end();\n    }\n    async function returnMatrixClientJSON(_, res) {\n      if (!settings.get('Federation_Matrix_enabled') || !settings.get('Federation_Matrix_serve_well_known')) {\n        return res.writeHead(404).end();\n      }\n      const homeserverUrl = settings.get('Federation_Matrix_homeserver_url');\n      const {\n        protocol = 'https:',\n        hostname\n      } = new URL(homeserverUrl);\n      res.setHeader('content-type', 'application/json');\n      res.write(JSON.stringify({\n        'm.homeserver': {\n          base_url: \"\".concat(protocol, \"//\").concat(hostname)\n        }\n      }));\n      res.end();\n    }\n    WebApp.connectHandlers.use('/.well-known/matrix/server', returnMatrixServerJSON);\n    WebApp.connectHandlers.use('/.well-known/matrix/client', returnMatrixClientJSON);\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["URL","module","link","v","WebApp","settings","__reifyWaitForDeps__","returnMatrixServerJSON","_","res","get","writeHead","end","homeserverUrl","hostname","port","setHeader","write","JSON","stringify","concat","returnMatrixClientJSON","protocol","base_url","connectHandlers","use","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/federation/infrastructure/rocket-chat/well-known.ts"],"sourcesContent":["import type { ServerResponse, IncomingMessage } from 'node:http';\nimport { URL } from 'node:url';\n\nimport { WebApp } from 'meteor/webapp';\n\nimport { settings } from '../../../../../app/settings/server';\n\nasync function returnMatrixServerJSON(_: IncomingMessage, res: ServerResponse) {\n\tif (!settings.get<boolean>('Federation_Matrix_enabled') || !settings.get<boolean>('Federation_Matrix_serve_well_known')) {\n\t\treturn res.writeHead(404).end();\n\t}\n\n\tconst homeserverUrl = settings.get<string>('Federation_Matrix_homeserver_url');\n\tconst { hostname, port = '443' } = new URL(homeserverUrl); // a case where port isn't specified would be if it's 80 or 443, if 80, federation isn't going to work, so we simply assume 443.\n\n\tres.setHeader('content-type', 'application/json');\n\n\tres.write(JSON.stringify({ 'm.server': `${hostname}:${port || '443'}` }));\n\n\tres.end();\n}\n\nasync function returnMatrixClientJSON(_: IncomingMessage, res: ServerResponse) {\n\tif (!settings.get<boolean>('Federation_Matrix_enabled') || !settings.get<boolean>('Federation_Matrix_serve_well_known')) {\n\t\treturn res.writeHead(404).end();\n\t}\n\n\tconst homeserverUrl = settings.get<string>('Federation_Matrix_homeserver_url');\n\tconst { protocol = 'https:', hostname } = new URL(homeserverUrl);\n\n\tres.setHeader('content-type', 'application/json');\n\n\tres.write(JSON.stringify({ 'm.homeserver': { base_url: `${protocol}//${hostname}` } }));\n\n\tres.end();\n}\n\nWebApp.connectHandlers.use('/.well-known/matrix/server', returnMatrixServerJSON);\nWebApp.connectHandlers.use('/.well-known/matrix/client', returnMatrixClientJSON);\n"],"mappings":";;;IACA,IAAAA,GAAO;IAAAC,MAAO,CAAAC,IAAA,CAAM,UAAU,EAAC;MAAAF,IAAAG,CAAA;QAAAH,GAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,MAAA;IAAAH,MAAA,CAAAC,IAAA;MAAAE,OAAAD,CAAA;QAAAC,MAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,QAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAG,SAAAF,CAAA;QAAAE,QAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,oBAAA,WAAAA,oBAAA;IAM/B,eAAeC,sBAAsBA,CAACC,CAAkB,EAAEC,GAAmB;MAC5E,IAAI,CAACJ,QAAQ,CAACK,GAAG,CAAU,2BAA2B,CAAC,IAAI,CAACL,QAAQ,CAACK,GAAG,CAAU,oCAAoC,CAAC,EAAE;QACxH,OAAOD,GAAG,CAACE,SAAS,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;MAChC;MAEA,MAAMC,aAAa,GAAGR,QAAQ,CAACK,GAAG,CAAS,kCAAkC,CAAC;MAC9E,MAAM;QAAEI,QAAQ;QAAEC,IAAI,GAAG;MAAK,CAAE,GAAG,IAAIf,GAAG,CAACa,aAAa,CAAC,CAAC,CAAC;MAE3DJ,GAAG,CAACO,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC;MAEjDP,GAAG,CAACQ,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC;QAAE,UAAU,KAAAC,MAAA,CAAKN,QAAQ,OAAAM,MAAA,CAAIL,IAAI,IAAI,KAAK;MAAE,CAAE,CAAC,CAAC;MAEzEN,GAAG,CAACG,GAAG,EAAE;IACV;IAEA,eAAeS,sBAAsBA,CAACb,CAAkB,EAAEC,GAAmB;MAC5E,IAAI,CAACJ,QAAQ,CAACK,GAAG,CAAU,2BAA2B,CAAC,IAAI,CAACL,QAAQ,CAACK,GAAG,CAAU,oCAAoC,CAAC,EAAE;QACxH,OAAOD,GAAG,CAACE,SAAS,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;MAChC;MAEA,MAAMC,aAAa,GAAGR,QAAQ,CAACK,GAAG,CAAS,kCAAkC,CAAC;MAC9E,MAAM;QAAEY,QAAQ,GAAG,QAAQ;QAAER;MAAQ,CAAE,GAAG,IAAId,GAAG,CAACa,aAAa,CAAC;MAEhEJ,GAAG,CAACO,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC;MAEjDP,GAAG,CAACQ,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC;QAAE,cAAc,EAAE;UAAEI,QAAQ,KAAAH,MAAA,CAAKE,QAAQ,QAAAF,MAAA,CAAKN,QAAQ;QAAE;MAAE,CAAE,CAAC,CAAC;MAEvFL,GAAG,CAACG,GAAG,EAAE;IACV;IAEAR,MAAM,CAACoB,eAAe,CAACC,GAAG,CAAC,4BAA4B,EAAElB,sBAAsB,CAAC;IAChFH,MAAM,CAACoB,eAAe,CAACC,GAAG,CAAC,4BAA4B,EAAEJ,sBAAsB,CAAC;IAACK,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"72dbb01c9c9c670c6bfd3a7ab668b9aeca6f3656"}
