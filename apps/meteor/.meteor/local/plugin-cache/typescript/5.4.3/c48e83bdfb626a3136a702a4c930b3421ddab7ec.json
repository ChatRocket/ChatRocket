{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/rooms/roomCoordinator.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/rooms/roomCoordinator.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/rooms/roomCoordinator.ts","inputSourceMap":{"version":3,"file":"server/lib/rooms/roomCoordinator.ts","sourceRoot":"","sources":["server/lib/rooms/roomCoordinator.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, RoomType, IUser, IMessage, ReadReceipt, ValueOf, AtLeast } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\n\nimport { settings } from '../../../app/settings/server';\nimport type { IRoomTypeConfig, IRoomTypeServerDirectives, RoomSettingsEnum, RoomMemberActions } from '../../../definition/IRoomTypeConfig';\nimport { getUserDisplayName } from '../../../lib/getUserDisplayName';\nimport { RoomCoordinator } from '../../../lib/rooms/coordinator';\n\nclass RoomCoordinatorServer extends RoomCoordinator {\n\tadd(roomConfig: IRoomTypeConfig, directives: Partial<IRoomTypeServerDirectives>): void {\n\t\tthis.addRoomType(roomConfig, {\n\t\t\tallowRoomSettingChange(_room: IRoom, _setting: ValueOf<typeof RoomSettingsEnum>) {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync allowMemberAction(_room: IRoom, _action: ValueOf<typeof RoomMemberActions>, _userId?: IUser['_id']): Promise<boolean> {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync roomName(_room: IRoom, _userId?: string): Promise<string> {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tisGroupChat(_room: IRoom): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync canBeDeleted(hasPermission: (permissionId: string, rid?: string) => Promise<boolean> | boolean, room: IRoom): Promise<boolean> {\n\t\t\t\tif (!hasPermission && typeof hasPermission !== 'function') {\n\t\t\t\t\tthrow new Error('You MUST provide the \"hasPermission\" to canBeDeleted function');\n\t\t\t\t}\n\t\t\t\treturn hasPermission(`delete-${room.t}`, room._id);\n\t\t\t},\n\t\t\tpreventRenaming(): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync getDiscussionType(): Promise<RoomType> {\n\t\t\t\treturn 'p';\n\t\t\t},\n\t\t\tasync canAccessUploadedFile(_params: { rc_uid: string; rc_rid: string; rc_token: string }): Promise<boolean> {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync getNotificationDetails(\n\t\t\t\troom: IRoom,\n\t\t\t\tsender: AtLeast<IUser, '_id' | 'name' | 'username'>,\n\t\t\t\tnotificationMessage: string,\n\t\t\t\tuserId: string,\n\t\t\t): Promise<{ title: string | undefined; text: string; name: string | undefined }> {\n\t\t\t\tconst title = `#${await this.roomName(room, userId)}`;\n\t\t\t\tconst useRealName = settings.get<boolean>('UI_Use_Real_Name');\n\t\t\t\tconst senderName = getUserDisplayName(sender.name, sender.username, useRealName);\n\n\t\t\t\tconst text = `${senderName}: ${notificationMessage}`;\n\n\t\t\t\treturn { title, text, name: room.name };\n\t\t\t},\n\t\t\tgetMsgSender(message: IMessage): Promise<IUser | null> {\n\t\t\t\treturn Users.findOneById(message.u._id);\n\t\t\t},\n\t\t\tincludeInRoomSearch(): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tgetReadReceiptsExtraData(_message: IMessage): Partial<ReadReceipt> {\n\t\t\t\treturn {};\n\t\t\t},\n\t\t\tincludeInDashboard(): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\t...directives,\n\t\t\tconfig: roomConfig,\n\t\t});\n\t}\n\n\tgetRoomDirectives(roomType: string): IRoomTypeServerDirectives {\n\t\tconst directives = this.roomTypes[roomType]?.directives;\n\n\t\tif (!directives) {\n\t\t\tthrow new Error(`Room type ${roomType} not found`);\n\t\t}\n\t\treturn directives as IRoomTypeServerDirectives;\n\t}\n\n\tgetTypesToShowOnDashboard(): Array<IRoomTypeConfig['identifier']> {\n\t\treturn Object.keys(this.roomTypes).filter((key) => (this.roomTypes[key].directives as IRoomTypeServerDirectives).includeInDashboard());\n\t}\n\n\tasync getRoomName(roomType: string, roomData: IRoom, userId?: string): Promise<string> {\n\t\treturn (await this.getRoomDirectives(roomType).roomName(roomData, userId)) ?? '';\n\t}\n\n\tsetRoomFind(roomType: string, roomFind: Required<Pick<IRoomTypeServerDirectives, 'roomFind'>>['roomFind']): void {\n\t\tconst directives = this.getRoomDirectives(roomType);\n\t\tif (!directives) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (directives.roomFind) {\n\t\t\tthrow new Error('Room find for the given type already exists');\n\t\t}\n\n\t\tdirectives.roomFind = roomFind;\n\t}\n\n\tgetRoomFind(roomType: string): Required<Pick<IRoomTypeServerDirectives, 'roomFind'>>['roomFind'] | undefined {\n\t\treturn this.getRoomDirectives(roomType).roomFind;\n\t}\n\n\tsearchableRoomTypes(): Array<string> {\n\t\treturn Object.entries(this.roomTypes)\n\t\t\t.filter(([_identifier, { directives }]) => (directives as IRoomTypeServerDirectives).includeInRoomSearch())\n\t\t\t.map(([identifier]) => identifier);\n\t}\n}\n\nexport const roomCoordinator = new RoomCoordinatorServer();\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/rooms/roomCoordinator.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/rooms/roomCoordinator.ts","inputSourceMap":{"version":3,"file":"server/lib/rooms/roomCoordinator.ts","sourceRoot":"","sources":["server/lib/rooms/roomCoordinator.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, RoomType, IUser, IMessage, ReadReceipt, ValueOf, AtLeast } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\n\nimport { settings } from '../../../app/settings/server';\nimport type { IRoomTypeConfig, IRoomTypeServerDirectives, RoomSettingsEnum, RoomMemberActions } from '../../../definition/IRoomTypeConfig';\nimport { getUserDisplayName } from '../../../lib/getUserDisplayName';\nimport { RoomCoordinator } from '../../../lib/rooms/coordinator';\n\nclass RoomCoordinatorServer extends RoomCoordinator {\n\tadd(roomConfig: IRoomTypeConfig, directives: Partial<IRoomTypeServerDirectives>): void {\n\t\tthis.addRoomType(roomConfig, {\n\t\t\tallowRoomSettingChange(_room: IRoom, _setting: ValueOf<typeof RoomSettingsEnum>) {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync allowMemberAction(_room: IRoom, _action: ValueOf<typeof RoomMemberActions>, _userId?: IUser['_id']): Promise<boolean> {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync roomName(_room: IRoom, _userId?: string): Promise<string> {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tisGroupChat(_room: IRoom): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync canBeDeleted(hasPermission: (permissionId: string, rid?: string) => Promise<boolean> | boolean, room: IRoom): Promise<boolean> {\n\t\t\t\tif (!hasPermission && typeof hasPermission !== 'function') {\n\t\t\t\t\tthrow new Error('You MUST provide the \"hasPermission\" to canBeDeleted function');\n\t\t\t\t}\n\t\t\t\treturn hasPermission(`delete-${room.t}`, room._id);\n\t\t\t},\n\t\t\tpreventRenaming(): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync getDiscussionType(): Promise<RoomType> {\n\t\t\t\treturn 'p';\n\t\t\t},\n\t\t\tasync canAccessUploadedFile(_params: { rc_uid: string; rc_rid: string; rc_token: string }): Promise<boolean> {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync getNotificationDetails(\n\t\t\t\troom: IRoom,\n\t\t\t\tsender: AtLeast<IUser, '_id' | 'name' | 'username'>,\n\t\t\t\tnotificationMessage: string,\n\t\t\t\tuserId: string,\n\t\t\t): Promise<{ title: string | undefined; text: string; name: string | undefined }> {\n\t\t\t\tconst title = `#${await this.roomName(room, userId)}`;\n\t\t\t\tconst useRealName = settings.get<boolean>('UI_Use_Real_Name');\n\t\t\t\tconst senderName = getUserDisplayName(sender.name, sender.username, useRealName);\n\n\t\t\t\tconst text = `${senderName}: ${notificationMessage}`;\n\n\t\t\t\treturn { title, text, name: room.name };\n\t\t\t},\n\t\t\tgetMsgSender(message: IMessage): Promise<IUser | null> {\n\t\t\t\treturn Users.findOneById(message.u._id);\n\t\t\t},\n\t\t\tincludeInRoomSearch(): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tgetReadReceiptsExtraData(_message: IMessage): Partial<ReadReceipt> {\n\t\t\t\treturn {};\n\t\t\t},\n\t\t\tincludeInDashboard(): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\t...directives,\n\t\t\tconfig: roomConfig,\n\t\t});\n\t}\n\n\tgetRoomDirectives(roomType: string): IRoomTypeServerDirectives {\n\t\tconst directives = this.roomTypes[roomType]?.directives;\n\n\t\tif (!directives) {\n\t\t\tthrow new Error(`Room type ${roomType} not found`);\n\t\t}\n\t\treturn directives as IRoomTypeServerDirectives;\n\t}\n\n\tgetTypesToShowOnDashboard(): Array<IRoomTypeConfig['identifier']> {\n\t\treturn Object.keys(this.roomTypes).filter((key) => (this.roomTypes[key].directives as IRoomTypeServerDirectives).includeInDashboard());\n\t}\n\n\tasync getRoomName(roomType: string, roomData: IRoom, userId?: string): Promise<string> {\n\t\treturn (await this.getRoomDirectives(roomType).roomName(roomData, userId)) ?? '';\n\t}\n\n\tsetRoomFind(roomType: string, roomFind: Required<Pick<IRoomTypeServerDirectives, 'roomFind'>>['roomFind']): void {\n\t\tconst directives = this.getRoomDirectives(roomType);\n\t\tif (!directives) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (directives.roomFind) {\n\t\t\tthrow new Error('Room find for the given type already exists');\n\t\t}\n\n\t\tdirectives.roomFind = roomFind;\n\t}\n\n\tgetRoomFind(roomType: string): Required<Pick<IRoomTypeServerDirectives, 'roomFind'>>['roomFind'] | undefined {\n\t\treturn this.getRoomDirectives(roomType).roomFind;\n\t}\n\n\tsearchableRoomTypes(): Array<string> {\n\t\treturn Object.entries(this.roomTypes)\n\t\t\t.filter(([_identifier, { directives }]) => (directives as IRoomTypeServerDirectives).includeInRoomSearch())\n\t\t\t.map(([identifier]) => identifier);\n\t}\n}\n\nexport const roomCoordinator = new RoomCoordinatorServer();\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      roomCoordinator: () => roomCoordinator\n    });\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 1);\n    let getUserDisplayName;\n    module.link(\"../../../lib/getUserDisplayName\", {\n      getUserDisplayName(v) {\n        getUserDisplayName = v;\n      }\n    }, 2);\n    let RoomCoordinator;\n    module.link(\"../../../lib/rooms/coordinator\", {\n      RoomCoordinator(v) {\n        RoomCoordinator = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class RoomCoordinatorServer extends RoomCoordinator {\n      add(roomConfig, directives) {\n        this.addRoomType(roomConfig, _objectSpread(_objectSpread({\n          allowRoomSettingChange(_room, _setting) {\n            return true;\n          },\n          async allowMemberAction(_room, _action, _userId) {\n            return false;\n          },\n          async roomName(_room, _userId) {\n            return '';\n          },\n          isGroupChat(_room) {\n            return false;\n          },\n          async canBeDeleted(hasPermission, room) {\n            if (!hasPermission && typeof hasPermission !== 'function') {\n              throw new Error('You MUST provide the \"hasPermission\" to canBeDeleted function');\n            }\n            return hasPermission(\"delete-\".concat(room.t), room._id);\n          },\n          preventRenaming() {\n            return false;\n          },\n          async getDiscussionType() {\n            return 'p';\n          },\n          async canAccessUploadedFile(_params) {\n            return false;\n          },\n          async getNotificationDetails(room, sender, notificationMessage, userId) {\n            const title = \"#\".concat(await this.roomName(room, userId));\n            const useRealName = settings.get('UI_Use_Real_Name');\n            const senderName = getUserDisplayName(sender.name, sender.username, useRealName);\n            const text = \"\".concat(senderName, \": \").concat(notificationMessage);\n            return {\n              title,\n              text,\n              name: room.name\n            };\n          },\n          getMsgSender(message) {\n            return Users.findOneById(message.u._id);\n          },\n          includeInRoomSearch() {\n            return false;\n          },\n          getReadReceiptsExtraData(_message) {\n            return {};\n          },\n          includeInDashboard() {\n            return false;\n          }\n        }, directives), {}, {\n          config: roomConfig\n        }));\n      }\n      getRoomDirectives(roomType) {\n        var _this$roomTypes$roomT;\n        const directives = (_this$roomTypes$roomT = this.roomTypes[roomType]) === null || _this$roomTypes$roomT === void 0 ? void 0 : _this$roomTypes$roomT.directives;\n        if (!directives) {\n          throw new Error(\"Room type \".concat(roomType, \" not found\"));\n        }\n        return directives;\n      }\n      getTypesToShowOnDashboard() {\n        return Object.keys(this.roomTypes).filter(key => this.roomTypes[key].directives.includeInDashboard());\n      }\n      async getRoomName(roomType, roomData, userId) {\n        var _await$this$getRoomDi;\n        return (_await$this$getRoomDi = await this.getRoomDirectives(roomType).roomName(roomData, userId)) !== null && _await$this$getRoomDi !== void 0 ? _await$this$getRoomDi : '';\n      }\n      setRoomFind(roomType, roomFind) {\n        const directives = this.getRoomDirectives(roomType);\n        if (!directives) {\n          return;\n        }\n        if (directives.roomFind) {\n          throw new Error('Room find for the given type already exists');\n        }\n        directives.roomFind = roomFind;\n      }\n      getRoomFind(roomType) {\n        return this.getRoomDirectives(roomType).roomFind;\n      }\n      searchableRoomTypes() {\n        return Object.entries(this.roomTypes).filter(_ref => {\n          let [_identifier, {\n            directives\n          }] = _ref;\n          return directives.includeInRoomSearch();\n        }).map(_ref2 => {\n          let [identifier] = _ref2;\n          return identifier;\n        });\n      }\n    }\n    const roomCoordinator = new RoomCoordinatorServer();\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","roomCoordinator","Users","settings","getUserDisplayName","RoomCoordinator","__reifyWaitForDeps__","RoomCoordinatorServer","add","roomConfig","directives","addRoomType","allowRoomSettingChange","_room","_setting","allowMemberAction","_action","_userId","roomName","isGroupChat","canBeDeleted","hasPermission","room","Error","concat","t","_id","preventRenaming","getDiscussionType","canAccessUploadedFile","_params","getNotificationDetails","sender","notificationMessage","userId","title","useRealName","get","senderName","name","username","text","getMsgSender","message","findOneById","u","includeInRoomSearch","getReadReceiptsExtraData","_message","includeInDashboard","config","getRoomDirectives","roomType","_this$roomTypes$roomT","roomTypes","getTypesToShowOnDashboard","Object","keys","filter","key","getRoomName","roomData","_await$this$getRoomDi","setRoomFind","roomFind","getRoomFind","searchableRoomTypes","entries","_ref","_identifier","map","_ref2","identifier","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/rooms/roomCoordinator.ts"],"sourcesContent":["import type { IRoom, RoomType, IUser, IMessage, ReadReceipt, ValueOf, AtLeast } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\n\nimport { settings } from '../../../app/settings/server';\nimport type { IRoomTypeConfig, IRoomTypeServerDirectives, RoomSettingsEnum, RoomMemberActions } from '../../../definition/IRoomTypeConfig';\nimport { getUserDisplayName } from '../../../lib/getUserDisplayName';\nimport { RoomCoordinator } from '../../../lib/rooms/coordinator';\n\nclass RoomCoordinatorServer extends RoomCoordinator {\n\tadd(roomConfig: IRoomTypeConfig, directives: Partial<IRoomTypeServerDirectives>): void {\n\t\tthis.addRoomType(roomConfig, {\n\t\t\tallowRoomSettingChange(_room: IRoom, _setting: ValueOf<typeof RoomSettingsEnum>) {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasync allowMemberAction(_room: IRoom, _action: ValueOf<typeof RoomMemberActions>, _userId?: IUser['_id']): Promise<boolean> {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync roomName(_room: IRoom, _userId?: string): Promise<string> {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tisGroupChat(_room: IRoom): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync canBeDeleted(hasPermission: (permissionId: string, rid?: string) => Promise<boolean> | boolean, room: IRoom): Promise<boolean> {\n\t\t\t\tif (!hasPermission && typeof hasPermission !== 'function') {\n\t\t\t\t\tthrow new Error('You MUST provide the \"hasPermission\" to canBeDeleted function');\n\t\t\t\t}\n\t\t\t\treturn hasPermission(`delete-${room.t}`, room._id);\n\t\t\t},\n\t\t\tpreventRenaming(): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync getDiscussionType(): Promise<RoomType> {\n\t\t\t\treturn 'p';\n\t\t\t},\n\t\t\tasync canAccessUploadedFile(_params: { rc_uid: string; rc_rid: string; rc_token: string }): Promise<boolean> {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tasync getNotificationDetails(\n\t\t\t\troom: IRoom,\n\t\t\t\tsender: AtLeast<IUser, '_id' | 'name' | 'username'>,\n\t\t\t\tnotificationMessage: string,\n\t\t\t\tuserId: string,\n\t\t\t): Promise<{ title: string | undefined; text: string; name: string | undefined }> {\n\t\t\t\tconst title = `#${await this.roomName(room, userId)}`;\n\t\t\t\tconst useRealName = settings.get<boolean>('UI_Use_Real_Name');\n\t\t\t\tconst senderName = getUserDisplayName(sender.name, sender.username, useRealName);\n\n\t\t\t\tconst text = `${senderName}: ${notificationMessage}`;\n\n\t\t\t\treturn { title, text, name: room.name };\n\t\t\t},\n\t\t\tgetMsgSender(message: IMessage): Promise<IUser | null> {\n\t\t\t\treturn Users.findOneById(message.u._id);\n\t\t\t},\n\t\t\tincludeInRoomSearch(): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tgetReadReceiptsExtraData(_message: IMessage): Partial<ReadReceipt> {\n\t\t\t\treturn {};\n\t\t\t},\n\t\t\tincludeInDashboard(): boolean {\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\t...directives,\n\t\t\tconfig: roomConfig,\n\t\t});\n\t}\n\n\tgetRoomDirectives(roomType: string): IRoomTypeServerDirectives {\n\t\tconst directives = this.roomTypes[roomType]?.directives;\n\n\t\tif (!directives) {\n\t\t\tthrow new Error(`Room type ${roomType} not found`);\n\t\t}\n\t\treturn directives as IRoomTypeServerDirectives;\n\t}\n\n\tgetTypesToShowOnDashboard(): Array<IRoomTypeConfig['identifier']> {\n\t\treturn Object.keys(this.roomTypes).filter((key) => (this.roomTypes[key].directives as IRoomTypeServerDirectives).includeInDashboard());\n\t}\n\n\tasync getRoomName(roomType: string, roomData: IRoom, userId?: string): Promise<string> {\n\t\treturn (await this.getRoomDirectives(roomType).roomName(roomData, userId)) ?? '';\n\t}\n\n\tsetRoomFind(roomType: string, roomFind: Required<Pick<IRoomTypeServerDirectives, 'roomFind'>>['roomFind']): void {\n\t\tconst directives = this.getRoomDirectives(roomType);\n\t\tif (!directives) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (directives.roomFind) {\n\t\t\tthrow new Error('Room find for the given type already exists');\n\t\t}\n\n\t\tdirectives.roomFind = roomFind;\n\t}\n\n\tgetRoomFind(roomType: string): Required<Pick<IRoomTypeServerDirectives, 'roomFind'>>['roomFind'] | undefined {\n\t\treturn this.getRoomDirectives(roomType).roomFind;\n\t}\n\n\tsearchableRoomTypes(): Array<string> {\n\t\treturn Object.entries(this.roomTypes)\n\t\t\t.filter(([_identifier, { directives }]) => (directives as IRoomTypeServerDirectives).includeInRoomSearch())\n\t\t\t.map(([identifier]) => identifier);\n\t}\n}\n\nexport const roomCoordinator = new RoomCoordinatorServer();\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c48e83bdfb626a3136a702a4c930b3421ddab7ec"}
