{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/integrations/server/lib/validateOutgoingIntegration.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/integrations/server/lib/validateOutgoingIntegration.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/integrations/server/lib/validateOutgoingIntegration.ts","inputSourceMap":{"version":3,"file":"app/integrations/server/lib/validateOutgoingIntegration.ts","sourceRoot":"","sources":["app/integrations/server/lib/validateOutgoingIntegration.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser, INewOutgoingIntegration, IOutgoingIntegration, IUpdateOutgoingIntegration } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport { pick } from '@rocket.chat/tools';\nimport { Babel } from 'meteor/babel-compiler';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { isScriptEngineFrozen } from './validateScriptEngine';\nimport { parseCSV } from '../../../../lib/utils/parseCSV';\nimport { hasPermissionAsync, hasAllPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { outgoingEvents } from '../../lib/outgoingEvents';\n\nconst scopedChannels = ['all_public_channels', 'all_private_groups', 'all_direct_messages'];\nconst validChannelChars = ['@', '#'];\n\nfunction _verifyRequiredFields(integration: INewOutgoingIntegration | IUpdateOutgoingIntegration): void {\n\tif (\n\t\t!integration.event ||\n\t\t!Match.test(integration.event, String) ||\n\t\tintegration.event.trim() === '' ||\n\t\t!outgoingEvents[integration.event]\n\t) {\n\t\tthrow new Meteor.Error('error-invalid-event-type', 'Invalid event type', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tif (!integration.username || !Match.test(integration.username, String) || integration.username.trim() === '') {\n\t\tthrow new Meteor.Error('error-invalid-username', 'Invalid username', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tif (outgoingEvents[integration.event].use.targetRoom && !integration.targetRoom) {\n\t\tthrow new Meteor.Error('error-invalid-targetRoom', 'Invalid Target Room', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tif (!Match.test(integration.urls, [String])) {\n\t\tthrow new Meteor.Error('error-invalid-urls', 'Invalid URLs', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tintegration.urls = integration.urls.filter((url) => url && url.trim() !== '');\n\n\tif (integration.urls.length === 0) {\n\t\tthrow new Meteor.Error('error-invalid-urls', 'Invalid URLs', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n}\n\nasync function _verifyUserHasPermissionForChannels(userId: IUser['_id'], channels: string[]): Promise<void> {\n\tfor await (let channel of channels) {\n\t\tif (scopedChannels.includes(channel)) {\n\t\t\tif (channel === 'all_public_channels') {\n\t\t\t\t// No special permissions needed to add integration to public channels\n\t\t\t} else if (!(await hasPermissionAsync(userId, 'manage-outgoing-integrations'))) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\t\tfunction: 'validateOutgoing._verifyUserHasPermissionForChannels',\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tlet record;\n\t\t\tconst channelType = channel[0];\n\t\t\tchannel = channel.substr(1);\n\n\t\t\tswitch (channelType) {\n\t\t\t\tcase '#':\n\t\t\t\t\trecord = await Rooms.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { name: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '@':\n\t\t\t\t\trecord = await Users.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { username: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!record) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tfunction: 'validateOutgoing._verifyUserHasPermissionForChannels',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!(await hasAllPermissionAsync(userId, ['manage-outgoing-integrations', 'manage-own-outgoing-integrations'])) &&\n\t\t\t\t!(await Subscriptions.findOneByRoomIdAndUserId(record._id, userId, { projection: { _id: 1 } }))\n\t\t\t) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\t\tfunction: 'validateOutgoing._verifyUserHasPermissionForChannels',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction _verifyRetryInformation(integration: IOutgoingIntegration): void {\n\tif (!integration.retryFailedCalls) {\n\t\treturn;\n\t}\n\n\t// Don't allow negative retry counts\n\tintegration.retryCount =\n\t\tintegration.retryCount && parseInt(String(integration.retryCount)) > 0 ? parseInt(String(integration.retryCount)) : 4;\n\tintegration.retryDelay = !integration.retryDelay?.trim() ? 'powers-of-ten' : integration.retryDelay.toLowerCase();\n}\n\nexport const validateOutgoingIntegration = async function (\n\tintegration: INewOutgoingIntegration | IUpdateOutgoingIntegration,\n\tuserId: IUser['_id'],\n): Promise<IOutgoingIntegration> {\n\tif (integration.channel && Match.test(integration.channel, String) && integration.channel.trim() === '') {\n\t\tdelete integration.channel;\n\t}\n\n\t// Moved to it's own function to satisfy the complexity rule\n\t_verifyRequiredFields(integration);\n\n\tlet channels: string[] = [];\n\tif (outgoingEvents[integration.event].use.channel) {\n\t\tif (!Match.test(integration.channel, String)) {\n\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\tfunction: 'validateOutgoing',\n\t\t\t});\n\t\t} else {\n\t\t\tchannels = parseCSV(integration.channel);\n\n\t\t\tfor (const channel of channels) {\n\t\t\t\tif (!validChannelChars.includes(channel[0]) && !scopedChannels.includes(channel.toLowerCase())) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n\t\t\t\t\t\tfunction: 'validateOutgoing',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (!(await hasPermissionAsync(userId, 'manage-outgoing-integrations'))) {\n\t\tthrow new Meteor.Error('error-invalid-permissions', 'Invalid permission for required Integration creation.', {\n\t\t\tfunction: 'validateOutgoing',\n\t\t});\n\t}\n\n\tconst user = await Users.findOne({ username: integration.username });\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user (did you delete the `rocket.cat` user?)', { function: 'validateOutgoing' });\n\t}\n\n\tconst integrationData: IOutgoingIntegration = {\n\t\t...integration,\n\t\tscriptEngine: integration.scriptEngine ?? 'isolated-vm',\n\t\ttype: 'webhook-outgoing',\n\t\tchannel: channels,\n\t\tuserId: user._id,\n\t\t_createdAt: new Date(),\n\t\t_createdBy: await Users.findOne(userId, { projection: { username: 1 } }),\n\t};\n\n\tif (outgoingEvents[integration.event].use.triggerWords && integration.triggerWords) {\n\t\tif (!Match.test(integration.triggerWords, [String])) {\n\t\t\tthrow new Meteor.Error('error-invalid-triggerWords', 'Invalid triggerWords', {\n\t\t\t\tfunction: 'validateOutgoing',\n\t\t\t});\n\t\t}\n\n\t\tintegrationData.triggerWords = integration.triggerWords.filter((word) => word && word.trim() !== '');\n\t} else {\n\t\tdelete integrationData.triggerWords;\n\t}\n\n\t// Only compile the script if it is enabled and using a sandbox that is not frozen\n\tif (\n\t\t!isScriptEngineFrozen(integrationData.scriptEngine) &&\n\t\tintegration.scriptEnabled === true &&\n\t\tintegration.script &&\n\t\tintegration.script.trim() !== ''\n\t) {\n\t\ttry {\n\t\t\tconst babelOptions = Object.assign(Babel.getDefaultOptions({ runtime: false }), {\n\t\t\t\tcompact: true,\n\t\t\t\tminified: true,\n\t\t\t\tcomments: false,\n\t\t\t});\n\n\t\t\tintegrationData.scriptCompiled = Babel.compile(integration.script, babelOptions).code;\n\t\t\tintegrationData.scriptError = undefined;\n\t\t} catch (e) {\n\t\t\tintegrationData.scriptCompiled = undefined;\n\t\t\tintegrationData.scriptError = e instanceof Error ? pick(e, 'name', 'message', 'stack') : undefined;\n\t\t}\n\t}\n\n\tif (typeof integration.runOnEdits !== 'undefined') {\n\t\t// Verify this value is only true/false\n\t\tintegrationData.runOnEdits = integration.runOnEdits === true;\n\t}\n\n\tawait _verifyUserHasPermissionForChannels(userId, channels);\n\t_verifyRetryInformation(integrationData);\n\n\treturn integrationData;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/integrations/server/lib/validateOutgoingIntegration.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/integrations/server/lib/validateOutgoingIntegration.ts","inputSourceMap":{"version":3,"file":"app/integrations/server/lib/validateOutgoingIntegration.ts","sourceRoot":"","sources":["app/integrations/server/lib/validateOutgoingIntegration.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser, INewOutgoingIntegration, IOutgoingIntegration, IUpdateOutgoingIntegration } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport { pick } from '@rocket.chat/tools';\nimport { Babel } from 'meteor/babel-compiler';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { isScriptEngineFrozen } from './validateScriptEngine';\nimport { parseCSV } from '../../../../lib/utils/parseCSV';\nimport { hasPermissionAsync, hasAllPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { outgoingEvents } from '../../lib/outgoingEvents';\n\nconst scopedChannels = ['all_public_channels', 'all_private_groups', 'all_direct_messages'];\nconst validChannelChars = ['@', '#'];\n\nfunction _verifyRequiredFields(integration: INewOutgoingIntegration | IUpdateOutgoingIntegration): void {\n\tif (\n\t\t!integration.event ||\n\t\t!Match.test(integration.event, String) ||\n\t\tintegration.event.trim() === '' ||\n\t\t!outgoingEvents[integration.event]\n\t) {\n\t\tthrow new Meteor.Error('error-invalid-event-type', 'Invalid event type', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tif (!integration.username || !Match.test(integration.username, String) || integration.username.trim() === '') {\n\t\tthrow new Meteor.Error('error-invalid-username', 'Invalid username', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tif (outgoingEvents[integration.event].use.targetRoom && !integration.targetRoom) {\n\t\tthrow new Meteor.Error('error-invalid-targetRoom', 'Invalid Target Room', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tif (!Match.test(integration.urls, [String])) {\n\t\tthrow new Meteor.Error('error-invalid-urls', 'Invalid URLs', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tintegration.urls = integration.urls.filter((url) => url && url.trim() !== '');\n\n\tif (integration.urls.length === 0) {\n\t\tthrow new Meteor.Error('error-invalid-urls', 'Invalid URLs', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n}\n\nasync function _verifyUserHasPermissionForChannels(userId: IUser['_id'], channels: string[]): Promise<void> {\n\tfor await (let channel of channels) {\n\t\tif (scopedChannels.includes(channel)) {\n\t\t\tif (channel === 'all_public_channels') {\n\t\t\t\t// No special permissions needed to add integration to public channels\n\t\t\t} else if (!(await hasPermissionAsync(userId, 'manage-outgoing-integrations'))) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\t\tfunction: 'validateOutgoing._verifyUserHasPermissionForChannels',\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tlet record;\n\t\t\tconst channelType = channel[0];\n\t\t\tchannel = channel.substr(1);\n\n\t\t\tswitch (channelType) {\n\t\t\t\tcase '#':\n\t\t\t\t\trecord = await Rooms.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { name: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '@':\n\t\t\t\t\trecord = await Users.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { username: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!record) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tfunction: 'validateOutgoing._verifyUserHasPermissionForChannels',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!(await hasAllPermissionAsync(userId, ['manage-outgoing-integrations', 'manage-own-outgoing-integrations'])) &&\n\t\t\t\t!(await Subscriptions.findOneByRoomIdAndUserId(record._id, userId, { projection: { _id: 1 } }))\n\t\t\t) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\t\tfunction: 'validateOutgoing._verifyUserHasPermissionForChannels',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction _verifyRetryInformation(integration: IOutgoingIntegration): void {\n\tif (!integration.retryFailedCalls) {\n\t\treturn;\n\t}\n\n\t// Don't allow negative retry counts\n\tintegration.retryCount =\n\t\tintegration.retryCount && parseInt(String(integration.retryCount)) > 0 ? parseInt(String(integration.retryCount)) : 4;\n\tintegration.retryDelay = !integration.retryDelay?.trim() ? 'powers-of-ten' : integration.retryDelay.toLowerCase();\n}\n\nexport const validateOutgoingIntegration = async function (\n\tintegration: INewOutgoingIntegration | IUpdateOutgoingIntegration,\n\tuserId: IUser['_id'],\n): Promise<IOutgoingIntegration> {\n\tif (integration.channel && Match.test(integration.channel, String) && integration.channel.trim() === '') {\n\t\tdelete integration.channel;\n\t}\n\n\t// Moved to it's own function to satisfy the complexity rule\n\t_verifyRequiredFields(integration);\n\n\tlet channels: string[] = [];\n\tif (outgoingEvents[integration.event].use.channel) {\n\t\tif (!Match.test(integration.channel, String)) {\n\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\tfunction: 'validateOutgoing',\n\t\t\t});\n\t\t} else {\n\t\t\tchannels = parseCSV(integration.channel);\n\n\t\t\tfor (const channel of channels) {\n\t\t\t\tif (!validChannelChars.includes(channel[0]) && !scopedChannels.includes(channel.toLowerCase())) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n\t\t\t\t\t\tfunction: 'validateOutgoing',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (!(await hasPermissionAsync(userId, 'manage-outgoing-integrations'))) {\n\t\tthrow new Meteor.Error('error-invalid-permissions', 'Invalid permission for required Integration creation.', {\n\t\t\tfunction: 'validateOutgoing',\n\t\t});\n\t}\n\n\tconst user = await Users.findOne({ username: integration.username });\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user (did you delete the `rocket.cat` user?)', { function: 'validateOutgoing' });\n\t}\n\n\tconst integrationData: IOutgoingIntegration = {\n\t\t...integration,\n\t\tscriptEngine: integration.scriptEngine ?? 'isolated-vm',\n\t\ttype: 'webhook-outgoing',\n\t\tchannel: channels,\n\t\tuserId: user._id,\n\t\t_createdAt: new Date(),\n\t\t_createdBy: await Users.findOne(userId, { projection: { username: 1 } }),\n\t};\n\n\tif (outgoingEvents[integration.event].use.triggerWords && integration.triggerWords) {\n\t\tif (!Match.test(integration.triggerWords, [String])) {\n\t\t\tthrow new Meteor.Error('error-invalid-triggerWords', 'Invalid triggerWords', {\n\t\t\t\tfunction: 'validateOutgoing',\n\t\t\t});\n\t\t}\n\n\t\tintegrationData.triggerWords = integration.triggerWords.filter((word) => word && word.trim() !== '');\n\t} else {\n\t\tdelete integrationData.triggerWords;\n\t}\n\n\t// Only compile the script if it is enabled and using a sandbox that is not frozen\n\tif (\n\t\t!isScriptEngineFrozen(integrationData.scriptEngine) &&\n\t\tintegration.scriptEnabled === true &&\n\t\tintegration.script &&\n\t\tintegration.script.trim() !== ''\n\t) {\n\t\ttry {\n\t\t\tconst babelOptions = Object.assign(Babel.getDefaultOptions({ runtime: false }), {\n\t\t\t\tcompact: true,\n\t\t\t\tminified: true,\n\t\t\t\tcomments: false,\n\t\t\t});\n\n\t\t\tintegrationData.scriptCompiled = Babel.compile(integration.script, babelOptions).code;\n\t\t\tintegrationData.scriptError = undefined;\n\t\t} catch (e) {\n\t\t\tintegrationData.scriptCompiled = undefined;\n\t\t\tintegrationData.scriptError = e instanceof Error ? pick(e, 'name', 'message', 'stack') : undefined;\n\t\t}\n\t}\n\n\tif (typeof integration.runOnEdits !== 'undefined') {\n\t\t// Verify this value is only true/false\n\t\tintegrationData.runOnEdits = integration.runOnEdits === true;\n\t}\n\n\tawait _verifyUserHasPermissionForChannels(userId, channels);\n\t_verifyRetryInformation(integrationData);\n\n\treturn integrationData;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      validateOutgoingIntegration: () => validateOutgoingIntegration\n    });\n    let Subscriptions, Users, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 0);\n    let pick;\n    module.link(\"@rocket.chat/tools\", {\n      pick(v) {\n        pick = v;\n      }\n    }, 1);\n    let Babel;\n    module.link(\"meteor/babel-compiler\", {\n      Babel(v) {\n        Babel = v;\n      }\n    }, 2);\n    let Match;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let isScriptEngineFrozen;\n    module.link(\"./validateScriptEngine\", {\n      isScriptEngineFrozen(v) {\n        isScriptEngineFrozen = v;\n      }\n    }, 5);\n    let parseCSV;\n    module.link(\"../../../../lib/utils/parseCSV\", {\n      parseCSV(v) {\n        parseCSV = v;\n      }\n    }, 6);\n    let hasPermissionAsync, hasAllPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      },\n      hasAllPermissionAsync(v) {\n        hasAllPermissionAsync = v;\n      }\n    }, 7);\n    let outgoingEvents;\n    module.link(\"../../lib/outgoingEvents\", {\n      outgoingEvents(v) {\n        outgoingEvents = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const scopedChannels = ['all_public_channels', 'all_private_groups', 'all_direct_messages'];\n    const validChannelChars = ['@', '#'];\n    function _verifyRequiredFields(integration) {\n      if (!integration.event || !Match.test(integration.event, String) || integration.event.trim() === '' || !outgoingEvents[integration.event]) {\n        throw new Meteor.Error('error-invalid-event-type', 'Invalid event type', {\n          function: 'validateOutgoing._verifyRequiredFields'\n        });\n      }\n      if (!integration.username || !Match.test(integration.username, String) || integration.username.trim() === '') {\n        throw new Meteor.Error('error-invalid-username', 'Invalid username', {\n          function: 'validateOutgoing._verifyRequiredFields'\n        });\n      }\n      if (outgoingEvents[integration.event].use.targetRoom && !integration.targetRoom) {\n        throw new Meteor.Error('error-invalid-targetRoom', 'Invalid Target Room', {\n          function: 'validateOutgoing._verifyRequiredFields'\n        });\n      }\n      if (!Match.test(integration.urls, [String])) {\n        throw new Meteor.Error('error-invalid-urls', 'Invalid URLs', {\n          function: 'validateOutgoing._verifyRequiredFields'\n        });\n      }\n      integration.urls = integration.urls.filter(url => url && url.trim() !== '');\n      if (integration.urls.length === 0) {\n        throw new Meteor.Error('error-invalid-urls', 'Invalid URLs', {\n          function: 'validateOutgoing._verifyRequiredFields'\n        });\n      }\n    }\n    async function _verifyUserHasPermissionForChannels(userId, channels) {\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(channels), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          let channel = _step.value;\n          {\n            if (scopedChannels.includes(channel)) {\n              if (channel === 'all_public_channels') {\n                // No special permissions needed to add integration to public channels\n              } else if (!(await hasPermissionAsync(userId, 'manage-outgoing-integrations'))) {\n                throw new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n                  function: 'validateOutgoing._verifyUserHasPermissionForChannels'\n                });\n              }\n            } else {\n              let record;\n              const channelType = channel[0];\n              channel = channel.substr(1);\n              switch (channelType) {\n                case '#':\n                  record = await Rooms.findOne({\n                    $or: [{\n                      _id: channel\n                    }, {\n                      name: channel\n                    }]\n                  });\n                  break;\n                case '@':\n                  record = await Users.findOne({\n                    $or: [{\n                      _id: channel\n                    }, {\n                      username: channel\n                    }]\n                  });\n                  break;\n              }\n              if (!record) {\n                throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n                  function: 'validateOutgoing._verifyUserHasPermissionForChannels'\n                });\n              }\n              if (!(await hasAllPermissionAsync(userId, ['manage-outgoing-integrations', 'manage-own-outgoing-integrations'])) && !(await Subscriptions.findOneByRoomIdAndUserId(record._id, userId, {\n                projection: {\n                  _id: 1\n                }\n              }))) {\n                throw new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n                  function: 'validateOutgoing._verifyUserHasPermissionForChannels'\n                });\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    function _verifyRetryInformation(integration) {\n      var _integration$retryDel;\n      if (!integration.retryFailedCalls) {\n        return;\n      }\n      // Don't allow negative retry counts\n      integration.retryCount = integration.retryCount && parseInt(String(integration.retryCount)) > 0 ? parseInt(String(integration.retryCount)) : 4;\n      integration.retryDelay = !((_integration$retryDel = integration.retryDelay) !== null && _integration$retryDel !== void 0 && _integration$retryDel.trim()) ? 'powers-of-ten' : integration.retryDelay.toLowerCase();\n    }\n    const validateOutgoingIntegration = async function (integration, userId) {\n      var _integration$scriptEn;\n      if (integration.channel && Match.test(integration.channel, String) && integration.channel.trim() === '') {\n        delete integration.channel;\n      }\n      // Moved to it's own function to satisfy the complexity rule\n      _verifyRequiredFields(integration);\n      let channels = [];\n      if (outgoingEvents[integration.event].use.channel) {\n        if (!Match.test(integration.channel, String)) {\n          throw new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n            function: 'validateOutgoing'\n          });\n        } else {\n          channels = parseCSV(integration.channel);\n          for (const channel of channels) {\n            if (!validChannelChars.includes(channel[0]) && !scopedChannels.includes(channel.toLowerCase())) {\n              throw new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n                function: 'validateOutgoing'\n              });\n            }\n          }\n        }\n      } else if (!(await hasPermissionAsync(userId, 'manage-outgoing-integrations'))) {\n        throw new Meteor.Error('error-invalid-permissions', 'Invalid permission for required Integration creation.', {\n          function: 'validateOutgoing'\n        });\n      }\n      const user = await Users.findOne({\n        username: integration.username\n      });\n      if (!user) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user (did you delete the `rocket.cat` user?)', {\n          function: 'validateOutgoing'\n        });\n      }\n      const integrationData = _objectSpread(_objectSpread({}, integration), {}, {\n        scriptEngine: (_integration$scriptEn = integration.scriptEngine) !== null && _integration$scriptEn !== void 0 ? _integration$scriptEn : 'isolated-vm',\n        type: 'webhook-outgoing',\n        channel: channels,\n        userId: user._id,\n        _createdAt: new Date(),\n        _createdBy: await Users.findOne(userId, {\n          projection: {\n            username: 1\n          }\n        })\n      });\n      if (outgoingEvents[integration.event].use.triggerWords && integration.triggerWords) {\n        if (!Match.test(integration.triggerWords, [String])) {\n          throw new Meteor.Error('error-invalid-triggerWords', 'Invalid triggerWords', {\n            function: 'validateOutgoing'\n          });\n        }\n        integrationData.triggerWords = integration.triggerWords.filter(word => word && word.trim() !== '');\n      } else {\n        delete integrationData.triggerWords;\n      }\n      // Only compile the script if it is enabled and using a sandbox that is not frozen\n      if (!isScriptEngineFrozen(integrationData.scriptEngine) && integration.scriptEnabled === true && integration.script && integration.script.trim() !== '') {\n        try {\n          const babelOptions = Object.assign(Babel.getDefaultOptions({\n            runtime: false\n          }), {\n            compact: true,\n            minified: true,\n            comments: false\n          });\n          integrationData.scriptCompiled = Babel.compile(integration.script, babelOptions).code;\n          integrationData.scriptError = undefined;\n        } catch (e) {\n          integrationData.scriptCompiled = undefined;\n          integrationData.scriptError = e instanceof Error ? pick(e, 'name', 'message', 'stack') : undefined;\n        }\n      }\n      if (typeof integration.runOnEdits !== 'undefined') {\n        // Verify this value is only true/false\n        integrationData.runOnEdits = integration.runOnEdits === true;\n      }\n      await _verifyUserHasPermissionForChannels(userId, channels);\n      _verifyRetryInformation(integrationData);\n      return integrationData;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","validateOutgoingIntegration","Subscriptions","Users","Rooms","pick","Babel","Match","Meteor","isScriptEngineFrozen","parseCSV","hasPermissionAsync","hasAllPermissionAsync","outgoingEvents","__reifyWaitForDeps__","scopedChannels","validChannelChars","_verifyRequiredFields","integration","event","test","String","trim","Error","function","username","use","targetRoom","urls","filter","url","length","_verifyUserHasPermissionForChannels","userId","channels","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","channel","value","includes","record","channelType","substr","findOne","$or","_id","name","findOneByRoomIdAndUserId","projection","err","return","_verifyRetryInformation","_integration$retryDel","retryFailedCalls","retryCount","parseInt","retryDelay","toLowerCase","_integration$scriptEn","user","integrationData","scriptEngine","type","_createdAt","Date","_createdBy","triggerWords","word","scriptEnabled","script","babelOptions","Object","assign","getDefaultOptions","runtime","compact","minified","comments","scriptCompiled","compile","code","scriptError","undefined","e","runOnEdits","__reify_async_result__","_reifyError","self","async"],"sources":["app/integrations/server/lib/validateOutgoingIntegration.ts"],"sourcesContent":["import type { IUser, INewOutgoingIntegration, IOutgoingIntegration, IUpdateOutgoingIntegration } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport { pick } from '@rocket.chat/tools';\nimport { Babel } from 'meteor/babel-compiler';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { isScriptEngineFrozen } from './validateScriptEngine';\nimport { parseCSV } from '../../../../lib/utils/parseCSV';\nimport { hasPermissionAsync, hasAllPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { outgoingEvents } from '../../lib/outgoingEvents';\n\nconst scopedChannels = ['all_public_channels', 'all_private_groups', 'all_direct_messages'];\nconst validChannelChars = ['@', '#'];\n\nfunction _verifyRequiredFields(integration: INewOutgoingIntegration | IUpdateOutgoingIntegration): void {\n\tif (\n\t\t!integration.event ||\n\t\t!Match.test(integration.event, String) ||\n\t\tintegration.event.trim() === '' ||\n\t\t!outgoingEvents[integration.event]\n\t) {\n\t\tthrow new Meteor.Error('error-invalid-event-type', 'Invalid event type', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tif (!integration.username || !Match.test(integration.username, String) || integration.username.trim() === '') {\n\t\tthrow new Meteor.Error('error-invalid-username', 'Invalid username', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tif (outgoingEvents[integration.event].use.targetRoom && !integration.targetRoom) {\n\t\tthrow new Meteor.Error('error-invalid-targetRoom', 'Invalid Target Room', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tif (!Match.test(integration.urls, [String])) {\n\t\tthrow new Meteor.Error('error-invalid-urls', 'Invalid URLs', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n\n\tintegration.urls = integration.urls.filter((url) => url && url.trim() !== '');\n\n\tif (integration.urls.length === 0) {\n\t\tthrow new Meteor.Error('error-invalid-urls', 'Invalid URLs', {\n\t\t\tfunction: 'validateOutgoing._verifyRequiredFields',\n\t\t});\n\t}\n}\n\nasync function _verifyUserHasPermissionForChannels(userId: IUser['_id'], channels: string[]): Promise<void> {\n\tfor await (let channel of channels) {\n\t\tif (scopedChannels.includes(channel)) {\n\t\t\tif (channel === 'all_public_channels') {\n\t\t\t\t// No special permissions needed to add integration to public channels\n\t\t\t} else if (!(await hasPermissionAsync(userId, 'manage-outgoing-integrations'))) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\t\tfunction: 'validateOutgoing._verifyUserHasPermissionForChannels',\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tlet record;\n\t\t\tconst channelType = channel[0];\n\t\t\tchannel = channel.substr(1);\n\n\t\t\tswitch (channelType) {\n\t\t\t\tcase '#':\n\t\t\t\t\trecord = await Rooms.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { name: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase '@':\n\t\t\t\t\trecord = await Users.findOne({\n\t\t\t\t\t\t$or: [{ _id: channel }, { username: channel }],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!record) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tfunction: 'validateOutgoing._verifyUserHasPermissionForChannels',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!(await hasAllPermissionAsync(userId, ['manage-outgoing-integrations', 'manage-own-outgoing-integrations'])) &&\n\t\t\t\t!(await Subscriptions.findOneByRoomIdAndUserId(record._id, userId, { projection: { _id: 1 } }))\n\t\t\t) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\t\tfunction: 'validateOutgoing._verifyUserHasPermissionForChannels',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction _verifyRetryInformation(integration: IOutgoingIntegration): void {\n\tif (!integration.retryFailedCalls) {\n\t\treturn;\n\t}\n\n\t// Don't allow negative retry counts\n\tintegration.retryCount =\n\t\tintegration.retryCount && parseInt(String(integration.retryCount)) > 0 ? parseInt(String(integration.retryCount)) : 4;\n\tintegration.retryDelay = !integration.retryDelay?.trim() ? 'powers-of-ten' : integration.retryDelay.toLowerCase();\n}\n\nexport const validateOutgoingIntegration = async function (\n\tintegration: INewOutgoingIntegration | IUpdateOutgoingIntegration,\n\tuserId: IUser['_id'],\n): Promise<IOutgoingIntegration> {\n\tif (integration.channel && Match.test(integration.channel, String) && integration.channel.trim() === '') {\n\t\tdelete integration.channel;\n\t}\n\n\t// Moved to it's own function to satisfy the complexity rule\n\t_verifyRequiredFields(integration);\n\n\tlet channels: string[] = [];\n\tif (outgoingEvents[integration.event].use.channel) {\n\t\tif (!Match.test(integration.channel, String)) {\n\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\tfunction: 'validateOutgoing',\n\t\t\t});\n\t\t} else {\n\t\t\tchannels = parseCSV(integration.channel);\n\n\t\t\tfor (const channel of channels) {\n\t\t\t\tif (!validChannelChars.includes(channel[0]) && !scopedChannels.includes(channel.toLowerCase())) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n\t\t\t\t\t\tfunction: 'validateOutgoing',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (!(await hasPermissionAsync(userId, 'manage-outgoing-integrations'))) {\n\t\tthrow new Meteor.Error('error-invalid-permissions', 'Invalid permission for required Integration creation.', {\n\t\t\tfunction: 'validateOutgoing',\n\t\t});\n\t}\n\n\tconst user = await Users.findOne({ username: integration.username });\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user (did you delete the `rocket.cat` user?)', { function: 'validateOutgoing' });\n\t}\n\n\tconst integrationData: IOutgoingIntegration = {\n\t\t...integration,\n\t\tscriptEngine: integration.scriptEngine ?? 'isolated-vm',\n\t\ttype: 'webhook-outgoing',\n\t\tchannel: channels,\n\t\tuserId: user._id,\n\t\t_createdAt: new Date(),\n\t\t_createdBy: await Users.findOne(userId, { projection: { username: 1 } }),\n\t};\n\n\tif (outgoingEvents[integration.event].use.triggerWords && integration.triggerWords) {\n\t\tif (!Match.test(integration.triggerWords, [String])) {\n\t\t\tthrow new Meteor.Error('error-invalid-triggerWords', 'Invalid triggerWords', {\n\t\t\t\tfunction: 'validateOutgoing',\n\t\t\t});\n\t\t}\n\n\t\tintegrationData.triggerWords = integration.triggerWords.filter((word) => word && word.trim() !== '');\n\t} else {\n\t\tdelete integrationData.triggerWords;\n\t}\n\n\t// Only compile the script if it is enabled and using a sandbox that is not frozen\n\tif (\n\t\t!isScriptEngineFrozen(integrationData.scriptEngine) &&\n\t\tintegration.scriptEnabled === true &&\n\t\tintegration.script &&\n\t\tintegration.script.trim() !== ''\n\t) {\n\t\ttry {\n\t\t\tconst babelOptions = Object.assign(Babel.getDefaultOptions({ runtime: false }), {\n\t\t\t\tcompact: true,\n\t\t\t\tminified: true,\n\t\t\t\tcomments: false,\n\t\t\t});\n\n\t\t\tintegrationData.scriptCompiled = Babel.compile(integration.script, babelOptions).code;\n\t\t\tintegrationData.scriptError = undefined;\n\t\t} catch (e) {\n\t\t\tintegrationData.scriptCompiled = undefined;\n\t\t\tintegrationData.scriptError = e instanceof Error ? pick(e, 'name', 'message', 'stack') : undefined;\n\t\t}\n\t}\n\n\tif (typeof integration.runOnEdits !== 'undefined') {\n\t\t// Verify this value is only true/false\n\t\tintegrationData.runOnEdits = integration.runOnEdits === true;\n\t}\n\n\tawait _verifyUserHasPermissionForChannels(userId, channels);\n\t_verifyRetryInformation(integrationData);\n\n\treturn integrationData;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"bfb5287f16a25cde4a408cc608e3416bb7fcf1a1"}
