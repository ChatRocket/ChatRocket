{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/contactHistory/useHistoryList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/omnichannel/contactHistory/useHistoryList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/contactHistory/useHistoryList.ts","inputSourceMap":{"version":3,"file":"client/views/omnichannel/contactHistory/useHistoryList.ts","sourceRoot":"","sources":["client/views/omnichannel/contactHistory/useHistoryList.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE9C,OAAO,EAAE,uBAAuB,EAAE,MAAM,8CAA8C,CAAC;AACvF,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAC;AAC7E,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAC3D,OAAO,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AAQzE,MAAM,CAAC,MAAM,cAAc,GAAG,CAC7B,OAA2B,EAK1B,EAAE;IACH,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,UAAU,EAAmD,CAAC,CAAC;IACpH,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,UAAU,EAAmD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEtH,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,EAAE,mEAAmE,EAAE;QAC1G,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,SAAS,EAAE,OAAO,CAAC,SAAS;KAC5B,CAAC,CAAC;IAEH,qBAAqB,CAAC,GAAG,EAAE;QAC1B,OAAO,IAAI,MAAM,EAAE,CAAC;IACrB,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEtB,MAAM,SAAS,GAAG,WAAW,CAC5B,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;QACpB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,MAAM,UAAU,CAAC;YAC3C,GAAG,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC;YACrD,eAAe,EAAE,MAAM;YACvB,eAAe,EAAE,OAAO;YACxB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,GAAG,GAAG,KAAK;SAClB,CAAC,CAAC;QACH,OAAO;YACN,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;gBAChC,GAAG,OAAO;gBACV,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBACxB,UAAU,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBAChC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;gBACnE,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;gBACnG,cAAc,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS;aAC9F,CAAC,CAAC;YACH,SAAS,EAAE,KAAK;SAChB,CAAC;IACH,CAAC,EACD,CAAC,UAAU,EAAE,OAAO,CAAC,CACrB,CAAC;IAEF,MAAM,EAAE,aAAa,EAAE,gBAAgB,EAAE,GAAG,uBAAuB,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;IAE9F,OAAO;QACN,SAAS;QACT,aAAa;QACb,gBAAgB;KAChB,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { VisitorSearchChatsResult } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\nimport { mapMessageFromApi } from '../../../lib/utils/mapMessageFromApi';\n\ntype HistoryListOptions = {\n\tfilter: string;\n\troomId: string;\n\tvisitorId: string;\n};\n\nexport const useHistoryList = (\n\toptions: HistoryListOptions,\n): {\n\titemsList: RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>()), []);\n\n\tconst getHistory = useEndpoint('GET', '/v1/livechat/visitors.searchChats/room/:roomId/visitor/:visitorId', {\n\t\troomId: options.roomId,\n\t\tvisitorId: options.visitorId,\n\t});\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { history, total } = await getHistory({\n\t\t\t\t...(options.filter && { searchText: options.filter }),\n\t\t\t\tclosedChatsOnly: 'true',\n\t\t\t\tservedChatsOnly: 'false',\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\t\t\treturn {\n\t\t\t\titems: history.map((history) => ({\n\t\t\t\t\t...history,\n\t\t\t\t\tts: new Date(history.ts),\n\t\t\t\t\t_updatedAt: new Date(history.ts),\n\t\t\t\t\tclosedAt: history.closedAt ? new Date(history.closedAt) : undefined,\n\t\t\t\t\tservedBy: history.servedBy ? { ...history.servedBy, ts: new Date(history.servedBy.ts) } : undefined,\n\t\t\t\t\tclosingMessage: history.closingMessage ? mapMessageFromApi(history.closingMessage) : undefined,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getHistory, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/contactHistory/useHistoryList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/contactHistory/useHistoryList.ts","inputSourceMap":{"version":3,"file":"client/views/omnichannel/contactHistory/useHistoryList.ts","sourceRoot":"","sources":["client/views/omnichannel/contactHistory/useHistoryList.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE9C,OAAO,EAAE,uBAAuB,EAAE,MAAM,8CAA8C,CAAC;AACvF,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAC;AAC7E,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAC3D,OAAO,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AAQzE,MAAM,CAAC,MAAM,cAAc,GAAG,CAC7B,OAA2B,EAK1B,EAAE;IACH,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,UAAU,EAAmD,CAAC,CAAC;IACpH,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,UAAU,EAAmD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEtH,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,EAAE,mEAAmE,EAAE;QAC1G,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,SAAS,EAAE,OAAO,CAAC,SAAS;KAC5B,CAAC,CAAC;IAEH,qBAAqB,CAAC,GAAG,EAAE;QAC1B,OAAO,IAAI,MAAM,EAAE,CAAC;IACrB,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEtB,MAAM,SAAS,GAAG,WAAW,CAC5B,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;QACpB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,MAAM,UAAU,CAAC;YAC3C,GAAG,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC;YACrD,eAAe,EAAE,MAAM;YACvB,eAAe,EAAE,OAAO;YACxB,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,GAAG,GAAG,KAAK;SAClB,CAAC,CAAC;QACH,OAAO;YACN,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;gBAChC,GAAG,OAAO;gBACV,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBACxB,UAAU,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;gBAChC,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;gBACnE,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;gBACnG,cAAc,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS;aAC9F,CAAC,CAAC;YACH,SAAS,EAAE,KAAK;SAChB,CAAC;IACH,CAAC,EACD,CAAC,UAAU,EAAE,OAAO,CAAC,CACrB,CAAC;IAEF,MAAM,EAAE,aAAa,EAAE,gBAAgB,EAAE,GAAG,uBAAuB,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;IAE9F,OAAO;QACN,SAAS;QACT,aAAa;QACb,gBAAgB;KAChB,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { VisitorSearchChatsResult } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\nimport { mapMessageFromApi } from '../../../lib/utils/mapMessageFromApi';\n\ntype HistoryListOptions = {\n\tfilter: string;\n\troomId: string;\n\tvisitorId: string;\n};\n\nexport const useHistoryList = (\n\toptions: HistoryListOptions,\n): {\n\titemsList: RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>()), []);\n\n\tconst getHistory = useEndpoint('GET', '/v1/livechat/visitors.searchChats/room/:roomId/visitor/:visitorId', {\n\t\troomId: options.roomId,\n\t\tvisitorId: options.visitorId,\n\t});\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { history, total } = await getHistory({\n\t\t\t\t...(options.filter && { searchText: options.filter }),\n\t\t\t\tclosedChatsOnly: 'true',\n\t\t\t\tservedChatsOnly: 'false',\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\t\t\treturn {\n\t\t\t\titems: history.map((history) => ({\n\t\t\t\t\t...history,\n\t\t\t\t\tts: new Date(history.ts),\n\t\t\t\t\t_updatedAt: new Date(history.ts),\n\t\t\t\t\tclosedAt: history.closedAt ? new Date(history.closedAt) : undefined,\n\t\t\t\t\tservedBy: history.servedBy ? { ...history.servedBy, ts: new Date(history.servedBy.ts) } : undefined,\n\t\t\t\t\tclosingMessage: history.closingMessage ? mapMessageFromApi(history.closingMessage) : undefined,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getHistory, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\nvar _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 2);\nmodule.export({\n  useHistoryList: function () {\n    return useHistoryList;\n  }\n});\nvar useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  }\n}, 0);\nvar useCallback, useState;\nmodule.link(\"react\", {\n  useCallback: function (v) {\n    useCallback = v;\n  },\n  useState: function (v) {\n    useState = v;\n  }\n}, 1);\nvar useScrollableRecordList;\nmodule.link(\"../../../hooks/lists/useScrollableRecordList\", {\n  useScrollableRecordList: function (v) {\n    useScrollableRecordList = v;\n  }\n}, 2);\nvar useComponentDidUpdate;\nmodule.link(\"../../../hooks/useComponentDidUpdate\", {\n  useComponentDidUpdate: function (v) {\n    useComponentDidUpdate = v;\n  }\n}, 3);\nvar RecordList;\nmodule.link(\"../../../lib/lists/RecordList\", {\n  RecordList: function (v) {\n    RecordList = v;\n  }\n}, 4);\nvar mapMessageFromApi;\nmodule.link(\"../../../lib/utils/mapMessageFromApi\", {\n  mapMessageFromApi: function (v) {\n    mapMessageFromApi = v;\n  }\n}, 5);\nvar useHistoryList = function (options) {\n  var _useState = useState(function () {\n      return new RecordList();\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    itemsList = _useState2[0],\n    setItemsList = _useState2[1];\n  var reload = useCallback(function () {\n    return setItemsList(new RecordList());\n  }, []);\n  var getHistory = useEndpoint('GET', '/v1/livechat/visitors.searchChats/room/:roomId/visitor/:visitorId', {\n    roomId: options.roomId,\n    visitorId: options.visitorId\n  });\n  useComponentDidUpdate(function () {\n    options && reload();\n  }, [options, reload]);\n  var fetchData = useCallback(function () {\n    function _callee(start, end) {\n      var _await$getHistory, history, total;\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getHistory(_objectSpread(_objectSpread({}, options.filter && {\n                searchText: options.filter\n              }), {}, {\n                closedChatsOnly: 'true',\n                servedChatsOnly: 'false',\n                offset: start,\n                count: end + start\n              })));\n            case 2:\n              _await$getHistory = _context.sent;\n              history = _await$getHistory.history;\n              total = _await$getHistory.total;\n              return _context.abrupt(\"return\", {\n                items: history.map(function (history) {\n                  return _objectSpread(_objectSpread({}, history), {}, {\n                    ts: new Date(history.ts),\n                    _updatedAt: new Date(history.ts),\n                    closedAt: history.closedAt ? new Date(history.closedAt) : undefined,\n                    servedBy: history.servedBy ? _objectSpread(_objectSpread({}, history.servedBy), {}, {\n                      ts: new Date(history.servedBy.ts)\n                    }) : undefined,\n                    closingMessage: history.closingMessage ? mapMessageFromApi(history.closingMessage) : undefined\n                  });\n                }),\n                itemCount: total\n              });\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return _callee$;\n      }(), null, null, null, Promise);\n    }\n    return _callee;\n  }(), [getHistory, options]);\n  var _useScrollableRecordL = useScrollableRecordList(itemsList, fetchData, 25),\n    loadMoreItems = _useScrollableRecordL.loadMoreItems,\n    initialItemCount = _useScrollableRecordL.initialItemCount;\n  return {\n    itemsList: itemsList,\n    loadMoreItems: loadMoreItems,\n    initialItemCount: initialItemCount\n  };\n};","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_objectSpread","_slicedToArray","export","useHistoryList","useEndpoint","useCallback","useState","useScrollableRecordList","useComponentDidUpdate","RecordList","mapMessageFromApi","options","_useState","_useState2","itemsList","setItemsList","reload","getHistory","roomId","visitorId","fetchData","_callee","start","end","_await$getHistory","history","total","async","_callee$","_context","prev","next","awrap","filter","searchText","closedChatsOnly","servedChatsOnly","offset","count","sent","abrupt","items","map","ts","Date","_updatedAt","closedAt","undefined","servedBy","closingMessage","itemCount","stop","Promise","_useScrollableRecordL","loadMoreItems","initialItemCount"],"sources":["client/views/omnichannel/contactHistory/useHistoryList.ts"],"sourcesContent":["import type { VisitorSearchChatsResult } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\nimport { mapMessageFromApi } from '../../../lib/utils/mapMessageFromApi';\n\ntype HistoryListOptions = {\n\tfilter: string;\n\troomId: string;\n\tvisitorId: string;\n};\n\nexport const useHistoryList = (\n\toptions: HistoryListOptions,\n): {\n\titemsList: RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<VisitorSearchChatsResult & { _updatedAt: Date }>()), []);\n\n\tconst getHistory = useEndpoint('GET', '/v1/livechat/visitors.searchChats/room/:roomId/visitor/:visitorId', {\n\t\troomId: options.roomId,\n\t\tvisitorId: options.visitorId,\n\t});\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { history, total } = await getHistory({\n\t\t\t\t...(options.filter && { searchText: options.filter }),\n\t\t\t\tclosedChatsOnly: 'true',\n\t\t\t\tservedChatsOnly: 'false',\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t});\n\t\t\treturn {\n\t\t\t\titems: history.map((history) => ({\n\t\t\t\t\t...history,\n\t\t\t\t\tts: new Date(history.ts),\n\t\t\t\t\t_updatedAt: new Date(history.ts),\n\t\t\t\t\tclosedAt: history.closedAt ? new Date(history.closedAt) : undefined,\n\t\t\t\t\tservedBy: history.servedBy ? { ...history.servedBy, ts: new Date(history.servedBy.ts) } : undefined,\n\t\t\t\t\tclosingMessage: history.closingMessage ? mapMessageFromApi(history.closingMessage) : undefined,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getHistory, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"],"mappings":"AACA,IAAAA,mBAAsB;AAAAC,MAAM,CAAAC,IAAA,6BAA2B;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAJ,mBAAA,GAAAI,CAAA;EAAA;AAAA;AAAA,IAAAC,aAAA;AAAAJ,MAAA,CAAAC,IAAA;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAC,aAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,cAAA;AAAAL,MAAA,CAAAC,IAAA;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAE,cAAA,GAAAF,CAAA;EAAA;AAAA;AAAvDH,MAAA,CAAOM,MAAE;EAAAC,cAAmB,WAAAA,CAAA;IAAA,OAAAA,cAA2B;EAAA;AAAA;AAAA,IAAAC,WAAA;AAAAR,MAAA,CAAAC,IAAA;EAAAO,WAAA,WAAAA,CAAAL,CAAA;IAAAK,WAAA,GAAAL,CAAA;EAAA;AAAA;AAAA,IAAAM,WAAA,EAAAC,QAAA;AAAAV,MAAA,CAAAC,IAAA;EAAAQ,WAAA,WAAAA,CAAAN,CAAA;IAAAM,WAAA,GAAAN,CAAA;EAAA;EAAAO,QAAA,WAAAA,CAAAP,CAAA;IAAAO,QAAA,GAAAP,CAAA;EAAA;AAAA;AAAA,IAAAQ,uBAAA;AAAAX,MAAA,CAAAC,IAAA;EAAAU,uBAAA,WAAAA,CAAAR,CAAA;IAAAQ,uBAAA,GAAAR,CAAA;EAAA;AAAA;AAAA,IAAAS,qBAAA;AAAAZ,MAAA,CAAAC,IAAA;EAAAW,qBAAA,WAAAA,CAAAT,CAAA;IAAAS,qBAAA,GAAAT,CAAA;EAAA;AAAA;AAAA,IAAAU,UAAA;AAAAb,MAAA,CAAAC,IAAA;EAAAY,UAAA,WAAAA,CAAAV,CAAA;IAAAU,UAAA,GAAAV,CAAA;EAAA;AAAA;AAAA,IAAAW,iBAAA;AAAAd,MAAA,CAAAC,IAAA;EAAAa,iBAAA,WAAAA,CAAAX,CAAA;IAAAW,iBAAA,GAAAX,CAAA;EAAA;AAAA;AAchD,IAAMI,cAAc,GAAG,SAAAA,CAC7BQ,OAA2B,EAKxB;EACH,IAAAC,SAAA,GAAkCN,QAAQ,CAAC;MAAA,OAAM,IAAIG,UAAU,EAAmD;IAAA,EAAC;IAAAI,UAAA,GAAAZ,cAAA,CAAAW,SAAA;IAA5GE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAMG,MAAM,GAAGX,WAAW,CAAC;IAAA,OAAMU,YAAY,CAAC,IAAIN,UAAU,EAAmD,CAAC;EAAA,GAAE,EAAE,CAAC;EAErH,IAAMQ,UAAU,GAAGb,WAAW,CAAC,KAAK,EAAE,mEAAmE,EAAE;IAC1Gc,MAAM,EAAEP,OAAO,CAACO,MAAM;IACtBC,SAAS,EAAER,OAAO,CAACQ;GACnB,CAAC;EAEFX,qBAAqB,CAAC,YAAK;IAC1BG,OAAO,IAAIK,MAAM,EAAE;EACpB,CAAC,EAAE,CAACL,OAAO,EAAEK,MAAM,CAAC,CAAC;EAErB,IAAMI,SAAS,GAAGf,WAAW;IAC5B,SAAAgB,QAAOC,KAAK,EAAEC,GAAG;MAAA,IAAAC,iBAAA,EAAAC,OAAA,EAAAC,KAAA;MAAA,OAAA/B,mBAAA,CAAAgC,KAAA;QAAA,SAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OAAApC,mBAAA,CAAAqC,KAAA,CACiBf,UAAU,CAAAjB,aAAA,CAAAA,aAAA,KACtCW,OAAO,CAACsB,MAAM,IAAI;gBAAEC,UAAU,EAAEvB,OAAO,CAACsB;cAAM,CAAE;gBACpDE,eAAe,EAAE,MAAM;gBACvBC,eAAe,EAAE,OAAO;gBACxBC,MAAM,EAAEf,KAAK;gBACbgB,KAAK,EAAEf,GAAG,GAAGD;cAAK,EAClB,CAAC;YAAA;cAAAE,iBAAA,GAAAK,QAAA,CAAAU,IAAA;cANMd,OAAO,GAAAD,iBAAA,CAAPC,OAAO;cAAEC,KAAK,GAAAF,iBAAA,CAALE,KAAK;cAAA,OAAAG,QAAA,CAAAW,MAAA,WAOf;gBACNC,KAAK,EAAEhB,OAAO,CAACiB,GAAG,CAAC,UAACjB,OAAO;kBAAA,OAAAzB,aAAA,CAAAA,aAAA,KACvByB,OAAO;oBACVkB,EAAE,EAAE,IAAIC,IAAI,CAACnB,OAAO,CAACkB,EAAE,CAAC;oBACxBE,UAAU,EAAE,IAAID,IAAI,CAACnB,OAAO,CAACkB,EAAE,CAAC;oBAChCG,QAAQ,EAAErB,OAAO,CAACqB,QAAQ,GAAG,IAAIF,IAAI,CAACnB,OAAO,CAACqB,QAAQ,CAAC,GAAGC,SAAS;oBACnEC,QAAQ,EAAEvB,OAAO,CAACuB,QAAQ,GAAAhD,aAAA,CAAAA,aAAA,KAAQyB,OAAO,CAACuB,QAAQ;sBAAEL,EAAE,EAAE,IAAIC,IAAI,CAACnB,OAAO,CAACuB,QAAQ,CAACL,EAAE;oBAAC,KAAKI,SAAS;oBACnGE,cAAc,EAAExB,OAAO,CAACwB,cAAc,GAAGvC,iBAAiB,CAACe,OAAO,CAACwB,cAAc,CAAC,GAAGF;kBAAS;gBAAA,CAC7F,CAAC;gBACHG,SAAS,EAAExB;eACX;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAsB,IAAA;UAAA;QAAA;QAAA,OAAAvB,QAAA;MAAA,uBAAAwB,OAAA;IAAA;IACD,OAAA/B,OAAA;EAAA,KACD,CAACJ,UAAU,EAAEN,OAAO,CAAC,CACrB;EAED,IAAA0C,qBAAA,GAA4C9C,uBAAuB,CAACO,SAAS,EAAEM,SAAS,EAAE,EAAE,CAAC;IAArFkC,aAAa,GAAAD,qBAAA,CAAbC,aAAa;IAAEC,gBAAgB,GAAAF,qBAAA,CAAhBE,gBAAgB;EAEvC,OAAO;IACNzC,SAAS,EAATA,SAAS;IACTwC,aAAa,EAAbA,aAAa;IACbC,gBAAgB,EAAhBA;GACA;AACF,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"cd4ef8504b7e3bcd2dedef91e7f3bb59ba2b4075"}
