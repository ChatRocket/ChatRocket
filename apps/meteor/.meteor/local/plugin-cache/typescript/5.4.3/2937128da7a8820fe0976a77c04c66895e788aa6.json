{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/MatrixBridgedUser.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/MatrixBridgedUser.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/MatrixBridgedUser.ts","inputSourceMap":{"version":3,"file":"server/models/raw/MatrixBridgedUser.ts","sourceRoot":"","sources":["server/models/raw/MatrixBridgedUser.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,oBAAqB,SAAQ,OAA2B;IACpE,YAAY,EAAM,EAAE,KAA+D;QAClF,KAAK,CAAC,EAAE,EAAE,sBAAsB,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IAES,YAAY;QACrB,OAAO;YACN,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;YAC/C,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;YAC/C,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;SACxC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,8BAA8B,CAAC,WAAmB;QACvD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;QAE7D,OAAO,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,8BAA8B,CAAC,cAAsB;QAC1D,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,0BAA0B,CAAC,cAAsB;QACtD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,CAAC;QAEhE,OAAO,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,0BAA0B,CAAC,eAAyB;QACzD,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QAElF,OAAO,YAAY,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,WAAmB;QAChD,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,WAAmB,EAAE,cAAsB,EAAE,MAAe,EAAE,UAAkB;QAC7G,MAAM,IAAI,CAAC,SAAS,CACnB,EAAE,GAAG,EAAE,WAAW,EAAE,EACpB;YACC,IAAI,EAAE;gBACL,GAAG,EAAE,WAAW;gBAChB,GAAG,EAAE,cAAc;gBACnB,MAAM;gBACN,UAAU;aACV;SACD,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,CAChB,CAAC;IACH,CAAC;CACD","sourcesContent":["import type { IMatrixBridgedUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IMatrixBridgedUserModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class MatrixBridgedUserRaw extends BaseRaw<IMatrixBridgedUser> implements IMatrixBridgedUserModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IMatrixBridgedUser>>) {\n\t\tsuper(db, 'matrix_bridged_users', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { uid: 1 }, unique: true, sparse: true },\n\t\t\t{ key: { mui: 1 }, unique: true, sparse: true },\n\t\t\t{ key: { fromServer: 1 }, sparse: true },\n\t\t];\n\t}\n\n\tasync getExternalUserIdByLocalUserId(localUserId: string): Promise<string | null> {\n\t\tconst bridgedUser = await this.findOne({ uid: localUserId });\n\n\t\treturn bridgedUser ? bridgedUser.mui : null;\n\t}\n\n\tasync getBridgedUserByExternalUserId(externalUserId: string): Promise<IMatrixBridgedUser | null> {\n\t\treturn this.findOne({ mui: externalUserId });\n\t}\n\n\tasync getLocalUserIdByExternalId(externalUserId: string): Promise<string | null> {\n\t\tconst bridgedUser = await this.findOne({ mui: externalUserId });\n\n\t\treturn bridgedUser ? bridgedUser.uid : null;\n\t}\n\n\tasync getLocalUsersByExternalIds(externalUserIds: string[]): Promise<IMatrixBridgedUser[]> {\n\t\tconst bridgedUsers = await this.find({ mui: { $in: externalUserIds } }).toArray();\n\n\t\treturn bridgedUsers;\n\t}\n\n\tasync getBridgedUserByLocalId(localUserId: string): Promise<IMatrixBridgedUser | null> {\n\t\treturn this.findOne({ uid: localUserId });\n\t}\n\n\tasync createOrUpdateByLocalId(localUserId: string, externalUserId: string, remote: boolean, fromServer: string): Promise<void> {\n\t\tawait this.updateOne(\n\t\t\t{ uid: localUserId },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tuid: localUserId,\n\t\t\t\t\tmui: externalUserId,\n\t\t\t\t\tremote,\n\t\t\t\t\tfromServer,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/MatrixBridgedUser.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/MatrixBridgedUser.ts","inputSourceMap":{"version":3,"file":"server/models/raw/MatrixBridgedUser.ts","sourceRoot":"","sources":["server/models/raw/MatrixBridgedUser.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,oBAAqB,SAAQ,OAA2B;IACpE,YAAY,EAAM,EAAE,KAA+D;QAClF,KAAK,CAAC,EAAE,EAAE,sBAAsB,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IAES,YAAY;QACrB,OAAO;YACN,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;YAC/C,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;YAC/C,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;SACxC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,8BAA8B,CAAC,WAAmB;QACvD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;QAE7D,OAAO,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,8BAA8B,CAAC,cAAsB;QAC1D,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,KAAK,CAAC,0BAA0B,CAAC,cAAsB;QACtD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,CAAC;QAEhE,OAAO,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,0BAA0B,CAAC,eAAyB;QACzD,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QAElF,OAAO,YAAY,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,WAAmB;QAChD,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,WAAmB,EAAE,cAAsB,EAAE,MAAe,EAAE,UAAkB;QAC7G,MAAM,IAAI,CAAC,SAAS,CACnB,EAAE,GAAG,EAAE,WAAW,EAAE,EACpB;YACC,IAAI,EAAE;gBACL,GAAG,EAAE,WAAW;gBAChB,GAAG,EAAE,cAAc;gBACnB,MAAM;gBACN,UAAU;aACV;SACD,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,CAChB,CAAC;IACH,CAAC;CACD","sourcesContent":["import type { IMatrixBridgedUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IMatrixBridgedUserModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class MatrixBridgedUserRaw extends BaseRaw<IMatrixBridgedUser> implements IMatrixBridgedUserModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IMatrixBridgedUser>>) {\n\t\tsuper(db, 'matrix_bridged_users', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { uid: 1 }, unique: true, sparse: true },\n\t\t\t{ key: { mui: 1 }, unique: true, sparse: true },\n\t\t\t{ key: { fromServer: 1 }, sparse: true },\n\t\t];\n\t}\n\n\tasync getExternalUserIdByLocalUserId(localUserId: string): Promise<string | null> {\n\t\tconst bridgedUser = await this.findOne({ uid: localUserId });\n\n\t\treturn bridgedUser ? bridgedUser.mui : null;\n\t}\n\n\tasync getBridgedUserByExternalUserId(externalUserId: string): Promise<IMatrixBridgedUser | null> {\n\t\treturn this.findOne({ mui: externalUserId });\n\t}\n\n\tasync getLocalUserIdByExternalId(externalUserId: string): Promise<string | null> {\n\t\tconst bridgedUser = await this.findOne({ mui: externalUserId });\n\n\t\treturn bridgedUser ? bridgedUser.uid : null;\n\t}\n\n\tasync getLocalUsersByExternalIds(externalUserIds: string[]): Promise<IMatrixBridgedUser[]> {\n\t\tconst bridgedUsers = await this.find({ mui: { $in: externalUserIds } }).toArray();\n\n\t\treturn bridgedUsers;\n\t}\n\n\tasync getBridgedUserByLocalId(localUserId: string): Promise<IMatrixBridgedUser | null> {\n\t\treturn this.findOne({ uid: localUserId });\n\t}\n\n\tasync createOrUpdateByLocalId(localUserId: string, externalUserId: string, remote: boolean, fromServer: string): Promise<void> {\n\t\tawait this.updateOne(\n\t\t\t{ uid: localUserId },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tuid: localUserId,\n\t\t\t\t\tmui: externalUserId,\n\t\t\t\t\tremote,\n\t\t\t\t\tfromServer,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      MatrixBridgedUserRaw: () => MatrixBridgedUserRaw\n    });\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class MatrixBridgedUserRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'matrix_bridged_users', trash);\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            uid: 1\n          },\n          unique: true,\n          sparse: true\n        }, {\n          key: {\n            mui: 1\n          },\n          unique: true,\n          sparse: true\n        }, {\n          key: {\n            fromServer: 1\n          },\n          sparse: true\n        }];\n      }\n      async getExternalUserIdByLocalUserId(localUserId) {\n        const bridgedUser = await this.findOne({\n          uid: localUserId\n        });\n        return bridgedUser ? bridgedUser.mui : null;\n      }\n      async getBridgedUserByExternalUserId(externalUserId) {\n        return this.findOne({\n          mui: externalUserId\n        });\n      }\n      async getLocalUserIdByExternalId(externalUserId) {\n        const bridgedUser = await this.findOne({\n          mui: externalUserId\n        });\n        return bridgedUser ? bridgedUser.uid : null;\n      }\n      async getLocalUsersByExternalIds(externalUserIds) {\n        const bridgedUsers = await this.find({\n          mui: {\n            $in: externalUserIds\n          }\n        }).toArray();\n        return bridgedUsers;\n      }\n      async getBridgedUserByLocalId(localUserId) {\n        return this.findOne({\n          uid: localUserId\n        });\n      }\n      async createOrUpdateByLocalId(localUserId, externalUserId, remote, fromServer) {\n        await this.updateOne({\n          uid: localUserId\n        }, {\n          $set: {\n            uid: localUserId,\n            mui: externalUserId,\n            remote,\n            fromServer\n          }\n        }, {\n          upsert: true\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","MatrixBridgedUserRaw","BaseRaw","link","v","__reifyWaitForDeps__","constructor","db","trash","modelIndexes","key","uid","unique","sparse","mui","fromServer","getExternalUserIdByLocalUserId","localUserId","bridgedUser","findOne","getBridgedUserByExternalUserId","externalUserId","getLocalUserIdByExternalId","getLocalUsersByExternalIds","externalUserIds","bridgedUsers","find","$in","toArray","getBridgedUserByLocalId","createOrUpdateByLocalId","remote","updateOne","$set","upsert","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/MatrixBridgedUser.ts"],"sourcesContent":["import type { IMatrixBridgedUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IMatrixBridgedUserModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class MatrixBridgedUserRaw extends BaseRaw<IMatrixBridgedUser> implements IMatrixBridgedUserModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IMatrixBridgedUser>>) {\n\t\tsuper(db, 'matrix_bridged_users', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { uid: 1 }, unique: true, sparse: true },\n\t\t\t{ key: { mui: 1 }, unique: true, sparse: true },\n\t\t\t{ key: { fromServer: 1 }, sparse: true },\n\t\t];\n\t}\n\n\tasync getExternalUserIdByLocalUserId(localUserId: string): Promise<string | null> {\n\t\tconst bridgedUser = await this.findOne({ uid: localUserId });\n\n\t\treturn bridgedUser ? bridgedUser.mui : null;\n\t}\n\n\tasync getBridgedUserByExternalUserId(externalUserId: string): Promise<IMatrixBridgedUser | null> {\n\t\treturn this.findOne({ mui: externalUserId });\n\t}\n\n\tasync getLocalUserIdByExternalId(externalUserId: string): Promise<string | null> {\n\t\tconst bridgedUser = await this.findOne({ mui: externalUserId });\n\n\t\treturn bridgedUser ? bridgedUser.uid : null;\n\t}\n\n\tasync getLocalUsersByExternalIds(externalUserIds: string[]): Promise<IMatrixBridgedUser[]> {\n\t\tconst bridgedUsers = await this.find({ mui: { $in: externalUserIds } }).toArray();\n\n\t\treturn bridgedUsers;\n\t}\n\n\tasync getBridgedUserByLocalId(localUserId: string): Promise<IMatrixBridgedUser | null> {\n\t\treturn this.findOne({ uid: localUserId });\n\t}\n\n\tasync createOrUpdateByLocalId(localUserId: string, externalUserId: string, remote: boolean, fromServer: string): Promise<void> {\n\t\tawait this.updateOne(\n\t\t\t{ uid: localUserId },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tuid: localUserId,\n\t\t\t\t\tmui: externalUserId,\n\t\t\t\t\tremote,\n\t\t\t\t\tfromServer,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t}\n}\n"],"mappings":";;;IAIAA,MAAA,CAAOC,MAAE;MAAAC,oBAA0B,EAACA,CAAA,KAAAA;IAAA;IAAA,IAAAC,OAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,QAAAE,CAAA;QAAAF,OAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,oBAAA,WAAAA,oBAAA;IAE9B,MAAOJ,oBAAqB,SAAQC,OAA2B;MACpEI,YAAYC,EAAM,EAAEC,KAA+D;QAClF,KAAK,CAACD,EAAE,EAAE,sBAAsB,EAAEC,KAAK,CAAC;MACzC;MAEUC,YAAYA,CAAA;QACrB,OAAO,CACN;UAAEC,GAAG,EAAE;YAAEC,GAAG,EAAE;UAAC,CAAE;UAAEC,MAAM,EAAE,IAAI;UAAEC,MAAM,EAAE;QAAI,CAAE,EAC/C;UAAEH,GAAG,EAAE;YAAEI,GAAG,EAAE;UAAC,CAAE;UAAEF,MAAM,EAAE,IAAI;UAAEC,MAAM,EAAE;QAAI,CAAE,EAC/C;UAAEH,GAAG,EAAE;YAAEK,UAAU,EAAE;UAAC,CAAE;UAAEF,MAAM,EAAE;QAAI,CAAE,CACxC;MACF;MAEA,MAAMG,8BAA8BA,CAACC,WAAmB;QACvD,MAAMC,WAAW,GAAG,MAAM,IAAI,CAACC,OAAO,CAAC;UAAER,GAAG,EAAEM;QAAW,CAAE,CAAC;QAE5D,OAAOC,WAAW,GAAGA,WAAW,CAACJ,GAAG,GAAG,IAAI;MAC5C;MAEA,MAAMM,8BAA8BA,CAACC,cAAsB;QAC1D,OAAO,IAAI,CAACF,OAAO,CAAC;UAAEL,GAAG,EAAEO;QAAc,CAAE,CAAC;MAC7C;MAEA,MAAMC,0BAA0BA,CAACD,cAAsB;QACtD,MAAMH,WAAW,GAAG,MAAM,IAAI,CAACC,OAAO,CAAC;UAAEL,GAAG,EAAEO;QAAc,CAAE,CAAC;QAE/D,OAAOH,WAAW,GAAGA,WAAW,CAACP,GAAG,GAAG,IAAI;MAC5C;MAEA,MAAMY,0BAA0BA,CAACC,eAAyB;QACzD,MAAMC,YAAY,GAAG,MAAM,IAAI,CAACC,IAAI,CAAC;UAAEZ,GAAG,EAAE;YAAEa,GAAG,EAAEH;UAAe;QAAE,CAAE,CAAC,CAACI,OAAO,EAAE;QAEjF,OAAOH,YAAY;MACpB;MAEA,MAAMI,uBAAuBA,CAACZ,WAAmB;QAChD,OAAO,IAAI,CAACE,OAAO,CAAC;UAAER,GAAG,EAAEM;QAAW,CAAE,CAAC;MAC1C;MAEA,MAAMa,uBAAuBA,CAACb,WAAmB,EAAEI,cAAsB,EAAEU,MAAe,EAAEhB,UAAkB;QAC7G,MAAM,IAAI,CAACiB,SAAS,CACnB;UAAErB,GAAG,EAAEM;QAAW,CAAE,EACpB;UACCgB,IAAI,EAAE;YACLtB,GAAG,EAAEM,WAAW;YAChBH,GAAG,EAAEO,cAAc;YACnBU,MAAM;YACNhB;;SAED,EACD;UAAEmB,MAAM,EAAE;QAAI,CAAE,CAChB;MACF;;IACAC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2937128da7a8820fe0976a77c04c66895e788aa6"}
