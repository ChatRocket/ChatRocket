{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/routes/avatar/user.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/routes/avatar/user.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/routes/avatar/user.ts","inputSourceMap":{"version":3,"file":"server/routes/avatar/user.ts","sourceRoot":"","sources":["server/routes/avatar/user.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAE,WAAW,IAAI,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAGjE,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAE,+BAA+B,EAAE,mBAAmB,EAAE,6BAA6B,EAAE,eAAe,EAAE,MAAM,SAAS,CAAC;AAE/H,MAAM,sBAAsB,GAAG,KAAK,EAAE,mBAA2B,EAAE,QAAgB,EAAE,GAAmB,EAAiB,EAAE;IAC1H,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,mBAAmB,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC;IAClF,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;IACpE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB,CAAC,CAAC;AACF,iDAAiD;AACjD,MAAM,CAAC,MAAM,oBAAoB,GAAG,KAAK,WAAW,OAAwB,EAAE,GAAmB,EAAE,IAAkB;IACpH,MAAM,GAAG,GAAG,OAA2B,CAAC;IAExC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QACd,OAAO;IACR,CAAC;IAED,mCAAmC;IACnC,MAAM,eAAe,GAAG,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IAClF,IAAI,CAAC,eAAe,EAAE,CAAC;QACtB,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnB,GAAG,CAAC,GAAG,EAAE,CAAC;QACV,OAAO;IACR,CAAC;IAED,6BAA6B,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAExC,MAAM,mBAAmB,GAAG,QAAQ,CAAC,GAAG,CAAS,oCAAoC,CAAC,CAAC;IACvF,IAAI,mBAAmB,EAAE,CAAC;QACzB,KAAK,sBAAsB,CAAC,mBAAmB,EAAE,eAAe,EAAE,GAAG,CAAC,CAAC;QACvE,OAAO;IACR,CAAC;IAED,yDAAyD;IACzD,IAAI,eAAe,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;QAChC,+BAA+B,CAAC,EAAE,cAAc,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACxF,OAAO;IACR,CAAC;IAED,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IAC1D,IAAI,IAAI,EAAE,CAAC;QACV,KAAK,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC3C,OAAO;IACR,CAAC;IAED,oCAAoC;IACpC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC;QAC5D,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACnB,GAAG,CAAC,GAAG,EAAE,CAAC;QACV,OAAO;IACR,CAAC;IAED,gCAAgC;IAChC,IAAI,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAE,CAAC;QACxC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,6BAA6B,CAAC,eAAe,EAAE;YACvE,UAAU,EAAE;gBACX,IAAI,EAAE,CAAC;aACP;SACD,CAAC,CAAC;QAEH,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC;YAChB,+BAA+B,CAAC,EAAE,cAAc,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;YACzE,OAAO;QACR,CAAC;IACF,CAAC;IAED,+BAA+B,CAAC,EAAE,cAAc,EAAE,eAAe,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AAChF,CAAC,CAAC","sourcesContent":["import type { IncomingMessage, ServerResponse } from 'http';\n\nimport type { IIncomingMessage } from '@rocket.chat/core-typings';\nimport { Avatars, Users } from '@rocket.chat/models';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\nimport type { NextFunction } from 'connect';\n\nimport { settings } from '../../../app/settings/server';\nimport { serveSvgAvatarInRequestedFormat, wasFallbackModified, setCacheAndDispositionHeaders, serveAvatarFile } from './utils';\n\nconst handleExternalProvider = async (externalProviderUrl: string, username: string, res: ServerResponse): Promise<void> => {\n\tconst response = await fetch(externalProviderUrl.replace('{username}', username));\n\tresponse.headers.forEach((value, key) => res.setHeader(key, value));\n\tresponse.body.pipe(res);\n};\n// request /avatar/@name forces returning the svg\nexport const userAvatarByUsername = async function (request: IncomingMessage, res: ServerResponse, next: NextFunction) {\n\tconst req = request as IIncomingMessage;\n\n\tif (!req.url) {\n\t\treturn;\n\t}\n\n\t// replace removes the query string\n\tconst requestUsername = decodeURIComponent(req.url.slice(1).replace(/\\?.*$/, ''));\n\tif (!requestUsername) {\n\t\tres.writeHead(404);\n\t\tres.end();\n\t\treturn;\n\t}\n\n\tsetCacheAndDispositionHeaders(req, res);\n\n\tconst externalProviderUrl = settings.get<string>('Accounts_AvatarExternalProviderUrl');\n\tif (externalProviderUrl) {\n\t\tvoid handleExternalProvider(externalProviderUrl, requestUsername, res);\n\t\treturn;\n\t}\n\n\t// if request starts with @ always return the svg letters\n\tif (requestUsername[0] === '@') {\n\t\tserveSvgAvatarInRequestedFormat({ nameOrUsername: requestUsername.slice(1), req, res });\n\t\treturn;\n\t}\n\n\tconst file = await Avatars.findOneByName(requestUsername);\n\tif (file) {\n\t\tvoid serveAvatarFile(file, req, res, next);\n\t\treturn;\n\t}\n\n\t// if still using \"letters fallback\"\n\tif (!wasFallbackModified(req.headers['if-modified-since'])) {\n\t\tres.writeHead(304);\n\t\tres.end();\n\t\treturn;\n\t}\n\n\t// Use real name for SVG letters\n\tif (settings.get('UI_Use_Name_Avatar')) {\n\t\tconst user = await Users.findOneByUsernameIgnoringCase(requestUsername, {\n\t\t\tprojection: {\n\t\t\t\tname: 1,\n\t\t\t},\n\t\t});\n\n\t\tif (user?.name) {\n\t\t\tserveSvgAvatarInRequestedFormat({ nameOrUsername: user.name, req, res });\n\t\t\treturn;\n\t\t}\n\t}\n\n\tserveSvgAvatarInRequestedFormat({ nameOrUsername: requestUsername, req, res });\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/routes/avatar/user.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/routes/avatar/user.ts","inputSourceMap":{"version":3,"file":"server/routes/avatar/user.ts","sourceRoot":"","sources":["server/routes/avatar/user.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IncomingMessage, ServerResponse } from 'http';\n\nimport type { IIncomingMessage } from '@rocket.chat/core-typings';\nimport { Avatars, Users } from '@rocket.chat/models';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\nimport type { NextFunction } from 'connect';\n\nimport { settings } from '../../../app/settings/server';\nimport { serveSvgAvatarInRequestedFormat, wasFallbackModified, setCacheAndDispositionHeaders, serveAvatarFile } from './utils';\n\nconst handleExternalProvider = async (externalProviderUrl: string, username: string, res: ServerResponse): Promise<void> => {\n\tconst response = await fetch(externalProviderUrl.replace('{username}', username));\n\tresponse.headers.forEach((value, key) => res.setHeader(key, value));\n\tresponse.body.pipe(res);\n};\n// request /avatar/@name forces returning the svg\nexport const userAvatarByUsername = async function (request: IncomingMessage, res: ServerResponse, next: NextFunction) {\n\tconst req = request as IIncomingMessage;\n\n\tif (!req.url) {\n\t\treturn;\n\t}\n\n\t// replace removes the query string\n\tconst requestUsername = decodeURIComponent(req.url.slice(1).replace(/\\?.*$/, ''));\n\tif (!requestUsername) {\n\t\tres.writeHead(404);\n\t\tres.end();\n\t\treturn;\n\t}\n\n\tsetCacheAndDispositionHeaders(req, res);\n\n\tconst externalProviderUrl = settings.get<string>('Accounts_AvatarExternalProviderUrl');\n\tif (externalProviderUrl) {\n\t\tvoid handleExternalProvider(externalProviderUrl, requestUsername, res);\n\t\treturn;\n\t}\n\n\t// if request starts with @ always return the svg letters\n\tif (requestUsername[0] === '@') {\n\t\tserveSvgAvatarInRequestedFormat({ nameOrUsername: requestUsername.slice(1), req, res });\n\t\treturn;\n\t}\n\n\tconst file = await Avatars.findOneByName(requestUsername);\n\tif (file) {\n\t\tvoid serveAvatarFile(file, req, res, next);\n\t\treturn;\n\t}\n\n\t// if still using \"letters fallback\"\n\tif (!wasFallbackModified(req.headers['if-modified-since'])) {\n\t\tres.writeHead(304);\n\t\tres.end();\n\t\treturn;\n\t}\n\n\t// Use real name for SVG letters\n\tif (settings.get('UI_Use_Name_Avatar')) {\n\t\tconst user = await Users.findOneByUsernameIgnoringCase(requestUsername, {\n\t\t\tprojection: {\n\t\t\t\tname: 1,\n\t\t\t},\n\t\t});\n\n\t\tif (user?.name) {\n\t\t\tserveSvgAvatarInRequestedFormat({ nameOrUsername: user.name, req, res });\n\t\t\treturn;\n\t\t}\n\t}\n\n\tserveSvgAvatarInRequestedFormat({ nameOrUsername: requestUsername, req, res });\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      userAvatarByUsername: () => userAvatarByUsername\n    });\n    let Avatars, Users;\n    module.link(\"@rocket.chat/models\", {\n      Avatars(v) {\n        Avatars = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let fetch;\n    module.link(\"@rocket.chat/server-fetch\", {\n      serverFetch(v) {\n        fetch = v;\n      }\n    }, 1);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 2);\n    let serveSvgAvatarInRequestedFormat, wasFallbackModified, setCacheAndDispositionHeaders, serveAvatarFile;\n    module.link(\"./utils\", {\n      serveSvgAvatarInRequestedFormat(v) {\n        serveSvgAvatarInRequestedFormat = v;\n      },\n      wasFallbackModified(v) {\n        wasFallbackModified = v;\n      },\n      setCacheAndDispositionHeaders(v) {\n        setCacheAndDispositionHeaders = v;\n      },\n      serveAvatarFile(v) {\n        serveAvatarFile = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const handleExternalProvider = async (externalProviderUrl, username, res) => {\n      const response = await fetch(externalProviderUrl.replace('{username}', username));\n      response.headers.forEach((value, key) => res.setHeader(key, value));\n      response.body.pipe(res);\n    };\n    // request /avatar/@name forces returning the svg\n    const userAvatarByUsername = async function (request, res, next) {\n      const req = request;\n      if (!req.url) {\n        return;\n      }\n      // replace removes the query string\n      const requestUsername = decodeURIComponent(req.url.slice(1).replace(/\\?.*$/, ''));\n      if (!requestUsername) {\n        res.writeHead(404);\n        res.end();\n        return;\n      }\n      setCacheAndDispositionHeaders(req, res);\n      const externalProviderUrl = settings.get('Accounts_AvatarExternalProviderUrl');\n      if (externalProviderUrl) {\n        void handleExternalProvider(externalProviderUrl, requestUsername, res);\n        return;\n      }\n      // if request starts with @ always return the svg letters\n      if (requestUsername[0] === '@') {\n        serveSvgAvatarInRequestedFormat({\n          nameOrUsername: requestUsername.slice(1),\n          req,\n          res\n        });\n        return;\n      }\n      const file = await Avatars.findOneByName(requestUsername);\n      if (file) {\n        void serveAvatarFile(file, req, res, next);\n        return;\n      }\n      // if still using \"letters fallback\"\n      if (!wasFallbackModified(req.headers['if-modified-since'])) {\n        res.writeHead(304);\n        res.end();\n        return;\n      }\n      // Use real name for SVG letters\n      if (settings.get('UI_Use_Name_Avatar')) {\n        const user = await Users.findOneByUsernameIgnoringCase(requestUsername, {\n          projection: {\n            name: 1\n          }\n        });\n        if (user !== null && user !== void 0 && user.name) {\n          serveSvgAvatarInRequestedFormat({\n            nameOrUsername: user.name,\n            req,\n            res\n          });\n          return;\n        }\n      }\n      serveSvgAvatarInRequestedFormat({\n        nameOrUsername: requestUsername,\n        req,\n        res\n      });\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","userAvatarByUsername","Avatars","Users","link","v","fetch","serverFetch","settings","serveSvgAvatarInRequestedFormat","wasFallbackModified","setCacheAndDispositionHeaders","serveAvatarFile","__reifyWaitForDeps__","handleExternalProvider","externalProviderUrl","username","res","response","replace","headers","forEach","value","key","setHeader","body","pipe","request","next","req","url","requestUsername","decodeURIComponent","slice","writeHead","end","get","nameOrUsername","file","findOneByName","user","findOneByUsernameIgnoringCase","projection","name","__reify_async_result__","_reifyError","self","async"],"sources":["server/routes/avatar/user.ts"],"sourcesContent":["import type { IncomingMessage, ServerResponse } from 'http';\n\nimport type { IIncomingMessage } from '@rocket.chat/core-typings';\nimport { Avatars, Users } from '@rocket.chat/models';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\nimport type { NextFunction } from 'connect';\n\nimport { settings } from '../../../app/settings/server';\nimport { serveSvgAvatarInRequestedFormat, wasFallbackModified, setCacheAndDispositionHeaders, serveAvatarFile } from './utils';\n\nconst handleExternalProvider = async (externalProviderUrl: string, username: string, res: ServerResponse): Promise<void> => {\n\tconst response = await fetch(externalProviderUrl.replace('{username}', username));\n\tresponse.headers.forEach((value, key) => res.setHeader(key, value));\n\tresponse.body.pipe(res);\n};\n// request /avatar/@name forces returning the svg\nexport const userAvatarByUsername = async function (request: IncomingMessage, res: ServerResponse, next: NextFunction) {\n\tconst req = request as IIncomingMessage;\n\n\tif (!req.url) {\n\t\treturn;\n\t}\n\n\t// replace removes the query string\n\tconst requestUsername = decodeURIComponent(req.url.slice(1).replace(/\\?.*$/, ''));\n\tif (!requestUsername) {\n\t\tres.writeHead(404);\n\t\tres.end();\n\t\treturn;\n\t}\n\n\tsetCacheAndDispositionHeaders(req, res);\n\n\tconst externalProviderUrl = settings.get<string>('Accounts_AvatarExternalProviderUrl');\n\tif (externalProviderUrl) {\n\t\tvoid handleExternalProvider(externalProviderUrl, requestUsername, res);\n\t\treturn;\n\t}\n\n\t// if request starts with @ always return the svg letters\n\tif (requestUsername[0] === '@') {\n\t\tserveSvgAvatarInRequestedFormat({ nameOrUsername: requestUsername.slice(1), req, res });\n\t\treturn;\n\t}\n\n\tconst file = await Avatars.findOneByName(requestUsername);\n\tif (file) {\n\t\tvoid serveAvatarFile(file, req, res, next);\n\t\treturn;\n\t}\n\n\t// if still using \"letters fallback\"\n\tif (!wasFallbackModified(req.headers['if-modified-since'])) {\n\t\tres.writeHead(304);\n\t\tres.end();\n\t\treturn;\n\t}\n\n\t// Use real name for SVG letters\n\tif (settings.get('UI_Use_Name_Avatar')) {\n\t\tconst user = await Users.findOneByUsernameIgnoringCase(requestUsername, {\n\t\t\tprojection: {\n\t\t\t\tname: 1,\n\t\t\t},\n\t\t});\n\n\t\tif (user?.name) {\n\t\t\tserveSvgAvatarInRequestedFormat({ nameOrUsername: user.name, req, res });\n\t\t\treturn;\n\t\t}\n\t}\n\n\tserveSvgAvatarInRequestedFormat({ nameOrUsername: requestUsername, req, res });\n};\n"],"mappings":";;;IAGAA,MAAA,CAAOC,MAAE;MAAAC,oBAAsB,EAAAA,CAAA,KAAAA;IAAsB;IAAA,IAAAC,OAAA,EAAAC,KAAA;IAAAJ,MAAA,CAAAK,IAAA;MAAAF,QAAAG,CAAA;QAAAH,OAAA,GAAAG,CAAA;MAAA;MAAAF,MAAAE,CAAA;QAAAF,KAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA;IAAAP,MAAA,CAAAK,IAAA;MAAAG,YAAAF,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAG,QAAA;IAAAT,MAAA,CAAAK,IAAA;MAAAI,SAAAH,CAAA;QAAAG,QAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,+BAAA,EAAAC,mBAAA,EAAAC,6BAAA,EAAAC,eAAA;IAAAb,MAAA,CAAAK,IAAA;MAAAK,gCAAAJ,CAAA;QAAAI,+BAAA,GAAAJ,CAAA;MAAA;MAAAK,oBAAAL,CAAA;QAAAK,mBAAA,GAAAL,CAAA;MAAA;MAAAM,8BAAAN,CAAA;QAAAM,6BAAA,GAAAN,CAAA;MAAA;MAAAO,gBAAAP,CAAA;QAAAO,eAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,oBAAA,WAAAA,oBAAA;IAOrD,MAAMC,sBAAsB,GAAG,MAAAA,CAAOC,mBAA2B,EAAEC,QAAgB,EAAEC,GAAmB,KAAmB;MAC1H,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACS,mBAAmB,CAACI,OAAO,CAAC,YAAY,EAAEH,QAAQ,CAAC,CAAC;MACjFE,QAAQ,CAACE,OAAO,CAACC,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAKN,GAAG,CAACO,SAAS,CAACD,GAAG,EAAED,KAAK,CAAC,CAAC;MACnEJ,QAAQ,CAACO,IAAI,CAACC,IAAI,CAACT,GAAG,CAAC;IACxB,CAAC;IACD;IACO,MAAMhB,oBAAoB,GAAG,eAAAA,CAAgB0B,OAAwB,EAAEV,GAAmB,EAAEW,IAAkB;MACpH,MAAMC,GAAG,GAAGF,OAA2B;MAEvC,IAAI,CAACE,GAAG,CAACC,GAAG,EAAE;QACb;MACD;MAEA;MACA,MAAMC,eAAe,GAAGC,kBAAkB,CAACH,GAAG,CAACC,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC,CAACd,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;MACjF,IAAI,CAACY,eAAe,EAAE;QACrBd,GAAG,CAACiB,SAAS,CAAC,GAAG,CAAC;QAClBjB,GAAG,CAACkB,GAAG,EAAE;QACT;MACD;MAEAxB,6BAA6B,CAACkB,GAAG,EAAEZ,GAAG,CAAC;MAEvC,MAAMF,mBAAmB,GAAGP,QAAQ,CAAC4B,GAAG,CAAS,oCAAoC,CAAC;MACtF,IAAIrB,mBAAmB,EAAE;QACxB,KAAKD,sBAAsB,CAACC,mBAAmB,EAAEgB,eAAe,EAAEd,GAAG,CAAC;QACtE;MACD;MAEA;MACA,IAAIc,eAAe,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAC/BtB,+BAA+B,CAAC;UAAE4B,cAAc,EAAEN,eAAe,CAACE,KAAK,CAAC,CAAC,CAAC;UAAEJ,GAAG;UAAEZ;QAAG,CAAE,CAAC;QACvF;MACD;MAEA,MAAMqB,IAAI,GAAG,MAAMpC,OAAO,CAACqC,aAAa,CAACR,eAAe,CAAC;MACzD,IAAIO,IAAI,EAAE;QACT,KAAK1B,eAAe,CAAC0B,IAAI,EAAET,GAAG,EAAEZ,GAAG,EAAEW,IAAI,CAAC;QAC1C;MACD;MAEA;MACA,IAAI,CAAClB,mBAAmB,CAACmB,GAAG,CAACT,OAAO,CAAC,mBAAmB,CAAC,CAAC,EAAE;QAC3DH,GAAG,CAACiB,SAAS,CAAC,GAAG,CAAC;QAClBjB,GAAG,CAACkB,GAAG,EAAE;QACT;MACD;MAEA;MACA,IAAI3B,QAAQ,CAAC4B,GAAG,CAAC,oBAAoB,CAAC,EAAE;QACvC,MAAMI,IAAI,GAAG,MAAMrC,KAAK,CAACsC,6BAA6B,CAACV,eAAe,EAAE;UACvEW,UAAU,EAAE;YACXC,IAAI,EAAE;;SAEP,CAAC;QAEF,IAAIH,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEG,IAAI,EAAE;UACflC,+BAA+B,CAAC;YAAE4B,cAAc,EAAEG,IAAI,CAACG,IAAI;YAAEd,GAAG;YAAEZ;UAAG,CAAE,CAAC;UACxE;QACD;MACD;MAEAR,+BAA+B,CAAC;QAAE4B,cAAc,EAAEN,eAAe;QAAEF,GAAG;QAAEZ;MAAG,CAAE,CAAC;IAC/E,CAAC;IAAC2B,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"78807d935906f58cde65ed3c7412fdc1a50ca8bc"}
