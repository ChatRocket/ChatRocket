{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/room/message/receiver/MessageServiceReceiver.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/application/room/message/receiver/MessageServiceReceiver.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/room/message/receiver/MessageServiceReceiver.ts","inputSourceMap":{"version":3,"file":"server/services/federation/application/room/message/receiver/MessageServiceReceiver.ts","sourceRoot":"","sources":["server/services/federation/application/room/message/receiver/MessageServiceReceiver.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,6BAA6B,EAAE,MAAM,2BAA2B,CAAC;AAQ1E,OAAO,EAAE,oCAAoC,EAAE,MAAM,+CAA+C,CAAC;AAGrG,MAAM,OAAO,gCAAiC,SAAQ,oCAAoC;IAE9E;IACA;IACA;IACA;IACA;IACA;IANX,YACW,mBAA0C,EAC1C,mBAA0C,EAC1C,sBAAgD,EAChD,mBAA0C,EAC1C,uBAAkD,EAClD,MAAyB;QAEnC,KAAK,CAAC,MAAM,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,uBAAuB,CAAC,CAAC;QAPvE,wBAAmB,GAAnB,mBAAmB,CAAuB;QAC1C,wBAAmB,GAAnB,mBAAmB,CAAuB;QAC1C,2BAAsB,GAAtB,sBAAsB,CAA0B;QAChD,wBAAmB,GAAnB,mBAAmB,CAAuB;QAC1C,4BAAuB,GAAvB,uBAAuB,CAA2B;QAClD,WAAM,GAAN,MAAM,CAAmB;IAGpC,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAAC,yBAA4D;QAC1F,MAAM,EACL,cAAc,EACd,KAAK,EACL,gBAAgB,EAChB,eAAe,EAAE,uBAAuB,EACxC,sBAAsB,EAAE,iBAAiB,GACzC,GAAG,yBAAyB,CAAC;QAE9B,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,4BAA4B,CAAC,cAAc,CAAC,CAAC;QAClG,IAAI,CAAC,aAAa,EAAE,CAAC;YACpB,OAAO;QACR,CAAC;QAED,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,4BAA4B,CAAC,gBAAgB,CAAC,CAAC;QACpG,IAAI,CAAC,aAAa,EAAE,CAAC;YACpB,OAAO;QACR,CAAC;QACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,CAAC;QAC9F,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,OAAO;QACR,CAAC;QACD,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,EAAE,CAAC;YAC7C,OAAO;QACR,CAAC;QACD,0DAA0D;QAC1D,MAAM,kBAAkB,GAAG,OAAO,CACjC,aAAa,CAAC,WAAW,EAAE,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,aAAa,CAAC,WAAW,EAAY,CAAC,CACrH,CAAC;QACF,IAAI,kBAAkB,EAAE,CAAC;YACxB,OAAO;QACR,CAAC;QAED,MAAM,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,EAAE,uBAAuB,CAAC,CAAC;IAC1G,CAAC;CACD","sourcesContent":["import { isMessageFromMatrixFederation } from '@rocket.chat/core-typings';\n\nimport type { IFederationBridge } from '../../../../domain/IFederationBridge';\nimport type { RocketChatFileAdapter } from '../../../../infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatMessageAdapter } from '../../../../infrastructure/rocket-chat/adapters/Message';\nimport type { RocketChatRoomAdapter } from '../../../../infrastructure/rocket-chat/adapters/Room';\nimport type { RocketChatSettingsAdapter } from '../../../../infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from '../../../../infrastructure/rocket-chat/adapters/User';\nimport { AbstractFederationApplicationService } from '../../../AbstractFederationApplicationService';\nimport type { FederationMessageReactionEventDto } from '../../input/MessageReceiverDto';\n\nexport class FederationMessageServiceReceiver extends AbstractFederationApplicationService {\n\tconstructor(\n\t\tprotected internalRoomAdapter: RocketChatRoomAdapter,\n\t\tprotected internalUserAdapter: RocketChatUserAdapter,\n\t\tprotected internalMessageAdapter: RocketChatMessageAdapter,\n\t\tprotected internalFileAdapter: RocketChatFileAdapter,\n\t\tprotected internalSettingsAdapter: RocketChatSettingsAdapter,\n\t\tprotected bridge: IFederationBridge,\n\t) {\n\t\tsuper(bridge, internalUserAdapter, internalFileAdapter, internalSettingsAdapter);\n\t}\n\n\tpublic async onMessageReaction(messageReactionEventInput: FederationMessageReactionEventDto): Promise<void> {\n\t\tconst {\n\t\t\texternalRoomId,\n\t\t\temoji,\n\t\t\texternalSenderId,\n\t\t\texternalEventId: externalReactionEventId,\n\t\t\texternalReactedEventId: externalMessageId,\n\t\t} = messageReactionEventInput;\n\n\t\tconst federatedRoom = await this.internalRoomAdapter.getFederatedRoomByExternalId(externalRoomId);\n\t\tif (!federatedRoom) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst federatedUser = await this.internalUserAdapter.getFederatedUserByExternalId(externalSenderId);\n\t\tif (!federatedUser) {\n\t\t\treturn;\n\t\t}\n\t\tconst message = await this.internalMessageAdapter.getMessageByFederationId(externalMessageId);\n\t\tif (!message) {\n\t\t\treturn;\n\t\t}\n\t\tif (!isMessageFromMatrixFederation(message)) {\n\t\t\treturn;\n\t\t}\n\t\t// TODO: move this to a Message entity in the domain layer\n\t\tconst userAlreadyReacted = Boolean(\n\t\t\tfederatedUser.getUsername() && message.reactions?.[emoji]?.usernames?.includes(federatedUser.getUsername() as string),\n\t\t);\n\t\tif (userAlreadyReacted) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.internalMessageAdapter.reactToMessage(federatedUser, message, emoji, externalReactionEventId);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/room/message/receiver/MessageServiceReceiver.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/application/room/message/receiver/MessageServiceReceiver.ts","inputSourceMap":{"version":3,"file":"server/services/federation/application/room/message/receiver/MessageServiceReceiver.ts","sourceRoot":"","sources":["server/services/federation/application/room/message/receiver/MessageServiceReceiver.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,6BAA6B,EAAE,MAAM,2BAA2B,CAAC;AAQ1E,OAAO,EAAE,oCAAoC,EAAE,MAAM,+CAA+C,CAAC;AAGrG,MAAM,OAAO,gCAAiC,SAAQ,oCAAoC;IAE9E;IACA;IACA;IACA;IACA;IACA;IANX,YACW,mBAA0C,EAC1C,mBAA0C,EAC1C,sBAAgD,EAChD,mBAA0C,EAC1C,uBAAkD,EAClD,MAAyB;QAEnC,KAAK,CAAC,MAAM,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,uBAAuB,CAAC,CAAC;QAPvE,wBAAmB,GAAnB,mBAAmB,CAAuB;QAC1C,wBAAmB,GAAnB,mBAAmB,CAAuB;QAC1C,2BAAsB,GAAtB,sBAAsB,CAA0B;QAChD,wBAAmB,GAAnB,mBAAmB,CAAuB;QAC1C,4BAAuB,GAAvB,uBAAuB,CAA2B;QAClD,WAAM,GAAN,MAAM,CAAmB;IAGpC,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAAC,yBAA4D;QAC1F,MAAM,EACL,cAAc,EACd,KAAK,EACL,gBAAgB,EAChB,eAAe,EAAE,uBAAuB,EACxC,sBAAsB,EAAE,iBAAiB,GACzC,GAAG,yBAAyB,CAAC;QAE9B,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,4BAA4B,CAAC,cAAc,CAAC,CAAC;QAClG,IAAI,CAAC,aAAa,EAAE,CAAC;YACpB,OAAO;QACR,CAAC;QAED,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,4BAA4B,CAAC,gBAAgB,CAAC,CAAC;QACpG,IAAI,CAAC,aAAa,EAAE,CAAC;YACpB,OAAO;QACR,CAAC;QACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,CAAC;QAC9F,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,OAAO;QACR,CAAC;QACD,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,EAAE,CAAC;YAC7C,OAAO;QACR,CAAC;QACD,0DAA0D;QAC1D,MAAM,kBAAkB,GAAG,OAAO,CACjC,aAAa,CAAC,WAAW,EAAE,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,aAAa,CAAC,WAAW,EAAY,CAAC,CACrH,CAAC;QACF,IAAI,kBAAkB,EAAE,CAAC;YACxB,OAAO;QACR,CAAC;QAED,MAAM,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,EAAE,uBAAuB,CAAC,CAAC;IAC1G,CAAC;CACD","sourcesContent":["import { isMessageFromMatrixFederation } from '@rocket.chat/core-typings';\n\nimport type { IFederationBridge } from '../../../../domain/IFederationBridge';\nimport type { RocketChatFileAdapter } from '../../../../infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatMessageAdapter } from '../../../../infrastructure/rocket-chat/adapters/Message';\nimport type { RocketChatRoomAdapter } from '../../../../infrastructure/rocket-chat/adapters/Room';\nimport type { RocketChatSettingsAdapter } from '../../../../infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from '../../../../infrastructure/rocket-chat/adapters/User';\nimport { AbstractFederationApplicationService } from '../../../AbstractFederationApplicationService';\nimport type { FederationMessageReactionEventDto } from '../../input/MessageReceiverDto';\n\nexport class FederationMessageServiceReceiver extends AbstractFederationApplicationService {\n\tconstructor(\n\t\tprotected internalRoomAdapter: RocketChatRoomAdapter,\n\t\tprotected internalUserAdapter: RocketChatUserAdapter,\n\t\tprotected internalMessageAdapter: RocketChatMessageAdapter,\n\t\tprotected internalFileAdapter: RocketChatFileAdapter,\n\t\tprotected internalSettingsAdapter: RocketChatSettingsAdapter,\n\t\tprotected bridge: IFederationBridge,\n\t) {\n\t\tsuper(bridge, internalUserAdapter, internalFileAdapter, internalSettingsAdapter);\n\t}\n\n\tpublic async onMessageReaction(messageReactionEventInput: FederationMessageReactionEventDto): Promise<void> {\n\t\tconst {\n\t\t\texternalRoomId,\n\t\t\temoji,\n\t\t\texternalSenderId,\n\t\t\texternalEventId: externalReactionEventId,\n\t\t\texternalReactedEventId: externalMessageId,\n\t\t} = messageReactionEventInput;\n\n\t\tconst federatedRoom = await this.internalRoomAdapter.getFederatedRoomByExternalId(externalRoomId);\n\t\tif (!federatedRoom) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst federatedUser = await this.internalUserAdapter.getFederatedUserByExternalId(externalSenderId);\n\t\tif (!federatedUser) {\n\t\t\treturn;\n\t\t}\n\t\tconst message = await this.internalMessageAdapter.getMessageByFederationId(externalMessageId);\n\t\tif (!message) {\n\t\t\treturn;\n\t\t}\n\t\tif (!isMessageFromMatrixFederation(message)) {\n\t\t\treturn;\n\t\t}\n\t\t// TODO: move this to a Message entity in the domain layer\n\t\tconst userAlreadyReacted = Boolean(\n\t\t\tfederatedUser.getUsername() && message.reactions?.[emoji]?.usernames?.includes(federatedUser.getUsername() as string),\n\t\t);\n\t\tif (userAlreadyReacted) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.internalMessageAdapter.reactToMessage(federatedUser, message, emoji, externalReactionEventId);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      FederationMessageServiceReceiver: () => FederationMessageServiceReceiver\n    });\n    let isMessageFromMatrixFederation;\n    module.link(\"@rocket.chat/core-typings\", {\n      isMessageFromMatrixFederation(v) {\n        isMessageFromMatrixFederation = v;\n      }\n    }, 0);\n    let AbstractFederationApplicationService;\n    module.link(\"../../../AbstractFederationApplicationService\", {\n      AbstractFederationApplicationService(v) {\n        AbstractFederationApplicationService = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class FederationMessageServiceReceiver extends AbstractFederationApplicationService {\n      constructor(internalRoomAdapter, internalUserAdapter, internalMessageAdapter, internalFileAdapter, internalSettingsAdapter, bridge) {\n        super(bridge, internalUserAdapter, internalFileAdapter, internalSettingsAdapter);\n        this.internalRoomAdapter = void 0;\n        this.internalUserAdapter = void 0;\n        this.internalMessageAdapter = void 0;\n        this.internalFileAdapter = void 0;\n        this.internalSettingsAdapter = void 0;\n        this.bridge = void 0;\n        this.internalRoomAdapter = internalRoomAdapter;\n        this.internalUserAdapter = internalUserAdapter;\n        this.internalMessageAdapter = internalMessageAdapter;\n        this.internalFileAdapter = internalFileAdapter;\n        this.internalSettingsAdapter = internalSettingsAdapter;\n        this.bridge = bridge;\n      }\n      async onMessageReaction(messageReactionEventInput) {\n        var _message$reactions, _message$reactions$em, _message$reactions$em2;\n        const {\n          externalRoomId,\n          emoji,\n          externalSenderId,\n          externalEventId: externalReactionEventId,\n          externalReactedEventId: externalMessageId\n        } = messageReactionEventInput;\n        const federatedRoom = await this.internalRoomAdapter.getFederatedRoomByExternalId(externalRoomId);\n        if (!federatedRoom) {\n          return;\n        }\n        const federatedUser = await this.internalUserAdapter.getFederatedUserByExternalId(externalSenderId);\n        if (!federatedUser) {\n          return;\n        }\n        const message = await this.internalMessageAdapter.getMessageByFederationId(externalMessageId);\n        if (!message) {\n          return;\n        }\n        if (!isMessageFromMatrixFederation(message)) {\n          return;\n        }\n        // TODO: move this to a Message entity in the domain layer\n        const userAlreadyReacted = Boolean(federatedUser.getUsername() && ((_message$reactions = message.reactions) === null || _message$reactions === void 0 ? void 0 : (_message$reactions$em = _message$reactions[emoji]) === null || _message$reactions$em === void 0 ? void 0 : (_message$reactions$em2 = _message$reactions$em.usernames) === null || _message$reactions$em2 === void 0 ? void 0 : _message$reactions$em2.includes(federatedUser.getUsername())));\n        if (userAlreadyReacted) {\n          return;\n        }\n        await this.internalMessageAdapter.reactToMessage(federatedUser, message, emoji, externalReactionEventId);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","FederationMessageServiceReceiver","isMessageFromMatrixFederation","link","v","AbstractFederationApplicationService","__reifyWaitForDeps__","constructor","internalRoomAdapter","internalUserAdapter","internalMessageAdapter","internalFileAdapter","internalSettingsAdapter","bridge","onMessageReaction","messageReactionEventInput","_message$reactions","_message$reactions$em","_message$reactions$em2","externalRoomId","emoji","externalSenderId","externalEventId","externalReactionEventId","externalReactedEventId","externalMessageId","federatedRoom","getFederatedRoomByExternalId","federatedUser","getFederatedUserByExternalId","message","getMessageByFederationId","userAlreadyReacted","Boolean","getUsername","reactions","usernames","includes","reactToMessage","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/federation/application/room/message/receiver/MessageServiceReceiver.ts"],"sourcesContent":["import { isMessageFromMatrixFederation } from '@rocket.chat/core-typings';\n\nimport type { IFederationBridge } from '../../../../domain/IFederationBridge';\nimport type { RocketChatFileAdapter } from '../../../../infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatMessageAdapter } from '../../../../infrastructure/rocket-chat/adapters/Message';\nimport type { RocketChatRoomAdapter } from '../../../../infrastructure/rocket-chat/adapters/Room';\nimport type { RocketChatSettingsAdapter } from '../../../../infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from '../../../../infrastructure/rocket-chat/adapters/User';\nimport { AbstractFederationApplicationService } from '../../../AbstractFederationApplicationService';\nimport type { FederationMessageReactionEventDto } from '../../input/MessageReceiverDto';\n\nexport class FederationMessageServiceReceiver extends AbstractFederationApplicationService {\n\tconstructor(\n\t\tprotected internalRoomAdapter: RocketChatRoomAdapter,\n\t\tprotected internalUserAdapter: RocketChatUserAdapter,\n\t\tprotected internalMessageAdapter: RocketChatMessageAdapter,\n\t\tprotected internalFileAdapter: RocketChatFileAdapter,\n\t\tprotected internalSettingsAdapter: RocketChatSettingsAdapter,\n\t\tprotected bridge: IFederationBridge,\n\t) {\n\t\tsuper(bridge, internalUserAdapter, internalFileAdapter, internalSettingsAdapter);\n\t}\n\n\tpublic async onMessageReaction(messageReactionEventInput: FederationMessageReactionEventDto): Promise<void> {\n\t\tconst {\n\t\t\texternalRoomId,\n\t\t\temoji,\n\t\t\texternalSenderId,\n\t\t\texternalEventId: externalReactionEventId,\n\t\t\texternalReactedEventId: externalMessageId,\n\t\t} = messageReactionEventInput;\n\n\t\tconst federatedRoom = await this.internalRoomAdapter.getFederatedRoomByExternalId(externalRoomId);\n\t\tif (!federatedRoom) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst federatedUser = await this.internalUserAdapter.getFederatedUserByExternalId(externalSenderId);\n\t\tif (!federatedUser) {\n\t\t\treturn;\n\t\t}\n\t\tconst message = await this.internalMessageAdapter.getMessageByFederationId(externalMessageId);\n\t\tif (!message) {\n\t\t\treturn;\n\t\t}\n\t\tif (!isMessageFromMatrixFederation(message)) {\n\t\t\treturn;\n\t\t}\n\t\t// TODO: move this to a Message entity in the domain layer\n\t\tconst userAlreadyReacted = Boolean(\n\t\t\tfederatedUser.getUsername() && message.reactions?.[emoji]?.usernames?.includes(federatedUser.getUsername() as string),\n\t\t);\n\t\tif (userAlreadyReacted) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.internalMessageAdapter.reactToMessage(federatedUser, message, emoji, externalReactionEventId);\n\t}\n}\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAE;MAAAC,gCAAqC,EAAAA,CAAA,KAAAA;IAA4B;IAAA,IAAAC,6BAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,8BAAAE,CAAA;QAAAF,6BAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,oCAAA;IAAAN,MAAA,CAAAI,IAAA;MAAAE,qCAAAD,CAAA;QAAAC,oCAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,oBAAA,WAAAA,oBAAA;IAWpE,MAAOL,gCAAiC,SAAQI,oCAAoC;MACzFE,YACWC,mBAA0C,EAC1CC,mBAA0C,EAC1CC,sBAAgD,EAChDC,mBAA0C,EAC1CC,uBAAkD,EAClDC,MAAyB;QAEnC,KAAK,CAACA,MAAM,EAAEJ,mBAAmB,EAAEE,mBAAmB,EAAEC,uBAAuB,CAAC;QAAC,KAPvEJ,mBAAA;QAAA,KACAC,mBAAA;QAAA,KACAC,sBAAA;QAAA,KACAC,mBAAA;QAAA,KACAC,uBAAA;QAAA,KACAC,MAAA;QALA,KAAAL,mBAAmB,GAAnBA,mBAAmB;QACnB,KAAAC,mBAAmB,GAAnBA,mBAAmB;QACnB,KAAAC,sBAAsB,GAAtBA,sBAAsB;QACtB,KAAAC,mBAAmB,GAAnBA,mBAAmB;QACnB,KAAAC,uBAAuB,GAAvBA,uBAAuB;QACvB,KAAAC,MAAM,GAANA,MAAM;MAGjB;MAEO,MAAMC,iBAAiBA,CAACC,yBAA4D;QAAA,IAAAC,kBAAA,EAAAC,qBAAA,EAAAC,sBAAA;QAC1F,MAAM;UACLC,cAAc;UACdC,KAAK;UACLC,gBAAgB;UAChBC,eAAe,EAAEC,uBAAuB;UACxCC,sBAAsB,EAAEC;QAAiB,CACzC,GAAGV,yBAAyB;QAE7B,MAAMW,aAAa,GAAG,MAAM,IAAI,CAAClB,mBAAmB,CAACmB,4BAA4B,CAACR,cAAc,CAAC;QACjG,IAAI,CAACO,aAAa,EAAE;UACnB;QACD;QAEA,MAAME,aAAa,GAAG,MAAM,IAAI,CAACnB,mBAAmB,CAACoB,4BAA4B,CAACR,gBAAgB,CAAC;QACnG,IAAI,CAACO,aAAa,EAAE;UACnB;QACD;QACA,MAAME,OAAO,GAAG,MAAM,IAAI,CAACpB,sBAAsB,CAACqB,wBAAwB,CAACN,iBAAiB,CAAC;QAC7F,IAAI,CAACK,OAAO,EAAE;UACb;QACD;QACA,IAAI,CAAC5B,6BAA6B,CAAC4B,OAAO,CAAC,EAAE;UAC5C;QACD;QACA;QACA,MAAME,kBAAkB,GAAGC,OAAO,CACjCL,aAAa,CAACM,WAAW,EAAE,MAAAlB,kBAAA,GAAIc,OAAO,CAACK,SAAS,cAAAnB,kBAAA,wBAAAC,qBAAA,GAAjBD,kBAAA,CAAoBI,KAAK,CAAC,cAAAH,qBAAA,wBAAAC,sBAAA,GAA1BD,qBAAA,CAA4BmB,SAAS,cAAAlB,sBAAA,uBAArCA,sBAAA,CAAuCmB,QAAQ,CAACT,aAAa,CAACM,WAAW,EAAY,CAAC,EACrH;QACD,IAAIF,kBAAkB,EAAE;UACvB;QACD;QAEA,MAAM,IAAI,CAACtB,sBAAsB,CAAC4B,cAAc,CAACV,aAAa,EAAEE,OAAO,EAAEV,KAAK,EAAEG,uBAAuB,CAAC;MACzG;;IACAgB,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1a625724cc818daf7952b2480a6ded46c65ba6a7"}
