{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/lib/rooms.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/lib/rooms.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/lib/rooms.ts","inputSourceMap":{"version":3,"file":"app/api/server/lib/rooms.ts","sourceRoot":"","sources":["app/api/server/lib/rooms.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, ISubscription, RoomAdminFieldsType, RoomType } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions } from '@rocket.chat/models';\nimport type { FindOptions, Sort } from 'mongodb';\n\nimport { adminFields } from '../../../../lib/rooms/adminFields';\nimport { hasAtLeastOnePermissionAsync, hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\n\nexport async function findAdminRooms({\n\tuid,\n\tfilter,\n\ttypes = [],\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\tfilter: string;\n\ttypes: Array<RoomType | 'discussions' | 'teams'>;\n\tpagination: { offset: number; count: number; sort: Sort };\n}): Promise<{\n\trooms: IRoom[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n}> {\n\tif (!(await hasPermissionAsync(uid, 'view-room-administration'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst name = filter?.trim();\n\tconst discussion = types?.includes('discussions');\n\tconst includeTeams = types?.includes('teams');\n\tconst typesToRemove = ['discussions', 'teams'];\n\tconst showTypes = Array.isArray(types) ? types.filter((type): type is RoomType => !typesToRemove.includes(type)) : [];\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: adminFields,\n\t\tskip: offset,\n\t\tlimit: count,\n\t};\n\n\tconst result = Rooms.findByNameOrFnameContainingAndTypes(name, showTypes, discussion, includeTeams, options);\n\n\tconst { cursor, totalCount } = result;\n\n\tconst [rooms, total] = await Promise.all([cursor.sort(sort || { default: -1, name: 1 }).toArray(), totalCount]);\n\n\treturn {\n\t\trooms,\n\t\tcount: rooms.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findAdminRoom({ uid, rid }: { uid: string; rid: string }): Promise<Pick<IRoom, RoomAdminFieldsType> | null> {\n\tif (!(await hasPermissionAsync(uid, 'view-room-administration'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\treturn Rooms.findOneById(rid, { projection: adminFields });\n}\n\nexport async function findChannelAndPrivateAutocomplete({ uid, selector }: { uid: string; selector: { name: string } }): Promise<{\n\titems: IRoom[];\n}> {\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst userRoomsIds = (await Subscriptions.findByUserId(uid, { projection: { rid: 1 } }).toArray()).map(\n\t\t(item: Pick<ISubscription, 'rid'>) => item.rid,\n\t);\n\n\tconst rooms = await Rooms.findRoomsWithoutDiscussionsByRoomIds(selector.name, userRoomsIds, options).toArray();\n\n\treturn {\n\t\titems: rooms,\n\t};\n}\n\nexport async function findAdminRoomsAutocomplete({ uid, selector }: { uid: string; selector: { name: string } }): Promise<{\n\titems: IRoom[];\n}> {\n\tif (!(await hasAtLeastOnePermissionAsync(uid, ['view-room-administration', 'can-audit']))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t\tencrypted: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst rooms = await Rooms.findRoomsByNameOrFnameStarting(selector.name, options).toArray();\n\n\treturn {\n\t\titems: rooms,\n\t};\n}\n\nexport async function findChannelAndPrivateAutocompleteWithPagination({\n\tuid,\n\tselector,\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\tselector: { name: string };\n\tpagination: { offset: number; count: number; sort: Sort };\n}): Promise<{\n\titems: IRoom[];\n\ttotal: number;\n}> {\n\tconst userRoomsIds = (await Subscriptions.findByUserId(uid, { projection: { rid: 1 } }).toArray()).map(\n\t\t(item: Pick<ISubscription, 'rid'>) => item.rid,\n\t);\n\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t};\n\n\tconst { cursor, totalCount } = Rooms.findPaginatedRoomsWithoutDiscussionsByRoomIds(selector.name, userRoomsIds, options);\n\n\tconst [rooms, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\titems: rooms,\n\t\ttotal,\n\t};\n}\n\nexport async function findRoomsAvailableForTeams({ uid, name }: { uid: string; name: string }): Promise<{\n\titems: IRoom[];\n}> {\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst userRooms = (\n\t\t(await Subscriptions.findByUserIdAndRoles(uid, ['owner'], { projection: { rid: 1 } }).toArray()) as Pick<ISubscription, 'rid'>[]\n\t).map((item) => item.rid);\n\n\tconst rooms = await Rooms.findChannelAndGroupListWithoutTeamsByNameStartingByOwner(name, userRooms, options).toArray();\n\n\treturn {\n\t\titems: rooms,\n\t};\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/lib/rooms.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/lib/rooms.ts","inputSourceMap":{"version":3,"file":"app/api/server/lib/rooms.ts","sourceRoot":"","sources":["app/api/server/lib/rooms.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAG3D,OAAO,EAAE,WAAW,EAAE,MAAM,mCAAmC,CAAC;AAChE,OAAO,EAAE,4BAA4B,EAAE,kBAAkB,EAAE,MAAM,uDAAuD,CAAC;AAEzH,MAAM,CAAC,KAAK,UAAU,cAAc,CAAC,EACpC,GAAG,EACH,MAAM,EACN,KAAK,GAAG,EAAE,EACV,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAMnC;IAMA,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,GAAG,EAAE,0BAA0B,CAAC,CAAC,EAAE,CAAC;QAClE,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;IACzC,CAAC;IACD,MAAM,IAAI,GAAG,MAAM,EAAE,IAAI,EAAE,CAAC;IAC5B,MAAM,UAAU,GAAG,KAAK,EAAE,QAAQ,CAAC,aAAa,CAAC,CAAC;IAClD,MAAM,YAAY,GAAG,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC9C,MAAM,aAAa,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IAC/C,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAoB,EAAE,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACtH,MAAM,OAAO,GAAuB;QACnC,UAAU,EAAE,WAAW;QACvB,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,KAAK;KACZ,CAAC;IAEF,MAAM,MAAM,GAAG,KAAK,CAAC,mCAAmC,CAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;IAE7G,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC;IAEtC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;IAEhH,OAAO;QACN,KAAK;QACL,KAAK,EAAE,KAAK,CAAC,MAAM;QACnB,MAAM;QACN,KAAK;KACL,CAAC;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,EAAE,GAAG,EAAE,GAAG,EAAgC;IAC7E,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,GAAG,EAAE,0BAA0B,CAAC,CAAC,EAAE,CAAC;QAClE,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;IACzC,CAAC;IAED,OAAO,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,CAAC;AAC5D,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,iCAAiC,CAAC,EAAE,GAAG,EAAE,QAAQ,EAA+C;IAGrH,MAAM,OAAO,GAAuB;QACnC,UAAU,EAAE;YACX,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC;YACP,CAAC,EAAE,CAAC;YACJ,UAAU,EAAE,CAAC;SACb;QACD,KAAK,EAAE,EAAE;QACT,IAAI,EAAE;YACL,IAAI,EAAE,CAAC;SACP;KACD,CAAC;IAEF,MAAM,YAAY,GAAG,CAAC,MAAM,aAAa,CAAC,YAAY,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CACrG,CAAC,IAAgC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAC9C,CAAC;IAEF,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,oCAAoC,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;IAE/G,OAAO;QACN,KAAK,EAAE,KAAK;KACZ,CAAC;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,0BAA0B,CAAC,EAAE,GAAG,EAAE,QAAQ,EAA+C;IAG9G,IAAI,CAAC,CAAC,MAAM,4BAA4B,CAAC,GAAG,EAAE,CAAC,0BAA0B,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;QAC3F,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;IACzC,CAAC;IACD,MAAM,OAAO,GAAuB;QACnC,UAAU,EAAE;YACX,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC;YACP,CAAC,EAAE,CAAC;YACJ,UAAU,EAAE,CAAC;YACb,SAAS,EAAE,CAAC;SACZ;QACD,KAAK,EAAE,EAAE;QACT,IAAI,EAAE;YACL,IAAI,EAAE,CAAC;SACP;KACD,CAAC;IAEF,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,8BAA8B,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;IAE3F,OAAO;QACN,KAAK,EAAE,KAAK;KACZ,CAAC;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,+CAA+C,CAAC,EACrE,GAAG,EACH,QAAQ,EACR,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAKnC;IAIA,MAAM,YAAY,GAAG,CAAC,MAAM,aAAa,CAAC,YAAY,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CACrG,CAAC,IAAgC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAC9C,CAAC;IAEF,MAAM,OAAO,GAAuB;QACnC,UAAU,EAAE;YACX,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC;YACP,CAAC,EAAE,CAAC;YACJ,UAAU,EAAE,CAAC;SACb;QACD,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE;QACzB,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,KAAK;KACZ,CAAC;IAEF,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC,6CAA6C,CAAC,QAAQ,CAAC,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;IAEzH,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;IAEzE,OAAO;QACN,KAAK,EAAE,KAAK;QACZ,KAAK;KACL,CAAC;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,0BAA0B,CAAC,EAAE,GAAG,EAAE,IAAI,EAAiC;IAG5F,MAAM,OAAO,GAAuB;QACnC,UAAU,EAAE;YACX,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC;YACP,CAAC,EAAE,CAAC;YACJ,UAAU,EAAE,CAAC;SACb;QACD,KAAK,EAAE,EAAE;QACT,IAAI,EAAE;YACL,IAAI,EAAE,CAAC;SACP;KACD,CAAC;IAEF,MAAM,SAAS,GACd,CAAC,MAAM,aAAa,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAC/F,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAE1B,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,wDAAwD,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;IAEvH,OAAO;QACN,KAAK,EAAE,KAAK;KACZ,CAAC;AACH,CAAC","sourcesContent":["import type { IRoom, ISubscription, RoomAdminFieldsType, RoomType } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions } from '@rocket.chat/models';\nimport type { FindOptions, Sort } from 'mongodb';\n\nimport { adminFields } from '../../../../lib/rooms/adminFields';\nimport { hasAtLeastOnePermissionAsync, hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\n\nexport async function findAdminRooms({\n\tuid,\n\tfilter,\n\ttypes = [],\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\tfilter: string;\n\ttypes: Array<RoomType | 'discussions' | 'teams'>;\n\tpagination: { offset: number; count: number; sort: Sort };\n}): Promise<{\n\trooms: IRoom[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n}> {\n\tif (!(await hasPermissionAsync(uid, 'view-room-administration'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst name = filter?.trim();\n\tconst discussion = types?.includes('discussions');\n\tconst includeTeams = types?.includes('teams');\n\tconst typesToRemove = ['discussions', 'teams'];\n\tconst showTypes = Array.isArray(types) ? types.filter((type): type is RoomType => !typesToRemove.includes(type)) : [];\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: adminFields,\n\t\tskip: offset,\n\t\tlimit: count,\n\t};\n\n\tconst result = Rooms.findByNameOrFnameContainingAndTypes(name, showTypes, discussion, includeTeams, options);\n\n\tconst { cursor, totalCount } = result;\n\n\tconst [rooms, total] = await Promise.all([cursor.sort(sort || { default: -1, name: 1 }).toArray(), totalCount]);\n\n\treturn {\n\t\trooms,\n\t\tcount: rooms.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findAdminRoom({ uid, rid }: { uid: string; rid: string }): Promise<Pick<IRoom, RoomAdminFieldsType> | null> {\n\tif (!(await hasPermissionAsync(uid, 'view-room-administration'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\treturn Rooms.findOneById(rid, { projection: adminFields });\n}\n\nexport async function findChannelAndPrivateAutocomplete({ uid, selector }: { uid: string; selector: { name: string } }): Promise<{\n\titems: IRoom[];\n}> {\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst userRoomsIds = (await Subscriptions.findByUserId(uid, { projection: { rid: 1 } }).toArray()).map(\n\t\t(item: Pick<ISubscription, 'rid'>) => item.rid,\n\t);\n\n\tconst rooms = await Rooms.findRoomsWithoutDiscussionsByRoomIds(selector.name, userRoomsIds, options).toArray();\n\n\treturn {\n\t\titems: rooms,\n\t};\n}\n\nexport async function findAdminRoomsAutocomplete({ uid, selector }: { uid: string; selector: { name: string } }): Promise<{\n\titems: IRoom[];\n}> {\n\tif (!(await hasAtLeastOnePermissionAsync(uid, ['view-room-administration', 'can-audit']))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t\tencrypted: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst rooms = await Rooms.findRoomsByNameOrFnameStarting(selector.name, options).toArray();\n\n\treturn {\n\t\titems: rooms,\n\t};\n}\n\nexport async function findChannelAndPrivateAutocompleteWithPagination({\n\tuid,\n\tselector,\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\tselector: { name: string };\n\tpagination: { offset: number; count: number; sort: Sort };\n}): Promise<{\n\titems: IRoom[];\n\ttotal: number;\n}> {\n\tconst userRoomsIds = (await Subscriptions.findByUserId(uid, { projection: { rid: 1 } }).toArray()).map(\n\t\t(item: Pick<ISubscription, 'rid'>) => item.rid,\n\t);\n\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t};\n\n\tconst { cursor, totalCount } = Rooms.findPaginatedRoomsWithoutDiscussionsByRoomIds(selector.name, userRoomsIds, options);\n\n\tconst [rooms, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\titems: rooms,\n\t\ttotal,\n\t};\n}\n\nexport async function findRoomsAvailableForTeams({ uid, name }: { uid: string; name: string }): Promise<{\n\titems: IRoom[];\n}> {\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst userRooms = (\n\t\t(await Subscriptions.findByUserIdAndRoles(uid, ['owner'], { projection: { rid: 1 } }).toArray()) as Pick<ISubscription, 'rid'>[]\n\t).map((item) => item.rid);\n\n\tconst rooms = await Rooms.findChannelAndGroupListWithoutTeamsByNameStartingByOwner(name, userRooms, options).toArray();\n\n\treturn {\n\t\titems: rooms,\n\t};\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      findAdminRooms: () => findAdminRooms,\n      findAdminRoom: () => findAdminRoom,\n      findChannelAndPrivateAutocomplete: () => findChannelAndPrivateAutocomplete,\n      findAdminRoomsAutocomplete: () => findAdminRoomsAutocomplete,\n      findChannelAndPrivateAutocompleteWithPagination: () => findChannelAndPrivateAutocompleteWithPagination,\n      findRoomsAvailableForTeams: () => findRoomsAvailableForTeams\n    });\n    let Rooms, Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 0);\n    let adminFields;\n    module.link(\"../../../../lib/rooms/adminFields\", {\n      adminFields(v) {\n        adminFields = v;\n      }\n    }, 1);\n    let hasAtLeastOnePermissionAsync, hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasAtLeastOnePermissionAsync(v) {\n        hasAtLeastOnePermissionAsync = v;\n      },\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function findAdminRooms(_ref) {\n      let {\n        uid,\n        filter,\n        types = [],\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref;\n      if (!(await hasPermissionAsync(uid, 'view-room-administration'))) {\n        throw new Error('error-not-authorized');\n      }\n      const name = filter === null || filter === void 0 ? void 0 : filter.trim();\n      const discussion = types === null || types === void 0 ? void 0 : types.includes('discussions');\n      const includeTeams = types === null || types === void 0 ? void 0 : types.includes('teams');\n      const typesToRemove = ['discussions', 'teams'];\n      const showTypes = Array.isArray(types) ? types.filter(type => !typesToRemove.includes(type)) : [];\n      const options = {\n        projection: adminFields,\n        skip: offset,\n        limit: count\n      };\n      const result = Rooms.findByNameOrFnameContainingAndTypes(name, showTypes, discussion, includeTeams, options);\n      const {\n        cursor,\n        totalCount\n      } = result;\n      const [rooms, total] = await Promise.all([cursor.sort(sort || {\n        default: -1,\n        name: 1\n      }).toArray(), totalCount]);\n      return {\n        rooms,\n        count: rooms.length,\n        offset,\n        total\n      };\n    }\n    async function findAdminRoom(_ref2) {\n      let {\n        uid,\n        rid\n      } = _ref2;\n      if (!(await hasPermissionAsync(uid, 'view-room-administration'))) {\n        throw new Error('error-not-authorized');\n      }\n      return Rooms.findOneById(rid, {\n        projection: adminFields\n      });\n    }\n    async function findChannelAndPrivateAutocomplete(_ref3) {\n      let {\n        uid,\n        selector\n      } = _ref3;\n      const options = {\n        projection: {\n          _id: 1,\n          fname: 1,\n          name: 1,\n          t: 1,\n          avatarETag: 1\n        },\n        limit: 10,\n        sort: {\n          name: 1\n        }\n      };\n      const userRoomsIds = (await Subscriptions.findByUserId(uid, {\n        projection: {\n          rid: 1\n        }\n      }).toArray()).map(item => item.rid);\n      const rooms = await Rooms.findRoomsWithoutDiscussionsByRoomIds(selector.name, userRoomsIds, options).toArray();\n      return {\n        items: rooms\n      };\n    }\n    async function findAdminRoomsAutocomplete(_ref4) {\n      let {\n        uid,\n        selector\n      } = _ref4;\n      if (!(await hasAtLeastOnePermissionAsync(uid, ['view-room-administration', 'can-audit']))) {\n        throw new Error('error-not-authorized');\n      }\n      const options = {\n        projection: {\n          _id: 1,\n          fname: 1,\n          name: 1,\n          t: 1,\n          avatarETag: 1,\n          encrypted: 1\n        },\n        limit: 10,\n        sort: {\n          name: 1\n        }\n      };\n      const rooms = await Rooms.findRoomsByNameOrFnameStarting(selector.name, options).toArray();\n      return {\n        items: rooms\n      };\n    }\n    async function findChannelAndPrivateAutocompleteWithPagination(_ref5) {\n      let {\n        uid,\n        selector,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref5;\n      const userRoomsIds = (await Subscriptions.findByUserId(uid, {\n        projection: {\n          rid: 1\n        }\n      }).toArray()).map(item => item.rid);\n      const options = {\n        projection: {\n          _id: 1,\n          fname: 1,\n          name: 1,\n          t: 1,\n          avatarETag: 1\n        },\n        sort: sort || {\n          name: 1\n        },\n        skip: offset,\n        limit: count\n      };\n      const {\n        cursor,\n        totalCount\n      } = Rooms.findPaginatedRoomsWithoutDiscussionsByRoomIds(selector.name, userRoomsIds, options);\n      const [rooms, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        items: rooms,\n        total\n      };\n    }\n    async function findRoomsAvailableForTeams(_ref6) {\n      let {\n        uid,\n        name\n      } = _ref6;\n      const options = {\n        projection: {\n          _id: 1,\n          fname: 1,\n          name: 1,\n          t: 1,\n          avatarETag: 1\n        },\n        limit: 10,\n        sort: {\n          name: 1\n        }\n      };\n      const userRooms = (await Subscriptions.findByUserIdAndRoles(uid, ['owner'], {\n        projection: {\n          rid: 1\n        }\n      }).toArray()).map(item => item.rid);\n      const rooms = await Rooms.findChannelAndGroupListWithoutTeamsByNameStartingByOwner(name, userRooms, options).toArray();\n      return {\n        items: rooms\n      };\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","findAdminRooms","findAdminRoom","findChannelAndPrivateAutocomplete","findAdminRoomsAutocomplete","findChannelAndPrivateAutocompleteWithPagination","findRoomsAvailableForTeams","Rooms","Subscriptions","link","v","adminFields","hasAtLeastOnePermissionAsync","hasPermissionAsync","__reifyWaitForDeps__","_ref","uid","filter","types","pagination","offset","count","sort","Error","name","trim","discussion","includes","includeTeams","typesToRemove","showTypes","Array","isArray","type","options","projection","skip","limit","result","findByNameOrFnameContainingAndTypes","cursor","totalCount","rooms","total","Promise","all","default","toArray","length","_ref2","rid","findOneById","_ref3","selector","_id","fname","t","avatarETag","userRoomsIds","findByUserId","map","item","findRoomsWithoutDiscussionsByRoomIds","items","_ref4","encrypted","findRoomsByNameOrFnameStarting","_ref5","findPaginatedRoomsWithoutDiscussionsByRoomIds","_ref6","userRooms","findByUserIdAndRoles","findChannelAndGroupListWithoutTeamsByNameStartingByOwner","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/lib/rooms.ts"],"sourcesContent":["import type { IRoom, ISubscription, RoomAdminFieldsType, RoomType } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions } from '@rocket.chat/models';\nimport type { FindOptions, Sort } from 'mongodb';\n\nimport { adminFields } from '../../../../lib/rooms/adminFields';\nimport { hasAtLeastOnePermissionAsync, hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\n\nexport async function findAdminRooms({\n\tuid,\n\tfilter,\n\ttypes = [],\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\tfilter: string;\n\ttypes: Array<RoomType | 'discussions' | 'teams'>;\n\tpagination: { offset: number; count: number; sort: Sort };\n}): Promise<{\n\trooms: IRoom[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n}> {\n\tif (!(await hasPermissionAsync(uid, 'view-room-administration'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst name = filter?.trim();\n\tconst discussion = types?.includes('discussions');\n\tconst includeTeams = types?.includes('teams');\n\tconst typesToRemove = ['discussions', 'teams'];\n\tconst showTypes = Array.isArray(types) ? types.filter((type): type is RoomType => !typesToRemove.includes(type)) : [];\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: adminFields,\n\t\tskip: offset,\n\t\tlimit: count,\n\t};\n\n\tconst result = Rooms.findByNameOrFnameContainingAndTypes(name, showTypes, discussion, includeTeams, options);\n\n\tconst { cursor, totalCount } = result;\n\n\tconst [rooms, total] = await Promise.all([cursor.sort(sort || { default: -1, name: 1 }).toArray(), totalCount]);\n\n\treturn {\n\t\trooms,\n\t\tcount: rooms.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findAdminRoom({ uid, rid }: { uid: string; rid: string }): Promise<Pick<IRoom, RoomAdminFieldsType> | null> {\n\tif (!(await hasPermissionAsync(uid, 'view-room-administration'))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\n\treturn Rooms.findOneById(rid, { projection: adminFields });\n}\n\nexport async function findChannelAndPrivateAutocomplete({ uid, selector }: { uid: string; selector: { name: string } }): Promise<{\n\titems: IRoom[];\n}> {\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst userRoomsIds = (await Subscriptions.findByUserId(uid, { projection: { rid: 1 } }).toArray()).map(\n\t\t(item: Pick<ISubscription, 'rid'>) => item.rid,\n\t);\n\n\tconst rooms = await Rooms.findRoomsWithoutDiscussionsByRoomIds(selector.name, userRoomsIds, options).toArray();\n\n\treturn {\n\t\titems: rooms,\n\t};\n}\n\nexport async function findAdminRoomsAutocomplete({ uid, selector }: { uid: string; selector: { name: string } }): Promise<{\n\titems: IRoom[];\n}> {\n\tif (!(await hasAtLeastOnePermissionAsync(uid, ['view-room-administration', 'can-audit']))) {\n\t\tthrow new Error('error-not-authorized');\n\t}\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t\tencrypted: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst rooms = await Rooms.findRoomsByNameOrFnameStarting(selector.name, options).toArray();\n\n\treturn {\n\t\titems: rooms,\n\t};\n}\n\nexport async function findChannelAndPrivateAutocompleteWithPagination({\n\tuid,\n\tselector,\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\tselector: { name: string };\n\tpagination: { offset: number; count: number; sort: Sort };\n}): Promise<{\n\titems: IRoom[];\n\ttotal: number;\n}> {\n\tconst userRoomsIds = (await Subscriptions.findByUserId(uid, { projection: { rid: 1 } }).toArray()).map(\n\t\t(item: Pick<ISubscription, 'rid'>) => item.rid,\n\t);\n\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t};\n\n\tconst { cursor, totalCount } = Rooms.findPaginatedRoomsWithoutDiscussionsByRoomIds(selector.name, userRoomsIds, options);\n\n\tconst [rooms, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\titems: rooms,\n\t\ttotal,\n\t};\n}\n\nexport async function findRoomsAvailableForTeams({ uid, name }: { uid: string; name: string }): Promise<{\n\titems: IRoom[];\n}> {\n\tconst options: FindOptions<IRoom> = {\n\t\tprojection: {\n\t\t\t_id: 1,\n\t\t\tfname: 1,\n\t\t\tname: 1,\n\t\t\tt: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tlimit: 10,\n\t\tsort: {\n\t\t\tname: 1,\n\t\t},\n\t};\n\n\tconst userRooms = (\n\t\t(await Subscriptions.findByUserIdAndRoles(uid, ['owner'], { projection: { rid: 1 } }).toArray()) as Pick<ISubscription, 'rid'>[]\n\t).map((item) => item.rid);\n\n\tconst rooms = await Rooms.findChannelAndGroupListWithoutTeamsByNameStartingByOwner(name, userRooms, options).toArray();\n\n\treturn {\n\t\titems: rooms,\n\t};\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b4dbafeb40526f3c346cdbfbda15730cbdbd15fd"}
