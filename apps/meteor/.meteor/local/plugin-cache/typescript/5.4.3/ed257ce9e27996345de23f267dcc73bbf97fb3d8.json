{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/settings/EditableSettingsProvider.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/admin/settings/EditableSettingsProvider.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/settings/EditableSettingsProvider.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/settings/EditableSettingsProvider.tsx","sourceRoot":"","sources":["client/views/admin/settings/EditableSettingsProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { SettingId, GroupId, ISetting, TabId } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\nimport { useSettings } from '@rocket.chat/ui-contexts';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\nimport type { FilterOperators } from 'mongodb';\nimport type { MutableRefObject, ReactNode } from 'react';\nimport React, { useEffect, useMemo, useRef } from 'react';\n\nimport { useIsEnterprise } from '../../../hooks/useIsEnterprise';\nimport { createReactiveSubscriptionFactory } from '../../../lib/createReactiveSubscriptionFactory';\nimport type { EditableSetting, EditableSettingsContextValue } from '../EditableSettingsContext';\nimport { EditableSettingsContext } from '../EditableSettingsContext';\n\nconst defaultQuery: SettingsContextQuery = {};\n\ntype EditableSettingsProviderProps = {\n\tchildren?: ReactNode;\n\tquery?: SettingsContextQuery;\n};\n\nconst EditableSettingsProvider = ({ children, query = defaultQuery }: EditableSettingsProviderProps) => {\n\tconst settingsCollectionRef = useRef<Mongo.Collection<EditableSetting>>(null) as MutableRefObject<Mongo.Collection<EditableSetting>>;\n\tconst persistedSettings = useSettings(query);\n\n\tconst getSettingsCollection = useMutableCallback(() => {\n\t\tif (!settingsCollectionRef.current) {\n\t\t\tsettingsCollectionRef.current = new Mongo.Collection<any>(null);\n\t\t}\n\n\t\treturn settingsCollectionRef.current;\n\t}) as () => Mongo.Collection<EditableSetting>;\n\n\tuseEffect(() => {\n\t\tconst settingsCollection = getSettingsCollection();\n\n\t\tsettingsCollection.remove({ _id: { $nin: persistedSettings.map(({ _id }) => _id) } });\n\t\tfor (const { _id, ...fields } of persistedSettings) {\n\t\t\tsettingsCollection.upsert(_id, { $set: { ...fields }, $unset: { changed: true } });\n\t\t}\n\t}, [getSettingsCollection, persistedSettings]);\n\n\tconst queryEditableSetting = useMemo(() => {\n\t\tconst validateSettingQueries = (\n\t\t\tquery: undefined | string | FilterOperators<ISetting> | FilterOperators<ISetting>[],\n\t\t\tsettingsCollection: Mongo.Collection<EditableSetting>,\n\t\t): boolean => {\n\t\t\tif (!query) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\n\t\t\treturn queries.every((query) => settingsCollection.find(query).count() > 0);\n\t\t};\n\n\t\treturn createReactiveSubscriptionFactory((_id: SettingId): EditableSetting | undefined => {\n\t\t\tconst settingsCollection = getSettingsCollection();\n\t\t\tconst editableSetting = settingsCollection.findOne(_id);\n\n\t\t\tif (!editableSetting) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...editableSetting,\n\t\t\t\tdisabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\n\t\t\t\tinvisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection),\n\t\t\t};\n\t\t});\n\t}, [getSettingsCollection]);\n\n\tconst queryEditableSettings = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((query = {}) =>\n\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t.find(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...('_id' in query && { _id: { $in: query._id } }),\n\t\t\t\t\t\t\t...('group' in query && { group: query.group }),\n\t\t\t\t\t\t\t...('changed' in query && { changed: query.changed }),\n\t\t\t\t\t\t\t$and: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('section' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.section\n\t\t\t\t\t\t\t\t\t\t\t? { section: query.section }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ section: { $exists: false } }, { section: '' }],\n\t\t\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('tab' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.tab\n\t\t\t\t\t\t\t\t\t\t\t? { tab: query.tab }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t.fetch(),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupSections = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId, tab?: TabId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t\t...(tab !== undefined\n\t\t\t\t\t\t\t\t\t\t? { tab }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ section }) => section || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupTabs = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ tab }) => tab || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst dispatch = useMutableCallback((changes: Partial<EditableSetting>[]): void => {\n\t\tfor (const { _id, ...data } of changes) {\n\t\t\tif (!_id) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tgetSettingsCollection().update(_id, { $set: data });\n\t\t}\n\t\tTracker.flush();\n\t});\n\n\tconst { data } = useIsEnterprise();\n\n\tconst isEnterprise = data?.isEnterprise ?? false;\n\n\tconst contextValue = useMemo<EditableSettingsContextValue>(\n\t\t() => ({\n\t\t\tqueryEditableSetting,\n\t\t\tqueryEditableSettings,\n\t\t\tqueryGroupSections,\n\t\t\tqueryGroupTabs,\n\t\t\tdispatch,\n\t\t\tisEnterprise,\n\t\t}),\n\t\t[queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch, isEnterprise],\n\t);\n\n\treturn <EditableSettingsContext.Provider children={children} value={contextValue} />;\n};\n\nexport default EditableSettingsProvider;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/settings/EditableSettingsProvider.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/settings/EditableSettingsProvider.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/settings/EditableSettingsProvider.tsx","sourceRoot":"","sources":["client/views/admin/settings/EditableSettingsProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { SettingId, GroupId, ISetting, TabId } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\nimport { useSettings } from '@rocket.chat/ui-contexts';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\nimport type { FilterOperators } from 'mongodb';\nimport type { MutableRefObject, ReactNode } from 'react';\nimport React, { useEffect, useMemo, useRef } from 'react';\n\nimport { useIsEnterprise } from '../../../hooks/useIsEnterprise';\nimport { createReactiveSubscriptionFactory } from '../../../lib/createReactiveSubscriptionFactory';\nimport type { EditableSetting, EditableSettingsContextValue } from '../EditableSettingsContext';\nimport { EditableSettingsContext } from '../EditableSettingsContext';\n\nconst defaultQuery: SettingsContextQuery = {};\n\ntype EditableSettingsProviderProps = {\n\tchildren?: ReactNode;\n\tquery?: SettingsContextQuery;\n};\n\nconst EditableSettingsProvider = ({ children, query = defaultQuery }: EditableSettingsProviderProps) => {\n\tconst settingsCollectionRef = useRef<Mongo.Collection<EditableSetting>>(null) as MutableRefObject<Mongo.Collection<EditableSetting>>;\n\tconst persistedSettings = useSettings(query);\n\n\tconst getSettingsCollection = useMutableCallback(() => {\n\t\tif (!settingsCollectionRef.current) {\n\t\t\tsettingsCollectionRef.current = new Mongo.Collection<any>(null);\n\t\t}\n\n\t\treturn settingsCollectionRef.current;\n\t}) as () => Mongo.Collection<EditableSetting>;\n\n\tuseEffect(() => {\n\t\tconst settingsCollection = getSettingsCollection();\n\n\t\tsettingsCollection.remove({ _id: { $nin: persistedSettings.map(({ _id }) => _id) } });\n\t\tfor (const { _id, ...fields } of persistedSettings) {\n\t\t\tsettingsCollection.upsert(_id, { $set: { ...fields }, $unset: { changed: true } });\n\t\t}\n\t}, [getSettingsCollection, persistedSettings]);\n\n\tconst queryEditableSetting = useMemo(() => {\n\t\tconst validateSettingQueries = (\n\t\t\tquery: undefined | string | FilterOperators<ISetting> | FilterOperators<ISetting>[],\n\t\t\tsettingsCollection: Mongo.Collection<EditableSetting>,\n\t\t): boolean => {\n\t\t\tif (!query) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\n\t\t\treturn queries.every((query) => settingsCollection.find(query).count() > 0);\n\t\t};\n\n\t\treturn createReactiveSubscriptionFactory((_id: SettingId): EditableSetting | undefined => {\n\t\t\tconst settingsCollection = getSettingsCollection();\n\t\t\tconst editableSetting = settingsCollection.findOne(_id);\n\n\t\t\tif (!editableSetting) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...editableSetting,\n\t\t\t\tdisabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\n\t\t\t\tinvisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection),\n\t\t\t};\n\t\t});\n\t}, [getSettingsCollection]);\n\n\tconst queryEditableSettings = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((query = {}) =>\n\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t.find(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...('_id' in query && { _id: { $in: query._id } }),\n\t\t\t\t\t\t\t...('group' in query && { group: query.group }),\n\t\t\t\t\t\t\t...('changed' in query && { changed: query.changed }),\n\t\t\t\t\t\t\t$and: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('section' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.section\n\t\t\t\t\t\t\t\t\t\t\t? { section: query.section }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ section: { $exists: false } }, { section: '' }],\n\t\t\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('tab' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.tab\n\t\t\t\t\t\t\t\t\t\t\t? { tab: query.tab }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t.fetch(),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupSections = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId, tab?: TabId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t\t...(tab !== undefined\n\t\t\t\t\t\t\t\t\t\t? { tab }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ section }) => section || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupTabs = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ tab }) => tab || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst dispatch = useMutableCallback((changes: Partial<EditableSetting>[]): void => {\n\t\tfor (const { _id, ...data } of changes) {\n\t\t\tif (!_id) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tgetSettingsCollection().update(_id, { $set: data });\n\t\t}\n\t\tTracker.flush();\n\t});\n\n\tconst { data } = useIsEnterprise();\n\n\tconst isEnterprise = data?.isEnterprise ?? false;\n\n\tconst contextValue = useMemo<EditableSettingsContextValue>(\n\t\t() => ({\n\t\t\tqueryEditableSetting,\n\t\t\tqueryEditableSettings,\n\t\t\tqueryGroupSections,\n\t\t\tqueryGroupTabs,\n\t\t\tdispatch,\n\t\t\tisEnterprise,\n\t\t}),\n\t\t[queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch, isEnterprise],\n\t);\n\n\treturn <EditableSettingsContext.Provider children={children} value={contextValue} />;\n};\n\nexport default EditableSettingsProvider;\n"]}}},"code":"const _excluded = [\"_id\"],\n  _excluded2 = [\"_id\"];\nlet _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nlet _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n}, 1);\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n}, 0);\nlet useSettings;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useSettings(v) {\n    useSettings = v;\n  }\n}, 1);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n}, 2);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n}, 3);\nlet React, useEffect, useMemo, useRef;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useEffect(v) {\n    useEffect = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  },\n  useRef(v) {\n    useRef = v;\n  }\n}, 4);\nlet useIsEnterprise;\nmodule.link(\"../../../hooks/useIsEnterprise\", {\n  useIsEnterprise(v) {\n    useIsEnterprise = v;\n  }\n}, 5);\nlet createReactiveSubscriptionFactory;\nmodule.link(\"../../../lib/createReactiveSubscriptionFactory\", {\n  createReactiveSubscriptionFactory(v) {\n    createReactiveSubscriptionFactory = v;\n  }\n}, 6);\nlet EditableSettingsContext;\nmodule.link(\"../EditableSettingsContext\", {\n  EditableSettingsContext(v) {\n    EditableSettingsContext = v;\n  }\n}, 7);\nconst defaultQuery = {};\nconst EditableSettingsProvider = _ref => {\n  var _data$isEnterprise;\n  let {\n    children,\n    query = defaultQuery\n  } = _ref;\n  const settingsCollectionRef = useRef(null);\n  const persistedSettings = useSettings(query);\n  const getSettingsCollection = useMutableCallback(() => {\n    if (!settingsCollectionRef.current) {\n      settingsCollectionRef.current = new Mongo.Collection(null);\n    }\n    return settingsCollectionRef.current;\n  });\n  useEffect(() => {\n    const settingsCollection = getSettingsCollection();\n    settingsCollection.remove({\n      _id: {\n        $nin: persistedSettings.map(_ref2 => {\n          let {\n            _id\n          } = _ref2;\n          return _id;\n        })\n      }\n    });\n    for (const _ref3 of persistedSettings) {\n      const {\n          _id\n        } = _ref3,\n        fields = _objectWithoutProperties(_ref3, _excluded);\n      settingsCollection.upsert(_id, {\n        $set: _objectSpread({}, fields),\n        $unset: {\n          changed: true\n        }\n      });\n    }\n  }, [getSettingsCollection, persistedSettings]);\n  const queryEditableSetting = useMemo(() => {\n    const validateSettingQueries = (query, settingsCollection) => {\n      if (!query) {\n        return true;\n      }\n      const queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\n      return queries.every(query => settingsCollection.find(query).count() > 0);\n    };\n    return createReactiveSubscriptionFactory(_id => {\n      const settingsCollection = getSettingsCollection();\n      const editableSetting = settingsCollection.findOne(_id);\n      if (!editableSetting) {\n        return undefined;\n      }\n      return _objectSpread(_objectSpread({}, editableSetting), {}, {\n        disabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\n        invisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection)\n      });\n    });\n  }, [getSettingsCollection]);\n  const queryEditableSettings = useMemo(() => createReactiveSubscriptionFactory(function () {\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return getSettingsCollection().find(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, '_id' in query && {\n      _id: {\n        $in: query._id\n      }\n    }), 'group' in query && {\n      group: query.group\n    }), 'changed' in query && {\n      changed: query.changed\n    }), {}, {\n      $and: [_objectSpread({}, 'section' in query && (query.section ? {\n        section: query.section\n      } : {\n        $or: [{\n          section: {\n            $exists: false\n          }\n        }, {\n          section: ''\n        }]\n      })), _objectSpread({}, 'tab' in query && (query.tab ? {\n        tab: query.tab\n      } : {\n        $or: [{\n          tab: {\n            $exists: false\n          }\n        }, {\n          tab: ''\n        }]\n      }))]\n    }), {\n      sort: {\n        section: 1,\n        sorter: 1,\n        i18nLabel: 1\n      }\n    }).fetch();\n  }), [getSettingsCollection]);\n  const queryGroupSections = useMemo(() => createReactiveSubscriptionFactory((_id, tab) => Array.from(new Set(getSettingsCollection().find(_objectSpread({\n    group: _id\n  }, tab !== undefined ? {\n    tab\n  } : {\n    $or: [{\n      tab: {\n        $exists: false\n      }\n    }, {\n      tab: ''\n    }]\n  }), {\n    fields: {\n      section: 1\n    },\n    sort: {\n      sorter: 1,\n      section: 1,\n      i18nLabel: 1\n    }\n  }).fetch().map(_ref4 => {\n    let {\n      section\n    } = _ref4;\n    return section || '';\n  })))), [getSettingsCollection]);\n  const queryGroupTabs = useMemo(() => createReactiveSubscriptionFactory(_id => Array.from(new Set(getSettingsCollection().find({\n    group: _id\n  }, {\n    fields: {\n      tab: 1\n    },\n    sort: {\n      sorter: 1,\n      tab: 1,\n      i18nLabel: 1\n    }\n  }).fetch().map(_ref5 => {\n    let {\n      tab\n    } = _ref5;\n    return tab || '';\n  })))), [getSettingsCollection]);\n  const dispatch = useMutableCallback(changes => {\n    for (const _ref6 of changes) {\n      const {\n          _id\n        } = _ref6,\n        data = _objectWithoutProperties(_ref6, _excluded2);\n      if (!_id) {\n        continue;\n      }\n      getSettingsCollection().update(_id, {\n        $set: data\n      });\n    }\n    Tracker.flush();\n  });\n  const {\n    data\n  } = useIsEnterprise();\n  const isEnterprise = (_data$isEnterprise = data === null || data === void 0 ? void 0 : data.isEnterprise) !== null && _data$isEnterprise !== void 0 ? _data$isEnterprise : false;\n  const contextValue = useMemo(() => ({\n    queryEditableSetting,\n    queryEditableSettings,\n    queryGroupSections,\n    queryGroupTabs,\n    dispatch,\n    isEnterprise\n  }), [queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch, isEnterprise]);\n  return /*#__PURE__*/React.createElement(EditableSettingsContext.Provider, {\n    children: children,\n    value: contextValue\n  });\n};\nmodule.exportDefault(EditableSettingsProvider);","map":{"version":3,"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","useMutableCallback","useSettings","Mongo","Tracker","React","useEffect","useMemo","useRef","useIsEnterprise","createReactiveSubscriptionFactory","EditableSettingsContext","defaultQuery","EditableSettingsProvider","_ref","_data$isEnterprise","children","query","settingsCollectionRef","persistedSettings","getSettingsCollection","current","Collection","settingsCollection","remove","_id","$nin","map","_ref2","_ref3","fields","_excluded","upsert","$set","$unset","changed","queryEditableSetting","validateSettingQueries","queries","concat","JSON","parse","every","find","count","editableSetting","findOne","undefined","disabled","blocked","enableQuery","invisible","displayQuery","queryEditableSettings","arguments","length","$in","group","$and","section","$or","$exists","tab","sort","sorter","i18nLabel","fetch","queryGroupSections","Array","from","Set","_ref4","queryGroupTabs","_ref5","dispatch","changes","_ref6","data","_excluded2","update","flush","isEnterprise","contextValue","createElement","Provider","value","exportDefault"],"sources":["client/views/admin/settings/EditableSettingsProvider.tsx"],"sourcesContent":["import type { SettingId, GroupId, ISetting, TabId } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\nimport { useSettings } from '@rocket.chat/ui-contexts';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\nimport type { FilterOperators } from 'mongodb';\nimport type { MutableRefObject, ReactNode } from 'react';\nimport React, { useEffect, useMemo, useRef } from 'react';\n\nimport { useIsEnterprise } from '../../../hooks/useIsEnterprise';\nimport { createReactiveSubscriptionFactory } from '../../../lib/createReactiveSubscriptionFactory';\nimport type { EditableSetting, EditableSettingsContextValue } from '../EditableSettingsContext';\nimport { EditableSettingsContext } from '../EditableSettingsContext';\n\nconst defaultQuery: SettingsContextQuery = {};\n\ntype EditableSettingsProviderProps = {\n\tchildren?: ReactNode;\n\tquery?: SettingsContextQuery;\n};\n\nconst EditableSettingsProvider = ({ children, query = defaultQuery }: EditableSettingsProviderProps) => {\n\tconst settingsCollectionRef = useRef<Mongo.Collection<EditableSetting>>(null) as MutableRefObject<Mongo.Collection<EditableSetting>>;\n\tconst persistedSettings = useSettings(query);\n\n\tconst getSettingsCollection = useMutableCallback(() => {\n\t\tif (!settingsCollectionRef.current) {\n\t\t\tsettingsCollectionRef.current = new Mongo.Collection<any>(null);\n\t\t}\n\n\t\treturn settingsCollectionRef.current;\n\t}) as () => Mongo.Collection<EditableSetting>;\n\n\tuseEffect(() => {\n\t\tconst settingsCollection = getSettingsCollection();\n\n\t\tsettingsCollection.remove({ _id: { $nin: persistedSettings.map(({ _id }) => _id) } });\n\t\tfor (const { _id, ...fields } of persistedSettings) {\n\t\t\tsettingsCollection.upsert(_id, { $set: { ...fields }, $unset: { changed: true } });\n\t\t}\n\t}, [getSettingsCollection, persistedSettings]);\n\n\tconst queryEditableSetting = useMemo(() => {\n\t\tconst validateSettingQueries = (\n\t\t\tquery: undefined | string | FilterOperators<ISetting> | FilterOperators<ISetting>[],\n\t\t\tsettingsCollection: Mongo.Collection<EditableSetting>,\n\t\t): boolean => {\n\t\t\tif (!query) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\n\t\t\treturn queries.every((query) => settingsCollection.find(query).count() > 0);\n\t\t};\n\n\t\treturn createReactiveSubscriptionFactory((_id: SettingId): EditableSetting | undefined => {\n\t\t\tconst settingsCollection = getSettingsCollection();\n\t\t\tconst editableSetting = settingsCollection.findOne(_id);\n\n\t\t\tif (!editableSetting) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...editableSetting,\n\t\t\t\tdisabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\n\t\t\t\tinvisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection),\n\t\t\t};\n\t\t});\n\t}, [getSettingsCollection]);\n\n\tconst queryEditableSettings = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((query = {}) =>\n\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t.find(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...('_id' in query && { _id: { $in: query._id } }),\n\t\t\t\t\t\t\t...('group' in query && { group: query.group }),\n\t\t\t\t\t\t\t...('changed' in query && { changed: query.changed }),\n\t\t\t\t\t\t\t$and: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('section' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.section\n\t\t\t\t\t\t\t\t\t\t\t? { section: query.section }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ section: { $exists: false } }, { section: '' }],\n\t\t\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('tab' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.tab\n\t\t\t\t\t\t\t\t\t\t\t? { tab: query.tab }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t.fetch(),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupSections = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId, tab?: TabId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t\t...(tab !== undefined\n\t\t\t\t\t\t\t\t\t\t? { tab }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ section }) => section || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupTabs = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ tab }) => tab || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst dispatch = useMutableCallback((changes: Partial<EditableSetting>[]): void => {\n\t\tfor (const { _id, ...data } of changes) {\n\t\t\tif (!_id) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tgetSettingsCollection().update(_id, { $set: data });\n\t\t}\n\t\tTracker.flush();\n\t});\n\n\tconst { data } = useIsEnterprise();\n\n\tconst isEnterprise = data?.isEnterprise ?? false;\n\n\tconst contextValue = useMemo<EditableSettingsContextValue>(\n\t\t() => ({\n\t\t\tqueryEditableSetting,\n\t\t\tqueryEditableSettings,\n\t\t\tqueryGroupSections,\n\t\t\tqueryGroupTabs,\n\t\t\tdispatch,\n\t\t\tisEnterprise,\n\t\t}),\n\t\t[queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch, isEnterprise],\n\t);\n\n\treturn <EditableSettingsContext.Provider children={children} value={contextValue} />;\n};\n\nexport default EditableSettingsProvider;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ed257ce9e27996345de23f267dcc73bbf97fb3d8"}
