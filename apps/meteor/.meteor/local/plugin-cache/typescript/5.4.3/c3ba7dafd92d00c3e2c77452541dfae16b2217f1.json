{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/commands.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/commands.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/commands.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/commands.ts","sourceRoot":"","sources":["app/api/server/v1/commands.ts"],"names":[],"mappings":"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","sourcesContent":["import { Messages } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { Meteor } from 'meteor/meteor';\nimport objectPath from 'object-path';\n\nimport { canAccessRoomIdAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport { slashCommands } from '../../../utils/server/slashCommand';\nimport { API } from '../api';\nimport { getLoggedInUser } from '../helpers/getLoggedInUser';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nAPI.v1.addRoute(\n\t'commands.get',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst params = this.queryParams;\n\n\t\t\tif (typeof params.command !== 'string') {\n\t\t\t\treturn API.v1.failure('The query param \"command\" must be provided.');\n\t\t\t}\n\n\t\t\tconst cmd = slashCommands.commands[params.command.toLowerCase()];\n\n\t\t\tif (!cmd) {\n\t\t\t\treturn API.v1.failure(`There is no command in the system by the name of: ${params.command}`);\n\t\t\t}\n\n\t\t\treturn API.v1.success({ command: cmd });\n\t\t},\n\t},\n);\n\n/* @deprecated */\nconst processQueryOptionsOnResult = <T extends { _id?: string } & Record<string, any>, F extends keyof T>(\n\tresult: T[],\n\toptions: {\n\t\tfields?: {\n\t\t\t[key in F]?: 1 | 0;\n\t\t};\n\t\tsort?: {\n\t\t\t[key: string]: 1 | -1;\n\t\t};\n\t\tlimit?: number;\n\t\tskip?: number;\n\t} = {},\n): Pick<T, F>[] => {\n\tif (result === undefined || result === null) {\n\t\treturn [];\n\t}\n\n\tif (Array.isArray(result)) {\n\t\tif (options.sort) {\n\t\t\tresult = result.sort((a, b) => {\n\t\t\t\tlet r = 0;\n\t\t\t\tfor (const field in options.sort) {\n\t\t\t\t\tif (options.sort.hasOwnProperty(field)) {\n\t\t\t\t\t\tconst direction = options.sort[field];\n\t\t\t\t\t\tlet valueA;\n\t\t\t\t\t\tlet valueB;\n\t\t\t\t\t\tif (field.indexOf('.') > -1) {\n\t\t\t\t\t\t\tvalueA = objectPath.get(a, field);\n\t\t\t\t\t\t\tvalueB = objectPath.get(b, field);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalueA = a[field];\n\t\t\t\t\t\t\tvalueB = b[field];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (valueA > valueB) {\n\t\t\t\t\t\t\tr = direction;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (valueA < valueB) {\n\t\t\t\t\t\t\tr = -direction;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn r;\n\t\t\t});\n\t\t}\n\n\t\tif (typeof options.skip === 'number') {\n\t\t\tresult.splice(0, options.skip);\n\t\t}\n\n\t\tif (typeof options.limit === 'number' && options.limit !== 0) {\n\t\t\tresult.splice(options.limit);\n\t\t}\n\t}\n\n\tconst fieldsToRemove: F[] = [];\n\tconst fieldsToGet: F[] = [];\n\n\tif (options.fields) {\n\t\tfor (const field in Object.keys(options.fields)) {\n\t\t\tif (options.fields.hasOwnProperty(field as F)) {\n\t\t\t\tif (options.fields[field as F] === 0) {\n\t\t\t\t\tfieldsToRemove.push(field as F);\n\t\t\t\t} else if (options.fields[field as F] === 1) {\n\t\t\t\t\tfieldsToGet.push(field as F);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (fieldsToGet.length > 0 && fieldsToGet.indexOf('_id' as F) === -1) {\n\t\tfieldsToGet.push('_id' as F);\n\t}\n\n\tconst pickFields = <F extends keyof T>(obj: T, fields: F[]): Pick<T, F> => {\n\t\tconst picked: Partial<T> = {};\n\t\tfields.forEach((field: F) => {\n\t\t\tif (String(field).indexOf('.') !== -1) {\n\t\t\t\tobjectPath.set(picked, String(field), objectPath.get(obj, String(field)));\n\t\t\t} else {\n\t\t\t\tpicked[field] = obj[field];\n\t\t\t}\n\t\t});\n\t\treturn picked as Pick<T, F>;\n\t};\n\n\tif (fieldsToRemove.length > 0 && fieldsToGet.length > 0) {\n\t\tconsole.warn(\"Can't mix remove and get fields\");\n\t\tfieldsToRemove.splice(0, fieldsToRemove.length);\n\t}\n\n\tif (fieldsToRemove.length > 0 || fieldsToGet.length > 0) {\n\t\treturn result.map((record) => {\n\t\t\tif (fieldsToRemove.length > 0) {\n\t\t\t\treturn Object.fromEntries(Object.entries(record).filter(([key]) => !fieldsToRemove.includes(key as F))) as Pick<T, F>;\n\t\t\t}\n\n\t\t\treturn pickFields(record, fieldsToGet);\n\t\t});\n\t}\n\n\treturn result;\n};\n\nAPI.v1.addRoute(\n\t'commands.list',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst params = this.queryParams as Record<string, any>;\n\t\t\tconst { offset, count } = await getPaginationItems(params);\n\t\t\tconst { sort, query } = await this.parseJsonQuery();\n\n\t\t\tlet commands = Object.values(slashCommands.commands);\n\n\t\t\tif (query?.command) {\n\t\t\t\tcommands = commands.filter((command) => command.command === query.command);\n\t\t\t}\n\n\t\t\tconst totalCount = commands.length;\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcommands: processQueryOptionsOnResult(commands, {\n\t\t\t\t\tsort: sort || { name: 1 },\n\t\t\t\t\tskip: offset,\n\t\t\t\t\tlimit: count,\n\t\t\t\t}),\n\t\t\t\toffset,\n\t\t\t\tcount: commands.length,\n\t\t\t\ttotal: totalCount,\n\t\t\t});\n\t\t},\n\t},\n);\n\n// Expects a body of: { command: 'gimme', params: 'any string value', roomId: 'value', triggerId: 'value' }\nAPI.v1.addRoute(\n\t'commands.run',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst body = this.bodyParams;\n\n\t\t\tif (typeof body.command !== 'string') {\n\t\t\t\treturn API.v1.failure('You must provide a command to run.');\n\t\t\t}\n\n\t\t\tif (body.params && typeof body.params !== 'string') {\n\t\t\t\treturn API.v1.failure('The parameters for the command must be a single string.');\n\t\t\t}\n\n\t\t\tif (typeof body.roomId !== 'string') {\n\t\t\t\treturn API.v1.failure(\"The room's id where to execute this command must be provided and be a string.\");\n\t\t\t}\n\n\t\t\tif (body.tmid && typeof body.tmid !== 'string') {\n\t\t\t\treturn API.v1.failure('The tmid parameter when provided must be a string.');\n\t\t\t}\n\n\t\t\tconst cmd = body.command.toLowerCase();\n\t\t\tif (!slashCommands.commands[cmd]) {\n\t\t\t\treturn API.v1.failure('The command provided does not exist (or is disabled).');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomIdAsync(body.roomId, this.userId))) {\n\t\t\t\treturn API.v1.forbidden();\n\t\t\t}\n\n\t\t\tconst params = body.params ? body.params : '';\n\t\t\tif (typeof body.tmid === 'string') {\n\t\t\t\tconst thread = await Messages.findOneById(body.tmid);\n\t\t\t\tif (!thread || thread.rid !== body.roomId) {\n\t\t\t\t\treturn API.v1.failure('Invalid thread.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst message = {\n\t\t\t\t_id: Random.id(),\n\t\t\t\trid: body.roomId,\n\t\t\t\tmsg: `/${cmd} ${params}`,\n\t\t\t\t...(body.tmid && { tmid: body.tmid }),\n\t\t\t};\n\n\t\t\tconst { triggerId } = body;\n\n\t\t\tconst result = await slashCommands.run({ command: cmd, params, message, triggerId, userId: this.userId });\n\n\t\t\treturn API.v1.success({ result });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'commands.preview',\n\t{ authRequired: true },\n\t{\n\t\t// Expects these query params: command: 'giphy', params: 'mine', roomId: 'value'\n\t\tasync get() {\n\t\t\tconst query = this.queryParams;\n\t\t\tconst user = await getLoggedInUser(this.request);\n\n\t\t\tif (typeof query.command !== 'string') {\n\t\t\t\treturn API.v1.failure('You must provide a command to get the previews from.');\n\t\t\t}\n\n\t\t\tif (query.params && typeof query.params !== 'string') {\n\t\t\t\treturn API.v1.failure('The parameters for the command must be a single string.');\n\t\t\t}\n\n\t\t\tif (typeof query.roomId !== 'string') {\n\t\t\t\treturn API.v1.failure(\"The room's id where the previews are being displayed must be provided and be a string.\");\n\t\t\t}\n\n\t\t\tconst cmd = query.command.toLowerCase();\n\t\t\tif (!slashCommands.commands[cmd]) {\n\t\t\t\treturn API.v1.failure('The command provided does not exist (or is disabled).');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomIdAsync(query.roomId, user?._id))) {\n\t\t\t\treturn API.v1.forbidden();\n\t\t\t}\n\n\t\t\tconst params = query.params ? query.params : '';\n\n\t\t\tconst preview = await Meteor.callAsync('getSlashCommandPreviews', {\n\t\t\t\tcmd,\n\t\t\t\tparams,\n\t\t\t\tmsg: { rid: query.roomId },\n\t\t\t});\n\n\t\t\treturn API.v1.success({ preview });\n\t\t},\n\n\t\t// Expects a body format of: { command: 'giphy', params: 'mine', roomId: 'value', tmid: 'value', triggerId: 'value', previewItem: { id: 'sadf8' type: 'image', value: 'https://dev.null/gif' } }\n\t\tasync post() {\n\t\t\tconst body = this.bodyParams;\n\n\t\t\tif (typeof body.command !== 'string') {\n\t\t\t\treturn API.v1.failure('You must provide a command to run the preview item on.');\n\t\t\t}\n\n\t\t\tif (body.params && typeof body.params !== 'string') {\n\t\t\t\treturn API.v1.failure('The parameters for the command must be a single string.');\n\t\t\t}\n\n\t\t\tif (typeof body.roomId !== 'string') {\n\t\t\t\treturn API.v1.failure(\"The room's id where the preview is being executed in must be provided and be a string.\");\n\t\t\t}\n\n\t\t\tif (typeof body.previewItem === 'undefined') {\n\t\t\t\treturn API.v1.failure('The preview item being executed must be provided.');\n\t\t\t}\n\n\t\t\tif (!body.previewItem.id || !body.previewItem.type || typeof body.previewItem.value === 'undefined') {\n\t\t\t\treturn API.v1.failure('The preview item being executed is in the wrong format.');\n\t\t\t}\n\n\t\t\tif (body.tmid && typeof body.tmid !== 'string') {\n\t\t\t\treturn API.v1.failure('The tmid parameter when provided must be a string.');\n\t\t\t}\n\n\t\t\tif (body.triggerId && typeof body.triggerId !== 'string') {\n\t\t\t\treturn API.v1.failure('The triggerId parameter when provided must be a string.');\n\t\t\t}\n\n\t\t\tconst cmd = body.command.toLowerCase();\n\t\t\tif (!slashCommands.commands[cmd]) {\n\t\t\t\treturn API.v1.failure('The command provided does not exist (or is disabled).');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomIdAsync(body.roomId, this.userId))) {\n\t\t\t\treturn API.v1.forbidden();\n\t\t\t}\n\n\t\t\tconst { params = '' } = body;\n\t\t\tif (body.tmid) {\n\t\t\t\tconst thread = await Messages.findOneById(body.tmid);\n\t\t\t\tif (!thread || thread.rid !== body.roomId) {\n\t\t\t\t\treturn API.v1.failure('Invalid thread.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst msg = {\n\t\t\t\trid: body.roomId,\n\t\t\t\t...(body.tmid && { tmid: body.tmid }),\n\t\t\t};\n\n\t\t\tawait Meteor.callAsync(\n\t\t\t\t'executeSlashCommandPreview',\n\t\t\t\t{\n\t\t\t\t\tcmd,\n\t\t\t\t\tparams,\n\t\t\t\t\tmsg,\n\t\t\t\t},\n\t\t\t\tbody.previewItem,\n\t\t\t\tbody.triggerId,\n\t\t\t);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/commands.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/commands.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/commands.ts","sourceRoot":"","sources":["app/api/server/v1/commands.ts"],"names":[],"mappings":"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","sourcesContent":["import { Messages } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { Meteor } from 'meteor/meteor';\nimport objectPath from 'object-path';\n\nimport { canAccessRoomIdAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport { slashCommands } from '../../../utils/server/slashCommand';\nimport { API } from '../api';\nimport { getLoggedInUser } from '../helpers/getLoggedInUser';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nAPI.v1.addRoute(\n\t'commands.get',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst params = this.queryParams;\n\n\t\t\tif (typeof params.command !== 'string') {\n\t\t\t\treturn API.v1.failure('The query param \"command\" must be provided.');\n\t\t\t}\n\n\t\t\tconst cmd = slashCommands.commands[params.command.toLowerCase()];\n\n\t\t\tif (!cmd) {\n\t\t\t\treturn API.v1.failure(`There is no command in the system by the name of: ${params.command}`);\n\t\t\t}\n\n\t\t\treturn API.v1.success({ command: cmd });\n\t\t},\n\t},\n);\n\n/* @deprecated */\nconst processQueryOptionsOnResult = <T extends { _id?: string } & Record<string, any>, F extends keyof T>(\n\tresult: T[],\n\toptions: {\n\t\tfields?: {\n\t\t\t[key in F]?: 1 | 0;\n\t\t};\n\t\tsort?: {\n\t\t\t[key: string]: 1 | -1;\n\t\t};\n\t\tlimit?: number;\n\t\tskip?: number;\n\t} = {},\n): Pick<T, F>[] => {\n\tif (result === undefined || result === null) {\n\t\treturn [];\n\t}\n\n\tif (Array.isArray(result)) {\n\t\tif (options.sort) {\n\t\t\tresult = result.sort((a, b) => {\n\t\t\t\tlet r = 0;\n\t\t\t\tfor (const field in options.sort) {\n\t\t\t\t\tif (options.sort.hasOwnProperty(field)) {\n\t\t\t\t\t\tconst direction = options.sort[field];\n\t\t\t\t\t\tlet valueA;\n\t\t\t\t\t\tlet valueB;\n\t\t\t\t\t\tif (field.indexOf('.') > -1) {\n\t\t\t\t\t\t\tvalueA = objectPath.get(a, field);\n\t\t\t\t\t\t\tvalueB = objectPath.get(b, field);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalueA = a[field];\n\t\t\t\t\t\t\tvalueB = b[field];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (valueA > valueB) {\n\t\t\t\t\t\t\tr = direction;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (valueA < valueB) {\n\t\t\t\t\t\t\tr = -direction;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn r;\n\t\t\t});\n\t\t}\n\n\t\tif (typeof options.skip === 'number') {\n\t\t\tresult.splice(0, options.skip);\n\t\t}\n\n\t\tif (typeof options.limit === 'number' && options.limit !== 0) {\n\t\t\tresult.splice(options.limit);\n\t\t}\n\t}\n\n\tconst fieldsToRemove: F[] = [];\n\tconst fieldsToGet: F[] = [];\n\n\tif (options.fields) {\n\t\tfor (const field in Object.keys(options.fields)) {\n\t\t\tif (options.fields.hasOwnProperty(field as F)) {\n\t\t\t\tif (options.fields[field as F] === 0) {\n\t\t\t\t\tfieldsToRemove.push(field as F);\n\t\t\t\t} else if (options.fields[field as F] === 1) {\n\t\t\t\t\tfieldsToGet.push(field as F);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (fieldsToGet.length > 0 && fieldsToGet.indexOf('_id' as F) === -1) {\n\t\tfieldsToGet.push('_id' as F);\n\t}\n\n\tconst pickFields = <F extends keyof T>(obj: T, fields: F[]): Pick<T, F> => {\n\t\tconst picked: Partial<T> = {};\n\t\tfields.forEach((field: F) => {\n\t\t\tif (String(field).indexOf('.') !== -1) {\n\t\t\t\tobjectPath.set(picked, String(field), objectPath.get(obj, String(field)));\n\t\t\t} else {\n\t\t\t\tpicked[field] = obj[field];\n\t\t\t}\n\t\t});\n\t\treturn picked as Pick<T, F>;\n\t};\n\n\tif (fieldsToRemove.length > 0 && fieldsToGet.length > 0) {\n\t\tconsole.warn(\"Can't mix remove and get fields\");\n\t\tfieldsToRemove.splice(0, fieldsToRemove.length);\n\t}\n\n\tif (fieldsToRemove.length > 0 || fieldsToGet.length > 0) {\n\t\treturn result.map((record) => {\n\t\t\tif (fieldsToRemove.length > 0) {\n\t\t\t\treturn Object.fromEntries(Object.entries(record).filter(([key]) => !fieldsToRemove.includes(key as F))) as Pick<T, F>;\n\t\t\t}\n\n\t\t\treturn pickFields(record, fieldsToGet);\n\t\t});\n\t}\n\n\treturn result;\n};\n\nAPI.v1.addRoute(\n\t'commands.list',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst params = this.queryParams as Record<string, any>;\n\t\t\tconst { offset, count } = await getPaginationItems(params);\n\t\t\tconst { sort, query } = await this.parseJsonQuery();\n\n\t\t\tlet commands = Object.values(slashCommands.commands);\n\n\t\t\tif (query?.command) {\n\t\t\t\tcommands = commands.filter((command) => command.command === query.command);\n\t\t\t}\n\n\t\t\tconst totalCount = commands.length;\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcommands: processQueryOptionsOnResult(commands, {\n\t\t\t\t\tsort: sort || { name: 1 },\n\t\t\t\t\tskip: offset,\n\t\t\t\t\tlimit: count,\n\t\t\t\t}),\n\t\t\t\toffset,\n\t\t\t\tcount: commands.length,\n\t\t\t\ttotal: totalCount,\n\t\t\t});\n\t\t},\n\t},\n);\n\n// Expects a body of: { command: 'gimme', params: 'any string value', roomId: 'value', triggerId: 'value' }\nAPI.v1.addRoute(\n\t'commands.run',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst body = this.bodyParams;\n\n\t\t\tif (typeof body.command !== 'string') {\n\t\t\t\treturn API.v1.failure('You must provide a command to run.');\n\t\t\t}\n\n\t\t\tif (body.params && typeof body.params !== 'string') {\n\t\t\t\treturn API.v1.failure('The parameters for the command must be a single string.');\n\t\t\t}\n\n\t\t\tif (typeof body.roomId !== 'string') {\n\t\t\t\treturn API.v1.failure(\"The room's id where to execute this command must be provided and be a string.\");\n\t\t\t}\n\n\t\t\tif (body.tmid && typeof body.tmid !== 'string') {\n\t\t\t\treturn API.v1.failure('The tmid parameter when provided must be a string.');\n\t\t\t}\n\n\t\t\tconst cmd = body.command.toLowerCase();\n\t\t\tif (!slashCommands.commands[cmd]) {\n\t\t\t\treturn API.v1.failure('The command provided does not exist (or is disabled).');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomIdAsync(body.roomId, this.userId))) {\n\t\t\t\treturn API.v1.forbidden();\n\t\t\t}\n\n\t\t\tconst params = body.params ? body.params : '';\n\t\t\tif (typeof body.tmid === 'string') {\n\t\t\t\tconst thread = await Messages.findOneById(body.tmid);\n\t\t\t\tif (!thread || thread.rid !== body.roomId) {\n\t\t\t\t\treturn API.v1.failure('Invalid thread.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst message = {\n\t\t\t\t_id: Random.id(),\n\t\t\t\trid: body.roomId,\n\t\t\t\tmsg: `/${cmd} ${params}`,\n\t\t\t\t...(body.tmid && { tmid: body.tmid }),\n\t\t\t};\n\n\t\t\tconst { triggerId } = body;\n\n\t\t\tconst result = await slashCommands.run({ command: cmd, params, message, triggerId, userId: this.userId });\n\n\t\t\treturn API.v1.success({ result });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'commands.preview',\n\t{ authRequired: true },\n\t{\n\t\t// Expects these query params: command: 'giphy', params: 'mine', roomId: 'value'\n\t\tasync get() {\n\t\t\tconst query = this.queryParams;\n\t\t\tconst user = await getLoggedInUser(this.request);\n\n\t\t\tif (typeof query.command !== 'string') {\n\t\t\t\treturn API.v1.failure('You must provide a command to get the previews from.');\n\t\t\t}\n\n\t\t\tif (query.params && typeof query.params !== 'string') {\n\t\t\t\treturn API.v1.failure('The parameters for the command must be a single string.');\n\t\t\t}\n\n\t\t\tif (typeof query.roomId !== 'string') {\n\t\t\t\treturn API.v1.failure(\"The room's id where the previews are being displayed must be provided and be a string.\");\n\t\t\t}\n\n\t\t\tconst cmd = query.command.toLowerCase();\n\t\t\tif (!slashCommands.commands[cmd]) {\n\t\t\t\treturn API.v1.failure('The command provided does not exist (or is disabled).');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomIdAsync(query.roomId, user?._id))) {\n\t\t\t\treturn API.v1.forbidden();\n\t\t\t}\n\n\t\t\tconst params = query.params ? query.params : '';\n\n\t\t\tconst preview = await Meteor.callAsync('getSlashCommandPreviews', {\n\t\t\t\tcmd,\n\t\t\t\tparams,\n\t\t\t\tmsg: { rid: query.roomId },\n\t\t\t});\n\n\t\t\treturn API.v1.success({ preview });\n\t\t},\n\n\t\t// Expects a body format of: { command: 'giphy', params: 'mine', roomId: 'value', tmid: 'value', triggerId: 'value', previewItem: { id: 'sadf8' type: 'image', value: 'https://dev.null/gif' } }\n\t\tasync post() {\n\t\t\tconst body = this.bodyParams;\n\n\t\t\tif (typeof body.command !== 'string') {\n\t\t\t\treturn API.v1.failure('You must provide a command to run the preview item on.');\n\t\t\t}\n\n\t\t\tif (body.params && typeof body.params !== 'string') {\n\t\t\t\treturn API.v1.failure('The parameters for the command must be a single string.');\n\t\t\t}\n\n\t\t\tif (typeof body.roomId !== 'string') {\n\t\t\t\treturn API.v1.failure(\"The room's id where the preview is being executed in must be provided and be a string.\");\n\t\t\t}\n\n\t\t\tif (typeof body.previewItem === 'undefined') {\n\t\t\t\treturn API.v1.failure('The preview item being executed must be provided.');\n\t\t\t}\n\n\t\t\tif (!body.previewItem.id || !body.previewItem.type || typeof body.previewItem.value === 'undefined') {\n\t\t\t\treturn API.v1.failure('The preview item being executed is in the wrong format.');\n\t\t\t}\n\n\t\t\tif (body.tmid && typeof body.tmid !== 'string') {\n\t\t\t\treturn API.v1.failure('The tmid parameter when provided must be a string.');\n\t\t\t}\n\n\t\t\tif (body.triggerId && typeof body.triggerId !== 'string') {\n\t\t\t\treturn API.v1.failure('The triggerId parameter when provided must be a string.');\n\t\t\t}\n\n\t\t\tconst cmd = body.command.toLowerCase();\n\t\t\tif (!slashCommands.commands[cmd]) {\n\t\t\t\treturn API.v1.failure('The command provided does not exist (or is disabled).');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomIdAsync(body.roomId, this.userId))) {\n\t\t\t\treturn API.v1.forbidden();\n\t\t\t}\n\n\t\t\tconst { params = '' } = body;\n\t\t\tif (body.tmid) {\n\t\t\t\tconst thread = await Messages.findOneById(body.tmid);\n\t\t\t\tif (!thread || thread.rid !== body.roomId) {\n\t\t\t\t\treturn API.v1.failure('Invalid thread.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst msg = {\n\t\t\t\trid: body.roomId,\n\t\t\t\t...(body.tmid && { tmid: body.tmid }),\n\t\t\t};\n\n\t\t\tawait Meteor.callAsync(\n\t\t\t\t'executeSlashCommandPreview',\n\t\t\t\t{\n\t\t\t\t\tcmd,\n\t\t\t\t\tparams,\n\t\t\t\t\tmsg,\n\t\t\t\t},\n\t\t\t\tbody.previewItem,\n\t\t\t\tbody.triggerId,\n\t\t\t);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let Messages;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      }\n    }, 0);\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let objectPath;\n    module.link(\"object-path\", {\n      default(v) {\n        objectPath = v;\n      }\n    }, 3);\n    let canAccessRoomIdAsync;\n    module.link(\"../../../authorization/server/functions/canAccessRoom\", {\n      canAccessRoomIdAsync(v) {\n        canAccessRoomIdAsync = v;\n      }\n    }, 4);\n    let slashCommands;\n    module.link(\"../../../utils/server/slashCommand\", {\n      slashCommands(v) {\n        slashCommands = v;\n      }\n    }, 5);\n    let API;\n    module.link(\"../api\", {\n      API(v) {\n        API = v;\n      }\n    }, 6);\n    let getLoggedInUser;\n    module.link(\"../helpers/getLoggedInUser\", {\n      getLoggedInUser(v) {\n        getLoggedInUser = v;\n      }\n    }, 7);\n    let getPaginationItems;\n    module.link(\"../helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('commands.get', {\n      authRequired: true\n    }, {\n      get() {\n        const params = this.queryParams;\n        if (typeof params.command !== 'string') {\n          return API.v1.failure('The query param \"command\" must be provided.');\n        }\n        const cmd = slashCommands.commands[params.command.toLowerCase()];\n        if (!cmd) {\n          return API.v1.failure(\"There is no command in the system by the name of: \".concat(params.command));\n        }\n        return API.v1.success({\n          command: cmd\n        });\n      }\n    });\n    /* @deprecated */\n    const processQueryOptionsOnResult = function (result) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (result === undefined || result === null) {\n        return [];\n      }\n      if (Array.isArray(result)) {\n        if (options.sort) {\n          result = result.sort((a, b) => {\n            let r = 0;\n            for (const field in options.sort) {\n              if (options.sort.hasOwnProperty(field)) {\n                const direction = options.sort[field];\n                let valueA;\n                let valueB;\n                if (field.indexOf('.') > -1) {\n                  valueA = objectPath.get(a, field);\n                  valueB = objectPath.get(b, field);\n                } else {\n                  valueA = a[field];\n                  valueB = b[field];\n                }\n                if (valueA > valueB) {\n                  r = direction;\n                  break;\n                }\n                if (valueA < valueB) {\n                  r = -direction;\n                  break;\n                }\n              }\n            }\n            return r;\n          });\n        }\n        if (typeof options.skip === 'number') {\n          result.splice(0, options.skip);\n        }\n        if (typeof options.limit === 'number' && options.limit !== 0) {\n          result.splice(options.limit);\n        }\n      }\n      const fieldsToRemove = [];\n      const fieldsToGet = [];\n      if (options.fields) {\n        for (const field in Object.keys(options.fields)) {\n          if (options.fields.hasOwnProperty(field)) {\n            if (options.fields[field] === 0) {\n              fieldsToRemove.push(field);\n            } else if (options.fields[field] === 1) {\n              fieldsToGet.push(field);\n            }\n          }\n        }\n      }\n      if (fieldsToGet.length > 0 && fieldsToGet.indexOf('_id') === -1) {\n        fieldsToGet.push('_id');\n      }\n      const pickFields = (obj, fields) => {\n        const picked = {};\n        fields.forEach(field => {\n          if (String(field).indexOf('.') !== -1) {\n            objectPath.set(picked, String(field), objectPath.get(obj, String(field)));\n          } else {\n            picked[field] = obj[field];\n          }\n        });\n        return picked;\n      };\n      if (fieldsToRemove.length > 0 && fieldsToGet.length > 0) {\n        console.warn(\"Can't mix remove and get fields\");\n        fieldsToRemove.splice(0, fieldsToRemove.length);\n      }\n      if (fieldsToRemove.length > 0 || fieldsToGet.length > 0) {\n        return result.map(record => {\n          if (fieldsToRemove.length > 0) {\n            return Object.fromEntries(Object.entries(record).filter(_ref => {\n              let [key] = _ref;\n              return !fieldsToRemove.includes(key);\n            }));\n          }\n          return pickFields(record, fieldsToGet);\n        });\n      }\n      return result;\n    };\n    API.v1.addRoute('commands.list', {\n      authRequired: true\n    }, {\n      async get() {\n        const params = this.queryParams;\n        const {\n          offset,\n          count\n        } = await getPaginationItems(params);\n        const {\n          sort,\n          query\n        } = await this.parseJsonQuery();\n        let commands = Object.values(slashCommands.commands);\n        if (query !== null && query !== void 0 && query.command) {\n          commands = commands.filter(command => command.command === query.command);\n        }\n        const totalCount = commands.length;\n        return API.v1.success({\n          commands: processQueryOptionsOnResult(commands, {\n            sort: sort || {\n              name: 1\n            },\n            skip: offset,\n            limit: count\n          }),\n          offset,\n          count: commands.length,\n          total: totalCount\n        });\n      }\n    });\n    // Expects a body of: { command: 'gimme', params: 'any string value', roomId: 'value', triggerId: 'value' }\n    API.v1.addRoute('commands.run', {\n      authRequired: true\n    }, {\n      async post() {\n        const body = this.bodyParams;\n        if (typeof body.command !== 'string') {\n          return API.v1.failure('You must provide a command to run.');\n        }\n        if (body.params && typeof body.params !== 'string') {\n          return API.v1.failure('The parameters for the command must be a single string.');\n        }\n        if (typeof body.roomId !== 'string') {\n          return API.v1.failure(\"The room's id where to execute this command must be provided and be a string.\");\n        }\n        if (body.tmid && typeof body.tmid !== 'string') {\n          return API.v1.failure('The tmid parameter when provided must be a string.');\n        }\n        const cmd = body.command.toLowerCase();\n        if (!slashCommands.commands[cmd]) {\n          return API.v1.failure('The command provided does not exist (or is disabled).');\n        }\n        if (!(await canAccessRoomIdAsync(body.roomId, this.userId))) {\n          return API.v1.forbidden();\n        }\n        const params = body.params ? body.params : '';\n        if (typeof body.tmid === 'string') {\n          const thread = await Messages.findOneById(body.tmid);\n          if (!thread || thread.rid !== body.roomId) {\n            return API.v1.failure('Invalid thread.');\n          }\n        }\n        const message = _objectSpread({\n          _id: Random.id(),\n          rid: body.roomId,\n          msg: \"/\".concat(cmd, \" \").concat(params)\n        }, body.tmid && {\n          tmid: body.tmid\n        });\n        const {\n          triggerId\n        } = body;\n        const result = await slashCommands.run({\n          command: cmd,\n          params,\n          message,\n          triggerId,\n          userId: this.userId\n        });\n        return API.v1.success({\n          result\n        });\n      }\n    });\n    API.v1.addRoute('commands.preview', {\n      authRequired: true\n    }, {\n      // Expects these query params: command: 'giphy', params: 'mine', roomId: 'value'\n      async get() {\n        const query = this.queryParams;\n        const user = await getLoggedInUser(this.request);\n        if (typeof query.command !== 'string') {\n          return API.v1.failure('You must provide a command to get the previews from.');\n        }\n        if (query.params && typeof query.params !== 'string') {\n          return API.v1.failure('The parameters for the command must be a single string.');\n        }\n        if (typeof query.roomId !== 'string') {\n          return API.v1.failure(\"The room's id where the previews are being displayed must be provided and be a string.\");\n        }\n        const cmd = query.command.toLowerCase();\n        if (!slashCommands.commands[cmd]) {\n          return API.v1.failure('The command provided does not exist (or is disabled).');\n        }\n        if (!(await canAccessRoomIdAsync(query.roomId, user === null || user === void 0 ? void 0 : user._id))) {\n          return API.v1.forbidden();\n        }\n        const params = query.params ? query.params : '';\n        const preview = await Meteor.callAsync('getSlashCommandPreviews', {\n          cmd,\n          params,\n          msg: {\n            rid: query.roomId\n          }\n        });\n        return API.v1.success({\n          preview\n        });\n      },\n      // Expects a body format of: { command: 'giphy', params: 'mine', roomId: 'value', tmid: 'value', triggerId: 'value', previewItem: { id: 'sadf8' type: 'image', value: 'https://dev.null/gif' } }\n      async post() {\n        const body = this.bodyParams;\n        if (typeof body.command !== 'string') {\n          return API.v1.failure('You must provide a command to run the preview item on.');\n        }\n        if (body.params && typeof body.params !== 'string') {\n          return API.v1.failure('The parameters for the command must be a single string.');\n        }\n        if (typeof body.roomId !== 'string') {\n          return API.v1.failure(\"The room's id where the preview is being executed in must be provided and be a string.\");\n        }\n        if (typeof body.previewItem === 'undefined') {\n          return API.v1.failure('The preview item being executed must be provided.');\n        }\n        if (!body.previewItem.id || !body.previewItem.type || typeof body.previewItem.value === 'undefined') {\n          return API.v1.failure('The preview item being executed is in the wrong format.');\n        }\n        if (body.tmid && typeof body.tmid !== 'string') {\n          return API.v1.failure('The tmid parameter when provided must be a string.');\n        }\n        if (body.triggerId && typeof body.triggerId !== 'string') {\n          return API.v1.failure('The triggerId parameter when provided must be a string.');\n        }\n        const cmd = body.command.toLowerCase();\n        if (!slashCommands.commands[cmd]) {\n          return API.v1.failure('The command provided does not exist (or is disabled).');\n        }\n        if (!(await canAccessRoomIdAsync(body.roomId, this.userId))) {\n          return API.v1.forbidden();\n        }\n        const {\n          params = ''\n        } = body;\n        if (body.tmid) {\n          const thread = await Messages.findOneById(body.tmid);\n          if (!thread || thread.rid !== body.roomId) {\n            return API.v1.failure('Invalid thread.');\n          }\n        }\n        const msg = _objectSpread({\n          rid: body.roomId\n        }, body.tmid && {\n          tmid: body.tmid\n        });\n        await Meteor.callAsync('executeSlashCommandPreview', {\n          cmd,\n          params,\n          msg\n        }, body.previewItem, body.triggerId);\n        return API.v1.success();\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","Messages","Random","Meteor","objectPath","canAccessRoomIdAsync","slashCommands","API","getLoggedInUser","getPaginationItems","__reifyWaitForDeps__","v1","addRoute","authRequired","get","params","queryParams","command","failure","cmd","commands","toLowerCase","concat","success","processQueryOptionsOnResult","result","options","arguments","length","undefined","Array","isArray","sort","a","b","r","field","hasOwnProperty","direction","valueA","valueB","indexOf","skip","splice","limit","fieldsToRemove","fieldsToGet","fields","Object","keys","push","pickFields","obj","picked","forEach","String","set","console","warn","map","record","fromEntries","entries","filter","_ref","key","includes","offset","count","query","parseJsonQuery","values","totalCount","name","total","post","body","bodyParams","roomId","tmid","userId","forbidden","thread","findOneById","rid","message","_id","id","msg","triggerId","run","user","request","preview","callAsync","previewItem","type","value","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/v1/commands.ts"],"sourcesContent":["import { Messages } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { Meteor } from 'meteor/meteor';\nimport objectPath from 'object-path';\n\nimport { canAccessRoomIdAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport { slashCommands } from '../../../utils/server/slashCommand';\nimport { API } from '../api';\nimport { getLoggedInUser } from '../helpers/getLoggedInUser';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nAPI.v1.addRoute(\n\t'commands.get',\n\t{ authRequired: true },\n\t{\n\t\tget() {\n\t\t\tconst params = this.queryParams;\n\n\t\t\tif (typeof params.command !== 'string') {\n\t\t\t\treturn API.v1.failure('The query param \"command\" must be provided.');\n\t\t\t}\n\n\t\t\tconst cmd = slashCommands.commands[params.command.toLowerCase()];\n\n\t\t\tif (!cmd) {\n\t\t\t\treturn API.v1.failure(`There is no command in the system by the name of: ${params.command}`);\n\t\t\t}\n\n\t\t\treturn API.v1.success({ command: cmd });\n\t\t},\n\t},\n);\n\n/* @deprecated */\nconst processQueryOptionsOnResult = <T extends { _id?: string } & Record<string, any>, F extends keyof T>(\n\tresult: T[],\n\toptions: {\n\t\tfields?: {\n\t\t\t[key in F]?: 1 | 0;\n\t\t};\n\t\tsort?: {\n\t\t\t[key: string]: 1 | -1;\n\t\t};\n\t\tlimit?: number;\n\t\tskip?: number;\n\t} = {},\n): Pick<T, F>[] => {\n\tif (result === undefined || result === null) {\n\t\treturn [];\n\t}\n\n\tif (Array.isArray(result)) {\n\t\tif (options.sort) {\n\t\t\tresult = result.sort((a, b) => {\n\t\t\t\tlet r = 0;\n\t\t\t\tfor (const field in options.sort) {\n\t\t\t\t\tif (options.sort.hasOwnProperty(field)) {\n\t\t\t\t\t\tconst direction = options.sort[field];\n\t\t\t\t\t\tlet valueA;\n\t\t\t\t\t\tlet valueB;\n\t\t\t\t\t\tif (field.indexOf('.') > -1) {\n\t\t\t\t\t\t\tvalueA = objectPath.get(a, field);\n\t\t\t\t\t\t\tvalueB = objectPath.get(b, field);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalueA = a[field];\n\t\t\t\t\t\t\tvalueB = b[field];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (valueA > valueB) {\n\t\t\t\t\t\t\tr = direction;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (valueA < valueB) {\n\t\t\t\t\t\t\tr = -direction;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn r;\n\t\t\t});\n\t\t}\n\n\t\tif (typeof options.skip === 'number') {\n\t\t\tresult.splice(0, options.skip);\n\t\t}\n\n\t\tif (typeof options.limit === 'number' && options.limit !== 0) {\n\t\t\tresult.splice(options.limit);\n\t\t}\n\t}\n\n\tconst fieldsToRemove: F[] = [];\n\tconst fieldsToGet: F[] = [];\n\n\tif (options.fields) {\n\t\tfor (const field in Object.keys(options.fields)) {\n\t\t\tif (options.fields.hasOwnProperty(field as F)) {\n\t\t\t\tif (options.fields[field as F] === 0) {\n\t\t\t\t\tfieldsToRemove.push(field as F);\n\t\t\t\t} else if (options.fields[field as F] === 1) {\n\t\t\t\t\tfieldsToGet.push(field as F);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (fieldsToGet.length > 0 && fieldsToGet.indexOf('_id' as F) === -1) {\n\t\tfieldsToGet.push('_id' as F);\n\t}\n\n\tconst pickFields = <F extends keyof T>(obj: T, fields: F[]): Pick<T, F> => {\n\t\tconst picked: Partial<T> = {};\n\t\tfields.forEach((field: F) => {\n\t\t\tif (String(field).indexOf('.') !== -1) {\n\t\t\t\tobjectPath.set(picked, String(field), objectPath.get(obj, String(field)));\n\t\t\t} else {\n\t\t\t\tpicked[field] = obj[field];\n\t\t\t}\n\t\t});\n\t\treturn picked as Pick<T, F>;\n\t};\n\n\tif (fieldsToRemove.length > 0 && fieldsToGet.length > 0) {\n\t\tconsole.warn(\"Can't mix remove and get fields\");\n\t\tfieldsToRemove.splice(0, fieldsToRemove.length);\n\t}\n\n\tif (fieldsToRemove.length > 0 || fieldsToGet.length > 0) {\n\t\treturn result.map((record) => {\n\t\t\tif (fieldsToRemove.length > 0) {\n\t\t\t\treturn Object.fromEntries(Object.entries(record).filter(([key]) => !fieldsToRemove.includes(key as F))) as Pick<T, F>;\n\t\t\t}\n\n\t\t\treturn pickFields(record, fieldsToGet);\n\t\t});\n\t}\n\n\treturn result;\n};\n\nAPI.v1.addRoute(\n\t'commands.list',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst params = this.queryParams as Record<string, any>;\n\t\t\tconst { offset, count } = await getPaginationItems(params);\n\t\t\tconst { sort, query } = await this.parseJsonQuery();\n\n\t\t\tlet commands = Object.values(slashCommands.commands);\n\n\t\t\tif (query?.command) {\n\t\t\t\tcommands = commands.filter((command) => command.command === query.command);\n\t\t\t}\n\n\t\t\tconst totalCount = commands.length;\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcommands: processQueryOptionsOnResult(commands, {\n\t\t\t\t\tsort: sort || { name: 1 },\n\t\t\t\t\tskip: offset,\n\t\t\t\t\tlimit: count,\n\t\t\t\t}),\n\t\t\t\toffset,\n\t\t\t\tcount: commands.length,\n\t\t\t\ttotal: totalCount,\n\t\t\t});\n\t\t},\n\t},\n);\n\n// Expects a body of: { command: 'gimme', params: 'any string value', roomId: 'value', triggerId: 'value' }\nAPI.v1.addRoute(\n\t'commands.run',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst body = this.bodyParams;\n\n\t\t\tif (typeof body.command !== 'string') {\n\t\t\t\treturn API.v1.failure('You must provide a command to run.');\n\t\t\t}\n\n\t\t\tif (body.params && typeof body.params !== 'string') {\n\t\t\t\treturn API.v1.failure('The parameters for the command must be a single string.');\n\t\t\t}\n\n\t\t\tif (typeof body.roomId !== 'string') {\n\t\t\t\treturn API.v1.failure(\"The room's id where to execute this command must be provided and be a string.\");\n\t\t\t}\n\n\t\t\tif (body.tmid && typeof body.tmid !== 'string') {\n\t\t\t\treturn API.v1.failure('The tmid parameter when provided must be a string.');\n\t\t\t}\n\n\t\t\tconst cmd = body.command.toLowerCase();\n\t\t\tif (!slashCommands.commands[cmd]) {\n\t\t\t\treturn API.v1.failure('The command provided does not exist (or is disabled).');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomIdAsync(body.roomId, this.userId))) {\n\t\t\t\treturn API.v1.forbidden();\n\t\t\t}\n\n\t\t\tconst params = body.params ? body.params : '';\n\t\t\tif (typeof body.tmid === 'string') {\n\t\t\t\tconst thread = await Messages.findOneById(body.tmid);\n\t\t\t\tif (!thread || thread.rid !== body.roomId) {\n\t\t\t\t\treturn API.v1.failure('Invalid thread.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst message = {\n\t\t\t\t_id: Random.id(),\n\t\t\t\trid: body.roomId,\n\t\t\t\tmsg: `/${cmd} ${params}`,\n\t\t\t\t...(body.tmid && { tmid: body.tmid }),\n\t\t\t};\n\n\t\t\tconst { triggerId } = body;\n\n\t\t\tconst result = await slashCommands.run({ command: cmd, params, message, triggerId, userId: this.userId });\n\n\t\t\treturn API.v1.success({ result });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'commands.preview',\n\t{ authRequired: true },\n\t{\n\t\t// Expects these query params: command: 'giphy', params: 'mine', roomId: 'value'\n\t\tasync get() {\n\t\t\tconst query = this.queryParams;\n\t\t\tconst user = await getLoggedInUser(this.request);\n\n\t\t\tif (typeof query.command !== 'string') {\n\t\t\t\treturn API.v1.failure('You must provide a command to get the previews from.');\n\t\t\t}\n\n\t\t\tif (query.params && typeof query.params !== 'string') {\n\t\t\t\treturn API.v1.failure('The parameters for the command must be a single string.');\n\t\t\t}\n\n\t\t\tif (typeof query.roomId !== 'string') {\n\t\t\t\treturn API.v1.failure(\"The room's id where the previews are being displayed must be provided and be a string.\");\n\t\t\t}\n\n\t\t\tconst cmd = query.command.toLowerCase();\n\t\t\tif (!slashCommands.commands[cmd]) {\n\t\t\t\treturn API.v1.failure('The command provided does not exist (or is disabled).');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomIdAsync(query.roomId, user?._id))) {\n\t\t\t\treturn API.v1.forbidden();\n\t\t\t}\n\n\t\t\tconst params = query.params ? query.params : '';\n\n\t\t\tconst preview = await Meteor.callAsync('getSlashCommandPreviews', {\n\t\t\t\tcmd,\n\t\t\t\tparams,\n\t\t\t\tmsg: { rid: query.roomId },\n\t\t\t});\n\n\t\t\treturn API.v1.success({ preview });\n\t\t},\n\n\t\t// Expects a body format of: { command: 'giphy', params: 'mine', roomId: 'value', tmid: 'value', triggerId: 'value', previewItem: { id: 'sadf8' type: 'image', value: 'https://dev.null/gif' } }\n\t\tasync post() {\n\t\t\tconst body = this.bodyParams;\n\n\t\t\tif (typeof body.command !== 'string') {\n\t\t\t\treturn API.v1.failure('You must provide a command to run the preview item on.');\n\t\t\t}\n\n\t\t\tif (body.params && typeof body.params !== 'string') {\n\t\t\t\treturn API.v1.failure('The parameters for the command must be a single string.');\n\t\t\t}\n\n\t\t\tif (typeof body.roomId !== 'string') {\n\t\t\t\treturn API.v1.failure(\"The room's id where the preview is being executed in must be provided and be a string.\");\n\t\t\t}\n\n\t\t\tif (typeof body.previewItem === 'undefined') {\n\t\t\t\treturn API.v1.failure('The preview item being executed must be provided.');\n\t\t\t}\n\n\t\t\tif (!body.previewItem.id || !body.previewItem.type || typeof body.previewItem.value === 'undefined') {\n\t\t\t\treturn API.v1.failure('The preview item being executed is in the wrong format.');\n\t\t\t}\n\n\t\t\tif (body.tmid && typeof body.tmid !== 'string') {\n\t\t\t\treturn API.v1.failure('The tmid parameter when provided must be a string.');\n\t\t\t}\n\n\t\t\tif (body.triggerId && typeof body.triggerId !== 'string') {\n\t\t\t\treturn API.v1.failure('The triggerId parameter when provided must be a string.');\n\t\t\t}\n\n\t\t\tconst cmd = body.command.toLowerCase();\n\t\t\tif (!slashCommands.commands[cmd]) {\n\t\t\t\treturn API.v1.failure('The command provided does not exist (or is disabled).');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomIdAsync(body.roomId, this.userId))) {\n\t\t\t\treturn API.v1.forbidden();\n\t\t\t}\n\n\t\t\tconst { params = '' } = body;\n\t\t\tif (body.tmid) {\n\t\t\t\tconst thread = await Messages.findOneById(body.tmid);\n\t\t\t\tif (!thread || thread.rid !== body.roomId) {\n\t\t\t\t\treturn API.v1.failure('Invalid thread.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst msg = {\n\t\t\t\trid: body.roomId,\n\t\t\t\t...(body.tmid && { tmid: body.tmid }),\n\t\t\t};\n\n\t\t\tawait Meteor.callAsync(\n\t\t\t\t'executeSlashCommandPreview',\n\t\t\t\t{\n\t\t\t\t\tcmd,\n\t\t\t\t\tparams,\n\t\t\t\t\tmsg,\n\t\t\t\t},\n\t\t\t\tbody.previewItem,\n\t\t\t\tbody.triggerId,\n\t\t\t);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c3ba7dafd92d00c3e2c77452541dfae16b2217f1"}
