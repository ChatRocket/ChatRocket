{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/meteorOverrides/login/saml.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/meteorOverrides/login/saml.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/meteorOverrides/login/saml.ts","inputSourceMap":{"version":3,"file":"client/meteorOverrides/login/saml.ts","sourceRoot":"","sources":["client/meteorOverrides/login/saml.ts"],"names":[],"mappings":"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","sourcesContent":["import { Random } from '@rocket.chat/random';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../app/settings/client';\nimport { type LoginCallback, callLoginMethod, handleLogin } from '../../lib/2fa/overrideLoginMethod';\n\ndeclare module 'meteor/meteor' {\n\t// eslint-disable-next-line @typescript-eslint/no-namespace\n\tnamespace Meteor {\n\t\tfunction loginWithSamlToken(credentialToken: string, callback?: LoginCallback): void;\n\n\t\tfunction loginWithSaml(options: { provider: string; credentialToken?: string }): void;\n\t}\n}\n\ndeclare module 'meteor/accounts-base' {\n\t// eslint-disable-next-line @typescript-eslint/no-namespace\n\tnamespace Accounts {\n\t\texport let saml: {\n\t\t\tcredentialToken?: string;\n\t\t\tcredentialSecret?: string;\n\t\t};\n\n\t\t/**\n\t\t * There is one case where the onlogout event is triggered with no user:\n\t\t * during the deletion, the user is logged out, and the framework try to get the user from the database.\n\t\t */\n\t\tfunction onLogout(func: (options: { user?: Meteor.User; connection: Meteor.Connection }) => void): void;\n\t}\n}\n\ndeclare module 'meteor/service-configuration' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Configuration {\n\t\tlogoutBehaviour?: 'SAML' | 'Local';\n\t\tidpSLORedirectURL?: string;\n\t}\n}\n\nif (!Accounts.saml) {\n\tAccounts.saml = {};\n}\n\nconst { logout } = Meteor;\n\nMeteor.logout = async function (...args) {\n\tconst standardLogout = () => logout.apply(Meteor, args);\n\n\tif (!settings.get('SAML_Custom_Default')) {\n\t\treturn standardLogout();\n\t}\n\n\tif (settings.get('SAML_Custom_Default_logout_behaviour') === 'Local') {\n\t\tconsole.info('SAML session not terminated, only the Rocket.Chat session is going to be killed');\n\t\treturn standardLogout();\n\t}\n\n\tconst provider = settings.get('SAML_Custom_Default_provider');\n\n\tif (provider && settings.get('SAML_Custom_Default_idp_slo_redirect_url')) {\n\t\tconsole.info('SAML session terminated via SLO');\n\n\t\tconst { sdk } = await import('../../../app/utils/client/lib/SDKClient');\n\t\tsdk\n\t\t\t.call('samlLogout', provider)\n\t\t\t.then((result) => {\n\t\t\t\tif (!result) {\n\t\t\t\t\tlogout.apply(Meteor);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove the userId from the client to prevent calls to the server while the logout is processed.\n\t\t\t\t// If the logout fails, the userId will be reloaded on the resume call\n\t\t\t\tAccounts.storageLocation.removeItem(Accounts.USER_ID_KEY);\n\n\t\t\t\t// A nasty bounce: 'result' has the SAML LogoutRequest but we need a proper 302 to redirected from the server.\n\t\t\t\twindow.location.replace(Meteor.absoluteUrl(`_saml/sloRedirect/${provider}/?redirect=${encodeURIComponent(result)}`));\n\t\t\t})\n\t\t\t.catch(() => logout.apply(Meteor));\n\t\treturn;\n\t}\n\n\treturn standardLogout();\n};\n\nMeteor.loginWithSaml = (options) => {\n\toptions = options || {};\n\tconst credentialToken = `id-${Random.id()}`;\n\toptions.credentialToken = credentialToken;\n\n\twindow.location.href = `_saml/authorize/${options.provider}/${options.credentialToken}`;\n};\n\nconst loginWithSamlToken = (credentialToken: string) =>\n\tcallLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\tsaml: true,\n\t\t\t\tcredentialToken,\n\t\t\t},\n\t\t],\n\t});\n\nconst loginWithSamlTokenAndTOTP = (credentialToken: string, code: string) =>\n\tcallLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\ttotp: {\n\t\t\t\t\tlogin: {\n\t\t\t\t\t\tsaml: true,\n\t\t\t\t\t\tcredentialToken,\n\t\t\t\t\t},\n\t\t\t\t\tcode,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t});\n\nMeteor.loginWithSamlToken = handleLogin(loginWithSamlToken, loginWithSamlTokenAndTOTP);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/meteorOverrides/login/saml.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/meteorOverrides/login/saml.ts","inputSourceMap":{"version":3,"file":"client/meteorOverrides/login/saml.ts","sourceRoot":"","sources":["client/meteorOverrides/login/saml.ts"],"names":[],"mappings":"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","sourcesContent":["import { Random } from '@rocket.chat/random';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../app/settings/client';\nimport { type LoginCallback, callLoginMethod, handleLogin } from '../../lib/2fa/overrideLoginMethod';\n\ndeclare module 'meteor/meteor' {\n\t// eslint-disable-next-line @typescript-eslint/no-namespace\n\tnamespace Meteor {\n\t\tfunction loginWithSamlToken(credentialToken: string, callback?: LoginCallback): void;\n\n\t\tfunction loginWithSaml(options: { provider: string; credentialToken?: string }): void;\n\t}\n}\n\ndeclare module 'meteor/accounts-base' {\n\t// eslint-disable-next-line @typescript-eslint/no-namespace\n\tnamespace Accounts {\n\t\texport let saml: {\n\t\t\tcredentialToken?: string;\n\t\t\tcredentialSecret?: string;\n\t\t};\n\n\t\t/**\n\t\t * There is one case where the onlogout event is triggered with no user:\n\t\t * during the deletion, the user is logged out, and the framework try to get the user from the database.\n\t\t */\n\t\tfunction onLogout(func: (options: { user?: Meteor.User; connection: Meteor.Connection }) => void): void;\n\t}\n}\n\ndeclare module 'meteor/service-configuration' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Configuration {\n\t\tlogoutBehaviour?: 'SAML' | 'Local';\n\t\tidpSLORedirectURL?: string;\n\t}\n}\n\nif (!Accounts.saml) {\n\tAccounts.saml = {};\n}\n\nconst { logout } = Meteor;\n\nMeteor.logout = async function (...args) {\n\tconst standardLogout = () => logout.apply(Meteor, args);\n\n\tif (!settings.get('SAML_Custom_Default')) {\n\t\treturn standardLogout();\n\t}\n\n\tif (settings.get('SAML_Custom_Default_logout_behaviour') === 'Local') {\n\t\tconsole.info('SAML session not terminated, only the Rocket.Chat session is going to be killed');\n\t\treturn standardLogout();\n\t}\n\n\tconst provider = settings.get('SAML_Custom_Default_provider');\n\n\tif (provider && settings.get('SAML_Custom_Default_idp_slo_redirect_url')) {\n\t\tconsole.info('SAML session terminated via SLO');\n\n\t\tconst { sdk } = await import('../../../app/utils/client/lib/SDKClient');\n\t\tsdk\n\t\t\t.call('samlLogout', provider)\n\t\t\t.then((result) => {\n\t\t\t\tif (!result) {\n\t\t\t\t\tlogout.apply(Meteor);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove the userId from the client to prevent calls to the server while the logout is processed.\n\t\t\t\t// If the logout fails, the userId will be reloaded on the resume call\n\t\t\t\tAccounts.storageLocation.removeItem(Accounts.USER_ID_KEY);\n\n\t\t\t\t// A nasty bounce: 'result' has the SAML LogoutRequest but we need a proper 302 to redirected from the server.\n\t\t\t\twindow.location.replace(Meteor.absoluteUrl(`_saml/sloRedirect/${provider}/?redirect=${encodeURIComponent(result)}`));\n\t\t\t})\n\t\t\t.catch(() => logout.apply(Meteor));\n\t\treturn;\n\t}\n\n\treturn standardLogout();\n};\n\nMeteor.loginWithSaml = (options) => {\n\toptions = options || {};\n\tconst credentialToken = `id-${Random.id()}`;\n\toptions.credentialToken = credentialToken;\n\n\twindow.location.href = `_saml/authorize/${options.provider}/${options.credentialToken}`;\n};\n\nconst loginWithSamlToken = (credentialToken: string) =>\n\tcallLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\tsaml: true,\n\t\t\t\tcredentialToken,\n\t\t\t},\n\t\t],\n\t});\n\nconst loginWithSamlTokenAndTOTP = (credentialToken: string, code: string) =>\n\tcallLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\ttotp: {\n\t\t\t\t\tlogin: {\n\t\t\t\t\t\tsaml: true,\n\t\t\t\t\t\tcredentialToken,\n\t\t\t\t\t},\n\t\t\t\t\tcode,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t});\n\nMeteor.loginWithSamlToken = handleLogin(loginWithSamlToken, loginWithSamlTokenAndTOTP);\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar Random;\nmodule.link(\"@rocket.chat/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 0);\nvar Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 1);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar settings;\nmodule.link(\"../../../app/settings/client\", {\n  settings: function (v) {\n    settings = v;\n  }\n}, 3);\nvar callLoginMethod, handleLogin;\nmodule.link(\"../../lib/2fa/overrideLoginMethod\", {\n  callLoginMethod: function (v) {\n    callLoginMethod = v;\n  },\n  handleLogin: function (v) {\n    handleLogin = v;\n  }\n}, 4);\nif (!Accounts.saml) {\n  Accounts.saml = {};\n}\nvar _Meteor = Meteor,\n  logout = _Meteor.logout;\nMeteor.logout = function () {\n  function _callee() {\n    var _len,\n      args,\n      _key,\n      standardLogout,\n      provider,\n      _await$module$dynamic,\n      sdk,\n      _args = arguments;\n    return _regeneratorRuntime.async(function () {\n      function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            for (_len = _args.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = _args[_key];\n            }\n            standardLogout = function () {\n              return logout.apply(Meteor, args);\n            };\n            if (settings.get('SAML_Custom_Default')) {\n              _context.next = 4;\n              break;\n            }\n            return _context.abrupt(\"return\", standardLogout());\n          case 4:\n            if (!(settings.get('SAML_Custom_Default_logout_behaviour') === 'Local')) {\n              _context.next = 7;\n              break;\n            }\n            console.info('SAML session not terminated, only the Rocket.Chat session is going to be killed');\n            return _context.abrupt(\"return\", standardLogout());\n          case 7:\n            provider = settings.get('SAML_Custom_Default_provider');\n            if (!(provider && settings.get('SAML_Custom_Default_idp_slo_redirect_url'))) {\n              _context.next = 16;\n              break;\n            }\n            console.info('SAML session terminated via SLO');\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(module.dynamicImport('../../../app/utils/client/lib/SDKClient'));\n          case 12:\n            _await$module$dynamic = _context.sent;\n            sdk = _await$module$dynamic.sdk;\n            sdk.call('samlLogout', provider).then(function (result) {\n              if (!result) {\n                logout.apply(Meteor);\n                return;\n              }\n              // Remove the userId from the client to prevent calls to the server while the logout is processed.\n              // If the logout fails, the userId will be reloaded on the resume call\n              Accounts.storageLocation.removeItem(Accounts.USER_ID_KEY);\n              // A nasty bounce: 'result' has the SAML LogoutRequest but we need a proper 302 to redirected from the server.\n              window.location.replace(Meteor.absoluteUrl(\"_saml/sloRedirect/\" + provider + \"/?redirect=\" + encodeURIComponent(result)));\n            }).catch(function () {\n              return logout.apply(Meteor);\n            });\n            return _context.abrupt(\"return\");\n          case 16:\n            return _context.abrupt(\"return\", standardLogout());\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n      return _callee$;\n    }(), null, null, null, Promise);\n  }\n  return _callee;\n}();\nMeteor.loginWithSaml = function (options) {\n  options = options || {};\n  var credentialToken = \"id-\" + Random.id();\n  options.credentialToken = credentialToken;\n  window.location.href = \"_saml/authorize/\" + options.provider + \"/\" + options.credentialToken;\n};\nvar loginWithSamlToken = function (credentialToken) {\n  return callLoginMethod({\n    methodArguments: [{\n      saml: true,\n      credentialToken: credentialToken\n    }]\n  });\n};\nvar loginWithSamlTokenAndTOTP = function (credentialToken, code) {\n  return callLoginMethod({\n    methodArguments: [{\n      totp: {\n        login: {\n          saml: true,\n          credentialToken: credentialToken\n        },\n        code: code\n      }\n    }]\n  });\n};\nMeteor.loginWithSamlToken = handleLogin(loginWithSamlToken, loginWithSamlTokenAndTOTP);","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","Random","Accounts","Meteor","settings","callLoginMethod","handleLogin","saml","_Meteor","logout","_callee","_len","args","_key","standardLogout","provider","_await$module$dynamic","sdk","_args","arguments","async","_callee$","_context","prev","next","length","Array","apply","get","abrupt","console","info","awrap","dynamicImport","sent","call","then","result","storageLocation","removeItem","USER_ID_KEY","window","location","replace","absoluteUrl","encodeURIComponent","catch","stop","Promise","loginWithSaml","options","credentialToken","id","href","loginWithSamlToken","methodArguments","loginWithSamlTokenAndTOTP","code","totp","login"],"sources":["client/meteorOverrides/login/saml.ts"],"sourcesContent":["import { Random } from '@rocket.chat/random';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../app/settings/client';\nimport { type LoginCallback, callLoginMethod, handleLogin } from '../../lib/2fa/overrideLoginMethod';\n\ndeclare module 'meteor/meteor' {\n\t// eslint-disable-next-line @typescript-eslint/no-namespace\n\tnamespace Meteor {\n\t\tfunction loginWithSamlToken(credentialToken: string, callback?: LoginCallback): void;\n\n\t\tfunction loginWithSaml(options: { provider: string; credentialToken?: string }): void;\n\t}\n}\n\ndeclare module 'meteor/accounts-base' {\n\t// eslint-disable-next-line @typescript-eslint/no-namespace\n\tnamespace Accounts {\n\t\texport let saml: {\n\t\t\tcredentialToken?: string;\n\t\t\tcredentialSecret?: string;\n\t\t};\n\n\t\t/**\n\t\t * There is one case where the onlogout event is triggered with no user:\n\t\t * during the deletion, the user is logged out, and the framework try to get the user from the database.\n\t\t */\n\t\tfunction onLogout(func: (options: { user?: Meteor.User; connection: Meteor.Connection }) => void): void;\n\t}\n}\n\ndeclare module 'meteor/service-configuration' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface Configuration {\n\t\tlogoutBehaviour?: 'SAML' | 'Local';\n\t\tidpSLORedirectURL?: string;\n\t}\n}\n\nif (!Accounts.saml) {\n\tAccounts.saml = {};\n}\n\nconst { logout } = Meteor;\n\nMeteor.logout = async function (...args) {\n\tconst standardLogout = () => logout.apply(Meteor, args);\n\n\tif (!settings.get('SAML_Custom_Default')) {\n\t\treturn standardLogout();\n\t}\n\n\tif (settings.get('SAML_Custom_Default_logout_behaviour') === 'Local') {\n\t\tconsole.info('SAML session not terminated, only the Rocket.Chat session is going to be killed');\n\t\treturn standardLogout();\n\t}\n\n\tconst provider = settings.get('SAML_Custom_Default_provider');\n\n\tif (provider && settings.get('SAML_Custom_Default_idp_slo_redirect_url')) {\n\t\tconsole.info('SAML session terminated via SLO');\n\n\t\tconst { sdk } = await import('../../../app/utils/client/lib/SDKClient');\n\t\tsdk\n\t\t\t.call('samlLogout', provider)\n\t\t\t.then((result) => {\n\t\t\t\tif (!result) {\n\t\t\t\t\tlogout.apply(Meteor);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Remove the userId from the client to prevent calls to the server while the logout is processed.\n\t\t\t\t// If the logout fails, the userId will be reloaded on the resume call\n\t\t\t\tAccounts.storageLocation.removeItem(Accounts.USER_ID_KEY);\n\n\t\t\t\t// A nasty bounce: 'result' has the SAML LogoutRequest but we need a proper 302 to redirected from the server.\n\t\t\t\twindow.location.replace(Meteor.absoluteUrl(`_saml/sloRedirect/${provider}/?redirect=${encodeURIComponent(result)}`));\n\t\t\t})\n\t\t\t.catch(() => logout.apply(Meteor));\n\t\treturn;\n\t}\n\n\treturn standardLogout();\n};\n\nMeteor.loginWithSaml = (options) => {\n\toptions = options || {};\n\tconst credentialToken = `id-${Random.id()}`;\n\toptions.credentialToken = credentialToken;\n\n\twindow.location.href = `_saml/authorize/${options.provider}/${options.credentialToken}`;\n};\n\nconst loginWithSamlToken = (credentialToken: string) =>\n\tcallLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\tsaml: true,\n\t\t\t\tcredentialToken,\n\t\t\t},\n\t\t],\n\t});\n\nconst loginWithSamlTokenAndTOTP = (credentialToken: string, code: string) =>\n\tcallLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\ttotp: {\n\t\t\t\t\tlogin: {\n\t\t\t\t\t\tsaml: true,\n\t\t\t\t\t\tcredentialToken,\n\t\t\t\t\t},\n\t\t\t\t\tcode,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t});\n\nMeteor.loginWithSamlToken = handleLogin(loginWithSamlToken, loginWithSamlTokenAndTOTP);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"bac2f99e8a673e86ca00f450907c8992050b2a69"}
