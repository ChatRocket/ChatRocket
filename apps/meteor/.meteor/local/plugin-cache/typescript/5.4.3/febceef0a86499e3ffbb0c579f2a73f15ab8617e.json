{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/setUserAvatar.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/setUserAvatar.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/setUserAvatar.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/setUserAvatar.ts","sourceRoot":"","sources":["app/lib/server/functions/setUserAvatar.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport type { Response } from '@rocket.chat/server-fetch';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\nimport { Meteor } from 'meteor/meteor';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { FileUpload } from '../../../file-upload/server';\nimport { RocketChatFile } from '../../../file/server';\nimport { settings } from '../../../settings/server';\nimport { checkUrlForSsrf } from './checkUrlForSsrf';\n\nexport const setAvatarFromServiceWithValidation = async (\n\tuserId: string,\n\tdataURI: string,\n\tcontentType?: string,\n\tservice?: string,\n\ttargetUserId?: string,\n): Promise<void> => {\n\tif (!dataURI) {\n\t\tthrow new Meteor.Error('error-invalid-data', 'Invalid dataURI', {\n\t\t\tmethod: 'setAvatarFromService',\n\t\t});\n\t}\n\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'setAvatarFromService',\n\t\t});\n\t}\n\n\tif (!settings.get('Accounts_AllowUserAvatarChange')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'setAvatarFromService',\n\t\t});\n\t}\n\n\tlet user: IUser | null;\n\n\tif (targetUserId && targetUserId !== userId) {\n\t\tif (!(await hasPermissionAsync(userId, 'edit-other-user-avatar'))) {\n\t\t\tthrow new Meteor.Error('error-unauthorized', 'Unauthorized', {\n\t\t\t\tmethod: 'setAvatarFromService',\n\t\t\t});\n\t\t}\n\n\t\tuser = await Users.findOneById(targetUserId, { projection: { _id: 1, username: 1 } });\n\t} else {\n\t\tuser = await Users.findOneById(userId, { projection: { _id: 1, username: 1 } });\n\t}\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-desired-user', 'Invalid desired user', {\n\t\t\tmethod: 'setAvatarFromService',\n\t\t});\n\t}\n\n\treturn setUserAvatar(user, dataURI, contentType, service);\n};\n\nexport function setUserAvatar(\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tdataURI: Buffer,\n\tcontentType: string,\n\tservice: 'rest',\n\tetag?: string,\n): Promise<void>;\nexport function setUserAvatar(\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tdataURI: string,\n\tcontentType?: string,\n\tservice?: 'initials' | 'url' | 'rest' | string,\n\tetag?: string,\n): Promise<void>;\nexport async function setUserAvatar(\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tdataURI: string | Buffer,\n\tcontentType: string | undefined,\n\tservice?: 'initials' | 'url' | 'rest' | string,\n\tetag?: string,\n): Promise<void> {\n\tif (service === 'initials') {\n\t\tawait Users.setAvatarData(user._id, service, null);\n\t\treturn;\n\t}\n\n\tconst { buffer, type } = await (async (): Promise<{ buffer: Buffer; type: string }> => {\n\t\tif (service === 'url' && typeof dataURI === 'string') {\n\t\t\tlet response: Response;\n\n\t\t\tconst isSsrfSafe = await checkUrlForSsrf(dataURI);\n\t\t\tif (!isSsrfSafe) {\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', `Invalid avatar URL: ${encodeURI(dataURI)}`, {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t\turl: dataURI,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tresponse = await fetch(dataURI, { redirect: 'error' });\n\t\t\t} catch (e) {\n\t\t\t\tSystemLogger.info(`Not a valid response, from the avatar url: ${encodeURI(dataURI)}`);\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', `Invalid avatar URL: ${encodeURI(dataURI)}`, {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t\turl: dataURI,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (response.status !== 200) {\n\t\t\t\tif (response.status !== 404) {\n\t\t\t\t\tSystemLogger.info(`Error while handling the setting of the avatar from a url (${encodeURI(dataURI)}) for ${user.username}`);\n\t\t\t\t\tthrow new Meteor.Error(\n\t\t\t\t\t\t'error-avatar-url-handling',\n\t\t\t\t\t\t`Error while handling avatar setting from a URL (${encodeURI(dataURI)}) for ${user.username}`,\n\t\t\t\t\t\t{ function: 'RocketChat.setUserAvatar', url: dataURI, username: user.username },\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tSystemLogger.info(`Not a valid response, ${response.status}, from the avatar url: ${dataURI}`);\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', `Invalid avatar URL: ${dataURI}`, {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t\turl: dataURI,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!/image\\/.+/.test(response.headers.get('content-type') || '')) {\n\t\t\t\tSystemLogger.info(\n\t\t\t\t\t`Not a valid content-type from the provided url, ${response.headers.get('content-type')}, from the avatar url: ${dataURI}`,\n\t\t\t\t);\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', `Invalid avatar URL: ${dataURI}`, {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t\turl: dataURI,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: Buffer.from(await response.arrayBuffer()),\n\t\t\t\ttype: response.headers.get('content-type') || '',\n\t\t\t};\n\t\t}\n\n\t\tif (service === 'rest') {\n\t\t\tif (!contentType) {\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-content-type', 'Invalid avatar content type', {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: dataURI instanceof Buffer ? dataURI : Buffer.from(dataURI, 'binary'),\n\t\t\t\ttype: contentType,\n\t\t\t};\n\t\t}\n\n\t\tconst fileData = RocketChatFile.dataURIParse(dataURI);\n\n\t\treturn {\n\t\t\tbuffer: Buffer.from(fileData.image, 'base64'),\n\t\t\ttype: fileData.contentType,\n\t\t};\n\t})();\n\n\tconst fileStore = FileUpload.getStore('Avatars');\n\tuser.username && (await fileStore.deleteByName(user.username));\n\n\tconst file = {\n\t\tuserId: user._id,\n\t\ttype,\n\t\tsize: buffer.length,\n\t};\n\n\tconst result = await fileStore.insert(file, buffer);\n\n\tconst avatarETag = etag || result?.etag || '';\n\n\tsetTimeout(async () => {\n\t\tif (service) {\n\t\t\tawait Users.setAvatarData(user._id, service, avatarETag);\n\t\t\tvoid api.broadcast('user.avatarUpdate', {\n\t\t\t\tusername: user.username,\n\t\t\t\tavatarETag,\n\t\t\t});\n\t\t}\n\t}, 500);\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/setUserAvatar.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/setUserAvatar.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/setUserAvatar.ts","sourceRoot":"","sources":["app/lib/server/functions/setUserAvatar.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport type { Response } from '@rocket.chat/server-fetch';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\nimport { Meteor } from 'meteor/meteor';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { FileUpload } from '../../../file-upload/server';\nimport { RocketChatFile } from '../../../file/server';\nimport { settings } from '../../../settings/server';\nimport { checkUrlForSsrf } from './checkUrlForSsrf';\n\nexport const setAvatarFromServiceWithValidation = async (\n\tuserId: string,\n\tdataURI: string,\n\tcontentType?: string,\n\tservice?: string,\n\ttargetUserId?: string,\n): Promise<void> => {\n\tif (!dataURI) {\n\t\tthrow new Meteor.Error('error-invalid-data', 'Invalid dataURI', {\n\t\t\tmethod: 'setAvatarFromService',\n\t\t});\n\t}\n\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'setAvatarFromService',\n\t\t});\n\t}\n\n\tif (!settings.get('Accounts_AllowUserAvatarChange')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'setAvatarFromService',\n\t\t});\n\t}\n\n\tlet user: IUser | null;\n\n\tif (targetUserId && targetUserId !== userId) {\n\t\tif (!(await hasPermissionAsync(userId, 'edit-other-user-avatar'))) {\n\t\t\tthrow new Meteor.Error('error-unauthorized', 'Unauthorized', {\n\t\t\t\tmethod: 'setAvatarFromService',\n\t\t\t});\n\t\t}\n\n\t\tuser = await Users.findOneById(targetUserId, { projection: { _id: 1, username: 1 } });\n\t} else {\n\t\tuser = await Users.findOneById(userId, { projection: { _id: 1, username: 1 } });\n\t}\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-desired-user', 'Invalid desired user', {\n\t\t\tmethod: 'setAvatarFromService',\n\t\t});\n\t}\n\n\treturn setUserAvatar(user, dataURI, contentType, service);\n};\n\nexport function setUserAvatar(\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tdataURI: Buffer,\n\tcontentType: string,\n\tservice: 'rest',\n\tetag?: string,\n): Promise<void>;\nexport function setUserAvatar(\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tdataURI: string,\n\tcontentType?: string,\n\tservice?: 'initials' | 'url' | 'rest' | string,\n\tetag?: string,\n): Promise<void>;\nexport async function setUserAvatar(\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tdataURI: string | Buffer,\n\tcontentType: string | undefined,\n\tservice?: 'initials' | 'url' | 'rest' | string,\n\tetag?: string,\n): Promise<void> {\n\tif (service === 'initials') {\n\t\tawait Users.setAvatarData(user._id, service, null);\n\t\treturn;\n\t}\n\n\tconst { buffer, type } = await (async (): Promise<{ buffer: Buffer; type: string }> => {\n\t\tif (service === 'url' && typeof dataURI === 'string') {\n\t\t\tlet response: Response;\n\n\t\t\tconst isSsrfSafe = await checkUrlForSsrf(dataURI);\n\t\t\tif (!isSsrfSafe) {\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', `Invalid avatar URL: ${encodeURI(dataURI)}`, {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t\turl: dataURI,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tresponse = await fetch(dataURI, { redirect: 'error' });\n\t\t\t} catch (e) {\n\t\t\t\tSystemLogger.info(`Not a valid response, from the avatar url: ${encodeURI(dataURI)}`);\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', `Invalid avatar URL: ${encodeURI(dataURI)}`, {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t\turl: dataURI,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (response.status !== 200) {\n\t\t\t\tif (response.status !== 404) {\n\t\t\t\t\tSystemLogger.info(`Error while handling the setting of the avatar from a url (${encodeURI(dataURI)}) for ${user.username}`);\n\t\t\t\t\tthrow new Meteor.Error(\n\t\t\t\t\t\t'error-avatar-url-handling',\n\t\t\t\t\t\t`Error while handling avatar setting from a URL (${encodeURI(dataURI)}) for ${user.username}`,\n\t\t\t\t\t\t{ function: 'RocketChat.setUserAvatar', url: dataURI, username: user.username },\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tSystemLogger.info(`Not a valid response, ${response.status}, from the avatar url: ${dataURI}`);\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', `Invalid avatar URL: ${dataURI}`, {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t\turl: dataURI,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!/image\\/.+/.test(response.headers.get('content-type') || '')) {\n\t\t\t\tSystemLogger.info(\n\t\t\t\t\t`Not a valid content-type from the provided url, ${response.headers.get('content-type')}, from the avatar url: ${dataURI}`,\n\t\t\t\t);\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', `Invalid avatar URL: ${dataURI}`, {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t\turl: dataURI,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: Buffer.from(await response.arrayBuffer()),\n\t\t\t\ttype: response.headers.get('content-type') || '',\n\t\t\t};\n\t\t}\n\n\t\tif (service === 'rest') {\n\t\t\tif (!contentType) {\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-content-type', 'Invalid avatar content type', {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: dataURI instanceof Buffer ? dataURI : Buffer.from(dataURI, 'binary'),\n\t\t\t\ttype: contentType,\n\t\t\t};\n\t\t}\n\n\t\tconst fileData = RocketChatFile.dataURIParse(dataURI);\n\n\t\treturn {\n\t\t\tbuffer: Buffer.from(fileData.image, 'base64'),\n\t\t\ttype: fileData.contentType,\n\t\t};\n\t})();\n\n\tconst fileStore = FileUpload.getStore('Avatars');\n\tuser.username && (await fileStore.deleteByName(user.username));\n\n\tconst file = {\n\t\tuserId: user._id,\n\t\ttype,\n\t\tsize: buffer.length,\n\t};\n\n\tconst result = await fileStore.insert(file, buffer);\n\n\tconst avatarETag = etag || result?.etag || '';\n\n\tsetTimeout(async () => {\n\t\tif (service) {\n\t\t\tawait Users.setAvatarData(user._id, service, avatarETag);\n\t\t\tvoid api.broadcast('user.avatarUpdate', {\n\t\t\t\tusername: user.username,\n\t\t\t\tavatarETag,\n\t\t\t});\n\t\t}\n\t}, 500);\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      setAvatarFromServiceWithValidation: () => setAvatarFromServiceWithValidation,\n      setUserAvatar: () => setUserAvatar\n    });\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let fetch;\n    module.link(\"@rocket.chat/server-fetch\", {\n      serverFetch(v) {\n        fetch = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let SystemLogger;\n    module.link(\"../../../../server/lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 4);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 5);\n    let FileUpload;\n    module.link(\"../../../file-upload/server\", {\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 6);\n    let RocketChatFile;\n    module.link(\"../../../file/server\", {\n      RocketChatFile(v) {\n        RocketChatFile = v;\n      }\n    }, 7);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 8);\n    let checkUrlForSsrf;\n    module.link(\"./checkUrlForSsrf\", {\n      checkUrlForSsrf(v) {\n        checkUrlForSsrf = v;\n      }\n    }, 9);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const setAvatarFromServiceWithValidation = async (userId, dataURI, contentType, service, targetUserId) => {\n      if (!dataURI) {\n        throw new Meteor.Error('error-invalid-data', 'Invalid dataURI', {\n          method: 'setAvatarFromService'\n        });\n      }\n      if (!userId) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'setAvatarFromService'\n        });\n      }\n      if (!settings.get('Accounts_AllowUserAvatarChange')) {\n        throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n          method: 'setAvatarFromService'\n        });\n      }\n      let user;\n      if (targetUserId && targetUserId !== userId) {\n        if (!(await hasPermissionAsync(userId, 'edit-other-user-avatar'))) {\n          throw new Meteor.Error('error-unauthorized', 'Unauthorized', {\n            method: 'setAvatarFromService'\n          });\n        }\n        user = await Users.findOneById(targetUserId, {\n          projection: {\n            _id: 1,\n            username: 1\n          }\n        });\n      } else {\n        user = await Users.findOneById(userId, {\n          projection: {\n            _id: 1,\n            username: 1\n          }\n        });\n      }\n      if (!user) {\n        throw new Meteor.Error('error-invalid-desired-user', 'Invalid desired user', {\n          method: 'setAvatarFromService'\n        });\n      }\n      return setUserAvatar(user, dataURI, contentType, service);\n    };\n    async function setUserAvatar(user, dataURI, contentType, service, etag) {\n      if (service === 'initials') {\n        await Users.setAvatarData(user._id, service, null);\n        return;\n      }\n      const {\n        buffer,\n        type\n      } = await (async () => {\n        if (service === 'url' && typeof dataURI === 'string') {\n          let response;\n          const isSsrfSafe = await checkUrlForSsrf(dataURI);\n          if (!isSsrfSafe) {\n            throw new Meteor.Error('error-avatar-invalid-url', \"Invalid avatar URL: \".concat(encodeURI(dataURI)), {\n              function: 'setUserAvatar',\n              url: dataURI\n            });\n          }\n          try {\n            response = await fetch(dataURI, {\n              redirect: 'error'\n            });\n          } catch (e) {\n            SystemLogger.info(\"Not a valid response, from the avatar url: \".concat(encodeURI(dataURI)));\n            throw new Meteor.Error('error-avatar-invalid-url', \"Invalid avatar URL: \".concat(encodeURI(dataURI)), {\n              function: 'setUserAvatar',\n              url: dataURI\n            });\n          }\n          if (response.status !== 200) {\n            if (response.status !== 404) {\n              SystemLogger.info(\"Error while handling the setting of the avatar from a url (\".concat(encodeURI(dataURI), \") for \").concat(user.username));\n              throw new Meteor.Error('error-avatar-url-handling', \"Error while handling avatar setting from a URL (\".concat(encodeURI(dataURI), \") for \").concat(user.username), {\n                function: 'RocketChat.setUserAvatar',\n                url: dataURI,\n                username: user.username\n              });\n            }\n            SystemLogger.info(\"Not a valid response, \".concat(response.status, \", from the avatar url: \").concat(dataURI));\n            throw new Meteor.Error('error-avatar-invalid-url', \"Invalid avatar URL: \".concat(dataURI), {\n              function: 'setUserAvatar',\n              url: dataURI\n            });\n          }\n          if (!/image\\/.+/.test(response.headers.get('content-type') || '')) {\n            SystemLogger.info(\"Not a valid content-type from the provided url, \".concat(response.headers.get('content-type'), \", from the avatar url: \").concat(dataURI));\n            throw new Meteor.Error('error-avatar-invalid-url', \"Invalid avatar URL: \".concat(dataURI), {\n              function: 'setUserAvatar',\n              url: dataURI\n            });\n          }\n          return {\n            buffer: Buffer.from(await response.arrayBuffer()),\n            type: response.headers.get('content-type') || ''\n          };\n        }\n        if (service === 'rest') {\n          if (!contentType) {\n            throw new Meteor.Error('error-avatar-invalid-content-type', 'Invalid avatar content type', {\n              function: 'setUserAvatar'\n            });\n          }\n          return {\n            buffer: dataURI instanceof Buffer ? dataURI : Buffer.from(dataURI, 'binary'),\n            type: contentType\n          };\n        }\n        const fileData = RocketChatFile.dataURIParse(dataURI);\n        return {\n          buffer: Buffer.from(fileData.image, 'base64'),\n          type: fileData.contentType\n        };\n      })();\n      const fileStore = FileUpload.getStore('Avatars');\n      user.username && (await fileStore.deleteByName(user.username));\n      const file = {\n        userId: user._id,\n        type,\n        size: buffer.length\n      };\n      const result = await fileStore.insert(file, buffer);\n      const avatarETag = etag || (result === null || result === void 0 ? void 0 : result.etag) || '';\n      setTimeout(async () => {\n        if (service) {\n          await Users.setAvatarData(user._id, service, avatarETag);\n          void api.broadcast('user.avatarUpdate', {\n            username: user.username,\n            avatarETag\n          });\n        }\n      }, 500);\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","setAvatarFromServiceWithValidation","setUserAvatar","api","link","v","Users","fetch","serverFetch","Meteor","SystemLogger","hasPermissionAsync","FileUpload","RocketChatFile","settings","checkUrlForSsrf","__reifyWaitForDeps__","userId","dataURI","contentType","service","targetUserId","Error","method","get","user","findOneById","projection","_id","username","etag","setAvatarData","buffer","type","response","isSsrfSafe","concat","encodeURI","function","url","redirect","e","info","status","test","headers","Buffer","from","arrayBuffer","fileData","dataURIParse","image","fileStore","getStore","deleteByName","file","size","length","result","insert","avatarETag","setTimeout","broadcast","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/setUserAvatar.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport type { Response } from '@rocket.chat/server-fetch';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\nimport { Meteor } from 'meteor/meteor';\n\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { FileUpload } from '../../../file-upload/server';\nimport { RocketChatFile } from '../../../file/server';\nimport { settings } from '../../../settings/server';\nimport { checkUrlForSsrf } from './checkUrlForSsrf';\n\nexport const setAvatarFromServiceWithValidation = async (\n\tuserId: string,\n\tdataURI: string,\n\tcontentType?: string,\n\tservice?: string,\n\ttargetUserId?: string,\n): Promise<void> => {\n\tif (!dataURI) {\n\t\tthrow new Meteor.Error('error-invalid-data', 'Invalid dataURI', {\n\t\t\tmethod: 'setAvatarFromService',\n\t\t});\n\t}\n\n\tif (!userId) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'setAvatarFromService',\n\t\t});\n\t}\n\n\tif (!settings.get('Accounts_AllowUserAvatarChange')) {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\tmethod: 'setAvatarFromService',\n\t\t});\n\t}\n\n\tlet user: IUser | null;\n\n\tif (targetUserId && targetUserId !== userId) {\n\t\tif (!(await hasPermissionAsync(userId, 'edit-other-user-avatar'))) {\n\t\t\tthrow new Meteor.Error('error-unauthorized', 'Unauthorized', {\n\t\t\t\tmethod: 'setAvatarFromService',\n\t\t\t});\n\t\t}\n\n\t\tuser = await Users.findOneById(targetUserId, { projection: { _id: 1, username: 1 } });\n\t} else {\n\t\tuser = await Users.findOneById(userId, { projection: { _id: 1, username: 1 } });\n\t}\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-desired-user', 'Invalid desired user', {\n\t\t\tmethod: 'setAvatarFromService',\n\t\t});\n\t}\n\n\treturn setUserAvatar(user, dataURI, contentType, service);\n};\n\nexport function setUserAvatar(\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tdataURI: Buffer,\n\tcontentType: string,\n\tservice: 'rest',\n\tetag?: string,\n): Promise<void>;\nexport function setUserAvatar(\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tdataURI: string,\n\tcontentType?: string,\n\tservice?: 'initials' | 'url' | 'rest' | string,\n\tetag?: string,\n): Promise<void>;\nexport async function setUserAvatar(\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tdataURI: string | Buffer,\n\tcontentType: string | undefined,\n\tservice?: 'initials' | 'url' | 'rest' | string,\n\tetag?: string,\n): Promise<void> {\n\tif (service === 'initials') {\n\t\tawait Users.setAvatarData(user._id, service, null);\n\t\treturn;\n\t}\n\n\tconst { buffer, type } = await (async (): Promise<{ buffer: Buffer; type: string }> => {\n\t\tif (service === 'url' && typeof dataURI === 'string') {\n\t\t\tlet response: Response;\n\n\t\t\tconst isSsrfSafe = await checkUrlForSsrf(dataURI);\n\t\t\tif (!isSsrfSafe) {\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', `Invalid avatar URL: ${encodeURI(dataURI)}`, {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t\turl: dataURI,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tresponse = await fetch(dataURI, { redirect: 'error' });\n\t\t\t} catch (e) {\n\t\t\t\tSystemLogger.info(`Not a valid response, from the avatar url: ${encodeURI(dataURI)}`);\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', `Invalid avatar URL: ${encodeURI(dataURI)}`, {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t\turl: dataURI,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (response.status !== 200) {\n\t\t\t\tif (response.status !== 404) {\n\t\t\t\t\tSystemLogger.info(`Error while handling the setting of the avatar from a url (${encodeURI(dataURI)}) for ${user.username}`);\n\t\t\t\t\tthrow new Meteor.Error(\n\t\t\t\t\t\t'error-avatar-url-handling',\n\t\t\t\t\t\t`Error while handling avatar setting from a URL (${encodeURI(dataURI)}) for ${user.username}`,\n\t\t\t\t\t\t{ function: 'RocketChat.setUserAvatar', url: dataURI, username: user.username },\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tSystemLogger.info(`Not a valid response, ${response.status}, from the avatar url: ${dataURI}`);\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', `Invalid avatar URL: ${dataURI}`, {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t\turl: dataURI,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!/image\\/.+/.test(response.headers.get('content-type') || '')) {\n\t\t\t\tSystemLogger.info(\n\t\t\t\t\t`Not a valid content-type from the provided url, ${response.headers.get('content-type')}, from the avatar url: ${dataURI}`,\n\t\t\t\t);\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-url', `Invalid avatar URL: ${dataURI}`, {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t\turl: dataURI,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: Buffer.from(await response.arrayBuffer()),\n\t\t\t\ttype: response.headers.get('content-type') || '',\n\t\t\t};\n\t\t}\n\n\t\tif (service === 'rest') {\n\t\t\tif (!contentType) {\n\t\t\t\tthrow new Meteor.Error('error-avatar-invalid-content-type', 'Invalid avatar content type', {\n\t\t\t\t\tfunction: 'setUserAvatar',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: dataURI instanceof Buffer ? dataURI : Buffer.from(dataURI, 'binary'),\n\t\t\t\ttype: contentType,\n\t\t\t};\n\t\t}\n\n\t\tconst fileData = RocketChatFile.dataURIParse(dataURI);\n\n\t\treturn {\n\t\t\tbuffer: Buffer.from(fileData.image, 'base64'),\n\t\t\ttype: fileData.contentType,\n\t\t};\n\t})();\n\n\tconst fileStore = FileUpload.getStore('Avatars');\n\tuser.username && (await fileStore.deleteByName(user.username));\n\n\tconst file = {\n\t\tuserId: user._id,\n\t\ttype,\n\t\tsize: buffer.length,\n\t};\n\n\tconst result = await fileStore.insert(file, buffer);\n\n\tconst avatarETag = etag || result?.etag || '';\n\n\tsetTimeout(async () => {\n\t\tif (service) {\n\t\t\tawait Users.setAvatarData(user._id, service, avatarETag);\n\t\t\tvoid api.broadcast('user.avatarUpdate', {\n\t\t\t\tusername: user.username,\n\t\t\t\tavatarETag,\n\t\t\t});\n\t\t}\n\t}, 500);\n}\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAK,CAAE;MAAAC,kCAAmC,EAAAA,CAAA,KAAAA,kCAAA;MAAAC,aAAA,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,GAAA;IAAAJ,MAAA,CAAAK,IAAA;MAAAD,IAAAE,CAAA;QAAAF,GAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA;IAAAP,MAAA,CAAAK,IAAA;MAAAE,MAAAD,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,KAAA;IAAAR,MAAA,CAAAK,IAAA;MAAAI,YAAAH,CAAA;QAAAE,KAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAI,MAAA;IAAAV,MAAA,CAAAK,IAAA;MAAAK,OAAAJ,CAAA;QAAAI,MAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,YAAA;IAAAX,MAAA,CAAAK,IAAA;MAAAM,aAAAL,CAAA;QAAAK,YAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,kBAAA;IAAAZ,MAAA,CAAAK,IAAA;MAAAO,mBAAAN,CAAA;QAAAM,kBAAA,GAAAN,CAAA;MAAA;IAAA;IAAA,IAAAO,UAAA;IAAAb,MAAA,CAAAK,IAAA;MAAAQ,WAAAP,CAAA;QAAAO,UAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,cAAA;IAAAd,MAAA,CAAAK,IAAA;MAAAS,eAAAR,CAAA;QAAAQ,cAAA,GAAAR,CAAA;MAAA;IAAA;IAAA,IAAAS,QAAA;IAAAf,MAAA,CAAAK,IAAA;MAAAU,SAAAT,CAAA;QAAAS,QAAA,GAAAT,CAAA;MAAA;IAAA;IAAA,IAAAU,eAAA;IAAAhB,MAAA,CAAAK,IAAA;MAAAW,gBAAAV,CAAA;QAAAU,eAAA,GAAAV,CAAA;MAAA;IAAA;IAAA,IAAAW,oBAAA,WAAAA,oBAAA;IAc1C,MAAMf,kCAAkC,GAAG,MAAAA,CACjDgB,MAAc,EACdC,OAAe,EACfC,WAAoB,EACpBC,OAAgB,EAChBC,YAAqB,KACH;MAClB,IAAI,CAACH,OAAO,EAAE;QACb,MAAM,IAAIT,MAAM,CAACa,KAAK,CAAC,oBAAoB,EAAE,iBAAiB,EAAE;UAC/DC,MAAM,EAAE;SACR,CAAC;MACH;MAEA,IAAI,CAACN,MAAM,EAAE;QACZ,MAAM,IAAIR,MAAM,CAACa,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;UAC5DC,MAAM,EAAE;SACR,CAAC;MACH;MAEA,IAAI,CAACT,QAAQ,CAACU,GAAG,CAAC,gCAAgC,CAAC,EAAE;QACpD,MAAM,IAAIf,MAAM,CAACa,KAAK,CAAC,mBAAmB,EAAE,aAAa,EAAE;UAC1DC,MAAM,EAAE;SACR,CAAC;MACH;MAEA,IAAIE,IAAkB;MAEtB,IAAIJ,YAAY,IAAIA,YAAY,KAAKJ,MAAM,EAAE;QAC5C,IAAI,EAAE,MAAMN,kBAAkB,CAACM,MAAM,EAAE,wBAAwB,CAAC,CAAC,EAAE;UAClE,MAAM,IAAIR,MAAM,CAACa,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAC5DC,MAAM,EAAE;WACR,CAAC;QACH;QAEAE,IAAI,GAAG,MAAMnB,KAAK,CAACoB,WAAW,CAACL,YAAY,EAAE;UAAEM,UAAU,EAAE;YAAEC,GAAG,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAC;QAAE,CAAE,CAAC;MACtF,CAAC,MAAM;QACNJ,IAAI,GAAG,MAAMnB,KAAK,CAACoB,WAAW,CAACT,MAAM,EAAE;UAAEU,UAAU,EAAE;YAAEC,GAAG,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAC;QAAE,CAAE,CAAC;MAChF;MAEA,IAAI,CAACJ,IAAI,EAAE;QACV,MAAM,IAAIhB,MAAM,CAACa,KAAK,CAAC,4BAA4B,EAAE,sBAAsB,EAAE;UAC5EC,MAAM,EAAE;SACR,CAAC;MACH;MAEA,OAAOrB,aAAa,CAACuB,IAAI,EAAEP,OAAO,EAAEC,WAAW,EAAEC,OAAO,CAAC;IAC1D,CAAC;IAgBM,eAAelB,aAAaA,CAClCuB,IAAqC,EACrCP,OAAwB,EACxBC,WAA+B,EAC/BC,OAA8C,EAC9CU,IAAa;MAEb,IAAIV,OAAO,KAAK,UAAU,EAAE;QAC3B,MAAMd,KAAK,CAACyB,aAAa,CAACN,IAAI,CAACG,GAAG,EAAER,OAAO,EAAE,IAAI,CAAC;QAClD;MACD;MAEA,MAAM;QAAEY,MAAM;QAAEC;MAAI,CAAE,GAAG,MAAM,CAAC,YAAsD;QACrF,IAAIb,OAAO,KAAK,KAAK,IAAI,OAAOF,OAAO,KAAK,QAAQ,EAAE;UACrD,IAAIgB,QAAkB;UAEtB,MAAMC,UAAU,GAAG,MAAMpB,eAAe,CAACG,OAAO,CAAC;UACjD,IAAI,CAACiB,UAAU,EAAE;YAChB,MAAM,IAAI1B,MAAM,CAACa,KAAK,CAAC,0BAA0B,yBAAAc,MAAA,CAAyBC,SAAS,CAACnB,OAAO,CAAC,GAAI;cAC/FoB,QAAQ,EAAE,eAAe;cACzBC,GAAG,EAAErB;aACL,CAAC;UACH;UAEA,IAAI;YACHgB,QAAQ,GAAG,MAAM3B,KAAK,CAACW,OAAO,EAAE;cAAEsB,QAAQ,EAAE;YAAO,CAAE,CAAC;UACvD,CAAC,CAAC,OAAOC,CAAC,EAAE;YACX/B,YAAY,CAACgC,IAAI,+CAAAN,MAAA,CAA+CC,SAAS,CAACnB,OAAO,CAAC,CAAE,CAAC;YACrF,MAAM,IAAIT,MAAM,CAACa,KAAK,CAAC,0BAA0B,yBAAAc,MAAA,CAAyBC,SAAS,CAACnB,OAAO,CAAC,GAAI;cAC/FoB,QAAQ,EAAE,eAAe;cACzBC,GAAG,EAAErB;aACL,CAAC;UACH;UAEA,IAAIgB,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;YAC5B,IAAIT,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;cAC5BjC,YAAY,CAACgC,IAAI,+DAAAN,MAAA,CAA+DC,SAAS,CAACnB,OAAO,CAAC,YAAAkB,MAAA,CAASX,IAAI,CAACI,QAAQ,CAAE,CAAC;cAC3H,MAAM,IAAIpB,MAAM,CAACa,KAAK,CACrB,2BAA2B,qDAAAc,MAAA,CACwBC,SAAS,CAACnB,OAAO,CAAC,YAAAkB,MAAA,CAASX,IAAI,CAACI,QAAQ,GAC3F;gBAAES,QAAQ,EAAE,0BAA0B;gBAAEC,GAAG,EAAErB,OAAO;gBAAEW,QAAQ,EAAEJ,IAAI,CAACI;cAAQ,CAAE,CAC/E;YACF;YAEAnB,YAAY,CAACgC,IAAI,0BAAAN,MAAA,CAA0BF,QAAQ,CAACS,MAAM,6BAAAP,MAAA,CAA0BlB,OAAO,CAAE,CAAC;YAC9F,MAAM,IAAIT,MAAM,CAACa,KAAK,CAAC,0BAA0B,yBAAAc,MAAA,CAAyBlB,OAAO,GAAI;cACpFoB,QAAQ,EAAE,eAAe;cACzBC,GAAG,EAAErB;aACL,CAAC;UACH;UAEA,IAAI,CAAC,WAAW,CAAC0B,IAAI,CAACV,QAAQ,CAACW,OAAO,CAACrB,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE;YAClEd,YAAY,CAACgC,IAAI,oDAAAN,MAAA,CACmCF,QAAQ,CAACW,OAAO,CAACrB,GAAG,CAAC,cAAc,CAAC,6BAAAY,MAAA,CAA0BlB,OAAO,CAAE,CAC1H;YACD,MAAM,IAAIT,MAAM,CAACa,KAAK,CAAC,0BAA0B,yBAAAc,MAAA,CAAyBlB,OAAO,GAAI;cACpFoB,QAAQ,EAAE,eAAe;cACzBC,GAAG,EAAErB;aACL,CAAC;UACH;UAEA,OAAO;YACNc,MAAM,EAAEc,MAAM,CAACC,IAAI,CAAC,MAAMb,QAAQ,CAACc,WAAW,EAAE,CAAC;YACjDf,IAAI,EAAEC,QAAQ,CAACW,OAAO,CAACrB,GAAG,CAAC,cAAc,CAAC,IAAI;WAC9C;QACF;QAEA,IAAIJ,OAAO,KAAK,MAAM,EAAE;UACvB,IAAI,CAACD,WAAW,EAAE;YACjB,MAAM,IAAIV,MAAM,CAACa,KAAK,CAAC,mCAAmC,EAAE,6BAA6B,EAAE;cAC1FgB,QAAQ,EAAE;aACV,CAAC;UACH;UAEA,OAAO;YACNN,MAAM,EAAEd,OAAO,YAAY4B,MAAM,GAAG5B,OAAO,GAAG4B,MAAM,CAACC,IAAI,CAAC7B,OAAO,EAAE,QAAQ,CAAC;YAC5Ee,IAAI,EAAEd;WACN;QACF;QAEA,MAAM8B,QAAQ,GAAGpC,cAAc,CAACqC,YAAY,CAAChC,OAAO,CAAC;QAErD,OAAO;UACNc,MAAM,EAAEc,MAAM,CAACC,IAAI,CAACE,QAAQ,CAACE,KAAK,EAAE,QAAQ,CAAC;UAC7ClB,IAAI,EAAEgB,QAAQ,CAAC9B;SACf;MACF,CAAC,EAAC,CAAE;MAEJ,MAAMiC,SAAS,GAAGxC,UAAU,CAACyC,QAAQ,CAAC,SAAS,CAAC;MAChD5B,IAAI,CAACI,QAAQ,KAAK,MAAMuB,SAAS,CAACE,YAAY,CAAC7B,IAAI,CAACI,QAAQ,CAAC,CAAC;MAE9D,MAAM0B,IAAI,GAAG;QACZtC,MAAM,EAAEQ,IAAI,CAACG,GAAG;QAChBK,IAAI;QACJuB,IAAI,EAAExB,MAAM,CAACyB;OACb;MAED,MAAMC,MAAM,GAAG,MAAMN,SAAS,CAACO,MAAM,CAACJ,IAAI,EAAEvB,MAAM,CAAC;MAEnD,MAAM4B,UAAU,GAAG9B,IAAI,KAAI4B,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE5B,IAAI,KAAI,EAAE;MAE7C+B,UAAU,CAAC,YAAW;QACrB,IAAIzC,OAAO,EAAE;UACZ,MAAMd,KAAK,CAACyB,aAAa,CAACN,IAAI,CAACG,GAAG,EAAER,OAAO,EAAEwC,UAAU,CAAC;UACxD,KAAKzD,GAAG,CAAC2D,SAAS,CAAC,mBAAmB,EAAE;YACvCjC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;YACvB+B;WACA,CAAC;QACH;MACD,CAAC,EAAE,GAAG,CAAC;IACR;IAACG,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"febceef0a86499e3ffbb0c579f2a73f15ab8617e"}
