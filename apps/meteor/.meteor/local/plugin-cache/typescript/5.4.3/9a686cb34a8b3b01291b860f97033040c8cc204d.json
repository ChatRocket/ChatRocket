{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/lib/tracking.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/lib/tracking.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/lib/tracking.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/lib/tracking.ts","sourceRoot":"","sources":["app/livechat/server/lib/tracking.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AACrD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAI1C,MAAM,CAAC,KAAK,UAAU,eAAe,CAAC,KAAa,EAAE,MAA0B,EAAE,QAAkB;IAClG,cAAc,CAAC,KAAK,CAAC;QACpB,GAAG,EAAE,uDAAuD,KAAK,EAAE;QACnE,QAAQ;QACR,MAAM;KACN,CAAC,CAAC;IAEH,IAAI,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,GAAG,CAAS,+BAA+B,CAAC,EAAE,CAAC;QAC/E,OAAO;IACR,CAAC;IACD,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IAEnD,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC;IACjC,MAAM,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;IACvC,MAAM,SAAS,GAOX;QACH,UAAU,EAAE;YACX,IAAI,EAAE,QAAQ;YACd,KAAK;SACL;KACD,CAAC;IAEF,IAAI,CAAC,MAAM,EAAE,CAAC;QACb,cAAc,CAAC,IAAI,CAAC,8DAA8D,KAAK,EAAE,CAAC,CAAC;QAC3F,oDAAoD;QACpD,MAAM,sBAAsB,GAAG,UAAU,CAAC;QAC1C,SAAS,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,sBAAsB,CAAC;IACpE,CAAC;IAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,0CAA0C,CAAC,EAAE,CAAC;QAC/D,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,0HAA0H;IAC1H,OAAO,OAAO,CAAC,iBAAiB,CAAC,6BAA6B,EAAE,MAAM,EAAE,GAAG,SAAS,MAAM,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AACvH,CAAC","sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport { Users } from '@rocket.chat/models';\n\nimport { settings } from '../../../settings/server';\nimport { livechatLogger } from './logger';\n\ntype PageInfo = { title: string; location: { href: string }; change: string };\n\nexport async function savePageHistory(token: string, roomId: string | undefined, pageInfo: PageInfo) {\n\tlivechatLogger.debug({\n\t\tmsg: `Saving page movement history for visitor with token ${token}`,\n\t\tpageInfo,\n\t\troomId,\n\t});\n\n\tif (pageInfo.change !== settings.get<string>('Livechat_history_monitor_type')) {\n\t\treturn;\n\t}\n\tconst user = await Users.findOneById('rocket.cat');\n\n\tif (!user) {\n\t\tthrow new Error('error-invalid-user');\n\t}\n\n\tconst pageTitle = pageInfo.title;\n\tconst pageUrl = pageInfo.location.href;\n\tconst extraData: {\n\t\tnavigation: {\n\t\t\tpage: PageInfo;\n\t\t\ttoken: string;\n\t\t};\n\t\texpireAt?: number;\n\t\t_hidden?: boolean;\n\t} = {\n\t\tnavigation: {\n\t\t\tpage: pageInfo,\n\t\t\ttoken,\n\t\t},\n\t};\n\n\tif (!roomId) {\n\t\tlivechatLogger.warn(`Saving page history without room id for visitor with token ${token}`);\n\t\t// keep history of unregistered visitors for 1 month\n\t\tconst keepHistoryMiliseconds = 2592000000;\n\t\textraData.expireAt = new Date().getTime() + keepHistoryMiliseconds;\n\t}\n\n\tif (!settings.get('Livechat_Visitor_navigation_as_a_message')) {\n\t\textraData._hidden = true;\n\t}\n\n\t// @ts-expect-error: Investigating on which case we won't receive a roomId and where that history is supposed to be stored\n\treturn Message.saveSystemMessage('livechat_navigation_history', roomId, `${pageTitle} - ${pageUrl}`, user, extraData);\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/lib/tracking.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/lib/tracking.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/lib/tracking.ts","sourceRoot":"","sources":["app/livechat/server/lib/tracking.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AACrD,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAI1C,MAAM,CAAC,KAAK,UAAU,eAAe,CAAC,KAAa,EAAE,MAA0B,EAAE,QAAkB;IAClG,cAAc,CAAC,KAAK,CAAC;QACpB,GAAG,EAAE,uDAAuD,KAAK,EAAE;QACnE,QAAQ;QACR,MAAM;KACN,CAAC,CAAC;IAEH,IAAI,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,GAAG,CAAS,+BAA+B,CAAC,EAAE,CAAC;QAC/E,OAAO;IACR,CAAC;IACD,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IAEnD,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC;IACjC,MAAM,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;IACvC,MAAM,SAAS,GAOX;QACH,UAAU,EAAE;YACX,IAAI,EAAE,QAAQ;YACd,KAAK;SACL;KACD,CAAC;IAEF,IAAI,CAAC,MAAM,EAAE,CAAC;QACb,cAAc,CAAC,IAAI,CAAC,8DAA8D,KAAK,EAAE,CAAC,CAAC;QAC3F,oDAAoD;QACpD,MAAM,sBAAsB,GAAG,UAAU,CAAC;QAC1C,SAAS,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,sBAAsB,CAAC;IACpE,CAAC;IAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,0CAA0C,CAAC,EAAE,CAAC;QAC/D,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,0HAA0H;IAC1H,OAAO,OAAO,CAAC,iBAAiB,CAAC,6BAA6B,EAAE,MAAM,EAAE,GAAG,SAAS,MAAM,OAAO,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AACvH,CAAC","sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport { Users } from '@rocket.chat/models';\n\nimport { settings } from '../../../settings/server';\nimport { livechatLogger } from './logger';\n\ntype PageInfo = { title: string; location: { href: string }; change: string };\n\nexport async function savePageHistory(token: string, roomId: string | undefined, pageInfo: PageInfo) {\n\tlivechatLogger.debug({\n\t\tmsg: `Saving page movement history for visitor with token ${token}`,\n\t\tpageInfo,\n\t\troomId,\n\t});\n\n\tif (pageInfo.change !== settings.get<string>('Livechat_history_monitor_type')) {\n\t\treturn;\n\t}\n\tconst user = await Users.findOneById('rocket.cat');\n\n\tif (!user) {\n\t\tthrow new Error('error-invalid-user');\n\t}\n\n\tconst pageTitle = pageInfo.title;\n\tconst pageUrl = pageInfo.location.href;\n\tconst extraData: {\n\t\tnavigation: {\n\t\t\tpage: PageInfo;\n\t\t\ttoken: string;\n\t\t};\n\t\texpireAt?: number;\n\t\t_hidden?: boolean;\n\t} = {\n\t\tnavigation: {\n\t\t\tpage: pageInfo,\n\t\t\ttoken,\n\t\t},\n\t};\n\n\tif (!roomId) {\n\t\tlivechatLogger.warn(`Saving page history without room id for visitor with token ${token}`);\n\t\t// keep history of unregistered visitors for 1 month\n\t\tconst keepHistoryMiliseconds = 2592000000;\n\t\textraData.expireAt = new Date().getTime() + keepHistoryMiliseconds;\n\t}\n\n\tif (!settings.get('Livechat_Visitor_navigation_as_a_message')) {\n\t\textraData._hidden = true;\n\t}\n\n\t// @ts-expect-error: Investigating on which case we won't receive a roomId and where that history is supposed to be stored\n\treturn Message.saveSystemMessage('livechat_navigation_history', roomId, `${pageTitle} - ${pageUrl}`, user, extraData);\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      savePageHistory: () => savePageHistory\n    });\n    let Message;\n    module.link(\"@rocket.chat/core-services\", {\n      Message(v) {\n        Message = v;\n      }\n    }, 0);\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 2);\n    let livechatLogger;\n    module.link(\"./logger\", {\n      livechatLogger(v) {\n        livechatLogger = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function savePageHistory(token, roomId, pageInfo) {\n      livechatLogger.debug({\n        msg: \"Saving page movement history for visitor with token \".concat(token),\n        pageInfo,\n        roomId\n      });\n      if (pageInfo.change !== settings.get('Livechat_history_monitor_type')) {\n        return;\n      }\n      const user = await Users.findOneById('rocket.cat');\n      if (!user) {\n        throw new Error('error-invalid-user');\n      }\n      const pageTitle = pageInfo.title;\n      const pageUrl = pageInfo.location.href;\n      const extraData = {\n        navigation: {\n          page: pageInfo,\n          token\n        }\n      };\n      if (!roomId) {\n        livechatLogger.warn(\"Saving page history without room id for visitor with token \".concat(token));\n        // keep history of unregistered visitors for 1 month\n        const keepHistoryMiliseconds = 2592000000;\n        extraData.expireAt = new Date().getTime() + keepHistoryMiliseconds;\n      }\n      if (!settings.get('Livechat_Visitor_navigation_as_a_message')) {\n        extraData._hidden = true;\n      }\n      // @ts-expect-error: Investigating on which case we won't receive a roomId and where that history is supposed to be stored\n      return Message.saveSystemMessage('livechat_navigation_history', roomId, \"\".concat(pageTitle, \" - \").concat(pageUrl), user, extraData);\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","savePageHistory","Message","link","v","Users","settings","livechatLogger","__reifyWaitForDeps__","token","roomId","pageInfo","debug","msg","concat","change","get","user","findOneById","Error","pageTitle","title","pageUrl","location","href","extraData","navigation","page","warn","keepHistoryMiliseconds","expireAt","Date","getTime","_hidden","saveSystemMessage","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/lib/tracking.ts"],"sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport { Users } from '@rocket.chat/models';\n\nimport { settings } from '../../../settings/server';\nimport { livechatLogger } from './logger';\n\ntype PageInfo = { title: string; location: { href: string }; change: string };\n\nexport async function savePageHistory(token: string, roomId: string | undefined, pageInfo: PageInfo) {\n\tlivechatLogger.debug({\n\t\tmsg: `Saving page movement history for visitor with token ${token}`,\n\t\tpageInfo,\n\t\troomId,\n\t});\n\n\tif (pageInfo.change !== settings.get<string>('Livechat_history_monitor_type')) {\n\t\treturn;\n\t}\n\tconst user = await Users.findOneById('rocket.cat');\n\n\tif (!user) {\n\t\tthrow new Error('error-invalid-user');\n\t}\n\n\tconst pageTitle = pageInfo.title;\n\tconst pageUrl = pageInfo.location.href;\n\tconst extraData: {\n\t\tnavigation: {\n\t\t\tpage: PageInfo;\n\t\t\ttoken: string;\n\t\t};\n\t\texpireAt?: number;\n\t\t_hidden?: boolean;\n\t} = {\n\t\tnavigation: {\n\t\t\tpage: pageInfo,\n\t\t\ttoken,\n\t\t},\n\t};\n\n\tif (!roomId) {\n\t\tlivechatLogger.warn(`Saving page history without room id for visitor with token ${token}`);\n\t\t// keep history of unregistered visitors for 1 month\n\t\tconst keepHistoryMiliseconds = 2592000000;\n\t\textraData.expireAt = new Date().getTime() + keepHistoryMiliseconds;\n\t}\n\n\tif (!settings.get('Livechat_Visitor_navigation_as_a_message')) {\n\t\textraData._hidden = true;\n\t}\n\n\t// @ts-expect-error: Investigating on which case we won't receive a roomId and where that history is supposed to be stored\n\treturn Message.saveSystemMessage('livechat_navigation_history', roomId, `${pageTitle} - ${pageUrl}`, user, extraData);\n}\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAE;MAAAC,eAAe,EAAAA,CAAA,KAAAA;IAAA,EAA4B;IAAC,IAAAC,OAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,QAAAE,CAAA;QAAAF,OAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA;IAAAN,MAAA,CAAAI,IAAA;MAAAE,MAAAD,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,QAAA;IAAAP,MAAA,CAAAI,IAAA;MAAAG,SAAAF,CAAA;QAAAE,QAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,cAAA;IAAAR,MAAA,CAAAI,IAAA;MAAAI,eAAAH,CAAA;QAAAG,cAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,oBAAA,WAAAA,oBAAA;IAQ9C,eAAeP,eAAeA,CAACQ,KAAa,EAAEC,MAA0B,EAAEC,QAAkB;MAClGJ,cAAc,CAACK,KAAK,CAAC;QACpBC,GAAG,yDAAAC,MAAA,CAAyDL,KAAK,CAAE;QACnEE,QAAQ;QACRD;OACA,CAAC;MAEF,IAAIC,QAAQ,CAACI,MAAM,KAAKT,QAAQ,CAACU,GAAG,CAAS,+BAA+B,CAAC,EAAE;QAC9E;MACD;MACA,MAAMC,IAAI,GAAG,MAAMZ,KAAK,CAACa,WAAW,CAAC,YAAY,CAAC;MAElD,IAAI,CAACD,IAAI,EAAE;QACV,MAAM,IAAIE,KAAK,CAAC,oBAAoB,CAAC;MACtC;MAEA,MAAMC,SAAS,GAAGT,QAAQ,CAACU,KAAK;MAChC,MAAMC,OAAO,GAAGX,QAAQ,CAACY,QAAQ,CAACC,IAAI;MACtC,MAAMC,SAAS,GAOX;QACHC,UAAU,EAAE;UACXC,IAAI,EAAEhB,QAAQ;UACdF;;OAED;MAED,IAAI,CAACC,MAAM,EAAE;QACZH,cAAc,CAACqB,IAAI,+DAAAd,MAAA,CAA+DL,KAAK,CAAE,CAAC;QAC1F;QACA,MAAMoB,sBAAsB,GAAG,UAAU;QACzCJ,SAAS,CAACK,QAAQ,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,GAAGH,sBAAsB;MACnE;MAEA,IAAI,CAACvB,QAAQ,CAACU,GAAG,CAAC,0CAA0C,CAAC,EAAE;QAC9DS,SAAS,CAACQ,OAAO,GAAG,IAAI;MACzB;MAEA;MACA,OAAO/B,OAAO,CAACgC,iBAAiB,CAAC,6BAA6B,EAAExB,MAAM,KAAAI,MAAA,CAAKM,SAAS,SAAAN,MAAA,CAAMQ,OAAO,GAAIL,IAAI,EAAEQ,SAAS,CAAC;IACtH;IAACU,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9a686cb34a8b3b01291b860f97033040c8cc204d"}
