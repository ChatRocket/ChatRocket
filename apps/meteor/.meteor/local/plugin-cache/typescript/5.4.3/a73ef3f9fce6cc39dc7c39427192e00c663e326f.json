{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/search/server/service/SearchProviderService.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/search/server/service/SearchProviderService.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/search/server/service/SearchProviderService.ts","inputSourceMap":{"version":3,"file":"app/search/server/service/SearchProviderService.ts","sourceRoot":"","sources":["app/search/server/service/SearchProviderService.ts"],"names":[],"mappings":"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","sourcesContent":["import { withDebouncing } from '../../../../lib/utils/highOrderFunctions';\nimport { settings, settingsRegistry } from '../../../settings/server';\nimport { SearchLogger } from '../logger/logger';\nimport type { SearchProvider } from '../model/SearchProvider';\n\nexport class SearchProviderService {\n\tpublic providers: Record<string, SearchProvider> = {};\n\n\tpublic activeProvider?: SearchProvider;\n\n\t/**\n\t * Stop current provider (if there is one) and start the new\n\t * @param id the id of the provider which should be started\n\t */\n\tasync use(id: SearchProvider['key']) {\n\t\tif (!this.providers[id]) {\n\t\t\tthrow new Error(`provider ${id} cannot be found`);\n\t\t}\n\n\t\tlet reason: 'startup' | 'update' | 'switch';\n\n\t\tif (!this.activeProvider) {\n\t\t\treason = 'startup';\n\t\t} else if (this.activeProvider.key === this.providers[id].key) {\n\t\t\treason = 'update';\n\t\t} else {\n\t\t\treason = 'switch';\n\t\t}\n\n\t\tif (this.activeProvider) {\n\t\t\tconst provider = this.activeProvider;\n\t\t\tSearchLogger.debug(`Stopping provider '${provider.key}'`);\n\n\t\t\tawait new Promise<void>((resolve) => provider.stop(resolve));\n\t\t}\n\n\t\tthis.activeProvider = undefined;\n\n\t\tSearchLogger.debug(`Start provider '${id}'`);\n\n\t\tawait this.providers[id].run(reason);\n\t\tthis.activeProvider = this.providers[id];\n\t}\n\n\t/**\n\t * Registers a search provider on system startup\n\t */\n\tregister(provider: SearchProvider) {\n\t\tthis.providers[provider.key] = provider;\n\t}\n\n\t/**\n\t * Starts the service (loads provider settings for admin ui, add lister not setting changes, enable current provider\n\t */\n\tasync start() {\n\t\tSearchLogger.debug('Load data for all providers');\n\n\t\tconst { providers } = this;\n\n\t\t// add settings for admininistration\n\t\tawait settingsRegistry.addGroup('Search', async function () {\n\t\t\tawait this.add('Search.Provider', 'defaultProvider', {\n\t\t\t\ttype: 'select',\n\t\t\t\tvalues: Object.values(providers).map((provider) => ({\n\t\t\t\t\tkey: provider.key,\n\t\t\t\t\ti18nLabel: provider.i18nLabel,\n\t\t\t\t})),\n\t\t\t\tpublic: true,\n\t\t\t\ti18nLabel: 'Search_Provider',\n\t\t\t});\n\n\t\t\tawait Promise.all(\n\t\t\t\tObject.keys(providers)\n\t\t\t\t\t.filter((key) => providers[key].settings && providers[key].settings.length > 0)\n\t\t\t\t\t.map(async (key) => {\n\t\t\t\t\t\tawait this.section(providers[key].i18nLabel, async function () {\n\t\t\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\t\t\tproviders[key].settings.map(async (setting) => {\n\t\t\t\t\t\t\t\t\tconst _options: Record<string, unknown> = {\n\t\t\t\t\t\t\t\t\t\ttype: setting.type,\n\t\t\t\t\t\t\t\t\t\t...setting.options,\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t_options.enableQuery = _options.enableQuery || [];\n\n\t\t\t\t\t\t\t\t\tif (!_options.enableQuery) {\n\t\t\t\t\t\t\t\t\t\t_options.enableQuery = [];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (Array.isArray(_options.enableQuery)) {\n\t\t\t\t\t\t\t\t\t\t_options.enableQuery.push({\n\t\t\t\t\t\t\t\t\t\t\t_id: 'Search.Provider',\n\t\t\t\t\t\t\t\t\t\t\tvalue: key,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tawait this.add(setting.id, setting.defaultValue, _options);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t);\n\t\t});\n\n\t\t// add listener to react on setting changes\n\t\tconst configProvider = withDebouncing({ wait: 1000 })(() => {\n\t\t\tconst providerId = settings.get<string>('Search.Provider');\n\n\t\t\tif (providerId) {\n\t\t\t\tvoid this.use(providerId); // TODO do something with success and errors\n\t\t\t}\n\t\t});\n\n\t\tsettings.watchByRegex(/^Search\\./, configProvider);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/search/server/service/SearchProviderService.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/search/server/service/SearchProviderService.ts","inputSourceMap":{"version":3,"file":"app/search/server/service/SearchProviderService.ts","sourceRoot":"","sources":["app/search/server/service/SearchProviderService.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,0CAA0C,CAAC;AAC1E,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AACtE,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAGhD,MAAM,OAAO,qBAAqB;IAC1B,SAAS,GAAmC,EAAE,CAAC;IAE/C,cAAc,CAAkB;IAEvC;;;OAGG;IACH,KAAK,CAAC,GAAG,CAAC,EAAyB;QAClC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC;YACzB,MAAM,IAAI,KAAK,CAAC,YAAY,EAAE,kBAAkB,CAAC,CAAC;QACnD,CAAC;QAED,IAAI,MAAuC,CAAC;QAE5C,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,MAAM,GAAG,SAAS,CAAC;QACpB,CAAC;aAAM,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;YAC/D,MAAM,GAAG,QAAQ,CAAC;QACnB,CAAC;aAAM,CAAC;YACP,MAAM,GAAG,QAAQ,CAAC;QACnB,CAAC;QAED,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACzB,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;YACrC,YAAY,CAAC,KAAK,CAAC,sBAAsB,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;YAE1D,MAAM,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9D,CAAC;QAED,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;QAEhC,YAAY,CAAC,KAAK,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;QAE7C,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,QAAwB;QAChC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;IACzC,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,KAAK;QACV,YAAY,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;QAElD,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAE3B,oCAAoC;QACpC,MAAM,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK;YAC9C,MAAM,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,EAAE;gBACpD,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;oBACnD,GAAG,EAAE,QAAQ,CAAC,GAAG;oBACjB,SAAS,EAAE,QAAQ,CAAC,SAAS;iBAC7B,CAAC,CAAC;gBACH,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,iBAAiB;aAC5B,CAAC,CAAC;YAEH,MAAM,OAAO,CAAC,GAAG,CAChB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;iBACpB,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;iBAC9E,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;gBAClB,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,KAAK;oBACjD,MAAM,OAAO,CAAC,GAAG,CAChB,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE;wBAC7C,MAAM,QAAQ,GAA4B;4BACzC,IAAI,EAAE,OAAO,CAAC,IAAI;4BAClB,GAAG,OAAO,CAAC,OAAO;yBAClB,CAAC;wBAEF,QAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,IAAI,EAAE,CAAC;wBAElD,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;4BAC3B,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC3B,CAAC;wBAED,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;4BACzC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC;gCACzB,GAAG,EAAE,iBAAiB;gCACtB,KAAK,EAAE,GAAG;6BACV,CAAC,CAAC;wBACJ,CAAC;wBAED,MAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;oBAC5D,CAAC,CAAC,CACF,CAAC;gBACH,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CACH,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,2CAA2C;QAC3C,MAAM,cAAc,GAAG,cAAc,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE;YAC1D,MAAM,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAS,iBAAiB,CAAC,CAAC;YAE3D,IAAI,UAAU,EAAE,CAAC;gBAChB,KAAK,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,4CAA4C;YACxE,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;IACpD,CAAC;CACD","sourcesContent":["import { withDebouncing } from '../../../../lib/utils/highOrderFunctions';\nimport { settings, settingsRegistry } from '../../../settings/server';\nimport { SearchLogger } from '../logger/logger';\nimport type { SearchProvider } from '../model/SearchProvider';\n\nexport class SearchProviderService {\n\tpublic providers: Record<string, SearchProvider> = {};\n\n\tpublic activeProvider?: SearchProvider;\n\n\t/**\n\t * Stop current provider (if there is one) and start the new\n\t * @param id the id of the provider which should be started\n\t */\n\tasync use(id: SearchProvider['key']) {\n\t\tif (!this.providers[id]) {\n\t\t\tthrow new Error(`provider ${id} cannot be found`);\n\t\t}\n\n\t\tlet reason: 'startup' | 'update' | 'switch';\n\n\t\tif (!this.activeProvider) {\n\t\t\treason = 'startup';\n\t\t} else if (this.activeProvider.key === this.providers[id].key) {\n\t\t\treason = 'update';\n\t\t} else {\n\t\t\treason = 'switch';\n\t\t}\n\n\t\tif (this.activeProvider) {\n\t\t\tconst provider = this.activeProvider;\n\t\t\tSearchLogger.debug(`Stopping provider '${provider.key}'`);\n\n\t\t\tawait new Promise<void>((resolve) => provider.stop(resolve));\n\t\t}\n\n\t\tthis.activeProvider = undefined;\n\n\t\tSearchLogger.debug(`Start provider '${id}'`);\n\n\t\tawait this.providers[id].run(reason);\n\t\tthis.activeProvider = this.providers[id];\n\t}\n\n\t/**\n\t * Registers a search provider on system startup\n\t */\n\tregister(provider: SearchProvider) {\n\t\tthis.providers[provider.key] = provider;\n\t}\n\n\t/**\n\t * Starts the service (loads provider settings for admin ui, add lister not setting changes, enable current provider\n\t */\n\tasync start() {\n\t\tSearchLogger.debug('Load data for all providers');\n\n\t\tconst { providers } = this;\n\n\t\t// add settings for admininistration\n\t\tawait settingsRegistry.addGroup('Search', async function () {\n\t\t\tawait this.add('Search.Provider', 'defaultProvider', {\n\t\t\t\ttype: 'select',\n\t\t\t\tvalues: Object.values(providers).map((provider) => ({\n\t\t\t\t\tkey: provider.key,\n\t\t\t\t\ti18nLabel: provider.i18nLabel,\n\t\t\t\t})),\n\t\t\t\tpublic: true,\n\t\t\t\ti18nLabel: 'Search_Provider',\n\t\t\t});\n\n\t\t\tawait Promise.all(\n\t\t\t\tObject.keys(providers)\n\t\t\t\t\t.filter((key) => providers[key].settings && providers[key].settings.length > 0)\n\t\t\t\t\t.map(async (key) => {\n\t\t\t\t\t\tawait this.section(providers[key].i18nLabel, async function () {\n\t\t\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\t\t\tproviders[key].settings.map(async (setting) => {\n\t\t\t\t\t\t\t\t\tconst _options: Record<string, unknown> = {\n\t\t\t\t\t\t\t\t\t\ttype: setting.type,\n\t\t\t\t\t\t\t\t\t\t...setting.options,\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t_options.enableQuery = _options.enableQuery || [];\n\n\t\t\t\t\t\t\t\t\tif (!_options.enableQuery) {\n\t\t\t\t\t\t\t\t\t\t_options.enableQuery = [];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (Array.isArray(_options.enableQuery)) {\n\t\t\t\t\t\t\t\t\t\t_options.enableQuery.push({\n\t\t\t\t\t\t\t\t\t\t\t_id: 'Search.Provider',\n\t\t\t\t\t\t\t\t\t\t\tvalue: key,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tawait this.add(setting.id, setting.defaultValue, _options);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t);\n\t\t});\n\n\t\t// add listener to react on setting changes\n\t\tconst configProvider = withDebouncing({ wait: 1000 })(() => {\n\t\t\tconst providerId = settings.get<string>('Search.Provider');\n\n\t\t\tif (providerId) {\n\t\t\t\tvoid this.use(providerId); // TODO do something with success and errors\n\t\t\t}\n\t\t});\n\n\t\tsettings.watchByRegex(/^Search\\./, configProvider);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      SearchProviderService: () => SearchProviderService\n    });\n    let withDebouncing;\n    module.link(\"../../../../lib/utils/highOrderFunctions\", {\n      withDebouncing(v) {\n        withDebouncing = v;\n      }\n    }, 0);\n    let settings, settingsRegistry;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      },\n      settingsRegistry(v) {\n        settingsRegistry = v;\n      }\n    }, 1);\n    let SearchLogger;\n    module.link(\"../logger/logger\", {\n      SearchLogger(v) {\n        SearchLogger = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class SearchProviderService {\n      constructor() {\n        this.providers = {};\n        this.activeProvider = void 0;\n      }\n      /**\n       * Stop current provider (if there is one) and start the new\n       * @param id the id of the provider which should be started\n       */\n      async use(id) {\n        if (!this.providers[id]) {\n          throw new Error(\"provider \".concat(id, \" cannot be found\"));\n        }\n        let reason;\n        if (!this.activeProvider) {\n          reason = 'startup';\n        } else if (this.activeProvider.key === this.providers[id].key) {\n          reason = 'update';\n        } else {\n          reason = 'switch';\n        }\n        if (this.activeProvider) {\n          const provider = this.activeProvider;\n          SearchLogger.debug(\"Stopping provider '\".concat(provider.key, \"'\"));\n          await new Promise(resolve => provider.stop(resolve));\n        }\n        this.activeProvider = undefined;\n        SearchLogger.debug(\"Start provider '\".concat(id, \"'\"));\n        await this.providers[id].run(reason);\n        this.activeProvider = this.providers[id];\n      }\n      /**\n       * Registers a search provider on system startup\n       */\n      register(provider) {\n        this.providers[provider.key] = provider;\n      }\n      /**\n       * Starts the service (loads provider settings for admin ui, add lister not setting changes, enable current provider\n       */\n      async start() {\n        SearchLogger.debug('Load data for all providers');\n        const {\n          providers\n        } = this;\n        // add settings for admininistration\n        await settingsRegistry.addGroup('Search', async function () {\n          await this.add('Search.Provider', 'defaultProvider', {\n            type: 'select',\n            values: Object.values(providers).map(provider => ({\n              key: provider.key,\n              i18nLabel: provider.i18nLabel\n            })),\n            public: true,\n            i18nLabel: 'Search_Provider'\n          });\n          await Promise.all(Object.keys(providers).filter(key => providers[key].settings && providers[key].settings.length > 0).map(async key => {\n            await this.section(providers[key].i18nLabel, async function () {\n              await Promise.all(providers[key].settings.map(async setting => {\n                const _options = _objectSpread({\n                  type: setting.type\n                }, setting.options);\n                _options.enableQuery = _options.enableQuery || [];\n                if (!_options.enableQuery) {\n                  _options.enableQuery = [];\n                }\n                if (Array.isArray(_options.enableQuery)) {\n                  _options.enableQuery.push({\n                    _id: 'Search.Provider',\n                    value: key\n                  });\n                }\n                await this.add(setting.id, setting.defaultValue, _options);\n              }));\n            });\n          }));\n        });\n        // add listener to react on setting changes\n        const configProvider = withDebouncing({\n          wait: 1000\n        })(() => {\n          const providerId = settings.get('Search.Provider');\n          if (providerId) {\n            void this.use(providerId); // TODO do something with success and errors\n          }\n        });\n        settings.watchByRegex(/^Search\\./, configProvider);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","SearchProviderService","withDebouncing","settings","settingsRegistry","SearchLogger","__reifyWaitForDeps__","constructor","providers","activeProvider","use","id","Error","concat","reason","key","provider","debug","Promise","resolve","stop","undefined","run","register","start","addGroup","add","type","values","Object","map","i18nLabel","public","all","keys","filter","length","section","setting","_options","options","enableQuery","Array","isArray","push","_id","value","defaultValue","configProvider","wait","providerId","get","watchByRegex","__reify_async_result__","_reifyError","self","async"],"sources":["app/search/server/service/SearchProviderService.ts"],"sourcesContent":["import { withDebouncing } from '../../../../lib/utils/highOrderFunctions';\nimport { settings, settingsRegistry } from '../../../settings/server';\nimport { SearchLogger } from '../logger/logger';\nimport type { SearchProvider } from '../model/SearchProvider';\n\nexport class SearchProviderService {\n\tpublic providers: Record<string, SearchProvider> = {};\n\n\tpublic activeProvider?: SearchProvider;\n\n\t/**\n\t * Stop current provider (if there is one) and start the new\n\t * @param id the id of the provider which should be started\n\t */\n\tasync use(id: SearchProvider['key']) {\n\t\tif (!this.providers[id]) {\n\t\t\tthrow new Error(`provider ${id} cannot be found`);\n\t\t}\n\n\t\tlet reason: 'startup' | 'update' | 'switch';\n\n\t\tif (!this.activeProvider) {\n\t\t\treason = 'startup';\n\t\t} else if (this.activeProvider.key === this.providers[id].key) {\n\t\t\treason = 'update';\n\t\t} else {\n\t\t\treason = 'switch';\n\t\t}\n\n\t\tif (this.activeProvider) {\n\t\t\tconst provider = this.activeProvider;\n\t\t\tSearchLogger.debug(`Stopping provider '${provider.key}'`);\n\n\t\t\tawait new Promise<void>((resolve) => provider.stop(resolve));\n\t\t}\n\n\t\tthis.activeProvider = undefined;\n\n\t\tSearchLogger.debug(`Start provider '${id}'`);\n\n\t\tawait this.providers[id].run(reason);\n\t\tthis.activeProvider = this.providers[id];\n\t}\n\n\t/**\n\t * Registers a search provider on system startup\n\t */\n\tregister(provider: SearchProvider) {\n\t\tthis.providers[provider.key] = provider;\n\t}\n\n\t/**\n\t * Starts the service (loads provider settings for admin ui, add lister not setting changes, enable current provider\n\t */\n\tasync start() {\n\t\tSearchLogger.debug('Load data for all providers');\n\n\t\tconst { providers } = this;\n\n\t\t// add settings for admininistration\n\t\tawait settingsRegistry.addGroup('Search', async function () {\n\t\t\tawait this.add('Search.Provider', 'defaultProvider', {\n\t\t\t\ttype: 'select',\n\t\t\t\tvalues: Object.values(providers).map((provider) => ({\n\t\t\t\t\tkey: provider.key,\n\t\t\t\t\ti18nLabel: provider.i18nLabel,\n\t\t\t\t})),\n\t\t\t\tpublic: true,\n\t\t\t\ti18nLabel: 'Search_Provider',\n\t\t\t});\n\n\t\t\tawait Promise.all(\n\t\t\t\tObject.keys(providers)\n\t\t\t\t\t.filter((key) => providers[key].settings && providers[key].settings.length > 0)\n\t\t\t\t\t.map(async (key) => {\n\t\t\t\t\t\tawait this.section(providers[key].i18nLabel, async function () {\n\t\t\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\t\t\tproviders[key].settings.map(async (setting) => {\n\t\t\t\t\t\t\t\t\tconst _options: Record<string, unknown> = {\n\t\t\t\t\t\t\t\t\t\ttype: setting.type,\n\t\t\t\t\t\t\t\t\t\t...setting.options,\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t_options.enableQuery = _options.enableQuery || [];\n\n\t\t\t\t\t\t\t\t\tif (!_options.enableQuery) {\n\t\t\t\t\t\t\t\t\t\t_options.enableQuery = [];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (Array.isArray(_options.enableQuery)) {\n\t\t\t\t\t\t\t\t\t\t_options.enableQuery.push({\n\t\t\t\t\t\t\t\t\t\t\t_id: 'Search.Provider',\n\t\t\t\t\t\t\t\t\t\t\tvalue: key,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tawait this.add(setting.id, setting.defaultValue, _options);\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t);\n\t\t});\n\n\t\t// add listener to react on setting changes\n\t\tconst configProvider = withDebouncing({ wait: 1000 })(() => {\n\t\t\tconst providerId = settings.get<string>('Search.Provider');\n\n\t\t\tif (providerId) {\n\t\t\t\tvoid this.use(providerId); // TODO do something with success and errors\n\t\t\t}\n\t\t});\n\n\t\tsettings.watchByRegex(/^Search\\./, configProvider);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a73ef3f9fce6cc39dc7c39427192e00c663e326f"}
