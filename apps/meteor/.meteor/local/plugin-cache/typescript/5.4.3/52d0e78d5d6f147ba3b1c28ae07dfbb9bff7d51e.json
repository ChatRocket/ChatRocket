{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","inputSourceMap":{"version":3,"file":"client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","sourceRoot":"","sources":["client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../../../lib/lists/RecordList';\nimport { getConfig } from '../../../../../lib/utils/getConfig';\nimport { mapMessageFromApi } from '../../../../../lib/utils/mapMessageFromApi';\n\ntype TeamsChannelListOptions = {\n\tteamId: string;\n\ttype: 'all' | 'autoJoin';\n\ttext: string;\n};\n\nexport const useTeamsChannelList = (\n\toptions: TeamsChannelListOptions,\n): {\n\tteamsChannelList: RecordList<IRoom>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst apiEndPoint = useEndpoint('GET', '/v1/teams.listRooms');\n\tconst [teamsChannelList, setTeamsChannelList] = useState(() => new RecordList<IRoom>());\n\tconst reload = useCallback(() => setTeamsChannelList(new RecordList<IRoom>()), []);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { rooms, total } = await apiEndPoint({\n\t\t\t\tteamId: options.teamId,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\tfilter: options.text,\n\t\t\t\ttype: options.type,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: rooms.map(({ _updatedAt, lastMessage, lm, ts, webRtcCallStartTime, usersWaitingForE2EKeys, ...room }) => ({\n\t\t\t\t\t...(lm && { lm: new Date(lm) }),\n\t\t\t\t\t...(ts && { ts: new Date(ts) }),\n\t\t\t\t\t_updatedAt: new Date(_updatedAt),\n\t\t\t\t\t...(lastMessage && { lastMessage: mapMessageFromApi(lastMessage) }),\n\t\t\t\t\t...(webRtcCallStartTime && { webRtcCallStartTime: new Date(webRtcCallStartTime) }),\n\t\t\t\t\t...(usersWaitingForE2EKeys && usersWaitingForE2EKeys.map(({ userId, ts }) => ({ userId, ts: new Date(ts) }))),\n\t\t\t\t\t...room,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[apiEndPoint, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\n\t\tteamsChannelList,\n\t\tfetchData,\n\t\tuseMemo(() => parseInt(`${getConfig('teamsChannelListSize', 10)}`), []),\n\t);\n\n\treturn {\n\t\treload,\n\t\tteamsChannelList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","inputSourceMap":{"version":3,"file":"client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","sourceRoot":"","sources":["client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../../../lib/lists/RecordList';\nimport { getConfig } from '../../../../../lib/utils/getConfig';\nimport { mapMessageFromApi } from '../../../../../lib/utils/mapMessageFromApi';\n\ntype TeamsChannelListOptions = {\n\tteamId: string;\n\ttype: 'all' | 'autoJoin';\n\ttext: string;\n};\n\nexport const useTeamsChannelList = (\n\toptions: TeamsChannelListOptions,\n): {\n\tteamsChannelList: RecordList<IRoom>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst apiEndPoint = useEndpoint('GET', '/v1/teams.listRooms');\n\tconst [teamsChannelList, setTeamsChannelList] = useState(() => new RecordList<IRoom>());\n\tconst reload = useCallback(() => setTeamsChannelList(new RecordList<IRoom>()), []);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { rooms, total } = await apiEndPoint({\n\t\t\t\tteamId: options.teamId,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\tfilter: options.text,\n\t\t\t\ttype: options.type,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: rooms.map(({ _updatedAt, lastMessage, lm, ts, webRtcCallStartTime, usersWaitingForE2EKeys, ...room }) => ({\n\t\t\t\t\t...(lm && { lm: new Date(lm) }),\n\t\t\t\t\t...(ts && { ts: new Date(ts) }),\n\t\t\t\t\t_updatedAt: new Date(_updatedAt),\n\t\t\t\t\t...(lastMessage && { lastMessage: mapMessageFromApi(lastMessage) }),\n\t\t\t\t\t...(webRtcCallStartTime && { webRtcCallStartTime: new Date(webRtcCallStartTime) }),\n\t\t\t\t\t...(usersWaitingForE2EKeys && usersWaitingForE2EKeys.map(({ userId, ts }) => ({ userId, ts: new Date(ts) }))),\n\t\t\t\t\t...room,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[apiEndPoint, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\n\t\tteamsChannelList,\n\t\tfetchData,\n\t\tuseMemo(() => parseInt(`${getConfig('teamsChannelListSize', 10)}`), []),\n\t);\n\n\treturn {\n\t\treload,\n\t\tteamsChannelList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}}},"code":"var _excluded = [\"_updatedAt\", \"lastMessage\", \"lm\", \"ts\", \"webRtcCallStartTime\", \"usersWaitingForE2EKeys\"];\nvar _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\nvar _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 2);\nvar _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 3);\nmodule.export({\n  useTeamsChannelList: function () {\n    return useTeamsChannelList;\n  }\n});\nvar useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  }\n}, 0);\nvar useCallback, useMemo, useState;\nmodule.link(\"react\", {\n  useCallback: function (v) {\n    useCallback = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  },\n  useState: function (v) {\n    useState = v;\n  }\n}, 1);\nvar useScrollableRecordList;\nmodule.link(\"../../../../../hooks/lists/useScrollableRecordList\", {\n  useScrollableRecordList: function (v) {\n    useScrollableRecordList = v;\n  }\n}, 2);\nvar useComponentDidUpdate;\nmodule.link(\"../../../../../hooks/useComponentDidUpdate\", {\n  useComponentDidUpdate: function (v) {\n    useComponentDidUpdate = v;\n  }\n}, 3);\nvar RecordList;\nmodule.link(\"../../../../../lib/lists/RecordList\", {\n  RecordList: function (v) {\n    RecordList = v;\n  }\n}, 4);\nvar getConfig;\nmodule.link(\"../../../../../lib/utils/getConfig\", {\n  getConfig: function (v) {\n    getConfig = v;\n  }\n}, 5);\nvar mapMessageFromApi;\nmodule.link(\"../../../../../lib/utils/mapMessageFromApi\", {\n  mapMessageFromApi: function (v) {\n    mapMessageFromApi = v;\n  }\n}, 6);\nvar useTeamsChannelList = function (options) {\n  var apiEndPoint = useEndpoint('GET', '/v1/teams.listRooms');\n  var _useState = useState(function () {\n      return new RecordList();\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    teamsChannelList = _useState2[0],\n    setTeamsChannelList = _useState2[1];\n  var reload = useCallback(function () {\n    return setTeamsChannelList(new RecordList());\n  }, []);\n  useComponentDidUpdate(function () {\n    options && reload();\n  }, [options, reload]);\n  var fetchData = useCallback(function () {\n    function _callee(start, end) {\n      var _await$apiEndPoint, rooms, total;\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(apiEndPoint({\n                teamId: options.teamId,\n                offset: start,\n                count: end,\n                filter: options.text,\n                type: options.type\n              }));\n            case 2:\n              _await$apiEndPoint = _context.sent;\n              rooms = _await$apiEndPoint.rooms;\n              total = _await$apiEndPoint.total;\n              return _context.abrupt(\"return\", {\n                items: rooms.map(function (_ref) {\n                  var _updatedAt = _ref._updatedAt,\n                    lastMessage = _ref.lastMessage,\n                    lm = _ref.lm,\n                    ts = _ref.ts,\n                    webRtcCallStartTime = _ref.webRtcCallStartTime,\n                    usersWaitingForE2EKeys = _ref.usersWaitingForE2EKeys,\n                    room = _objectWithoutProperties(_ref, _excluded);\n                  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, lm && {\n                    lm: new Date(lm)\n                  }), ts && {\n                    ts: new Date(ts)\n                  }), {}, {\n                    _updatedAt: new Date(_updatedAt)\n                  }, lastMessage && {\n                    lastMessage: mapMessageFromApi(lastMessage)\n                  }), webRtcCallStartTime && {\n                    webRtcCallStartTime: new Date(webRtcCallStartTime)\n                  }), usersWaitingForE2EKeys && usersWaitingForE2EKeys.map(function (_ref2) {\n                    var userId = _ref2.userId,\n                      ts = _ref2.ts;\n                    return {\n                      userId: userId,\n                      ts: new Date(ts)\n                    };\n                  })), room);\n                }),\n                itemCount: total\n              });\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return _callee$;\n      }(), null, null, null, Promise);\n    }\n    return _callee;\n  }(), [apiEndPoint, options]);\n  var _useScrollableRecordL = useScrollableRecordList(teamsChannelList, fetchData, useMemo(function () {\n      return parseInt(\"\" + getConfig('teamsChannelListSize', 10));\n    }, [])),\n    loadMoreItems = _useScrollableRecordL.loadMoreItems,\n    initialItemCount = _useScrollableRecordL.initialItemCount;\n  return {\n    reload: reload,\n    teamsChannelList: teamsChannelList,\n    loadMoreItems: loadMoreItems,\n    initialItemCount: initialItemCount\n  };\n};","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_objectSpread","_objectWithoutProperties","_slicedToArray","export","useTeamsChannelList","useEndpoint","useCallback","useMemo","useState","useScrollableRecordList","useComponentDidUpdate","RecordList","getConfig","mapMessageFromApi","options","apiEndPoint","_useState","_useState2","teamsChannelList","setTeamsChannelList","reload","fetchData","_callee","start","end","_await$apiEndPoint","rooms","total","async","_callee$","_context","prev","next","awrap","teamId","offset","count","filter","text","type","sent","abrupt","items","map","_ref","_updatedAt","lastMessage","lm","ts","webRtcCallStartTime","usersWaitingForE2EKeys","room","_excluded","Date","_ref2","userId","itemCount","stop","Promise","_useScrollableRecordL","parseInt","loadMoreItems","initialItemCount"],"sources":["client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../../../lib/lists/RecordList';\nimport { getConfig } from '../../../../../lib/utils/getConfig';\nimport { mapMessageFromApi } from '../../../../../lib/utils/mapMessageFromApi';\n\ntype TeamsChannelListOptions = {\n\tteamId: string;\n\ttype: 'all' | 'autoJoin';\n\ttext: string;\n};\n\nexport const useTeamsChannelList = (\n\toptions: TeamsChannelListOptions,\n): {\n\tteamsChannelList: RecordList<IRoom>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst apiEndPoint = useEndpoint('GET', '/v1/teams.listRooms');\n\tconst [teamsChannelList, setTeamsChannelList] = useState(() => new RecordList<IRoom>());\n\tconst reload = useCallback(() => setTeamsChannelList(new RecordList<IRoom>()), []);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { rooms, total } = await apiEndPoint({\n\t\t\t\tteamId: options.teamId,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\tfilter: options.text,\n\t\t\t\ttype: options.type,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: rooms.map(({ _updatedAt, lastMessage, lm, ts, webRtcCallStartTime, usersWaitingForE2EKeys, ...room }) => ({\n\t\t\t\t\t...(lm && { lm: new Date(lm) }),\n\t\t\t\t\t...(ts && { ts: new Date(ts) }),\n\t\t\t\t\t_updatedAt: new Date(_updatedAt),\n\t\t\t\t\t...(lastMessage && { lastMessage: mapMessageFromApi(lastMessage) }),\n\t\t\t\t\t...(webRtcCallStartTime && { webRtcCallStartTime: new Date(webRtcCallStartTime) }),\n\t\t\t\t\t...(usersWaitingForE2EKeys && usersWaitingForE2EKeys.map(({ userId, ts }) => ({ userId, ts: new Date(ts) }))),\n\t\t\t\t\t...room,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[apiEndPoint, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\n\t\tteamsChannelList,\n\t\tfetchData,\n\t\tuseMemo(() => parseInt(`${getConfig('teamsChannelListSize', 10)}`), []),\n\t);\n\n\treturn {\n\t\treload,\n\t\tteamsChannelList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"],"mappings":";AACA,IAAAA,mBAAsB;AAAAC,MAAM,CAAAC,IAAA,6BAA2B;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAJ,mBAAA,GAAAI,CAAA;EAAA;AAAA;AAAA,IAAAC,aAAA;AAAAJ,MAAA,CAAAC,IAAA;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAC,aAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,wBAAA;AAAAL,MAAA,CAAAC,IAAA;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAE,wBAAA,GAAAF,CAAA;EAAA;AAAA;AAAA,IAAAG,cAAA;AAAAN,MAAA,CAAAC,IAAA;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAG,cAAA,GAAAH,CAAA;EAAA;AAAA;AAAvDH,MAAA,CAAOO,MAAE;EAAAC,mBAAmB,WAAAA,CAAA;IAAA,OAAAA,mBAA2B;EAAA;AAAA;AAAA,IAAAC,WAAA;AAAAT,MAAA,CAAAC,IAAA;EAAAQ,WAAA,WAAAA,CAAAN,CAAA;IAAAM,WAAA,GAAAN,CAAA;EAAA;AAAA;AAAA,IAAAO,WAAA,EAAAC,OAAA,EAAAC,QAAA;AAAAZ,MAAA,CAAAC,IAAA;EAAAS,WAAA,WAAAA,CAAAP,CAAA;IAAAO,WAAA,GAAAP,CAAA;EAAA;EAAAQ,OAAA,WAAAA,CAAAR,CAAA;IAAAQ,OAAA,GAAAR,CAAA;EAAA;EAAAS,QAAA,WAAAA,CAAAT,CAAA;IAAAS,QAAA,GAAAT,CAAA;EAAA;AAAA;AAAA,IAAAU,uBAAA;AAAAb,MAAA,CAAAC,IAAA;EAAAY,uBAAA,WAAAA,CAAAV,CAAA;IAAAU,uBAAA,GAAAV,CAAA;EAAA;AAAA;AAAA,IAAAW,qBAAA;AAAAd,MAAA,CAAAC,IAAA;EAAAa,qBAAA,WAAAA,CAAAX,CAAA;IAAAW,qBAAA,GAAAX,CAAA;EAAA;AAAA;AAAA,IAAAY,UAAA;AAAAf,MAAA,CAAAC,IAAA;EAAAc,UAAA,WAAAA,CAAAZ,CAAA;IAAAY,UAAA,GAAAZ,CAAA;EAAA;AAAA;AAAA,IAAAa,SAAA;AAAAhB,MAAA,CAAAC,IAAA;EAAAe,SAAA,WAAAA,CAAAb,CAAA;IAAAa,SAAA,GAAAb,CAAA;EAAA;AAAA;AAAA,IAAAc,iBAAA;AAAAjB,MAAA,CAAAC,IAAA;EAAAgB,iBAAA,WAAAA,CAAAd,CAAA;IAAAc,iBAAA,GAAAd,CAAA;EAAA;AAAA;AAehD,IAAMK,mBAAmB,GAAG,SAAAA,CAClCU,OAAgC,EAM7B;EACH,IAAMC,WAAW,GAAGV,WAAW,CAAC,KAAK,EAAE,qBAAqB,CAAC;EAC7D,IAAAW,SAAA,GAAgDR,QAAQ,CAAC;MAAA,OAAM,IAAIG,UAAU,EAAS;IAAA,EAAC;IAAAM,UAAA,GAAAf,cAAA,CAAAc,SAAA;IAAhFE,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAC5C,IAAMG,MAAM,GAAGd,WAAW,CAAC;IAAA,OAAMa,mBAAmB,CAAC,IAAIR,UAAU,EAAS,CAAC;EAAA,GAAE,EAAE,CAAC;EAElFD,qBAAqB,CAAC,YAAK;IAC1BI,OAAO,IAAIM,MAAM,EAAE;EACpB,CAAC,EAAE,CAACN,OAAO,EAAEM,MAAM,CAAC,CAAC;EAErB,IAAMC,SAAS,GAAGf,WAAW;IAC5B,SAAAgB,QAAOC,KAAK,EAAEC,GAAG;MAAA,IAAAC,kBAAA,EAAAC,KAAA,EAAAC,KAAA;MAAA,OAAAhC,mBAAA,CAAAiC,KAAA;QAAA,SAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OAAArC,mBAAA,CAAAsC,KAAA,CACelB,WAAW,CAAC;gBAC1CmB,MAAM,EAAEpB,OAAO,CAACoB,MAAM;gBACtBC,MAAM,EAAEZ,KAAK;gBACba,KAAK,EAAEZ,GAAG;gBACVa,MAAM,EAAEvB,OAAO,CAACwB,IAAI;gBACpBC,IAAI,EAAEzB,OAAO,CAACyB;eACd,CAAC;YAAA;cAAAd,kBAAA,GAAAK,QAAA,CAAAU,IAAA;cANMd,KAAK,GAAAD,kBAAA,CAALC,KAAK;cAAEC,KAAK,GAAAF,kBAAA,CAALE,KAAK;cAAA,OAAAG,QAAA,CAAAW,MAAA,WAQb;gBACNC,KAAK,EAAEhB,KAAK,CAACiB,GAAG,CAAC,UAAAC,IAAA;kBAAA,IAAGC,UAAU,GAAAD,IAAA,CAAVC,UAAU;oBAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;oBAAEC,EAAE,GAAAH,IAAA,CAAFG,EAAE;oBAAEC,EAAE,GAAAJ,IAAA,CAAFI,EAAE;oBAAEC,mBAAmB,GAAAL,IAAA,CAAnBK,mBAAmB;oBAAEC,sBAAsB,GAAAN,IAAA,CAAtBM,sBAAsB;oBAAKC,IAAI,GAAAlD,wBAAA,CAAA2C,IAAA,EAAAQ,SAAA;kBAAA,OAAApD,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACpG+C,EAAE,IAAI;oBAAEA,EAAE,EAAE,IAAIM,IAAI,CAACN,EAAE;kBAAC,CAAE,GAC1BC,EAAE,IAAI;oBAAEA,EAAE,EAAE,IAAIK,IAAI,CAACL,EAAE;kBAAC,CAAE;oBAC9BH,UAAU,EAAE,IAAIQ,IAAI,CAACR,UAAU;kBAAC,GAC5BC,WAAW,IAAI;oBAAEA,WAAW,EAAEjC,iBAAiB,CAACiC,WAAW;kBAAC,CAAE,GAC9DG,mBAAmB,IAAI;oBAAEA,mBAAmB,EAAE,IAAII,IAAI,CAACJ,mBAAmB;kBAAC,CAAE,GAC7EC,sBAAsB,IAAIA,sBAAsB,CAACP,GAAG,CAAC,UAAAW,KAAA;oBAAA,IAAGC,MAAM,GAAAD,KAAA,CAANC,MAAM;sBAAEP,EAAE,GAAAM,KAAA,CAAFN,EAAE;oBAAA,OAAQ;sBAAEO,MAAM,EAANA,MAAM;sBAAEP,EAAE,EAAE,IAAIK,IAAI,CAACL,EAAE;oBAAC,CAAE;kBAAA,CAAC,CAAC,GACzGG,IAAI;gBAAA,CACN,CAAC;gBACHK,SAAS,EAAE7B;eACX;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAA2B,IAAA;UAAA;QAAA;QAAA,OAAA5B,QAAA;MAAA,uBAAA6B,OAAA;IAAA;IACD,OAAApC,OAAA;EAAA,KACD,CAACP,WAAW,EAAED,OAAO,CAAC,CACtB;EAED,IAAA6C,qBAAA,GAA4ClD,uBAAuB,CAClES,gBAAgB,EAChBG,SAAS,EACTd,OAAO,CAAC;MAAA,OAAMqD,QAAQ,MAAIhD,SAAS,CAAC,sBAAsB,EAAE,EAAE,CAAG,CAAC;IAAA,GAAE,EAAE,CAAC,CACvE;IAJOiD,aAAa,GAAAF,qBAAA,CAAbE,aAAa;IAAEC,gBAAgB,GAAAH,qBAAA,CAAhBG,gBAAgB;EAMvC,OAAO;IACN1C,MAAM,EAANA,MAAM;IACNF,gBAAgB,EAAhBA,gBAAgB;IAChB2C,aAAa,EAAbA,aAAa;IACbC,gBAAgB,EAAhBA;GACA;AACF,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"52d0e78d5d6f147ba3b1c28ae07dfbb9bff7d51e"}
