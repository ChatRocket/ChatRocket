{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer-slack-users/server/SlackUsersImporter.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/importer-slack-users/server/SlackUsersImporter.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer-slack-users/server/SlackUsersImporter.ts","inputSourceMap":{"version":3,"file":"app/importer-slack-users/server/SlackUsersImporter.ts","sourceRoot":"","sources":["app/importer-slack-users/server/SlackUsersImporter.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\n\nimport type { IImport, IImportUser } from '@rocket.chat/core-typings';\nimport { Settings } from '@rocket.chat/models';\nimport { parse } from 'csv-parse/lib/sync';\n\nimport { RocketChatFile } from '../../file/server';\nimport { Importer, ProgressStep } from '../../importer/server';\nimport type { ConverterOptions } from '../../importer/server/classes/ImportDataConverter';\nimport type { ImporterProgress } from '../../importer/server/classes/ImporterProgress';\nimport type { ImporterInfo } from '../../importer/server/definitions/ImporterInfo';\nimport { notifyOnSettingChanged } from '../../lib/server/lib/notifyListener';\n\nexport class SlackUsersImporter extends Importer {\n\tprivate csvParser: (csv: string) => string[];\n\n\tconstructor(info: ImporterInfo, importRecord: IImport, converterOptions: ConverterOptions = {}) {\n\t\tsuper(info, importRecord, converterOptions);\n\n\t\tthis.csvParser = parse;\n\t}\n\n\tasync prepareUsingLocalFile(fullFilePath: string): Promise<ImporterProgress> {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tawait this.converter.clearImportData();\n\n\t\tconst file = fs.readFileSync(fullFilePath);\n\t\tconst buffer = Buffer.isBuffer(file) ? file : Buffer.from(file);\n\n\t\tconst { contentType } = this.importRecord;\n\t\tconst fileName = this.importRecord.file;\n\n\t\tconst data = buffer.toString('base64');\n\t\tconst dataURI = `data:${contentType};base64,${data}`;\n\n\t\treturn this.prepare(dataURI, fileName || '');\n\t}\n\n\tasync prepare(dataURI: string, fileName: string): Promise<ImporterProgress> {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tawait this.converter.clearImportData();\n\t\tawait this.updateRecord({ file: fileName });\n\n\t\tawait super.updateProgress(ProgressStep.PREPARING_USERS);\n\t\tconst uriResult = RocketChatFile.dataURIParse(dataURI);\n\t\tconst buf = Buffer.from(uriResult.image, 'base64');\n\t\tconst parsed = this.csvParser(buf.toString());\n\n\t\tlet userCount = 0;\n\t\tfor await (const [index, user] of parsed.entries()) {\n\t\t\t// Ignore the first column\n\t\t\tif (index === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst username = user[0];\n\t\t\tconst email = user[1];\n\t\t\tif (!email) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst name = user[7] || user[8] || username;\n\n\t\t\tconst newUser: IImportUser = {\n\t\t\t\temails: [email],\n\t\t\t\timportIds: [email],\n\t\t\t\tusername,\n\t\t\t\tname,\n\t\t\t\ttype: 'user',\n\t\t\t};\n\n\t\t\tswitch (user[2]) {\n\t\t\t\tcase 'Admin':\n\t\t\t\t\tnewUser.roles = ['admin'];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Bot':\n\t\t\t\t\tnewUser.roles = ['bot'];\n\t\t\t\t\tnewUser.type = 'bot';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Deactivated':\n\t\t\t\t\tnewUser.deleted = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tawait this.converter.addUser(newUser);\n\t\t\tuserCount++;\n\t\t}\n\n\t\tif (userCount === 0) {\n\t\t\tthis.logger.error('No users found in the import file.');\n\t\t\tawait super.updateProgress(ProgressStep.ERROR);\n\t\t\treturn super.getProgress();\n\t\t}\n\n\t\tawait super.updateProgress(ProgressStep.USER_SELECTION);\n\t\tawait super.addCountToTotal(userCount);\n\n\t\tconst { value } = await Settings.incrementValueById('Slack_Users_Importer_Count', userCount, { returnDocument: 'after' });\n\t\tif (value) {\n\t\t\tvoid notifyOnSettingChanged(value);\n\t\t}\n\n\t\tawait super.updateRecord({ 'count.users': userCount });\n\t\treturn super.getProgress();\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer-slack-users/server/SlackUsersImporter.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/importer-slack-users/server/SlackUsersImporter.ts","inputSourceMap":{"version":3,"file":"app/importer-slack-users/server/SlackUsersImporter.ts","sourceRoot":"","sources":["app/importer-slack-users/server/SlackUsersImporter.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\n\nimport type { IImport, IImportUser } from '@rocket.chat/core-typings';\nimport { Settings } from '@rocket.chat/models';\nimport { parse } from 'csv-parse/lib/sync';\n\nimport { RocketChatFile } from '../../file/server';\nimport { Importer, ProgressStep } from '../../importer/server';\nimport type { ConverterOptions } from '../../importer/server/classes/ImportDataConverter';\nimport type { ImporterProgress } from '../../importer/server/classes/ImporterProgress';\nimport type { ImporterInfo } from '../../importer/server/definitions/ImporterInfo';\nimport { notifyOnSettingChanged } from '../../lib/server/lib/notifyListener';\n\nexport class SlackUsersImporter extends Importer {\n\tprivate csvParser: (csv: string) => string[];\n\n\tconstructor(info: ImporterInfo, importRecord: IImport, converterOptions: ConverterOptions = {}) {\n\t\tsuper(info, importRecord, converterOptions);\n\n\t\tthis.csvParser = parse;\n\t}\n\n\tasync prepareUsingLocalFile(fullFilePath: string): Promise<ImporterProgress> {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tawait this.converter.clearImportData();\n\n\t\tconst file = fs.readFileSync(fullFilePath);\n\t\tconst buffer = Buffer.isBuffer(file) ? file : Buffer.from(file);\n\n\t\tconst { contentType } = this.importRecord;\n\t\tconst fileName = this.importRecord.file;\n\n\t\tconst data = buffer.toString('base64');\n\t\tconst dataURI = `data:${contentType};base64,${data}`;\n\n\t\treturn this.prepare(dataURI, fileName || '');\n\t}\n\n\tasync prepare(dataURI: string, fileName: string): Promise<ImporterProgress> {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tawait this.converter.clearImportData();\n\t\tawait this.updateRecord({ file: fileName });\n\n\t\tawait super.updateProgress(ProgressStep.PREPARING_USERS);\n\t\tconst uriResult = RocketChatFile.dataURIParse(dataURI);\n\t\tconst buf = Buffer.from(uriResult.image, 'base64');\n\t\tconst parsed = this.csvParser(buf.toString());\n\n\t\tlet userCount = 0;\n\t\tfor await (const [index, user] of parsed.entries()) {\n\t\t\t// Ignore the first column\n\t\t\tif (index === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst username = user[0];\n\t\t\tconst email = user[1];\n\t\t\tif (!email) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst name = user[7] || user[8] || username;\n\n\t\t\tconst newUser: IImportUser = {\n\t\t\t\temails: [email],\n\t\t\t\timportIds: [email],\n\t\t\t\tusername,\n\t\t\t\tname,\n\t\t\t\ttype: 'user',\n\t\t\t};\n\n\t\t\tswitch (user[2]) {\n\t\t\t\tcase 'Admin':\n\t\t\t\t\tnewUser.roles = ['admin'];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Bot':\n\t\t\t\t\tnewUser.roles = ['bot'];\n\t\t\t\t\tnewUser.type = 'bot';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Deactivated':\n\t\t\t\t\tnewUser.deleted = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tawait this.converter.addUser(newUser);\n\t\t\tuserCount++;\n\t\t}\n\n\t\tif (userCount === 0) {\n\t\t\tthis.logger.error('No users found in the import file.');\n\t\t\tawait super.updateProgress(ProgressStep.ERROR);\n\t\t\treturn super.getProgress();\n\t\t}\n\n\t\tawait super.updateProgress(ProgressStep.USER_SELECTION);\n\t\tawait super.addCountToTotal(userCount);\n\n\t\tconst { value } = await Settings.incrementValueById('Slack_Users_Importer_Count', userCount, { returnDocument: 'after' });\n\t\tif (value) {\n\t\t\tvoid notifyOnSettingChanged(value);\n\t\t}\n\n\t\tawait super.updateRecord({ 'count.users': userCount });\n\t\treturn super.getProgress();\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      SlackUsersImporter: () => SlackUsersImporter\n    });\n    let fs;\n    module.link(\"fs\", {\n      default(v) {\n        fs = v;\n      }\n    }, 0);\n    let Settings;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      }\n    }, 1);\n    let parse;\n    module.link(\"csv-parse/lib/sync\", {\n      parse(v) {\n        parse = v;\n      }\n    }, 2);\n    let RocketChatFile;\n    module.link(\"../../file/server\", {\n      RocketChatFile(v) {\n        RocketChatFile = v;\n      }\n    }, 3);\n    let Importer, ProgressStep;\n    module.link(\"../../importer/server\", {\n      Importer(v) {\n        Importer = v;\n      },\n      ProgressStep(v) {\n        ProgressStep = v;\n      }\n    }, 4);\n    let notifyOnSettingChanged;\n    module.link(\"../../lib/server/lib/notifyListener\", {\n      notifyOnSettingChanged(v) {\n        notifyOnSettingChanged = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class SlackUsersImporter extends Importer {\n      constructor(info, importRecord) {\n        let converterOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        super(info, importRecord, converterOptions);\n        this.csvParser = void 0;\n        this.csvParser = parse;\n      }\n      async prepareUsingLocalFile(fullFilePath) {\n        this.logger.debug('start preparing import operation');\n        await this.converter.clearImportData();\n        const file = fs.readFileSync(fullFilePath);\n        const buffer = Buffer.isBuffer(file) ? file : Buffer.from(file);\n        const {\n          contentType\n        } = this.importRecord;\n        const fileName = this.importRecord.file;\n        const data = buffer.toString('base64');\n        const dataURI = \"data:\".concat(contentType, \";base64,\").concat(data);\n        return this.prepare(dataURI, fileName || '');\n      }\n      async prepare(dataURI, fileName) {\n        this.logger.debug('start preparing import operation');\n        await this.converter.clearImportData();\n        await this.updateRecord({\n          file: fileName\n        });\n        await super.updateProgress(ProgressStep.PREPARING_USERS);\n        const uriResult = RocketChatFile.dataURIParse(dataURI);\n        const buf = Buffer.from(uriResult.image, 'base64');\n        const parsed = this.csvParser(buf.toString());\n        let userCount = 0;\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(parsed.entries()), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const [index, user] = _step.value;\n            {\n              // Ignore the first column\n              if (index === 0) {\n                continue;\n              }\n              const username = user[0];\n              const email = user[1];\n              if (!email) {\n                continue;\n              }\n              const name = user[7] || user[8] || username;\n              const newUser = {\n                emails: [email],\n                importIds: [email],\n                username,\n                name,\n                type: 'user'\n              };\n              switch (user[2]) {\n                case 'Admin':\n                  newUser.roles = ['admin'];\n                  break;\n                case 'Bot':\n                  newUser.roles = ['bot'];\n                  newUser.type = 'bot';\n                  break;\n                case 'Deactivated':\n                  newUser.deleted = true;\n                  break;\n              }\n              await this.converter.addUser(newUser);\n              userCount++;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        if (userCount === 0) {\n          this.logger.error('No users found in the import file.');\n          await super.updateProgress(ProgressStep.ERROR);\n          return super.getProgress();\n        }\n        await super.updateProgress(ProgressStep.USER_SELECTION);\n        await super.addCountToTotal(userCount);\n        const {\n          value\n        } = await Settings.incrementValueById('Slack_Users_Importer_Count', userCount, {\n          returnDocument: 'after'\n        });\n        if (value) {\n          void notifyOnSettingChanged(value);\n        }\n        await super.updateRecord({\n          'count.users': userCount\n        });\n        return super.getProgress();\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","SlackUsersImporter","fs","Settings","parse","RocketChatFile","Importer","ProgressStep","notifyOnSettingChanged","__reifyWaitForDeps__","constructor","info","importRecord","converterOptions","arguments","length","undefined","csvParser","prepareUsingLocalFile","fullFilePath","logger","debug","converter","clearImportData","file","readFileSync","buffer","Buffer","isBuffer","from","contentType","fileName","data","toString","dataURI","concat","prepare","updateRecord","updateProgress","PREPARING_USERS","uriResult","dataURIParse","buf","image","parsed","userCount","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","entries","_step","next","done","index","user","value","username","email","name","newUser","emails","importIds","type","roles","deleted","addUser","err","return","error","ERROR","getProgress","USER_SELECTION","addCountToTotal","incrementValueById","returnDocument","__reify_async_result__","_reifyError","self","async"],"sources":["app/importer-slack-users/server/SlackUsersImporter.ts"],"sourcesContent":["import fs from 'fs';\n\nimport type { IImport, IImportUser } from '@rocket.chat/core-typings';\nimport { Settings } from '@rocket.chat/models';\nimport { parse } from 'csv-parse/lib/sync';\n\nimport { RocketChatFile } from '../../file/server';\nimport { Importer, ProgressStep } from '../../importer/server';\nimport type { ConverterOptions } from '../../importer/server/classes/ImportDataConverter';\nimport type { ImporterProgress } from '../../importer/server/classes/ImporterProgress';\nimport type { ImporterInfo } from '../../importer/server/definitions/ImporterInfo';\nimport { notifyOnSettingChanged } from '../../lib/server/lib/notifyListener';\n\nexport class SlackUsersImporter extends Importer {\n\tprivate csvParser: (csv: string) => string[];\n\n\tconstructor(info: ImporterInfo, importRecord: IImport, converterOptions: ConverterOptions = {}) {\n\t\tsuper(info, importRecord, converterOptions);\n\n\t\tthis.csvParser = parse;\n\t}\n\n\tasync prepareUsingLocalFile(fullFilePath: string): Promise<ImporterProgress> {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tawait this.converter.clearImportData();\n\n\t\tconst file = fs.readFileSync(fullFilePath);\n\t\tconst buffer = Buffer.isBuffer(file) ? file : Buffer.from(file);\n\n\t\tconst { contentType } = this.importRecord;\n\t\tconst fileName = this.importRecord.file;\n\n\t\tconst data = buffer.toString('base64');\n\t\tconst dataURI = `data:${contentType};base64,${data}`;\n\n\t\treturn this.prepare(dataURI, fileName || '');\n\t}\n\n\tasync prepare(dataURI: string, fileName: string): Promise<ImporterProgress> {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tawait this.converter.clearImportData();\n\t\tawait this.updateRecord({ file: fileName });\n\n\t\tawait super.updateProgress(ProgressStep.PREPARING_USERS);\n\t\tconst uriResult = RocketChatFile.dataURIParse(dataURI);\n\t\tconst buf = Buffer.from(uriResult.image, 'base64');\n\t\tconst parsed = this.csvParser(buf.toString());\n\n\t\tlet userCount = 0;\n\t\tfor await (const [index, user] of parsed.entries()) {\n\t\t\t// Ignore the first column\n\t\t\tif (index === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst username = user[0];\n\t\t\tconst email = user[1];\n\t\t\tif (!email) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst name = user[7] || user[8] || username;\n\n\t\t\tconst newUser: IImportUser = {\n\t\t\t\temails: [email],\n\t\t\t\timportIds: [email],\n\t\t\t\tusername,\n\t\t\t\tname,\n\t\t\t\ttype: 'user',\n\t\t\t};\n\n\t\t\tswitch (user[2]) {\n\t\t\t\tcase 'Admin':\n\t\t\t\t\tnewUser.roles = ['admin'];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Bot':\n\t\t\t\t\tnewUser.roles = ['bot'];\n\t\t\t\t\tnewUser.type = 'bot';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Deactivated':\n\t\t\t\t\tnewUser.deleted = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tawait this.converter.addUser(newUser);\n\t\t\tuserCount++;\n\t\t}\n\n\t\tif (userCount === 0) {\n\t\t\tthis.logger.error('No users found in the import file.');\n\t\t\tawait super.updateProgress(ProgressStep.ERROR);\n\t\t\treturn super.getProgress();\n\t\t}\n\n\t\tawait super.updateProgress(ProgressStep.USER_SELECTION);\n\t\tawait super.addCountToTotal(userCount);\n\n\t\tconst { value } = await Settings.incrementValueById('Slack_Users_Importer_Count', userCount, { returnDocument: 'after' });\n\t\tif (value) {\n\t\t\tvoid notifyOnSettingChanged(value);\n\t\t}\n\n\t\tawait super.updateRecord({ 'count.users': userCount });\n\t\treturn super.getProgress();\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d73f46b1c6a96b4eafe437d5553242e62bad6e3c"}
