{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/RoomHistoryManager.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-utils/client/lib/RoomHistoryManager.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/RoomHistoryManager.ts","inputSourceMap":{"version":3,"file":"app/ui-utils/client/lib/RoomHistoryManager.ts","sourceRoot":"","sources":["app/ui-utils/client/lib/RoomHistoryManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\nimport type { MutableRefObject } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport type { MinimongoCollection } from '../../../../client/definitions/MinimongoCollection';\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { waitForElement } from '../../../../client/lib/utils/waitForElement';\nimport { ChatMessage, ChatSubscription } from '../../../models/client';\nimport { getUserPreference } from '../../../utils/client';\n\nexport async function upsertMessage(\n\t{\n\t\tmsg,\n\t\tsubscription,\n\t}: {\n\t\tmsg: IMessage & { ignored?: boolean };\n\t\tsubscription?: ISubscription;\n\t},\n\tcollection: MinimongoCollection<IMessage> = ChatMessage,\n) {\n\tconst userId = msg.u?._id;\n\n\tif (subscription?.ignored?.includes(userId)) {\n\t\tmsg.ignored = true;\n\t}\n\n\tif (msg.t === 'e2e' && !msg.file) {\n\t\tmsg.e2e = 'pending';\n\t}\n\tmsg = (await onClientMessageReceived(msg)) || msg;\n\n\tconst { _id } = msg;\n\n\treturn collection.upsert({ _id }, msg);\n}\n\nexport function upsertMessageBulk(\n\t{ msgs, subscription }: { msgs: IMessage[]; subscription?: ISubscription },\n\tcollection: MinimongoCollection<IMessage> = ChatMessage,\n) {\n\tconst { queries } = collection;\n\tcollection.queries = [];\n\tmsgs.forEach((msg, index) => {\n\t\tif (index === msgs.length - 1) {\n\t\t\tcollection.queries = queries;\n\t\t}\n\t\tvoid upsertMessage({ msg, subscription }, collection);\n\t});\n}\n\nconst defaultLimit = parseInt(getConfig('roomListLimit') ?? '50') || 50;\n\nconst waitAfterFlush = (fn: () => void) => setTimeout(() => Tracker.afterFlush(fn), 10);\n\nclass RoomHistoryManagerClass extends Emitter {\n\tprivate lastRequest?: Date;\n\n\tprivate histories: Record<\n\t\tIRoom['_id'],\n\t\t{\n\t\t\thasMore: ReactiveVar<boolean>;\n\t\t\thasMoreNext: ReactiveVar<boolean>;\n\t\t\tisLoading: ReactiveVar<boolean>;\n\t\t\tunreadNotLoaded: ReactiveVar<number>;\n\t\t\tfirstUnread: ReactiveVar<IMessage | undefined>;\n\t\t\tloaded: number | undefined;\n\t\t\toldestTs?: Date;\n\t\t}\n\t> = {};\n\n\tprivate requestsList: string[] = [];\n\n\tpublic getRoom(rid: IRoom['_id']) {\n\t\tif (!this.histories[rid]) {\n\t\t\tthis.histories[rid] = {\n\t\t\t\thasMore: new ReactiveVar(true),\n\t\t\t\thasMoreNext: new ReactiveVar(false),\n\t\t\t\tisLoading: new ReactiveVar(false),\n\t\t\t\tunreadNotLoaded: new ReactiveVar(0),\n\t\t\t\tfirstUnread: new ReactiveVar(undefined),\n\t\t\t\tloaded: undefined,\n\t\t\t};\n\t\t}\n\n\t\treturn this.histories[rid];\n\t}\n\n\tprivate async queue(): Promise<void> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst requestId = uuidv4();\n\t\t\tconst done = () => {\n\t\t\t\tthis.lastRequest = new Date();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tif (this.requestsList.length === 0) {\n\t\t\t\treturn this.run(done);\n\t\t\t}\n\t\t\tthis.requestsList.push(requestId);\n\t\t\tthis.once(requestId, done);\n\t\t});\n\t}\n\n\tprivate run(fn: () => void) {\n\t\tconst difference = this.lastRequest ? differenceInMilliseconds(new Date(), this.lastRequest) : Infinity;\n\t\tif (difference > 500) {\n\t\t\treturn fn();\n\t\t}\n\t\treturn setTimeout(fn, 500 - difference);\n\t}\n\n\tprivate unqueue() {\n\t\tconst requestId = this.requestsList.pop();\n\t\tif (!requestId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.run(() => this.emit(requestId));\n\t}\n\n\tpublic async getMore(rid: IRoom['_id'], limit = defaultLimit): Promise<void> {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (Tracker.nonreactive(() => room.hasMore.get()) !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\troom.isLoading.set(true);\n\n\t\tawait this.queue();\n\n\t\tlet ls = undefined;\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\tif (subscription) {\n\t\t\t({ ls } = subscription);\n\t\t}\n\n\t\tconst showThreadsInMainChannel = getUserPreference(Meteor.userId(), 'showThreadsInMainChannel', false);\n\t\tconst result = await callWithErrorHandling(\n\t\t\t'loadHistory',\n\t\t\trid,\n\t\t\troom.oldestTs,\n\t\t\tlimit,\n\t\t\tls ? String(ls) : undefined,\n\t\t\tshowThreadsInMainChannel,\n\t\t);\n\n\t\tif (!result) {\n\t\t\tthrow new Error('loadHistory returned nothing');\n\t\t}\n\n\t\tthis.unqueue();\n\n\t\tlet previousHeight: number | undefined;\n\t\tlet scroll: number | undefined;\n\t\tconst { messages = [] } = result;\n\t\troom.unreadNotLoaded.set(result.unreadNotLoaded);\n\t\troom.firstUnread.set(result.firstUnread);\n\n\t\tif (messages.length > 0) {\n\t\t\troom.oldestTs = messages[messages.length - 1].ts;\n\t\t}\n\n\t\tconst wrapper = await waitForElement('.messages-box .wrapper .rc-scrollbars-view');\n\n\t\tif (wrapper) {\n\t\t\tpreviousHeight = wrapper.scrollHeight;\n\t\t\tscroll = wrapper.scrollTop;\n\t\t}\n\n\t\tupsertMessageBulk({\n\t\t\tmsgs: messages.filter((msg) => msg.t !== 'command'),\n\t\t\tsubscription,\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\n\t\tconst visibleMessages = messages.filter((msg) => !msg.tmid || showThreadsInMainChannel || msg.tshow);\n\n\t\troom.loaded += visibleMessages.length;\n\n\t\tif (messages.length < limit) {\n\t\t\troom.hasMore.set(false);\n\t\t}\n\n\t\tif (room.hasMore.get() && (visibleMessages.length === 0 || room.loaded < limit)) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\n\t\twaitAfterFlush(() => {\n\t\t\tthis.emit('loaded-messages');\n\t\t\tconst heightDiff = wrapper.scrollHeight - (previousHeight ?? NaN);\n\t\t\twrapper.scrollTop = (scroll ?? NaN) + heightDiff;\n\t\t});\n\n\t\troom.isLoading.set(false);\n\t}\n\n\tpublic async getMoreNext(rid: IRoom['_id'], atBottomRef: MutableRefObject<boolean>) {\n\t\tconst room = this.getRoom(rid);\n\t\tif (Tracker.nonreactive(() => room.hasMoreNext.get()) !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.queue();\n\t\tatBottomRef.current = false;\n\n\t\troom.isLoading.set(true);\n\n\t\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true } }, { sort: { ts: -1 } });\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\n\t\tif (lastMessage?.ts) {\n\t\t\tconst { ts } = lastMessage;\n\t\t\tconst result = await callWithErrorHandling('loadNextMessages', rid, ts, defaultLimit);\n\t\t\tupsertMessageBulk({\n\t\t\t\tmsgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'),\n\t\t\t\tsubscription,\n\t\t\t});\n\n\t\t\troom.isLoading.set(false);\n\t\t\tif (!room.loaded) {\n\t\t\t\troom.loaded = 0;\n\t\t\t}\n\n\t\t\troom.loaded += result.messages.length;\n\t\t\tif (result.messages.length < defaultLimit) {\n\t\t\t\troom.hasMoreNext.set(false);\n\t\t\t}\n\t\t}\n\t\tthis.unqueue();\n\t}\n\n\tpublic hasMore(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMore.get();\n\t}\n\n\tpublic hasMoreNext(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMoreNext.get();\n\t}\n\n\tpublic getMoreIfIsEmpty(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (room.loaded === undefined) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\t}\n\n\tpublic isLoading(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.isLoading.get();\n\t}\n\n\tpublic async clear(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\tChatMessage.remove({ rid });\n\t\troom.isLoading.set(true);\n\t\troom.hasMore.set(true);\n\t\troom.hasMoreNext.set(false);\n\t\troom.oldestTs = undefined;\n\t\troom.loaded = undefined;\n\t}\n\n\tpublic async getSurroundingMessages(message?: Pick<IMessage, '_id' | 'rid'> & { ts?: Date }) {\n\t\tif (!message?.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst messageAlreadyLoaded = Boolean(ChatMessage.findOne({ _id: message._id, _hidden: { $ne: true } }));\n\n\t\tif (messageAlreadyLoaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = this.getRoom(message.rid);\n\t\tvoid this.clear(message.rid);\n\n\t\tconst subscription = ChatSubscription.findOne({ rid: message.rid });\n\n\t\tconst result = await callWithErrorHandling('loadSurroundingMessages', message, defaultLimit);\n\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tupsertMessageBulk({ msgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'), subscription });\n\n\t\tTracker.afterFlush(async () => {\n\t\t\tthis.emit('loaded-messages');\n\t\t\troom.isLoading.set(false);\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\t\troom.loaded += result.messages.length;\n\t\troom.hasMore.set(result.moreBefore);\n\t\troom.hasMoreNext.set(result.moreAfter);\n\t}\n}\n\nexport const RoomHistoryManager = new RoomHistoryManagerClass();\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/RoomHistoryManager.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/RoomHistoryManager.ts","inputSourceMap":{"version":3,"file":"app/ui-utils/client/lib/RoomHistoryManager.ts","sourceRoot":"","sources":["app/ui-utils/client/lib/RoomHistoryManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\nimport type { MutableRefObject } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport type { MinimongoCollection } from '../../../../client/definitions/MinimongoCollection';\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { waitForElement } from '../../../../client/lib/utils/waitForElement';\nimport { ChatMessage, ChatSubscription } from '../../../models/client';\nimport { getUserPreference } from '../../../utils/client';\n\nexport async function upsertMessage(\n\t{\n\t\tmsg,\n\t\tsubscription,\n\t}: {\n\t\tmsg: IMessage & { ignored?: boolean };\n\t\tsubscription?: ISubscription;\n\t},\n\tcollection: MinimongoCollection<IMessage> = ChatMessage,\n) {\n\tconst userId = msg.u?._id;\n\n\tif (subscription?.ignored?.includes(userId)) {\n\t\tmsg.ignored = true;\n\t}\n\n\tif (msg.t === 'e2e' && !msg.file) {\n\t\tmsg.e2e = 'pending';\n\t}\n\tmsg = (await onClientMessageReceived(msg)) || msg;\n\n\tconst { _id } = msg;\n\n\treturn collection.upsert({ _id }, msg);\n}\n\nexport function upsertMessageBulk(\n\t{ msgs, subscription }: { msgs: IMessage[]; subscription?: ISubscription },\n\tcollection: MinimongoCollection<IMessage> = ChatMessage,\n) {\n\tconst { queries } = collection;\n\tcollection.queries = [];\n\tmsgs.forEach((msg, index) => {\n\t\tif (index === msgs.length - 1) {\n\t\t\tcollection.queries = queries;\n\t\t}\n\t\tvoid upsertMessage({ msg, subscription }, collection);\n\t});\n}\n\nconst defaultLimit = parseInt(getConfig('roomListLimit') ?? '50') || 50;\n\nconst waitAfterFlush = (fn: () => void) => setTimeout(() => Tracker.afterFlush(fn), 10);\n\nclass RoomHistoryManagerClass extends Emitter {\n\tprivate lastRequest?: Date;\n\n\tprivate histories: Record<\n\t\tIRoom['_id'],\n\t\t{\n\t\t\thasMore: ReactiveVar<boolean>;\n\t\t\thasMoreNext: ReactiveVar<boolean>;\n\t\t\tisLoading: ReactiveVar<boolean>;\n\t\t\tunreadNotLoaded: ReactiveVar<number>;\n\t\t\tfirstUnread: ReactiveVar<IMessage | undefined>;\n\t\t\tloaded: number | undefined;\n\t\t\toldestTs?: Date;\n\t\t}\n\t> = {};\n\n\tprivate requestsList: string[] = [];\n\n\tpublic getRoom(rid: IRoom['_id']) {\n\t\tif (!this.histories[rid]) {\n\t\t\tthis.histories[rid] = {\n\t\t\t\thasMore: new ReactiveVar(true),\n\t\t\t\thasMoreNext: new ReactiveVar(false),\n\t\t\t\tisLoading: new ReactiveVar(false),\n\t\t\t\tunreadNotLoaded: new ReactiveVar(0),\n\t\t\t\tfirstUnread: new ReactiveVar(undefined),\n\t\t\t\tloaded: undefined,\n\t\t\t};\n\t\t}\n\n\t\treturn this.histories[rid];\n\t}\n\n\tprivate async queue(): Promise<void> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst requestId = uuidv4();\n\t\t\tconst done = () => {\n\t\t\t\tthis.lastRequest = new Date();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tif (this.requestsList.length === 0) {\n\t\t\t\treturn this.run(done);\n\t\t\t}\n\t\t\tthis.requestsList.push(requestId);\n\t\t\tthis.once(requestId, done);\n\t\t});\n\t}\n\n\tprivate run(fn: () => void) {\n\t\tconst difference = this.lastRequest ? differenceInMilliseconds(new Date(), this.lastRequest) : Infinity;\n\t\tif (difference > 500) {\n\t\t\treturn fn();\n\t\t}\n\t\treturn setTimeout(fn, 500 - difference);\n\t}\n\n\tprivate unqueue() {\n\t\tconst requestId = this.requestsList.pop();\n\t\tif (!requestId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.run(() => this.emit(requestId));\n\t}\n\n\tpublic async getMore(rid: IRoom['_id'], limit = defaultLimit): Promise<void> {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (Tracker.nonreactive(() => room.hasMore.get()) !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\troom.isLoading.set(true);\n\n\t\tawait this.queue();\n\n\t\tlet ls = undefined;\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\tif (subscription) {\n\t\t\t({ ls } = subscription);\n\t\t}\n\n\t\tconst showThreadsInMainChannel = getUserPreference(Meteor.userId(), 'showThreadsInMainChannel', false);\n\t\tconst result = await callWithErrorHandling(\n\t\t\t'loadHistory',\n\t\t\trid,\n\t\t\troom.oldestTs,\n\t\t\tlimit,\n\t\t\tls ? String(ls) : undefined,\n\t\t\tshowThreadsInMainChannel,\n\t\t);\n\n\t\tif (!result) {\n\t\t\tthrow new Error('loadHistory returned nothing');\n\t\t}\n\n\t\tthis.unqueue();\n\n\t\tlet previousHeight: number | undefined;\n\t\tlet scroll: number | undefined;\n\t\tconst { messages = [] } = result;\n\t\troom.unreadNotLoaded.set(result.unreadNotLoaded);\n\t\troom.firstUnread.set(result.firstUnread);\n\n\t\tif (messages.length > 0) {\n\t\t\troom.oldestTs = messages[messages.length - 1].ts;\n\t\t}\n\n\t\tconst wrapper = await waitForElement('.messages-box .wrapper .rc-scrollbars-view');\n\n\t\tif (wrapper) {\n\t\t\tpreviousHeight = wrapper.scrollHeight;\n\t\t\tscroll = wrapper.scrollTop;\n\t\t}\n\n\t\tupsertMessageBulk({\n\t\t\tmsgs: messages.filter((msg) => msg.t !== 'command'),\n\t\t\tsubscription,\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\n\t\tconst visibleMessages = messages.filter((msg) => !msg.tmid || showThreadsInMainChannel || msg.tshow);\n\n\t\troom.loaded += visibleMessages.length;\n\n\t\tif (messages.length < limit) {\n\t\t\troom.hasMore.set(false);\n\t\t}\n\n\t\tif (room.hasMore.get() && (visibleMessages.length === 0 || room.loaded < limit)) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\n\t\twaitAfterFlush(() => {\n\t\t\tthis.emit('loaded-messages');\n\t\t\tconst heightDiff = wrapper.scrollHeight - (previousHeight ?? NaN);\n\t\t\twrapper.scrollTop = (scroll ?? NaN) + heightDiff;\n\t\t});\n\n\t\troom.isLoading.set(false);\n\t}\n\n\tpublic async getMoreNext(rid: IRoom['_id'], atBottomRef: MutableRefObject<boolean>) {\n\t\tconst room = this.getRoom(rid);\n\t\tif (Tracker.nonreactive(() => room.hasMoreNext.get()) !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.queue();\n\t\tatBottomRef.current = false;\n\n\t\troom.isLoading.set(true);\n\n\t\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true } }, { sort: { ts: -1 } });\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\n\t\tif (lastMessage?.ts) {\n\t\t\tconst { ts } = lastMessage;\n\t\t\tconst result = await callWithErrorHandling('loadNextMessages', rid, ts, defaultLimit);\n\t\t\tupsertMessageBulk({\n\t\t\t\tmsgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'),\n\t\t\t\tsubscription,\n\t\t\t});\n\n\t\t\troom.isLoading.set(false);\n\t\t\tif (!room.loaded) {\n\t\t\t\troom.loaded = 0;\n\t\t\t}\n\n\t\t\troom.loaded += result.messages.length;\n\t\t\tif (result.messages.length < defaultLimit) {\n\t\t\t\troom.hasMoreNext.set(false);\n\t\t\t}\n\t\t}\n\t\tthis.unqueue();\n\t}\n\n\tpublic hasMore(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMore.get();\n\t}\n\n\tpublic hasMoreNext(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMoreNext.get();\n\t}\n\n\tpublic getMoreIfIsEmpty(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (room.loaded === undefined) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\t}\n\n\tpublic isLoading(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.isLoading.get();\n\t}\n\n\tpublic async clear(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\tChatMessage.remove({ rid });\n\t\troom.isLoading.set(true);\n\t\troom.hasMore.set(true);\n\t\troom.hasMoreNext.set(false);\n\t\troom.oldestTs = undefined;\n\t\troom.loaded = undefined;\n\t}\n\n\tpublic async getSurroundingMessages(message?: Pick<IMessage, '_id' | 'rid'> & { ts?: Date }) {\n\t\tif (!message?.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst messageAlreadyLoaded = Boolean(ChatMessage.findOne({ _id: message._id, _hidden: { $ne: true } }));\n\n\t\tif (messageAlreadyLoaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = this.getRoom(message.rid);\n\t\tvoid this.clear(message.rid);\n\n\t\tconst subscription = ChatSubscription.findOne({ rid: message.rid });\n\n\t\tconst result = await callWithErrorHandling('loadSurroundingMessages', message, defaultLimit);\n\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tupsertMessageBulk({ msgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'), subscription });\n\n\t\tTracker.afterFlush(async () => {\n\t\t\tthis.emit('loaded-messages');\n\t\t\troom.isLoading.set(false);\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\t\troom.loaded += result.messages.length;\n\t\troom.hasMore.set(result.moreBefore);\n\t\troom.hasMoreNext.set(result.moreAfter);\n\t}\n}\n\nexport const RoomHistoryManager = new RoomHistoryManagerClass();\n"]}}},"code":"var _getConfig;\nmodule.export({\n  upsertMessage: () => upsertMessage,\n  upsertMessageBulk: () => upsertMessageBulk,\n  RoomHistoryManager: () => RoomHistoryManager\n});\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n}, 0);\nlet differenceInMilliseconds;\nmodule.link(\"date-fns/differenceInMilliseconds\", {\n  default(v) {\n    differenceInMilliseconds = v;\n  }\n}, 1);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n}, 2);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n}, 3);\nlet uuidv4;\nmodule.link(\"uuid\", {\n  v4(v) {\n    uuidv4 = v;\n  }\n}, 4);\nlet onClientMessageReceived;\nmodule.link(\"../../../../client/lib/onClientMessageReceived\", {\n  onClientMessageReceived(v) {\n    onClientMessageReceived = v;\n  }\n}, 5);\nlet callWithErrorHandling;\nmodule.link(\"../../../../client/lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling(v) {\n    callWithErrorHandling = v;\n  }\n}, 6);\nlet getConfig;\nmodule.link(\"../../../../client/lib/utils/getConfig\", {\n  getConfig(v) {\n    getConfig = v;\n  }\n}, 7);\nlet waitForElement;\nmodule.link(\"../../../../client/lib/utils/waitForElement\", {\n  waitForElement(v) {\n    waitForElement = v;\n  }\n}, 8);\nlet ChatMessage, ChatSubscription;\nmodule.link(\"../../../models/client\", {\n  ChatMessage(v) {\n    ChatMessage = v;\n  },\n  ChatSubscription(v) {\n    ChatSubscription = v;\n  }\n}, 9);\nlet getUserPreference;\nmodule.link(\"../../../utils/client\", {\n  getUserPreference(v) {\n    getUserPreference = v;\n  }\n}, 10);\nasync function upsertMessage(_ref) {\n  var _msg$u, _subscription$ignored;\n  let {\n    msg,\n    subscription\n  } = _ref;\n  let collection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ChatMessage;\n  const userId = (_msg$u = msg.u) === null || _msg$u === void 0 ? void 0 : _msg$u._id;\n  if (subscription !== null && subscription !== void 0 && (_subscription$ignored = subscription.ignored) !== null && _subscription$ignored !== void 0 && _subscription$ignored.includes(userId)) {\n    msg.ignored = true;\n  }\n  if (msg.t === 'e2e' && !msg.file) {\n    msg.e2e = 'pending';\n  }\n  msg = (await onClientMessageReceived(msg)) || msg;\n  const {\n    _id\n  } = msg;\n  return collection.upsert({\n    _id\n  }, msg);\n}\nfunction upsertMessageBulk(_ref2) {\n  let {\n    msgs,\n    subscription\n  } = _ref2;\n  let collection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ChatMessage;\n  const {\n    queries\n  } = collection;\n  collection.queries = [];\n  msgs.forEach((msg, index) => {\n    if (index === msgs.length - 1) {\n      collection.queries = queries;\n    }\n    void upsertMessage({\n      msg,\n      subscription\n    }, collection);\n  });\n}\nconst defaultLimit = parseInt((_getConfig = getConfig('roomListLimit')) !== null && _getConfig !== void 0 ? _getConfig : '50') || 50;\nconst waitAfterFlush = fn => setTimeout(() => Tracker.afterFlush(fn), 10);\nclass RoomHistoryManagerClass extends Emitter {\n  constructor() {\n    super(...arguments);\n    this.lastRequest = void 0;\n    this.histories = {};\n    this.requestsList = [];\n  }\n  getRoom(rid) {\n    if (!this.histories[rid]) {\n      this.histories[rid] = {\n        hasMore: new ReactiveVar(true),\n        hasMoreNext: new ReactiveVar(false),\n        isLoading: new ReactiveVar(false),\n        unreadNotLoaded: new ReactiveVar(0),\n        firstUnread: new ReactiveVar(undefined),\n        loaded: undefined\n      };\n    }\n    return this.histories[rid];\n  }\n  async queue() {\n    return new Promise(resolve => {\n      const requestId = uuidv4();\n      const done = () => {\n        this.lastRequest = new Date();\n        resolve();\n      };\n      if (this.requestsList.length === 0) {\n        return this.run(done);\n      }\n      this.requestsList.push(requestId);\n      this.once(requestId, done);\n    });\n  }\n  run(fn) {\n    const difference = this.lastRequest ? differenceInMilliseconds(new Date(), this.lastRequest) : Infinity;\n    if (difference > 500) {\n      return fn();\n    }\n    return setTimeout(fn, 500 - difference);\n  }\n  unqueue() {\n    const requestId = this.requestsList.pop();\n    if (!requestId) {\n      return;\n    }\n    this.run(() => this.emit(requestId));\n  }\n  async getMore(rid) {\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultLimit;\n    const room = this.getRoom(rid);\n    if (Tracker.nonreactive(() => room.hasMore.get()) !== true) {\n      return;\n    }\n    room.isLoading.set(true);\n    await this.queue();\n    let ls = undefined;\n    const subscription = ChatSubscription.findOne({\n      rid\n    });\n    if (subscription) {\n      ({\n        ls\n      } = subscription);\n    }\n    const showThreadsInMainChannel = getUserPreference(Meteor.userId(), 'showThreadsInMainChannel', false);\n    const result = await callWithErrorHandling('loadHistory', rid, room.oldestTs, limit, ls ? String(ls) : undefined, showThreadsInMainChannel);\n    if (!result) {\n      throw new Error('loadHistory returned nothing');\n    }\n    this.unqueue();\n    let previousHeight;\n    let scroll;\n    const {\n      messages = []\n    } = result;\n    room.unreadNotLoaded.set(result.unreadNotLoaded);\n    room.firstUnread.set(result.firstUnread);\n    if (messages.length > 0) {\n      room.oldestTs = messages[messages.length - 1].ts;\n    }\n    const wrapper = await waitForElement('.messages-box .wrapper .rc-scrollbars-view');\n    if (wrapper) {\n      previousHeight = wrapper.scrollHeight;\n      scroll = wrapper.scrollTop;\n    }\n    upsertMessageBulk({\n      msgs: messages.filter(msg => msg.t !== 'command'),\n      subscription\n    });\n    if (!room.loaded) {\n      room.loaded = 0;\n    }\n    const visibleMessages = messages.filter(msg => !msg.tmid || showThreadsInMainChannel || msg.tshow);\n    room.loaded += visibleMessages.length;\n    if (messages.length < limit) {\n      room.hasMore.set(false);\n    }\n    if (room.hasMore.get() && (visibleMessages.length === 0 || room.loaded < limit)) {\n      return this.getMore(rid);\n    }\n    waitAfterFlush(() => {\n      var _previousHeight, _scroll;\n      this.emit('loaded-messages');\n      const heightDiff = wrapper.scrollHeight - ((_previousHeight = previousHeight) !== null && _previousHeight !== void 0 ? _previousHeight : NaN);\n      wrapper.scrollTop = ((_scroll = scroll) !== null && _scroll !== void 0 ? _scroll : NaN) + heightDiff;\n    });\n    room.isLoading.set(false);\n  }\n  async getMoreNext(rid, atBottomRef) {\n    const room = this.getRoom(rid);\n    if (Tracker.nonreactive(() => room.hasMoreNext.get()) !== true) {\n      return;\n    }\n    await this.queue();\n    atBottomRef.current = false;\n    room.isLoading.set(true);\n    const lastMessage = ChatMessage.findOne({\n      rid,\n      _hidden: {\n        $ne: true\n      }\n    }, {\n      sort: {\n        ts: -1\n      }\n    });\n    const subscription = ChatSubscription.findOne({\n      rid\n    });\n    if (lastMessage !== null && lastMessage !== void 0 && lastMessage.ts) {\n      const {\n        ts\n      } = lastMessage;\n      const result = await callWithErrorHandling('loadNextMessages', rid, ts, defaultLimit);\n      upsertMessageBulk({\n        msgs: Array.from(result.messages).filter(msg => msg.t !== 'command'),\n        subscription\n      });\n      room.isLoading.set(false);\n      if (!room.loaded) {\n        room.loaded = 0;\n      }\n      room.loaded += result.messages.length;\n      if (result.messages.length < defaultLimit) {\n        room.hasMoreNext.set(false);\n      }\n    }\n    this.unqueue();\n  }\n  hasMore(rid) {\n    const room = this.getRoom(rid);\n    return room.hasMore.get();\n  }\n  hasMoreNext(rid) {\n    const room = this.getRoom(rid);\n    return room.hasMoreNext.get();\n  }\n  getMoreIfIsEmpty(rid) {\n    const room = this.getRoom(rid);\n    if (room.loaded === undefined) {\n      return this.getMore(rid);\n    }\n  }\n  isLoading(rid) {\n    const room = this.getRoom(rid);\n    return room.isLoading.get();\n  }\n  async clear(rid) {\n    const room = this.getRoom(rid);\n    ChatMessage.remove({\n      rid\n    });\n    room.isLoading.set(true);\n    room.hasMore.set(true);\n    room.hasMoreNext.set(false);\n    room.oldestTs = undefined;\n    room.loaded = undefined;\n  }\n  async getSurroundingMessages(message) {\n    if (!(message !== null && message !== void 0 && message.rid)) {\n      return;\n    }\n    const messageAlreadyLoaded = Boolean(ChatMessage.findOne({\n      _id: message._id,\n      _hidden: {\n        $ne: true\n      }\n    }));\n    if (messageAlreadyLoaded) {\n      return;\n    }\n    const room = this.getRoom(message.rid);\n    void this.clear(message.rid);\n    const subscription = ChatSubscription.findOne({\n      rid: message.rid\n    });\n    const result = await callWithErrorHandling('loadSurroundingMessages', message, defaultLimit);\n    if (!result) {\n      return;\n    }\n    upsertMessageBulk({\n      msgs: Array.from(result.messages).filter(msg => msg.t !== 'command'),\n      subscription\n    });\n    Tracker.afterFlush(async () => {\n      this.emit('loaded-messages');\n      room.isLoading.set(false);\n    });\n    if (!room.loaded) {\n      room.loaded = 0;\n    }\n    room.loaded += result.messages.length;\n    room.hasMore.set(result.moreBefore);\n    room.hasMoreNext.set(result.moreAfter);\n  }\n}\nconst RoomHistoryManager = new RoomHistoryManagerClass();","map":{"version":3,"names":["module","export","upsertMessage","upsertMessageBulk","RoomHistoryManager","Emitter","link","v","differenceInMilliseconds","default","ReactiveVar","Tracker","uuidv4","v4","onClientMessageReceived","callWithErrorHandling","getConfig","waitForElement","ChatMessage","ChatSubscription","getUserPreference","_ref","_msg$u","_subscription$ignored","msg","subscription","collection","arguments","length","undefined","userId","u","_id","ignored","includes","t","file","e2e","upsert","_ref2","msgs","queries","forEach","index","defaultLimit","parseInt","_getConfig","waitAfterFlush","fn","setTimeout","afterFlush","RoomHistoryManagerClass","constructor","lastRequest","histories","requestsList","getRoom","rid","hasMore","hasMoreNext","isLoading","unreadNotLoaded","firstUnread","loaded","queue","Promise","resolve","requestId","done","Date","run","push","once","difference","Infinity","unqueue","pop","emit","getMore","limit","room","nonreactive","get","set","ls","findOne","showThreadsInMainChannel","Meteor","result","oldestTs","String","Error","previousHeight","scroll","messages","ts","wrapper","scrollHeight","scrollTop","filter","visibleMessages","tmid","tshow","_previousHeight","_scroll","heightDiff","NaN","getMoreNext","atBottomRef","current","lastMessage","_hidden","$ne","sort","Array","from","getMoreIfIsEmpty","clear","remove","getSurroundingMessages","message","messageAlreadyLoaded","Boolean","moreBefore","moreAfter"],"sources":["app/ui-utils/client/lib/RoomHistoryManager.ts"],"sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\nimport type { MutableRefObject } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport type { MinimongoCollection } from '../../../../client/definitions/MinimongoCollection';\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\nimport { callWithErrorHandling } from '../../../../client/lib/utils/callWithErrorHandling';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { waitForElement } from '../../../../client/lib/utils/waitForElement';\nimport { ChatMessage, ChatSubscription } from '../../../models/client';\nimport { getUserPreference } from '../../../utils/client';\n\nexport async function upsertMessage(\n\t{\n\t\tmsg,\n\t\tsubscription,\n\t}: {\n\t\tmsg: IMessage & { ignored?: boolean };\n\t\tsubscription?: ISubscription;\n\t},\n\tcollection: MinimongoCollection<IMessage> = ChatMessage,\n) {\n\tconst userId = msg.u?._id;\n\n\tif (subscription?.ignored?.includes(userId)) {\n\t\tmsg.ignored = true;\n\t}\n\n\tif (msg.t === 'e2e' && !msg.file) {\n\t\tmsg.e2e = 'pending';\n\t}\n\tmsg = (await onClientMessageReceived(msg)) || msg;\n\n\tconst { _id } = msg;\n\n\treturn collection.upsert({ _id }, msg);\n}\n\nexport function upsertMessageBulk(\n\t{ msgs, subscription }: { msgs: IMessage[]; subscription?: ISubscription },\n\tcollection: MinimongoCollection<IMessage> = ChatMessage,\n) {\n\tconst { queries } = collection;\n\tcollection.queries = [];\n\tmsgs.forEach((msg, index) => {\n\t\tif (index === msgs.length - 1) {\n\t\t\tcollection.queries = queries;\n\t\t}\n\t\tvoid upsertMessage({ msg, subscription }, collection);\n\t});\n}\n\nconst defaultLimit = parseInt(getConfig('roomListLimit') ?? '50') || 50;\n\nconst waitAfterFlush = (fn: () => void) => setTimeout(() => Tracker.afterFlush(fn), 10);\n\nclass RoomHistoryManagerClass extends Emitter {\n\tprivate lastRequest?: Date;\n\n\tprivate histories: Record<\n\t\tIRoom['_id'],\n\t\t{\n\t\t\thasMore: ReactiveVar<boolean>;\n\t\t\thasMoreNext: ReactiveVar<boolean>;\n\t\t\tisLoading: ReactiveVar<boolean>;\n\t\t\tunreadNotLoaded: ReactiveVar<number>;\n\t\t\tfirstUnread: ReactiveVar<IMessage | undefined>;\n\t\t\tloaded: number | undefined;\n\t\t\toldestTs?: Date;\n\t\t}\n\t> = {};\n\n\tprivate requestsList: string[] = [];\n\n\tpublic getRoom(rid: IRoom['_id']) {\n\t\tif (!this.histories[rid]) {\n\t\t\tthis.histories[rid] = {\n\t\t\t\thasMore: new ReactiveVar(true),\n\t\t\t\thasMoreNext: new ReactiveVar(false),\n\t\t\t\tisLoading: new ReactiveVar(false),\n\t\t\t\tunreadNotLoaded: new ReactiveVar(0),\n\t\t\t\tfirstUnread: new ReactiveVar(undefined),\n\t\t\t\tloaded: undefined,\n\t\t\t};\n\t\t}\n\n\t\treturn this.histories[rid];\n\t}\n\n\tprivate async queue(): Promise<void> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst requestId = uuidv4();\n\t\t\tconst done = () => {\n\t\t\t\tthis.lastRequest = new Date();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tif (this.requestsList.length === 0) {\n\t\t\t\treturn this.run(done);\n\t\t\t}\n\t\t\tthis.requestsList.push(requestId);\n\t\t\tthis.once(requestId, done);\n\t\t});\n\t}\n\n\tprivate run(fn: () => void) {\n\t\tconst difference = this.lastRequest ? differenceInMilliseconds(new Date(), this.lastRequest) : Infinity;\n\t\tif (difference > 500) {\n\t\t\treturn fn();\n\t\t}\n\t\treturn setTimeout(fn, 500 - difference);\n\t}\n\n\tprivate unqueue() {\n\t\tconst requestId = this.requestsList.pop();\n\t\tif (!requestId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.run(() => this.emit(requestId));\n\t}\n\n\tpublic async getMore(rid: IRoom['_id'], limit = defaultLimit): Promise<void> {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (Tracker.nonreactive(() => room.hasMore.get()) !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\troom.isLoading.set(true);\n\n\t\tawait this.queue();\n\n\t\tlet ls = undefined;\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\tif (subscription) {\n\t\t\t({ ls } = subscription);\n\t\t}\n\n\t\tconst showThreadsInMainChannel = getUserPreference(Meteor.userId(), 'showThreadsInMainChannel', false);\n\t\tconst result = await callWithErrorHandling(\n\t\t\t'loadHistory',\n\t\t\trid,\n\t\t\troom.oldestTs,\n\t\t\tlimit,\n\t\t\tls ? String(ls) : undefined,\n\t\t\tshowThreadsInMainChannel,\n\t\t);\n\n\t\tif (!result) {\n\t\t\tthrow new Error('loadHistory returned nothing');\n\t\t}\n\n\t\tthis.unqueue();\n\n\t\tlet previousHeight: number | undefined;\n\t\tlet scroll: number | undefined;\n\t\tconst { messages = [] } = result;\n\t\troom.unreadNotLoaded.set(result.unreadNotLoaded);\n\t\troom.firstUnread.set(result.firstUnread);\n\n\t\tif (messages.length > 0) {\n\t\t\troom.oldestTs = messages[messages.length - 1].ts;\n\t\t}\n\n\t\tconst wrapper = await waitForElement('.messages-box .wrapper .rc-scrollbars-view');\n\n\t\tif (wrapper) {\n\t\t\tpreviousHeight = wrapper.scrollHeight;\n\t\t\tscroll = wrapper.scrollTop;\n\t\t}\n\n\t\tupsertMessageBulk({\n\t\t\tmsgs: messages.filter((msg) => msg.t !== 'command'),\n\t\t\tsubscription,\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\n\t\tconst visibleMessages = messages.filter((msg) => !msg.tmid || showThreadsInMainChannel || msg.tshow);\n\n\t\troom.loaded += visibleMessages.length;\n\n\t\tif (messages.length < limit) {\n\t\t\troom.hasMore.set(false);\n\t\t}\n\n\t\tif (room.hasMore.get() && (visibleMessages.length === 0 || room.loaded < limit)) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\n\t\twaitAfterFlush(() => {\n\t\t\tthis.emit('loaded-messages');\n\t\t\tconst heightDiff = wrapper.scrollHeight - (previousHeight ?? NaN);\n\t\t\twrapper.scrollTop = (scroll ?? NaN) + heightDiff;\n\t\t});\n\n\t\troom.isLoading.set(false);\n\t}\n\n\tpublic async getMoreNext(rid: IRoom['_id'], atBottomRef: MutableRefObject<boolean>) {\n\t\tconst room = this.getRoom(rid);\n\t\tif (Tracker.nonreactive(() => room.hasMoreNext.get()) !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.queue();\n\t\tatBottomRef.current = false;\n\n\t\troom.isLoading.set(true);\n\n\t\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true } }, { sort: { ts: -1 } });\n\n\t\tconst subscription = ChatSubscription.findOne({ rid });\n\n\t\tif (lastMessage?.ts) {\n\t\t\tconst { ts } = lastMessage;\n\t\t\tconst result = await callWithErrorHandling('loadNextMessages', rid, ts, defaultLimit);\n\t\t\tupsertMessageBulk({\n\t\t\t\tmsgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'),\n\t\t\t\tsubscription,\n\t\t\t});\n\n\t\t\troom.isLoading.set(false);\n\t\t\tif (!room.loaded) {\n\t\t\t\troom.loaded = 0;\n\t\t\t}\n\n\t\t\troom.loaded += result.messages.length;\n\t\t\tif (result.messages.length < defaultLimit) {\n\t\t\t\troom.hasMoreNext.set(false);\n\t\t\t}\n\t\t}\n\t\tthis.unqueue();\n\t}\n\n\tpublic hasMore(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMore.get();\n\t}\n\n\tpublic hasMoreNext(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.hasMoreNext.get();\n\t}\n\n\tpublic getMoreIfIsEmpty(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\n\t\tif (room.loaded === undefined) {\n\t\t\treturn this.getMore(rid);\n\t\t}\n\t}\n\n\tpublic isLoading(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\treturn room.isLoading.get();\n\t}\n\n\tpublic async clear(rid: IRoom['_id']) {\n\t\tconst room = this.getRoom(rid);\n\t\tChatMessage.remove({ rid });\n\t\troom.isLoading.set(true);\n\t\troom.hasMore.set(true);\n\t\troom.hasMoreNext.set(false);\n\t\troom.oldestTs = undefined;\n\t\troom.loaded = undefined;\n\t}\n\n\tpublic async getSurroundingMessages(message?: Pick<IMessage, '_id' | 'rid'> & { ts?: Date }) {\n\t\tif (!message?.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst messageAlreadyLoaded = Boolean(ChatMessage.findOne({ _id: message._id, _hidden: { $ne: true } }));\n\n\t\tif (messageAlreadyLoaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst room = this.getRoom(message.rid);\n\t\tvoid this.clear(message.rid);\n\n\t\tconst subscription = ChatSubscription.findOne({ rid: message.rid });\n\n\t\tconst result = await callWithErrorHandling('loadSurroundingMessages', message, defaultLimit);\n\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\n\t\tupsertMessageBulk({ msgs: Array.from(result.messages).filter((msg) => msg.t !== 'command'), subscription });\n\n\t\tTracker.afterFlush(async () => {\n\t\t\tthis.emit('loaded-messages');\n\t\t\troom.isLoading.set(false);\n\t\t});\n\n\t\tif (!room.loaded) {\n\t\t\troom.loaded = 0;\n\t\t}\n\t\troom.loaded += result.messages.length;\n\t\troom.hasMore.set(result.moreBefore);\n\t\troom.hasMoreNext.set(result.moreAfter);\n\t}\n}\n\nexport const RoomHistoryManager = new RoomHistoryManagerClass();\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"5302fd63b3d57706b15cb4823a7014251e5d330a"}
