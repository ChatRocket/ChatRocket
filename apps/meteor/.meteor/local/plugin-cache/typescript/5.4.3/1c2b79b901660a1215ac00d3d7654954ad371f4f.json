{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/lib/users.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/lib/users.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/lib/users.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/lib/users.ts","sourceRoot":"","sources":["app/livechat/server/api/lib/users.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatAgent, IRole } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { FilterOperators } from 'mongodb';\n\n/**\n * @param {IRole['_id']} role the role id\n * @param {string} text\n * @param {any} pagination\n */\nasync function findUsers({\n\trole,\n\ttext,\n\tonlyAvailable = false,\n\texcludeId,\n\tshowIdleAgents = true,\n\tpagination: { offset, count, sort },\n}: {\n\trole: IRole['_id'];\n\ttext?: string;\n\tonlyAvailable?: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tpagination: { offset: number; count: number; sort: any };\n}): Promise<{ users: ILivechatAgent[]; count: number; offset: number; total: number }> {\n\tconst query: FilterOperators<ILivechatAgent> = {};\n\tconst orConditions: FilterOperators<ILivechatAgent>['$or'] = [];\n\tif (text) {\n\t\tconst filterReg = new RegExp(escapeRegExp(text), 'i');\n\t\torConditions.push({ $or: [{ username: filterReg }, { name: filterReg }, { 'emails.address': filterReg }] });\n\t}\n\n\tif (onlyAvailable) {\n\t\tquery.statusLivechat = 'available';\n\t}\n\n\tif (excludeId) {\n\t\tquery._id = { $ne: excludeId };\n\t}\n\n\tif (!showIdleAgents) {\n\t\torConditions.push({ $or: [{ status: { $exists: true, $ne: 'offline' }, roles: { $ne: 'bot' } }, { roles: 'bot' }] });\n\t}\n\n\tif (orConditions.length) {\n\t\tquery.$and = orConditions;\n\t}\n\n\tconst [\n\t\t{\n\t\t\tsortedResults,\n\t\t\ttotalCount: [{ total } = { total: 0 }],\n\t\t},\n\t] = await Users.findAgentsWithDepartments<ILivechatAgent>(role, query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t\tprojection: {\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t\tstatus: 1,\n\t\t\tstatusLivechat: 1,\n\t\t\temails: 1,\n\t\t\tlivechat: 1,\n\t\t},\n\t});\n\n\treturn {\n\t\tusers: sortedResults,\n\t\tcount: sortedResults.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\nexport async function findAgents({\n\ttext,\n\tonlyAvailable = false,\n\texcludeId,\n\tshowIdleAgents = true,\n\tpagination: { offset, count, sort },\n}: {\n\ttext?: string;\n\tonlyAvailable: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tpagination: { offset: number; count: number; sort: any };\n}): Promise<ReturnType<typeof findUsers>> {\n\treturn findUsers({\n\t\trole: 'livechat-agent',\n\t\ttext,\n\t\tonlyAvailable,\n\t\texcludeId,\n\t\tshowIdleAgents,\n\t\tpagination: {\n\t\t\toffset,\n\t\t\tcount,\n\t\t\tsort,\n\t\t},\n\t});\n}\n\nexport async function findManagers({\n\ttext,\n\tpagination: { offset, count, sort },\n}: {\n\ttext?: string;\n\tpagination: { offset: number; count: number; sort: any };\n}): Promise<ReturnType<typeof findUsers>> {\n\treturn findUsers({\n\t\trole: 'livechat-manager',\n\t\ttext,\n\t\tpagination: {\n\t\t\toffset,\n\t\t\tcount,\n\t\t\tsort,\n\t\t},\n\t});\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/lib/users.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/lib/users.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/lib/users.ts","sourceRoot":"","sources":["app/livechat/server/api/lib/users.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatAgent, IRole } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { FilterOperators } from 'mongodb';\n\n/**\n * @param {IRole['_id']} role the role id\n * @param {string} text\n * @param {any} pagination\n */\nasync function findUsers({\n\trole,\n\ttext,\n\tonlyAvailable = false,\n\texcludeId,\n\tshowIdleAgents = true,\n\tpagination: { offset, count, sort },\n}: {\n\trole: IRole['_id'];\n\ttext?: string;\n\tonlyAvailable?: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tpagination: { offset: number; count: number; sort: any };\n}): Promise<{ users: ILivechatAgent[]; count: number; offset: number; total: number }> {\n\tconst query: FilterOperators<ILivechatAgent> = {};\n\tconst orConditions: FilterOperators<ILivechatAgent>['$or'] = [];\n\tif (text) {\n\t\tconst filterReg = new RegExp(escapeRegExp(text), 'i');\n\t\torConditions.push({ $or: [{ username: filterReg }, { name: filterReg }, { 'emails.address': filterReg }] });\n\t}\n\n\tif (onlyAvailable) {\n\t\tquery.statusLivechat = 'available';\n\t}\n\n\tif (excludeId) {\n\t\tquery._id = { $ne: excludeId };\n\t}\n\n\tif (!showIdleAgents) {\n\t\torConditions.push({ $or: [{ status: { $exists: true, $ne: 'offline' }, roles: { $ne: 'bot' } }, { roles: 'bot' }] });\n\t}\n\n\tif (orConditions.length) {\n\t\tquery.$and = orConditions;\n\t}\n\n\tconst [\n\t\t{\n\t\t\tsortedResults,\n\t\t\ttotalCount: [{ total } = { total: 0 }],\n\t\t},\n\t] = await Users.findAgentsWithDepartments<ILivechatAgent>(role, query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t\tprojection: {\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t\tstatus: 1,\n\t\t\tstatusLivechat: 1,\n\t\t\temails: 1,\n\t\t\tlivechat: 1,\n\t\t},\n\t});\n\n\treturn {\n\t\tusers: sortedResults,\n\t\tcount: sortedResults.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\nexport async function findAgents({\n\ttext,\n\tonlyAvailable = false,\n\texcludeId,\n\tshowIdleAgents = true,\n\tpagination: { offset, count, sort },\n}: {\n\ttext?: string;\n\tonlyAvailable: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tpagination: { offset: number; count: number; sort: any };\n}): Promise<ReturnType<typeof findUsers>> {\n\treturn findUsers({\n\t\trole: 'livechat-agent',\n\t\ttext,\n\t\tonlyAvailable,\n\t\texcludeId,\n\t\tshowIdleAgents,\n\t\tpagination: {\n\t\t\toffset,\n\t\t\tcount,\n\t\t\tsort,\n\t\t},\n\t});\n}\n\nexport async function findManagers({\n\ttext,\n\tpagination: { offset, count, sort },\n}: {\n\ttext?: string;\n\tpagination: { offset: number; count: number; sort: any };\n}): Promise<ReturnType<typeof findUsers>> {\n\treturn findUsers({\n\t\trole: 'livechat-manager',\n\t\ttext,\n\t\tpagination: {\n\t\t\toffset,\n\t\t\tcount,\n\t\t\tsort,\n\t\t},\n\t});\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      findAgents: () => findAgents,\n      findManagers: () => findManagers\n    });\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    /**\n     * @param {IRole['_id']} role the role id\n     * @param {string} text\n     * @param {any} pagination\n     */\n    async function findUsers(_ref) {\n      let {\n        role,\n        text,\n        onlyAvailable = false,\n        excludeId,\n        showIdleAgents = true,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref;\n      const query = {};\n      const orConditions = [];\n      if (text) {\n        const filterReg = new RegExp(escapeRegExp(text), 'i');\n        orConditions.push({\n          $or: [{\n            username: filterReg\n          }, {\n            name: filterReg\n          }, {\n            'emails.address': filterReg\n          }]\n        });\n      }\n      if (onlyAvailable) {\n        query.statusLivechat = 'available';\n      }\n      if (excludeId) {\n        query._id = {\n          $ne: excludeId\n        };\n      }\n      if (!showIdleAgents) {\n        orConditions.push({\n          $or: [{\n            status: {\n              $exists: true,\n              $ne: 'offline'\n            },\n            roles: {\n              $ne: 'bot'\n            }\n          }, {\n            roles: 'bot'\n          }]\n        });\n      }\n      if (orConditions.length) {\n        query.$and = orConditions;\n      }\n      const [{\n        sortedResults,\n        totalCount: [{\n          total\n        } = {\n          total: 0\n        }]\n      }] = await Users.findAgentsWithDepartments(role, query, {\n        sort: sort || {\n          name: 1\n        },\n        skip: offset,\n        limit: count,\n        projection: {\n          username: 1,\n          name: 1,\n          status: 1,\n          statusLivechat: 1,\n          emails: 1,\n          livechat: 1\n        }\n      });\n      return {\n        users: sortedResults,\n        count: sortedResults.length,\n        offset,\n        total\n      };\n    }\n    async function findAgents(_ref2) {\n      let {\n        text,\n        onlyAvailable = false,\n        excludeId,\n        showIdleAgents = true,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref2;\n      return findUsers({\n        role: 'livechat-agent',\n        text,\n        onlyAvailable,\n        excludeId,\n        showIdleAgents,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      });\n    }\n    async function findManagers(_ref3) {\n      let {\n        text,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref3;\n      return findUsers({\n        role: 'livechat-manager',\n        text,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","findAgents","findManagers","Users","link","v","escapeRegExp","__reifyWaitForDeps__","findUsers","_ref","role","text","onlyAvailable","excludeId","showIdleAgents","pagination","offset","count","sort","query","orConditions","filterReg","RegExp","push","$or","username","name","statusLivechat","_id","$ne","status","$exists","roles","length","$and","sortedResults","totalCount","total","findAgentsWithDepartments","skip","limit","projection","emails","livechat","users","_ref2","_ref3","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/api/lib/users.ts"],"sourcesContent":["import type { ILivechatAgent, IRole } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { FilterOperators } from 'mongodb';\n\n/**\n * @param {IRole['_id']} role the role id\n * @param {string} text\n * @param {any} pagination\n */\nasync function findUsers({\n\trole,\n\ttext,\n\tonlyAvailable = false,\n\texcludeId,\n\tshowIdleAgents = true,\n\tpagination: { offset, count, sort },\n}: {\n\trole: IRole['_id'];\n\ttext?: string;\n\tonlyAvailable?: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tpagination: { offset: number; count: number; sort: any };\n}): Promise<{ users: ILivechatAgent[]; count: number; offset: number; total: number }> {\n\tconst query: FilterOperators<ILivechatAgent> = {};\n\tconst orConditions: FilterOperators<ILivechatAgent>['$or'] = [];\n\tif (text) {\n\t\tconst filterReg = new RegExp(escapeRegExp(text), 'i');\n\t\torConditions.push({ $or: [{ username: filterReg }, { name: filterReg }, { 'emails.address': filterReg }] });\n\t}\n\n\tif (onlyAvailable) {\n\t\tquery.statusLivechat = 'available';\n\t}\n\n\tif (excludeId) {\n\t\tquery._id = { $ne: excludeId };\n\t}\n\n\tif (!showIdleAgents) {\n\t\torConditions.push({ $or: [{ status: { $exists: true, $ne: 'offline' }, roles: { $ne: 'bot' } }, { roles: 'bot' }] });\n\t}\n\n\tif (orConditions.length) {\n\t\tquery.$and = orConditions;\n\t}\n\n\tconst [\n\t\t{\n\t\t\tsortedResults,\n\t\t\ttotalCount: [{ total } = { total: 0 }],\n\t\t},\n\t] = await Users.findAgentsWithDepartments<ILivechatAgent>(role, query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t\tprojection: {\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t\tstatus: 1,\n\t\t\tstatusLivechat: 1,\n\t\t\temails: 1,\n\t\t\tlivechat: 1,\n\t\t},\n\t});\n\n\treturn {\n\t\tusers: sortedResults,\n\t\tcount: sortedResults.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\nexport async function findAgents({\n\ttext,\n\tonlyAvailable = false,\n\texcludeId,\n\tshowIdleAgents = true,\n\tpagination: { offset, count, sort },\n}: {\n\ttext?: string;\n\tonlyAvailable: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tpagination: { offset: number; count: number; sort: any };\n}): Promise<ReturnType<typeof findUsers>> {\n\treturn findUsers({\n\t\trole: 'livechat-agent',\n\t\ttext,\n\t\tonlyAvailable,\n\t\texcludeId,\n\t\tshowIdleAgents,\n\t\tpagination: {\n\t\t\toffset,\n\t\t\tcount,\n\t\t\tsort,\n\t\t},\n\t});\n}\n\nexport async function findManagers({\n\ttext,\n\tpagination: { offset, count, sort },\n}: {\n\ttext?: string;\n\tpagination: { offset: number; count: number; sort: any };\n}): Promise<ReturnType<typeof findUsers>> {\n\treturn findUsers({\n\t\trole: 'livechat-manager',\n\t\ttext,\n\t\tpagination: {\n\t\t\toffset,\n\t\t\tcount,\n\t\t\tsort,\n\t\t},\n\t});\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1c2b79b901660a1215ac00d3d7654954ad371f4f"}
