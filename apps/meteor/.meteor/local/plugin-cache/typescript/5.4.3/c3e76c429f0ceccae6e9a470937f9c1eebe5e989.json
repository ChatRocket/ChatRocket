{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/lib/users.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/lib/users.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/lib/users.ts","inputSourceMap":{"version":3,"file":"app/api/server/lib/users.ts","sourceRoot":"","sources":["app/api/server/lib/users.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Users, Subscriptions } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Mongo } from 'meteor/mongo';\nimport type { Filter, RootFilterOperators } from 'mongodb';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\n\ntype UserAutoComplete = Required<Pick<IUser, '_id' | 'name' | 'username' | 'nickname' | 'status' | 'avatarETag'>>;\n\nexport async function findUsersToAutocomplete({\n\tuid,\n\tselector,\n}: {\n\tuid: string;\n\tselector: { exceptions: Required<IUser>['username'][]; conditions: Filter<IUser>; term: string };\n}): Promise<{\n\titems: UserAutoComplete[];\n}> {\n\tconst searchFields = settings.get<string>('Accounts_SearchFields').trim().split(',');\n\tconst exceptions = selector.exceptions || [];\n\tconst conditions = selector.conditions || {};\n\tconst options = {\n\t\tprojection: {\n\t\t\tname: 1,\n\t\t\tusername: 1,\n\t\t\tnickname: 1,\n\t\t\tstatus: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tsort: {\n\t\t\tusername: 1,\n\t\t},\n\t\tlimit: 10,\n\t};\n\n\t// Search on DMs first, to list known users before others.\n\tconst contacts = await Subscriptions.findConnectedUsersExcept(uid, selector.term, exceptions, searchFields, conditions, 10, 'd');\n\tif (contacts.length >= options.limit) {\n\t\treturn { items: contacts as UserAutoComplete[] };\n\t}\n\n\toptions.limit -= contacts.length;\n\tcontacts.forEach(({ username }) => exceptions.push(username));\n\n\tif (!(await hasPermissionAsync(uid, 'view-outside-room'))) {\n\t\tconst users = await Subscriptions.findConnectedUsersExcept(uid, selector.term, exceptions, searchFields, conditions, 10);\n\t\treturn { items: contacts.concat(users) as UserAutoComplete[] };\n\t}\n\n\tconst users = await Users.findActiveByUsernameOrNameRegexWithExceptionsAndConditions<UserAutoComplete>(\n\t\tnew RegExp(escapeRegExp(selector.term), 'i'),\n\t\texceptions,\n\t\tconditions,\n\t\toptions,\n\t).toArray();\n\n\treturn {\n\t\titems: (contacts as UserAutoComplete[]).concat(users),\n\t};\n}\n\n/**\n * Returns a new query object with the inclusive fields only\n */\nexport function getInclusiveFields(query: Record<string, 1 | 0>): Record<string, 1> {\n\tconst newQuery = Object.create(null);\n\n\tfor (const [key, value] of Object.entries(query)) {\n\t\tif (value === 1) {\n\t\t\tnewQuery[key] = value;\n\t\t}\n\t}\n\n\treturn newQuery;\n}\n\n/**\n * get the default fields if **fields** are empty (`{}`) or `undefined`/`null`\n * @param fields the fields from parsed jsonQuery\n */\nexport function getNonEmptyFields(fields: Record<string, 1 | 0>): Record<string, 1 | 0> {\n\tconst defaultFields = {\n\t\tname: 1,\n\t\tusername: 1,\n\t\temails: 1,\n\t\troles: 1,\n\t\tstatus: 1,\n\t\tactive: 1,\n\t\tavatarETag: 1,\n\t\tlastLogin: 1,\n\t\ttype: 1,\n\t} as const;\n\n\tif (!fields || Object.keys(fields).length === 0) {\n\t\treturn defaultFields;\n\t}\n\n\treturn { ...defaultFields, ...fields };\n}\n\n/**\n * get the default query if **query** is empty (`{}`) or `undefined`/`null`\n * @param query the query from parsed jsonQuery\n */\nexport function getNonEmptyQuery<T extends IUser>(query: Mongo.Query<T> | undefined | null, canSeeAllUserInfo?: boolean): Mongo.Query<T> {\n\tconst defaultQuery: Mongo.Query<IUser> = {\n\t\t$or: [{ username: { $regex: '', $options: 'i' } }, { name: { $regex: '', $options: 'i' } }],\n\t};\n\n\tif (canSeeAllUserInfo) {\n\t\tdefaultQuery.$or?.push({ 'emails.address': { $regex: '', $options: 'i' } });\n\t}\n\n\tif (!query || Object.keys(query).length === 0) {\n\t\treturn defaultQuery;\n\t}\n\n\treturn { ...defaultQuery, ...query };\n}\n\ntype FindPaginatedUsersByStatusProps = {\n\tuid: string;\n\toffset: number;\n\tcount: number;\n\tsort: Record<string, 1 | -1>;\n\tstatus: 'active' | 'deactivated';\n\troles: string[] | null;\n\tsearchTerm: string;\n\thasLoggedIn: boolean;\n\ttype: string;\n};\n\nexport async function findPaginatedUsersByStatus({\n\tuid,\n\toffset,\n\tcount,\n\tsort,\n\tstatus,\n\troles,\n\tsearchTerm,\n\thasLoggedIn,\n\ttype,\n}: FindPaginatedUsersByStatusProps) {\n\tconst actualSort: Record<string, 1 | -1> = sort || { username: 1 };\n\tif (sort?.status) {\n\t\tactualSort.active = sort.status;\n\t}\n\tconst match: Filter<IUser & RootFilterOperators<IUser>> = {};\n\tswitch (status) {\n\t\tcase 'active':\n\t\t\tmatch.active = true;\n\t\t\tbreak;\n\t\tcase 'deactivated':\n\t\t\tmatch.active = false;\n\t\t\tbreak;\n\t}\n\n\tif (hasLoggedIn !== undefined) {\n\t\tmatch.lastLogin = { $exists: hasLoggedIn };\n\t}\n\n\tif (type) {\n\t\tmatch.type = type;\n\t}\n\n\tconst canSeeAllUserInfo = await hasPermissionAsync(uid, 'view-full-other-user-info');\n\tconst canSeeExtension = canSeeAllUserInfo || (await hasPermissionAsync(uid, 'view-user-voip-extension'));\n\n\tconst projection = {\n\t\tname: 1,\n\t\tusername: 1,\n\t\temails: 1,\n\t\troles: 1,\n\t\tstatus: 1,\n\t\tactive: 1,\n\t\tavatarETag: 1,\n\t\tlastLogin: 1,\n\t\ttype: 1,\n\t\treason: 1,\n\t\tfederated: 1,\n\t\t...(canSeeExtension ? { freeSwitchExtension: 1 } : {}),\n\t};\n\n\tmatch.$or = [\n\t\t...(canSeeAllUserInfo ? [{ 'emails.address': { $regex: escapeRegExp(searchTerm || ''), $options: 'i' } }] : []),\n\t\t{\n\t\t\tusername: { $regex: escapeRegExp(searchTerm || ''), $options: 'i' },\n\t\t},\n\t\t{\n\t\t\tname: { $regex: escapeRegExp(searchTerm || ''), $options: 'i' },\n\t\t},\n\t];\n\tif (roles?.length && !roles.includes('all')) {\n\t\tmatch.roles = { $in: roles };\n\t}\n\n\tconst { cursor, totalCount } = await Users.findPaginated(\n\t\t{\n\t\t\t...match,\n\t\t},\n\t\t{\n\t\t\tsort: actualSort,\n\t\t\tskip: offset,\n\t\t\tlimit: count,\n\t\t\tprojection,\n\t\t\tallowDiskUse: true,\n\t\t},\n\t);\n\tconst [users, total] = await Promise.all([cursor.toArray(), totalCount]);\n\treturn {\n\t\tusers,\n\t\tcount: users.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/lib/users.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/lib/users.ts","inputSourceMap":{"version":3,"file":"app/api/server/lib/users.ts","sourceRoot":"","sources":["app/api/server/lib/users.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Users, Subscriptions } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Mongo } from 'meteor/mongo';\nimport type { Filter, RootFilterOperators } from 'mongodb';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\n\ntype UserAutoComplete = Required<Pick<IUser, '_id' | 'name' | 'username' | 'nickname' | 'status' | 'avatarETag'>>;\n\nexport async function findUsersToAutocomplete({\n\tuid,\n\tselector,\n}: {\n\tuid: string;\n\tselector: { exceptions: Required<IUser>['username'][]; conditions: Filter<IUser>; term: string };\n}): Promise<{\n\titems: UserAutoComplete[];\n}> {\n\tconst searchFields = settings.get<string>('Accounts_SearchFields').trim().split(',');\n\tconst exceptions = selector.exceptions || [];\n\tconst conditions = selector.conditions || {};\n\tconst options = {\n\t\tprojection: {\n\t\t\tname: 1,\n\t\t\tusername: 1,\n\t\t\tnickname: 1,\n\t\t\tstatus: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tsort: {\n\t\t\tusername: 1,\n\t\t},\n\t\tlimit: 10,\n\t};\n\n\t// Search on DMs first, to list known users before others.\n\tconst contacts = await Subscriptions.findConnectedUsersExcept(uid, selector.term, exceptions, searchFields, conditions, 10, 'd');\n\tif (contacts.length >= options.limit) {\n\t\treturn { items: contacts as UserAutoComplete[] };\n\t}\n\n\toptions.limit -= contacts.length;\n\tcontacts.forEach(({ username }) => exceptions.push(username));\n\n\tif (!(await hasPermissionAsync(uid, 'view-outside-room'))) {\n\t\tconst users = await Subscriptions.findConnectedUsersExcept(uid, selector.term, exceptions, searchFields, conditions, 10);\n\t\treturn { items: contacts.concat(users) as UserAutoComplete[] };\n\t}\n\n\tconst users = await Users.findActiveByUsernameOrNameRegexWithExceptionsAndConditions<UserAutoComplete>(\n\t\tnew RegExp(escapeRegExp(selector.term), 'i'),\n\t\texceptions,\n\t\tconditions,\n\t\toptions,\n\t).toArray();\n\n\treturn {\n\t\titems: (contacts as UserAutoComplete[]).concat(users),\n\t};\n}\n\n/**\n * Returns a new query object with the inclusive fields only\n */\nexport function getInclusiveFields(query: Record<string, 1 | 0>): Record<string, 1> {\n\tconst newQuery = Object.create(null);\n\n\tfor (const [key, value] of Object.entries(query)) {\n\t\tif (value === 1) {\n\t\t\tnewQuery[key] = value;\n\t\t}\n\t}\n\n\treturn newQuery;\n}\n\n/**\n * get the default fields if **fields** are empty (`{}`) or `undefined`/`null`\n * @param fields the fields from parsed jsonQuery\n */\nexport function getNonEmptyFields(fields: Record<string, 1 | 0>): Record<string, 1 | 0> {\n\tconst defaultFields = {\n\t\tname: 1,\n\t\tusername: 1,\n\t\temails: 1,\n\t\troles: 1,\n\t\tstatus: 1,\n\t\tactive: 1,\n\t\tavatarETag: 1,\n\t\tlastLogin: 1,\n\t\ttype: 1,\n\t} as const;\n\n\tif (!fields || Object.keys(fields).length === 0) {\n\t\treturn defaultFields;\n\t}\n\n\treturn { ...defaultFields, ...fields };\n}\n\n/**\n * get the default query if **query** is empty (`{}`) or `undefined`/`null`\n * @param query the query from parsed jsonQuery\n */\nexport function getNonEmptyQuery<T extends IUser>(query: Mongo.Query<T> | undefined | null, canSeeAllUserInfo?: boolean): Mongo.Query<T> {\n\tconst defaultQuery: Mongo.Query<IUser> = {\n\t\t$or: [{ username: { $regex: '', $options: 'i' } }, { name: { $regex: '', $options: 'i' } }],\n\t};\n\n\tif (canSeeAllUserInfo) {\n\t\tdefaultQuery.$or?.push({ 'emails.address': { $regex: '', $options: 'i' } });\n\t}\n\n\tif (!query || Object.keys(query).length === 0) {\n\t\treturn defaultQuery;\n\t}\n\n\treturn { ...defaultQuery, ...query };\n}\n\ntype FindPaginatedUsersByStatusProps = {\n\tuid: string;\n\toffset: number;\n\tcount: number;\n\tsort: Record<string, 1 | -1>;\n\tstatus: 'active' | 'deactivated';\n\troles: string[] | null;\n\tsearchTerm: string;\n\thasLoggedIn: boolean;\n\ttype: string;\n};\n\nexport async function findPaginatedUsersByStatus({\n\tuid,\n\toffset,\n\tcount,\n\tsort,\n\tstatus,\n\troles,\n\tsearchTerm,\n\thasLoggedIn,\n\ttype,\n}: FindPaginatedUsersByStatusProps) {\n\tconst actualSort: Record<string, 1 | -1> = sort || { username: 1 };\n\tif (sort?.status) {\n\t\tactualSort.active = sort.status;\n\t}\n\tconst match: Filter<IUser & RootFilterOperators<IUser>> = {};\n\tswitch (status) {\n\t\tcase 'active':\n\t\t\tmatch.active = true;\n\t\t\tbreak;\n\t\tcase 'deactivated':\n\t\t\tmatch.active = false;\n\t\t\tbreak;\n\t}\n\n\tif (hasLoggedIn !== undefined) {\n\t\tmatch.lastLogin = { $exists: hasLoggedIn };\n\t}\n\n\tif (type) {\n\t\tmatch.type = type;\n\t}\n\n\tconst canSeeAllUserInfo = await hasPermissionAsync(uid, 'view-full-other-user-info');\n\tconst canSeeExtension = canSeeAllUserInfo || (await hasPermissionAsync(uid, 'view-user-voip-extension'));\n\n\tconst projection = {\n\t\tname: 1,\n\t\tusername: 1,\n\t\temails: 1,\n\t\troles: 1,\n\t\tstatus: 1,\n\t\tactive: 1,\n\t\tavatarETag: 1,\n\t\tlastLogin: 1,\n\t\ttype: 1,\n\t\treason: 1,\n\t\tfederated: 1,\n\t\t...(canSeeExtension ? { freeSwitchExtension: 1 } : {}),\n\t};\n\n\tmatch.$or = [\n\t\t...(canSeeAllUserInfo ? [{ 'emails.address': { $regex: escapeRegExp(searchTerm || ''), $options: 'i' } }] : []),\n\t\t{\n\t\t\tusername: { $regex: escapeRegExp(searchTerm || ''), $options: 'i' },\n\t\t},\n\t\t{\n\t\t\tname: { $regex: escapeRegExp(searchTerm || ''), $options: 'i' },\n\t\t},\n\t];\n\tif (roles?.length && !roles.includes('all')) {\n\t\tmatch.roles = { $in: roles };\n\t}\n\n\tconst { cursor, totalCount } = await Users.findPaginated(\n\t\t{\n\t\t\t...match,\n\t\t},\n\t\t{\n\t\t\tsort: actualSort,\n\t\t\tskip: offset,\n\t\t\tlimit: count,\n\t\t\tprojection,\n\t\t\tallowDiskUse: true,\n\t\t},\n\t);\n\tconst [users, total] = await Promise.all([cursor.toArray(), totalCount]);\n\treturn {\n\t\tusers,\n\t\tcount: users.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      findUsersToAutocomplete: () => findUsersToAutocomplete,\n      getInclusiveFields: () => getInclusiveFields,\n      getNonEmptyFields: () => getNonEmptyFields,\n      getNonEmptyQuery: () => getNonEmptyQuery,\n      findPaginatedUsersByStatus: () => findPaginatedUsersByStatus\n    });\n    let Users, Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 0);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 1);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function findUsersToAutocomplete(_ref) {\n      let {\n        uid,\n        selector\n      } = _ref;\n      const searchFields = settings.get('Accounts_SearchFields').trim().split(',');\n      const exceptions = selector.exceptions || [];\n      const conditions = selector.conditions || {};\n      const options = {\n        projection: {\n          name: 1,\n          username: 1,\n          nickname: 1,\n          status: 1,\n          avatarETag: 1\n        },\n        sort: {\n          username: 1\n        },\n        limit: 10\n      };\n      // Search on DMs first, to list known users before others.\n      const contacts = await Subscriptions.findConnectedUsersExcept(uid, selector.term, exceptions, searchFields, conditions, 10, 'd');\n      if (contacts.length >= options.limit) {\n        return {\n          items: contacts\n        };\n      }\n      options.limit -= contacts.length;\n      contacts.forEach(_ref2 => {\n        let {\n          username\n        } = _ref2;\n        return exceptions.push(username);\n      });\n      if (!(await hasPermissionAsync(uid, 'view-outside-room'))) {\n        const users = await Subscriptions.findConnectedUsersExcept(uid, selector.term, exceptions, searchFields, conditions, 10);\n        return {\n          items: contacts.concat(users)\n        };\n      }\n      const users = await Users.findActiveByUsernameOrNameRegexWithExceptionsAndConditions(new RegExp(escapeRegExp(selector.term), 'i'), exceptions, conditions, options).toArray();\n      return {\n        items: contacts.concat(users)\n      };\n    }\n    function getInclusiveFields(query) {\n      const newQuery = Object.create(null);\n      for (const [key, value] of Object.entries(query)) {\n        if (value === 1) {\n          newQuery[key] = value;\n        }\n      }\n      return newQuery;\n    }\n    function getNonEmptyFields(fields) {\n      const defaultFields = {\n        name: 1,\n        username: 1,\n        emails: 1,\n        roles: 1,\n        status: 1,\n        active: 1,\n        avatarETag: 1,\n        lastLogin: 1,\n        type: 1\n      };\n      if (!fields || Object.keys(fields).length === 0) {\n        return defaultFields;\n      }\n      return _objectSpread(_objectSpread({}, defaultFields), fields);\n    }\n    function getNonEmptyQuery(query, canSeeAllUserInfo) {\n      const defaultQuery = {\n        $or: [{\n          username: {\n            $regex: '',\n            $options: 'i'\n          }\n        }, {\n          name: {\n            $regex: '',\n            $options: 'i'\n          }\n        }]\n      };\n      if (canSeeAllUserInfo) {\n        var _defaultQuery$$or;\n        (_defaultQuery$$or = defaultQuery.$or) === null || _defaultQuery$$or === void 0 ? void 0 : _defaultQuery$$or.push({\n          'emails.address': {\n            $regex: '',\n            $options: 'i'\n          }\n        });\n      }\n      if (!query || Object.keys(query).length === 0) {\n        return defaultQuery;\n      }\n      return _objectSpread(_objectSpread({}, defaultQuery), query);\n    }\n    async function findPaginatedUsersByStatus(_ref3) {\n      let {\n        uid,\n        offset,\n        count,\n        sort,\n        status,\n        roles,\n        searchTerm,\n        hasLoggedIn,\n        type\n      } = _ref3;\n      const actualSort = sort || {\n        username: 1\n      };\n      if (sort !== null && sort !== void 0 && sort.status) {\n        actualSort.active = sort.status;\n      }\n      const match = {};\n      switch (status) {\n        case 'active':\n          match.active = true;\n          break;\n        case 'deactivated':\n          match.active = false;\n          break;\n      }\n      if (hasLoggedIn !== undefined) {\n        match.lastLogin = {\n          $exists: hasLoggedIn\n        };\n      }\n      if (type) {\n        match.type = type;\n      }\n      const canSeeAllUserInfo = await hasPermissionAsync(uid, 'view-full-other-user-info');\n      const canSeeExtension = canSeeAllUserInfo || (await hasPermissionAsync(uid, 'view-user-voip-extension'));\n      const projection = _objectSpread({\n        name: 1,\n        username: 1,\n        emails: 1,\n        roles: 1,\n        status: 1,\n        active: 1,\n        avatarETag: 1,\n        lastLogin: 1,\n        type: 1,\n        reason: 1,\n        federated: 1\n      }, canSeeExtension ? {\n        freeSwitchExtension: 1\n      } : {});\n      match.$or = [...(canSeeAllUserInfo ? [{\n        'emails.address': {\n          $regex: escapeRegExp(searchTerm || ''),\n          $options: 'i'\n        }\n      }] : []), {\n        username: {\n          $regex: escapeRegExp(searchTerm || ''),\n          $options: 'i'\n        }\n      }, {\n        name: {\n          $regex: escapeRegExp(searchTerm || ''),\n          $options: 'i'\n        }\n      }];\n      if (roles !== null && roles !== void 0 && roles.length && !roles.includes('all')) {\n        match.roles = {\n          $in: roles\n        };\n      }\n      const {\n        cursor,\n        totalCount\n      } = await Users.findPaginated(_objectSpread({}, match), {\n        sort: actualSort,\n        skip: offset,\n        limit: count,\n        projection,\n        allowDiskUse: true\n      });\n      const [users, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        users,\n        count: users.length,\n        offset,\n        total\n      };\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","findUsersToAutocomplete","getInclusiveFields","getNonEmptyFields","getNonEmptyQuery","findPaginatedUsersByStatus","Users","Subscriptions","escapeRegExp","hasPermissionAsync","settings","__reifyWaitForDeps__","_ref","uid","selector","searchFields","get","trim","split","exceptions","conditions","options","projection","name","username","nickname","status","avatarETag","sort","limit","contacts","findConnectedUsersExcept","term","length","items","forEach","_ref2","push","users","concat","findActiveByUsernameOrNameRegexWithExceptionsAndConditions","RegExp","toArray","query","newQuery","Object","create","key","value","entries","fields","defaultFields","emails","roles","active","lastLogin","type","keys","canSeeAllUserInfo","defaultQuery","$or","$regex","$options","_defaultQuery$$or","_ref3","offset","count","searchTerm","hasLoggedIn","actualSort","match","undefined","$exists","canSeeExtension","reason","federated","freeSwitchExtension","includes","$in","cursor","totalCount","findPaginated","skip","allowDiskUse","total","Promise","all","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/lib/users.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Users, Subscriptions } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Mongo } from 'meteor/mongo';\nimport type { Filter, RootFilterOperators } from 'mongodb';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\n\ntype UserAutoComplete = Required<Pick<IUser, '_id' | 'name' | 'username' | 'nickname' | 'status' | 'avatarETag'>>;\n\nexport async function findUsersToAutocomplete({\n\tuid,\n\tselector,\n}: {\n\tuid: string;\n\tselector: { exceptions: Required<IUser>['username'][]; conditions: Filter<IUser>; term: string };\n}): Promise<{\n\titems: UserAutoComplete[];\n}> {\n\tconst searchFields = settings.get<string>('Accounts_SearchFields').trim().split(',');\n\tconst exceptions = selector.exceptions || [];\n\tconst conditions = selector.conditions || {};\n\tconst options = {\n\t\tprojection: {\n\t\t\tname: 1,\n\t\t\tusername: 1,\n\t\t\tnickname: 1,\n\t\t\tstatus: 1,\n\t\t\tavatarETag: 1,\n\t\t},\n\t\tsort: {\n\t\t\tusername: 1,\n\t\t},\n\t\tlimit: 10,\n\t};\n\n\t// Search on DMs first, to list known users before others.\n\tconst contacts = await Subscriptions.findConnectedUsersExcept(uid, selector.term, exceptions, searchFields, conditions, 10, 'd');\n\tif (contacts.length >= options.limit) {\n\t\treturn { items: contacts as UserAutoComplete[] };\n\t}\n\n\toptions.limit -= contacts.length;\n\tcontacts.forEach(({ username }) => exceptions.push(username));\n\n\tif (!(await hasPermissionAsync(uid, 'view-outside-room'))) {\n\t\tconst users = await Subscriptions.findConnectedUsersExcept(uid, selector.term, exceptions, searchFields, conditions, 10);\n\t\treturn { items: contacts.concat(users) as UserAutoComplete[] };\n\t}\n\n\tconst users = await Users.findActiveByUsernameOrNameRegexWithExceptionsAndConditions<UserAutoComplete>(\n\t\tnew RegExp(escapeRegExp(selector.term), 'i'),\n\t\texceptions,\n\t\tconditions,\n\t\toptions,\n\t).toArray();\n\n\treturn {\n\t\titems: (contacts as UserAutoComplete[]).concat(users),\n\t};\n}\n\n/**\n * Returns a new query object with the inclusive fields only\n */\nexport function getInclusiveFields(query: Record<string, 1 | 0>): Record<string, 1> {\n\tconst newQuery = Object.create(null);\n\n\tfor (const [key, value] of Object.entries(query)) {\n\t\tif (value === 1) {\n\t\t\tnewQuery[key] = value;\n\t\t}\n\t}\n\n\treturn newQuery;\n}\n\n/**\n * get the default fields if **fields** are empty (`{}`) or `undefined`/`null`\n * @param fields the fields from parsed jsonQuery\n */\nexport function getNonEmptyFields(fields: Record<string, 1 | 0>): Record<string, 1 | 0> {\n\tconst defaultFields = {\n\t\tname: 1,\n\t\tusername: 1,\n\t\temails: 1,\n\t\troles: 1,\n\t\tstatus: 1,\n\t\tactive: 1,\n\t\tavatarETag: 1,\n\t\tlastLogin: 1,\n\t\ttype: 1,\n\t} as const;\n\n\tif (!fields || Object.keys(fields).length === 0) {\n\t\treturn defaultFields;\n\t}\n\n\treturn { ...defaultFields, ...fields };\n}\n\n/**\n * get the default query if **query** is empty (`{}`) or `undefined`/`null`\n * @param query the query from parsed jsonQuery\n */\nexport function getNonEmptyQuery<T extends IUser>(query: Mongo.Query<T> | undefined | null, canSeeAllUserInfo?: boolean): Mongo.Query<T> {\n\tconst defaultQuery: Mongo.Query<IUser> = {\n\t\t$or: [{ username: { $regex: '', $options: 'i' } }, { name: { $regex: '', $options: 'i' } }],\n\t};\n\n\tif (canSeeAllUserInfo) {\n\t\tdefaultQuery.$or?.push({ 'emails.address': { $regex: '', $options: 'i' } });\n\t}\n\n\tif (!query || Object.keys(query).length === 0) {\n\t\treturn defaultQuery;\n\t}\n\n\treturn { ...defaultQuery, ...query };\n}\n\ntype FindPaginatedUsersByStatusProps = {\n\tuid: string;\n\toffset: number;\n\tcount: number;\n\tsort: Record<string, 1 | -1>;\n\tstatus: 'active' | 'deactivated';\n\troles: string[] | null;\n\tsearchTerm: string;\n\thasLoggedIn: boolean;\n\ttype: string;\n};\n\nexport async function findPaginatedUsersByStatus({\n\tuid,\n\toffset,\n\tcount,\n\tsort,\n\tstatus,\n\troles,\n\tsearchTerm,\n\thasLoggedIn,\n\ttype,\n}: FindPaginatedUsersByStatusProps) {\n\tconst actualSort: Record<string, 1 | -1> = sort || { username: 1 };\n\tif (sort?.status) {\n\t\tactualSort.active = sort.status;\n\t}\n\tconst match: Filter<IUser & RootFilterOperators<IUser>> = {};\n\tswitch (status) {\n\t\tcase 'active':\n\t\t\tmatch.active = true;\n\t\t\tbreak;\n\t\tcase 'deactivated':\n\t\t\tmatch.active = false;\n\t\t\tbreak;\n\t}\n\n\tif (hasLoggedIn !== undefined) {\n\t\tmatch.lastLogin = { $exists: hasLoggedIn };\n\t}\n\n\tif (type) {\n\t\tmatch.type = type;\n\t}\n\n\tconst canSeeAllUserInfo = await hasPermissionAsync(uid, 'view-full-other-user-info');\n\tconst canSeeExtension = canSeeAllUserInfo || (await hasPermissionAsync(uid, 'view-user-voip-extension'));\n\n\tconst projection = {\n\t\tname: 1,\n\t\tusername: 1,\n\t\temails: 1,\n\t\troles: 1,\n\t\tstatus: 1,\n\t\tactive: 1,\n\t\tavatarETag: 1,\n\t\tlastLogin: 1,\n\t\ttype: 1,\n\t\treason: 1,\n\t\tfederated: 1,\n\t\t...(canSeeExtension ? { freeSwitchExtension: 1 } : {}),\n\t};\n\n\tmatch.$or = [\n\t\t...(canSeeAllUserInfo ? [{ 'emails.address': { $regex: escapeRegExp(searchTerm || ''), $options: 'i' } }] : []),\n\t\t{\n\t\t\tusername: { $regex: escapeRegExp(searchTerm || ''), $options: 'i' },\n\t\t},\n\t\t{\n\t\t\tname: { $regex: escapeRegExp(searchTerm || ''), $options: 'i' },\n\t\t},\n\t];\n\tif (roles?.length && !roles.includes('all')) {\n\t\tmatch.roles = { $in: roles };\n\t}\n\n\tconst { cursor, totalCount } = await Users.findPaginated(\n\t\t{\n\t\t\t...match,\n\t\t},\n\t\t{\n\t\t\tsort: actualSort,\n\t\t\tskip: offset,\n\t\t\tlimit: count,\n\t\t\tprojection,\n\t\t\tallowDiskUse: true,\n\t\t},\n\t);\n\tconst [users, total] = await Promise.all([cursor.toArray(), totalCount]);\n\treturn {\n\t\tusers,\n\t\tcount: users.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c3e76c429f0ceccae6e9a470937f9c1eebe5e989"}
