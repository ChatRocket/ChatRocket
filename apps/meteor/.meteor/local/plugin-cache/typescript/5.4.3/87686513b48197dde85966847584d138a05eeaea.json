{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/otr.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/startup/otr.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/otr.ts","inputSourceMap":{"version":3,"file":"client/startup/otr.ts","sourceRoot":"","sources":["client/startup/otr.ts"],"names":[],"mappings":"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","sourcesContent":["import { isOTRMessage } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport OTR from '../../app/otr/client/OTR';\nimport { OtrRoomState } from '../../app/otr/lib/OtrRoomState';\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { t } from '../../app/utils/lib/i18n';\nimport { onClientBeforeSendMessage } from '../lib/onClientBeforeSendMessage';\nimport { onClientMessageReceived } from '../lib/onClientMessageReceived';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn;\n\t\t}\n\n\t\tsdk.stream('notify-user', [`${uid}/otr`], (type, data) => {\n\t\t\tif (!data.roomId || !data.userId || data.userId === uid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst otrRoom = OTR.getInstanceByRoomId(uid, data.roomId);\n\t\t\totrRoom?.onUserStream(type, data);\n\t\t});\n\t});\n\n\tonClientBeforeSendMessage.use(async (message) => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst otrRoom = OTR.getInstanceByRoomId(uid, message.rid);\n\n\t\tif (otrRoom && otrRoom.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\tconst msg = await otrRoom.encrypt(message);\n\t\t\treturn { ...message, msg, t: 'otr' };\n\t\t}\n\t\treturn message;\n\t});\n\n\tonClientMessageReceived.use(async (message) => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!isOTRMessage(message)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif ('notification' in message) {\n\t\t\treturn { ...message, msg: t('Encrypted_message') };\n\t\t}\n\n\t\tconst otrRoom = OTR.getInstanceByRoomId(uid, message.rid);\n\n\t\tif (otrRoom && otrRoom.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\tconst decrypted = await otrRoom.decrypt(message.msg);\n\t\t\tif (typeof decrypted === 'string') {\n\t\t\t\treturn { ...message, msg: decrypted };\n\t\t\t}\n\t\t\tconst { _id, text: msg, ack, ts, userId } = decrypted;\n\n\t\t\tif (ts) message.ts = ts;\n\n\t\t\tif (message.otrAck) {\n\t\t\t\tconst otrAck = await otrRoom.decrypt(message.otrAck);\n\t\t\t\tif (typeof otrAck === 'string') {\n\t\t\t\t\treturn { ...message, msg: otrAck };\n\t\t\t\t}\n\n\t\t\t\tif (ack === otrAck.text) {\n\t\t\t\t\treturn { ...message, _id, t: 'otr-ack', msg };\n\t\t\t\t}\n\t\t\t} else if (userId !== Meteor.userId()) {\n\t\t\t\tconst encryptedAck = await otrRoom.encryptText(ack);\n\n\t\t\t\tvoid sdk.call('updateOTRAck', { message, ack: encryptedAck });\n\t\t\t}\n\n\t\t\treturn { ...message, _id, msg };\n\t\t}\n\t\tif (message.t === 'otr') message.msg = '';\n\n\t\treturn message;\n\t});\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/otr.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/startup/otr.ts","inputSourceMap":{"version":3,"file":"client/startup/otr.ts","sourceRoot":"","sources":["client/startup/otr.ts"],"names":[],"mappings":"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","sourcesContent":["import { isOTRMessage } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport OTR from '../../app/otr/client/OTR';\nimport { OtrRoomState } from '../../app/otr/lib/OtrRoomState';\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { t } from '../../app/utils/lib/i18n';\nimport { onClientBeforeSendMessage } from '../lib/onClientBeforeSendMessage';\nimport { onClientMessageReceived } from '../lib/onClientMessageReceived';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn;\n\t\t}\n\n\t\tsdk.stream('notify-user', [`${uid}/otr`], (type, data) => {\n\t\t\tif (!data.roomId || !data.userId || data.userId === uid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst otrRoom = OTR.getInstanceByRoomId(uid, data.roomId);\n\t\t\totrRoom?.onUserStream(type, data);\n\t\t});\n\t});\n\n\tonClientBeforeSendMessage.use(async (message) => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst otrRoom = OTR.getInstanceByRoomId(uid, message.rid);\n\n\t\tif (otrRoom && otrRoom.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\tconst msg = await otrRoom.encrypt(message);\n\t\t\treturn { ...message, msg, t: 'otr' };\n\t\t}\n\t\treturn message;\n\t});\n\n\tonClientMessageReceived.use(async (message) => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!isOTRMessage(message)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif ('notification' in message) {\n\t\t\treturn { ...message, msg: t('Encrypted_message') };\n\t\t}\n\n\t\tconst otrRoom = OTR.getInstanceByRoomId(uid, message.rid);\n\n\t\tif (otrRoom && otrRoom.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\tconst decrypted = await otrRoom.decrypt(message.msg);\n\t\t\tif (typeof decrypted === 'string') {\n\t\t\t\treturn { ...message, msg: decrypted };\n\t\t\t}\n\t\t\tconst { _id, text: msg, ack, ts, userId } = decrypted;\n\n\t\t\tif (ts) message.ts = ts;\n\n\t\t\tif (message.otrAck) {\n\t\t\t\tconst otrAck = await otrRoom.decrypt(message.otrAck);\n\t\t\t\tif (typeof otrAck === 'string') {\n\t\t\t\t\treturn { ...message, msg: otrAck };\n\t\t\t\t}\n\n\t\t\t\tif (ack === otrAck.text) {\n\t\t\t\t\treturn { ...message, _id, t: 'otr-ack', msg };\n\t\t\t\t}\n\t\t\t} else if (userId !== Meteor.userId()) {\n\t\t\t\tconst encryptedAck = await otrRoom.encryptText(ack);\n\n\t\t\t\tvoid sdk.call('updateOTRAck', { message, ack: encryptedAck });\n\t\t\t}\n\n\t\t\treturn { ...message, _id, msg };\n\t\t}\n\t\tif (message.t === 'otr') message.msg = '';\n\n\t\treturn message;\n\t});\n});\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nlet isOTRMessage;\nmodule.link(\"@rocket.chat/core-typings\", {\n  isOTRMessage(v) {\n    isOTRMessage = v;\n  }\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 1);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n}, 2);\nlet OTR;\nmodule.link(\"../../app/otr/client/OTR\", {\n  default(v) {\n    OTR = v;\n  }\n}, 3);\nlet OtrRoomState;\nmodule.link(\"../../app/otr/lib/OtrRoomState\", {\n  OtrRoomState(v) {\n    OtrRoomState = v;\n  }\n}, 4);\nlet sdk;\nmodule.link(\"../../app/utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 5);\nlet t;\nmodule.link(\"../../app/utils/lib/i18n\", {\n  t(v) {\n    t = v;\n  }\n}, 6);\nlet onClientBeforeSendMessage;\nmodule.link(\"../lib/onClientBeforeSendMessage\", {\n  onClientBeforeSendMessage(v) {\n    onClientBeforeSendMessage = v;\n  }\n}, 7);\nlet onClientMessageReceived;\nmodule.link(\"../lib/onClientMessageReceived\", {\n  onClientMessageReceived(v) {\n    onClientMessageReceived = v;\n  }\n}, 8);\nMeteor.startup(() => {\n  Tracker.autorun(() => {\n    const uid = Meteor.userId();\n    if (!uid) {\n      return;\n    }\n    sdk.stream('notify-user', [\"\".concat(uid, \"/otr\")], (type, data) => {\n      if (!data.roomId || !data.userId || data.userId === uid) {\n        return;\n      }\n      const otrRoom = OTR.getInstanceByRoomId(uid, data.roomId);\n      otrRoom === null || otrRoom === void 0 ? void 0 : otrRoom.onUserStream(type, data);\n    });\n  });\n  onClientBeforeSendMessage.use(async message => {\n    const uid = Meteor.userId();\n    if (!uid) {\n      return message;\n    }\n    const otrRoom = OTR.getInstanceByRoomId(uid, message.rid);\n    if (otrRoom && otrRoom.getState() === OtrRoomState.ESTABLISHED) {\n      const msg = await otrRoom.encrypt(message);\n      return _objectSpread(_objectSpread({}, message), {}, {\n        msg,\n        t: 'otr'\n      });\n    }\n    return message;\n  });\n  onClientMessageReceived.use(async message => {\n    const uid = Meteor.userId();\n    if (!uid) {\n      return message;\n    }\n    if (!isOTRMessage(message)) {\n      return message;\n    }\n    if ('notification' in message) {\n      return _objectSpread(_objectSpread({}, message), {}, {\n        msg: t('Encrypted_message')\n      });\n    }\n    const otrRoom = OTR.getInstanceByRoomId(uid, message.rid);\n    if (otrRoom && otrRoom.getState() === OtrRoomState.ESTABLISHED) {\n      const decrypted = await otrRoom.decrypt(message.msg);\n      if (typeof decrypted === 'string') {\n        return _objectSpread(_objectSpread({}, message), {}, {\n          msg: decrypted\n        });\n      }\n      const {\n        _id,\n        text: msg,\n        ack,\n        ts,\n        userId\n      } = decrypted;\n      if (ts) message.ts = ts;\n      if (message.otrAck) {\n        const otrAck = await otrRoom.decrypt(message.otrAck);\n        if (typeof otrAck === 'string') {\n          return _objectSpread(_objectSpread({}, message), {}, {\n            msg: otrAck\n          });\n        }\n        if (ack === otrAck.text) {\n          return _objectSpread(_objectSpread({}, message), {}, {\n            _id,\n            t: 'otr-ack',\n            msg\n          });\n        }\n      } else if (userId !== Meteor.userId()) {\n        const encryptedAck = await otrRoom.encryptText(ack);\n        void sdk.call('updateOTRAck', {\n          message,\n          ack: encryptedAck\n        });\n      }\n      return _objectSpread(_objectSpread({}, message), {}, {\n        _id,\n        msg\n      });\n    }\n    if (message.t === 'otr') message.msg = '';\n    return message;\n  });\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","isOTRMessage","Meteor","Tracker","OTR","OtrRoomState","sdk","t","onClientBeforeSendMessage","onClientMessageReceived","startup","autorun","uid","userId","stream","concat","type","data","roomId","otrRoom","getInstanceByRoomId","onUserStream","use","message","rid","getState","ESTABLISHED","msg","encrypt","decrypted","decrypt","_id","text","ack","ts","otrAck","encryptedAck","encryptText","call"],"sources":["client/startup/otr.ts"],"sourcesContent":["import { isOTRMessage } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport OTR from '../../app/otr/client/OTR';\nimport { OtrRoomState } from '../../app/otr/lib/OtrRoomState';\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { t } from '../../app/utils/lib/i18n';\nimport { onClientBeforeSendMessage } from '../lib/onClientBeforeSendMessage';\nimport { onClientMessageReceived } from '../lib/onClientMessageReceived';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn;\n\t\t}\n\n\t\tsdk.stream('notify-user', [`${uid}/otr`], (type, data) => {\n\t\t\tif (!data.roomId || !data.userId || data.userId === uid) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst otrRoom = OTR.getInstanceByRoomId(uid, data.roomId);\n\t\t\totrRoom?.onUserStream(type, data);\n\t\t});\n\t});\n\n\tonClientBeforeSendMessage.use(async (message) => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst otrRoom = OTR.getInstanceByRoomId(uid, message.rid);\n\n\t\tif (otrRoom && otrRoom.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\tconst msg = await otrRoom.encrypt(message);\n\t\t\treturn { ...message, msg, t: 'otr' };\n\t\t}\n\t\treturn message;\n\t});\n\n\tonClientMessageReceived.use(async (message) => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!isOTRMessage(message)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif ('notification' in message) {\n\t\t\treturn { ...message, msg: t('Encrypted_message') };\n\t\t}\n\n\t\tconst otrRoom = OTR.getInstanceByRoomId(uid, message.rid);\n\n\t\tif (otrRoom && otrRoom.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\tconst decrypted = await otrRoom.decrypt(message.msg);\n\t\t\tif (typeof decrypted === 'string') {\n\t\t\t\treturn { ...message, msg: decrypted };\n\t\t\t}\n\t\t\tconst { _id, text: msg, ack, ts, userId } = decrypted;\n\n\t\t\tif (ts) message.ts = ts;\n\n\t\t\tif (message.otrAck) {\n\t\t\t\tconst otrAck = await otrRoom.decrypt(message.otrAck);\n\t\t\t\tif (typeof otrAck === 'string') {\n\t\t\t\t\treturn { ...message, msg: otrAck };\n\t\t\t\t}\n\n\t\t\t\tif (ack === otrAck.text) {\n\t\t\t\t\treturn { ...message, _id, t: 'otr-ack', msg };\n\t\t\t\t}\n\t\t\t} else if (userId !== Meteor.userId()) {\n\t\t\t\tconst encryptedAck = await otrRoom.encryptText(ack);\n\n\t\t\t\tvoid sdk.call('updateOTRAck', { message, ack: encryptedAck });\n\t\t\t}\n\n\t\t\treturn { ...message, _id, msg };\n\t\t}\n\t\tif (message.t === 'otr') message.msg = '';\n\n\t\treturn message;\n\t});\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"87686513b48197dde85966847584d138a05eeaea"}
