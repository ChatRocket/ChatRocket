{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/PrepareChannels.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/admin/import/PrepareChannels.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/PrepareChannels.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/import/PrepareChannels.tsx","sourceRoot":"","sources":["client/views/admin/import/PrepareChannels.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CheckBox, Table, Tag, Pagination, TableHead, TableRow, TableCell, TableBody } from '@rocket.chat/fuselage';\nimport type { Dispatch, SetStateAction, ChangeEvent } from 'react';\nimport React, { useState, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport type { ChannelDescriptor } from './ChannelDescriptor';\n\ntype PrepareChannelsProps = {\n\tchannelsCount: number;\n\tchannels: ChannelDescriptor[];\n\tsetChannels: Dispatch<SetStateAction<ChannelDescriptor[]>>;\n};\n\n// TODO: review inner logic\nconst PrepareChannels = ({ channels, channelsCount, setChannels }: PrepareChannelsProps) => {\n\tconst { t } = useTranslation();\n\tconst [current, setCurrent] = useState(0);\n\tconst [itemsPerPage, setItemsPerPage] = useState<25 | 50 | 100>(25);\n\tconst showingResultsLabel = useCallback(\n\t\t({ count, current, itemsPerPage }) =>\n\t\t\tt('Showing_results_of', { postProcess: 'sprintf', sprintf: [current + 1, Math.min(current + itemsPerPage, count), count] }),\n\t\t[t],\n\t);\n\tconst itemsPerPageLabel = useCallback(() => t('Items_per_page:'), [t]);\n\n\tif (!channels.length) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\tchecked={channelsCount > 0}\n\t\t\t\t\t\t\t\tindeterminate={channelsCount > 0 && channelsCount !== channels.length}\n\t\t\t\t\t\t\t\tonChange={(): void => {\n\t\t\t\t\t\t\t\t\tsetChannels((channels) => {\n\t\t\t\t\t\t\t\t\t\tconst hasCheckedArchivedChannels = channels.some(({ is_archived, do_import }) => is_archived && do_import);\n\t\t\t\t\t\t\t\t\t\tconst isChecking = channelsCount === 0;\n\n\t\t\t\t\t\t\t\t\t\tif (isChecking) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: true }));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (hasCheckedArchivedChannels) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => (channel.is_archived ? { ...channel, do_import: false } : channel));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: false }));\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell is='th'>{t('Name')}</TableCell>\n\t\t\t\t\t\t<TableCell is='th' align='end'></TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{channels.slice(current, current + itemsPerPage).map((channel) => (\n\t\t\t\t\t\t<TableRow key={channel.channel_id}>\n\t\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\t\tchecked={channel.do_import}\n\t\t\t\t\t\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>): void => {\n\t\t\t\t\t\t\t\t\t\tconst { checked } = event.currentTarget;\n\t\t\t\t\t\t\t\t\t\tsetChannels((channels) =>\n\t\t\t\t\t\t\t\t\t\t\tchannels.map((_channel) => (_channel === channel ? { ..._channel, do_import: checked } : _channel)),\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{channel.name}</TableCell>\n\t\t\t\t\t\t\t<TableCell align='end'>{channel.is_archived && <Tag variant='danger'>{t('Importer_Archived')}</Tag>}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t\t<Pagination\n\t\t\t\tcurrent={current}\n\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\titemsPerPageLabel={itemsPerPageLabel}\n\t\t\t\tshowingResultsLabel={showingResultsLabel}\n\t\t\t\tcount={channels.length || 0}\n\t\t\t\tonSetItemsPerPage={setItemsPerPage}\n\t\t\t\tonSetCurrent={setCurrent}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default PrepareChannels;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/import/PrepareChannels.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/import/PrepareChannels.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/import/PrepareChannels.tsx","sourceRoot":"","sources":["client/views/admin/import/PrepareChannels.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CheckBox, Table, Tag, Pagination, TableHead, TableRow, TableCell, TableBody } from '@rocket.chat/fuselage';\nimport type { Dispatch, SetStateAction, ChangeEvent } from 'react';\nimport React, { useState, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport type { ChannelDescriptor } from './ChannelDescriptor';\n\ntype PrepareChannelsProps = {\n\tchannelsCount: number;\n\tchannels: ChannelDescriptor[];\n\tsetChannels: Dispatch<SetStateAction<ChannelDescriptor[]>>;\n};\n\n// TODO: review inner logic\nconst PrepareChannels = ({ channels, channelsCount, setChannels }: PrepareChannelsProps) => {\n\tconst { t } = useTranslation();\n\tconst [current, setCurrent] = useState(0);\n\tconst [itemsPerPage, setItemsPerPage] = useState<25 | 50 | 100>(25);\n\tconst showingResultsLabel = useCallback(\n\t\t({ count, current, itemsPerPage }) =>\n\t\t\tt('Showing_results_of', { postProcess: 'sprintf', sprintf: [current + 1, Math.min(current + itemsPerPage, count), count] }),\n\t\t[t],\n\t);\n\tconst itemsPerPageLabel = useCallback(() => t('Items_per_page:'), [t]);\n\n\tif (!channels.length) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\tchecked={channelsCount > 0}\n\t\t\t\t\t\t\t\tindeterminate={channelsCount > 0 && channelsCount !== channels.length}\n\t\t\t\t\t\t\t\tonChange={(): void => {\n\t\t\t\t\t\t\t\t\tsetChannels((channels) => {\n\t\t\t\t\t\t\t\t\t\tconst hasCheckedArchivedChannels = channels.some(({ is_archived, do_import }) => is_archived && do_import);\n\t\t\t\t\t\t\t\t\t\tconst isChecking = channelsCount === 0;\n\n\t\t\t\t\t\t\t\t\t\tif (isChecking) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: true }));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (hasCheckedArchivedChannels) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => (channel.is_archived ? { ...channel, do_import: false } : channel));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: false }));\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell is='th'>{t('Name')}</TableCell>\n\t\t\t\t\t\t<TableCell is='th' align='end'></TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{channels.slice(current, current + itemsPerPage).map((channel) => (\n\t\t\t\t\t\t<TableRow key={channel.channel_id}>\n\t\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\t\tchecked={channel.do_import}\n\t\t\t\t\t\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>): void => {\n\t\t\t\t\t\t\t\t\t\tconst { checked } = event.currentTarget;\n\t\t\t\t\t\t\t\t\t\tsetChannels((channels) =>\n\t\t\t\t\t\t\t\t\t\t\tchannels.map((_channel) => (_channel === channel ? { ..._channel, do_import: checked } : _channel)),\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{channel.name}</TableCell>\n\t\t\t\t\t\t\t<TableCell align='end'>{channel.is_archived && <Tag variant='danger'>{t('Importer_Archived')}</Tag>}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t\t<Pagination\n\t\t\t\tcurrent={current}\n\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\titemsPerPageLabel={itemsPerPageLabel}\n\t\t\t\tshowingResultsLabel={showingResultsLabel}\n\t\t\t\tcount={channels.length || 0}\n\t\t\t\tonSetItemsPerPage={setItemsPerPage}\n\t\t\t\tonSetCurrent={setCurrent}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default PrepareChannels;\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nlet CheckBox, Table, Tag, Pagination, TableHead, TableRow, TableCell, TableBody;\nmodule.link(\"@rocket.chat/fuselage\", {\n  CheckBox(v) {\n    CheckBox = v;\n  },\n  Table(v) {\n    Table = v;\n  },\n  Tag(v) {\n    Tag = v;\n  },\n  Pagination(v) {\n    Pagination = v;\n  },\n  TableHead(v) {\n    TableHead = v;\n  },\n  TableRow(v) {\n    TableRow = v;\n  },\n  TableCell(v) {\n    TableCell = v;\n  },\n  TableBody(v) {\n    TableBody = v;\n  }\n}, 0);\nlet React, useState, useCallback;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useState(v) {\n    useState = v;\n  },\n  useCallback(v) {\n    useCallback = v;\n  }\n}, 1);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 2);\n// TODO: review inner logic\nconst PrepareChannels = _ref => {\n  let {\n    channels,\n    channelsCount,\n    setChannels\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const [current, setCurrent] = useState(0);\n  const [itemsPerPage, setItemsPerPage] = useState(25);\n  const showingResultsLabel = useCallback(_ref2 => {\n    let {\n      count,\n      current,\n      itemsPerPage\n    } = _ref2;\n    return t('Showing_results_of', {\n      postProcess: 'sprintf',\n      sprintf: [current + 1, Math.min(current + itemsPerPage, count), count]\n    });\n  }, [t]);\n  const itemsPerPageLabel = useCallback(() => t('Items_per_page:'), [t]);\n  if (!channels.length) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, null, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, {\n    width: \"x36\"\n  }, /*#__PURE__*/React.createElement(CheckBox, {\n    checked: channelsCount > 0,\n    indeterminate: channelsCount > 0 && channelsCount !== channels.length,\n    onChange: () => {\n      setChannels(channels => {\n        const hasCheckedArchivedChannels = channels.some(_ref3 => {\n          let {\n            is_archived,\n            do_import\n          } = _ref3;\n          return is_archived && do_import;\n        });\n        const isChecking = channelsCount === 0;\n        if (isChecking) {\n          return channels.map(channel => _objectSpread(_objectSpread({}, channel), {}, {\n            do_import: true\n          }));\n        }\n        if (hasCheckedArchivedChannels) {\n          return channels.map(channel => channel.is_archived ? _objectSpread(_objectSpread({}, channel), {}, {\n            do_import: false\n          }) : channel);\n        }\n        return channels.map(channel => _objectSpread(_objectSpread({}, channel), {}, {\n          do_import: false\n        }));\n      });\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    is: \"th\"\n  }, t('Name')), /*#__PURE__*/React.createElement(TableCell, {\n    is: \"th\",\n    align: \"end\"\n  }))), /*#__PURE__*/React.createElement(TableBody, null, channels.slice(current, current + itemsPerPage).map(channel => /*#__PURE__*/React.createElement(TableRow, {\n    key: channel.channel_id\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    width: \"x36\"\n  }, /*#__PURE__*/React.createElement(CheckBox, {\n    checked: channel.do_import,\n    onChange: event => {\n      const {\n        checked\n      } = event.currentTarget;\n      setChannels(channels => channels.map(_channel => _channel === channel ? _objectSpread(_objectSpread({}, _channel), {}, {\n        do_import: checked\n      }) : _channel));\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, null, channel.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"end\"\n  }, channel.is_archived && /*#__PURE__*/React.createElement(Tag, {\n    variant: \"danger\"\n  }, t('Importer_Archived'))))))), /*#__PURE__*/React.createElement(Pagination, {\n    current: current,\n    itemsPerPage: itemsPerPage,\n    itemsPerPageLabel: itemsPerPageLabel,\n    showingResultsLabel: showingResultsLabel,\n    count: channels.length || 0,\n    onSetItemsPerPage: setItemsPerPage,\n    onSetCurrent: setCurrent\n  }));\n};\nmodule.exportDefault(PrepareChannels);","map":{"version":3,"names":["_objectSpread","module","link","default","v","CheckBox","Table","Tag","Pagination","TableHead","TableRow","TableCell","TableBody","React","useState","useCallback","useTranslation","PrepareChannels","_ref","channels","channelsCount","setChannels","t","current","setCurrent","itemsPerPage","setItemsPerPage","showingResultsLabel","_ref2","count","postProcess","sprintf","Math","min","itemsPerPageLabel","length","createElement","Fragment","width","checked","indeterminate","onChange","hasCheckedArchivedChannels","some","_ref3","is_archived","do_import","isChecking","map","channel","is","align","slice","key","channel_id","event","currentTarget","_channel","name","variant","onSetItemsPerPage","onSetCurrent","exportDefault"],"sources":["client/views/admin/import/PrepareChannels.tsx"],"sourcesContent":["import { CheckBox, Table, Tag, Pagination, TableHead, TableRow, TableCell, TableBody } from '@rocket.chat/fuselage';\nimport type { Dispatch, SetStateAction, ChangeEvent } from 'react';\nimport React, { useState, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport type { ChannelDescriptor } from './ChannelDescriptor';\n\ntype PrepareChannelsProps = {\n\tchannelsCount: number;\n\tchannels: ChannelDescriptor[];\n\tsetChannels: Dispatch<SetStateAction<ChannelDescriptor[]>>;\n};\n\n// TODO: review inner logic\nconst PrepareChannels = ({ channels, channelsCount, setChannels }: PrepareChannelsProps) => {\n\tconst { t } = useTranslation();\n\tconst [current, setCurrent] = useState(0);\n\tconst [itemsPerPage, setItemsPerPage] = useState<25 | 50 | 100>(25);\n\tconst showingResultsLabel = useCallback(\n\t\t({ count, current, itemsPerPage }) =>\n\t\t\tt('Showing_results_of', { postProcess: 'sprintf', sprintf: [current + 1, Math.min(current + itemsPerPage, count), count] }),\n\t\t[t],\n\t);\n\tconst itemsPerPageLabel = useCallback(() => t('Items_per_page:'), [t]);\n\n\tif (!channels.length) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\tchecked={channelsCount > 0}\n\t\t\t\t\t\t\t\tindeterminate={channelsCount > 0 && channelsCount !== channels.length}\n\t\t\t\t\t\t\t\tonChange={(): void => {\n\t\t\t\t\t\t\t\t\tsetChannels((channels) => {\n\t\t\t\t\t\t\t\t\t\tconst hasCheckedArchivedChannels = channels.some(({ is_archived, do_import }) => is_archived && do_import);\n\t\t\t\t\t\t\t\t\t\tconst isChecking = channelsCount === 0;\n\n\t\t\t\t\t\t\t\t\t\tif (isChecking) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: true }));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (hasCheckedArchivedChannels) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => (channel.is_archived ? { ...channel, do_import: false } : channel));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: false }));\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell is='th'>{t('Name')}</TableCell>\n\t\t\t\t\t\t<TableCell is='th' align='end'></TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{channels.slice(current, current + itemsPerPage).map((channel) => (\n\t\t\t\t\t\t<TableRow key={channel.channel_id}>\n\t\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\t\tchecked={channel.do_import}\n\t\t\t\t\t\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>): void => {\n\t\t\t\t\t\t\t\t\t\tconst { checked } = event.currentTarget;\n\t\t\t\t\t\t\t\t\t\tsetChannels((channels) =>\n\t\t\t\t\t\t\t\t\t\t\tchannels.map((_channel) => (_channel === channel ? { ..._channel, do_import: checked } : _channel)),\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{channel.name}</TableCell>\n\t\t\t\t\t\t\t<TableCell align='end'>{channel.is_archived && <Tag variant='danger'>{t('Importer_Archived')}</Tag>}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t\t<Pagination\n\t\t\t\tcurrent={current}\n\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\titemsPerPageLabel={itemsPerPageLabel}\n\t\t\t\tshowingResultsLabel={showingResultsLabel}\n\t\t\t\tcount={channels.length || 0}\n\t\t\t\tonSetItemsPerPage={setItemsPerPage}\n\t\t\t\tonSetCurrent={setCurrent}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default PrepareChannels;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"14146e15e5853cda98422e55e66906b0d9f18341"}
