{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/providers/hooks/useChatMessagesInstance.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/providers/hooks/useChatMessagesInstance.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/providers/hooks/useChatMessagesInstance.ts","inputSourceMap":{"version":3,"file":"client/views/room/providers/hooks/useChatMessagesInstance.ts","sourceRoot":"","sources":["client/views/room/providers/hooks/useChatMessagesInstance.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,OAAO,EAAE,YAAY,EAAE,MAAM,+CAA+C,CAAC;AAC7E,OAAO,EAAE,cAAc,EAAE,MAAM,yCAAyC,CAAC;AAEzE,OAAO,EAAE,qBAAqB,EAAE,MAAM,+CAA+C,CAAC;AACtF,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AACjE,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAChE,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C,MAAM,UAAU,uBAAuB,CAAC,EACvC,GAAG,EACH,IAAI,EACJ,SAAS,GAKT;IACA,MAAM,GAAG,GAAG,SAAS,EAAE,CAAC;IACxB,MAAM,YAAY,GAAG,mBAAmB,EAAE,CAAC;IAC3C,MAAM,aAAa,GAAG,qBAAqB,EAAE,CAAC;IAC9C,MAAM,YAAY,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;IAE3C,MAAM,YAAY,GAAG,WAAW,CAAC,GAAG,EAAE;QACrC,MAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,aAAa,EAAE,CAAC,CAAC;QAErE,OAAO,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;IAC7C,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC;IAE9C,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,YAAY,EAAE,CAAC;YAClB,YAAY,EAAE,gBAAgB,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;QACjE,CAAC;IACF,CAAC,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAEnD,YAAY,CAAC,WAAW,GAAG,cAAc,EAAE,CAAC;IAE5C,OAAO,YAAY,CAAC;AACrB,CAAC","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport { useUserId } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport { ChatMessages } from '../../../../../app/ui/client/lib/ChatMessages';\nimport { useEmojiPicker } from '../../../../contexts/EmojiPickerContext';\nimport type { ChatAPI } from '../../../../lib/chats/ChatAPI';\nimport { useUiKitActionManager } from '../../../../uikit/hooks/useUiKitActionManager';\nimport { useRoomSubscription } from '../../contexts/RoomContext';\nimport { useE2EERoomState } from '../../hooks/useE2EERoomState';\nimport { useInstance } from './useInstance';\n\nexport function useChatMessagesInstance({\n\trid,\n\ttmid,\n\tencrypted,\n}: {\n\trid: IRoom['_id'];\n\ttmid?: IMessage['_id'];\n\tencrypted: IRoom['encrypted'];\n}): ChatAPI {\n\tconst uid = useUserId();\n\tconst subscription = useRoomSubscription();\n\tconst actionManager = useUiKitActionManager();\n\tconst e2eRoomState = useE2EERoomState(rid);\n\n\tconst chatMessages = useInstance(() => {\n\t\tconst instance = new ChatMessages({ rid, tmid, uid, actionManager });\n\n\t\treturn [instance, () => instance.release()];\n\t}, [rid, tmid, uid, encrypted, e2eRoomState]);\n\n\tuseEffect(() => {\n\t\tif (subscription) {\n\t\t\tchatMessages?.readStateManager.updateSubscription(subscription);\n\t\t}\n\t}, [subscription, chatMessages?.readStateManager]);\n\n\tchatMessages.emojiPicker = useEmojiPicker();\n\n\treturn chatMessages;\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/providers/hooks/useChatMessagesInstance.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/providers/hooks/useChatMessagesInstance.ts","inputSourceMap":{"version":3,"file":"client/views/room/providers/hooks/useChatMessagesInstance.ts","sourceRoot":"","sources":["client/views/room/providers/hooks/useChatMessagesInstance.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,OAAO,EAAE,YAAY,EAAE,MAAM,+CAA+C,CAAC;AAC7E,OAAO,EAAE,cAAc,EAAE,MAAM,yCAAyC,CAAC;AAEzE,OAAO,EAAE,qBAAqB,EAAE,MAAM,+CAA+C,CAAC;AACtF,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AACjE,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAChE,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE5C,MAAM,UAAU,uBAAuB,CAAC,EACvC,GAAG,EACH,IAAI,EACJ,SAAS,GAKT;IACA,MAAM,GAAG,GAAG,SAAS,EAAE,CAAC;IACxB,MAAM,YAAY,GAAG,mBAAmB,EAAE,CAAC;IAC3C,MAAM,aAAa,GAAG,qBAAqB,EAAE,CAAC;IAC9C,MAAM,YAAY,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;IAE3C,MAAM,YAAY,GAAG,WAAW,CAAC,GAAG,EAAE;QACrC,MAAM,QAAQ,GAAG,IAAI,YAAY,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,aAAa,EAAE,CAAC,CAAC;QAErE,OAAO,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;IAC7C,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC;IAE9C,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,YAAY,EAAE,CAAC;YAClB,YAAY,EAAE,gBAAgB,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;QACjE,CAAC;IACF,CAAC,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAEnD,YAAY,CAAC,WAAW,GAAG,cAAc,EAAE,CAAC;IAE5C,OAAO,YAAY,CAAC;AACrB,CAAC","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport { useUserId } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport { ChatMessages } from '../../../../../app/ui/client/lib/ChatMessages';\nimport { useEmojiPicker } from '../../../../contexts/EmojiPickerContext';\nimport type { ChatAPI } from '../../../../lib/chats/ChatAPI';\nimport { useUiKitActionManager } from '../../../../uikit/hooks/useUiKitActionManager';\nimport { useRoomSubscription } from '../../contexts/RoomContext';\nimport { useE2EERoomState } from '../../hooks/useE2EERoomState';\nimport { useInstance } from './useInstance';\n\nexport function useChatMessagesInstance({\n\trid,\n\ttmid,\n\tencrypted,\n}: {\n\trid: IRoom['_id'];\n\ttmid?: IMessage['_id'];\n\tencrypted: IRoom['encrypted'];\n}): ChatAPI {\n\tconst uid = useUserId();\n\tconst subscription = useRoomSubscription();\n\tconst actionManager = useUiKitActionManager();\n\tconst e2eRoomState = useE2EERoomState(rid);\n\n\tconst chatMessages = useInstance(() => {\n\t\tconst instance = new ChatMessages({ rid, tmid, uid, actionManager });\n\n\t\treturn [instance, () => instance.release()];\n\t}, [rid, tmid, uid, encrypted, e2eRoomState]);\n\n\tuseEffect(() => {\n\t\tif (subscription) {\n\t\t\tchatMessages?.readStateManager.updateSubscription(subscription);\n\t\t}\n\t}, [subscription, chatMessages?.readStateManager]);\n\n\tchatMessages.emojiPicker = useEmojiPicker();\n\n\treturn chatMessages;\n}\n"]}}},"code":"module.export({\n  useChatMessagesInstance: () => useChatMessagesInstance\n});\nlet useUserId;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useUserId(v) {\n    useUserId = v;\n  }\n}, 0);\nlet useEffect;\nmodule.link(\"react\", {\n  useEffect(v) {\n    useEffect = v;\n  }\n}, 1);\nlet ChatMessages;\nmodule.link(\"../../../../../app/ui/client/lib/ChatMessages\", {\n  ChatMessages(v) {\n    ChatMessages = v;\n  }\n}, 2);\nlet useEmojiPicker;\nmodule.link(\"../../../../contexts/EmojiPickerContext\", {\n  useEmojiPicker(v) {\n    useEmojiPicker = v;\n  }\n}, 3);\nlet useUiKitActionManager;\nmodule.link(\"../../../../uikit/hooks/useUiKitActionManager\", {\n  useUiKitActionManager(v) {\n    useUiKitActionManager = v;\n  }\n}, 4);\nlet useRoomSubscription;\nmodule.link(\"../../contexts/RoomContext\", {\n  useRoomSubscription(v) {\n    useRoomSubscription = v;\n  }\n}, 5);\nlet useE2EERoomState;\nmodule.link(\"../../hooks/useE2EERoomState\", {\n  useE2EERoomState(v) {\n    useE2EERoomState = v;\n  }\n}, 6);\nlet useInstance;\nmodule.link(\"./useInstance\", {\n  useInstance(v) {\n    useInstance = v;\n  }\n}, 7);\nfunction useChatMessagesInstance(_ref) {\n  let {\n    rid,\n    tmid,\n    encrypted\n  } = _ref;\n  const uid = useUserId();\n  const subscription = useRoomSubscription();\n  const actionManager = useUiKitActionManager();\n  const e2eRoomState = useE2EERoomState(rid);\n  const chatMessages = useInstance(() => {\n    const instance = new ChatMessages({\n      rid,\n      tmid,\n      uid,\n      actionManager\n    });\n    return [instance, () => instance.release()];\n  }, [rid, tmid, uid, encrypted, e2eRoomState]);\n  useEffect(() => {\n    if (subscription) {\n      chatMessages === null || chatMessages === void 0 ? void 0 : chatMessages.readStateManager.updateSubscription(subscription);\n    }\n  }, [subscription, chatMessages === null || chatMessages === void 0 ? void 0 : chatMessages.readStateManager]);\n  chatMessages.emojiPicker = useEmojiPicker();\n  return chatMessages;\n}","map":{"version":3,"names":["module","export","useChatMessagesInstance","useUserId","link","v","useEffect","ChatMessages","useEmojiPicker","useUiKitActionManager","useRoomSubscription","useE2EERoomState","useInstance","_ref","rid","tmid","encrypted","uid","subscription","actionManager","e2eRoomState","chatMessages","instance","release","readStateManager","updateSubscription","emojiPicker"],"sources":["client/views/room/providers/hooks/useChatMessagesInstance.ts"],"sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport { useUserId } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport { ChatMessages } from '../../../../../app/ui/client/lib/ChatMessages';\nimport { useEmojiPicker } from '../../../../contexts/EmojiPickerContext';\nimport type { ChatAPI } from '../../../../lib/chats/ChatAPI';\nimport { useUiKitActionManager } from '../../../../uikit/hooks/useUiKitActionManager';\nimport { useRoomSubscription } from '../../contexts/RoomContext';\nimport { useE2EERoomState } from '../../hooks/useE2EERoomState';\nimport { useInstance } from './useInstance';\n\nexport function useChatMessagesInstance({\n\trid,\n\ttmid,\n\tencrypted,\n}: {\n\trid: IRoom['_id'];\n\ttmid?: IMessage['_id'];\n\tencrypted: IRoom['encrypted'];\n}): ChatAPI {\n\tconst uid = useUserId();\n\tconst subscription = useRoomSubscription();\n\tconst actionManager = useUiKitActionManager();\n\tconst e2eRoomState = useE2EERoomState(rid);\n\n\tconst chatMessages = useInstance(() => {\n\t\tconst instance = new ChatMessages({ rid, tmid, uid, actionManager });\n\n\t\treturn [instance, () => instance.release()];\n\t}, [rid, tmid, uid, encrypted, e2eRoomState]);\n\n\tuseEffect(() => {\n\t\tif (subscription) {\n\t\t\tchatMessages?.readStateManager.updateSubscription(subscription);\n\t\t}\n\t}, [subscription, chatMessages?.readStateManager]);\n\n\tchatMessages.emojiPicker = useEmojiPicker();\n\n\treturn chatMessages;\n}\n"],"mappings":"AACAA,MAAA,CAAOC,MAAE;EAAAC,uBAAiB,EAAAA,CAAA,KAAAA;AAA2B;AAAA,IAAAC,SAAA;AAAAH,MAAA,CAAAI,IAAA;EAAAD,UAAAE,CAAA;IAAAF,SAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,SAAA;AAAAN,MAAA,CAAAI,IAAA;EAAAE,UAAAD,CAAA;IAAAC,SAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,YAAA;AAAAP,MAAA,CAAAI,IAAA;EAAAG,aAAAF,CAAA;IAAAE,YAAA,GAAAF,CAAA;EAAA;AAAA;AAAA,IAAAG,cAAA;AAAAR,MAAA,CAAAI,IAAA;EAAAI,eAAAH,CAAA;IAAAG,cAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAI,qBAAA;AAAAT,MAAA,CAAAI,IAAA;EAAAK,sBAAAJ,CAAA;IAAAI,qBAAA,GAAAJ,CAAA;EAAA;AAAA;AAAA,IAAAK,mBAAA;AAAAV,MAAA,CAAAI,IAAA;EAAAM,oBAAAL,CAAA;IAAAK,mBAAA,GAAAL,CAAA;EAAA;AAAA;AAAA,IAAAM,gBAAA;AAAAX,MAAA,CAAAI,IAAA;EAAAO,iBAAAN,CAAA;IAAAM,gBAAA,GAAAN,CAAA;EAAA;AAAA;AAAA,IAAAO,WAAA;AAAAZ,MAAA,CAAAI,IAAA;EAAAQ,YAAAP,CAAA;IAAAO,WAAA,GAAAP,CAAA;EAAA;AAAA;AAW/C,SAAUH,uBAAuBA,CAAAW,IAAA,EAQtC;EAAA,IARuC;IACvCC,GAAG;IACHC,IAAI;IACJC;EAAS,CAKT,GAAAH,IAAA;EACA,MAAMI,GAAG,GAAGd,SAAS,EAAE;EACvB,MAAMe,YAAY,GAAGR,mBAAmB,EAAE;EAC1C,MAAMS,aAAa,GAAGV,qBAAqB,EAAE;EAC7C,MAAMW,YAAY,GAAGT,gBAAgB,CAACG,GAAG,CAAC;EAE1C,MAAMO,YAAY,GAAGT,WAAW,CAAC,MAAK;IACrC,MAAMU,QAAQ,GAAG,IAAIf,YAAY,CAAC;MAAEO,GAAG;MAAEC,IAAI;MAAEE,GAAG;MAAEE;IAAa,CAAE,CAAC;IAEpE,OAAO,CAACG,QAAQ,EAAE,MAAMA,QAAQ,CAACC,OAAO,EAAE,CAAC;EAC5C,CAAC,EAAE,CAACT,GAAG,EAAEC,IAAI,EAAEE,GAAG,EAAED,SAAS,EAAEI,YAAY,CAAC,CAAC;EAE7Cd,SAAS,CAAC,MAAK;IACd,IAAIY,YAAY,EAAE;MACjBG,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEG,gBAAgB,CAACC,kBAAkB,CAACP,YAAY,CAAC;IAChE;EACD,CAAC,EAAE,CAACA,YAAY,EAAEG,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEG,gBAAgB,CAAC,CAAC;EAElDH,YAAY,CAACK,WAAW,GAAGlB,cAAc,EAAE;EAE3C,OAAOa,YAAY;AACpB","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8e9d11d5947deb060dcffc5d940437a19c407a47"}
