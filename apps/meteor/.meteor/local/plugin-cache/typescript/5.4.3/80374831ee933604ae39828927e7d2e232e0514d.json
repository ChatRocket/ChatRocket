{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/client/lib/stream/queueManager.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/livechat/client/lib/stream/queueManager.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/client/lib/stream/queueManager.ts","inputSourceMap":{"version":3,"file":"app/livechat/client/lib/stream/queueManager.ts","sourceRoot":"","sources":["app/livechat/client/lib/stream/queueManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatDepartment, ILivechatInquiryRecord, IOmnichannelAgent } from '@rocket.chat/core-typings';\n\nimport { queryClient } from '../../../../../client/lib/queryClient';\nimport { callWithErrorHandling } from '../../../../../client/lib/utils/callWithErrorHandling';\nimport { settings } from '../../../../settings/client';\nimport { sdk } from '../../../../utils/client/lib/SDKClient';\nimport { LivechatInquiry } from '../../collections/LivechatInquiry';\n\nconst departments = new Set();\n\nconst events = {\n\tadded: async (inquiry: ILivechatInquiryRecord) => {\n\t\tif (!departments.has(inquiry.department)) {\n\t\t\treturn;\n\t\t}\n\n\t\tLivechatInquiry.insert({ ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tawait invalidateRoomQueries(inquiry.rid);\n\t},\n\tchanged: async (inquiry: ILivechatInquiryRecord) => {\n\t\tif (inquiry.status !== 'queued' || (inquiry.department && !departments.has(inquiry.department))) {\n\t\t\treturn removeInquiry(inquiry);\n\t\t}\n\n\t\tLivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tawait invalidateRoomQueries(inquiry.rid);\n\t},\n\tremoved: (inquiry: ILivechatInquiryRecord) => removeInquiry(inquiry),\n};\n\nconst invalidateRoomQueries = async (rid: string) => {\n\tawait queryClient.invalidateQueries(['rooms', { reference: rid, type: 'l' }]);\n\tawait queryClient.removeQueries(['rooms', rid]);\n\tawait queryClient.removeQueries(['/v1/rooms.info', rid]);\n};\n\nconst removeInquiry = async (inquiry: ILivechatInquiryRecord) => {\n\tawait LivechatInquiry.remove(inquiry._id);\n\treturn queryClient.invalidateQueries(['rooms', { reference: inquiry.rid, type: 'l' }]);\n};\n\nconst getInquiriesFromAPI = async () => {\n\tconst count = settings.get('Livechat_guest_pool_max_number_incoming_livechats_displayed') ?? 0;\n\tconst { inquiries } = await sdk.rest.get('/v1/livechat/inquiries.queuedForUser', { count });\n\treturn inquiries;\n};\n\nconst removeListenerOfDepartment = (departmentId: ILivechatDepartment['_id']) => {\n\tsdk.stop('livechat-inquiry-queue-observer', `department/${departmentId}`);\n\tdepartments.delete(departmentId);\n};\n\nconst appendListenerToDepartment = (departmentId: ILivechatDepartment['_id']) => {\n\tdepartments.add(departmentId);\n\tsdk.stream('livechat-inquiry-queue-observer', [`department/${departmentId}`], async (args) => {\n\t\tif (!('type' in args)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, ...inquiry } = args;\n\t\tawait events[args.type](inquiry);\n\t});\n\treturn () => removeListenerOfDepartment(departmentId);\n};\nconst addListenerForeachDepartment = (departments: ILivechatDepartment['_id'][] = []) => {\n\tconst cleanupFunctions = departments.map((department) => appendListenerToDepartment(department));\n\treturn () => cleanupFunctions.forEach((cleanup) => cleanup());\n};\n\nconst updateInquiries = async (inquiries: ILivechatInquiryRecord[] = []) =>\n\tinquiries.forEach((inquiry) => LivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, _updatedAt: new Date(inquiry._updatedAt) }));\n\nconst getAgentsDepartments = async (userId: IOmnichannelAgent['_id']) => {\n\tconst { departments } = await sdk.rest.get(`/v1/livechat/agents/${userId}/departments`, { enabledDepartmentsOnly: 'true' });\n\treturn departments;\n};\n\nconst removeGlobalListener = () => sdk.stop('livechat-inquiry-queue-observer', 'public');\n\nconst addGlobalListener = () => {\n\tsdk.stream('livechat-inquiry-queue-observer', ['public'], async (args) => {\n\t\tif (!('type' in args)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, ...inquiry } = args;\n\t\tawait events[args.type](inquiry);\n\t});\n\treturn removeGlobalListener;\n};\n\nconst subscribe = async (userId: IOmnichannelAgent['_id']) => {\n\tconst config = await callWithErrorHandling('livechat:getRoutingConfig');\n\tif (config?.autoAssignAgent) {\n\t\treturn;\n\t}\n\n\tconst agentDepartments = (await getAgentsDepartments(userId)).map((department) => department.departmentId);\n\n\t// Register to all depts + public queue always to match the inquiry list returned by backend\n\tconst cleanDepartmentListeners = addListenerForeachDepartment(agentDepartments);\n\tconst globalCleanup = addGlobalListener();\n\n\tconst computation = Tracker.autorun(async () => {\n\t\tconst inquiriesFromAPI = (await getInquiriesFromAPI()) as unknown as ILivechatInquiryRecord[];\n\n\t\tawait updateInquiries(inquiriesFromAPI);\n\t});\n\n\treturn () => {\n\t\tLivechatInquiry.remove({});\n\t\tremoveGlobalListener();\n\t\tcleanDepartmentListeners?.();\n\t\tglobalCleanup?.();\n\t\tdepartments.clear();\n\t\tcomputation.stop();\n\t};\n};\n\nexport const initializeLivechatInquiryStream = (() => {\n\tlet cleanUp: (() => void) | undefined;\n\n\treturn async (...args: Parameters<typeof subscribe>) => {\n\t\tcleanUp?.();\n\t\tcleanUp = await subscribe(...args);\n\t};\n})();\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/client/lib/stream/queueManager.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/client/lib/stream/queueManager.ts","inputSourceMap":{"version":3,"file":"app/livechat/client/lib/stream/queueManager.ts","sourceRoot":"","sources":["app/livechat/client/lib/stream/queueManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatDepartment, ILivechatInquiryRecord, IOmnichannelAgent } from '@rocket.chat/core-typings';\n\nimport { queryClient } from '../../../../../client/lib/queryClient';\nimport { callWithErrorHandling } from '../../../../../client/lib/utils/callWithErrorHandling';\nimport { settings } from '../../../../settings/client';\nimport { sdk } from '../../../../utils/client/lib/SDKClient';\nimport { LivechatInquiry } from '../../collections/LivechatInquiry';\n\nconst departments = new Set();\n\nconst events = {\n\tadded: async (inquiry: ILivechatInquiryRecord) => {\n\t\tif (!departments.has(inquiry.department)) {\n\t\t\treturn;\n\t\t}\n\n\t\tLivechatInquiry.insert({ ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tawait invalidateRoomQueries(inquiry.rid);\n\t},\n\tchanged: async (inquiry: ILivechatInquiryRecord) => {\n\t\tif (inquiry.status !== 'queued' || (inquiry.department && !departments.has(inquiry.department))) {\n\t\t\treturn removeInquiry(inquiry);\n\t\t}\n\n\t\tLivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tawait invalidateRoomQueries(inquiry.rid);\n\t},\n\tremoved: (inquiry: ILivechatInquiryRecord) => removeInquiry(inquiry),\n};\n\nconst invalidateRoomQueries = async (rid: string) => {\n\tawait queryClient.invalidateQueries(['rooms', { reference: rid, type: 'l' }]);\n\tawait queryClient.removeQueries(['rooms', rid]);\n\tawait queryClient.removeQueries(['/v1/rooms.info', rid]);\n};\n\nconst removeInquiry = async (inquiry: ILivechatInquiryRecord) => {\n\tawait LivechatInquiry.remove(inquiry._id);\n\treturn queryClient.invalidateQueries(['rooms', { reference: inquiry.rid, type: 'l' }]);\n};\n\nconst getInquiriesFromAPI = async () => {\n\tconst count = settings.get('Livechat_guest_pool_max_number_incoming_livechats_displayed') ?? 0;\n\tconst { inquiries } = await sdk.rest.get('/v1/livechat/inquiries.queuedForUser', { count });\n\treturn inquiries;\n};\n\nconst removeListenerOfDepartment = (departmentId: ILivechatDepartment['_id']) => {\n\tsdk.stop('livechat-inquiry-queue-observer', `department/${departmentId}`);\n\tdepartments.delete(departmentId);\n};\n\nconst appendListenerToDepartment = (departmentId: ILivechatDepartment['_id']) => {\n\tdepartments.add(departmentId);\n\tsdk.stream('livechat-inquiry-queue-observer', [`department/${departmentId}`], async (args) => {\n\t\tif (!('type' in args)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, ...inquiry } = args;\n\t\tawait events[args.type](inquiry);\n\t});\n\treturn () => removeListenerOfDepartment(departmentId);\n};\nconst addListenerForeachDepartment = (departments: ILivechatDepartment['_id'][] = []) => {\n\tconst cleanupFunctions = departments.map((department) => appendListenerToDepartment(department));\n\treturn () => cleanupFunctions.forEach((cleanup) => cleanup());\n};\n\nconst updateInquiries = async (inquiries: ILivechatInquiryRecord[] = []) =>\n\tinquiries.forEach((inquiry) => LivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, _updatedAt: new Date(inquiry._updatedAt) }));\n\nconst getAgentsDepartments = async (userId: IOmnichannelAgent['_id']) => {\n\tconst { departments } = await sdk.rest.get(`/v1/livechat/agents/${userId}/departments`, { enabledDepartmentsOnly: 'true' });\n\treturn departments;\n};\n\nconst removeGlobalListener = () => sdk.stop('livechat-inquiry-queue-observer', 'public');\n\nconst addGlobalListener = () => {\n\tsdk.stream('livechat-inquiry-queue-observer', ['public'], async (args) => {\n\t\tif (!('type' in args)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, ...inquiry } = args;\n\t\tawait events[args.type](inquiry);\n\t});\n\treturn removeGlobalListener;\n};\n\nconst subscribe = async (userId: IOmnichannelAgent['_id']) => {\n\tconst config = await callWithErrorHandling('livechat:getRoutingConfig');\n\tif (config?.autoAssignAgent) {\n\t\treturn;\n\t}\n\n\tconst agentDepartments = (await getAgentsDepartments(userId)).map((department) => department.departmentId);\n\n\t// Register to all depts + public queue always to match the inquiry list returned by backend\n\tconst cleanDepartmentListeners = addListenerForeachDepartment(agentDepartments);\n\tconst globalCleanup = addGlobalListener();\n\n\tconst computation = Tracker.autorun(async () => {\n\t\tconst inquiriesFromAPI = (await getInquiriesFromAPI()) as unknown as ILivechatInquiryRecord[];\n\n\t\tawait updateInquiries(inquiriesFromAPI);\n\t});\n\n\treturn () => {\n\t\tLivechatInquiry.remove({});\n\t\tremoveGlobalListener();\n\t\tcleanDepartmentListeners?.();\n\t\tglobalCleanup?.();\n\t\tdepartments.clear();\n\t\tcomputation.stop();\n\t};\n};\n\nexport const initializeLivechatInquiryStream = (() => {\n\tlet cleanUp: (() => void) | undefined;\n\n\treturn async (...args: Parameters<typeof subscribe>) => {\n\t\tcleanUp?.();\n\t\tcleanUp = await subscribe(...args);\n\t};\n})();\n"]}}},"code":"var _excluded = [\"type\"],\n  _excluded2 = [\"type\"];\nvar _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 0);\nvar _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 1);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 2);\nmodule.export({\n  initializeLivechatInquiryStream: function () {\n    return initializeLivechatInquiryStream;\n  }\n});\nvar queryClient;\nmodule.link(\"../../../../../client/lib/queryClient\", {\n  queryClient: function (v) {\n    queryClient = v;\n  }\n}, 0);\nvar callWithErrorHandling;\nmodule.link(\"../../../../../client/lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling: function (v) {\n    callWithErrorHandling = v;\n  }\n}, 1);\nvar settings;\nmodule.link(\"../../../../settings/client\", {\n  settings: function (v) {\n    settings = v;\n  }\n}, 2);\nvar sdk;\nmodule.link(\"../../../../utils/client/lib/SDKClient\", {\n  sdk: function (v) {\n    sdk = v;\n  }\n}, 3);\nvar LivechatInquiry;\nmodule.link(\"../../collections/LivechatInquiry\", {\n  LivechatInquiry: function (v) {\n    LivechatInquiry = v;\n  }\n}, 4);\nvar departments = new Set();\nvar events = {\n  added: function () {\n    function _callee(inquiry) {\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (departments.has(inquiry.department)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              LivechatInquiry.insert(_objectSpread(_objectSpread({}, inquiry), {}, {\n                alert: true,\n                _updatedAt: new Date(inquiry._updatedAt)\n              }));\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(invalidateRoomQueries(inquiry.rid));\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return _callee$;\n      }(), null, null, null, Promise);\n    }\n    return _callee;\n  }(),\n  changed: function () {\n    function _callee2(inquiry) {\n      return _regeneratorRuntime.async(function () {\n        function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(inquiry.status !== 'queued' || inquiry.department && !departments.has(inquiry.department))) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", removeInquiry(inquiry));\n            case 2:\n              LivechatInquiry.upsert({\n                _id: inquiry._id\n              }, _objectSpread(_objectSpread({}, inquiry), {}, {\n                alert: true,\n                _updatedAt: new Date(inquiry._updatedAt)\n              }));\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(invalidateRoomQueries(inquiry.rid));\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n        return _callee2$;\n      }(), null, null, null, Promise);\n    }\n    return _callee2;\n  }(),\n  removed: function (inquiry) {\n    return removeInquiry(inquiry);\n  }\n};\nvar invalidateRoomQueries = function () {\n  function _callee3(rid) {\n    return _regeneratorRuntime.async(function () {\n      function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(queryClient.invalidateQueries(['rooms', {\n              reference: rid,\n              type: 'l'\n            }]));\n          case 2:\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(queryClient.removeQueries(['rooms', rid]));\n          case 4:\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(queryClient.removeQueries(['/v1/rooms.info', rid]));\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n      return _callee3$;\n    }(), null, null, null, Promise);\n  }\n  return _callee3;\n}();\nvar removeInquiry = function () {\n  function _callee4(inquiry) {\n    return _regeneratorRuntime.async(function () {\n      function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(LivechatInquiry.remove(inquiry._id));\n          case 2:\n            return _context4.abrupt(\"return\", queryClient.invalidateQueries(['rooms', {\n              reference: inquiry.rid,\n              type: 'l'\n            }]));\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n      return _callee4$;\n    }(), null, null, null, Promise);\n  }\n  return _callee4;\n}();\nvar getInquiriesFromAPI = function () {\n  function _callee5() {\n    var _settings$get;\n    var count, _await$sdk$rest$get, inquiries;\n    return _regeneratorRuntime.async(function () {\n      function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            count = (_settings$get = settings.get('Livechat_guest_pool_max_number_incoming_livechats_displayed')) !== null && _settings$get !== void 0 ? _settings$get : 0;\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(sdk.rest.get('/v1/livechat/inquiries.queuedForUser', {\n              count: count\n            }));\n          case 3:\n            _await$sdk$rest$get = _context5.sent;\n            inquiries = _await$sdk$rest$get.inquiries;\n            return _context5.abrupt(\"return\", inquiries);\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n      return _callee5$;\n    }(), null, null, null, Promise);\n  }\n  return _callee5;\n}();\nvar removeListenerOfDepartment = function (departmentId) {\n  sdk.stop('livechat-inquiry-queue-observer', \"department/\" + departmentId);\n  departments.delete(departmentId);\n};\nvar appendListenerToDepartment = function (departmentId) {\n  departments.add(departmentId);\n  sdk.stream('livechat-inquiry-queue-observer', [\"department/\" + departmentId], function () {\n    function _callee6(args) {\n      var type, inquiry;\n      return _regeneratorRuntime.async(function () {\n        function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if ('type' in args) {\n                _context6.next = 2;\n                break;\n              }\n              return _context6.abrupt(\"return\");\n            case 2:\n              type = args.type, inquiry = _objectWithoutProperties(args, _excluded);\n              _context6.next = 5;\n              return _regeneratorRuntime.awrap(events[args.type](inquiry));\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n        return _callee6$;\n      }(), null, null, null, Promise);\n    }\n    return _callee6;\n  }());\n  return function () {\n    return removeListenerOfDepartment(departmentId);\n  };\n};\nvar addListenerForeachDepartment = function () {\n  var departments = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var cleanupFunctions = departments.map(function (department) {\n    return appendListenerToDepartment(department);\n  });\n  return function () {\n    return cleanupFunctions.forEach(function (cleanup) {\n      return cleanup();\n    });\n  };\n};\nvar updateInquiries = function () {\n  function _callee7() {\n    var inquiries,\n      _args7 = arguments;\n    return _regeneratorRuntime.async(function () {\n      function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            inquiries = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : [];\n            return _context7.abrupt(\"return\", inquiries.forEach(function (inquiry) {\n              return LivechatInquiry.upsert({\n                _id: inquiry._id\n              }, _objectSpread(_objectSpread({}, inquiry), {}, {\n                _updatedAt: new Date(inquiry._updatedAt)\n              }));\n            }));\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n      return _callee7$;\n    }(), null, null, null, Promise);\n  }\n  return _callee7;\n}();\nvar getAgentsDepartments = function () {\n  function _callee8(userId) {\n    var _await$sdk$rest$get2, departments;\n    return _regeneratorRuntime.async(function () {\n      function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return _regeneratorRuntime.awrap(sdk.rest.get(\"/v1/livechat/agents/\" + userId + \"/departments\", {\n              enabledDepartmentsOnly: 'true'\n            }));\n          case 2:\n            _await$sdk$rest$get2 = _context8.sent;\n            departments = _await$sdk$rest$get2.departments;\n            return _context8.abrupt(\"return\", departments);\n          case 5:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n      return _callee8$;\n    }(), null, null, null, Promise);\n  }\n  return _callee8;\n}();\nvar removeGlobalListener = function () {\n  return sdk.stop('livechat-inquiry-queue-observer', 'public');\n};\nvar addGlobalListener = function () {\n  sdk.stream('livechat-inquiry-queue-observer', ['public'], function () {\n    function _callee9(args) {\n      var type, inquiry;\n      return _regeneratorRuntime.async(function () {\n        function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if ('type' in args) {\n                _context9.next = 2;\n                break;\n              }\n              return _context9.abrupt(\"return\");\n            case 2:\n              type = args.type, inquiry = _objectWithoutProperties(args, _excluded2);\n              _context9.next = 5;\n              return _regeneratorRuntime.awrap(events[args.type](inquiry));\n            case 5:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n        return _callee9$;\n      }(), null, null, null, Promise);\n    }\n    return _callee9;\n  }());\n  return removeGlobalListener;\n};\nvar subscribe = function () {\n  function _callee11(userId) {\n    var config, agentDepartments, cleanDepartmentListeners, globalCleanup, computation;\n    return _regeneratorRuntime.async(function () {\n      function _callee11$(_context11) {\n        while (1) switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return _regeneratorRuntime.awrap(callWithErrorHandling('livechat:getRoutingConfig'));\n          case 2:\n            config = _context11.sent;\n            if (!(config !== null && config !== void 0 && config.autoAssignAgent)) {\n              _context11.next = 5;\n              break;\n            }\n            return _context11.abrupt(\"return\");\n          case 5:\n            _context11.next = 7;\n            return _regeneratorRuntime.awrap(getAgentsDepartments(userId));\n          case 7:\n            agentDepartments = _context11.sent.map(function (department) {\n              return department.departmentId;\n            });\n            // Register to all depts + public queue always to match the inquiry list returned by backend\n            cleanDepartmentListeners = addListenerForeachDepartment(agentDepartments);\n            globalCleanup = addGlobalListener();\n            computation = Tracker.autorun(function () {\n              function _callee10() {\n                var inquiriesFromAPI;\n                return _regeneratorRuntime.async(function () {\n                  function _callee10$(_context10) {\n                    while (1) switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _context10.next = 2;\n                        return _regeneratorRuntime.awrap(getInquiriesFromAPI());\n                      case 2:\n                        inquiriesFromAPI = _context10.sent;\n                        _context10.next = 5;\n                        return _regeneratorRuntime.awrap(updateInquiries(inquiriesFromAPI));\n                      case 5:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                  return _callee10$;\n                }(), null, null, null, Promise);\n              }\n              return _callee10;\n            }());\n            return _context11.abrupt(\"return\", function () {\n              LivechatInquiry.remove({});\n              removeGlobalListener();\n              cleanDepartmentListeners === null || cleanDepartmentListeners === void 0 ? void 0 : cleanDepartmentListeners();\n              globalCleanup === null || globalCleanup === void 0 ? void 0 : globalCleanup();\n              departments.clear();\n              computation.stop();\n            });\n          case 12:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n      return _callee11$;\n    }(), null, null, null, Promise);\n  }\n  return _callee11;\n}();\nvar initializeLivechatInquiryStream = function () {\n  var cleanUp;\n  return function () {\n    function _callee12() {\n      var _cleanUp;\n      var _args12 = arguments;\n      return _regeneratorRuntime.async(function () {\n        function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              (_cleanUp = cleanUp) === null || _cleanUp === void 0 ? void 0 : _cleanUp();\n              _context12.next = 3;\n              return _regeneratorRuntime.awrap(subscribe.apply(void 0, _args12));\n            case 3:\n              cleanUp = _context12.sent;\n            case 4:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n        return _callee12$;\n      }(), null, null, null, Promise);\n    }\n    return _callee12;\n  }();\n}();","map":{"version":3,"names":["_objectWithoutProperties","module","link","default","v","_regeneratorRuntime","_objectSpread","export","initializeLivechatInquiryStream","queryClient","callWithErrorHandling","settings","sdk","LivechatInquiry","departments","Set","events","added","_callee","inquiry","async","_callee$","_context","prev","next","has","department","abrupt","insert","alert","_updatedAt","Date","awrap","invalidateRoomQueries","rid","stop","Promise","changed","_callee2","_callee2$","_context2","status","removeInquiry","upsert","_id","removed","_callee3","_callee3$","_context3","invalidateQueries","reference","type","removeQueries","_callee4","_callee4$","_context4","remove","getInquiriesFromAPI","_callee5","_settings$get","count","_await$sdk$rest$get","inquiries","_callee5$","_context5","get","rest","sent","removeListenerOfDepartment","departmentId","delete","appendListenerToDepartment","add","stream","_callee6","args","_callee6$","_context6","_excluded","addListenerForeachDepartment","arguments","length","undefined","cleanupFunctions","map","forEach","cleanup","updateInquiries","_callee7","_args7","_callee7$","_context7","getAgentsDepartments","_callee8","userId","_await$sdk$rest$get2","_callee8$","_context8","enabledDepartmentsOnly","removeGlobalListener","addGlobalListener","_callee9","_callee9$","_context9","_excluded2","subscribe","_callee11","config","agentDepartments","cleanDepartmentListeners","globalCleanup","computation","_callee11$","_context11","autoAssignAgent","Tracker","autorun","_callee10","inquiriesFromAPI","_callee10$","_context10","clear","cleanUp","_callee12","_cleanUp","_args12","_callee12$","_context12","apply"],"sources":["app/livechat/client/lib/stream/queueManager.ts"],"sourcesContent":["import type { ILivechatDepartment, ILivechatInquiryRecord, IOmnichannelAgent } from '@rocket.chat/core-typings';\n\nimport { queryClient } from '../../../../../client/lib/queryClient';\nimport { callWithErrorHandling } from '../../../../../client/lib/utils/callWithErrorHandling';\nimport { settings } from '../../../../settings/client';\nimport { sdk } from '../../../../utils/client/lib/SDKClient';\nimport { LivechatInquiry } from '../../collections/LivechatInquiry';\n\nconst departments = new Set();\n\nconst events = {\n\tadded: async (inquiry: ILivechatInquiryRecord) => {\n\t\tif (!departments.has(inquiry.department)) {\n\t\t\treturn;\n\t\t}\n\n\t\tLivechatInquiry.insert({ ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tawait invalidateRoomQueries(inquiry.rid);\n\t},\n\tchanged: async (inquiry: ILivechatInquiryRecord) => {\n\t\tif (inquiry.status !== 'queued' || (inquiry.department && !departments.has(inquiry.department))) {\n\t\t\treturn removeInquiry(inquiry);\n\t\t}\n\n\t\tLivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, alert: true, _updatedAt: new Date(inquiry._updatedAt) });\n\t\tawait invalidateRoomQueries(inquiry.rid);\n\t},\n\tremoved: (inquiry: ILivechatInquiryRecord) => removeInquiry(inquiry),\n};\n\nconst invalidateRoomQueries = async (rid: string) => {\n\tawait queryClient.invalidateQueries(['rooms', { reference: rid, type: 'l' }]);\n\tawait queryClient.removeQueries(['rooms', rid]);\n\tawait queryClient.removeQueries(['/v1/rooms.info', rid]);\n};\n\nconst removeInquiry = async (inquiry: ILivechatInquiryRecord) => {\n\tawait LivechatInquiry.remove(inquiry._id);\n\treturn queryClient.invalidateQueries(['rooms', { reference: inquiry.rid, type: 'l' }]);\n};\n\nconst getInquiriesFromAPI = async () => {\n\tconst count = settings.get('Livechat_guest_pool_max_number_incoming_livechats_displayed') ?? 0;\n\tconst { inquiries } = await sdk.rest.get('/v1/livechat/inquiries.queuedForUser', { count });\n\treturn inquiries;\n};\n\nconst removeListenerOfDepartment = (departmentId: ILivechatDepartment['_id']) => {\n\tsdk.stop('livechat-inquiry-queue-observer', `department/${departmentId}`);\n\tdepartments.delete(departmentId);\n};\n\nconst appendListenerToDepartment = (departmentId: ILivechatDepartment['_id']) => {\n\tdepartments.add(departmentId);\n\tsdk.stream('livechat-inquiry-queue-observer', [`department/${departmentId}`], async (args) => {\n\t\tif (!('type' in args)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, ...inquiry } = args;\n\t\tawait events[args.type](inquiry);\n\t});\n\treturn () => removeListenerOfDepartment(departmentId);\n};\nconst addListenerForeachDepartment = (departments: ILivechatDepartment['_id'][] = []) => {\n\tconst cleanupFunctions = departments.map((department) => appendListenerToDepartment(department));\n\treturn () => cleanupFunctions.forEach((cleanup) => cleanup());\n};\n\nconst updateInquiries = async (inquiries: ILivechatInquiryRecord[] = []) =>\n\tinquiries.forEach((inquiry) => LivechatInquiry.upsert({ _id: inquiry._id }, { ...inquiry, _updatedAt: new Date(inquiry._updatedAt) }));\n\nconst getAgentsDepartments = async (userId: IOmnichannelAgent['_id']) => {\n\tconst { departments } = await sdk.rest.get(`/v1/livechat/agents/${userId}/departments`, { enabledDepartmentsOnly: 'true' });\n\treturn departments;\n};\n\nconst removeGlobalListener = () => sdk.stop('livechat-inquiry-queue-observer', 'public');\n\nconst addGlobalListener = () => {\n\tsdk.stream('livechat-inquiry-queue-observer', ['public'], async (args) => {\n\t\tif (!('type' in args)) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, ...inquiry } = args;\n\t\tawait events[args.type](inquiry);\n\t});\n\treturn removeGlobalListener;\n};\n\nconst subscribe = async (userId: IOmnichannelAgent['_id']) => {\n\tconst config = await callWithErrorHandling('livechat:getRoutingConfig');\n\tif (config?.autoAssignAgent) {\n\t\treturn;\n\t}\n\n\tconst agentDepartments = (await getAgentsDepartments(userId)).map((department) => department.departmentId);\n\n\t// Register to all depts + public queue always to match the inquiry list returned by backend\n\tconst cleanDepartmentListeners = addListenerForeachDepartment(agentDepartments);\n\tconst globalCleanup = addGlobalListener();\n\n\tconst computation = Tracker.autorun(async () => {\n\t\tconst inquiriesFromAPI = (await getInquiriesFromAPI()) as unknown as ILivechatInquiryRecord[];\n\n\t\tawait updateInquiries(inquiriesFromAPI);\n\t});\n\n\treturn () => {\n\t\tLivechatInquiry.remove({});\n\t\tremoveGlobalListener();\n\t\tcleanDepartmentListeners?.();\n\t\tglobalCleanup?.();\n\t\tdepartments.clear();\n\t\tcomputation.stop();\n\t};\n};\n\nexport const initializeLivechatInquiryStream = (() => {\n\tlet cleanUp: (() => void) | undefined;\n\n\treturn async (...args: Parameters<typeof subscribe>) => {\n\t\tcleanUp?.();\n\t\tcleanUp = await subscribe(...args);\n\t};\n})();\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"80374831ee933604ae39828927e7d2e232e0514d"}
