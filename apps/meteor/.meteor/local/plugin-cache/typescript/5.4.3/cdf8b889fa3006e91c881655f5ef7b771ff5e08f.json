{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/push/server/methods.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/push/server/methods.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/push/server/methods.ts","inputSourceMap":{"version":3,"file":"app/push/server/methods.ts","sourceRoot":"","sources":["app/push/server/methods.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAppsTokens } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { AppsTokens } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { logger } from './logger';\nimport { _matchToken } from './push';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'raix:push-update'(options: {\n\t\t\tid?: string;\n\t\t\ttoken: IAppsTokens['token'];\n\t\t\tauthToken: string;\n\t\t\tappName: string;\n\t\t\tuserId?: string;\n\t\t\tmetadata?: Record<string, unknown>;\n\t\t}): Promise<Omit<IAppsTokens, '_updatedAt'>>;\n\t\t'raix:push-setuser'(options: { id: string; userId: string }): Promise<boolean>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'raix:push-update'(options) {\n\t\tlogger.debug('Got push token from app:', options);\n\n\t\tcheck(options, {\n\t\t\tid: Match.Optional(String),\n\t\t\ttoken: _matchToken,\n\t\t\tauthToken: String,\n\t\t\tappName: String,\n\t\t\tuserId: Match.OneOf(String, null),\n\t\t\tmetadata: Match.Optional(Object),\n\t\t});\n\n\t\t// The if user id is set then user id should match on client and connection\n\t\tif (options.userId && options.userId !== this.userId) {\n\t\t\tthrow new Meteor.Error(403, 'Forbidden access');\n\t\t}\n\n\t\t// we always store the hashed token to protect users\n\t\tconst hashedToken = Accounts._hashLoginToken(options.authToken);\n\n\t\tlet doc;\n\n\t\t// lookup app by id if one was included\n\t\tif (options.id) {\n\t\t\tdoc = await AppsTokens.findOne({ _id: options.id });\n\t\t} else if (options.userId) {\n\t\t\tdoc = await AppsTokens.findOne({ userId: options.userId });\n\t\t}\n\n\t\t// No doc was found - we check the database to see if\n\t\t// we can find a match for the app via token and appName\n\t\tif (!doc) {\n\t\t\tdoc = await AppsTokens.findOne({\n\t\t\t\t$and: [\n\t\t\t\t\t{ token: options.token }, // Match token\n\t\t\t\t\t{ appName: options.appName }, // Match appName\n\t\t\t\t\t{ token: { $exists: true } }, // Make sure token exists\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\t// if we could not find the id or token then create it\n\t\tif (!doc) {\n\t\t\t// Rig default doc\n\t\t\tdoc = {\n\t\t\t\ttoken: options.token,\n\t\t\t\tauthToken: hashedToken,\n\t\t\t\tappName: options.appName,\n\t\t\t\tuserId: options.userId,\n\t\t\t\tenabled: true,\n\t\t\t\tcreatedAt: new Date(),\n\t\t\t\tupdatedAt: new Date(),\n\t\t\t\tmetadata: options.metadata || {},\n\n\t\t\t\t// XXX: We might want to check the id - Why isnt there a match for id\n\t\t\t\t// in the Meteor check... Normal length 17 (could be larger), and\n\t\t\t\t// numbers+letters are used in Random.id() with exception of 0 and 1\n\t\t\t\t_id: options.id || Random.id(),\n\t\t\t\t// The user wanted us to use a specific id, we didn't find this while\n\t\t\t\t// searching. The client could depend on the id eg. as reference so\n\t\t\t\t// we respect this and try to create a document with the selected id;\n\t\t\t};\n\n\t\t\tawait AppsTokens.insertOne(doc);\n\t\t} else {\n\t\t\t// We found the app so update the updatedAt and set the token\n\t\t\tawait AppsTokens.updateOne(\n\t\t\t\t{ _id: doc._id },\n\t\t\t\t{\n\t\t\t\t\t$set: {\n\t\t\t\t\t\tupdatedAt: new Date(),\n\t\t\t\t\t\ttoken: options.token,\n\t\t\t\t\t\tauthToken: hashedToken,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\tif (doc.token) {\n\t\t\tconst removed = (\n\t\t\t\tawait AppsTokens.deleteMany({\n\t\t\t\t\t$and: [\n\t\t\t\t\t\t{ _id: { $ne: doc._id } },\n\t\t\t\t\t\t{ token: doc.token }, // Match token\n\t\t\t\t\t\t{ appName: doc.appName }, // Match appName\n\t\t\t\t\t\t{ token: { $exists: true } }, // Make sure token exists\n\t\t\t\t\t],\n\t\t\t\t})\n\t\t\t).deletedCount;\n\n\t\t\tif (removed) {\n\t\t\t\tlogger.debug(`Removed ${removed} existing app items`);\n\t\t\t}\n\t\t}\n\n\t\tlogger.debug('updated', doc);\n\n\t\t// Return the doc we want to use\n\t\treturn doc;\n\t},\n\t// Deprecated\n\tasync 'raix:push-setuser'(id) {\n\t\tcheck(id, String);\n\t\tif (!this.userId) {\n\t\t\tthrow new Meteor.Error(403, 'Forbidden access');\n\t\t}\n\n\t\tlogger.debug(`Settings userId \"${this.userId}\" for app:`, id);\n\t\tconst found = await AppsTokens.updateOne({ _id: id }, { $set: { userId: this.userId } });\n\n\t\treturn !!found;\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/push/server/methods.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/push/server/methods.ts","inputSourceMap":{"version":3,"file":"app/push/server/methods.ts","sourceRoot":"","sources":["app/push/server/methods.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAppsTokens } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { AppsTokens } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { logger } from './logger';\nimport { _matchToken } from './push';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'raix:push-update'(options: {\n\t\t\tid?: string;\n\t\t\ttoken: IAppsTokens['token'];\n\t\t\tauthToken: string;\n\t\t\tappName: string;\n\t\t\tuserId?: string;\n\t\t\tmetadata?: Record<string, unknown>;\n\t\t}): Promise<Omit<IAppsTokens, '_updatedAt'>>;\n\t\t'raix:push-setuser'(options: { id: string; userId: string }): Promise<boolean>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'raix:push-update'(options) {\n\t\tlogger.debug('Got push token from app:', options);\n\n\t\tcheck(options, {\n\t\t\tid: Match.Optional(String),\n\t\t\ttoken: _matchToken,\n\t\t\tauthToken: String,\n\t\t\tappName: String,\n\t\t\tuserId: Match.OneOf(String, null),\n\t\t\tmetadata: Match.Optional(Object),\n\t\t});\n\n\t\t// The if user id is set then user id should match on client and connection\n\t\tif (options.userId && options.userId !== this.userId) {\n\t\t\tthrow new Meteor.Error(403, 'Forbidden access');\n\t\t}\n\n\t\t// we always store the hashed token to protect users\n\t\tconst hashedToken = Accounts._hashLoginToken(options.authToken);\n\n\t\tlet doc;\n\n\t\t// lookup app by id if one was included\n\t\tif (options.id) {\n\t\t\tdoc = await AppsTokens.findOne({ _id: options.id });\n\t\t} else if (options.userId) {\n\t\t\tdoc = await AppsTokens.findOne({ userId: options.userId });\n\t\t}\n\n\t\t// No doc was found - we check the database to see if\n\t\t// we can find a match for the app via token and appName\n\t\tif (!doc) {\n\t\t\tdoc = await AppsTokens.findOne({\n\t\t\t\t$and: [\n\t\t\t\t\t{ token: options.token }, // Match token\n\t\t\t\t\t{ appName: options.appName }, // Match appName\n\t\t\t\t\t{ token: { $exists: true } }, // Make sure token exists\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\t// if we could not find the id or token then create it\n\t\tif (!doc) {\n\t\t\t// Rig default doc\n\t\t\tdoc = {\n\t\t\t\ttoken: options.token,\n\t\t\t\tauthToken: hashedToken,\n\t\t\t\tappName: options.appName,\n\t\t\t\tuserId: options.userId,\n\t\t\t\tenabled: true,\n\t\t\t\tcreatedAt: new Date(),\n\t\t\t\tupdatedAt: new Date(),\n\t\t\t\tmetadata: options.metadata || {},\n\n\t\t\t\t// XXX: We might want to check the id - Why isnt there a match for id\n\t\t\t\t// in the Meteor check... Normal length 17 (could be larger), and\n\t\t\t\t// numbers+letters are used in Random.id() with exception of 0 and 1\n\t\t\t\t_id: options.id || Random.id(),\n\t\t\t\t// The user wanted us to use a specific id, we didn't find this while\n\t\t\t\t// searching. The client could depend on the id eg. as reference so\n\t\t\t\t// we respect this and try to create a document with the selected id;\n\t\t\t};\n\n\t\t\tawait AppsTokens.insertOne(doc);\n\t\t} else {\n\t\t\t// We found the app so update the updatedAt and set the token\n\t\t\tawait AppsTokens.updateOne(\n\t\t\t\t{ _id: doc._id },\n\t\t\t\t{\n\t\t\t\t\t$set: {\n\t\t\t\t\t\tupdatedAt: new Date(),\n\t\t\t\t\t\ttoken: options.token,\n\t\t\t\t\t\tauthToken: hashedToken,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\tif (doc.token) {\n\t\t\tconst removed = (\n\t\t\t\tawait AppsTokens.deleteMany({\n\t\t\t\t\t$and: [\n\t\t\t\t\t\t{ _id: { $ne: doc._id } },\n\t\t\t\t\t\t{ token: doc.token }, // Match token\n\t\t\t\t\t\t{ appName: doc.appName }, // Match appName\n\t\t\t\t\t\t{ token: { $exists: true } }, // Make sure token exists\n\t\t\t\t\t],\n\t\t\t\t})\n\t\t\t).deletedCount;\n\n\t\t\tif (removed) {\n\t\t\t\tlogger.debug(`Removed ${removed} existing app items`);\n\t\t\t}\n\t\t}\n\n\t\tlogger.debug('updated', doc);\n\n\t\t// Return the doc we want to use\n\t\treturn doc;\n\t},\n\t// Deprecated\n\tasync 'raix:push-setuser'(id) {\n\t\tcheck(id, String);\n\t\tif (!this.userId) {\n\t\t\tthrow new Meteor.Error(403, 'Forbidden access');\n\t\t}\n\n\t\tlogger.debug(`Settings userId \"${this.userId}\" for app:`, id);\n\t\tconst found = await AppsTokens.updateOne({ _id: id }, { $set: { userId: this.userId } });\n\n\t\treturn !!found;\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let AppsTokens;\n    module.link(\"@rocket.chat/models\", {\n      AppsTokens(v) {\n        AppsTokens = v;\n      }\n    }, 0);\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 1);\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 2);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let logger;\n    module.link(\"./logger\", {\n      logger(v) {\n        logger = v;\n      }\n    }, 5);\n    let _matchToken;\n    module.link(\"./push\", {\n      _matchToken(v) {\n        _matchToken = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async 'raix:push-update'(options) {\n        logger.debug('Got push token from app:', options);\n        check(options, {\n          id: Match.Optional(String),\n          token: _matchToken,\n          authToken: String,\n          appName: String,\n          userId: Match.OneOf(String, null),\n          metadata: Match.Optional(Object)\n        });\n        // The if user id is set then user id should match on client and connection\n        if (options.userId && options.userId !== this.userId) {\n          throw new Meteor.Error(403, 'Forbidden access');\n        }\n        // we always store the hashed token to protect users\n        const hashedToken = Accounts._hashLoginToken(options.authToken);\n        let doc;\n        // lookup app by id if one was included\n        if (options.id) {\n          doc = await AppsTokens.findOne({\n            _id: options.id\n          });\n        } else if (options.userId) {\n          doc = await AppsTokens.findOne({\n            userId: options.userId\n          });\n        }\n        // No doc was found - we check the database to see if\n        // we can find a match for the app via token and appName\n        if (!doc) {\n          doc = await AppsTokens.findOne({\n            $and: [{\n              token: options.token\n            },\n            // Match token\n            {\n              appName: options.appName\n            },\n            // Match appName\n            {\n              token: {\n                $exists: true\n              }\n            } // Make sure token exists\n            ]\n          });\n        }\n        // if we could not find the id or token then create it\n        if (!doc) {\n          // Rig default doc\n          doc = {\n            token: options.token,\n            authToken: hashedToken,\n            appName: options.appName,\n            userId: options.userId,\n            enabled: true,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            metadata: options.metadata || {},\n            // XXX: We might want to check the id - Why isnt there a match for id\n            // in the Meteor check... Normal length 17 (could be larger), and\n            // numbers+letters are used in Random.id() with exception of 0 and 1\n            _id: options.id || Random.id()\n            // The user wanted us to use a specific id, we didn't find this while\n            // searching. The client could depend on the id eg. as reference so\n            // we respect this and try to create a document with the selected id;\n          };\n          await AppsTokens.insertOne(doc);\n        } else {\n          // We found the app so update the updatedAt and set the token\n          await AppsTokens.updateOne({\n            _id: doc._id\n          }, {\n            $set: {\n              updatedAt: new Date(),\n              token: options.token,\n              authToken: hashedToken\n            }\n          });\n        }\n        if (doc.token) {\n          const removed = (await AppsTokens.deleteMany({\n            $and: [{\n              _id: {\n                $ne: doc._id\n              }\n            }, {\n              token: doc.token\n            },\n            // Match token\n            {\n              appName: doc.appName\n            },\n            // Match appName\n            {\n              token: {\n                $exists: true\n              }\n            } // Make sure token exists\n            ]\n          })).deletedCount;\n          if (removed) {\n            logger.debug(\"Removed \".concat(removed, \" existing app items\"));\n          }\n        }\n        logger.debug('updated', doc);\n        // Return the doc we want to use\n        return doc;\n      },\n      // Deprecated\n      async 'raix:push-setuser'(id) {\n        check(id, String);\n        if (!this.userId) {\n          throw new Meteor.Error(403, 'Forbidden access');\n        }\n        logger.debug(\"Settings userId \\\"\".concat(this.userId, \"\\\" for app:\"), id);\n        const found = await AppsTokens.updateOne({\n          _id: id\n        }, {\n          $set: {\n            userId: this.userId\n          }\n        });\n        return !!found;\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["AppsTokens","module","link","v","Random","Accounts","Match","check","Meteor","logger","_matchToken","__reifyWaitForDeps__","methods","raix:push-update","options","debug","id","Optional","String","token","authToken","appName","userId","OneOf","metadata","Object","Error","hashedToken","_hashLoginToken","doc","findOne","_id","$and","$exists","enabled","createdAt","Date","updatedAt","insertOne","updateOne","$set","removed","deleteMany","$ne","deletedCount","concat","raix:push-setuser","found","__reify_async_result__","_reifyError","self","async"],"sources":["app/push/server/methods.ts"],"sourcesContent":["import type { IAppsTokens } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { AppsTokens } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { logger } from './logger';\nimport { _matchToken } from './push';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'raix:push-update'(options: {\n\t\t\tid?: string;\n\t\t\ttoken: IAppsTokens['token'];\n\t\t\tauthToken: string;\n\t\t\tappName: string;\n\t\t\tuserId?: string;\n\t\t\tmetadata?: Record<string, unknown>;\n\t\t}): Promise<Omit<IAppsTokens, '_updatedAt'>>;\n\t\t'raix:push-setuser'(options: { id: string; userId: string }): Promise<boolean>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'raix:push-update'(options) {\n\t\tlogger.debug('Got push token from app:', options);\n\n\t\tcheck(options, {\n\t\t\tid: Match.Optional(String),\n\t\t\ttoken: _matchToken,\n\t\t\tauthToken: String,\n\t\t\tappName: String,\n\t\t\tuserId: Match.OneOf(String, null),\n\t\t\tmetadata: Match.Optional(Object),\n\t\t});\n\n\t\t// The if user id is set then user id should match on client and connection\n\t\tif (options.userId && options.userId !== this.userId) {\n\t\t\tthrow new Meteor.Error(403, 'Forbidden access');\n\t\t}\n\n\t\t// we always store the hashed token to protect users\n\t\tconst hashedToken = Accounts._hashLoginToken(options.authToken);\n\n\t\tlet doc;\n\n\t\t// lookup app by id if one was included\n\t\tif (options.id) {\n\t\t\tdoc = await AppsTokens.findOne({ _id: options.id });\n\t\t} else if (options.userId) {\n\t\t\tdoc = await AppsTokens.findOne({ userId: options.userId });\n\t\t}\n\n\t\t// No doc was found - we check the database to see if\n\t\t// we can find a match for the app via token and appName\n\t\tif (!doc) {\n\t\t\tdoc = await AppsTokens.findOne({\n\t\t\t\t$and: [\n\t\t\t\t\t{ token: options.token }, // Match token\n\t\t\t\t\t{ appName: options.appName }, // Match appName\n\t\t\t\t\t{ token: { $exists: true } }, // Make sure token exists\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\t// if we could not find the id or token then create it\n\t\tif (!doc) {\n\t\t\t// Rig default doc\n\t\t\tdoc = {\n\t\t\t\ttoken: options.token,\n\t\t\t\tauthToken: hashedToken,\n\t\t\t\tappName: options.appName,\n\t\t\t\tuserId: options.userId,\n\t\t\t\tenabled: true,\n\t\t\t\tcreatedAt: new Date(),\n\t\t\t\tupdatedAt: new Date(),\n\t\t\t\tmetadata: options.metadata || {},\n\n\t\t\t\t// XXX: We might want to check the id - Why isnt there a match for id\n\t\t\t\t// in the Meteor check... Normal length 17 (could be larger), and\n\t\t\t\t// numbers+letters are used in Random.id() with exception of 0 and 1\n\t\t\t\t_id: options.id || Random.id(),\n\t\t\t\t// The user wanted us to use a specific id, we didn't find this while\n\t\t\t\t// searching. The client could depend on the id eg. as reference so\n\t\t\t\t// we respect this and try to create a document with the selected id;\n\t\t\t};\n\n\t\t\tawait AppsTokens.insertOne(doc);\n\t\t} else {\n\t\t\t// We found the app so update the updatedAt and set the token\n\t\t\tawait AppsTokens.updateOne(\n\t\t\t\t{ _id: doc._id },\n\t\t\t\t{\n\t\t\t\t\t$set: {\n\t\t\t\t\t\tupdatedAt: new Date(),\n\t\t\t\t\t\ttoken: options.token,\n\t\t\t\t\t\tauthToken: hashedToken,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\tif (doc.token) {\n\t\t\tconst removed = (\n\t\t\t\tawait AppsTokens.deleteMany({\n\t\t\t\t\t$and: [\n\t\t\t\t\t\t{ _id: { $ne: doc._id } },\n\t\t\t\t\t\t{ token: doc.token }, // Match token\n\t\t\t\t\t\t{ appName: doc.appName }, // Match appName\n\t\t\t\t\t\t{ token: { $exists: true } }, // Make sure token exists\n\t\t\t\t\t],\n\t\t\t\t})\n\t\t\t).deletedCount;\n\n\t\t\tif (removed) {\n\t\t\t\tlogger.debug(`Removed ${removed} existing app items`);\n\t\t\t}\n\t\t}\n\n\t\tlogger.debug('updated', doc);\n\n\t\t// Return the doc we want to use\n\t\treturn doc;\n\t},\n\t// Deprecated\n\tasync 'raix:push-setuser'(id) {\n\t\tcheck(id, String);\n\t\tif (!this.userId) {\n\t\t\tthrow new Meteor.Error(403, 'Forbidden access');\n\t\t}\n\n\t\tlogger.debug(`Settings userId \"${this.userId}\" for app:`, id);\n\t\tconst found = await AppsTokens.updateOne({ _id: id }, { $set: { userId: this.userId } });\n\n\t\treturn !!found;\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"cdf8b889fa3006e91c881655f5ef7b771ff5e08f"}
