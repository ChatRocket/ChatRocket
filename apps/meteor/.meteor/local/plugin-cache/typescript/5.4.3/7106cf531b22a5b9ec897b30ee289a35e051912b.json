{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/hooks/handleNextAgentPreferredEvents.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/hooks/handleNextAgentPreferredEvents.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/hooks/handleNextAgentPreferredEvents.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/hooks/handleNextAgentPreferredEvents.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/hooks/handleNextAgentPreferredEvents.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser, SelectedAgent } from '@rocket.chat/core-typings';\nimport { LivechatVisitors, LivechatInquiry, LivechatRooms, Users } from '@rocket.chat/models';\n\nimport { notifyOnLivechatInquiryChanged } from '../../../../../app/lib/server/lib/notifyListener';\nimport { RoutingManager } from '../../../../../app/livechat/server/lib/RoutingManager';\nimport { settings } from '../../../../../app/settings/server';\nimport { callbacks } from '../../../../../lib/callbacks';\n\nlet contactManagerPreferred = false;\nlet lastChattedAgentPreferred = false;\n\nconst normalizeDefaultAgent = (agent?: Pick<IUser, '_id' | 'username'> | null): SelectedAgent | null => {\n\tif (!agent) {\n\t\treturn null;\n\t}\n\n\tconst { _id: agentId, username } = agent;\n\treturn { agentId, username };\n};\n\nconst getDefaultAgent = async (username?: string): Promise<SelectedAgent | null> => {\n\tif (!username) {\n\t\treturn null;\n\t}\n\n\treturn normalizeDefaultAgent(await Users.findOneOnlineAgentByUserList(username, { projection: { _id: 1, username: 1 } }));\n};\n\nsettings.watch<boolean>('Livechat_last_chatted_agent_routing', (value) => {\n\tlastChattedAgentPreferred = value;\n\tif (!lastChattedAgentPreferred) {\n\t\tcallbacks.remove('livechat.onMaxNumberSimultaneousChatsReached', 'livechat-on-max-number-simultaneous-chats-reached');\n\t\tcallbacks.remove('livechat.afterTakeInquiry', 'livechat-save-default-agent-after-take-inquiry');\n\t\treturn;\n\t}\n\n\tcallbacks.add(\n\t\t'livechat.afterTakeInquiry',\n\t\tasync ({ inquiry }, agent) => {\n\t\t\tif (!inquiry || !agent) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tif (!RoutingManager.getConfig()?.autoAssignAgent) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tconst { v: { token } = {} } = inquiry;\n\t\t\tif (!token) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tawait LivechatVisitors.updateLastAgentByToken(token, { ...agent, ts: new Date() });\n\n\t\t\treturn inquiry;\n\t\t},\n\t\tcallbacks.priority.MEDIUM,\n\t\t'livechat-save-default-agent-after-take-inquiry',\n\t);\n\n\tcallbacks.add(\n\t\t'livechat.onMaxNumberSimultaneousChatsReached',\n\t\tasync (inquiry) => {\n\t\t\tif (!inquiry?.defaultAgent) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tif (!RoutingManager.getConfig()?.autoAssignAgent) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tawait LivechatInquiry.removeDefaultAgentById(inquiry._id);\n\n\t\t\tvoid notifyOnLivechatInquiryChanged(inquiry, 'updated', {\n\t\t\t\tdefaultAgent: undefined,\n\t\t\t});\n\n\t\t\treturn LivechatInquiry.findOneById(inquiry._id);\n\t\t},\n\t\tcallbacks.priority.MEDIUM,\n\t\t'livechat-on-max-number-simultaneous-chats-reached',\n\t);\n});\n\nsettings.watch<boolean>('Omnichannel_contact_manager_routing', (value) => {\n\tcontactManagerPreferred = value;\n});\n\ncallbacks.add(\n\t'livechat.checkDefaultAgentOnNewRoom',\n\tasync (defaultAgent, defaultGuest) => {\n\t\tif (defaultAgent || !defaultGuest) {\n\t\t\treturn defaultAgent;\n\t\t}\n\n\t\tconst { _id: guestId } = defaultGuest;\n\t\tconst guest = await LivechatVisitors.findOneEnabledById(guestId, {\n\t\t\tprojection: { lastAgent: 1, token: 1, contactManager: 1 },\n\t\t});\n\t\tif (!guest) {\n\t\t\treturn defaultAgent;\n\t\t}\n\n\t\tconst { lastAgent, token, contactManager } = guest;\n\t\tconst guestManager = contactManager?.username && contactManagerPreferred && getDefaultAgent(contactManager?.username);\n\t\tif (guestManager) {\n\t\t\treturn guestManager;\n\t\t}\n\n\t\tif (!lastChattedAgentPreferred) {\n\t\t\treturn defaultAgent;\n\t\t}\n\n\t\tconst guestAgent = lastAgent?.username && getDefaultAgent(lastAgent?.username);\n\t\tif (guestAgent) {\n\t\t\treturn guestAgent;\n\t\t}\n\n\t\tconst room = await LivechatRooms.findOneLastServedAndClosedByVisitorToken(token, {\n\t\t\tprojection: { servedBy: 1 },\n\t\t});\n\t\tif (!room?.servedBy) {\n\t\t\treturn defaultAgent;\n\t\t}\n\n\t\tconst {\n\t\t\tservedBy: { username: usernameByRoom },\n\t\t} = room;\n\t\tif (!usernameByRoom) {\n\t\t\treturn defaultAgent;\n\t\t}\n\t\tconst lastRoomAgent = normalizeDefaultAgent(\n\t\t\tawait Users.findOneOnlineAgentByUserList(usernameByRoom, { projection: { _id: 1, username: 1 } }),\n\t\t);\n\t\treturn lastRoomAgent ?? defaultAgent;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-check-default-agent-new-room',\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/hooks/handleNextAgentPreferredEvents.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/hooks/handleNextAgentPreferredEvents.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/hooks/handleNextAgentPreferredEvents.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/hooks/handleNextAgentPreferredEvents.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser, SelectedAgent } from '@rocket.chat/core-typings';\nimport { LivechatVisitors, LivechatInquiry, LivechatRooms, Users } from '@rocket.chat/models';\n\nimport { notifyOnLivechatInquiryChanged } from '../../../../../app/lib/server/lib/notifyListener';\nimport { RoutingManager } from '../../../../../app/livechat/server/lib/RoutingManager';\nimport { settings } from '../../../../../app/settings/server';\nimport { callbacks } from '../../../../../lib/callbacks';\n\nlet contactManagerPreferred = false;\nlet lastChattedAgentPreferred = false;\n\nconst normalizeDefaultAgent = (agent?: Pick<IUser, '_id' | 'username'> | null): SelectedAgent | null => {\n\tif (!agent) {\n\t\treturn null;\n\t}\n\n\tconst { _id: agentId, username } = agent;\n\treturn { agentId, username };\n};\n\nconst getDefaultAgent = async (username?: string): Promise<SelectedAgent | null> => {\n\tif (!username) {\n\t\treturn null;\n\t}\n\n\treturn normalizeDefaultAgent(await Users.findOneOnlineAgentByUserList(username, { projection: { _id: 1, username: 1 } }));\n};\n\nsettings.watch<boolean>('Livechat_last_chatted_agent_routing', (value) => {\n\tlastChattedAgentPreferred = value;\n\tif (!lastChattedAgentPreferred) {\n\t\tcallbacks.remove('livechat.onMaxNumberSimultaneousChatsReached', 'livechat-on-max-number-simultaneous-chats-reached');\n\t\tcallbacks.remove('livechat.afterTakeInquiry', 'livechat-save-default-agent-after-take-inquiry');\n\t\treturn;\n\t}\n\n\tcallbacks.add(\n\t\t'livechat.afterTakeInquiry',\n\t\tasync ({ inquiry }, agent) => {\n\t\t\tif (!inquiry || !agent) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tif (!RoutingManager.getConfig()?.autoAssignAgent) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tconst { v: { token } = {} } = inquiry;\n\t\t\tif (!token) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tawait LivechatVisitors.updateLastAgentByToken(token, { ...agent, ts: new Date() });\n\n\t\t\treturn inquiry;\n\t\t},\n\t\tcallbacks.priority.MEDIUM,\n\t\t'livechat-save-default-agent-after-take-inquiry',\n\t);\n\n\tcallbacks.add(\n\t\t'livechat.onMaxNumberSimultaneousChatsReached',\n\t\tasync (inquiry) => {\n\t\t\tif (!inquiry?.defaultAgent) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tif (!RoutingManager.getConfig()?.autoAssignAgent) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tawait LivechatInquiry.removeDefaultAgentById(inquiry._id);\n\n\t\t\tvoid notifyOnLivechatInquiryChanged(inquiry, 'updated', {\n\t\t\t\tdefaultAgent: undefined,\n\t\t\t});\n\n\t\t\treturn LivechatInquiry.findOneById(inquiry._id);\n\t\t},\n\t\tcallbacks.priority.MEDIUM,\n\t\t'livechat-on-max-number-simultaneous-chats-reached',\n\t);\n});\n\nsettings.watch<boolean>('Omnichannel_contact_manager_routing', (value) => {\n\tcontactManagerPreferred = value;\n});\n\ncallbacks.add(\n\t'livechat.checkDefaultAgentOnNewRoom',\n\tasync (defaultAgent, defaultGuest) => {\n\t\tif (defaultAgent || !defaultGuest) {\n\t\t\treturn defaultAgent;\n\t\t}\n\n\t\tconst { _id: guestId } = defaultGuest;\n\t\tconst guest = await LivechatVisitors.findOneEnabledById(guestId, {\n\t\t\tprojection: { lastAgent: 1, token: 1, contactManager: 1 },\n\t\t});\n\t\tif (!guest) {\n\t\t\treturn defaultAgent;\n\t\t}\n\n\t\tconst { lastAgent, token, contactManager } = guest;\n\t\tconst guestManager = contactManager?.username && contactManagerPreferred && getDefaultAgent(contactManager?.username);\n\t\tif (guestManager) {\n\t\t\treturn guestManager;\n\t\t}\n\n\t\tif (!lastChattedAgentPreferred) {\n\t\t\treturn defaultAgent;\n\t\t}\n\n\t\tconst guestAgent = lastAgent?.username && getDefaultAgent(lastAgent?.username);\n\t\tif (guestAgent) {\n\t\t\treturn guestAgent;\n\t\t}\n\n\t\tconst room = await LivechatRooms.findOneLastServedAndClosedByVisitorToken(token, {\n\t\t\tprojection: { servedBy: 1 },\n\t\t});\n\t\tif (!room?.servedBy) {\n\t\t\treturn defaultAgent;\n\t\t}\n\n\t\tconst {\n\t\t\tservedBy: { username: usernameByRoom },\n\t\t} = room;\n\t\tif (!usernameByRoom) {\n\t\t\treturn defaultAgent;\n\t\t}\n\t\tconst lastRoomAgent = normalizeDefaultAgent(\n\t\t\tawait Users.findOneOnlineAgentByUserList(usernameByRoom, { projection: { _id: 1, username: 1 } }),\n\t\t);\n\t\treturn lastRoomAgent ?? defaultAgent;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-check-default-agent-new-room',\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let LivechatVisitors, LivechatInquiry, LivechatRooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      LivechatVisitors(v) {\n        LivechatVisitors = v;\n      },\n      LivechatInquiry(v) {\n        LivechatInquiry = v;\n      },\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let notifyOnLivechatInquiryChanged;\n    module.link(\"../../../../../app/lib/server/lib/notifyListener\", {\n      notifyOnLivechatInquiryChanged(v) {\n        notifyOnLivechatInquiryChanged = v;\n      }\n    }, 1);\n    let RoutingManager;\n    module.link(\"../../../../../app/livechat/server/lib/RoutingManager\", {\n      RoutingManager(v) {\n        RoutingManager = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    let callbacks;\n    module.link(\"../../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    let contactManagerPreferred = false;\n    let lastChattedAgentPreferred = false;\n    const normalizeDefaultAgent = agent => {\n      if (!agent) {\n        return null;\n      }\n      const {\n        _id: agentId,\n        username\n      } = agent;\n      return {\n        agentId,\n        username\n      };\n    };\n    const getDefaultAgent = async username => {\n      if (!username) {\n        return null;\n      }\n      return normalizeDefaultAgent(await Users.findOneOnlineAgentByUserList(username, {\n        projection: {\n          _id: 1,\n          username: 1\n        }\n      }));\n    };\n    settings.watch('Livechat_last_chatted_agent_routing', value => {\n      lastChattedAgentPreferred = value;\n      if (!lastChattedAgentPreferred) {\n        callbacks.remove('livechat.onMaxNumberSimultaneousChatsReached', 'livechat-on-max-number-simultaneous-chats-reached');\n        callbacks.remove('livechat.afterTakeInquiry', 'livechat-save-default-agent-after-take-inquiry');\n        return;\n      }\n      callbacks.add('livechat.afterTakeInquiry', async (_ref, agent) => {\n        var _RoutingManager$getCo;\n        let {\n          inquiry\n        } = _ref;\n        if (!inquiry || !agent) {\n          return inquiry;\n        }\n        if (!((_RoutingManager$getCo = RoutingManager.getConfig()) !== null && _RoutingManager$getCo !== void 0 && _RoutingManager$getCo.autoAssignAgent)) {\n          return inquiry;\n        }\n        const {\n          v: {\n            token\n          } = {}\n        } = inquiry;\n        if (!token) {\n          return inquiry;\n        }\n        await LivechatVisitors.updateLastAgentByToken(token, _objectSpread(_objectSpread({}, agent), {}, {\n          ts: new Date()\n        }));\n        return inquiry;\n      }, callbacks.priority.MEDIUM, 'livechat-save-default-agent-after-take-inquiry');\n      callbacks.add('livechat.onMaxNumberSimultaneousChatsReached', async inquiry => {\n        var _RoutingManager$getCo2;\n        if (!(inquiry !== null && inquiry !== void 0 && inquiry.defaultAgent)) {\n          return inquiry;\n        }\n        if (!((_RoutingManager$getCo2 = RoutingManager.getConfig()) !== null && _RoutingManager$getCo2 !== void 0 && _RoutingManager$getCo2.autoAssignAgent)) {\n          return inquiry;\n        }\n        await LivechatInquiry.removeDefaultAgentById(inquiry._id);\n        void notifyOnLivechatInquiryChanged(inquiry, 'updated', {\n          defaultAgent: undefined\n        });\n        return LivechatInquiry.findOneById(inquiry._id);\n      }, callbacks.priority.MEDIUM, 'livechat-on-max-number-simultaneous-chats-reached');\n    });\n    settings.watch('Omnichannel_contact_manager_routing', value => {\n      contactManagerPreferred = value;\n    });\n    callbacks.add('livechat.checkDefaultAgentOnNewRoom', async (defaultAgent, defaultGuest) => {\n      if (defaultAgent || !defaultGuest) {\n        return defaultAgent;\n      }\n      const {\n        _id: guestId\n      } = defaultGuest;\n      const guest = await LivechatVisitors.findOneEnabledById(guestId, {\n        projection: {\n          lastAgent: 1,\n          token: 1,\n          contactManager: 1\n        }\n      });\n      if (!guest) {\n        return defaultAgent;\n      }\n      const {\n        lastAgent,\n        token,\n        contactManager\n      } = guest;\n      const guestManager = (contactManager === null || contactManager === void 0 ? void 0 : contactManager.username) && contactManagerPreferred && getDefaultAgent(contactManager === null || contactManager === void 0 ? void 0 : contactManager.username);\n      if (guestManager) {\n        return guestManager;\n      }\n      if (!lastChattedAgentPreferred) {\n        return defaultAgent;\n      }\n      const guestAgent = (lastAgent === null || lastAgent === void 0 ? void 0 : lastAgent.username) && getDefaultAgent(lastAgent === null || lastAgent === void 0 ? void 0 : lastAgent.username);\n      if (guestAgent) {\n        return guestAgent;\n      }\n      const room = await LivechatRooms.findOneLastServedAndClosedByVisitorToken(token, {\n        projection: {\n          servedBy: 1\n        }\n      });\n      if (!(room !== null && room !== void 0 && room.servedBy)) {\n        return defaultAgent;\n      }\n      const {\n        servedBy: {\n          username: usernameByRoom\n        }\n      } = room;\n      if (!usernameByRoom) {\n        return defaultAgent;\n      }\n      const lastRoomAgent = normalizeDefaultAgent(await Users.findOneOnlineAgentByUserList(usernameByRoom, {\n        projection: {\n          _id: 1,\n          username: 1\n        }\n      }));\n      return lastRoomAgent !== null && lastRoomAgent !== void 0 ? lastRoomAgent : defaultAgent;\n    }, callbacks.priority.MEDIUM, 'livechat-check-default-agent-new-room');\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","LivechatVisitors","LivechatInquiry","LivechatRooms","Users","notifyOnLivechatInquiryChanged","RoutingManager","settings","callbacks","__reifyWaitForDeps__","contactManagerPreferred","lastChattedAgentPreferred","normalizeDefaultAgent","agent","_id","agentId","username","getDefaultAgent","findOneOnlineAgentByUserList","projection","watch","value","remove","add","_ref","_RoutingManager$getCo","inquiry","getConfig","autoAssignAgent","token","updateLastAgentByToken","ts","Date","priority","MEDIUM","_RoutingManager$getCo2","defaultAgent","removeDefaultAgentById","undefined","findOneById","defaultGuest","guestId","guest","findOneEnabledById","lastAgent","contactManager","guestManager","guestAgent","room","findOneLastServedAndClosedByVisitorToken","servedBy","usernameByRoom","lastRoomAgent","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/hooks/handleNextAgentPreferredEvents.ts"],"sourcesContent":["import type { IUser, SelectedAgent } from '@rocket.chat/core-typings';\nimport { LivechatVisitors, LivechatInquiry, LivechatRooms, Users } from '@rocket.chat/models';\n\nimport { notifyOnLivechatInquiryChanged } from '../../../../../app/lib/server/lib/notifyListener';\nimport { RoutingManager } from '../../../../../app/livechat/server/lib/RoutingManager';\nimport { settings } from '../../../../../app/settings/server';\nimport { callbacks } from '../../../../../lib/callbacks';\n\nlet contactManagerPreferred = false;\nlet lastChattedAgentPreferred = false;\n\nconst normalizeDefaultAgent = (agent?: Pick<IUser, '_id' | 'username'> | null): SelectedAgent | null => {\n\tif (!agent) {\n\t\treturn null;\n\t}\n\n\tconst { _id: agentId, username } = agent;\n\treturn { agentId, username };\n};\n\nconst getDefaultAgent = async (username?: string): Promise<SelectedAgent | null> => {\n\tif (!username) {\n\t\treturn null;\n\t}\n\n\treturn normalizeDefaultAgent(await Users.findOneOnlineAgentByUserList(username, { projection: { _id: 1, username: 1 } }));\n};\n\nsettings.watch<boolean>('Livechat_last_chatted_agent_routing', (value) => {\n\tlastChattedAgentPreferred = value;\n\tif (!lastChattedAgentPreferred) {\n\t\tcallbacks.remove('livechat.onMaxNumberSimultaneousChatsReached', 'livechat-on-max-number-simultaneous-chats-reached');\n\t\tcallbacks.remove('livechat.afterTakeInquiry', 'livechat-save-default-agent-after-take-inquiry');\n\t\treturn;\n\t}\n\n\tcallbacks.add(\n\t\t'livechat.afterTakeInquiry',\n\t\tasync ({ inquiry }, agent) => {\n\t\t\tif (!inquiry || !agent) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tif (!RoutingManager.getConfig()?.autoAssignAgent) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tconst { v: { token } = {} } = inquiry;\n\t\t\tif (!token) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tawait LivechatVisitors.updateLastAgentByToken(token, { ...agent, ts: new Date() });\n\n\t\t\treturn inquiry;\n\t\t},\n\t\tcallbacks.priority.MEDIUM,\n\t\t'livechat-save-default-agent-after-take-inquiry',\n\t);\n\n\tcallbacks.add(\n\t\t'livechat.onMaxNumberSimultaneousChatsReached',\n\t\tasync (inquiry) => {\n\t\t\tif (!inquiry?.defaultAgent) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tif (!RoutingManager.getConfig()?.autoAssignAgent) {\n\t\t\t\treturn inquiry;\n\t\t\t}\n\n\t\t\tawait LivechatInquiry.removeDefaultAgentById(inquiry._id);\n\n\t\t\tvoid notifyOnLivechatInquiryChanged(inquiry, 'updated', {\n\t\t\t\tdefaultAgent: undefined,\n\t\t\t});\n\n\t\t\treturn LivechatInquiry.findOneById(inquiry._id);\n\t\t},\n\t\tcallbacks.priority.MEDIUM,\n\t\t'livechat-on-max-number-simultaneous-chats-reached',\n\t);\n});\n\nsettings.watch<boolean>('Omnichannel_contact_manager_routing', (value) => {\n\tcontactManagerPreferred = value;\n});\n\ncallbacks.add(\n\t'livechat.checkDefaultAgentOnNewRoom',\n\tasync (defaultAgent, defaultGuest) => {\n\t\tif (defaultAgent || !defaultGuest) {\n\t\t\treturn defaultAgent;\n\t\t}\n\n\t\tconst { _id: guestId } = defaultGuest;\n\t\tconst guest = await LivechatVisitors.findOneEnabledById(guestId, {\n\t\t\tprojection: { lastAgent: 1, token: 1, contactManager: 1 },\n\t\t});\n\t\tif (!guest) {\n\t\t\treturn defaultAgent;\n\t\t}\n\n\t\tconst { lastAgent, token, contactManager } = guest;\n\t\tconst guestManager = contactManager?.username && contactManagerPreferred && getDefaultAgent(contactManager?.username);\n\t\tif (guestManager) {\n\t\t\treturn guestManager;\n\t\t}\n\n\t\tif (!lastChattedAgentPreferred) {\n\t\t\treturn defaultAgent;\n\t\t}\n\n\t\tconst guestAgent = lastAgent?.username && getDefaultAgent(lastAgent?.username);\n\t\tif (guestAgent) {\n\t\t\treturn guestAgent;\n\t\t}\n\n\t\tconst room = await LivechatRooms.findOneLastServedAndClosedByVisitorToken(token, {\n\t\t\tprojection: { servedBy: 1 },\n\t\t});\n\t\tif (!room?.servedBy) {\n\t\t\treturn defaultAgent;\n\t\t}\n\n\t\tconst {\n\t\t\tservedBy: { username: usernameByRoom },\n\t\t} = room;\n\t\tif (!usernameByRoom) {\n\t\t\treturn defaultAgent;\n\t\t}\n\t\tconst lastRoomAgent = normalizeDefaultAgent(\n\t\t\tawait Users.findOneOnlineAgentByUserList(usernameByRoom, { projection: { _id: 1, username: 1 } }),\n\t\t);\n\t\treturn lastRoomAgent ?? defaultAgent;\n\t},\n\tcallbacks.priority.MEDIUM,\n\t'livechat-check-default-agent-new-room',\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7106cf531b22a5b9ec897b30ee289a35e051912b"}
