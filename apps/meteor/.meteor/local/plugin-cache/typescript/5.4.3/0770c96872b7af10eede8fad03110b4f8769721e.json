{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/lib/settings.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/meteor-accounts-saml/server/lib/settings.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/lib/settings.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/lib/settings.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/lib/settings.ts"],"names":[],"mappings":"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","sourcesContent":["import type { SAMLConfiguration } from '@rocket.chat/core-typings';\nimport { LoginServiceConfiguration } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { SAMLUtils } from './Utils';\nimport {\n\tdefaultAuthnContextTemplate,\n\tdefaultAuthRequestTemplate,\n\tdefaultLogoutResponseTemplate,\n\tdefaultLogoutRequestTemplate,\n\tdefaultNameIDTemplate,\n\tdefaultIdentifierFormat,\n\tdefaultAuthnContext,\n\tdefaultMetadataTemplate,\n\tdefaultMetadataCertificateTemplate,\n} from './constants';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport {\n\tnotifyOnLoginServiceConfigurationChanged,\n\tnotifyOnLoginServiceConfigurationChangedByService,\n} from '../../../lib/server/lib/notifyListener';\nimport { settings, settingsRegistry } from '../../../settings/server';\nimport type { IServiceProviderOptions } from '../definition/IServiceProviderOptions';\n\nconst getSamlConfigs = function (service: string): SAMLConfiguration {\n\tconst configs: SAMLConfiguration = {\n\t\tbuttonLabelText: settings.get(`${service}_button_label_text`),\n\t\tbuttonLabelColor: settings.get(`${service}_button_label_color`),\n\t\tbuttonColor: settings.get(`${service}_button_color`),\n\t\tclientConfig: {\n\t\t\tprovider: settings.get<string>(`${service}_provider`),\n\t\t},\n\t\tentryPoint: settings.get(`${service}_entry_point`),\n\t\tidpSLORedirectURL: settings.get(`${service}_idp_slo_redirect_url`),\n\t\tusernameNormalize: settings.get(`${service}_username_normalize`),\n\t\timmutableProperty: settings.get(`${service}_immutable_property`),\n\t\tgenerateUsername: settings.get(`${service}_generate_username`),\n\t\tdebug: settings.get(`${service}_debug`),\n\t\tnameOverwrite: settings.get(`${service}_name_overwrite`),\n\t\tmailOverwrite: settings.get(`${service}_mail_overwrite`),\n\t\tissuer: settings.get(`${service}_issuer`),\n\t\tlogoutBehaviour: settings.get(`${service}_logout_behaviour`),\n\t\tdefaultUserRole: settings.get(`${service}_default_user_role`),\n\t\tsecret: {\n\t\t\tprivateKey: settings.get(`${service}_private_key`),\n\t\t\tpublicCert: settings.get(`${service}_public_cert`),\n\t\t\t// People often overlook the instruction to remove the header and footer of the certificate on this specific setting, so let's do it for them.\n\t\t\tcert: SAMLUtils.normalizeCert((settings.get(`${service}_cert`) as string) || ''),\n\t\t},\n\t\tsignatureValidationType: settings.get(`${service}_signature_validation_type`),\n\t\tuserDataFieldMap: settings.get(`${service}_user_data_fieldmap`),\n\t\tallowedClockDrift: settings.get(`${service}_allowed_clock_drift`),\n\t\tcustomAuthnContext: defaultAuthnContext,\n\t\tauthnContextComparison: 'exact',\n\t\tidentifierFormat: defaultIdentifierFormat,\n\t\tnameIDPolicyTemplate: defaultNameIDTemplate,\n\t\tauthnContextTemplate: defaultAuthnContextTemplate,\n\t\tauthRequestTemplate: defaultAuthRequestTemplate,\n\t\tlogoutResponseTemplate: defaultLogoutResponseTemplate,\n\t\tlogoutRequestTemplate: defaultLogoutRequestTemplate,\n\t\tmetadataCertificateTemplate: defaultMetadataCertificateTemplate,\n\t\tmetadataTemplate: defaultMetadataTemplate,\n\t\tchannelsAttributeUpdate: settings.get(`${service}_channels_update`),\n\t\tincludePrivateChannelsInUpdate: settings.get(`${service}_include_private_channels_update`),\n\t};\n\n\tSAMLUtils.events.emit('loadConfigs', service, configs);\n\treturn configs;\n};\n\nconst configureSamlService = function (samlConfigs: Record<string, any>): IServiceProviderOptions {\n\tlet privateCert = null;\n\tlet privateKey = null;\n\n\tif (samlConfigs.secret.privateKey && samlConfigs.secret.publicCert) {\n\t\tprivateKey = samlConfigs.secret.privateKey;\n\t\tprivateCert = samlConfigs.secret.publicCert;\n\t} else if (samlConfigs.secret.privateKey || samlConfigs.secret.publicCert) {\n\t\tSAMLUtils.error('SAML Service: You must specify both cert and key files.');\n\t}\n\n\tSAMLUtils.updateGlobalSettings(samlConfigs);\n\n\treturn {\n\t\tprovider: samlConfigs.clientConfig.provider,\n\t\tentryPoint: samlConfigs.entryPoint,\n\t\tidpSLORedirectURL: samlConfigs.idpSLORedirectURL,\n\t\tissuer: samlConfigs.issuer,\n\t\tcert: samlConfigs.secret.cert,\n\t\tprivateCert,\n\t\tprivateKey,\n\t\tcustomAuthnContext: samlConfigs.customAuthnContext,\n\t\tauthnContextComparison: samlConfigs.authnContextComparison,\n\t\tdefaultUserRole: samlConfigs.defaultUserRole,\n\t\tallowedClockDrift: parseInt(samlConfigs.allowedClockDrift) || 0,\n\t\tsignatureValidationType: samlConfigs.signatureValidationType,\n\t\tidentifierFormat: samlConfigs.identifierFormat,\n\t\tnameIDPolicyTemplate: samlConfigs.nameIDPolicyTemplate,\n\t\tauthnContextTemplate: samlConfigs.authnContextTemplate,\n\t\tauthRequestTemplate: samlConfigs.authRequestTemplate,\n\t\tlogoutResponseTemplate: samlConfigs.logoutResponseTemplate,\n\t\tlogoutRequestTemplate: samlConfigs.logoutRequestTemplate,\n\t\tmetadataCertificateTemplate: samlConfigs.metadataCertificateTemplate,\n\t\tmetadataTemplate: samlConfigs.metadataTemplate,\n\t\tcallbackUrl: Meteor.absoluteUrl(`_saml/validate/${samlConfigs.clientConfig.provider}`),\n\t};\n};\n\nexport const loadSamlServiceProviders = async function (): Promise<void> {\n\tconst serviceName = 'saml';\n\tconst services = settings.getByRegexp(/^(SAML_Custom_)[a-z]+$/i);\n\n\tif (!services) {\n\t\treturn SAMLUtils.setServiceProvidersList([]);\n\t}\n\n\tconst providers = (\n\t\tawait Promise.all(\n\t\t\tservices.map(async ([key, value]) => {\n\t\t\t\tif (value === true) {\n\t\t\t\t\tconst samlConfigs = getSamlConfigs(key);\n\t\t\t\t\tSAMLUtils.log(key);\n\t\t\t\t\tawait LoginServiceConfiguration.createOrUpdateService(serviceName, samlConfigs);\n\t\t\t\t\tvoid notifyOnLoginServiceConfigurationChangedByService(serviceName);\n\t\t\t\t\treturn configureSamlService(samlConfigs);\n\t\t\t\t}\n\n\t\t\t\tconst service = await LoginServiceConfiguration.findOneByService(serviceName, { projection: { _id: 1 } });\n\t\t\t\tif (!service?._id) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst { deletedCount } = await LoginServiceConfiguration.removeService(service._id);\n\t\t\t\tif (!deletedCount) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvoid notifyOnLoginServiceConfigurationChanged({ _id: service._id }, 'removed');\n\n\t\t\t\treturn false;\n\t\t\t}),\n\t\t)\n\t).filter((e) => e) as IServiceProviderOptions[];\n\n\tSAMLUtils.setServiceProvidersList(providers);\n};\n\nexport const addSamlService = function (name: string): void {\n\tSystemLogger.warn(`Adding ${name} is deprecated`);\n};\n\nexport const addSettings = async function (name: string): Promise<void> {\n\tawait settingsRegistry.addGroup('SAML', async function () {\n\t\tawait this.with(\n\t\t\t{\n\t\t\t\ttab: 'SAML_Connection',\n\t\t\t},\n\t\t\tasync function () {\n\t\t\t\tawait this.add(`SAML_Custom_${name}`, false, {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Enable',\n\t\t\t\t\tpublic: true,\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_provider`, 'provider-name', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Provider',\n\t\t\t\t\tpublic: true,\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_entry_point`, 'https://example.com/simplesaml/saml2/idp/SSOService.php', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Entry_point',\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_idp_slo_redirect_url`, 'https://example.com/simplesaml/saml2/idp/SingleLogoutService.php', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_IDP_SLO_Redirect_URL',\n\t\t\t\t\tpublic: true,\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_issuer`, 'https://your-rocket-chat/_saml/metadata/provider-name', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Issuer',\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_debug`, false, {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Debug',\n\t\t\t\t});\n\n\t\t\t\tawait this.section('SAML_Section_2_Certificate', async function () {\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_cert`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Cert',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\tsecret: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_public_cert`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Public_Cert',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_signature_validation_type`, 'All', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'Response', i18nLabel: 'SAML_Custom_signature_validation_response' },\n\t\t\t\t\t\t\t{ key: 'Assertion', i18nLabel: 'SAML_Custom_signature_validation_assertion' },\n\t\t\t\t\t\t\t{ key: 'Either', i18nLabel: 'SAML_Custom_signature_validation_either' },\n\t\t\t\t\t\t\t{ key: 'All', i18nLabel: 'SAML_Custom_signature_validation_all' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_signature_validation_type',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_signature_validation_type_description',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_private_key`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Private_Key',\n\t\t\t\t\t\tsecret: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\n\t\tawait this.with(\n\t\t\t{\n\t\t\t\ttab: 'SAML_General',\n\t\t\t},\n\t\t\tasync function () {\n\t\t\t\tawait this.section('SAML_Section_1_User_Interface', async function () {\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_button_label_text`, 'SAML', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Text',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_button_label_color`, '#FFFFFF', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Color',\n\t\t\t\t\t\talert: 'OAuth_button_colors_alert',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_button_color`, '#1d74f5', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Color',\n\t\t\t\t\t\talert: 'OAuth_button_colors_alert',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('SAML_Section_3_Behavior', async function () {\n\t\t\t\t\t// Settings to customize behavior\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_generate_username`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Generate_Username',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_username_normalize`, 'None', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'None', i18nLabel: 'SAML_Custom_Username_Normalize_None' },\n\t\t\t\t\t\t\t{ key: 'Lowercase', i18nLabel: 'SAML_Custom_Username_Normalize_Lowercase' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Username_Normalize',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_immutable_property`, 'EMail', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'Username', i18nLabel: 'SAML_Custom_Immutable_Property_Username' },\n\t\t\t\t\t\t\t{ key: 'EMail', i18nLabel: 'SAML_Custom_Immutable_Property_EMail' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Immutable_Property',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_name_overwrite`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_name_overwrite',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_mail_overwrite`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_mail_overwrite',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_logout_behaviour`, 'SAML', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'SAML', i18nLabel: 'SAML_Custom_Logout_Behaviour_Terminate_SAML_Session' },\n\t\t\t\t\t\t\t{ key: 'Local', i18nLabel: 'SAML_Custom_Logout_Behaviour_End_Only_RocketChat' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Logout_Behaviour',\n\t\t\t\t\t\tpublic: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_channels_update`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_channels_update',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_channels_update_description',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_include_private_channels_update`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_include_private_channels_update',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_include_private_channels_update_description',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_default_user_role`, 'user', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Default_User_Role',\n\t\t\t\t\t\ti18nDescription: 'SAML_Default_User_Role_Description',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_allowed_clock_drift`, 0, {\n\t\t\t\t\t\ttype: 'int',\n\t\t\t\t\t\tinvalidValue: 0,\n\t\t\t\t\t\ti18nLabel: 'SAML_Allowed_Clock_Drift',\n\t\t\t\t\t\ti18nDescription: 'SAML_Allowed_Clock_Drift_Description',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('SAML_Section_5_Mapping', async function () {\n\t\t\t\t\t// Data Mapping Settings\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_user_data_fieldmap`, '{\"username\":\"username\", \"email\":\"email\", \"name\": \"cn\"}', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_user_data_fieldmap',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_user_data_fieldmap_description',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\n\t\tSAMLUtils.events.emit('addSettings', name);\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/lib/settings.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-accounts-saml/server/lib/settings.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/lib/settings.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/lib/settings.ts"],"names":[],"mappings":"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","sourcesContent":["import type { SAMLConfiguration } from '@rocket.chat/core-typings';\nimport { LoginServiceConfiguration } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { SAMLUtils } from './Utils';\nimport {\n\tdefaultAuthnContextTemplate,\n\tdefaultAuthRequestTemplate,\n\tdefaultLogoutResponseTemplate,\n\tdefaultLogoutRequestTemplate,\n\tdefaultNameIDTemplate,\n\tdefaultIdentifierFormat,\n\tdefaultAuthnContext,\n\tdefaultMetadataTemplate,\n\tdefaultMetadataCertificateTemplate,\n} from './constants';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport {\n\tnotifyOnLoginServiceConfigurationChanged,\n\tnotifyOnLoginServiceConfigurationChangedByService,\n} from '../../../lib/server/lib/notifyListener';\nimport { settings, settingsRegistry } from '../../../settings/server';\nimport type { IServiceProviderOptions } from '../definition/IServiceProviderOptions';\n\nconst getSamlConfigs = function (service: string): SAMLConfiguration {\n\tconst configs: SAMLConfiguration = {\n\t\tbuttonLabelText: settings.get(`${service}_button_label_text`),\n\t\tbuttonLabelColor: settings.get(`${service}_button_label_color`),\n\t\tbuttonColor: settings.get(`${service}_button_color`),\n\t\tclientConfig: {\n\t\t\tprovider: settings.get<string>(`${service}_provider`),\n\t\t},\n\t\tentryPoint: settings.get(`${service}_entry_point`),\n\t\tidpSLORedirectURL: settings.get(`${service}_idp_slo_redirect_url`),\n\t\tusernameNormalize: settings.get(`${service}_username_normalize`),\n\t\timmutableProperty: settings.get(`${service}_immutable_property`),\n\t\tgenerateUsername: settings.get(`${service}_generate_username`),\n\t\tdebug: settings.get(`${service}_debug`),\n\t\tnameOverwrite: settings.get(`${service}_name_overwrite`),\n\t\tmailOverwrite: settings.get(`${service}_mail_overwrite`),\n\t\tissuer: settings.get(`${service}_issuer`),\n\t\tlogoutBehaviour: settings.get(`${service}_logout_behaviour`),\n\t\tdefaultUserRole: settings.get(`${service}_default_user_role`),\n\t\tsecret: {\n\t\t\tprivateKey: settings.get(`${service}_private_key`),\n\t\t\tpublicCert: settings.get(`${service}_public_cert`),\n\t\t\t// People often overlook the instruction to remove the header and footer of the certificate on this specific setting, so let's do it for them.\n\t\t\tcert: SAMLUtils.normalizeCert((settings.get(`${service}_cert`) as string) || ''),\n\t\t},\n\t\tsignatureValidationType: settings.get(`${service}_signature_validation_type`),\n\t\tuserDataFieldMap: settings.get(`${service}_user_data_fieldmap`),\n\t\tallowedClockDrift: settings.get(`${service}_allowed_clock_drift`),\n\t\tcustomAuthnContext: defaultAuthnContext,\n\t\tauthnContextComparison: 'exact',\n\t\tidentifierFormat: defaultIdentifierFormat,\n\t\tnameIDPolicyTemplate: defaultNameIDTemplate,\n\t\tauthnContextTemplate: defaultAuthnContextTemplate,\n\t\tauthRequestTemplate: defaultAuthRequestTemplate,\n\t\tlogoutResponseTemplate: defaultLogoutResponseTemplate,\n\t\tlogoutRequestTemplate: defaultLogoutRequestTemplate,\n\t\tmetadataCertificateTemplate: defaultMetadataCertificateTemplate,\n\t\tmetadataTemplate: defaultMetadataTemplate,\n\t\tchannelsAttributeUpdate: settings.get(`${service}_channels_update`),\n\t\tincludePrivateChannelsInUpdate: settings.get(`${service}_include_private_channels_update`),\n\t};\n\n\tSAMLUtils.events.emit('loadConfigs', service, configs);\n\treturn configs;\n};\n\nconst configureSamlService = function (samlConfigs: Record<string, any>): IServiceProviderOptions {\n\tlet privateCert = null;\n\tlet privateKey = null;\n\n\tif (samlConfigs.secret.privateKey && samlConfigs.secret.publicCert) {\n\t\tprivateKey = samlConfigs.secret.privateKey;\n\t\tprivateCert = samlConfigs.secret.publicCert;\n\t} else if (samlConfigs.secret.privateKey || samlConfigs.secret.publicCert) {\n\t\tSAMLUtils.error('SAML Service: You must specify both cert and key files.');\n\t}\n\n\tSAMLUtils.updateGlobalSettings(samlConfigs);\n\n\treturn {\n\t\tprovider: samlConfigs.clientConfig.provider,\n\t\tentryPoint: samlConfigs.entryPoint,\n\t\tidpSLORedirectURL: samlConfigs.idpSLORedirectURL,\n\t\tissuer: samlConfigs.issuer,\n\t\tcert: samlConfigs.secret.cert,\n\t\tprivateCert,\n\t\tprivateKey,\n\t\tcustomAuthnContext: samlConfigs.customAuthnContext,\n\t\tauthnContextComparison: samlConfigs.authnContextComparison,\n\t\tdefaultUserRole: samlConfigs.defaultUserRole,\n\t\tallowedClockDrift: parseInt(samlConfigs.allowedClockDrift) || 0,\n\t\tsignatureValidationType: samlConfigs.signatureValidationType,\n\t\tidentifierFormat: samlConfigs.identifierFormat,\n\t\tnameIDPolicyTemplate: samlConfigs.nameIDPolicyTemplate,\n\t\tauthnContextTemplate: samlConfigs.authnContextTemplate,\n\t\tauthRequestTemplate: samlConfigs.authRequestTemplate,\n\t\tlogoutResponseTemplate: samlConfigs.logoutResponseTemplate,\n\t\tlogoutRequestTemplate: samlConfigs.logoutRequestTemplate,\n\t\tmetadataCertificateTemplate: samlConfigs.metadataCertificateTemplate,\n\t\tmetadataTemplate: samlConfigs.metadataTemplate,\n\t\tcallbackUrl: Meteor.absoluteUrl(`_saml/validate/${samlConfigs.clientConfig.provider}`),\n\t};\n};\n\nexport const loadSamlServiceProviders = async function (): Promise<void> {\n\tconst serviceName = 'saml';\n\tconst services = settings.getByRegexp(/^(SAML_Custom_)[a-z]+$/i);\n\n\tif (!services) {\n\t\treturn SAMLUtils.setServiceProvidersList([]);\n\t}\n\n\tconst providers = (\n\t\tawait Promise.all(\n\t\t\tservices.map(async ([key, value]) => {\n\t\t\t\tif (value === true) {\n\t\t\t\t\tconst samlConfigs = getSamlConfigs(key);\n\t\t\t\t\tSAMLUtils.log(key);\n\t\t\t\t\tawait LoginServiceConfiguration.createOrUpdateService(serviceName, samlConfigs);\n\t\t\t\t\tvoid notifyOnLoginServiceConfigurationChangedByService(serviceName);\n\t\t\t\t\treturn configureSamlService(samlConfigs);\n\t\t\t\t}\n\n\t\t\t\tconst service = await LoginServiceConfiguration.findOneByService(serviceName, { projection: { _id: 1 } });\n\t\t\t\tif (!service?._id) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst { deletedCount } = await LoginServiceConfiguration.removeService(service._id);\n\t\t\t\tif (!deletedCount) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvoid notifyOnLoginServiceConfigurationChanged({ _id: service._id }, 'removed');\n\n\t\t\t\treturn false;\n\t\t\t}),\n\t\t)\n\t).filter((e) => e) as IServiceProviderOptions[];\n\n\tSAMLUtils.setServiceProvidersList(providers);\n};\n\nexport const addSamlService = function (name: string): void {\n\tSystemLogger.warn(`Adding ${name} is deprecated`);\n};\n\nexport const addSettings = async function (name: string): Promise<void> {\n\tawait settingsRegistry.addGroup('SAML', async function () {\n\t\tawait this.with(\n\t\t\t{\n\t\t\t\ttab: 'SAML_Connection',\n\t\t\t},\n\t\t\tasync function () {\n\t\t\t\tawait this.add(`SAML_Custom_${name}`, false, {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Enable',\n\t\t\t\t\tpublic: true,\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_provider`, 'provider-name', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Provider',\n\t\t\t\t\tpublic: true,\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_entry_point`, 'https://example.com/simplesaml/saml2/idp/SSOService.php', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Entry_point',\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_idp_slo_redirect_url`, 'https://example.com/simplesaml/saml2/idp/SingleLogoutService.php', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_IDP_SLO_Redirect_URL',\n\t\t\t\t\tpublic: true,\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_issuer`, 'https://your-rocket-chat/_saml/metadata/provider-name', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Issuer',\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_debug`, false, {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Debug',\n\t\t\t\t});\n\n\t\t\t\tawait this.section('SAML_Section_2_Certificate', async function () {\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_cert`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Cert',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\tsecret: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_public_cert`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Public_Cert',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_signature_validation_type`, 'All', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'Response', i18nLabel: 'SAML_Custom_signature_validation_response' },\n\t\t\t\t\t\t\t{ key: 'Assertion', i18nLabel: 'SAML_Custom_signature_validation_assertion' },\n\t\t\t\t\t\t\t{ key: 'Either', i18nLabel: 'SAML_Custom_signature_validation_either' },\n\t\t\t\t\t\t\t{ key: 'All', i18nLabel: 'SAML_Custom_signature_validation_all' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_signature_validation_type',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_signature_validation_type_description',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_private_key`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Private_Key',\n\t\t\t\t\t\tsecret: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\n\t\tawait this.with(\n\t\t\t{\n\t\t\t\ttab: 'SAML_General',\n\t\t\t},\n\t\t\tasync function () {\n\t\t\t\tawait this.section('SAML_Section_1_User_Interface', async function () {\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_button_label_text`, 'SAML', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Text',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_button_label_color`, '#FFFFFF', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Color',\n\t\t\t\t\t\talert: 'OAuth_button_colors_alert',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_button_color`, '#1d74f5', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Color',\n\t\t\t\t\t\talert: 'OAuth_button_colors_alert',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('SAML_Section_3_Behavior', async function () {\n\t\t\t\t\t// Settings to customize behavior\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_generate_username`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Generate_Username',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_username_normalize`, 'None', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'None', i18nLabel: 'SAML_Custom_Username_Normalize_None' },\n\t\t\t\t\t\t\t{ key: 'Lowercase', i18nLabel: 'SAML_Custom_Username_Normalize_Lowercase' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Username_Normalize',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_immutable_property`, 'EMail', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'Username', i18nLabel: 'SAML_Custom_Immutable_Property_Username' },\n\t\t\t\t\t\t\t{ key: 'EMail', i18nLabel: 'SAML_Custom_Immutable_Property_EMail' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Immutable_Property',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_name_overwrite`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_name_overwrite',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_mail_overwrite`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_mail_overwrite',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_logout_behaviour`, 'SAML', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'SAML', i18nLabel: 'SAML_Custom_Logout_Behaviour_Terminate_SAML_Session' },\n\t\t\t\t\t\t\t{ key: 'Local', i18nLabel: 'SAML_Custom_Logout_Behaviour_End_Only_RocketChat' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Logout_Behaviour',\n\t\t\t\t\t\tpublic: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_channels_update`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_channels_update',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_channels_update_description',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_include_private_channels_update`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_include_private_channels_update',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_include_private_channels_update_description',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_default_user_role`, 'user', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Default_User_Role',\n\t\t\t\t\t\ti18nDescription: 'SAML_Default_User_Role_Description',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_allowed_clock_drift`, 0, {\n\t\t\t\t\t\ttype: 'int',\n\t\t\t\t\t\tinvalidValue: 0,\n\t\t\t\t\t\ti18nLabel: 'SAML_Allowed_Clock_Drift',\n\t\t\t\t\t\ti18nDescription: 'SAML_Allowed_Clock_Drift_Description',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('SAML_Section_5_Mapping', async function () {\n\t\t\t\t\t// Data Mapping Settings\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_user_data_fieldmap`, '{\"username\":\"username\", \"email\":\"email\", \"name\": \"cn\"}', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_user_data_fieldmap',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_user_data_fieldmap_description',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\n\t\tSAMLUtils.events.emit('addSettings', name);\n\t});\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      loadSamlServiceProviders: () => loadSamlServiceProviders,\n      addSamlService: () => addSamlService,\n      addSettings: () => addSettings\n    });\n    let LoginServiceConfiguration;\n    module.link(\"@rocket.chat/models\", {\n      LoginServiceConfiguration(v) {\n        LoginServiceConfiguration = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let SAMLUtils;\n    module.link(\"./Utils\", {\n      SAMLUtils(v) {\n        SAMLUtils = v;\n      }\n    }, 2);\n    let defaultAuthnContextTemplate, defaultAuthRequestTemplate, defaultLogoutResponseTemplate, defaultLogoutRequestTemplate, defaultNameIDTemplate, defaultIdentifierFormat, defaultAuthnContext, defaultMetadataTemplate, defaultMetadataCertificateTemplate;\n    module.link(\"./constants\", {\n      defaultAuthnContextTemplate(v) {\n        defaultAuthnContextTemplate = v;\n      },\n      defaultAuthRequestTemplate(v) {\n        defaultAuthRequestTemplate = v;\n      },\n      defaultLogoutResponseTemplate(v) {\n        defaultLogoutResponseTemplate = v;\n      },\n      defaultLogoutRequestTemplate(v) {\n        defaultLogoutRequestTemplate = v;\n      },\n      defaultNameIDTemplate(v) {\n        defaultNameIDTemplate = v;\n      },\n      defaultIdentifierFormat(v) {\n        defaultIdentifierFormat = v;\n      },\n      defaultAuthnContext(v) {\n        defaultAuthnContext = v;\n      },\n      defaultMetadataTemplate(v) {\n        defaultMetadataTemplate = v;\n      },\n      defaultMetadataCertificateTemplate(v) {\n        defaultMetadataCertificateTemplate = v;\n      }\n    }, 3);\n    let SystemLogger;\n    module.link(\"../../../../server/lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 4);\n    let notifyOnLoginServiceConfigurationChanged, notifyOnLoginServiceConfigurationChangedByService;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnLoginServiceConfigurationChanged(v) {\n        notifyOnLoginServiceConfigurationChanged = v;\n      },\n      notifyOnLoginServiceConfigurationChangedByService(v) {\n        notifyOnLoginServiceConfigurationChangedByService = v;\n      }\n    }, 5);\n    let settings, settingsRegistry;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      },\n      settingsRegistry(v) {\n        settingsRegistry = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const getSamlConfigs = function (service) {\n      const configs = {\n        buttonLabelText: settings.get(\"\".concat(service, \"_button_label_text\")),\n        buttonLabelColor: settings.get(\"\".concat(service, \"_button_label_color\")),\n        buttonColor: settings.get(\"\".concat(service, \"_button_color\")),\n        clientConfig: {\n          provider: settings.get(\"\".concat(service, \"_provider\"))\n        },\n        entryPoint: settings.get(\"\".concat(service, \"_entry_point\")),\n        idpSLORedirectURL: settings.get(\"\".concat(service, \"_idp_slo_redirect_url\")),\n        usernameNormalize: settings.get(\"\".concat(service, \"_username_normalize\")),\n        immutableProperty: settings.get(\"\".concat(service, \"_immutable_property\")),\n        generateUsername: settings.get(\"\".concat(service, \"_generate_username\")),\n        debug: settings.get(\"\".concat(service, \"_debug\")),\n        nameOverwrite: settings.get(\"\".concat(service, \"_name_overwrite\")),\n        mailOverwrite: settings.get(\"\".concat(service, \"_mail_overwrite\")),\n        issuer: settings.get(\"\".concat(service, \"_issuer\")),\n        logoutBehaviour: settings.get(\"\".concat(service, \"_logout_behaviour\")),\n        defaultUserRole: settings.get(\"\".concat(service, \"_default_user_role\")),\n        secret: {\n          privateKey: settings.get(\"\".concat(service, \"_private_key\")),\n          publicCert: settings.get(\"\".concat(service, \"_public_cert\")),\n          // People often overlook the instruction to remove the header and footer of the certificate on this specific setting, so let's do it for them.\n          cert: SAMLUtils.normalizeCert(settings.get(\"\".concat(service, \"_cert\")) || '')\n        },\n        signatureValidationType: settings.get(\"\".concat(service, \"_signature_validation_type\")),\n        userDataFieldMap: settings.get(\"\".concat(service, \"_user_data_fieldmap\")),\n        allowedClockDrift: settings.get(\"\".concat(service, \"_allowed_clock_drift\")),\n        customAuthnContext: defaultAuthnContext,\n        authnContextComparison: 'exact',\n        identifierFormat: defaultIdentifierFormat,\n        nameIDPolicyTemplate: defaultNameIDTemplate,\n        authnContextTemplate: defaultAuthnContextTemplate,\n        authRequestTemplate: defaultAuthRequestTemplate,\n        logoutResponseTemplate: defaultLogoutResponseTemplate,\n        logoutRequestTemplate: defaultLogoutRequestTemplate,\n        metadataCertificateTemplate: defaultMetadataCertificateTemplate,\n        metadataTemplate: defaultMetadataTemplate,\n        channelsAttributeUpdate: settings.get(\"\".concat(service, \"_channels_update\")),\n        includePrivateChannelsInUpdate: settings.get(\"\".concat(service, \"_include_private_channels_update\"))\n      };\n      SAMLUtils.events.emit('loadConfigs', service, configs);\n      return configs;\n    };\n    const configureSamlService = function (samlConfigs) {\n      let privateCert = null;\n      let privateKey = null;\n      if (samlConfigs.secret.privateKey && samlConfigs.secret.publicCert) {\n        privateKey = samlConfigs.secret.privateKey;\n        privateCert = samlConfigs.secret.publicCert;\n      } else if (samlConfigs.secret.privateKey || samlConfigs.secret.publicCert) {\n        SAMLUtils.error('SAML Service: You must specify both cert and key files.');\n      }\n      SAMLUtils.updateGlobalSettings(samlConfigs);\n      return {\n        provider: samlConfigs.clientConfig.provider,\n        entryPoint: samlConfigs.entryPoint,\n        idpSLORedirectURL: samlConfigs.idpSLORedirectURL,\n        issuer: samlConfigs.issuer,\n        cert: samlConfigs.secret.cert,\n        privateCert,\n        privateKey,\n        customAuthnContext: samlConfigs.customAuthnContext,\n        authnContextComparison: samlConfigs.authnContextComparison,\n        defaultUserRole: samlConfigs.defaultUserRole,\n        allowedClockDrift: parseInt(samlConfigs.allowedClockDrift) || 0,\n        signatureValidationType: samlConfigs.signatureValidationType,\n        identifierFormat: samlConfigs.identifierFormat,\n        nameIDPolicyTemplate: samlConfigs.nameIDPolicyTemplate,\n        authnContextTemplate: samlConfigs.authnContextTemplate,\n        authRequestTemplate: samlConfigs.authRequestTemplate,\n        logoutResponseTemplate: samlConfigs.logoutResponseTemplate,\n        logoutRequestTemplate: samlConfigs.logoutRequestTemplate,\n        metadataCertificateTemplate: samlConfigs.metadataCertificateTemplate,\n        metadataTemplate: samlConfigs.metadataTemplate,\n        callbackUrl: Meteor.absoluteUrl(\"_saml/validate/\".concat(samlConfigs.clientConfig.provider))\n      };\n    };\n    const loadSamlServiceProviders = async function () {\n      const serviceName = 'saml';\n      const services = settings.getByRegexp(/^(SAML_Custom_)[a-z]+$/i);\n      if (!services) {\n        return SAMLUtils.setServiceProvidersList([]);\n      }\n      const providers = (await Promise.all(services.map(async _ref => {\n        let [key, value] = _ref;\n        if (value === true) {\n          const samlConfigs = getSamlConfigs(key);\n          SAMLUtils.log(key);\n          await LoginServiceConfiguration.createOrUpdateService(serviceName, samlConfigs);\n          void notifyOnLoginServiceConfigurationChangedByService(serviceName);\n          return configureSamlService(samlConfigs);\n        }\n        const service = await LoginServiceConfiguration.findOneByService(serviceName, {\n          projection: {\n            _id: 1\n          }\n        });\n        if (!(service !== null && service !== void 0 && service._id)) {\n          return false;\n        }\n        const {\n          deletedCount\n        } = await LoginServiceConfiguration.removeService(service._id);\n        if (!deletedCount) {\n          return false;\n        }\n        void notifyOnLoginServiceConfigurationChanged({\n          _id: service._id\n        }, 'removed');\n        return false;\n      }))).filter(e => e);\n      SAMLUtils.setServiceProvidersList(providers);\n    };\n    const addSamlService = function (name) {\n      SystemLogger.warn(\"Adding \".concat(name, \" is deprecated\"));\n    };\n    const addSettings = async function (name) {\n      await settingsRegistry.addGroup('SAML', async function () {\n        await this.with({\n          tab: 'SAML_Connection'\n        }, async function () {\n          await this.add(\"SAML_Custom_\".concat(name), false, {\n            type: 'boolean',\n            i18nLabel: 'Accounts_OAuth_Custom_Enable',\n            public: true\n          });\n          await this.add(\"SAML_Custom_\".concat(name, \"_provider\"), 'provider-name', {\n            type: 'string',\n            i18nLabel: 'SAML_Custom_Provider',\n            public: true\n          });\n          await this.add(\"SAML_Custom_\".concat(name, \"_entry_point\"), 'https://example.com/simplesaml/saml2/idp/SSOService.php', {\n            type: 'string',\n            i18nLabel: 'SAML_Custom_Entry_point'\n          });\n          await this.add(\"SAML_Custom_\".concat(name, \"_idp_slo_redirect_url\"), 'https://example.com/simplesaml/saml2/idp/SingleLogoutService.php', {\n            type: 'string',\n            i18nLabel: 'SAML_Custom_IDP_SLO_Redirect_URL',\n            public: true\n          });\n          await this.add(\"SAML_Custom_\".concat(name, \"_issuer\"), 'https://your-rocket-chat/_saml/metadata/provider-name', {\n            type: 'string',\n            i18nLabel: 'SAML_Custom_Issuer'\n          });\n          await this.add(\"SAML_Custom_\".concat(name, \"_debug\"), false, {\n            type: 'boolean',\n            i18nLabel: 'SAML_Custom_Debug'\n          });\n          await this.section('SAML_Section_2_Certificate', async function () {\n            await this.add(\"SAML_Custom_\".concat(name, \"_cert\"), '', {\n              type: 'string',\n              i18nLabel: 'SAML_Custom_Cert',\n              multiline: true,\n              secret: true\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_public_cert\"), '', {\n              type: 'string',\n              multiline: true,\n              i18nLabel: 'SAML_Custom_Public_Cert'\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_signature_validation_type\"), 'All', {\n              type: 'select',\n              values: [{\n                key: 'Response',\n                i18nLabel: 'SAML_Custom_signature_validation_response'\n              }, {\n                key: 'Assertion',\n                i18nLabel: 'SAML_Custom_signature_validation_assertion'\n              }, {\n                key: 'Either',\n                i18nLabel: 'SAML_Custom_signature_validation_either'\n              }, {\n                key: 'All',\n                i18nLabel: 'SAML_Custom_signature_validation_all'\n              }],\n              i18nLabel: 'SAML_Custom_signature_validation_type',\n              i18nDescription: 'SAML_Custom_signature_validation_type_description'\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_private_key\"), '', {\n              type: 'string',\n              multiline: true,\n              i18nLabel: 'SAML_Custom_Private_Key',\n              secret: true\n            });\n          });\n        });\n        await this.with({\n          tab: 'SAML_General'\n        }, async function () {\n          await this.section('SAML_Section_1_User_Interface', async function () {\n            await this.add(\"SAML_Custom_\".concat(name, \"_button_label_text\"), 'SAML', {\n              type: 'string',\n              i18nLabel: 'Accounts_OAuth_Custom_Button_Label_Text'\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_button_label_color\"), '#FFFFFF', {\n              type: 'string',\n              i18nLabel: 'Accounts_OAuth_Custom_Button_Label_Color',\n              alert: 'OAuth_button_colors_alert'\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_button_color\"), '#1d74f5', {\n              type: 'string',\n              i18nLabel: 'Accounts_OAuth_Custom_Button_Color',\n              alert: 'OAuth_button_colors_alert'\n            });\n          });\n          await this.section('SAML_Section_3_Behavior', async function () {\n            // Settings to customize behavior\n            await this.add(\"SAML_Custom_\".concat(name, \"_generate_username\"), false, {\n              type: 'boolean',\n              i18nLabel: 'SAML_Custom_Generate_Username'\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_username_normalize\"), 'None', {\n              type: 'select',\n              values: [{\n                key: 'None',\n                i18nLabel: 'SAML_Custom_Username_Normalize_None'\n              }, {\n                key: 'Lowercase',\n                i18nLabel: 'SAML_Custom_Username_Normalize_Lowercase'\n              }],\n              i18nLabel: 'SAML_Custom_Username_Normalize'\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_immutable_property\"), 'EMail', {\n              type: 'select',\n              values: [{\n                key: 'Username',\n                i18nLabel: 'SAML_Custom_Immutable_Property_Username'\n              }, {\n                key: 'EMail',\n                i18nLabel: 'SAML_Custom_Immutable_Property_EMail'\n              }],\n              i18nLabel: 'SAML_Custom_Immutable_Property'\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_name_overwrite\"), false, {\n              type: 'boolean',\n              i18nLabel: 'SAML_Custom_name_overwrite'\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_mail_overwrite\"), false, {\n              type: 'boolean',\n              i18nLabel: 'SAML_Custom_mail_overwrite'\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_logout_behaviour\"), 'SAML', {\n              type: 'select',\n              values: [{\n                key: 'SAML',\n                i18nLabel: 'SAML_Custom_Logout_Behaviour_Terminate_SAML_Session'\n              }, {\n                key: 'Local',\n                i18nLabel: 'SAML_Custom_Logout_Behaviour_End_Only_RocketChat'\n              }],\n              i18nLabel: 'SAML_Custom_Logout_Behaviour',\n              public: true\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_channels_update\"), false, {\n              type: 'boolean',\n              i18nLabel: 'SAML_Custom_channels_update',\n              i18nDescription: 'SAML_Custom_channels_update_description'\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_include_private_channels_update\"), false, {\n              type: 'boolean',\n              i18nLabel: 'SAML_Custom_include_private_channels_update',\n              i18nDescription: 'SAML_Custom_include_private_channels_update_description'\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_default_user_role\"), 'user', {\n              type: 'string',\n              i18nLabel: 'SAML_Default_User_Role',\n              i18nDescription: 'SAML_Default_User_Role_Description'\n            });\n            await this.add(\"SAML_Custom_\".concat(name, \"_allowed_clock_drift\"), 0, {\n              type: 'int',\n              invalidValue: 0,\n              i18nLabel: 'SAML_Allowed_Clock_Drift',\n              i18nDescription: 'SAML_Allowed_Clock_Drift_Description'\n            });\n          });\n          await this.section('SAML_Section_5_Mapping', async function () {\n            // Data Mapping Settings\n            await this.add(\"SAML_Custom_\".concat(name, \"_user_data_fieldmap\"), '{\"username\":\"username\", \"email\":\"email\", \"name\": \"cn\"}', {\n              type: 'string',\n              i18nLabel: 'SAML_Custom_user_data_fieldmap',\n              i18nDescription: 'SAML_Custom_user_data_fieldmap_description',\n              multiline: true\n            });\n          });\n        });\n        SAMLUtils.events.emit('addSettings', name);\n      });\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","loadSamlServiceProviders","addSamlService","addSettings","LoginServiceConfiguration","link","v","Meteor","SAMLUtils","defaultAuthnContextTemplate","defaultAuthRequestTemplate","defaultLogoutResponseTemplate","defaultLogoutRequestTemplate","defaultNameIDTemplate","defaultIdentifierFormat","defaultAuthnContext","defaultMetadataTemplate","defaultMetadataCertificateTemplate","SystemLogger","notifyOnLoginServiceConfigurationChanged","notifyOnLoginServiceConfigurationChangedByService","settings","settingsRegistry","__reifyWaitForDeps__","getSamlConfigs","service","configs","buttonLabelText","get","concat","buttonLabelColor","buttonColor","clientConfig","provider","entryPoint","idpSLORedirectURL","usernameNormalize","immutableProperty","generateUsername","debug","nameOverwrite","mailOverwrite","issuer","logoutBehaviour","defaultUserRole","secret","privateKey","publicCert","cert","normalizeCert","signatureValidationType","userDataFieldMap","allowedClockDrift","customAuthnContext","authnContextComparison","identifierFormat","nameIDPolicyTemplate","authnContextTemplate","authRequestTemplate","logoutResponseTemplate","logoutRequestTemplate","metadataCertificateTemplate","metadataTemplate","channelsAttributeUpdate","includePrivateChannelsInUpdate","events","emit","configureSamlService","samlConfigs","privateCert","error","updateGlobalSettings","parseInt","callbackUrl","absoluteUrl","serviceName","services","getByRegexp","setServiceProvidersList","providers","Promise","all","map","_ref","key","value","log","createOrUpdateService","findOneByService","projection","_id","deletedCount","removeService","filter","e","name","warn","addGroup","with","tab","add","type","i18nLabel","public","section","multiline","values","i18nDescription","alert","invalidValue","__reify_async_result__","_reifyError","self","async"],"sources":["app/meteor-accounts-saml/server/lib/settings.ts"],"sourcesContent":["import type { SAMLConfiguration } from '@rocket.chat/core-typings';\nimport { LoginServiceConfiguration } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { SAMLUtils } from './Utils';\nimport {\n\tdefaultAuthnContextTemplate,\n\tdefaultAuthRequestTemplate,\n\tdefaultLogoutResponseTemplate,\n\tdefaultLogoutRequestTemplate,\n\tdefaultNameIDTemplate,\n\tdefaultIdentifierFormat,\n\tdefaultAuthnContext,\n\tdefaultMetadataTemplate,\n\tdefaultMetadataCertificateTemplate,\n} from './constants';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport {\n\tnotifyOnLoginServiceConfigurationChanged,\n\tnotifyOnLoginServiceConfigurationChangedByService,\n} from '../../../lib/server/lib/notifyListener';\nimport { settings, settingsRegistry } from '../../../settings/server';\nimport type { IServiceProviderOptions } from '../definition/IServiceProviderOptions';\n\nconst getSamlConfigs = function (service: string): SAMLConfiguration {\n\tconst configs: SAMLConfiguration = {\n\t\tbuttonLabelText: settings.get(`${service}_button_label_text`),\n\t\tbuttonLabelColor: settings.get(`${service}_button_label_color`),\n\t\tbuttonColor: settings.get(`${service}_button_color`),\n\t\tclientConfig: {\n\t\t\tprovider: settings.get<string>(`${service}_provider`),\n\t\t},\n\t\tentryPoint: settings.get(`${service}_entry_point`),\n\t\tidpSLORedirectURL: settings.get(`${service}_idp_slo_redirect_url`),\n\t\tusernameNormalize: settings.get(`${service}_username_normalize`),\n\t\timmutableProperty: settings.get(`${service}_immutable_property`),\n\t\tgenerateUsername: settings.get(`${service}_generate_username`),\n\t\tdebug: settings.get(`${service}_debug`),\n\t\tnameOverwrite: settings.get(`${service}_name_overwrite`),\n\t\tmailOverwrite: settings.get(`${service}_mail_overwrite`),\n\t\tissuer: settings.get(`${service}_issuer`),\n\t\tlogoutBehaviour: settings.get(`${service}_logout_behaviour`),\n\t\tdefaultUserRole: settings.get(`${service}_default_user_role`),\n\t\tsecret: {\n\t\t\tprivateKey: settings.get(`${service}_private_key`),\n\t\t\tpublicCert: settings.get(`${service}_public_cert`),\n\t\t\t// People often overlook the instruction to remove the header and footer of the certificate on this specific setting, so let's do it for them.\n\t\t\tcert: SAMLUtils.normalizeCert((settings.get(`${service}_cert`) as string) || ''),\n\t\t},\n\t\tsignatureValidationType: settings.get(`${service}_signature_validation_type`),\n\t\tuserDataFieldMap: settings.get(`${service}_user_data_fieldmap`),\n\t\tallowedClockDrift: settings.get(`${service}_allowed_clock_drift`),\n\t\tcustomAuthnContext: defaultAuthnContext,\n\t\tauthnContextComparison: 'exact',\n\t\tidentifierFormat: defaultIdentifierFormat,\n\t\tnameIDPolicyTemplate: defaultNameIDTemplate,\n\t\tauthnContextTemplate: defaultAuthnContextTemplate,\n\t\tauthRequestTemplate: defaultAuthRequestTemplate,\n\t\tlogoutResponseTemplate: defaultLogoutResponseTemplate,\n\t\tlogoutRequestTemplate: defaultLogoutRequestTemplate,\n\t\tmetadataCertificateTemplate: defaultMetadataCertificateTemplate,\n\t\tmetadataTemplate: defaultMetadataTemplate,\n\t\tchannelsAttributeUpdate: settings.get(`${service}_channels_update`),\n\t\tincludePrivateChannelsInUpdate: settings.get(`${service}_include_private_channels_update`),\n\t};\n\n\tSAMLUtils.events.emit('loadConfigs', service, configs);\n\treturn configs;\n};\n\nconst configureSamlService = function (samlConfigs: Record<string, any>): IServiceProviderOptions {\n\tlet privateCert = null;\n\tlet privateKey = null;\n\n\tif (samlConfigs.secret.privateKey && samlConfigs.secret.publicCert) {\n\t\tprivateKey = samlConfigs.secret.privateKey;\n\t\tprivateCert = samlConfigs.secret.publicCert;\n\t} else if (samlConfigs.secret.privateKey || samlConfigs.secret.publicCert) {\n\t\tSAMLUtils.error('SAML Service: You must specify both cert and key files.');\n\t}\n\n\tSAMLUtils.updateGlobalSettings(samlConfigs);\n\n\treturn {\n\t\tprovider: samlConfigs.clientConfig.provider,\n\t\tentryPoint: samlConfigs.entryPoint,\n\t\tidpSLORedirectURL: samlConfigs.idpSLORedirectURL,\n\t\tissuer: samlConfigs.issuer,\n\t\tcert: samlConfigs.secret.cert,\n\t\tprivateCert,\n\t\tprivateKey,\n\t\tcustomAuthnContext: samlConfigs.customAuthnContext,\n\t\tauthnContextComparison: samlConfigs.authnContextComparison,\n\t\tdefaultUserRole: samlConfigs.defaultUserRole,\n\t\tallowedClockDrift: parseInt(samlConfigs.allowedClockDrift) || 0,\n\t\tsignatureValidationType: samlConfigs.signatureValidationType,\n\t\tidentifierFormat: samlConfigs.identifierFormat,\n\t\tnameIDPolicyTemplate: samlConfigs.nameIDPolicyTemplate,\n\t\tauthnContextTemplate: samlConfigs.authnContextTemplate,\n\t\tauthRequestTemplate: samlConfigs.authRequestTemplate,\n\t\tlogoutResponseTemplate: samlConfigs.logoutResponseTemplate,\n\t\tlogoutRequestTemplate: samlConfigs.logoutRequestTemplate,\n\t\tmetadataCertificateTemplate: samlConfigs.metadataCertificateTemplate,\n\t\tmetadataTemplate: samlConfigs.metadataTemplate,\n\t\tcallbackUrl: Meteor.absoluteUrl(`_saml/validate/${samlConfigs.clientConfig.provider}`),\n\t};\n};\n\nexport const loadSamlServiceProviders = async function (): Promise<void> {\n\tconst serviceName = 'saml';\n\tconst services = settings.getByRegexp(/^(SAML_Custom_)[a-z]+$/i);\n\n\tif (!services) {\n\t\treturn SAMLUtils.setServiceProvidersList([]);\n\t}\n\n\tconst providers = (\n\t\tawait Promise.all(\n\t\t\tservices.map(async ([key, value]) => {\n\t\t\t\tif (value === true) {\n\t\t\t\t\tconst samlConfigs = getSamlConfigs(key);\n\t\t\t\t\tSAMLUtils.log(key);\n\t\t\t\t\tawait LoginServiceConfiguration.createOrUpdateService(serviceName, samlConfigs);\n\t\t\t\t\tvoid notifyOnLoginServiceConfigurationChangedByService(serviceName);\n\t\t\t\t\treturn configureSamlService(samlConfigs);\n\t\t\t\t}\n\n\t\t\t\tconst service = await LoginServiceConfiguration.findOneByService(serviceName, { projection: { _id: 1 } });\n\t\t\t\tif (!service?._id) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst { deletedCount } = await LoginServiceConfiguration.removeService(service._id);\n\t\t\t\tif (!deletedCount) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvoid notifyOnLoginServiceConfigurationChanged({ _id: service._id }, 'removed');\n\n\t\t\t\treturn false;\n\t\t\t}),\n\t\t)\n\t).filter((e) => e) as IServiceProviderOptions[];\n\n\tSAMLUtils.setServiceProvidersList(providers);\n};\n\nexport const addSamlService = function (name: string): void {\n\tSystemLogger.warn(`Adding ${name} is deprecated`);\n};\n\nexport const addSettings = async function (name: string): Promise<void> {\n\tawait settingsRegistry.addGroup('SAML', async function () {\n\t\tawait this.with(\n\t\t\t{\n\t\t\t\ttab: 'SAML_Connection',\n\t\t\t},\n\t\t\tasync function () {\n\t\t\t\tawait this.add(`SAML_Custom_${name}`, false, {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Enable',\n\t\t\t\t\tpublic: true,\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_provider`, 'provider-name', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Provider',\n\t\t\t\t\tpublic: true,\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_entry_point`, 'https://example.com/simplesaml/saml2/idp/SSOService.php', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Entry_point',\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_idp_slo_redirect_url`, 'https://example.com/simplesaml/saml2/idp/SingleLogoutService.php', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_IDP_SLO_Redirect_URL',\n\t\t\t\t\tpublic: true,\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_issuer`, 'https://your-rocket-chat/_saml/metadata/provider-name', {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Issuer',\n\t\t\t\t});\n\t\t\t\tawait this.add(`SAML_Custom_${name}_debug`, false, {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\ti18nLabel: 'SAML_Custom_Debug',\n\t\t\t\t});\n\n\t\t\t\tawait this.section('SAML_Section_2_Certificate', async function () {\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_cert`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Cert',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\tsecret: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_public_cert`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Public_Cert',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_signature_validation_type`, 'All', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'Response', i18nLabel: 'SAML_Custom_signature_validation_response' },\n\t\t\t\t\t\t\t{ key: 'Assertion', i18nLabel: 'SAML_Custom_signature_validation_assertion' },\n\t\t\t\t\t\t\t{ key: 'Either', i18nLabel: 'SAML_Custom_signature_validation_either' },\n\t\t\t\t\t\t\t{ key: 'All', i18nLabel: 'SAML_Custom_signature_validation_all' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_signature_validation_type',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_signature_validation_type_description',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_private_key`, '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Private_Key',\n\t\t\t\t\t\tsecret: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\n\t\tawait this.with(\n\t\t\t{\n\t\t\t\ttab: 'SAML_General',\n\t\t\t},\n\t\t\tasync function () {\n\t\t\t\tawait this.section('SAML_Section_1_User_Interface', async function () {\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_button_label_text`, 'SAML', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Text',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_button_label_color`, '#FFFFFF', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Color',\n\t\t\t\t\t\talert: 'OAuth_button_colors_alert',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_button_color`, '#1d74f5', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Color',\n\t\t\t\t\t\talert: 'OAuth_button_colors_alert',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('SAML_Section_3_Behavior', async function () {\n\t\t\t\t\t// Settings to customize behavior\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_generate_username`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Generate_Username',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_username_normalize`, 'None', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'None', i18nLabel: 'SAML_Custom_Username_Normalize_None' },\n\t\t\t\t\t\t\t{ key: 'Lowercase', i18nLabel: 'SAML_Custom_Username_Normalize_Lowercase' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Username_Normalize',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_immutable_property`, 'EMail', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'Username', i18nLabel: 'SAML_Custom_Immutable_Property_Username' },\n\t\t\t\t\t\t\t{ key: 'EMail', i18nLabel: 'SAML_Custom_Immutable_Property_EMail' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Immutable_Property',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_name_overwrite`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_name_overwrite',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_mail_overwrite`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_mail_overwrite',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_logout_behaviour`, 'SAML', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'SAML', i18nLabel: 'SAML_Custom_Logout_Behaviour_Terminate_SAML_Session' },\n\t\t\t\t\t\t\t{ key: 'Local', i18nLabel: 'SAML_Custom_Logout_Behaviour_End_Only_RocketChat' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_Logout_Behaviour',\n\t\t\t\t\t\tpublic: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_channels_update`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_channels_update',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_channels_update_description',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_include_private_channels_update`, false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_include_private_channels_update',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_include_private_channels_update_description',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_default_user_role`, 'user', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Default_User_Role',\n\t\t\t\t\t\ti18nDescription: 'SAML_Default_User_Role_Description',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_allowed_clock_drift`, 0, {\n\t\t\t\t\t\ttype: 'int',\n\t\t\t\t\t\tinvalidValue: 0,\n\t\t\t\t\t\ti18nLabel: 'SAML_Allowed_Clock_Drift',\n\t\t\t\t\t\ti18nDescription: 'SAML_Allowed_Clock_Drift_Description',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('SAML_Section_5_Mapping', async function () {\n\t\t\t\t\t// Data Mapping Settings\n\t\t\t\t\tawait this.add(`SAML_Custom_${name}_user_data_fieldmap`, '{\"username\":\"username\", \"email\":\"email\", \"name\": \"cn\"}', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\ti18nLabel: 'SAML_Custom_user_data_fieldmap',\n\t\t\t\t\t\ti18nDescription: 'SAML_Custom_user_data_fieldmap_description',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\n\t\tSAMLUtils.events.emit('addSettings', name);\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0770c96872b7af10eede8fad03110b4f8769721e"}
