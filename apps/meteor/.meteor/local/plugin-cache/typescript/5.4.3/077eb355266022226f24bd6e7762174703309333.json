{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/rooms/roomTypes/voip.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/rooms/roomTypes/voip.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/rooms/roomTypes/voip.ts","inputSourceMap":{"version":3,"file":"server/lib/rooms/roomTypes/voip.ts","sourceRoot":"","sources":["server/lib/rooms/roomTypes/voip.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAG5C,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AACvE,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAErD,MAAM,YAAY,GAAG,eAAe,CAAC,eAAe,CAAC,CAAC;AAEtD,eAAe,CAAC,GAAG,CAAC,YAAY,EAAE;IACjC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAQ;QAC5B,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAK,IAAY,CAAC,KAAK,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,sBAAsB,CAAC,IAAI,EAAE,OAAO,EAAE,mBAAmB,EAAE,MAAM;QACtE,MAAM,KAAK,GAAG,iBAAiB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC;QAC7D,MAAM,IAAI,GAAG,mBAAmB,CAAC;QAEjC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;IACzC,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,OAAO;QACzB,OAAO,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;CACiD,CAAC,CAAC","sourcesContent":["import type { AtLeast } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\n\nimport type { IRoomTypeServerDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { getVoipRoomType } from '../../../../lib/rooms/roomTypes/voip';\nimport { roomCoordinator } from '../roomCoordinator';\n\nconst VoipRoomType = getVoipRoomType(roomCoordinator);\n\nroomCoordinator.add(VoipRoomType, {\n\tasync roomName(room, _userId?) {\n\t\treturn room.name || room.fname || (room as any).label;\n\t},\n\n\tasync getNotificationDetails(room, _sender, notificationMessage, userId) {\n\t\tconst title = `[Omnichannel] ${this.roomName(room, userId)}`;\n\t\tconst text = notificationMessage;\n\n\t\treturn { title, text, name: room.name };\n\t},\n\n\tasync getMsgSender(message) {\n\t\treturn Users.findOneById(message.u._id);\n\t},\n} as AtLeast<IRoomTypeServerDirectives, 'roomName'>);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/rooms/roomTypes/voip.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/rooms/roomTypes/voip.ts","inputSourceMap":{"version":3,"file":"server/lib/rooms/roomTypes/voip.ts","sourceRoot":"","sources":["server/lib/rooms/roomTypes/voip.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAG5C,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AACvE,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAErD,MAAM,YAAY,GAAG,eAAe,CAAC,eAAe,CAAC,CAAC;AAEtD,eAAe,CAAC,GAAG,CAAC,YAAY,EAAE;IACjC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAQ;QAC5B,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAK,IAAY,CAAC,KAAK,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,sBAAsB,CAAC,IAAI,EAAE,OAAO,EAAE,mBAAmB,EAAE,MAAM;QACtE,MAAM,KAAK,GAAG,iBAAiB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC;QAC7D,MAAM,IAAI,GAAG,mBAAmB,CAAC;QAEjC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;IACzC,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,OAAO;QACzB,OAAO,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;CACiD,CAAC,CAAC","sourcesContent":["import type { AtLeast } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\n\nimport type { IRoomTypeServerDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { getVoipRoomType } from '../../../../lib/rooms/roomTypes/voip';\nimport { roomCoordinator } from '../roomCoordinator';\n\nconst VoipRoomType = getVoipRoomType(roomCoordinator);\n\nroomCoordinator.add(VoipRoomType, {\n\tasync roomName(room, _userId?) {\n\t\treturn room.name || room.fname || (room as any).label;\n\t},\n\n\tasync getNotificationDetails(room, _sender, notificationMessage, userId) {\n\t\tconst title = `[Omnichannel] ${this.roomName(room, userId)}`;\n\t\tconst text = notificationMessage;\n\n\t\treturn { title, text, name: room.name };\n\t},\n\n\tasync getMsgSender(message) {\n\t\treturn Users.findOneById(message.u._id);\n\t},\n} as AtLeast<IRoomTypeServerDirectives, 'roomName'>);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let getVoipRoomType;\n    module.link(\"../../../../lib/rooms/roomTypes/voip\", {\n      getVoipRoomType(v) {\n        getVoipRoomType = v;\n      }\n    }, 1);\n    let roomCoordinator;\n    module.link(\"../roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const VoipRoomType = getVoipRoomType(roomCoordinator);\n    roomCoordinator.add(VoipRoomType, {\n      async roomName(room, _userId) {\n        return room.name || room.fname || room.label;\n      },\n      async getNotificationDetails(room, _sender, notificationMessage, userId) {\n        const title = \"[Omnichannel] \".concat(this.roomName(room, userId));\n        const text = notificationMessage;\n        return {\n          title,\n          text,\n          name: room.name\n        };\n      },\n      async getMsgSender(message) {\n        return Users.findOneById(message.u._id);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Users","module","link","v","getVoipRoomType","roomCoordinator","__reifyWaitForDeps__","VoipRoomType","add","roomName","room","_userId","name","fname","label","getNotificationDetails","_sender","notificationMessage","userId","title","concat","text","getMsgSender","message","findOneById","u","_id","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/rooms/roomTypes/voip.ts"],"sourcesContent":["import type { AtLeast } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\n\nimport type { IRoomTypeServerDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { getVoipRoomType } from '../../../../lib/rooms/roomTypes/voip';\nimport { roomCoordinator } from '../roomCoordinator';\n\nconst VoipRoomType = getVoipRoomType(roomCoordinator);\n\nroomCoordinator.add(VoipRoomType, {\n\tasync roomName(room, _userId?) {\n\t\treturn room.name || room.fname || (room as any).label;\n\t},\n\n\tasync getNotificationDetails(room, _sender, notificationMessage, userId) {\n\t\tconst title = `[Omnichannel] ${this.roomName(room, userId)}`;\n\t\tconst text = notificationMessage;\n\n\t\treturn { title, text, name: room.name };\n\t},\n\n\tasync getMsgSender(message) {\n\t\treturn Users.findOneById(message.u._id);\n\t},\n} as AtLeast<IRoomTypeServerDirectives, 'roomName'>);\n"],"mappings":";;;IACA,IAAAA,KAAS;IAAAC,MAAO,CAAAC,IAAA,CAAM,qBAAqB,EAAC;MAAAF,MAAAG,CAAA;QAAAH,KAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,eAAA;IAAAH,MAAA,CAAAC,IAAA;MAAAE,gBAAAD,CAAA;QAAAC,eAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,eAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAG,gBAAAF,CAAA;QAAAE,eAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,oBAAA,WAAAA,oBAAA;IAM5C,MAAMC,YAAY,GAAGH,eAAe,CAACC,eAAe,CAAC;IAErDA,eAAe,CAACG,GAAG,CAACD,YAAY,EAAE;MACjC,MAAME,QAAQA,CAACC,IAAI,EAAEC,OAAQ;QAC5B,OAAOD,IAAI,CAACE,IAAI,IAAIF,IAAI,CAACG,KAAK,IAAKH,IAAY,CAACI,KAAK;MACtD,CAAC;MAED,MAAMC,sBAAsBA,CAACL,IAAI,EAAEM,OAAO,EAAEC,mBAAmB,EAAEC,MAAM;QACtE,MAAMC,KAAK,oBAAAC,MAAA,CAAoB,IAAI,CAACX,QAAQ,CAACC,IAAI,EAAEQ,MAAM,CAAC,CAAE;QAC5D,MAAMG,IAAI,GAAGJ,mBAAmB;QAEhC,OAAO;UAAEE,KAAK;UAAEE,IAAI;UAAET,IAAI,EAAEF,IAAI,CAACE;QAAI,CAAE;MACxC,CAAC;MAED,MAAMU,YAAYA,CAACC,OAAO;QACzB,OAAOvB,KAAK,CAACwB,WAAW,CAACD,OAAO,CAACE,CAAC,CAACC,GAAG,CAAC;MACxC;KACkD,CAAC;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"077eb355266022226f24bd6e7762174703309333"}
