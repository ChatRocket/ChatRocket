{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/2fa/server/lib/totp.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/2fa/server/lib/totp.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/2fa/server/lib/totp.ts","inputSourceMap":{"version":3,"file":"app/2fa/server/lib/totp.ts","sourceRoot":"","sources":["app/2fa/server/lib/totp.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,SAAS,MAAM,WAAW,CAAC;AAElC,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAEpD,MAAM,CAAC,MAAM,IAAI,GAAG;IACnB,cAAc;QACb,OAAO,SAAS,CAAC,cAAc,EAAE,CAAC;IACnC,CAAC;IAED,kBAAkB,CAAC,MAAiC,EAAE,QAAgB;QACrE,OAAO,SAAS,CAAC,UAAU,CAAC;YAC3B,MAAM,EAAE,MAAM,CAAC,KAAK;YACpB,KAAK,EAAE,eAAe,QAAQ,EAAE;SAChC,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EACZ,MAAM,EACN,KAAK,EACL,YAAY,EACZ,MAAM,GAMN;QACA,0BAA0B;QAC1B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,EAAE,CAAC;YACxC,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YACjC,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAElD,IAAI,QAAQ,KAAK,CAAC,CAAC,IAAI,MAAM,EAAE,CAAC;gBAC/B,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAEjC,kDAAkD;gBAClD,MAAM,KAAK,CAAC,4BAA4B,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;gBAC/D,OAAO,IAAI,CAAC;YACb,CAAC;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QAED,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAS,2CAA2C,CAAC,CAAC;QACnF,IAAI,QAAQ,EAAE,CAAC;YACd,MAAM,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;gBAChD,MAAM;gBACN,QAAQ,EAAE,QAAQ;gBAClB,KAAK;gBACL,MAAM,EAAE,QAAQ;aAChB,CAAC,CAAC;YAEH,OAAO,aAAa,KAAK,SAAS,CAAC;QACpC,CAAC;QAED,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;YAC5B,MAAM;YACN,QAAQ,EAAE,QAAQ;YAClB,KAAK;SACL,CAAC,CAAC;IACJ,CAAC;IAED,aAAa;QACZ,2BAA2B;QAC3B,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,MAAM,WAAW,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7B,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC1B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjB,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAChC,CAAC;QAED,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;IAC/B,CAAC;CACD,CAAC","sourcesContent":["import { Users } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { SHA256 } from '@rocket.chat/sha256';\nimport speakeasy from 'speakeasy';\n\nimport { settings } from '../../../settings/server';\n\nexport const TOTP = {\n\tgenerateSecret(): speakeasy.GeneratedSecret {\n\t\treturn speakeasy.generateSecret();\n\t},\n\n\tgenerateOtpauthURL(secret: speakeasy.GeneratedSecret, username: string): string {\n\t\treturn speakeasy.otpauthURL({\n\t\t\tsecret: secret.ascii,\n\t\t\tlabel: `Rocket.Chat:${username}`,\n\t\t});\n\t},\n\n\tasync verify({\n\t\tsecret,\n\t\ttoken,\n\t\tbackupTokens,\n\t\tuserId,\n\t}: {\n\t\tsecret: string;\n\t\ttoken: string;\n\t\tbackupTokens?: string[];\n\t\tuserId?: string;\n\t}): Promise<boolean> {\n\t\t// validates a backup code\n\t\tif (token.length === 8 && backupTokens) {\n\t\t\tconst hashedCode = SHA256(token);\n\t\t\tconst usedCode = backupTokens.indexOf(hashedCode);\n\n\t\t\tif (usedCode !== -1 && userId) {\n\t\t\t\tbackupTokens.splice(usedCode, 1);\n\n\t\t\t\t// mark the code as used (remove it from the list)\n\t\t\t\tawait Users.update2FABackupCodesByUserId(userId, backupTokens);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tconst maxDelta = settings.get<number>('Accounts_TwoFactorAuthentication_MaxDelta');\n\t\tif (maxDelta) {\n\t\t\tconst verifiedDelta = speakeasy.totp.verifyDelta({\n\t\t\t\tsecret,\n\t\t\t\tencoding: 'base32',\n\t\t\t\ttoken,\n\t\t\t\twindow: maxDelta,\n\t\t\t});\n\n\t\t\treturn verifiedDelta !== undefined;\n\t\t}\n\n\t\treturn speakeasy.totp.verify({\n\t\t\tsecret,\n\t\t\tencoding: 'base32',\n\t\t\ttoken,\n\t\t});\n\t},\n\n\tgenerateCodes(): { codes: string[]; hashedCodes: string[] } {\n\t\t// generate 12 backup codes\n\t\tconst codes = [];\n\t\tconst hashedCodes = [];\n\t\tfor (let i = 0; i < 12; i++) {\n\t\t\tconst code = Random.id(8);\n\t\t\tcodes.push(code);\n\t\t\thashedCodes.push(SHA256(code));\n\t\t}\n\n\t\treturn { codes, hashedCodes };\n\t},\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/2fa/server/lib/totp.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/2fa/server/lib/totp.ts","inputSourceMap":{"version":3,"file":"app/2fa/server/lib/totp.ts","sourceRoot":"","sources":["app/2fa/server/lib/totp.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,SAAS,MAAM,WAAW,CAAC;AAElC,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAEpD,MAAM,CAAC,MAAM,IAAI,GAAG;IACnB,cAAc;QACb,OAAO,SAAS,CAAC,cAAc,EAAE,CAAC;IACnC,CAAC;IAED,kBAAkB,CAAC,MAAiC,EAAE,QAAgB;QACrE,OAAO,SAAS,CAAC,UAAU,CAAC;YAC3B,MAAM,EAAE,MAAM,CAAC,KAAK;YACpB,KAAK,EAAE,eAAe,QAAQ,EAAE;SAChC,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EACZ,MAAM,EACN,KAAK,EACL,YAAY,EACZ,MAAM,GAMN;QACA,0BAA0B;QAC1B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,EAAE,CAAC;YACxC,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YACjC,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAElD,IAAI,QAAQ,KAAK,CAAC,CAAC,IAAI,MAAM,EAAE,CAAC;gBAC/B,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAEjC,kDAAkD;gBAClD,MAAM,KAAK,CAAC,4BAA4B,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;gBAC/D,OAAO,IAAI,CAAC;YACb,CAAC;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QAED,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAS,2CAA2C,CAAC,CAAC;QACnF,IAAI,QAAQ,EAAE,CAAC;YACd,MAAM,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;gBAChD,MAAM;gBACN,QAAQ,EAAE,QAAQ;gBAClB,KAAK;gBACL,MAAM,EAAE,QAAQ;aAChB,CAAC,CAAC;YAEH,OAAO,aAAa,KAAK,SAAS,CAAC;QACpC,CAAC;QAED,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;YAC5B,MAAM;YACN,QAAQ,EAAE,QAAQ;YAClB,KAAK;SACL,CAAC,CAAC;IACJ,CAAC;IAED,aAAa;QACZ,2BAA2B;QAC3B,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,MAAM,WAAW,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7B,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC1B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjB,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAChC,CAAC;QAED,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;IAC/B,CAAC;CACD,CAAC","sourcesContent":["import { Users } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { SHA256 } from '@rocket.chat/sha256';\nimport speakeasy from 'speakeasy';\n\nimport { settings } from '../../../settings/server';\n\nexport const TOTP = {\n\tgenerateSecret(): speakeasy.GeneratedSecret {\n\t\treturn speakeasy.generateSecret();\n\t},\n\n\tgenerateOtpauthURL(secret: speakeasy.GeneratedSecret, username: string): string {\n\t\treturn speakeasy.otpauthURL({\n\t\t\tsecret: secret.ascii,\n\t\t\tlabel: `Rocket.Chat:${username}`,\n\t\t});\n\t},\n\n\tasync verify({\n\t\tsecret,\n\t\ttoken,\n\t\tbackupTokens,\n\t\tuserId,\n\t}: {\n\t\tsecret: string;\n\t\ttoken: string;\n\t\tbackupTokens?: string[];\n\t\tuserId?: string;\n\t}): Promise<boolean> {\n\t\t// validates a backup code\n\t\tif (token.length === 8 && backupTokens) {\n\t\t\tconst hashedCode = SHA256(token);\n\t\t\tconst usedCode = backupTokens.indexOf(hashedCode);\n\n\t\t\tif (usedCode !== -1 && userId) {\n\t\t\t\tbackupTokens.splice(usedCode, 1);\n\n\t\t\t\t// mark the code as used (remove it from the list)\n\t\t\t\tawait Users.update2FABackupCodesByUserId(userId, backupTokens);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tconst maxDelta = settings.get<number>('Accounts_TwoFactorAuthentication_MaxDelta');\n\t\tif (maxDelta) {\n\t\t\tconst verifiedDelta = speakeasy.totp.verifyDelta({\n\t\t\t\tsecret,\n\t\t\t\tencoding: 'base32',\n\t\t\t\ttoken,\n\t\t\t\twindow: maxDelta,\n\t\t\t});\n\n\t\t\treturn verifiedDelta !== undefined;\n\t\t}\n\n\t\treturn speakeasy.totp.verify({\n\t\t\tsecret,\n\t\t\tencoding: 'base32',\n\t\t\ttoken,\n\t\t});\n\t},\n\n\tgenerateCodes(): { codes: string[]; hashedCodes: string[] } {\n\t\t// generate 12 backup codes\n\t\tconst codes = [];\n\t\tconst hashedCodes = [];\n\t\tfor (let i = 0; i < 12; i++) {\n\t\t\tconst code = Random.id(8);\n\t\t\tcodes.push(code);\n\t\t\thashedCodes.push(SHA256(code));\n\t\t}\n\n\t\treturn { codes, hashedCodes };\n\t},\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      TOTP: () => TOTP\n    });\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 1);\n    let SHA256;\n    module.link(\"@rocket.chat/sha256\", {\n      SHA256(v) {\n        SHA256 = v;\n      }\n    }, 2);\n    let speakeasy;\n    module.link(\"speakeasy\", {\n      default(v) {\n        speakeasy = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const TOTP = {\n      generateSecret() {\n        return speakeasy.generateSecret();\n      },\n      generateOtpauthURL(secret, username) {\n        return speakeasy.otpauthURL({\n          secret: secret.ascii,\n          label: \"Rocket.Chat:\".concat(username)\n        });\n      },\n      async verify(_ref) {\n        let {\n          secret,\n          token,\n          backupTokens,\n          userId\n        } = _ref;\n        // validates a backup code\n        if (token.length === 8 && backupTokens) {\n          const hashedCode = SHA256(token);\n          const usedCode = backupTokens.indexOf(hashedCode);\n          if (usedCode !== -1 && userId) {\n            backupTokens.splice(usedCode, 1);\n            // mark the code as used (remove it from the list)\n            await Users.update2FABackupCodesByUserId(userId, backupTokens);\n            return true;\n          }\n          return false;\n        }\n        const maxDelta = settings.get('Accounts_TwoFactorAuthentication_MaxDelta');\n        if (maxDelta) {\n          const verifiedDelta = speakeasy.totp.verifyDelta({\n            secret,\n            encoding: 'base32',\n            token,\n            window: maxDelta\n          });\n          return verifiedDelta !== undefined;\n        }\n        return speakeasy.totp.verify({\n          secret,\n          encoding: 'base32',\n          token\n        });\n      },\n      generateCodes() {\n        // generate 12 backup codes\n        const codes = [];\n        const hashedCodes = [];\n        for (let i = 0; i < 12; i++) {\n          const code = Random.id(8);\n          codes.push(code);\n          hashedCodes.push(SHA256(code));\n        }\n        return {\n          codes,\n          hashedCodes\n        };\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","TOTP","Users","link","v","Random","SHA256","speakeasy","default","settings","__reifyWaitForDeps__","generateSecret","generateOtpauthURL","secret","username","otpauthURL","ascii","label","concat","verify","_ref","token","backupTokens","userId","length","hashedCode","usedCode","indexOf","splice","update2FABackupCodesByUserId","maxDelta","get","verifiedDelta","totp","verifyDelta","encoding","window","undefined","generateCodes","codes","hashedCodes","i","code","id","push","__reify_async_result__","_reifyError","self","async"],"sources":["app/2fa/server/lib/totp.ts"],"sourcesContent":["import { Users } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { SHA256 } from '@rocket.chat/sha256';\nimport speakeasy from 'speakeasy';\n\nimport { settings } from '../../../settings/server';\n\nexport const TOTP = {\n\tgenerateSecret(): speakeasy.GeneratedSecret {\n\t\treturn speakeasy.generateSecret();\n\t},\n\n\tgenerateOtpauthURL(secret: speakeasy.GeneratedSecret, username: string): string {\n\t\treturn speakeasy.otpauthURL({\n\t\t\tsecret: secret.ascii,\n\t\t\tlabel: `Rocket.Chat:${username}`,\n\t\t});\n\t},\n\n\tasync verify({\n\t\tsecret,\n\t\ttoken,\n\t\tbackupTokens,\n\t\tuserId,\n\t}: {\n\t\tsecret: string;\n\t\ttoken: string;\n\t\tbackupTokens?: string[];\n\t\tuserId?: string;\n\t}): Promise<boolean> {\n\t\t// validates a backup code\n\t\tif (token.length === 8 && backupTokens) {\n\t\t\tconst hashedCode = SHA256(token);\n\t\t\tconst usedCode = backupTokens.indexOf(hashedCode);\n\n\t\t\tif (usedCode !== -1 && userId) {\n\t\t\t\tbackupTokens.splice(usedCode, 1);\n\n\t\t\t\t// mark the code as used (remove it from the list)\n\t\t\t\tawait Users.update2FABackupCodesByUserId(userId, backupTokens);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tconst maxDelta = settings.get<number>('Accounts_TwoFactorAuthentication_MaxDelta');\n\t\tif (maxDelta) {\n\t\t\tconst verifiedDelta = speakeasy.totp.verifyDelta({\n\t\t\t\tsecret,\n\t\t\t\tencoding: 'base32',\n\t\t\t\ttoken,\n\t\t\t\twindow: maxDelta,\n\t\t\t});\n\n\t\t\treturn verifiedDelta !== undefined;\n\t\t}\n\n\t\treturn speakeasy.totp.verify({\n\t\t\tsecret,\n\t\t\tencoding: 'base32',\n\t\t\ttoken,\n\t\t});\n\t},\n\n\tgenerateCodes(): { codes: string[]; hashedCodes: string[] } {\n\t\t// generate 12 backup codes\n\t\tconst codes = [];\n\t\tconst hashedCodes = [];\n\t\tfor (let i = 0; i < 12; i++) {\n\t\t\tconst code = Random.id(8);\n\t\t\tcodes.push(code);\n\t\t\thashedCodes.push(SHA256(code));\n\t\t}\n\n\t\treturn { codes, hashedCodes };\n\t},\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"fa94e883bc8fb19d3cbc8e4b35cd3a35360e48d2"}
