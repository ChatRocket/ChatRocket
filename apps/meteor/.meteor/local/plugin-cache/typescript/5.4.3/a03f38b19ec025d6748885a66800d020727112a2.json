{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/autotranslate/client/lib/autotranslate.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/autotranslate/client/lib/autotranslate.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/autotranslate/client/lib/autotranslate.ts","inputSourceMap":{"version":3,"file":"app/autotranslate/client/lib/autotranslate.ts","sourceRoot":"","sources":["app/autotranslate/client/lib/autotranslate.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n\tIRoom,\n\tISubscription,\n\tISupportedLanguage,\n\tITranslatedMessage,\n\tIUser,\n\tMessageAttachmentDefault,\n} from '@rocket.chat/core-typings';\nimport { isTranslatedMessageAttachment } from '@rocket.chat/core-typings';\nimport mem, { memClear } from 'mem';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport {\n\thasTranslationLanguageInAttachments,\n\thasTranslationLanguageInMessage,\n} from '../../../../client/views/room/MessageList/lib/autoTranslate';\nimport { hasPermission } from '../../../authorization/client';\nimport { Subscriptions, Messages } from '../../../models/client';\nimport { settings } from '../../../settings/client';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\n\nlet userLanguage = 'en';\nlet username = '';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tconst user: Pick<IUser, 'language' | 'username'> | null = Meteor.user();\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\t\tuserLanguage = user.language || 'en';\n\t\tusername = user.username || '';\n\t});\n});\n\nexport const AutoTranslate = {\n\tinitialized: false,\n\tprovidersMetadata: {} as { [providerNamer: string]: { name: string; displayName: string } },\n\tmessageIdsToWait: {} as { [messageId: string]: string },\n\tsupportedLanguages: [] as ISupportedLanguage[] | undefined,\n\n\tfindSubscriptionByRid: mem((rid) => Subscriptions.findOne({ rid })),\n\n\tgetLanguage(rid: IRoom['_id']): string {\n\t\tlet subscription: ISubscription | undefined;\n\t\tif (rid) {\n\t\t\tsubscription = this.findSubscriptionByRid(rid);\n\t\t}\n\t\tconst language = (subscription?.autoTranslateLanguage || userLanguage || window.defaultUserLanguage?.()) as string;\n\t\tif (language.indexOf('-') !== -1) {\n\t\t\tif (!(this.supportedLanguages || []).some((supportedLanguage) => supportedLanguage.language === language)) {\n\t\t\t\treturn language.slice(0, 2);\n\t\t\t}\n\t\t}\n\t\treturn language;\n\t},\n\n\ttranslateAttachments(\n\t\tattachments: MessageAttachmentDefault[],\n\t\tlanguage: string,\n\t\tautoTranslateShowInverse: boolean,\n\t): MessageAttachmentDefault[] {\n\t\tif (!isTranslatedMessageAttachment(attachments)) {\n\t\t\treturn attachments;\n\t\t}\n\t\tfor (const attachment of attachments) {\n\t\t\tif (attachment.author_name !== username) {\n\t\t\t\tif (attachment.text && attachment.translations && attachment.translations[language]) {\n\t\t\t\t\tattachment.translations.original = attachment.text;\n\n\t\t\t\t\tif (autoTranslateShowInverse) {\n\t\t\t\t\t\tattachment.text = attachment.translations.original;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattachment.text = attachment.translations[language];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (attachment.description && attachment.translations && attachment.translations[language]) {\n\t\t\t\t\tattachment.translations.original = attachment.description;\n\n\t\t\t\t\tif (autoTranslateShowInverse) {\n\t\t\t\t\t\tattachment.description = attachment.translations.original;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattachment.description = attachment.translations[language];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// @ts-expect-error - not sure what to do with this\n\t\t\t\tif (attachment.attachments && attachment.attachments.length > 0) {\n\t\t\t\t\t// @ts-expect-error - not sure what to do with this\n\t\t\t\t\tattachment.attachments = this.translateAttachments(attachment.attachments, language);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn attachments;\n\t},\n\n\tinit(): void {\n\t\tif (this.initialized) {\n\t\t\treturn;\n\t\t}\n\n\t\tTracker.autorun(async (c) => {\n\t\t\tconst uid = Meteor.userId();\n\t\t\tif (!settings.get('AutoTranslate_Enabled') || !uid || !hasPermission('auto-translate')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tc.stop();\n\n\t\t\ttry {\n\t\t\t\t[this.providersMetadata, this.supportedLanguages] = await Promise.all([\n\t\t\t\t\tsdk.call('autoTranslate.getProviderUiMetadata'),\n\t\t\t\t\tsdk.call('autoTranslate.getSupportedLanguages', 'en'),\n\t\t\t\t]);\n\t\t\t} catch (e: unknown) {\n\t\t\t\t// Avoid unwanted error message on UI when autotranslate is disabled while fetching data\n\t\t\t\tconsole.error((e as Error).message);\n\t\t\t}\n\t\t});\n\n\t\tSubscriptions.find().observeChanges({\n\t\t\tchanged: (_id: string, fields: ISubscription) => {\n\t\t\t\tif (fields.hasOwnProperty('autoTranslate') || fields.hasOwnProperty('autoTranslateLanguage')) {\n\t\t\t\t\tmemClear(this.findSubscriptionByRid);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tthis.initialized = true;\n\t},\n};\n\nexport const createAutoTranslateMessageStreamHandler = (): ((message: ITranslatedMessage) => void) => {\n\tAutoTranslate.init();\n\n\treturn (message: ITranslatedMessage): void => {\n\t\tif (message.u && message.u._id !== Meteor.userId()) {\n\t\t\tconst subscription = AutoTranslate.findSubscriptionByRid(message.rid);\n\t\t\tconst language = AutoTranslate.getLanguage(message.rid);\n\t\t\tif (\n\t\t\t\tsubscription &&\n\t\t\t\tsubscription.autoTranslate === true &&\n\t\t\t\tmessage.msg &&\n\t\t\t\t(!message.translations ||\n\t\t\t\t\t(!hasTranslationLanguageInMessage(message, language) && !hasTranslationLanguageInAttachments(message.attachments, language)))\n\t\t\t) {\n\t\t\t\t// || (message.attachments && !_.find(message.attachments, attachment => { return attachment.translations && attachment.translations[language]; }))\n\t\t\t\tMessages.update({ _id: message._id }, { $set: { autoTranslateFetching: true } });\n\t\t\t} else if (AutoTranslate.messageIdsToWait[message._id] !== undefined && subscription && subscription.autoTranslate !== true) {\n\t\t\t\tMessages.update({ _id: message._id }, { $set: { autoTranslateShowInverse: true }, $unset: { autoTranslateFetching: true } });\n\t\t\t\tdelete AutoTranslate.messageIdsToWait[message._id];\n\t\t\t} else if (message.autoTranslateFetching === true) {\n\t\t\t\tMessages.update({ _id: message._id }, { $unset: { autoTranslateFetching: true } });\n\t\t\t}\n\t\t}\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/autotranslate/client/lib/autotranslate.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/autotranslate/client/lib/autotranslate.ts","inputSourceMap":{"version":3,"file":"app/autotranslate/client/lib/autotranslate.ts","sourceRoot":"","sources":["app/autotranslate/client/lib/autotranslate.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n\tIRoom,\n\tISubscription,\n\tISupportedLanguage,\n\tITranslatedMessage,\n\tIUser,\n\tMessageAttachmentDefault,\n} from '@rocket.chat/core-typings';\nimport { isTranslatedMessageAttachment } from '@rocket.chat/core-typings';\nimport mem, { memClear } from 'mem';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport {\n\thasTranslationLanguageInAttachments,\n\thasTranslationLanguageInMessage,\n} from '../../../../client/views/room/MessageList/lib/autoTranslate';\nimport { hasPermission } from '../../../authorization/client';\nimport { Subscriptions, Messages } from '../../../models/client';\nimport { settings } from '../../../settings/client';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\n\nlet userLanguage = 'en';\nlet username = '';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tconst user: Pick<IUser, 'language' | 'username'> | null = Meteor.user();\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\t\tuserLanguage = user.language || 'en';\n\t\tusername = user.username || '';\n\t});\n});\n\nexport const AutoTranslate = {\n\tinitialized: false,\n\tprovidersMetadata: {} as { [providerNamer: string]: { name: string; displayName: string } },\n\tmessageIdsToWait: {} as { [messageId: string]: string },\n\tsupportedLanguages: [] as ISupportedLanguage[] | undefined,\n\n\tfindSubscriptionByRid: mem((rid) => Subscriptions.findOne({ rid })),\n\n\tgetLanguage(rid: IRoom['_id']): string {\n\t\tlet subscription: ISubscription | undefined;\n\t\tif (rid) {\n\t\t\tsubscription = this.findSubscriptionByRid(rid);\n\t\t}\n\t\tconst language = (subscription?.autoTranslateLanguage || userLanguage || window.defaultUserLanguage?.()) as string;\n\t\tif (language.indexOf('-') !== -1) {\n\t\t\tif (!(this.supportedLanguages || []).some((supportedLanguage) => supportedLanguage.language === language)) {\n\t\t\t\treturn language.slice(0, 2);\n\t\t\t}\n\t\t}\n\t\treturn language;\n\t},\n\n\ttranslateAttachments(\n\t\tattachments: MessageAttachmentDefault[],\n\t\tlanguage: string,\n\t\tautoTranslateShowInverse: boolean,\n\t): MessageAttachmentDefault[] {\n\t\tif (!isTranslatedMessageAttachment(attachments)) {\n\t\t\treturn attachments;\n\t\t}\n\t\tfor (const attachment of attachments) {\n\t\t\tif (attachment.author_name !== username) {\n\t\t\t\tif (attachment.text && attachment.translations && attachment.translations[language]) {\n\t\t\t\t\tattachment.translations.original = attachment.text;\n\n\t\t\t\t\tif (autoTranslateShowInverse) {\n\t\t\t\t\t\tattachment.text = attachment.translations.original;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattachment.text = attachment.translations[language];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (attachment.description && attachment.translations && attachment.translations[language]) {\n\t\t\t\t\tattachment.translations.original = attachment.description;\n\n\t\t\t\t\tif (autoTranslateShowInverse) {\n\t\t\t\t\t\tattachment.description = attachment.translations.original;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattachment.description = attachment.translations[language];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// @ts-expect-error - not sure what to do with this\n\t\t\t\tif (attachment.attachments && attachment.attachments.length > 0) {\n\t\t\t\t\t// @ts-expect-error - not sure what to do with this\n\t\t\t\t\tattachment.attachments = this.translateAttachments(attachment.attachments, language);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn attachments;\n\t},\n\n\tinit(): void {\n\t\tif (this.initialized) {\n\t\t\treturn;\n\t\t}\n\n\t\tTracker.autorun(async (c) => {\n\t\t\tconst uid = Meteor.userId();\n\t\t\tif (!settings.get('AutoTranslate_Enabled') || !uid || !hasPermission('auto-translate')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tc.stop();\n\n\t\t\ttry {\n\t\t\t\t[this.providersMetadata, this.supportedLanguages] = await Promise.all([\n\t\t\t\t\tsdk.call('autoTranslate.getProviderUiMetadata'),\n\t\t\t\t\tsdk.call('autoTranslate.getSupportedLanguages', 'en'),\n\t\t\t\t]);\n\t\t\t} catch (e: unknown) {\n\t\t\t\t// Avoid unwanted error message on UI when autotranslate is disabled while fetching data\n\t\t\t\tconsole.error((e as Error).message);\n\t\t\t}\n\t\t});\n\n\t\tSubscriptions.find().observeChanges({\n\t\t\tchanged: (_id: string, fields: ISubscription) => {\n\t\t\t\tif (fields.hasOwnProperty('autoTranslate') || fields.hasOwnProperty('autoTranslateLanguage')) {\n\t\t\t\t\tmemClear(this.findSubscriptionByRid);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tthis.initialized = true;\n\t},\n};\n\nexport const createAutoTranslateMessageStreamHandler = (): ((message: ITranslatedMessage) => void) => {\n\tAutoTranslate.init();\n\n\treturn (message: ITranslatedMessage): void => {\n\t\tif (message.u && message.u._id !== Meteor.userId()) {\n\t\t\tconst subscription = AutoTranslate.findSubscriptionByRid(message.rid);\n\t\t\tconst language = AutoTranslate.getLanguage(message.rid);\n\t\t\tif (\n\t\t\t\tsubscription &&\n\t\t\t\tsubscription.autoTranslate === true &&\n\t\t\t\tmessage.msg &&\n\t\t\t\t(!message.translations ||\n\t\t\t\t\t(!hasTranslationLanguageInMessage(message, language) && !hasTranslationLanguageInAttachments(message.attachments, language)))\n\t\t\t) {\n\t\t\t\t// || (message.attachments && !_.find(message.attachments, attachment => { return attachment.translations && attachment.translations[language]; }))\n\t\t\t\tMessages.update({ _id: message._id }, { $set: { autoTranslateFetching: true } });\n\t\t\t} else if (AutoTranslate.messageIdsToWait[message._id] !== undefined && subscription && subscription.autoTranslate !== true) {\n\t\t\t\tMessages.update({ _id: message._id }, { $set: { autoTranslateShowInverse: true }, $unset: { autoTranslateFetching: true } });\n\t\t\t\tdelete AutoTranslate.messageIdsToWait[message._id];\n\t\t\t} else if (message.autoTranslateFetching === true) {\n\t\t\t\tMessages.update({ _id: message._id }, { $unset: { autoTranslateFetching: true } });\n\t\t\t}\n\t\t}\n\t};\n};\n"]}}},"code":"module.export({\n  AutoTranslate: () => AutoTranslate,\n  createAutoTranslateMessageStreamHandler: () => createAutoTranslateMessageStreamHandler\n});\nlet isTranslatedMessageAttachment;\nmodule.link(\"@rocket.chat/core-typings\", {\n  isTranslatedMessageAttachment(v) {\n    isTranslatedMessageAttachment = v;\n  }\n}, 0);\nlet mem, memClear;\nmodule.link(\"mem\", {\n  default(v) {\n    mem = v;\n  },\n  memClear(v) {\n    memClear = v;\n  }\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 2);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n}, 3);\nlet hasTranslationLanguageInAttachments, hasTranslationLanguageInMessage;\nmodule.link(\"../../../../client/views/room/MessageList/lib/autoTranslate\", {\n  hasTranslationLanguageInAttachments(v) {\n    hasTranslationLanguageInAttachments = v;\n  },\n  hasTranslationLanguageInMessage(v) {\n    hasTranslationLanguageInMessage = v;\n  }\n}, 4);\nlet hasPermission;\nmodule.link(\"../../../authorization/client\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n}, 5);\nlet Subscriptions, Messages;\nmodule.link(\"../../../models/client\", {\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n  Messages(v) {\n    Messages = v;\n  }\n}, 6);\nlet settings;\nmodule.link(\"../../../settings/client\", {\n  settings(v) {\n    settings = v;\n  }\n}, 7);\nlet sdk;\nmodule.link(\"../../../utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 8);\nlet userLanguage = 'en';\nlet username = '';\nMeteor.startup(() => {\n  Tracker.autorun(() => {\n    const user = Meteor.user();\n    if (!user) {\n      return;\n    }\n    userLanguage = user.language || 'en';\n    username = user.username || '';\n  });\n});\nconst AutoTranslate = {\n  initialized: false,\n  providersMetadata: {},\n  messageIdsToWait: {},\n  supportedLanguages: [],\n  findSubscriptionByRid: mem(rid => Subscriptions.findOne({\n    rid\n  })),\n  getLanguage(rid) {\n    var _subscription, _window$defaultUserLa, _window;\n    let subscription;\n    if (rid) {\n      subscription = this.findSubscriptionByRid(rid);\n    }\n    const language = ((_subscription = subscription) === null || _subscription === void 0 ? void 0 : _subscription.autoTranslateLanguage) || userLanguage || ((_window$defaultUserLa = (_window = window).defaultUserLanguage) === null || _window$defaultUserLa === void 0 ? void 0 : _window$defaultUserLa.call(_window));\n    if (language.indexOf('-') !== -1) {\n      if (!(this.supportedLanguages || []).some(supportedLanguage => supportedLanguage.language === language)) {\n        return language.slice(0, 2);\n      }\n    }\n    return language;\n  },\n  translateAttachments(attachments, language, autoTranslateShowInverse) {\n    if (!isTranslatedMessageAttachment(attachments)) {\n      return attachments;\n    }\n    for (const attachment of attachments) {\n      if (attachment.author_name !== username) {\n        if (attachment.text && attachment.translations && attachment.translations[language]) {\n          attachment.translations.original = attachment.text;\n          if (autoTranslateShowInverse) {\n            attachment.text = attachment.translations.original;\n          } else {\n            attachment.text = attachment.translations[language];\n          }\n        }\n        if (attachment.description && attachment.translations && attachment.translations[language]) {\n          attachment.translations.original = attachment.description;\n          if (autoTranslateShowInverse) {\n            attachment.description = attachment.translations.original;\n          } else {\n            attachment.description = attachment.translations[language];\n          }\n        }\n        // @ts-expect-error - not sure what to do with this\n        if (attachment.attachments && attachment.attachments.length > 0) {\n          // @ts-expect-error - not sure what to do with this\n          attachment.attachments = this.translateAttachments(attachment.attachments, language);\n        }\n      }\n    }\n    return attachments;\n  },\n  init() {\n    if (this.initialized) {\n      return;\n    }\n    Tracker.autorun(async c => {\n      const uid = Meteor.userId();\n      if (!settings.get('AutoTranslate_Enabled') || !uid || !hasPermission('auto-translate')) {\n        return;\n      }\n      c.stop();\n      try {\n        [this.providersMetadata, this.supportedLanguages] = await Promise.all([sdk.call('autoTranslate.getProviderUiMetadata'), sdk.call('autoTranslate.getSupportedLanguages', 'en')]);\n      } catch (e) {\n        // Avoid unwanted error message on UI when autotranslate is disabled while fetching data\n        console.error(e.message);\n      }\n    });\n    Subscriptions.find().observeChanges({\n      changed: (_id, fields) => {\n        if (fields.hasOwnProperty('autoTranslate') || fields.hasOwnProperty('autoTranslateLanguage')) {\n          memClear(this.findSubscriptionByRid);\n        }\n      }\n    });\n    this.initialized = true;\n  }\n};\nconst createAutoTranslateMessageStreamHandler = () => {\n  AutoTranslate.init();\n  return message => {\n    if (message.u && message.u._id !== Meteor.userId()) {\n      const subscription = AutoTranslate.findSubscriptionByRid(message.rid);\n      const language = AutoTranslate.getLanguage(message.rid);\n      if (subscription && subscription.autoTranslate === true && message.msg && (!message.translations || !hasTranslationLanguageInMessage(message, language) && !hasTranslationLanguageInAttachments(message.attachments, language))) {\n        // || (message.attachments && !_.find(message.attachments, attachment => { return attachment.translations && attachment.translations[language]; }))\n        Messages.update({\n          _id: message._id\n        }, {\n          $set: {\n            autoTranslateFetching: true\n          }\n        });\n      } else if (AutoTranslate.messageIdsToWait[message._id] !== undefined && subscription && subscription.autoTranslate !== true) {\n        Messages.update({\n          _id: message._id\n        }, {\n          $set: {\n            autoTranslateShowInverse: true\n          },\n          $unset: {\n            autoTranslateFetching: true\n          }\n        });\n        delete AutoTranslate.messageIdsToWait[message._id];\n      } else if (message.autoTranslateFetching === true) {\n        Messages.update({\n          _id: message._id\n        }, {\n          $unset: {\n            autoTranslateFetching: true\n          }\n        });\n      }\n    }\n  };\n};","map":{"version":3,"names":["module","export","AutoTranslate","createAutoTranslateMessageStreamHandler","isTranslatedMessageAttachment","link","v","mem","memClear","default","Meteor","Tracker","hasTranslationLanguageInAttachments","hasTranslationLanguageInMessage","hasPermission","Subscriptions","Messages","settings","sdk","userLanguage","username","startup","autorun","user","language","initialized","providersMetadata","messageIdsToWait","supportedLanguages","findSubscriptionByRid","rid","findOne","getLanguage","_subscription","_window$defaultUserLa","_window","subscription","autoTranslateLanguage","window","defaultUserLanguage","call","indexOf","some","supportedLanguage","slice","translateAttachments","attachments","autoTranslateShowInverse","attachment","author_name","text","translations","original","description","length","init","c","uid","userId","get","stop","Promise","all","e","console","error","message","find","observeChanges","changed","_id","fields","hasOwnProperty","u","autoTranslate","msg","update","$set","autoTranslateFetching","undefined","$unset"],"sources":["app/autotranslate/client/lib/autotranslate.ts"],"sourcesContent":["import type {\n\tIRoom,\n\tISubscription,\n\tISupportedLanguage,\n\tITranslatedMessage,\n\tIUser,\n\tMessageAttachmentDefault,\n} from '@rocket.chat/core-typings';\nimport { isTranslatedMessageAttachment } from '@rocket.chat/core-typings';\nimport mem, { memClear } from 'mem';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport {\n\thasTranslationLanguageInAttachments,\n\thasTranslationLanguageInMessage,\n} from '../../../../client/views/room/MessageList/lib/autoTranslate';\nimport { hasPermission } from '../../../authorization/client';\nimport { Subscriptions, Messages } from '../../../models/client';\nimport { settings } from '../../../settings/client';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\n\nlet userLanguage = 'en';\nlet username = '';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tconst user: Pick<IUser, 'language' | 'username'> | null = Meteor.user();\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\t\tuserLanguage = user.language || 'en';\n\t\tusername = user.username || '';\n\t});\n});\n\nexport const AutoTranslate = {\n\tinitialized: false,\n\tprovidersMetadata: {} as { [providerNamer: string]: { name: string; displayName: string } },\n\tmessageIdsToWait: {} as { [messageId: string]: string },\n\tsupportedLanguages: [] as ISupportedLanguage[] | undefined,\n\n\tfindSubscriptionByRid: mem((rid) => Subscriptions.findOne({ rid })),\n\n\tgetLanguage(rid: IRoom['_id']): string {\n\t\tlet subscription: ISubscription | undefined;\n\t\tif (rid) {\n\t\t\tsubscription = this.findSubscriptionByRid(rid);\n\t\t}\n\t\tconst language = (subscription?.autoTranslateLanguage || userLanguage || window.defaultUserLanguage?.()) as string;\n\t\tif (language.indexOf('-') !== -1) {\n\t\t\tif (!(this.supportedLanguages || []).some((supportedLanguage) => supportedLanguage.language === language)) {\n\t\t\t\treturn language.slice(0, 2);\n\t\t\t}\n\t\t}\n\t\treturn language;\n\t},\n\n\ttranslateAttachments(\n\t\tattachments: MessageAttachmentDefault[],\n\t\tlanguage: string,\n\t\tautoTranslateShowInverse: boolean,\n\t): MessageAttachmentDefault[] {\n\t\tif (!isTranslatedMessageAttachment(attachments)) {\n\t\t\treturn attachments;\n\t\t}\n\t\tfor (const attachment of attachments) {\n\t\t\tif (attachment.author_name !== username) {\n\t\t\t\tif (attachment.text && attachment.translations && attachment.translations[language]) {\n\t\t\t\t\tattachment.translations.original = attachment.text;\n\n\t\t\t\t\tif (autoTranslateShowInverse) {\n\t\t\t\t\t\tattachment.text = attachment.translations.original;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattachment.text = attachment.translations[language];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (attachment.description && attachment.translations && attachment.translations[language]) {\n\t\t\t\t\tattachment.translations.original = attachment.description;\n\n\t\t\t\t\tif (autoTranslateShowInverse) {\n\t\t\t\t\t\tattachment.description = attachment.translations.original;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattachment.description = attachment.translations[language];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// @ts-expect-error - not sure what to do with this\n\t\t\t\tif (attachment.attachments && attachment.attachments.length > 0) {\n\t\t\t\t\t// @ts-expect-error - not sure what to do with this\n\t\t\t\t\tattachment.attachments = this.translateAttachments(attachment.attachments, language);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn attachments;\n\t},\n\n\tinit(): void {\n\t\tif (this.initialized) {\n\t\t\treturn;\n\t\t}\n\n\t\tTracker.autorun(async (c) => {\n\t\t\tconst uid = Meteor.userId();\n\t\t\tif (!settings.get('AutoTranslate_Enabled') || !uid || !hasPermission('auto-translate')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tc.stop();\n\n\t\t\ttry {\n\t\t\t\t[this.providersMetadata, this.supportedLanguages] = await Promise.all([\n\t\t\t\t\tsdk.call('autoTranslate.getProviderUiMetadata'),\n\t\t\t\t\tsdk.call('autoTranslate.getSupportedLanguages', 'en'),\n\t\t\t\t]);\n\t\t\t} catch (e: unknown) {\n\t\t\t\t// Avoid unwanted error message on UI when autotranslate is disabled while fetching data\n\t\t\t\tconsole.error((e as Error).message);\n\t\t\t}\n\t\t});\n\n\t\tSubscriptions.find().observeChanges({\n\t\t\tchanged: (_id: string, fields: ISubscription) => {\n\t\t\t\tif (fields.hasOwnProperty('autoTranslate') || fields.hasOwnProperty('autoTranslateLanguage')) {\n\t\t\t\t\tmemClear(this.findSubscriptionByRid);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tthis.initialized = true;\n\t},\n};\n\nexport const createAutoTranslateMessageStreamHandler = (): ((message: ITranslatedMessage) => void) => {\n\tAutoTranslate.init();\n\n\treturn (message: ITranslatedMessage): void => {\n\t\tif (message.u && message.u._id !== Meteor.userId()) {\n\t\t\tconst subscription = AutoTranslate.findSubscriptionByRid(message.rid);\n\t\t\tconst language = AutoTranslate.getLanguage(message.rid);\n\t\t\tif (\n\t\t\t\tsubscription &&\n\t\t\t\tsubscription.autoTranslate === true &&\n\t\t\t\tmessage.msg &&\n\t\t\t\t(!message.translations ||\n\t\t\t\t\t(!hasTranslationLanguageInMessage(message, language) && !hasTranslationLanguageInAttachments(message.attachments, language)))\n\t\t\t) {\n\t\t\t\t// || (message.attachments && !_.find(message.attachments, attachment => { return attachment.translations && attachment.translations[language]; }))\n\t\t\t\tMessages.update({ _id: message._id }, { $set: { autoTranslateFetching: true } });\n\t\t\t} else if (AutoTranslate.messageIdsToWait[message._id] !== undefined && subscription && subscription.autoTranslate !== true) {\n\t\t\t\tMessages.update({ _id: message._id }, { $set: { autoTranslateShowInverse: true }, $unset: { autoTranslateFetching: true } });\n\t\t\t\tdelete AutoTranslate.messageIdsToWait[message._id];\n\t\t\t} else if (message.autoTranslateFetching === true) {\n\t\t\t\tMessages.update({ _id: message._id }, { $unset: { autoTranslateFetching: true } });\n\t\t\t}\n\t\t}\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a03f38b19ec025d6748885a66800d020727112a2"}
