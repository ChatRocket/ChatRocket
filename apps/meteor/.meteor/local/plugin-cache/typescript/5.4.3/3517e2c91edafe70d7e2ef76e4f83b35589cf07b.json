{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/addUserToDefaultChannels.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/addUserToDefaultChannels.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/addUserToDefaultChannels.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/addUserToDefaultChannels.ts","sourceRoot":"","sources":["app/lib/server/functions/addUserToDefaultChannels.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEpD,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,yCAAyC,EAAE,MAAM,kEAAkE,CAAC;AAC7H,OAAO,EAAE,0BAA0B,EAAE,MAAM,+CAA+C,CAAC;AAC3F,OAAO,EAAE,+BAA+B,EAAE,MAAM,uBAAuB,CAAC;AACxE,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAE1D,MAAM,CAAC,MAAM,wBAAwB,GAAG,KAAK,WAAW,IAAW,EAAE,QAAkB;IACtF,MAAM,SAAS,CAAC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;IACvD,MAAM,YAAY,GAAG,MAAM,kBAAkB,EAAE,CAAC;IAEhD,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,YAAY,EAAE,CAAC;QACvC,IAAI,CAAC,CAAC,MAAM,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;YACrG,MAAM,mBAAmB,GAAG,yCAAyC,CAAC,IAAI,CAAC,CAAC;YAE5E,kCAAkC;YAClC,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,aAAa,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,EAAE;gBAC5E,EAAE,EAAE,IAAI,IAAI,EAAE;gBACd,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,CAAC;gBACT,YAAY,EAAE,CAAC;gBACf,aAAa,EAAE,CAAC;gBAChB,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;gBACjC,GAAG,mBAAmB;gBACtB,GAAG,0BAA0B,CAAC,IAAI,CAAC;aACnC,CAAC,CAAC;YAEH,IAAI,UAAU,EAAE,CAAC;gBAChB,KAAK,+BAA+B,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YAC9D,CAAC;YAED,6BAA6B;YAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACf,MAAM,OAAO,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;YAC5E,CAAC;QACF,CAAC;IACF,CAAC;AACF,CAAC,CAAC","sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { Subscriptions } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { getSubscriptionAutotranslateDefaultConfig } from '../../../../server/lib/getSubscriptionAutotranslateDefaultConfig';\nimport { getDefaultSubscriptionPref } from '../../../utils/lib/getDefaultSubscriptionPref';\nimport { notifyOnSubscriptionChangedById } from '../lib/notifyListener';\nimport { getDefaultChannels } from './getDefaultChannels';\n\nexport const addUserToDefaultChannels = async function (user: IUser, silenced?: boolean): Promise<void> {\n\tawait callbacks.run('beforeJoinDefaultChannels', user);\n\tconst defaultRooms = await getDefaultChannels();\n\n\tfor await (const room of defaultRooms) {\n\t\tif (!(await Subscriptions.findOneByRoomIdAndUserId(room._id, user._id, { projection: { _id: 1 } }))) {\n\t\t\tconst autoTranslateConfig = getSubscriptionAutotranslateDefaultConfig(user);\n\n\t\t\t// Add a subscription to this user\n\t\t\tconst { insertedId } = await Subscriptions.createWithRoomAndUser(room, user, {\n\t\t\t\tts: new Date(),\n\t\t\t\topen: true,\n\t\t\t\talert: true,\n\t\t\t\tunread: 1,\n\t\t\t\tuserMentions: 1,\n\t\t\t\tgroupMentions: 0,\n\t\t\t\t...(room.favorite && { f: true }),\n\t\t\t\t...autoTranslateConfig,\n\t\t\t\t...getDefaultSubscriptionPref(user),\n\t\t\t});\n\n\t\t\tif (insertedId) {\n\t\t\t\tvoid notifyOnSubscriptionChangedById(insertedId, 'inserted');\n\t\t\t}\n\n\t\t\t// Insert user joined message\n\t\t\tif (!silenced) {\n\t\t\t\tawait Message.saveSystemMessage('uj', room._id, user.username || '', user);\n\t\t\t}\n\t\t}\n\t}\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/addUserToDefaultChannels.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/addUserToDefaultChannels.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/addUserToDefaultChannels.ts","sourceRoot":"","sources":["app/lib/server/functions/addUserToDefaultChannels.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEpD,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,yCAAyC,EAAE,MAAM,kEAAkE,CAAC;AAC7H,OAAO,EAAE,0BAA0B,EAAE,MAAM,+CAA+C,CAAC;AAC3F,OAAO,EAAE,+BAA+B,EAAE,MAAM,uBAAuB,CAAC;AACxE,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAE1D,MAAM,CAAC,MAAM,wBAAwB,GAAG,KAAK,WAAW,IAAW,EAAE,QAAkB;IACtF,MAAM,SAAS,CAAC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;IACvD,MAAM,YAAY,GAAG,MAAM,kBAAkB,EAAE,CAAC;IAEhD,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,YAAY,EAAE,CAAC;QACvC,IAAI,CAAC,CAAC,MAAM,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;YACrG,MAAM,mBAAmB,GAAG,yCAAyC,CAAC,IAAI,CAAC,CAAC;YAE5E,kCAAkC;YAClC,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,aAAa,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,EAAE;gBAC5E,EAAE,EAAE,IAAI,IAAI,EAAE;gBACd,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,CAAC;gBACT,YAAY,EAAE,CAAC;gBACf,aAAa,EAAE,CAAC;gBAChB,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;gBACjC,GAAG,mBAAmB;gBACtB,GAAG,0BAA0B,CAAC,IAAI,CAAC;aACnC,CAAC,CAAC;YAEH,IAAI,UAAU,EAAE,CAAC;gBAChB,KAAK,+BAA+B,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YAC9D,CAAC;YAED,6BAA6B;YAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACf,MAAM,OAAO,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;YAC5E,CAAC;QACF,CAAC;IACF,CAAC;AACF,CAAC,CAAC","sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { Subscriptions } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { getSubscriptionAutotranslateDefaultConfig } from '../../../../server/lib/getSubscriptionAutotranslateDefaultConfig';\nimport { getDefaultSubscriptionPref } from '../../../utils/lib/getDefaultSubscriptionPref';\nimport { notifyOnSubscriptionChangedById } from '../lib/notifyListener';\nimport { getDefaultChannels } from './getDefaultChannels';\n\nexport const addUserToDefaultChannels = async function (user: IUser, silenced?: boolean): Promise<void> {\n\tawait callbacks.run('beforeJoinDefaultChannels', user);\n\tconst defaultRooms = await getDefaultChannels();\n\n\tfor await (const room of defaultRooms) {\n\t\tif (!(await Subscriptions.findOneByRoomIdAndUserId(room._id, user._id, { projection: { _id: 1 } }))) {\n\t\t\tconst autoTranslateConfig = getSubscriptionAutotranslateDefaultConfig(user);\n\n\t\t\t// Add a subscription to this user\n\t\t\tconst { insertedId } = await Subscriptions.createWithRoomAndUser(room, user, {\n\t\t\t\tts: new Date(),\n\t\t\t\topen: true,\n\t\t\t\talert: true,\n\t\t\t\tunread: 1,\n\t\t\t\tuserMentions: 1,\n\t\t\t\tgroupMentions: 0,\n\t\t\t\t...(room.favorite && { f: true }),\n\t\t\t\t...autoTranslateConfig,\n\t\t\t\t...getDefaultSubscriptionPref(user),\n\t\t\t});\n\n\t\t\tif (insertedId) {\n\t\t\t\tvoid notifyOnSubscriptionChangedById(insertedId, 'inserted');\n\t\t\t}\n\n\t\t\t// Insert user joined message\n\t\t\tif (!silenced) {\n\t\t\t\tawait Message.saveSystemMessage('uj', room._id, user.username || '', user);\n\t\t\t}\n\t\t}\n\t}\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      addUserToDefaultChannels: () => addUserToDefaultChannels\n    });\n    let Message;\n    module.link(\"@rocket.chat/core-services\", {\n      Message(v) {\n        Message = v;\n      }\n    }, 0);\n    let Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 1);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 2);\n    let getSubscriptionAutotranslateDefaultConfig;\n    module.link(\"../../../../server/lib/getSubscriptionAutotranslateDefaultConfig\", {\n      getSubscriptionAutotranslateDefaultConfig(v) {\n        getSubscriptionAutotranslateDefaultConfig = v;\n      }\n    }, 3);\n    let getDefaultSubscriptionPref;\n    module.link(\"../../../utils/lib/getDefaultSubscriptionPref\", {\n      getDefaultSubscriptionPref(v) {\n        getDefaultSubscriptionPref = v;\n      }\n    }, 4);\n    let notifyOnSubscriptionChangedById;\n    module.link(\"../lib/notifyListener\", {\n      notifyOnSubscriptionChangedById(v) {\n        notifyOnSubscriptionChangedById = v;\n      }\n    }, 5);\n    let getDefaultChannels;\n    module.link(\"./getDefaultChannels\", {\n      getDefaultChannels(v) {\n        getDefaultChannels = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const addUserToDefaultChannels = async function (user, silenced) {\n      await callbacks.run('beforeJoinDefaultChannels', user);\n      const defaultRooms = await getDefaultChannels();\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(defaultRooms), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const room = _step.value;\n          {\n            if (!(await Subscriptions.findOneByRoomIdAndUserId(room._id, user._id, {\n              projection: {\n                _id: 1\n              }\n            }))) {\n              const autoTranslateConfig = getSubscriptionAutotranslateDefaultConfig(user);\n              // Add a subscription to this user\n              const {\n                insertedId\n              } = await Subscriptions.createWithRoomAndUser(room, user, _objectSpread(_objectSpread(_objectSpread({\n                ts: new Date(),\n                open: true,\n                alert: true,\n                unread: 1,\n                userMentions: 1,\n                groupMentions: 0\n              }, room.favorite && {\n                f: true\n              }), autoTranslateConfig), getDefaultSubscriptionPref(user)));\n              if (insertedId) {\n                void notifyOnSubscriptionChangedById(insertedId, 'inserted');\n              }\n              // Insert user joined message\n              if (!silenced) {\n                await Message.saveSystemMessage('uj', room._id, user.username || '', user);\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","addUserToDefaultChannels","Message","Subscriptions","callbacks","getSubscriptionAutotranslateDefaultConfig","getDefaultSubscriptionPref","notifyOnSubscriptionChangedById","getDefaultChannels","__reifyWaitForDeps__","user","silenced","run","defaultRooms","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","room","value","findOneByRoomIdAndUserId","_id","projection","autoTranslateConfig","insertedId","createWithRoomAndUser","ts","Date","open","alert","unread","userMentions","groupMentions","favorite","f","saveSystemMessage","username","err","return","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/addUserToDefaultChannels.ts"],"sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { Subscriptions } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { getSubscriptionAutotranslateDefaultConfig } from '../../../../server/lib/getSubscriptionAutotranslateDefaultConfig';\nimport { getDefaultSubscriptionPref } from '../../../utils/lib/getDefaultSubscriptionPref';\nimport { notifyOnSubscriptionChangedById } from '../lib/notifyListener';\nimport { getDefaultChannels } from './getDefaultChannels';\n\nexport const addUserToDefaultChannels = async function (user: IUser, silenced?: boolean): Promise<void> {\n\tawait callbacks.run('beforeJoinDefaultChannels', user);\n\tconst defaultRooms = await getDefaultChannels();\n\n\tfor await (const room of defaultRooms) {\n\t\tif (!(await Subscriptions.findOneByRoomIdAndUserId(room._id, user._id, { projection: { _id: 1 } }))) {\n\t\t\tconst autoTranslateConfig = getSubscriptionAutotranslateDefaultConfig(user);\n\n\t\t\t// Add a subscription to this user\n\t\t\tconst { insertedId } = await Subscriptions.createWithRoomAndUser(room, user, {\n\t\t\t\tts: new Date(),\n\t\t\t\topen: true,\n\t\t\t\talert: true,\n\t\t\t\tunread: 1,\n\t\t\t\tuserMentions: 1,\n\t\t\t\tgroupMentions: 0,\n\t\t\t\t...(room.favorite && { f: true }),\n\t\t\t\t...autoTranslateConfig,\n\t\t\t\t...getDefaultSubscriptionPref(user),\n\t\t\t});\n\n\t\t\tif (insertedId) {\n\t\t\t\tvoid notifyOnSubscriptionChangedById(insertedId, 'inserted');\n\t\t\t}\n\n\t\t\t// Insert user joined message\n\t\t\tif (!silenced) {\n\t\t\t\tawait Message.saveSystemMessage('uj', room._id, user.username || '', user);\n\t\t\t}\n\t\t}\n\t}\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"3517e2c91edafe70d7e2ef76e4f83b35589cf07b"}
