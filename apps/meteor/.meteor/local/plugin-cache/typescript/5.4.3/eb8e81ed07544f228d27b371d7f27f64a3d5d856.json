{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/hooks/useRoomList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/sidebarv2/hooks/useRoomList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/hooks/useRoomList.ts","inputSourceMap":{"version":3,"file":"client/sidebarv2/hooks/useRoomList.ts","sourceRoot":"","sources":["client/sidebarv2/hooks/useRoomList.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\nimport { useQueryOptions } from './useQueryOptions';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: ILivechatInquiryRecord[] = [];\n\nconst order = [\n\t'Incoming_Calls',\n\t'Incoming_Livechats',\n\t'Open_Livechats',\n\t'On_Hold_Chats',\n\t'Unread',\n\t'Favorites',\n\t'Teams',\n\t'Discussions',\n\t'Channels',\n\t'Direct_Messages',\n\t'Conversations',\n] as const;\n\nexport const useRoomList = ({\n\tcollapsedGroups,\n}: {\n\tcollapsedGroups?: string[];\n}): {\n\troomList: Array<ISubscription & IRoom>;\n\tgroupsCount: number[];\n\tgroupsList: TranslationKey[];\n} => {\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tconst incomingCalls = useVideoConfIncomingCalls();\n\n\tconst queue = inquiries.enabled ? inquiries.queue : emptyQueue;\n\n\tconst { groupsCount, groupsList, roomList } = useDebouncedValue(\n\t\tuseMemo(() => {\n\t\t\tconst isCollapsed = (groupTitle: string) => collapsedGroups?.includes(groupTitle);\n\n\t\t\tconst incomingCall = new Set();\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (incomingCalls.find((call) => call.rid === room.rid)) {\n\t\t\t\t\treturn incomingCall.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tchannels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tdirect.add(room);\n\t\t\t\t}\n\n\t\t\t\tconversation.add(room);\n\t\t\t});\n\n\t\t\tconst groups = new Map<string, Set<any>>();\n\t\t\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\n\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', new Set(queue));\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\n\t\t\tconst { groupsCount, groupsList, roomList } = sidebarOrder.reduce(\n\t\t\t\t(acc, key) => {\n\t\t\t\t\tconst value = groups.get(key);\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.groupsList.push(key as TranslationKey);\n\t\t\t\t\tif (isCollapsed(key)) {\n\t\t\t\t\t\tacc.groupsCount.push(0);\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.groupsCount.push(value.size);\n\t\t\t\t\tacc.roomList.push(...value);\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tgroupsCount: [],\n\t\t\t\t\tgroupsList: [],\n\t\t\t\t\troomList: [],\n\t\t\t\t} as {\n\t\t\t\t\tgroupsCount: number[];\n\t\t\t\t\tgroupsList: TranslationKey[];\n\t\t\t\t\troomList: Array<ISubscription & IRoom>;\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn { groupsCount, groupsList, roomList };\n\t\t}, [\n\t\t\trooms,\n\t\t\tshowOmnichannel,\n\t\t\tinquiries.enabled,\n\t\t\tqueue,\n\t\t\tsidebarShowUnread,\n\t\t\tfavoritesEnabled,\n\t\t\tsidebarGroupByType,\n\t\t\tisDiscussionEnabled,\n\t\t\tsidebarOrder,\n\t\t\tcollapsedGroups,\n\t\t\tincomingCalls,\n\t\t]),\n\t\t50,\n\t);\n\n\treturn {\n\t\troomList,\n\t\tgroupsCount,\n\t\tgroupsList,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"production","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/hooks/useRoomList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/sidebarv2/hooks/useRoomList.ts","inputSourceMap":{"version":3,"file":"client/sidebarv2/hooks/useRoomList.ts","sourceRoot":"","sources":["client/sidebarv2/hooks/useRoomList.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\nimport { useQueryOptions } from './useQueryOptions';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: ILivechatInquiryRecord[] = [];\n\nconst order = [\n\t'Incoming_Calls',\n\t'Incoming_Livechats',\n\t'Open_Livechats',\n\t'On_Hold_Chats',\n\t'Unread',\n\t'Favorites',\n\t'Teams',\n\t'Discussions',\n\t'Channels',\n\t'Direct_Messages',\n\t'Conversations',\n] as const;\n\nexport const useRoomList = ({\n\tcollapsedGroups,\n}: {\n\tcollapsedGroups?: string[];\n}): {\n\troomList: Array<ISubscription & IRoom>;\n\tgroupsCount: number[];\n\tgroupsList: TranslationKey[];\n} => {\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tconst incomingCalls = useVideoConfIncomingCalls();\n\n\tconst queue = inquiries.enabled ? inquiries.queue : emptyQueue;\n\n\tconst { groupsCount, groupsList, roomList } = useDebouncedValue(\n\t\tuseMemo(() => {\n\t\t\tconst isCollapsed = (groupTitle: string) => collapsedGroups?.includes(groupTitle);\n\n\t\t\tconst incomingCall = new Set();\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (incomingCalls.find((call) => call.rid === room.rid)) {\n\t\t\t\t\treturn incomingCall.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tchannels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tdirect.add(room);\n\t\t\t\t}\n\n\t\t\t\tconversation.add(room);\n\t\t\t});\n\n\t\t\tconst groups = new Map<string, Set<any>>();\n\t\t\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\n\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', new Set(queue));\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\n\t\t\tconst { groupsCount, groupsList, roomList } = sidebarOrder.reduce(\n\t\t\t\t(acc, key) => {\n\t\t\t\t\tconst value = groups.get(key);\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.groupsList.push(key as TranslationKey);\n\t\t\t\t\tif (isCollapsed(key)) {\n\t\t\t\t\t\tacc.groupsCount.push(0);\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.groupsCount.push(value.size);\n\t\t\t\t\tacc.roomList.push(...value);\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tgroupsCount: [],\n\t\t\t\t\tgroupsList: [],\n\t\t\t\t\troomList: [],\n\t\t\t\t} as {\n\t\t\t\t\tgroupsCount: number[];\n\t\t\t\t\tgroupsList: TranslationKey[];\n\t\t\t\t\troomList: Array<ISubscription & IRoom>;\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn { groupsCount, groupsList, roomList };\n\t\t}, [\n\t\t\trooms,\n\t\t\tshowOmnichannel,\n\t\t\tinquiries.enabled,\n\t\t\tqueue,\n\t\t\tsidebarShowUnread,\n\t\t\tfavoritesEnabled,\n\t\t\tsidebarGroupByType,\n\t\t\tisDiscussionEnabled,\n\t\t\tsidebarOrder,\n\t\t\tcollapsedGroups,\n\t\t\tincomingCalls,\n\t\t]),\n\t\t50,\n\t);\n\n\treturn {\n\t\troomList,\n\t\tgroupsCount,\n\t\tgroupsList,\n\t};\n};\n"]}}},"code":"var _toConsumableArray;\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 0);\nmodule.export({\n  useRoomList: function () {\n    return useRoomList;\n  }\n});\nvar useDebouncedValue;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useDebouncedValue: function (v) {\n    useDebouncedValue = v;\n  }\n}, 0);\nvar useUserPreference, useUserSubscriptions, useSetting;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useUserPreference: function (v) {\n    useUserPreference = v;\n  },\n  useUserSubscriptions: function (v) {\n    useUserSubscriptions = v;\n  },\n  useSetting: function (v) {\n    useSetting = v;\n  }\n}, 1);\nvar useMemo;\nmodule.link(\"react\", {\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 2);\nvar useVideoConfIncomingCalls;\nmodule.link(\"../../contexts/VideoConfContext\", {\n  useVideoConfIncomingCalls: function (v) {\n    useVideoConfIncomingCalls = v;\n  }\n}, 3);\nvar useOmnichannelEnabled;\nmodule.link(\"../../hooks/omnichannel/useOmnichannelEnabled\", {\n  useOmnichannelEnabled: function (v) {\n    useOmnichannelEnabled = v;\n  }\n}, 4);\nvar useQueuedInquiries;\nmodule.link(\"../../hooks/omnichannel/useQueuedInquiries\", {\n  useQueuedInquiries: function (v) {\n    useQueuedInquiries = v;\n  }\n}, 5);\nvar useQueryOptions;\nmodule.link(\"./useQueryOptions\", {\n  useQueryOptions: function (v) {\n    useQueryOptions = v;\n  }\n}, 6);\nvar query = {\n  open: {\n    $ne: false\n  }\n};\nvar emptyQueue = [];\nvar order = ['Incoming_Calls', 'Incoming_Livechats', 'Open_Livechats', 'On_Hold_Chats', 'Unread', 'Favorites', 'Teams', 'Discussions', 'Channels', 'Direct_Messages', 'Conversations'];\nvar useRoomList = function (_ref) {\n  var _useUserPreference;\n  var collapsedGroups = _ref.collapsedGroups;\n  var showOmnichannel = useOmnichannelEnabled();\n  var sidebarGroupByType = useUserPreference('sidebarGroupByType');\n  var favoritesEnabled = useUserPreference('sidebarShowFavorites');\n  var sidebarOrder = (_useUserPreference = useUserPreference('sidebarSectionsOrder')) !== null && _useUserPreference !== void 0 ? _useUserPreference : order;\n  var isDiscussionEnabled = useSetting('Discussion_enabled');\n  var sidebarShowUnread = useUserPreference('sidebarShowUnread');\n  var options = useQueryOptions();\n  var rooms = useUserSubscriptions(query, options);\n  var inquiries = useQueuedInquiries();\n  var incomingCalls = useVideoConfIncomingCalls();\n  var queue = inquiries.enabled ? inquiries.queue : emptyQueue;\n  var _useDebouncedValue = useDebouncedValue(useMemo(function () {\n      var isCollapsed = function (groupTitle) {\n        return collapsedGroups === null || collapsedGroups === void 0 ? void 0 : collapsedGroups.includes(groupTitle);\n      };\n      var incomingCall = new Set();\n      var favorite = new Set();\n      var team = new Set();\n      var omnichannel = new Set();\n      var unread = new Set();\n      var channels = new Set();\n      var direct = new Set();\n      var discussion = new Set();\n      var conversation = new Set();\n      var onHold = new Set();\n      rooms.forEach(function (room) {\n        if (room.archived) {\n          return;\n        }\n        if (incomingCalls.find(function (call) {\n          return call.rid === room.rid;\n        })) {\n          return incomingCall.add(room);\n        }\n        if (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\n          return unread.add(room);\n        }\n        if (favoritesEnabled && room.f) {\n          return favorite.add(room);\n        }\n        if (sidebarGroupByType && room.teamMain) {\n          return team.add(room);\n        }\n        if (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n          return discussion.add(room);\n        }\n        if (room.t === 'c' || room.t === 'p') {\n          channels.add(room);\n        }\n        if (room.t === 'l' && room.onHold) {\n          return showOmnichannel && onHold.add(room);\n        }\n        if (room.t === 'l') {\n          return showOmnichannel && omnichannel.add(room);\n        }\n        if (room.t === 'd') {\n          direct.add(room);\n        }\n        conversation.add(room);\n      });\n      var groups = new Map();\n      incomingCall.size && groups.set('Incoming_Calls', incomingCall);\n      showOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', new Set(queue));\n      showOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n      showOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n      sidebarShowUnread && unread.size && groups.set('Unread', unread);\n      favoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n      sidebarGroupByType && team.size && groups.set('Teams', team);\n      sidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n      sidebarGroupByType && channels.size && groups.set('Channels', channels);\n      sidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n      !sidebarGroupByType && groups.set('Conversations', conversation);\n      var _sidebarOrder$reduce = sidebarOrder.reduce(function (acc, key) {\n          var _acc$roomList;\n          var value = groups.get(key);\n          if (!value) {\n            return acc;\n          }\n          acc.groupsList.push(key);\n          if (isCollapsed(key)) {\n            acc.groupsCount.push(0);\n            return acc;\n          }\n          acc.groupsCount.push(value.size);\n          (_acc$roomList = acc.roomList).push.apply(_acc$roomList, _toConsumableArray(value));\n          return acc;\n        }, {\n          groupsCount: [],\n          groupsList: [],\n          roomList: []\n        }),\n        groupsCount = _sidebarOrder$reduce.groupsCount,\n        groupsList = _sidebarOrder$reduce.groupsList,\n        roomList = _sidebarOrder$reduce.roomList;\n      return {\n        groupsCount: groupsCount,\n        groupsList: groupsList,\n        roomList: roomList\n      };\n    }, [rooms, showOmnichannel, inquiries.enabled, queue, sidebarShowUnread, favoritesEnabled, sidebarGroupByType, isDiscussionEnabled, sidebarOrder, collapsedGroups, incomingCalls]), 50),\n    groupsCount = _useDebouncedValue.groupsCount,\n    groupsList = _useDebouncedValue.groupsList,\n    roomList = _useDebouncedValue.roomList;\n  return {\n    roomList: roomList,\n    groupsCount: groupsCount,\n    groupsList: groupsList\n  };\n};","map":{"version":3,"names":["_toConsumableArray","module","link","default","v","export","useRoomList","useDebouncedValue","useUserPreference","useUserSubscriptions","useSetting","useMemo","useVideoConfIncomingCalls","useOmnichannelEnabled","useQueuedInquiries","useQueryOptions","query","open","$ne","emptyQueue","order","_ref","_useUserPreference","collapsedGroups","showOmnichannel","sidebarGroupByType","favoritesEnabled","sidebarOrder","isDiscussionEnabled","sidebarShowUnread","options","rooms","inquiries","incomingCalls","queue","enabled","_useDebouncedValue","isCollapsed","groupTitle","includes","incomingCall","Set","favorite","team","omnichannel","unread","channels","direct","discussion","conversation","onHold","forEach","room","archived","find","call","rid","add","alert","hideUnreadStatus","f","teamMain","prid","t","groups","Map","size","set","length","_sidebarOrder$reduce","reduce","acc","key","_acc$roomList","value","get","groupsList","push","groupsCount","roomList","apply"],"sources":["client/sidebarv2/hooks/useRoomList.ts"],"sourcesContent":["import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\nimport { useQueryOptions } from './useQueryOptions';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: ILivechatInquiryRecord[] = [];\n\nconst order = [\n\t'Incoming_Calls',\n\t'Incoming_Livechats',\n\t'Open_Livechats',\n\t'On_Hold_Chats',\n\t'Unread',\n\t'Favorites',\n\t'Teams',\n\t'Discussions',\n\t'Channels',\n\t'Direct_Messages',\n\t'Conversations',\n] as const;\n\nexport const useRoomList = ({\n\tcollapsedGroups,\n}: {\n\tcollapsedGroups?: string[];\n}): {\n\troomList: Array<ISubscription & IRoom>;\n\tgroupsCount: number[];\n\tgroupsList: TranslationKey[];\n} => {\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tconst incomingCalls = useVideoConfIncomingCalls();\n\n\tconst queue = inquiries.enabled ? inquiries.queue : emptyQueue;\n\n\tconst { groupsCount, groupsList, roomList } = useDebouncedValue(\n\t\tuseMemo(() => {\n\t\t\tconst isCollapsed = (groupTitle: string) => collapsedGroups?.includes(groupTitle);\n\n\t\t\tconst incomingCall = new Set();\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (incomingCalls.find((call) => call.rid === room.rid)) {\n\t\t\t\t\treturn incomingCall.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread) && !room.hideUnreadStatus) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tchannels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tdirect.add(room);\n\t\t\t\t}\n\n\t\t\t\tconversation.add(room);\n\t\t\t});\n\n\t\t\tconst groups = new Map<string, Set<any>>();\n\t\t\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\n\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', new Set(queue));\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\n\t\t\tconst { groupsCount, groupsList, roomList } = sidebarOrder.reduce(\n\t\t\t\t(acc, key) => {\n\t\t\t\t\tconst value = groups.get(key);\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.groupsList.push(key as TranslationKey);\n\t\t\t\t\tif (isCollapsed(key)) {\n\t\t\t\t\t\tacc.groupsCount.push(0);\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.groupsCount.push(value.size);\n\t\t\t\t\tacc.roomList.push(...value);\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tgroupsCount: [],\n\t\t\t\t\tgroupsList: [],\n\t\t\t\t\troomList: [],\n\t\t\t\t} as {\n\t\t\t\t\tgroupsCount: number[];\n\t\t\t\t\tgroupsList: TranslationKey[];\n\t\t\t\t\troomList: Array<ISubscription & IRoom>;\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn { groupsCount, groupsList, roomList };\n\t\t}, [\n\t\t\trooms,\n\t\t\tshowOmnichannel,\n\t\t\tinquiries.enabled,\n\t\t\tqueue,\n\t\t\tsidebarShowUnread,\n\t\t\tfavoritesEnabled,\n\t\t\tsidebarGroupByType,\n\t\t\tisDiscussionEnabled,\n\t\t\tsidebarOrder,\n\t\t\tcollapsedGroups,\n\t\t\tincomingCalls,\n\t\t]),\n\t\t50,\n\t);\n\n\treturn {\n\t\troomList,\n\t\tgroupsCount,\n\t\tgroupsList,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"eb8e81ed07544f228d27b371d7f27f64a3d5d856"}
