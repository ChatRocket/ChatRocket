{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/MatrixBridgedRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/MatrixBridgedRoom.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/MatrixBridgedRoom.ts","inputSourceMap":{"version":3,"file":"server/models/raw/MatrixBridgedRoom.ts","sourceRoot":"","sources":["server/models/raw/MatrixBridgedRoom.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,oBAAqB,SAAQ,OAA2B;IACpE,YAAY,EAAM,EAAE,KAA+D;QAClF,KAAK,CAAC,EAAE,EAAE,sBAAsB,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IAES,YAAY;QACrB,OAAO;YACN,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;YAC/C,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;YAC/C,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;SACxC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,WAAmB;QAC1C,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;QAE7D,OAAO,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,cAAsB;QAC1C,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,CAAC;QAEhE,OAAO,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,WAAmB;QAC5C,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,KAAK,CAAC,2BAA2B,CAAC,WAAmB,EAAE,cAAsB,EAAE,UAAkB;QAChG,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,GAAG,EAAE,cAAc,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IAC/H,CAAC;IAED,KAAK,CAAC,mCAAmC,CAAC,OAAe;QACxD,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAE9D,OAAO,eAAe,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,KAAK,OAAO,CAAC,CAAC;IACvE,CAAC;CACD","sourcesContent":["import type { IMatrixBridgedRoom, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IMatrixBridgedRoomModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class MatrixBridgedRoomRaw extends BaseRaw<IMatrixBridgedRoom> implements IMatrixBridgedRoomModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IMatrixBridgedRoom>>) {\n\t\tsuper(db, 'matrix_bridged_rooms', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { rid: 1 }, unique: true, sparse: true },\n\t\t\t{ key: { mri: 1 }, unique: true, sparse: true },\n\t\t\t{ key: { fromServer: 1 }, sparse: true },\n\t\t];\n\t}\n\n\tasync getExternalRoomId(localRoomId: string): Promise<string | null> {\n\t\tconst bridgedRoom = await this.findOne({ rid: localRoomId });\n\n\t\treturn bridgedRoom ? bridgedRoom.mri : null;\n\t}\n\n\tasync getLocalRoomId(externalRoomId: string): Promise<string | null> {\n\t\tconst bridgedRoom = await this.findOne({ mri: externalRoomId });\n\n\t\treturn bridgedRoom ? bridgedRoom.rid : null;\n\t}\n\n\tasync removeByLocalRoomId(localRoomId: string): Promise<void> {\n\t\tawait this.deleteOne({ rid: localRoomId });\n\t}\n\n\tasync createOrUpdateByLocalRoomId(localRoomId: string, externalRoomId: string, fromServer: string): Promise<void> {\n\t\tawait this.updateOne({ rid: localRoomId }, { $set: { rid: localRoomId, mri: externalRoomId, fromServer } }, { upsert: true });\n\t}\n\n\tasync getExternalServerConnectedExcluding(exclude: string): Promise<string[]> {\n\t\tconst externalServers = await this.col.distinct('fromServer');\n\n\t\treturn externalServers.filter((serverName) => serverName !== exclude);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/MatrixBridgedRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/MatrixBridgedRoom.ts","inputSourceMap":{"version":3,"file":"server/models/raw/MatrixBridgedRoom.ts","sourceRoot":"","sources":["server/models/raw/MatrixBridgedRoom.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,oBAAqB,SAAQ,OAA2B;IACpE,YAAY,EAAM,EAAE,KAA+D;QAClF,KAAK,CAAC,EAAE,EAAE,sBAAsB,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IAES,YAAY;QACrB,OAAO;YACN,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;YAC/C,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;YAC/C,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;SACxC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,WAAmB;QAC1C,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;QAE7D,OAAO,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,cAAsB;QAC1C,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,CAAC,CAAC;QAEhE,OAAO,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,WAAmB;QAC5C,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;IAC5C,CAAC;IAED,KAAK,CAAC,2BAA2B,CAAC,WAAmB,EAAE,cAAsB,EAAE,UAAkB;QAChG,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,WAAW,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,GAAG,EAAE,cAAc,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IAC/H,CAAC;IAED,KAAK,CAAC,mCAAmC,CAAC,OAAe;QACxD,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAE9D,OAAO,eAAe,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,KAAK,OAAO,CAAC,CAAC;IACvE,CAAC;CACD","sourcesContent":["import type { IMatrixBridgedRoom, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IMatrixBridgedRoomModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class MatrixBridgedRoomRaw extends BaseRaw<IMatrixBridgedRoom> implements IMatrixBridgedRoomModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IMatrixBridgedRoom>>) {\n\t\tsuper(db, 'matrix_bridged_rooms', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { rid: 1 }, unique: true, sparse: true },\n\t\t\t{ key: { mri: 1 }, unique: true, sparse: true },\n\t\t\t{ key: { fromServer: 1 }, sparse: true },\n\t\t];\n\t}\n\n\tasync getExternalRoomId(localRoomId: string): Promise<string | null> {\n\t\tconst bridgedRoom = await this.findOne({ rid: localRoomId });\n\n\t\treturn bridgedRoom ? bridgedRoom.mri : null;\n\t}\n\n\tasync getLocalRoomId(externalRoomId: string): Promise<string | null> {\n\t\tconst bridgedRoom = await this.findOne({ mri: externalRoomId });\n\n\t\treturn bridgedRoom ? bridgedRoom.rid : null;\n\t}\n\n\tasync removeByLocalRoomId(localRoomId: string): Promise<void> {\n\t\tawait this.deleteOne({ rid: localRoomId });\n\t}\n\n\tasync createOrUpdateByLocalRoomId(localRoomId: string, externalRoomId: string, fromServer: string): Promise<void> {\n\t\tawait this.updateOne({ rid: localRoomId }, { $set: { rid: localRoomId, mri: externalRoomId, fromServer } }, { upsert: true });\n\t}\n\n\tasync getExternalServerConnectedExcluding(exclude: string): Promise<string[]> {\n\t\tconst externalServers = await this.col.distinct('fromServer');\n\n\t\treturn externalServers.filter((serverName) => serverName !== exclude);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      MatrixBridgedRoomRaw: () => MatrixBridgedRoomRaw\n    });\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class MatrixBridgedRoomRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'matrix_bridged_rooms', trash);\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            rid: 1\n          },\n          unique: true,\n          sparse: true\n        }, {\n          key: {\n            mri: 1\n          },\n          unique: true,\n          sparse: true\n        }, {\n          key: {\n            fromServer: 1\n          },\n          sparse: true\n        }];\n      }\n      async getExternalRoomId(localRoomId) {\n        const bridgedRoom = await this.findOne({\n          rid: localRoomId\n        });\n        return bridgedRoom ? bridgedRoom.mri : null;\n      }\n      async getLocalRoomId(externalRoomId) {\n        const bridgedRoom = await this.findOne({\n          mri: externalRoomId\n        });\n        return bridgedRoom ? bridgedRoom.rid : null;\n      }\n      async removeByLocalRoomId(localRoomId) {\n        await this.deleteOne({\n          rid: localRoomId\n        });\n      }\n      async createOrUpdateByLocalRoomId(localRoomId, externalRoomId, fromServer) {\n        await this.updateOne({\n          rid: localRoomId\n        }, {\n          $set: {\n            rid: localRoomId,\n            mri: externalRoomId,\n            fromServer\n          }\n        }, {\n          upsert: true\n        });\n      }\n      async getExternalServerConnectedExcluding(exclude) {\n        const externalServers = await this.col.distinct('fromServer');\n        return externalServers.filter(serverName => serverName !== exclude);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","MatrixBridgedRoomRaw","BaseRaw","link","v","__reifyWaitForDeps__","constructor","db","trash","modelIndexes","key","rid","unique","sparse","mri","fromServer","getExternalRoomId","localRoomId","bridgedRoom","findOne","getLocalRoomId","externalRoomId","removeByLocalRoomId","deleteOne","createOrUpdateByLocalRoomId","updateOne","$set","upsert","getExternalServerConnectedExcluding","exclude","externalServers","col","distinct","filter","serverName","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/MatrixBridgedRoom.ts"],"sourcesContent":["import type { IMatrixBridgedRoom, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IMatrixBridgedRoomModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class MatrixBridgedRoomRaw extends BaseRaw<IMatrixBridgedRoom> implements IMatrixBridgedRoomModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IMatrixBridgedRoom>>) {\n\t\tsuper(db, 'matrix_bridged_rooms', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { rid: 1 }, unique: true, sparse: true },\n\t\t\t{ key: { mri: 1 }, unique: true, sparse: true },\n\t\t\t{ key: { fromServer: 1 }, sparse: true },\n\t\t];\n\t}\n\n\tasync getExternalRoomId(localRoomId: string): Promise<string | null> {\n\t\tconst bridgedRoom = await this.findOne({ rid: localRoomId });\n\n\t\treturn bridgedRoom ? bridgedRoom.mri : null;\n\t}\n\n\tasync getLocalRoomId(externalRoomId: string): Promise<string | null> {\n\t\tconst bridgedRoom = await this.findOne({ mri: externalRoomId });\n\n\t\treturn bridgedRoom ? bridgedRoom.rid : null;\n\t}\n\n\tasync removeByLocalRoomId(localRoomId: string): Promise<void> {\n\t\tawait this.deleteOne({ rid: localRoomId });\n\t}\n\n\tasync createOrUpdateByLocalRoomId(localRoomId: string, externalRoomId: string, fromServer: string): Promise<void> {\n\t\tawait this.updateOne({ rid: localRoomId }, { $set: { rid: localRoomId, mri: externalRoomId, fromServer } }, { upsert: true });\n\t}\n\n\tasync getExternalServerConnectedExcluding(exclude: string): Promise<string[]> {\n\t\tconst externalServers = await this.col.distinct('fromServer');\n\n\t\treturn externalServers.filter((serverName) => serverName !== exclude);\n\t}\n}\n"],"mappings":";;;IAIAA,MAAA,CAAOC,MAAE;MAAAC,oBAA0B,EAACA,CAAA,KAAAA;IAAA;IAAA,IAAAC,OAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,QAAAE,CAAA;QAAAF,OAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,oBAAA,WAAAA,oBAAA;IAE9B,MAAOJ,oBAAqB,SAAQC,OAA2B;MACpEI,YAAYC,EAAM,EAAEC,KAA+D;QAClF,KAAK,CAACD,EAAE,EAAE,sBAAsB,EAAEC,KAAK,CAAC;MACzC;MAEUC,YAAYA,CAAA;QACrB,OAAO,CACN;UAAEC,GAAG,EAAE;YAAEC,GAAG,EAAE;UAAC,CAAE;UAAEC,MAAM,EAAE,IAAI;UAAEC,MAAM,EAAE;QAAI,CAAE,EAC/C;UAAEH,GAAG,EAAE;YAAEI,GAAG,EAAE;UAAC,CAAE;UAAEF,MAAM,EAAE,IAAI;UAAEC,MAAM,EAAE;QAAI,CAAE,EAC/C;UAAEH,GAAG,EAAE;YAAEK,UAAU,EAAE;UAAC,CAAE;UAAEF,MAAM,EAAE;QAAI,CAAE,CACxC;MACF;MAEA,MAAMG,iBAAiBA,CAACC,WAAmB;QAC1C,MAAMC,WAAW,GAAG,MAAM,IAAI,CAACC,OAAO,CAAC;UAAER,GAAG,EAAEM;QAAW,CAAE,CAAC;QAE5D,OAAOC,WAAW,GAAGA,WAAW,CAACJ,GAAG,GAAG,IAAI;MAC5C;MAEA,MAAMM,cAAcA,CAACC,cAAsB;QAC1C,MAAMH,WAAW,GAAG,MAAM,IAAI,CAACC,OAAO,CAAC;UAAEL,GAAG,EAAEO;QAAc,CAAE,CAAC;QAE/D,OAAOH,WAAW,GAAGA,WAAW,CAACP,GAAG,GAAG,IAAI;MAC5C;MAEA,MAAMW,mBAAmBA,CAACL,WAAmB;QAC5C,MAAM,IAAI,CAACM,SAAS,CAAC;UAAEZ,GAAG,EAAEM;QAAW,CAAE,CAAC;MAC3C;MAEA,MAAMO,2BAA2BA,CAACP,WAAmB,EAAEI,cAAsB,EAAEN,UAAkB;QAChG,MAAM,IAAI,CAACU,SAAS,CAAC;UAAEd,GAAG,EAAEM;QAAW,CAAE,EAAE;UAAES,IAAI,EAAE;YAAEf,GAAG,EAAEM,WAAW;YAAEH,GAAG,EAAEO,cAAc;YAAEN;UAAU;QAAE,CAAE,EAAE;UAAEY,MAAM,EAAE;QAAI,CAAE,CAAC;MAC9H;MAEA,MAAMC,mCAAmCA,CAACC,OAAe;QACxD,MAAMC,eAAe,GAAG,MAAM,IAAI,CAACC,GAAG,CAACC,QAAQ,CAAC,YAAY,CAAC;QAE7D,OAAOF,eAAe,CAACG,MAAM,CAAEC,UAAU,IAAKA,UAAU,KAAKL,OAAO,CAAC;MACtE;;IACAM,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"4a42e4e9608c9aca5357ad3e0ba5939e412138c3"}
