{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/EditableSettingsContext.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/admin/EditableSettingsContext.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/EditableSettingsContext.ts","inputSourceMap":{"version":3,"file":"client/views/admin/EditableSettingsContext.ts","sourceRoot":"","sources":["client/views/admin/EditableSettingsContext.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISettingBase, SectionName, SettingId, GroupId, TabId, ISettingColor } from '@rocket.chat/core-typings';\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\nimport { createContext, useContext, useMemo } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nexport type EditableSetting = (ISettingBase | ISettingColor) & {\n\tdisabled: boolean;\n\tchanged: boolean;\n\tinvisible: boolean;\n};\n\ntype EditableSettingsContextQuery = SettingsContextQuery & {\n\tchanged?: boolean;\n};\n\nexport type EditableSettingsContextValue = {\n\treadonly queryEditableSetting: (\n\t\t_id: SettingId,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting | undefined];\n\treadonly queryEditableSettings: (\n\t\tquery: EditableSettingsContextQuery,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting[]];\n\treadonly queryGroupSections: (\n\t\t_id: GroupId,\n\t\ttab?: TabId,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => SectionName[]];\n\treadonly queryGroupTabs: (_id: GroupId) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => TabId[]];\n\treadonly dispatch: (changes: Partial<EditableSetting>[]) => void;\n\treadonly isEnterprise: boolean;\n};\n\nexport const EditableSettingsContext = createContext<EditableSettingsContextValue>({\n\tqueryEditableSetting: () => [(): (() => void) => (): void => undefined, (): undefined => undefined],\n\tqueryEditableSettings: () => [(): (() => void) => (): void => undefined, (): EditableSetting[] => []],\n\tqueryGroupSections: () => [(): (() => void) => (): void => undefined, (): SectionName[] => []],\n\tqueryGroupTabs: () => [(): (() => void) => (): void => undefined, (): TabId[] => []],\n\tdispatch: () => undefined,\n\tisEnterprise: false,\n});\n\nexport const useIsEnterprise = (): boolean => useContext(EditableSettingsContext).isEnterprise;\n\nexport const useEditableSetting = (_id: SettingId): EditableSetting | undefined => {\n\tconst { queryEditableSetting } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSetting(_id), [queryEditableSetting, _id]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettings = (query?: EditableSettingsContextQuery): EditableSetting[] => {\n\tconst { queryEditableSettings } = useContext(EditableSettingsContext);\n\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSettings(query ?? {}), [queryEditableSettings, query]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsGroupSections = (_id: SettingId, tab?: TabId): SectionName[] => {\n\tconst { queryGroupSections } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupSections(_id, tab), [queryGroupSections, _id, tab]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsGroupTabs = (_id: SettingId): TabId[] => {\n\tconst { queryGroupTabs } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupTabs(_id), [queryGroupTabs, _id]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsDispatch = (): ((changes: Partial<EditableSetting>[]) => void) =>\n\tuseContext(EditableSettingsContext).dispatch;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/EditableSettingsContext.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/EditableSettingsContext.ts","inputSourceMap":{"version":3,"file":"client/views/admin/EditableSettingsContext.ts","sourceRoot":"","sources":["client/views/admin/EditableSettingsContext.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISettingBase, SectionName, SettingId, GroupId, TabId, ISettingColor } from '@rocket.chat/core-typings';\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\nimport { createContext, useContext, useMemo } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nexport type EditableSetting = (ISettingBase | ISettingColor) & {\n\tdisabled: boolean;\n\tchanged: boolean;\n\tinvisible: boolean;\n};\n\ntype EditableSettingsContextQuery = SettingsContextQuery & {\n\tchanged?: boolean;\n};\n\nexport type EditableSettingsContextValue = {\n\treadonly queryEditableSetting: (\n\t\t_id: SettingId,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting | undefined];\n\treadonly queryEditableSettings: (\n\t\tquery: EditableSettingsContextQuery,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting[]];\n\treadonly queryGroupSections: (\n\t\t_id: GroupId,\n\t\ttab?: TabId,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => SectionName[]];\n\treadonly queryGroupTabs: (_id: GroupId) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => TabId[]];\n\treadonly dispatch: (changes: Partial<EditableSetting>[]) => void;\n\treadonly isEnterprise: boolean;\n};\n\nexport const EditableSettingsContext = createContext<EditableSettingsContextValue>({\n\tqueryEditableSetting: () => [(): (() => void) => (): void => undefined, (): undefined => undefined],\n\tqueryEditableSettings: () => [(): (() => void) => (): void => undefined, (): EditableSetting[] => []],\n\tqueryGroupSections: () => [(): (() => void) => (): void => undefined, (): SectionName[] => []],\n\tqueryGroupTabs: () => [(): (() => void) => (): void => undefined, (): TabId[] => []],\n\tdispatch: () => undefined,\n\tisEnterprise: false,\n});\n\nexport const useIsEnterprise = (): boolean => useContext(EditableSettingsContext).isEnterprise;\n\nexport const useEditableSetting = (_id: SettingId): EditableSetting | undefined => {\n\tconst { queryEditableSetting } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSetting(_id), [queryEditableSetting, _id]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettings = (query?: EditableSettingsContextQuery): EditableSetting[] => {\n\tconst { queryEditableSettings } = useContext(EditableSettingsContext);\n\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSettings(query ?? {}), [queryEditableSettings, query]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsGroupSections = (_id: SettingId, tab?: TabId): SectionName[] => {\n\tconst { queryGroupSections } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupSections(_id, tab), [queryGroupSections, _id, tab]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsGroupTabs = (_id: SettingId): TabId[] => {\n\tconst { queryGroupTabs } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupTabs(_id), [queryGroupTabs, _id]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsDispatch = (): ((changes: Partial<EditableSetting>[]) => void) =>\n\tuseContext(EditableSettingsContext).dispatch;\n"]}}},"code":"module.export({\n  EditableSettingsContext: () => EditableSettingsContext,\n  useIsEnterprise: () => useIsEnterprise,\n  useEditableSetting: () => useEditableSetting,\n  useEditableSettings: () => useEditableSettings,\n  useEditableSettingsGroupSections: () => useEditableSettingsGroupSections,\n  useEditableSettingsGroupTabs: () => useEditableSettingsGroupTabs,\n  useEditableSettingsDispatch: () => useEditableSettingsDispatch\n});\nlet createContext, useContext, useMemo;\nmodule.link(\"react\", {\n  createContext(v) {\n    createContext = v;\n  },\n  useContext(v) {\n    useContext = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 0);\nlet useSyncExternalStore;\nmodule.link(\"use-sync-external-store/shim\", {\n  useSyncExternalStore(v) {\n    useSyncExternalStore = v;\n  }\n}, 1);\nconst EditableSettingsContext = /*#__PURE__*/createContext({\n  queryEditableSetting: () => [() => () => undefined, () => undefined],\n  queryEditableSettings: () => [() => () => undefined, () => []],\n  queryGroupSections: () => [() => () => undefined, () => []],\n  queryGroupTabs: () => [() => () => undefined, () => []],\n  dispatch: () => undefined,\n  isEnterprise: false\n});\nconst useIsEnterprise = () => useContext(EditableSettingsContext).isEnterprise;\nconst useEditableSetting = _id => {\n  const {\n    queryEditableSetting\n  } = useContext(EditableSettingsContext);\n  const [subscribe, getSnapshot] = useMemo(() => queryEditableSetting(_id), [queryEditableSetting, _id]);\n  return useSyncExternalStore(subscribe, getSnapshot);\n};\nconst useEditableSettings = query => {\n  const {\n    queryEditableSettings\n  } = useContext(EditableSettingsContext);\n  const [subscribe, getSnapshot] = useMemo(() => queryEditableSettings(query !== null && query !== void 0 ? query : {}), [queryEditableSettings, query]);\n  return useSyncExternalStore(subscribe, getSnapshot);\n};\nconst useEditableSettingsGroupSections = (_id, tab) => {\n  const {\n    queryGroupSections\n  } = useContext(EditableSettingsContext);\n  const [subscribe, getSnapshot] = useMemo(() => queryGroupSections(_id, tab), [queryGroupSections, _id, tab]);\n  return useSyncExternalStore(subscribe, getSnapshot);\n};\nconst useEditableSettingsGroupTabs = _id => {\n  const {\n    queryGroupTabs\n  } = useContext(EditableSettingsContext);\n  const [subscribe, getSnapshot] = useMemo(() => queryGroupTabs(_id), [queryGroupTabs, _id]);\n  return useSyncExternalStore(subscribe, getSnapshot);\n};\nconst useEditableSettingsDispatch = () => useContext(EditableSettingsContext).dispatch;","map":{"version":3,"names":["module","export","EditableSettingsContext","useIsEnterprise","useEditableSetting","useEditableSettings","useEditableSettingsGroupSections","useEditableSettingsGroupTabs","useEditableSettingsDispatch","createContext","useContext","useMemo","link","v","useSyncExternalStore","queryEditableSetting","undefined","queryEditableSettings","queryGroupSections","queryGroupTabs","dispatch","isEnterprise","_id","subscribe","getSnapshot","query","tab"],"sources":["client/views/admin/EditableSettingsContext.ts"],"sourcesContent":["import type { ISettingBase, SectionName, SettingId, GroupId, TabId, ISettingColor } from '@rocket.chat/core-typings';\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\nimport { createContext, useContext, useMemo } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nexport type EditableSetting = (ISettingBase | ISettingColor) & {\n\tdisabled: boolean;\n\tchanged: boolean;\n\tinvisible: boolean;\n};\n\ntype EditableSettingsContextQuery = SettingsContextQuery & {\n\tchanged?: boolean;\n};\n\nexport type EditableSettingsContextValue = {\n\treadonly queryEditableSetting: (\n\t\t_id: SettingId,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting | undefined];\n\treadonly queryEditableSettings: (\n\t\tquery: EditableSettingsContextQuery,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting[]];\n\treadonly queryGroupSections: (\n\t\t_id: GroupId,\n\t\ttab?: TabId,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => SectionName[]];\n\treadonly queryGroupTabs: (_id: GroupId) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => TabId[]];\n\treadonly dispatch: (changes: Partial<EditableSetting>[]) => void;\n\treadonly isEnterprise: boolean;\n};\n\nexport const EditableSettingsContext = createContext<EditableSettingsContextValue>({\n\tqueryEditableSetting: () => [(): (() => void) => (): void => undefined, (): undefined => undefined],\n\tqueryEditableSettings: () => [(): (() => void) => (): void => undefined, (): EditableSetting[] => []],\n\tqueryGroupSections: () => [(): (() => void) => (): void => undefined, (): SectionName[] => []],\n\tqueryGroupTabs: () => [(): (() => void) => (): void => undefined, (): TabId[] => []],\n\tdispatch: () => undefined,\n\tisEnterprise: false,\n});\n\nexport const useIsEnterprise = (): boolean => useContext(EditableSettingsContext).isEnterprise;\n\nexport const useEditableSetting = (_id: SettingId): EditableSetting | undefined => {\n\tconst { queryEditableSetting } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSetting(_id), [queryEditableSetting, _id]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettings = (query?: EditableSettingsContextQuery): EditableSetting[] => {\n\tconst { queryEditableSettings } = useContext(EditableSettingsContext);\n\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSettings(query ?? {}), [queryEditableSettings, query]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsGroupSections = (_id: SettingId, tab?: TabId): SectionName[] => {\n\tconst { queryGroupSections } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupSections(_id, tab), [queryGroupSections, _id, tab]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsGroupTabs = (_id: SettingId): TabId[] => {\n\tconst { queryGroupTabs } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupTabs(_id), [queryGroupTabs, _id]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsDispatch = (): ((changes: Partial<EditableSetting>[]) => void) =>\n\tuseContext(EditableSettingsContext).dispatch;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"4f2332fd4d398f05366b190f9f33af476381e811"}
