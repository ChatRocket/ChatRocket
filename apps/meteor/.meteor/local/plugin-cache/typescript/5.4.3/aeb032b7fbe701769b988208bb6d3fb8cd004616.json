{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/lib/parsers/Response.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/meteor-accounts-saml/server/lib/parsers/Response.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/lib/parsers/Response.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/lib/parsers/Response.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/lib/parsers/Response.ts"],"names":[],"mappings":"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","sourcesContent":["import xmldom from '@xmldom/xmldom';\nimport xmlCrypto from 'xml-crypto';\nimport xmlenc from 'xml-encryption';\n\nimport type { ISAMLAssertion } from '../../definition/ISAMLAssertion';\nimport type { IServiceProviderOptions } from '../../definition/IServiceProviderOptions';\nimport type { IResponseValidateCallback } from '../../definition/callbacks';\nimport { SAMLUtils } from '../Utils';\nimport { StatusCode } from '../constants';\n\ntype XmlParent = Element | Document;\n\nexport class ResponseParser {\n\tserviceProviderOptions: IServiceProviderOptions;\n\n\tconstructor(serviceProviderOptions: IServiceProviderOptions) {\n\t\tthis.serviceProviderOptions = serviceProviderOptions;\n\t}\n\n\tpublic validate(xml: string, callback: IResponseValidateCallback): void {\n\t\t// We currently use RelayState to save SAML provider\n\t\tSAMLUtils.log(`Validating response with relay state: ${xml}`);\n\n\t\tlet error: Error | null = null;\n\n\t\tconst doc = new xmldom.DOMParser({\n\t\t\terrorHandler: {\n\t\t\t\tfatalError: (e: any) => {\n\t\t\t\t\tif (e instanceof Error) {\n\t\t\t\t\t\terror = e;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof e === 'string') {\n\t\t\t\t\t\terror = new Error(e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\terror = new Error();\n\t\t\t\t},\n\t\t\t\terror: (e: Error) => {\n\t\t\t\t\tif (e instanceof Error) {\n\t\t\t\t\t\terror = e;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof e === 'string') {\n\t\t\t\t\t\terror = new Error(e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\terror = new Error();\n\t\t\t\t},\n\t\t\t},\n\t\t}).parseFromString(xml, 'text/xml');\n\t\tif (!doc) {\n\t\t\treturn callback('No Doc Found');\n\t\t}\n\n\t\tif (error) {\n\t\t\treturn callback(error, null, false);\n\t\t}\n\n\t\tconst allResponses = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'Response');\n\t\tif (allResponses.length === 0) {\n\t\t\treturn this._checkLogoutResponse(doc, callback);\n\t\t}\n\n\t\tif (allResponses.length !== 1) {\n\t\t\treturn callback(new Error('Too many SAML responses'), null, false);\n\t\t}\n\t\tconst response = allResponses[0];\n\t\tSAMLUtils.log('Got response');\n\n\t\tSAMLUtils.log('Verify status');\n\t\tconst statusValidateObj = SAMLUtils.validateStatus(doc);\n\t\tif (!statusValidateObj.success) {\n\t\t\tif (!statusValidateObj.statusCode) {\n\t\t\t\treturn callback(new Error('Missing StatusCode'), null, false);\n\t\t\t}\n\n\t\t\tif (statusValidateObj.statusCode === StatusCode.responder && statusValidateObj.message) {\n\t\t\t\treturn callback(new Error(statusValidateObj.message), null, false);\n\t\t\t}\n\n\t\t\treturn callback(new Error(`Status is: ${statusValidateObj.statusCode}`), null, false);\n\t\t}\n\t\tSAMLUtils.log('Status ok');\n\n\t\tlet assertion: XmlParent;\n\t\tlet assertionData: ISAMLAssertion;\n\t\tlet issuer;\n\n\t\ttry {\n\t\t\tassertionData = this.getAssertion(response, xml);\n\t\t\tassertion = assertionData.assertion;\n\n\t\t\tthis.verifySignatures(response, assertionData, xml);\n\t\t} catch (e) {\n\t\t\treturn callback(e instanceof Error ? e : String(e), null, false);\n\t\t}\n\n\t\tconst profile: Record<string, any> = {};\n\n\t\tif (response.hasAttribute('InResponseTo')) {\n\t\t\tprofile.inResponseToId = response.getAttribute('InResponseTo');\n\t\t}\n\n\t\ttry {\n\t\t\tissuer = this.getIssuer(assertion);\n\t\t} catch (e) {\n\t\t\treturn callback(e instanceof Error ? e : String(e), null, false);\n\t\t}\n\n\t\tif (issuer) {\n\t\t\tprofile.issuer = issuer.textContent;\n\t\t}\n\n\t\tconst subject = this.getSubject(assertion);\n\t\tif (subject) {\n\t\t\tconst nameID = subject.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'NameID')[0];\n\t\t\tif (nameID) {\n\t\t\t\tprofile.nameID = nameID.textContent;\n\n\t\t\t\tif (nameID.hasAttribute('Format')) {\n\t\t\t\t\tprofile.nameIDFormat = nameID.getAttribute('Format');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.validateSubjectConditions(subject);\n\t\t\t} catch (e) {\n\t\t\t\treturn callback(e instanceof Error ? e : String(e), null, false);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.validateAssertionConditions(assertion);\n\t\t} catch (e) {\n\t\t\treturn callback(e instanceof Error ? e : String(e), null, false);\n\t\t}\n\n\t\tconst authnStatement = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AuthnStatement')[0];\n\n\t\tif (authnStatement) {\n\t\t\tif (authnStatement.hasAttribute('SessionIndex')) {\n\t\t\t\tprofile.sessionIndex = authnStatement.getAttribute('SessionIndex');\n\t\t\t\tSAMLUtils.log(`Session Index: ${profile.sessionIndex}`);\n\t\t\t} else {\n\t\t\t\tSAMLUtils.log('No Session Index Found');\n\t\t\t}\n\t\t} else {\n\t\t\tSAMLUtils.log('No AuthN Statement found');\n\t\t}\n\n\t\tconst attributeStatement = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AttributeStatement')[0];\n\t\tif (attributeStatement) {\n\t\t\tthis.mapAttributes(attributeStatement, profile);\n\t\t} else {\n\t\t\tSAMLUtils.log('No Attribute Statement found in SAML response.');\n\t\t}\n\n\t\tif (!profile.email && profile.nameID && profile.nameIDFormat && profile.nameIDFormat.indexOf('emailAddress') >= 0) {\n\t\t\tprofile.email = profile.nameID;\n\t\t}\n\n\t\tconst profileKeys = Object.keys(profile);\n\t\tfor (let i = 0; i < profileKeys.length; i++) {\n\t\t\tconst key = profileKeys[i];\n\n\t\t\tif (key.match(/\\./)) {\n\t\t\t\tprofile[key.replace(/\\./g, '-')] = profile[key];\n\t\t\t\tdelete profile[key];\n\t\t\t}\n\t\t}\n\n\t\tSAMLUtils.log({ msg: 'NameID', profile });\n\t\treturn callback(null, profile, false);\n\t}\n\n\tprivate _checkLogoutResponse(doc: Document, callback: IResponseValidateCallback): void {\n\t\tconst logoutResponse = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'LogoutResponse');\n\t\tif (!logoutResponse.length) {\n\t\t\treturn callback(new Error('Unknown SAML response message'), null, false);\n\t\t}\n\n\t\tSAMLUtils.log('Verify status');\n\t\tconst statusValidateObj = SAMLUtils.validateStatus(doc);\n\t\tif (!statusValidateObj.success) {\n\t\t\treturn callback(new Error(`Status is: ${statusValidateObj.statusCode}`), null, false);\n\t\t}\n\t\tSAMLUtils.log('Status ok');\n\n\t\t// @ToDo: Check if this situation is still used\n\t\treturn callback(null, null, true);\n\t}\n\n\tprivate getAssertion(response: Element, xml: string): ISAMLAssertion {\n\t\tconst allAssertions = response.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Assertion');\n\t\tconst allEncrypedAssertions = response.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'EncryptedAssertion');\n\n\t\tif (allAssertions.length + allEncrypedAssertions.length > 1) {\n\t\t\tthrow new Error('Too many SAML assertions');\n\t\t}\n\n\t\tlet assertion: XmlParent = allAssertions[0];\n\t\tconst encAssertion = allEncrypedAssertions[0];\n\t\tlet newXml = null;\n\n\t\tif (typeof encAssertion !== 'undefined') {\n\t\t\tconst options = { key: this.serviceProviderOptions.privateKey };\n\t\t\tconst encData = encAssertion.getElementsByTagNameNS('*', 'EncryptedData')[0];\n\t\t\txmlenc.decrypt(encData, options, (err, result) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tSAMLUtils.error(err);\n\t\t\t\t}\n\n\t\t\t\tconst document = new xmldom.DOMParser().parseFromString(result, 'text/xml');\n\t\t\t\tif (!document) {\n\t\t\t\t\tthrow new Error('Failed to decrypt SAML assertion');\n\t\t\t\t}\n\n\t\t\t\tconst decryptedAssertions = document.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Assertion');\n\t\t\t\tif (decryptedAssertions.length) {\n\t\t\t\t\tassertion = decryptedAssertions[0];\n\t\t\t\t}\n\n\t\t\t\tnewXml = result;\n\t\t\t});\n\t\t}\n\n\t\tif (!assertion) {\n\t\t\tthrow new Error('Missing SAML assertion');\n\t\t}\n\n\t\treturn {\n\t\t\tassertion,\n\t\t\txml: newXml || xml,\n\t\t};\n\t}\n\n\tprivate verifySignatures(response: Element, assertionData: ISAMLAssertion, xml: string): void {\n\t\tif (!this.serviceProviderOptions.cert) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst signatureType = this.serviceProviderOptions.signatureValidationType;\n\n\t\tconst checkEither = signatureType === 'Either';\n\t\tconst checkResponse = signatureType === 'Response' || signatureType === 'All' || checkEither;\n\t\tconst checkAssertion = signatureType === 'Assertion' || signatureType === 'All' || checkEither;\n\t\tlet anyValidSignature = false;\n\n\t\tif (checkResponse) {\n\t\t\tSAMLUtils.log('Verify Document Signature');\n\t\t\tif (!this.validateResponseSignature(xml, this.serviceProviderOptions.cert, response)) {\n\t\t\t\tif (!checkEither) {\n\t\t\t\t\tSAMLUtils.log('Document Signature WRONG');\n\t\t\t\t\tthrow new Error('Invalid Signature');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanyValidSignature = true;\n\t\t\t}\n\t\t\tSAMLUtils.log('Document Signature OK');\n\t\t}\n\n\t\tif (checkAssertion) {\n\t\t\tSAMLUtils.log('Verify Assertion Signature');\n\t\t\tif (!this.validateAssertionSignature(assertionData.xml, this.serviceProviderOptions.cert, assertionData.assertion)) {\n\t\t\t\tif (!checkEither) {\n\t\t\t\t\tSAMLUtils.log('Assertion Signature WRONG');\n\t\t\t\t\tthrow new Error('Invalid Assertion signature');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanyValidSignature = true;\n\t\t\t}\n\t\t\tSAMLUtils.log('Assertion Signature OK');\n\t\t}\n\n\t\tif (checkEither && !anyValidSignature) {\n\t\t\tSAMLUtils.log('No Valid Signature');\n\t\t\tthrow new Error('No valid SAML Signature found');\n\t\t}\n\t}\n\n\tprivate validateResponseSignature(xml: string, cert: string, response: Element): boolean {\n\t\treturn this.validateSignatureChildren(xml, cert, response);\n\t}\n\n\tprivate validateAssertionSignature(xml: string, cert: string, assertion: XmlParent): boolean {\n\t\treturn this.validateSignatureChildren(xml, cert, assertion);\n\t}\n\n\tprivate validateSignatureChildren(xml: string, cert: string, parent: XmlParent): boolean {\n\t\tconst xpathSigQuery = \".//*[local-name(.)='Signature' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\";\n\t\tconst signatures = xmlCrypto.xpath(parent, xpathSigQuery) as Array<Element>;\n\t\tlet signature = null;\n\n\t\tfor (const sign of signatures) {\n\t\t\tif (sign.parentNode !== parent) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Too many signatures\n\t\t\tif (signature) {\n\t\t\t\tSAMLUtils.log('Failed to validate SAML signature: Too Many Signatures');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tsignature = sign;\n\t\t}\n\n\t\tif (!signature) {\n\t\t\tSAMLUtils.log('Failed to validate SAML signature: Signature not found');\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.validateSignature(xml, cert, signature);\n\t}\n\n\tprivate validateSignature(xml: string, cert: string, signature: Element): any {\n\t\tconst sig = new xmlCrypto.SignedXml();\n\n\t\tsig.keyInfoProvider = {\n\t\t\tgetKeyInfo: () => '<X509Data></X509Data>',\n\t\t\tgetKey: () => Buffer.from(SAMLUtils.certToPEM(cert)),\n\t\t};\n\n\t\tsig.loadSignature(signature);\n\n\t\tconst result = sig.checkSignature(xml);\n\t\tif (!result && sig.validationErrors) {\n\t\t\tSAMLUtils.log(sig.validationErrors);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate getIssuer(assertion: XmlParent): any {\n\t\tconst issuers = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Issuer');\n\t\tif (issuers.length > 1) {\n\t\t\tthrow new Error('Too many Issuers');\n\t\t}\n\n\t\treturn issuers[0];\n\t}\n\n\tprivate getSubject(assertion: XmlParent): XmlParent {\n\t\tlet subject: XmlParent = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Subject')[0];\n\t\tconst encSubject = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'EncryptedID')[0];\n\n\t\tif (typeof encSubject !== 'undefined') {\n\t\t\tconst options = { key: this.serviceProviderOptions.privateKey };\n\t\t\txmlenc.decrypt(encSubject.getElementsByTagNameNS('*', 'EncryptedData')[0], options, (err, result) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tSAMLUtils.error(err);\n\t\t\t\t}\n\t\t\t\tsubject = new xmldom.DOMParser().parseFromString(result, 'text/xml');\n\t\t\t});\n\t\t}\n\n\t\treturn subject;\n\t}\n\n\tprivate validateSubjectConditions(subject: XmlParent): void {\n\t\tconst subjectConfirmation = subject.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'SubjectConfirmation')[0];\n\t\tif (subjectConfirmation) {\n\t\t\tconst subjectConfirmationData = subjectConfirmation.getElementsByTagNameNS(\n\t\t\t\t'urn:oasis:names:tc:SAML:2.0:assertion',\n\t\t\t\t'SubjectConfirmationData',\n\t\t\t)[0];\n\t\t\tif (subjectConfirmationData && !this.validateNotBeforeNotOnOrAfterAssertions(subjectConfirmationData)) {\n\t\t\t\tthrow new Error('NotBefore / NotOnOrAfter assertion failed');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate validateNotBeforeNotOnOrAfterAssertions(element: Element): boolean {\n\t\tconst sysnow = new Date();\n\t\tconst allowedclockdrift = this.serviceProviderOptions.allowedClockDrift || 0;\n\n\t\tconst now = new Date(sysnow.getTime() + allowedclockdrift);\n\n\t\tif (element.hasAttribute('NotBefore')) {\n\t\t\tconst notBefore: string | null = element.getAttribute('NotBefore');\n\n\t\t\tif (!notBefore) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst date = new Date(notBefore);\n\t\t\tif (now < date) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (element.hasAttribute('NotOnOrAfter')) {\n\t\t\tconst notOnOrAfter: string | null = element.getAttribute('NotOnOrAfter');\n\t\t\tif (!notOnOrAfter) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst date = new Date(notOnOrAfter);\n\n\t\t\tif (now >= date) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate validateAssertionConditions(assertion: XmlParent): void {\n\t\tconst conditions = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Conditions')[0];\n\t\tif (conditions && !this.validateNotBeforeNotOnOrAfterAssertions(conditions)) {\n\t\t\tthrow new Error('NotBefore / NotOnOrAfter assertion failed');\n\t\t}\n\t}\n\n\tprivate mapAttributes(attributeStatement: Element, profile: Record<string, any>): void {\n\t\tSAMLUtils.log(`Attribute Statement found in SAML response: ${attributeStatement}`);\n\t\tconst attributes = attributeStatement.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Attribute');\n\t\tSAMLUtils.log(`Attributes will be processed: ${attributes.length}`);\n\n\t\tif (attributes) {\n\t\t\tfor (let i = 0; i < attributes.length; i++) {\n\t\t\t\tconst values = attributes[i].getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AttributeValue');\n\t\t\t\tlet value;\n\t\t\t\tif (values.length === 1) {\n\t\t\t\t\tvalue = values[0].textContent;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tfor (let j = 0; j < values.length; j++) {\n\t\t\t\t\t\tvalue.push(values[j].textContent);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst key = attributes[i].getAttribute('Name');\n\t\t\t\tif (key) {\n\t\t\t\t\tSAMLUtils.log(`Attribute:  ${attributes[i]} has ${values.length} value(s).`);\n\t\t\t\t\tSAMLUtils.log(`Adding attribute from SAML response to profile: ${key} = ${value}`);\n\t\t\t\t\tprofile[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tSAMLUtils.log('No Attributes found in SAML attribute statement.');\n\t\t}\n\n\t\tif (!profile.mail && profile['urn:oid:0.9.2342.19200300.100.1.3']) {\n\t\t\t// See http://www.incommonfederation.org/attributesummary.html for definition of attribute OIDs\n\t\t\tprofile.mail = profile['urn:oid:0.9.2342.19200300.100.1.3'];\n\t\t}\n\n\t\tif (!profile.email && profile['urn:oid:1.2.840.113549.1.9.1']) {\n\t\t\tprofile.email = profile['urn:oid:1.2.840.113549.1.9.1'];\n\t\t}\n\n\t\tif (!profile.displayName && profile['urn:oid:2.16.840.1.113730.3.1.241']) {\n\t\t\tprofile.displayName = profile['urn:oid:2.16.840.1.113730.3.1.241'];\n\t\t}\n\n\t\tif (!profile.eppn && profile['urn:oid:1.3.6.1.4.1.5923.1.1.1.6']) {\n\t\t\tprofile.eppn = profile['urn:oid:1.3.6.1.4.1.5923.1.1.1.6'];\n\t\t}\n\n\t\tif (!profile.email && profile.mail) {\n\t\t\tprofile.email = profile.mail;\n\t\t}\n\n\t\tif (!profile.cn && profile['urn:oid:2.5.4.3']) {\n\t\t\tprofile.cn = profile['urn:oid:2.5.4.3'];\n\t\t}\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/lib/parsers/Response.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-accounts-saml/server/lib/parsers/Response.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/lib/parsers/Response.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/lib/parsers/Response.ts"],"names":[],"mappings":"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","sourcesContent":["import xmldom from '@xmldom/xmldom';\nimport xmlCrypto from 'xml-crypto';\nimport xmlenc from 'xml-encryption';\n\nimport type { ISAMLAssertion } from '../../definition/ISAMLAssertion';\nimport type { IServiceProviderOptions } from '../../definition/IServiceProviderOptions';\nimport type { IResponseValidateCallback } from '../../definition/callbacks';\nimport { SAMLUtils } from '../Utils';\nimport { StatusCode } from '../constants';\n\ntype XmlParent = Element | Document;\n\nexport class ResponseParser {\n\tserviceProviderOptions: IServiceProviderOptions;\n\n\tconstructor(serviceProviderOptions: IServiceProviderOptions) {\n\t\tthis.serviceProviderOptions = serviceProviderOptions;\n\t}\n\n\tpublic validate(xml: string, callback: IResponseValidateCallback): void {\n\t\t// We currently use RelayState to save SAML provider\n\t\tSAMLUtils.log(`Validating response with relay state: ${xml}`);\n\n\t\tlet error: Error | null = null;\n\n\t\tconst doc = new xmldom.DOMParser({\n\t\t\terrorHandler: {\n\t\t\t\tfatalError: (e: any) => {\n\t\t\t\t\tif (e instanceof Error) {\n\t\t\t\t\t\terror = e;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof e === 'string') {\n\t\t\t\t\t\terror = new Error(e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\terror = new Error();\n\t\t\t\t},\n\t\t\t\terror: (e: Error) => {\n\t\t\t\t\tif (e instanceof Error) {\n\t\t\t\t\t\terror = e;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof e === 'string') {\n\t\t\t\t\t\terror = new Error(e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\terror = new Error();\n\t\t\t\t},\n\t\t\t},\n\t\t}).parseFromString(xml, 'text/xml');\n\t\tif (!doc) {\n\t\t\treturn callback('No Doc Found');\n\t\t}\n\n\t\tif (error) {\n\t\t\treturn callback(error, null, false);\n\t\t}\n\n\t\tconst allResponses = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'Response');\n\t\tif (allResponses.length === 0) {\n\t\t\treturn this._checkLogoutResponse(doc, callback);\n\t\t}\n\n\t\tif (allResponses.length !== 1) {\n\t\t\treturn callback(new Error('Too many SAML responses'), null, false);\n\t\t}\n\t\tconst response = allResponses[0];\n\t\tSAMLUtils.log('Got response');\n\n\t\tSAMLUtils.log('Verify status');\n\t\tconst statusValidateObj = SAMLUtils.validateStatus(doc);\n\t\tif (!statusValidateObj.success) {\n\t\t\tif (!statusValidateObj.statusCode) {\n\t\t\t\treturn callback(new Error('Missing StatusCode'), null, false);\n\t\t\t}\n\n\t\t\tif (statusValidateObj.statusCode === StatusCode.responder && statusValidateObj.message) {\n\t\t\t\treturn callback(new Error(statusValidateObj.message), null, false);\n\t\t\t}\n\n\t\t\treturn callback(new Error(`Status is: ${statusValidateObj.statusCode}`), null, false);\n\t\t}\n\t\tSAMLUtils.log('Status ok');\n\n\t\tlet assertion: XmlParent;\n\t\tlet assertionData: ISAMLAssertion;\n\t\tlet issuer;\n\n\t\ttry {\n\t\t\tassertionData = this.getAssertion(response, xml);\n\t\t\tassertion = assertionData.assertion;\n\n\t\t\tthis.verifySignatures(response, assertionData, xml);\n\t\t} catch (e) {\n\t\t\treturn callback(e instanceof Error ? e : String(e), null, false);\n\t\t}\n\n\t\tconst profile: Record<string, any> = {};\n\n\t\tif (response.hasAttribute('InResponseTo')) {\n\t\t\tprofile.inResponseToId = response.getAttribute('InResponseTo');\n\t\t}\n\n\t\ttry {\n\t\t\tissuer = this.getIssuer(assertion);\n\t\t} catch (e) {\n\t\t\treturn callback(e instanceof Error ? e : String(e), null, false);\n\t\t}\n\n\t\tif (issuer) {\n\t\t\tprofile.issuer = issuer.textContent;\n\t\t}\n\n\t\tconst subject = this.getSubject(assertion);\n\t\tif (subject) {\n\t\t\tconst nameID = subject.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'NameID')[0];\n\t\t\tif (nameID) {\n\t\t\t\tprofile.nameID = nameID.textContent;\n\n\t\t\t\tif (nameID.hasAttribute('Format')) {\n\t\t\t\t\tprofile.nameIDFormat = nameID.getAttribute('Format');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.validateSubjectConditions(subject);\n\t\t\t} catch (e) {\n\t\t\t\treturn callback(e instanceof Error ? e : String(e), null, false);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.validateAssertionConditions(assertion);\n\t\t} catch (e) {\n\t\t\treturn callback(e instanceof Error ? e : String(e), null, false);\n\t\t}\n\n\t\tconst authnStatement = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AuthnStatement')[0];\n\n\t\tif (authnStatement) {\n\t\t\tif (authnStatement.hasAttribute('SessionIndex')) {\n\t\t\t\tprofile.sessionIndex = authnStatement.getAttribute('SessionIndex');\n\t\t\t\tSAMLUtils.log(`Session Index: ${profile.sessionIndex}`);\n\t\t\t} else {\n\t\t\t\tSAMLUtils.log('No Session Index Found');\n\t\t\t}\n\t\t} else {\n\t\t\tSAMLUtils.log('No AuthN Statement found');\n\t\t}\n\n\t\tconst attributeStatement = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AttributeStatement')[0];\n\t\tif (attributeStatement) {\n\t\t\tthis.mapAttributes(attributeStatement, profile);\n\t\t} else {\n\t\t\tSAMLUtils.log('No Attribute Statement found in SAML response.');\n\t\t}\n\n\t\tif (!profile.email && profile.nameID && profile.nameIDFormat && profile.nameIDFormat.indexOf('emailAddress') >= 0) {\n\t\t\tprofile.email = profile.nameID;\n\t\t}\n\n\t\tconst profileKeys = Object.keys(profile);\n\t\tfor (let i = 0; i < profileKeys.length; i++) {\n\t\t\tconst key = profileKeys[i];\n\n\t\t\tif (key.match(/\\./)) {\n\t\t\t\tprofile[key.replace(/\\./g, '-')] = profile[key];\n\t\t\t\tdelete profile[key];\n\t\t\t}\n\t\t}\n\n\t\tSAMLUtils.log({ msg: 'NameID', profile });\n\t\treturn callback(null, profile, false);\n\t}\n\n\tprivate _checkLogoutResponse(doc: Document, callback: IResponseValidateCallback): void {\n\t\tconst logoutResponse = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'LogoutResponse');\n\t\tif (!logoutResponse.length) {\n\t\t\treturn callback(new Error('Unknown SAML response message'), null, false);\n\t\t}\n\n\t\tSAMLUtils.log('Verify status');\n\t\tconst statusValidateObj = SAMLUtils.validateStatus(doc);\n\t\tif (!statusValidateObj.success) {\n\t\t\treturn callback(new Error(`Status is: ${statusValidateObj.statusCode}`), null, false);\n\t\t}\n\t\tSAMLUtils.log('Status ok');\n\n\t\t// @ToDo: Check if this situation is still used\n\t\treturn callback(null, null, true);\n\t}\n\n\tprivate getAssertion(response: Element, xml: string): ISAMLAssertion {\n\t\tconst allAssertions = response.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Assertion');\n\t\tconst allEncrypedAssertions = response.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'EncryptedAssertion');\n\n\t\tif (allAssertions.length + allEncrypedAssertions.length > 1) {\n\t\t\tthrow new Error('Too many SAML assertions');\n\t\t}\n\n\t\tlet assertion: XmlParent = allAssertions[0];\n\t\tconst encAssertion = allEncrypedAssertions[0];\n\t\tlet newXml = null;\n\n\t\tif (typeof encAssertion !== 'undefined') {\n\t\t\tconst options = { key: this.serviceProviderOptions.privateKey };\n\t\t\tconst encData = encAssertion.getElementsByTagNameNS('*', 'EncryptedData')[0];\n\t\t\txmlenc.decrypt(encData, options, (err, result) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tSAMLUtils.error(err);\n\t\t\t\t}\n\n\t\t\t\tconst document = new xmldom.DOMParser().parseFromString(result, 'text/xml');\n\t\t\t\tif (!document) {\n\t\t\t\t\tthrow new Error('Failed to decrypt SAML assertion');\n\t\t\t\t}\n\n\t\t\t\tconst decryptedAssertions = document.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Assertion');\n\t\t\t\tif (decryptedAssertions.length) {\n\t\t\t\t\tassertion = decryptedAssertions[0];\n\t\t\t\t}\n\n\t\t\t\tnewXml = result;\n\t\t\t});\n\t\t}\n\n\t\tif (!assertion) {\n\t\t\tthrow new Error('Missing SAML assertion');\n\t\t}\n\n\t\treturn {\n\t\t\tassertion,\n\t\t\txml: newXml || xml,\n\t\t};\n\t}\n\n\tprivate verifySignatures(response: Element, assertionData: ISAMLAssertion, xml: string): void {\n\t\tif (!this.serviceProviderOptions.cert) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst signatureType = this.serviceProviderOptions.signatureValidationType;\n\n\t\tconst checkEither = signatureType === 'Either';\n\t\tconst checkResponse = signatureType === 'Response' || signatureType === 'All' || checkEither;\n\t\tconst checkAssertion = signatureType === 'Assertion' || signatureType === 'All' || checkEither;\n\t\tlet anyValidSignature = false;\n\n\t\tif (checkResponse) {\n\t\t\tSAMLUtils.log('Verify Document Signature');\n\t\t\tif (!this.validateResponseSignature(xml, this.serviceProviderOptions.cert, response)) {\n\t\t\t\tif (!checkEither) {\n\t\t\t\t\tSAMLUtils.log('Document Signature WRONG');\n\t\t\t\t\tthrow new Error('Invalid Signature');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanyValidSignature = true;\n\t\t\t}\n\t\t\tSAMLUtils.log('Document Signature OK');\n\t\t}\n\n\t\tif (checkAssertion) {\n\t\t\tSAMLUtils.log('Verify Assertion Signature');\n\t\t\tif (!this.validateAssertionSignature(assertionData.xml, this.serviceProviderOptions.cert, assertionData.assertion)) {\n\t\t\t\tif (!checkEither) {\n\t\t\t\t\tSAMLUtils.log('Assertion Signature WRONG');\n\t\t\t\t\tthrow new Error('Invalid Assertion signature');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanyValidSignature = true;\n\t\t\t}\n\t\t\tSAMLUtils.log('Assertion Signature OK');\n\t\t}\n\n\t\tif (checkEither && !anyValidSignature) {\n\t\t\tSAMLUtils.log('No Valid Signature');\n\t\t\tthrow new Error('No valid SAML Signature found');\n\t\t}\n\t}\n\n\tprivate validateResponseSignature(xml: string, cert: string, response: Element): boolean {\n\t\treturn this.validateSignatureChildren(xml, cert, response);\n\t}\n\n\tprivate validateAssertionSignature(xml: string, cert: string, assertion: XmlParent): boolean {\n\t\treturn this.validateSignatureChildren(xml, cert, assertion);\n\t}\n\n\tprivate validateSignatureChildren(xml: string, cert: string, parent: XmlParent): boolean {\n\t\tconst xpathSigQuery = \".//*[local-name(.)='Signature' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\";\n\t\tconst signatures = xmlCrypto.xpath(parent, xpathSigQuery) as Array<Element>;\n\t\tlet signature = null;\n\n\t\tfor (const sign of signatures) {\n\t\t\tif (sign.parentNode !== parent) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Too many signatures\n\t\t\tif (signature) {\n\t\t\t\tSAMLUtils.log('Failed to validate SAML signature: Too Many Signatures');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tsignature = sign;\n\t\t}\n\n\t\tif (!signature) {\n\t\t\tSAMLUtils.log('Failed to validate SAML signature: Signature not found');\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.validateSignature(xml, cert, signature);\n\t}\n\n\tprivate validateSignature(xml: string, cert: string, signature: Element): any {\n\t\tconst sig = new xmlCrypto.SignedXml();\n\n\t\tsig.keyInfoProvider = {\n\t\t\tgetKeyInfo: () => '<X509Data></X509Data>',\n\t\t\tgetKey: () => Buffer.from(SAMLUtils.certToPEM(cert)),\n\t\t};\n\n\t\tsig.loadSignature(signature);\n\n\t\tconst result = sig.checkSignature(xml);\n\t\tif (!result && sig.validationErrors) {\n\t\t\tSAMLUtils.log(sig.validationErrors);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate getIssuer(assertion: XmlParent): any {\n\t\tconst issuers = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Issuer');\n\t\tif (issuers.length > 1) {\n\t\t\tthrow new Error('Too many Issuers');\n\t\t}\n\n\t\treturn issuers[0];\n\t}\n\n\tprivate getSubject(assertion: XmlParent): XmlParent {\n\t\tlet subject: XmlParent = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Subject')[0];\n\t\tconst encSubject = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'EncryptedID')[0];\n\n\t\tif (typeof encSubject !== 'undefined') {\n\t\t\tconst options = { key: this.serviceProviderOptions.privateKey };\n\t\t\txmlenc.decrypt(encSubject.getElementsByTagNameNS('*', 'EncryptedData')[0], options, (err, result) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tSAMLUtils.error(err);\n\t\t\t\t}\n\t\t\t\tsubject = new xmldom.DOMParser().parseFromString(result, 'text/xml');\n\t\t\t});\n\t\t}\n\n\t\treturn subject;\n\t}\n\n\tprivate validateSubjectConditions(subject: XmlParent): void {\n\t\tconst subjectConfirmation = subject.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'SubjectConfirmation')[0];\n\t\tif (subjectConfirmation) {\n\t\t\tconst subjectConfirmationData = subjectConfirmation.getElementsByTagNameNS(\n\t\t\t\t'urn:oasis:names:tc:SAML:2.0:assertion',\n\t\t\t\t'SubjectConfirmationData',\n\t\t\t)[0];\n\t\t\tif (subjectConfirmationData && !this.validateNotBeforeNotOnOrAfterAssertions(subjectConfirmationData)) {\n\t\t\t\tthrow new Error('NotBefore / NotOnOrAfter assertion failed');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate validateNotBeforeNotOnOrAfterAssertions(element: Element): boolean {\n\t\tconst sysnow = new Date();\n\t\tconst allowedclockdrift = this.serviceProviderOptions.allowedClockDrift || 0;\n\n\t\tconst now = new Date(sysnow.getTime() + allowedclockdrift);\n\n\t\tif (element.hasAttribute('NotBefore')) {\n\t\t\tconst notBefore: string | null = element.getAttribute('NotBefore');\n\n\t\t\tif (!notBefore) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst date = new Date(notBefore);\n\t\t\tif (now < date) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (element.hasAttribute('NotOnOrAfter')) {\n\t\t\tconst notOnOrAfter: string | null = element.getAttribute('NotOnOrAfter');\n\t\t\tif (!notOnOrAfter) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst date = new Date(notOnOrAfter);\n\n\t\t\tif (now >= date) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate validateAssertionConditions(assertion: XmlParent): void {\n\t\tconst conditions = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Conditions')[0];\n\t\tif (conditions && !this.validateNotBeforeNotOnOrAfterAssertions(conditions)) {\n\t\t\tthrow new Error('NotBefore / NotOnOrAfter assertion failed');\n\t\t}\n\t}\n\n\tprivate mapAttributes(attributeStatement: Element, profile: Record<string, any>): void {\n\t\tSAMLUtils.log(`Attribute Statement found in SAML response: ${attributeStatement}`);\n\t\tconst attributes = attributeStatement.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Attribute');\n\t\tSAMLUtils.log(`Attributes will be processed: ${attributes.length}`);\n\n\t\tif (attributes) {\n\t\t\tfor (let i = 0; i < attributes.length; i++) {\n\t\t\t\tconst values = attributes[i].getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AttributeValue');\n\t\t\t\tlet value;\n\t\t\t\tif (values.length === 1) {\n\t\t\t\t\tvalue = values[0].textContent;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tfor (let j = 0; j < values.length; j++) {\n\t\t\t\t\t\tvalue.push(values[j].textContent);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst key = attributes[i].getAttribute('Name');\n\t\t\t\tif (key) {\n\t\t\t\t\tSAMLUtils.log(`Attribute:  ${attributes[i]} has ${values.length} value(s).`);\n\t\t\t\t\tSAMLUtils.log(`Adding attribute from SAML response to profile: ${key} = ${value}`);\n\t\t\t\t\tprofile[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tSAMLUtils.log('No Attributes found in SAML attribute statement.');\n\t\t}\n\n\t\tif (!profile.mail && profile['urn:oid:0.9.2342.19200300.100.1.3']) {\n\t\t\t// See http://www.incommonfederation.org/attributesummary.html for definition of attribute OIDs\n\t\t\tprofile.mail = profile['urn:oid:0.9.2342.19200300.100.1.3'];\n\t\t}\n\n\t\tif (!profile.email && profile['urn:oid:1.2.840.113549.1.9.1']) {\n\t\t\tprofile.email = profile['urn:oid:1.2.840.113549.1.9.1'];\n\t\t}\n\n\t\tif (!profile.displayName && profile['urn:oid:2.16.840.1.113730.3.1.241']) {\n\t\t\tprofile.displayName = profile['urn:oid:2.16.840.1.113730.3.1.241'];\n\t\t}\n\n\t\tif (!profile.eppn && profile['urn:oid:1.3.6.1.4.1.5923.1.1.1.6']) {\n\t\t\tprofile.eppn = profile['urn:oid:1.3.6.1.4.1.5923.1.1.1.6'];\n\t\t}\n\n\t\tif (!profile.email && profile.mail) {\n\t\t\tprofile.email = profile.mail;\n\t\t}\n\n\t\tif (!profile.cn && profile['urn:oid:2.5.4.3']) {\n\t\t\tprofile.cn = profile['urn:oid:2.5.4.3'];\n\t\t}\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      ResponseParser: () => ResponseParser\n    });\n    let xmldom;\n    module.link(\"@xmldom/xmldom\", {\n      default(v) {\n        xmldom = v;\n      }\n    }, 0);\n    let xmlCrypto;\n    module.link(\"xml-crypto\", {\n      default(v) {\n        xmlCrypto = v;\n      }\n    }, 1);\n    let xmlenc;\n    module.link(\"xml-encryption\", {\n      default(v) {\n        xmlenc = v;\n      }\n    }, 2);\n    let SAMLUtils;\n    module.link(\"../Utils\", {\n      SAMLUtils(v) {\n        SAMLUtils = v;\n      }\n    }, 3);\n    let StatusCode;\n    module.link(\"../constants\", {\n      StatusCode(v) {\n        StatusCode = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class ResponseParser {\n      constructor(serviceProviderOptions) {\n        this.serviceProviderOptions = void 0;\n        this.serviceProviderOptions = serviceProviderOptions;\n      }\n      validate(xml, callback) {\n        // We currently use RelayState to save SAML provider\n        SAMLUtils.log(\"Validating response with relay state: \".concat(xml));\n        let error = null;\n        const doc = new xmldom.DOMParser({\n          errorHandler: {\n            fatalError: e => {\n              if (e instanceof Error) {\n                error = e;\n                return;\n              }\n              if (typeof e === 'string') {\n                error = new Error(e);\n                return;\n              }\n              error = new Error();\n            },\n            error: e => {\n              if (e instanceof Error) {\n                error = e;\n                return;\n              }\n              if (typeof e === 'string') {\n                error = new Error(e);\n                return;\n              }\n              error = new Error();\n            }\n          }\n        }).parseFromString(xml, 'text/xml');\n        if (!doc) {\n          return callback('No Doc Found');\n        }\n        if (error) {\n          return callback(error, null, false);\n        }\n        const allResponses = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'Response');\n        if (allResponses.length === 0) {\n          return this._checkLogoutResponse(doc, callback);\n        }\n        if (allResponses.length !== 1) {\n          return callback(new Error('Too many SAML responses'), null, false);\n        }\n        const response = allResponses[0];\n        SAMLUtils.log('Got response');\n        SAMLUtils.log('Verify status');\n        const statusValidateObj = SAMLUtils.validateStatus(doc);\n        if (!statusValidateObj.success) {\n          if (!statusValidateObj.statusCode) {\n            return callback(new Error('Missing StatusCode'), null, false);\n          }\n          if (statusValidateObj.statusCode === StatusCode.responder && statusValidateObj.message) {\n            return callback(new Error(statusValidateObj.message), null, false);\n          }\n          return callback(new Error(\"Status is: \".concat(statusValidateObj.statusCode)), null, false);\n        }\n        SAMLUtils.log('Status ok');\n        let assertion;\n        let assertionData;\n        let issuer;\n        try {\n          assertionData = this.getAssertion(response, xml);\n          assertion = assertionData.assertion;\n          this.verifySignatures(response, assertionData, xml);\n        } catch (e) {\n          return callback(e instanceof Error ? e : String(e), null, false);\n        }\n        const profile = {};\n        if (response.hasAttribute('InResponseTo')) {\n          profile.inResponseToId = response.getAttribute('InResponseTo');\n        }\n        try {\n          issuer = this.getIssuer(assertion);\n        } catch (e) {\n          return callback(e instanceof Error ? e : String(e), null, false);\n        }\n        if (issuer) {\n          profile.issuer = issuer.textContent;\n        }\n        const subject = this.getSubject(assertion);\n        if (subject) {\n          const nameID = subject.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'NameID')[0];\n          if (nameID) {\n            profile.nameID = nameID.textContent;\n            if (nameID.hasAttribute('Format')) {\n              profile.nameIDFormat = nameID.getAttribute('Format');\n            }\n          }\n          try {\n            this.validateSubjectConditions(subject);\n          } catch (e) {\n            return callback(e instanceof Error ? e : String(e), null, false);\n          }\n        }\n        try {\n          this.validateAssertionConditions(assertion);\n        } catch (e) {\n          return callback(e instanceof Error ? e : String(e), null, false);\n        }\n        const authnStatement = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AuthnStatement')[0];\n        if (authnStatement) {\n          if (authnStatement.hasAttribute('SessionIndex')) {\n            profile.sessionIndex = authnStatement.getAttribute('SessionIndex');\n            SAMLUtils.log(\"Session Index: \".concat(profile.sessionIndex));\n          } else {\n            SAMLUtils.log('No Session Index Found');\n          }\n        } else {\n          SAMLUtils.log('No AuthN Statement found');\n        }\n        const attributeStatement = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AttributeStatement')[0];\n        if (attributeStatement) {\n          this.mapAttributes(attributeStatement, profile);\n        } else {\n          SAMLUtils.log('No Attribute Statement found in SAML response.');\n        }\n        if (!profile.email && profile.nameID && profile.nameIDFormat && profile.nameIDFormat.indexOf('emailAddress') >= 0) {\n          profile.email = profile.nameID;\n        }\n        const profileKeys = Object.keys(profile);\n        for (let i = 0; i < profileKeys.length; i++) {\n          const key = profileKeys[i];\n          if (key.match(/\\./)) {\n            profile[key.replace(/\\./g, '-')] = profile[key];\n            delete profile[key];\n          }\n        }\n        SAMLUtils.log({\n          msg: 'NameID',\n          profile\n        });\n        return callback(null, profile, false);\n      }\n      _checkLogoutResponse(doc, callback) {\n        const logoutResponse = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'LogoutResponse');\n        if (!logoutResponse.length) {\n          return callback(new Error('Unknown SAML response message'), null, false);\n        }\n        SAMLUtils.log('Verify status');\n        const statusValidateObj = SAMLUtils.validateStatus(doc);\n        if (!statusValidateObj.success) {\n          return callback(new Error(\"Status is: \".concat(statusValidateObj.statusCode)), null, false);\n        }\n        SAMLUtils.log('Status ok');\n        // @ToDo: Check if this situation is still used\n        return callback(null, null, true);\n      }\n      getAssertion(response, xml) {\n        const allAssertions = response.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Assertion');\n        const allEncrypedAssertions = response.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'EncryptedAssertion');\n        if (allAssertions.length + allEncrypedAssertions.length > 1) {\n          throw new Error('Too many SAML assertions');\n        }\n        let assertion = allAssertions[0];\n        const encAssertion = allEncrypedAssertions[0];\n        let newXml = null;\n        if (typeof encAssertion !== 'undefined') {\n          const options = {\n            key: this.serviceProviderOptions.privateKey\n          };\n          const encData = encAssertion.getElementsByTagNameNS('*', 'EncryptedData')[0];\n          xmlenc.decrypt(encData, options, (err, result) => {\n            if (err) {\n              SAMLUtils.error(err);\n            }\n            const document = new xmldom.DOMParser().parseFromString(result, 'text/xml');\n            if (!document) {\n              throw new Error('Failed to decrypt SAML assertion');\n            }\n            const decryptedAssertions = document.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Assertion');\n            if (decryptedAssertions.length) {\n              assertion = decryptedAssertions[0];\n            }\n            newXml = result;\n          });\n        }\n        if (!assertion) {\n          throw new Error('Missing SAML assertion');\n        }\n        return {\n          assertion,\n          xml: newXml || xml\n        };\n      }\n      verifySignatures(response, assertionData, xml) {\n        if (!this.serviceProviderOptions.cert) {\n          return;\n        }\n        const signatureType = this.serviceProviderOptions.signatureValidationType;\n        const checkEither = signatureType === 'Either';\n        const checkResponse = signatureType === 'Response' || signatureType === 'All' || checkEither;\n        const checkAssertion = signatureType === 'Assertion' || signatureType === 'All' || checkEither;\n        let anyValidSignature = false;\n        if (checkResponse) {\n          SAMLUtils.log('Verify Document Signature');\n          if (!this.validateResponseSignature(xml, this.serviceProviderOptions.cert, response)) {\n            if (!checkEither) {\n              SAMLUtils.log('Document Signature WRONG');\n              throw new Error('Invalid Signature');\n            }\n          } else {\n            anyValidSignature = true;\n          }\n          SAMLUtils.log('Document Signature OK');\n        }\n        if (checkAssertion) {\n          SAMLUtils.log('Verify Assertion Signature');\n          if (!this.validateAssertionSignature(assertionData.xml, this.serviceProviderOptions.cert, assertionData.assertion)) {\n            if (!checkEither) {\n              SAMLUtils.log('Assertion Signature WRONG');\n              throw new Error('Invalid Assertion signature');\n            }\n          } else {\n            anyValidSignature = true;\n          }\n          SAMLUtils.log('Assertion Signature OK');\n        }\n        if (checkEither && !anyValidSignature) {\n          SAMLUtils.log('No Valid Signature');\n          throw new Error('No valid SAML Signature found');\n        }\n      }\n      validateResponseSignature(xml, cert, response) {\n        return this.validateSignatureChildren(xml, cert, response);\n      }\n      validateAssertionSignature(xml, cert, assertion) {\n        return this.validateSignatureChildren(xml, cert, assertion);\n      }\n      validateSignatureChildren(xml, cert, parent) {\n        const xpathSigQuery = \".//*[local-name(.)='Signature' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\";\n        const signatures = xmlCrypto.xpath(parent, xpathSigQuery);\n        let signature = null;\n        for (const sign of signatures) {\n          if (sign.parentNode !== parent) {\n            continue;\n          }\n          // Too many signatures\n          if (signature) {\n            SAMLUtils.log('Failed to validate SAML signature: Too Many Signatures');\n            return false;\n          }\n          signature = sign;\n        }\n        if (!signature) {\n          SAMLUtils.log('Failed to validate SAML signature: Signature not found');\n          return false;\n        }\n        return this.validateSignature(xml, cert, signature);\n      }\n      validateSignature(xml, cert, signature) {\n        const sig = new xmlCrypto.SignedXml();\n        sig.keyInfoProvider = {\n          getKeyInfo: () => '<X509Data></X509Data>',\n          getKey: () => Buffer.from(SAMLUtils.certToPEM(cert))\n        };\n        sig.loadSignature(signature);\n        const result = sig.checkSignature(xml);\n        if (!result && sig.validationErrors) {\n          SAMLUtils.log(sig.validationErrors);\n        }\n        return result;\n      }\n      getIssuer(assertion) {\n        const issuers = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Issuer');\n        if (issuers.length > 1) {\n          throw new Error('Too many Issuers');\n        }\n        return issuers[0];\n      }\n      getSubject(assertion) {\n        let subject = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Subject')[0];\n        const encSubject = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'EncryptedID')[0];\n        if (typeof encSubject !== 'undefined') {\n          const options = {\n            key: this.serviceProviderOptions.privateKey\n          };\n          xmlenc.decrypt(encSubject.getElementsByTagNameNS('*', 'EncryptedData')[0], options, (err, result) => {\n            if (err) {\n              SAMLUtils.error(err);\n            }\n            subject = new xmldom.DOMParser().parseFromString(result, 'text/xml');\n          });\n        }\n        return subject;\n      }\n      validateSubjectConditions(subject) {\n        const subjectConfirmation = subject.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'SubjectConfirmation')[0];\n        if (subjectConfirmation) {\n          const subjectConfirmationData = subjectConfirmation.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'SubjectConfirmationData')[0];\n          if (subjectConfirmationData && !this.validateNotBeforeNotOnOrAfterAssertions(subjectConfirmationData)) {\n            throw new Error('NotBefore / NotOnOrAfter assertion failed');\n          }\n        }\n      }\n      validateNotBeforeNotOnOrAfterAssertions(element) {\n        const sysnow = new Date();\n        const allowedclockdrift = this.serviceProviderOptions.allowedClockDrift || 0;\n        const now = new Date(sysnow.getTime() + allowedclockdrift);\n        if (element.hasAttribute('NotBefore')) {\n          const notBefore = element.getAttribute('NotBefore');\n          if (!notBefore) {\n            return false;\n          }\n          const date = new Date(notBefore);\n          if (now < date) {\n            return false;\n          }\n        }\n        if (element.hasAttribute('NotOnOrAfter')) {\n          const notOnOrAfter = element.getAttribute('NotOnOrAfter');\n          if (!notOnOrAfter) {\n            return false;\n          }\n          const date = new Date(notOnOrAfter);\n          if (now >= date) {\n            return false;\n          }\n        }\n        return true;\n      }\n      validateAssertionConditions(assertion) {\n        const conditions = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Conditions')[0];\n        if (conditions && !this.validateNotBeforeNotOnOrAfterAssertions(conditions)) {\n          throw new Error('NotBefore / NotOnOrAfter assertion failed');\n        }\n      }\n      mapAttributes(attributeStatement, profile) {\n        SAMLUtils.log(\"Attribute Statement found in SAML response: \".concat(attributeStatement));\n        const attributes = attributeStatement.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Attribute');\n        SAMLUtils.log(\"Attributes will be processed: \".concat(attributes.length));\n        if (attributes) {\n          for (let i = 0; i < attributes.length; i++) {\n            const values = attributes[i].getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AttributeValue');\n            let value;\n            if (values.length === 1) {\n              value = values[0].textContent;\n            } else {\n              value = [];\n              for (let j = 0; j < values.length; j++) {\n                value.push(values[j].textContent);\n              }\n            }\n            const key = attributes[i].getAttribute('Name');\n            if (key) {\n              SAMLUtils.log(\"Attribute:  \".concat(attributes[i], \" has \").concat(values.length, \" value(s).\"));\n              SAMLUtils.log(\"Adding attribute from SAML response to profile: \".concat(key, \" = \").concat(value));\n              profile[key] = value;\n            }\n          }\n        } else {\n          SAMLUtils.log('No Attributes found in SAML attribute statement.');\n        }\n        if (!profile.mail && profile['urn:oid:0.9.2342.19200300.100.1.3']) {\n          // See http://www.incommonfederation.org/attributesummary.html for definition of attribute OIDs\n          profile.mail = profile['urn:oid:0.9.2342.19200300.100.1.3'];\n        }\n        if (!profile.email && profile['urn:oid:1.2.840.113549.1.9.1']) {\n          profile.email = profile['urn:oid:1.2.840.113549.1.9.1'];\n        }\n        if (!profile.displayName && profile['urn:oid:2.16.840.1.113730.3.1.241']) {\n          profile.displayName = profile['urn:oid:2.16.840.1.113730.3.1.241'];\n        }\n        if (!profile.eppn && profile['urn:oid:1.3.6.1.4.1.5923.1.1.1.6']) {\n          profile.eppn = profile['urn:oid:1.3.6.1.4.1.5923.1.1.1.6'];\n        }\n        if (!profile.email && profile.mail) {\n          profile.email = profile.mail;\n        }\n        if (!profile.cn && profile['urn:oid:2.5.4.3']) {\n          profile.cn = profile['urn:oid:2.5.4.3'];\n        }\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","ResponseParser","xmldom","link","default","v","xmlCrypto","xmlenc","SAMLUtils","StatusCode","__reifyWaitForDeps__","constructor","serviceProviderOptions","validate","xml","callback","log","concat","error","doc","DOMParser","errorHandler","fatalError","e","Error","parseFromString","allResponses","getElementsByTagNameNS","length","_checkLogoutResponse","response","statusValidateObj","validateStatus","success","statusCode","responder","message","assertion","assertionData","issuer","getAssertion","verifySignatures","String","profile","hasAttribute","inResponseToId","getAttribute","getIssuer","textContent","subject","getSubject","nameID","nameIDFormat","validateSubjectConditions","validateAssertionConditions","authnStatement","sessionIndex","attributeStatement","mapAttributes","email","indexOf","profileKeys","Object","keys","i","key","match","replace","msg","logoutResponse","allAssertions","allEncrypedAssertions","encAssertion","newXml","options","privateKey","encData","decrypt","err","result","document","decryptedAssertions","cert","signatureType","signatureValidationType","checkEither","checkResponse","checkAssertion","anyValidSignature","validateResponseSignature","validateAssertionSignature","validateSignatureChildren","parent","xpathSigQuery","signatures","xpath","signature","sign","parentNode","validateSignature","sig","SignedXml","keyInfoProvider","getKeyInfo","getKey","Buffer","from","certToPEM","loadSignature","checkSignature","validationErrors","issuers","encSubject","subjectConfirmation","subjectConfirmationData","validateNotBeforeNotOnOrAfterAssertions","element","sysnow","Date","allowedclockdrift","allowedClockDrift","now","getTime","notBefore","date","notOnOrAfter","conditions","attributes","values","value","j","push","mail","displayName","eppn","cn","__reify_async_result__","_reifyError","self","async"],"sources":["app/meteor-accounts-saml/server/lib/parsers/Response.ts"],"sourcesContent":["import xmldom from '@xmldom/xmldom';\nimport xmlCrypto from 'xml-crypto';\nimport xmlenc from 'xml-encryption';\n\nimport type { ISAMLAssertion } from '../../definition/ISAMLAssertion';\nimport type { IServiceProviderOptions } from '../../definition/IServiceProviderOptions';\nimport type { IResponseValidateCallback } from '../../definition/callbacks';\nimport { SAMLUtils } from '../Utils';\nimport { StatusCode } from '../constants';\n\ntype XmlParent = Element | Document;\n\nexport class ResponseParser {\n\tserviceProviderOptions: IServiceProviderOptions;\n\n\tconstructor(serviceProviderOptions: IServiceProviderOptions) {\n\t\tthis.serviceProviderOptions = serviceProviderOptions;\n\t}\n\n\tpublic validate(xml: string, callback: IResponseValidateCallback): void {\n\t\t// We currently use RelayState to save SAML provider\n\t\tSAMLUtils.log(`Validating response with relay state: ${xml}`);\n\n\t\tlet error: Error | null = null;\n\n\t\tconst doc = new xmldom.DOMParser({\n\t\t\terrorHandler: {\n\t\t\t\tfatalError: (e: any) => {\n\t\t\t\t\tif (e instanceof Error) {\n\t\t\t\t\t\terror = e;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof e === 'string') {\n\t\t\t\t\t\terror = new Error(e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\terror = new Error();\n\t\t\t\t},\n\t\t\t\terror: (e: Error) => {\n\t\t\t\t\tif (e instanceof Error) {\n\t\t\t\t\t\terror = e;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof e === 'string') {\n\t\t\t\t\t\terror = new Error(e);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\terror = new Error();\n\t\t\t\t},\n\t\t\t},\n\t\t}).parseFromString(xml, 'text/xml');\n\t\tif (!doc) {\n\t\t\treturn callback('No Doc Found');\n\t\t}\n\n\t\tif (error) {\n\t\t\treturn callback(error, null, false);\n\t\t}\n\n\t\tconst allResponses = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'Response');\n\t\tif (allResponses.length === 0) {\n\t\t\treturn this._checkLogoutResponse(doc, callback);\n\t\t}\n\n\t\tif (allResponses.length !== 1) {\n\t\t\treturn callback(new Error('Too many SAML responses'), null, false);\n\t\t}\n\t\tconst response = allResponses[0];\n\t\tSAMLUtils.log('Got response');\n\n\t\tSAMLUtils.log('Verify status');\n\t\tconst statusValidateObj = SAMLUtils.validateStatus(doc);\n\t\tif (!statusValidateObj.success) {\n\t\t\tif (!statusValidateObj.statusCode) {\n\t\t\t\treturn callback(new Error('Missing StatusCode'), null, false);\n\t\t\t}\n\n\t\t\tif (statusValidateObj.statusCode === StatusCode.responder && statusValidateObj.message) {\n\t\t\t\treturn callback(new Error(statusValidateObj.message), null, false);\n\t\t\t}\n\n\t\t\treturn callback(new Error(`Status is: ${statusValidateObj.statusCode}`), null, false);\n\t\t}\n\t\tSAMLUtils.log('Status ok');\n\n\t\tlet assertion: XmlParent;\n\t\tlet assertionData: ISAMLAssertion;\n\t\tlet issuer;\n\n\t\ttry {\n\t\t\tassertionData = this.getAssertion(response, xml);\n\t\t\tassertion = assertionData.assertion;\n\n\t\t\tthis.verifySignatures(response, assertionData, xml);\n\t\t} catch (e) {\n\t\t\treturn callback(e instanceof Error ? e : String(e), null, false);\n\t\t}\n\n\t\tconst profile: Record<string, any> = {};\n\n\t\tif (response.hasAttribute('InResponseTo')) {\n\t\t\tprofile.inResponseToId = response.getAttribute('InResponseTo');\n\t\t}\n\n\t\ttry {\n\t\t\tissuer = this.getIssuer(assertion);\n\t\t} catch (e) {\n\t\t\treturn callback(e instanceof Error ? e : String(e), null, false);\n\t\t}\n\n\t\tif (issuer) {\n\t\t\tprofile.issuer = issuer.textContent;\n\t\t}\n\n\t\tconst subject = this.getSubject(assertion);\n\t\tif (subject) {\n\t\t\tconst nameID = subject.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'NameID')[0];\n\t\t\tif (nameID) {\n\t\t\t\tprofile.nameID = nameID.textContent;\n\n\t\t\t\tif (nameID.hasAttribute('Format')) {\n\t\t\t\t\tprofile.nameIDFormat = nameID.getAttribute('Format');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.validateSubjectConditions(subject);\n\t\t\t} catch (e) {\n\t\t\t\treturn callback(e instanceof Error ? e : String(e), null, false);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.validateAssertionConditions(assertion);\n\t\t} catch (e) {\n\t\t\treturn callback(e instanceof Error ? e : String(e), null, false);\n\t\t}\n\n\t\tconst authnStatement = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AuthnStatement')[0];\n\n\t\tif (authnStatement) {\n\t\t\tif (authnStatement.hasAttribute('SessionIndex')) {\n\t\t\t\tprofile.sessionIndex = authnStatement.getAttribute('SessionIndex');\n\t\t\t\tSAMLUtils.log(`Session Index: ${profile.sessionIndex}`);\n\t\t\t} else {\n\t\t\t\tSAMLUtils.log('No Session Index Found');\n\t\t\t}\n\t\t} else {\n\t\t\tSAMLUtils.log('No AuthN Statement found');\n\t\t}\n\n\t\tconst attributeStatement = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AttributeStatement')[0];\n\t\tif (attributeStatement) {\n\t\t\tthis.mapAttributes(attributeStatement, profile);\n\t\t} else {\n\t\t\tSAMLUtils.log('No Attribute Statement found in SAML response.');\n\t\t}\n\n\t\tif (!profile.email && profile.nameID && profile.nameIDFormat && profile.nameIDFormat.indexOf('emailAddress') >= 0) {\n\t\t\tprofile.email = profile.nameID;\n\t\t}\n\n\t\tconst profileKeys = Object.keys(profile);\n\t\tfor (let i = 0; i < profileKeys.length; i++) {\n\t\t\tconst key = profileKeys[i];\n\n\t\t\tif (key.match(/\\./)) {\n\t\t\t\tprofile[key.replace(/\\./g, '-')] = profile[key];\n\t\t\t\tdelete profile[key];\n\t\t\t}\n\t\t}\n\n\t\tSAMLUtils.log({ msg: 'NameID', profile });\n\t\treturn callback(null, profile, false);\n\t}\n\n\tprivate _checkLogoutResponse(doc: Document, callback: IResponseValidateCallback): void {\n\t\tconst logoutResponse = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'LogoutResponse');\n\t\tif (!logoutResponse.length) {\n\t\t\treturn callback(new Error('Unknown SAML response message'), null, false);\n\t\t}\n\n\t\tSAMLUtils.log('Verify status');\n\t\tconst statusValidateObj = SAMLUtils.validateStatus(doc);\n\t\tif (!statusValidateObj.success) {\n\t\t\treturn callback(new Error(`Status is: ${statusValidateObj.statusCode}`), null, false);\n\t\t}\n\t\tSAMLUtils.log('Status ok');\n\n\t\t// @ToDo: Check if this situation is still used\n\t\treturn callback(null, null, true);\n\t}\n\n\tprivate getAssertion(response: Element, xml: string): ISAMLAssertion {\n\t\tconst allAssertions = response.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Assertion');\n\t\tconst allEncrypedAssertions = response.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'EncryptedAssertion');\n\n\t\tif (allAssertions.length + allEncrypedAssertions.length > 1) {\n\t\t\tthrow new Error('Too many SAML assertions');\n\t\t}\n\n\t\tlet assertion: XmlParent = allAssertions[0];\n\t\tconst encAssertion = allEncrypedAssertions[0];\n\t\tlet newXml = null;\n\n\t\tif (typeof encAssertion !== 'undefined') {\n\t\t\tconst options = { key: this.serviceProviderOptions.privateKey };\n\t\t\tconst encData = encAssertion.getElementsByTagNameNS('*', 'EncryptedData')[0];\n\t\t\txmlenc.decrypt(encData, options, (err, result) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tSAMLUtils.error(err);\n\t\t\t\t}\n\n\t\t\t\tconst document = new xmldom.DOMParser().parseFromString(result, 'text/xml');\n\t\t\t\tif (!document) {\n\t\t\t\t\tthrow new Error('Failed to decrypt SAML assertion');\n\t\t\t\t}\n\n\t\t\t\tconst decryptedAssertions = document.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Assertion');\n\t\t\t\tif (decryptedAssertions.length) {\n\t\t\t\t\tassertion = decryptedAssertions[0];\n\t\t\t\t}\n\n\t\t\t\tnewXml = result;\n\t\t\t});\n\t\t}\n\n\t\tif (!assertion) {\n\t\t\tthrow new Error('Missing SAML assertion');\n\t\t}\n\n\t\treturn {\n\t\t\tassertion,\n\t\t\txml: newXml || xml,\n\t\t};\n\t}\n\n\tprivate verifySignatures(response: Element, assertionData: ISAMLAssertion, xml: string): void {\n\t\tif (!this.serviceProviderOptions.cert) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst signatureType = this.serviceProviderOptions.signatureValidationType;\n\n\t\tconst checkEither = signatureType === 'Either';\n\t\tconst checkResponse = signatureType === 'Response' || signatureType === 'All' || checkEither;\n\t\tconst checkAssertion = signatureType === 'Assertion' || signatureType === 'All' || checkEither;\n\t\tlet anyValidSignature = false;\n\n\t\tif (checkResponse) {\n\t\t\tSAMLUtils.log('Verify Document Signature');\n\t\t\tif (!this.validateResponseSignature(xml, this.serviceProviderOptions.cert, response)) {\n\t\t\t\tif (!checkEither) {\n\t\t\t\t\tSAMLUtils.log('Document Signature WRONG');\n\t\t\t\t\tthrow new Error('Invalid Signature');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanyValidSignature = true;\n\t\t\t}\n\t\t\tSAMLUtils.log('Document Signature OK');\n\t\t}\n\n\t\tif (checkAssertion) {\n\t\t\tSAMLUtils.log('Verify Assertion Signature');\n\t\t\tif (!this.validateAssertionSignature(assertionData.xml, this.serviceProviderOptions.cert, assertionData.assertion)) {\n\t\t\t\tif (!checkEither) {\n\t\t\t\t\tSAMLUtils.log('Assertion Signature WRONG');\n\t\t\t\t\tthrow new Error('Invalid Assertion signature');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanyValidSignature = true;\n\t\t\t}\n\t\t\tSAMLUtils.log('Assertion Signature OK');\n\t\t}\n\n\t\tif (checkEither && !anyValidSignature) {\n\t\t\tSAMLUtils.log('No Valid Signature');\n\t\t\tthrow new Error('No valid SAML Signature found');\n\t\t}\n\t}\n\n\tprivate validateResponseSignature(xml: string, cert: string, response: Element): boolean {\n\t\treturn this.validateSignatureChildren(xml, cert, response);\n\t}\n\n\tprivate validateAssertionSignature(xml: string, cert: string, assertion: XmlParent): boolean {\n\t\treturn this.validateSignatureChildren(xml, cert, assertion);\n\t}\n\n\tprivate validateSignatureChildren(xml: string, cert: string, parent: XmlParent): boolean {\n\t\tconst xpathSigQuery = \".//*[local-name(.)='Signature' and namespace-uri(.)='http://www.w3.org/2000/09/xmldsig#']\";\n\t\tconst signatures = xmlCrypto.xpath(parent, xpathSigQuery) as Array<Element>;\n\t\tlet signature = null;\n\n\t\tfor (const sign of signatures) {\n\t\t\tif (sign.parentNode !== parent) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Too many signatures\n\t\t\tif (signature) {\n\t\t\t\tSAMLUtils.log('Failed to validate SAML signature: Too Many Signatures');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tsignature = sign;\n\t\t}\n\n\t\tif (!signature) {\n\t\t\tSAMLUtils.log('Failed to validate SAML signature: Signature not found');\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.validateSignature(xml, cert, signature);\n\t}\n\n\tprivate validateSignature(xml: string, cert: string, signature: Element): any {\n\t\tconst sig = new xmlCrypto.SignedXml();\n\n\t\tsig.keyInfoProvider = {\n\t\t\tgetKeyInfo: () => '<X509Data></X509Data>',\n\t\t\tgetKey: () => Buffer.from(SAMLUtils.certToPEM(cert)),\n\t\t};\n\n\t\tsig.loadSignature(signature);\n\n\t\tconst result = sig.checkSignature(xml);\n\t\tif (!result && sig.validationErrors) {\n\t\t\tSAMLUtils.log(sig.validationErrors);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate getIssuer(assertion: XmlParent): any {\n\t\tconst issuers = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Issuer');\n\t\tif (issuers.length > 1) {\n\t\t\tthrow new Error('Too many Issuers');\n\t\t}\n\n\t\treturn issuers[0];\n\t}\n\n\tprivate getSubject(assertion: XmlParent): XmlParent {\n\t\tlet subject: XmlParent = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Subject')[0];\n\t\tconst encSubject = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'EncryptedID')[0];\n\n\t\tif (typeof encSubject !== 'undefined') {\n\t\t\tconst options = { key: this.serviceProviderOptions.privateKey };\n\t\t\txmlenc.decrypt(encSubject.getElementsByTagNameNS('*', 'EncryptedData')[0], options, (err, result) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tSAMLUtils.error(err);\n\t\t\t\t}\n\t\t\t\tsubject = new xmldom.DOMParser().parseFromString(result, 'text/xml');\n\t\t\t});\n\t\t}\n\n\t\treturn subject;\n\t}\n\n\tprivate validateSubjectConditions(subject: XmlParent): void {\n\t\tconst subjectConfirmation = subject.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'SubjectConfirmation')[0];\n\t\tif (subjectConfirmation) {\n\t\t\tconst subjectConfirmationData = subjectConfirmation.getElementsByTagNameNS(\n\t\t\t\t'urn:oasis:names:tc:SAML:2.0:assertion',\n\t\t\t\t'SubjectConfirmationData',\n\t\t\t)[0];\n\t\t\tif (subjectConfirmationData && !this.validateNotBeforeNotOnOrAfterAssertions(subjectConfirmationData)) {\n\t\t\t\tthrow new Error('NotBefore / NotOnOrAfter assertion failed');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate validateNotBeforeNotOnOrAfterAssertions(element: Element): boolean {\n\t\tconst sysnow = new Date();\n\t\tconst allowedclockdrift = this.serviceProviderOptions.allowedClockDrift || 0;\n\n\t\tconst now = new Date(sysnow.getTime() + allowedclockdrift);\n\n\t\tif (element.hasAttribute('NotBefore')) {\n\t\t\tconst notBefore: string | null = element.getAttribute('NotBefore');\n\n\t\t\tif (!notBefore) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst date = new Date(notBefore);\n\t\t\tif (now < date) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (element.hasAttribute('NotOnOrAfter')) {\n\t\t\tconst notOnOrAfter: string | null = element.getAttribute('NotOnOrAfter');\n\t\t\tif (!notOnOrAfter) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst date = new Date(notOnOrAfter);\n\n\t\t\tif (now >= date) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate validateAssertionConditions(assertion: XmlParent): void {\n\t\tconst conditions = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Conditions')[0];\n\t\tif (conditions && !this.validateNotBeforeNotOnOrAfterAssertions(conditions)) {\n\t\t\tthrow new Error('NotBefore / NotOnOrAfter assertion failed');\n\t\t}\n\t}\n\n\tprivate mapAttributes(attributeStatement: Element, profile: Record<string, any>): void {\n\t\tSAMLUtils.log(`Attribute Statement found in SAML response: ${attributeStatement}`);\n\t\tconst attributes = attributeStatement.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Attribute');\n\t\tSAMLUtils.log(`Attributes will be processed: ${attributes.length}`);\n\n\t\tif (attributes) {\n\t\t\tfor (let i = 0; i < attributes.length; i++) {\n\t\t\t\tconst values = attributes[i].getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AttributeValue');\n\t\t\t\tlet value;\n\t\t\t\tif (values.length === 1) {\n\t\t\t\t\tvalue = values[0].textContent;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tfor (let j = 0; j < values.length; j++) {\n\t\t\t\t\t\tvalue.push(values[j].textContent);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst key = attributes[i].getAttribute('Name');\n\t\t\t\tif (key) {\n\t\t\t\t\tSAMLUtils.log(`Attribute:  ${attributes[i]} has ${values.length} value(s).`);\n\t\t\t\t\tSAMLUtils.log(`Adding attribute from SAML response to profile: ${key} = ${value}`);\n\t\t\t\t\tprofile[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tSAMLUtils.log('No Attributes found in SAML attribute statement.');\n\t\t}\n\n\t\tif (!profile.mail && profile['urn:oid:0.9.2342.19200300.100.1.3']) {\n\t\t\t// See http://www.incommonfederation.org/attributesummary.html for definition of attribute OIDs\n\t\t\tprofile.mail = profile['urn:oid:0.9.2342.19200300.100.1.3'];\n\t\t}\n\n\t\tif (!profile.email && profile['urn:oid:1.2.840.113549.1.9.1']) {\n\t\t\tprofile.email = profile['urn:oid:1.2.840.113549.1.9.1'];\n\t\t}\n\n\t\tif (!profile.displayName && profile['urn:oid:2.16.840.1.113730.3.1.241']) {\n\t\t\tprofile.displayName = profile['urn:oid:2.16.840.1.113730.3.1.241'];\n\t\t}\n\n\t\tif (!profile.eppn && profile['urn:oid:1.3.6.1.4.1.5923.1.1.1.6']) {\n\t\t\tprofile.eppn = profile['urn:oid:1.3.6.1.4.1.5923.1.1.1.6'];\n\t\t}\n\n\t\tif (!profile.email && profile.mail) {\n\t\t\tprofile.email = profile.mail;\n\t\t}\n\n\t\tif (!profile.cn && profile['urn:oid:2.5.4.3']) {\n\t\t\tprofile.cn = profile['urn:oid:2.5.4.3'];\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"aeb032b7fbe701769b988208bb6d3fb8cd004616"}
