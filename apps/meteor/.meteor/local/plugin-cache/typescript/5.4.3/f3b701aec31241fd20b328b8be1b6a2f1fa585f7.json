{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/publications/settings/index.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/publications/settings/index.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/publications/settings/index.ts","inputSourceMap":{"version":3,"file":"server/publications/settings/index.ts","sourceRoot":"","sources":["server/publications/settings/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISetting, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Settings } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport type { WithId } from 'mongodb';\n\nimport { getSettingPermissionId } from '../../../app/authorization/lib';\nimport { hasPermissionAsync, hasAtLeastOnePermissionAsync } from '../../../app/authorization/server/functions/hasPermission';\nimport { SettingsEvents } from '../../../app/settings/server';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'public-settings/get'(\n\t\t\tupdatedSince?: Date,\n\t\t): Promise<ISetting[] | { update: ISetting[]; remove: WithId<RocketChatRecordDeleted<ISetting>>[] }>;\n\t\t'private-settings/get'(\n\t\t\tupdatedSince?: Date,\n\t\t): Promise<ISetting[] | { update: ISetting[]; remove: WithId<RocketChatRecordDeleted<ISetting>>[] }>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'public-settings/get'(updatedAt) {\n\t\tif (updatedAt instanceof Date) {\n\t\t\tconst records = await Settings.findNotHiddenPublicUpdatedAfter(updatedAt).toArray();\n\t\t\tSettingsEvents.emit('fetch-settings', records);\n\n\t\t\treturn {\n\t\t\t\tupdate: records,\n\t\t\t\tremove: await Settings.trashFindDeletedAfter(\n\t\t\t\t\tupdatedAt,\n\t\t\t\t\t{\n\t\t\t\t\t\thidden: {\n\t\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpublic: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tprojection: {\n\t\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\t\t_deletedAt: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t).toArray(),\n\t\t\t};\n\t\t}\n\n\t\tconst publicSettings = (await Settings.findNotHiddenPublic().toArray()) as ISetting[];\n\t\tSettingsEvents.emit('fetch-settings', publicSettings);\n\n\t\treturn publicSettings;\n\t},\n\tasync 'private-settings/get'(updatedAfter) {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst privilegedSetting = await hasAtLeastOnePermissionAsync(uid, ['view-privileged-setting', 'edit-privileged-setting']);\n\t\tconst manageSelectedSettings = privilegedSetting || (await hasPermissionAsync(uid, 'manage-selected-settings'));\n\n\t\tif (!manageSelectedSettings) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst bypass = async <T>(settings: T): Promise<T> => settings;\n\n\t\tconst applyFilter = <T extends any[], U>(fn: (args: T) => Promise<U>, args: T): Promise<U> => fn(args);\n\n\t\tconst getAuthorizedSettingsFiltered = async (settings: ISetting[]): Promise<ISetting[]> =>\n\t\t\t(\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tsettings.map(async (record) => {\n\t\t\t\t\t\tif (await hasPermissionAsync(uid, getSettingPermissionId(record._id))) {\n\t\t\t\t\t\t\treturn record;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t).filter(Boolean) as ISetting[];\n\n\t\tconst getAuthorizedSettings = async (updatedAfter: Date | undefined, privilegedSetting: boolean): Promise<ISetting[]> =>\n\t\t\tapplyFilter(\n\t\t\t\tprivilegedSetting ? bypass : getAuthorizedSettingsFiltered,\n\t\t\t\tawait Settings.findNotHidden(updatedAfter && { updatedAfter }).toArray(),\n\t\t\t);\n\n\t\tif (!(updatedAfter instanceof Date)) {\n\t\t\t// this does not only imply an unfiltered setting range, it also identifies the caller's context:\n\t\t\t// If called *with* filter (see below), the user wants a collection as a result.\n\t\t\t// in this case, it shall only be a plain array\n\t\t\treturn getAuthorizedSettings(updatedAfter, privilegedSetting);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: await getAuthorizedSettings(updatedAfter, privilegedSetting),\n\t\t\tremove: await Settings.trashFindDeletedAfter(\n\t\t\t\tupdatedAfter,\n\t\t\t\t{\n\t\t\t\t\thidden: {\n\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\t_deletedAt: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t).toArray(),\n\t\t};\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/publications/settings/index.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/publications/settings/index.ts","inputSourceMap":{"version":3,"file":"server/publications/settings/index.ts","sourceRoot":"","sources":["server/publications/settings/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISetting, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Settings } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport type { WithId } from 'mongodb';\n\nimport { getSettingPermissionId } from '../../../app/authorization/lib';\nimport { hasPermissionAsync, hasAtLeastOnePermissionAsync } from '../../../app/authorization/server/functions/hasPermission';\nimport { SettingsEvents } from '../../../app/settings/server';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'public-settings/get'(\n\t\t\tupdatedSince?: Date,\n\t\t): Promise<ISetting[] | { update: ISetting[]; remove: WithId<RocketChatRecordDeleted<ISetting>>[] }>;\n\t\t'private-settings/get'(\n\t\t\tupdatedSince?: Date,\n\t\t): Promise<ISetting[] | { update: ISetting[]; remove: WithId<RocketChatRecordDeleted<ISetting>>[] }>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'public-settings/get'(updatedAt) {\n\t\tif (updatedAt instanceof Date) {\n\t\t\tconst records = await Settings.findNotHiddenPublicUpdatedAfter(updatedAt).toArray();\n\t\t\tSettingsEvents.emit('fetch-settings', records);\n\n\t\t\treturn {\n\t\t\t\tupdate: records,\n\t\t\t\tremove: await Settings.trashFindDeletedAfter(\n\t\t\t\t\tupdatedAt,\n\t\t\t\t\t{\n\t\t\t\t\t\thidden: {\n\t\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpublic: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tprojection: {\n\t\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\t\t_deletedAt: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t).toArray(),\n\t\t\t};\n\t\t}\n\n\t\tconst publicSettings = (await Settings.findNotHiddenPublic().toArray()) as ISetting[];\n\t\tSettingsEvents.emit('fetch-settings', publicSettings);\n\n\t\treturn publicSettings;\n\t},\n\tasync 'private-settings/get'(updatedAfter) {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst privilegedSetting = await hasAtLeastOnePermissionAsync(uid, ['view-privileged-setting', 'edit-privileged-setting']);\n\t\tconst manageSelectedSettings = privilegedSetting || (await hasPermissionAsync(uid, 'manage-selected-settings'));\n\n\t\tif (!manageSelectedSettings) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst bypass = async <T>(settings: T): Promise<T> => settings;\n\n\t\tconst applyFilter = <T extends any[], U>(fn: (args: T) => Promise<U>, args: T): Promise<U> => fn(args);\n\n\t\tconst getAuthorizedSettingsFiltered = async (settings: ISetting[]): Promise<ISetting[]> =>\n\t\t\t(\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tsettings.map(async (record) => {\n\t\t\t\t\t\tif (await hasPermissionAsync(uid, getSettingPermissionId(record._id))) {\n\t\t\t\t\t\t\treturn record;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t).filter(Boolean) as ISetting[];\n\n\t\tconst getAuthorizedSettings = async (updatedAfter: Date | undefined, privilegedSetting: boolean): Promise<ISetting[]> =>\n\t\t\tapplyFilter(\n\t\t\t\tprivilegedSetting ? bypass : getAuthorizedSettingsFiltered,\n\t\t\t\tawait Settings.findNotHidden(updatedAfter && { updatedAfter }).toArray(),\n\t\t\t);\n\n\t\tif (!(updatedAfter instanceof Date)) {\n\t\t\t// this does not only imply an unfiltered setting range, it also identifies the caller's context:\n\t\t\t// If called *with* filter (see below), the user wants a collection as a result.\n\t\t\t// in this case, it shall only be a plain array\n\t\t\treturn getAuthorizedSettings(updatedAfter, privilegedSetting);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: await getAuthorizedSettings(updatedAfter, privilegedSetting),\n\t\t\tremove: await Settings.trashFindDeletedAfter(\n\t\t\t\tupdatedAfter,\n\t\t\t\t{\n\t\t\t\t\thidden: {\n\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\t_deletedAt: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t).toArray(),\n\t\t};\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Settings;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let getSettingPermissionId;\n    module.link(\"../../../app/authorization/lib\", {\n      getSettingPermissionId(v) {\n        getSettingPermissionId = v;\n      }\n    }, 2);\n    let hasPermissionAsync, hasAtLeastOnePermissionAsync;\n    module.link(\"../../../app/authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      },\n      hasAtLeastOnePermissionAsync(v) {\n        hasAtLeastOnePermissionAsync = v;\n      }\n    }, 3);\n    let SettingsEvents;\n    module.link(\"../../../app/settings/server\", {\n      SettingsEvents(v) {\n        SettingsEvents = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async 'public-settings/get'(updatedAt) {\n        if (updatedAt instanceof Date) {\n          const records = await Settings.findNotHiddenPublicUpdatedAfter(updatedAt).toArray();\n          SettingsEvents.emit('fetch-settings', records);\n          return {\n            update: records,\n            remove: await Settings.trashFindDeletedAfter(updatedAt, {\n              hidden: {\n                $ne: true\n              },\n              public: true\n            }, {\n              projection: {\n                _id: 1,\n                _deletedAt: 1\n              }\n            }).toArray()\n          };\n        }\n        const publicSettings = await Settings.findNotHiddenPublic().toArray();\n        SettingsEvents.emit('fetch-settings', publicSettings);\n        return publicSettings;\n      },\n      async 'private-settings/get'(updatedAfter) {\n        const uid = Meteor.userId();\n        if (!uid) {\n          return [];\n        }\n        const privilegedSetting = await hasAtLeastOnePermissionAsync(uid, ['view-privileged-setting', 'edit-privileged-setting']);\n        const manageSelectedSettings = privilegedSetting || (await hasPermissionAsync(uid, 'manage-selected-settings'));\n        if (!manageSelectedSettings) {\n          return [];\n        }\n        const bypass = async settings => settings;\n        const applyFilter = (fn, args) => fn(args);\n        const getAuthorizedSettingsFiltered = async settings => (await Promise.all(settings.map(async record => {\n          if (await hasPermissionAsync(uid, getSettingPermissionId(record._id))) {\n            return record;\n          }\n        }))).filter(Boolean);\n        const getAuthorizedSettings = async (updatedAfter, privilegedSetting) => applyFilter(privilegedSetting ? bypass : getAuthorizedSettingsFiltered, await Settings.findNotHidden(updatedAfter && {\n          updatedAfter\n        }).toArray());\n        if (!(updatedAfter instanceof Date)) {\n          // this does not only imply an unfiltered setting range, it also identifies the caller's context:\n          // If called *with* filter (see below), the user wants a collection as a result.\n          // in this case, it shall only be a plain array\n          return getAuthorizedSettings(updatedAfter, privilegedSetting);\n        }\n        return {\n          update: await getAuthorizedSettings(updatedAfter, privilegedSetting),\n          remove: await Settings.trashFindDeletedAfter(updatedAfter, {\n            hidden: {\n              $ne: true\n            }\n          }, {\n            projection: {\n              _id: 1,\n              _deletedAt: 1\n            }\n          }).toArray()\n        };\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Settings","module","link","v","Meteor","getSettingPermissionId","hasPermissionAsync","hasAtLeastOnePermissionAsync","SettingsEvents","__reifyWaitForDeps__","methods","public-settings/get","updatedAt","Date","records","findNotHiddenPublicUpdatedAfter","toArray","emit","update","remove","trashFindDeletedAfter","hidden","$ne","public","projection","_id","_deletedAt","publicSettings","findNotHiddenPublic","private-settings/get","updatedAfter","uid","userId","privilegedSetting","manageSelectedSettings","bypass","settings","applyFilter","fn","args","getAuthorizedSettingsFiltered","Promise","all","map","record","filter","Boolean","getAuthorizedSettings","findNotHidden","__reify_async_result__","_reifyError","self","async"],"sources":["server/publications/settings/index.ts"],"sourcesContent":["import type { ISetting, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Settings } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport type { WithId } from 'mongodb';\n\nimport { getSettingPermissionId } from '../../../app/authorization/lib';\nimport { hasPermissionAsync, hasAtLeastOnePermissionAsync } from '../../../app/authorization/server/functions/hasPermission';\nimport { SettingsEvents } from '../../../app/settings/server';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'public-settings/get'(\n\t\t\tupdatedSince?: Date,\n\t\t): Promise<ISetting[] | { update: ISetting[]; remove: WithId<RocketChatRecordDeleted<ISetting>>[] }>;\n\t\t'private-settings/get'(\n\t\t\tupdatedSince?: Date,\n\t\t): Promise<ISetting[] | { update: ISetting[]; remove: WithId<RocketChatRecordDeleted<ISetting>>[] }>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'public-settings/get'(updatedAt) {\n\t\tif (updatedAt instanceof Date) {\n\t\t\tconst records = await Settings.findNotHiddenPublicUpdatedAfter(updatedAt).toArray();\n\t\t\tSettingsEvents.emit('fetch-settings', records);\n\n\t\t\treturn {\n\t\t\t\tupdate: records,\n\t\t\t\tremove: await Settings.trashFindDeletedAfter(\n\t\t\t\t\tupdatedAt,\n\t\t\t\t\t{\n\t\t\t\t\t\thidden: {\n\t\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpublic: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tprojection: {\n\t\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\t\t_deletedAt: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t).toArray(),\n\t\t\t};\n\t\t}\n\n\t\tconst publicSettings = (await Settings.findNotHiddenPublic().toArray()) as ISetting[];\n\t\tSettingsEvents.emit('fetch-settings', publicSettings);\n\n\t\treturn publicSettings;\n\t},\n\tasync 'private-settings/get'(updatedAfter) {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst privilegedSetting = await hasAtLeastOnePermissionAsync(uid, ['view-privileged-setting', 'edit-privileged-setting']);\n\t\tconst manageSelectedSettings = privilegedSetting || (await hasPermissionAsync(uid, 'manage-selected-settings'));\n\n\t\tif (!manageSelectedSettings) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst bypass = async <T>(settings: T): Promise<T> => settings;\n\n\t\tconst applyFilter = <T extends any[], U>(fn: (args: T) => Promise<U>, args: T): Promise<U> => fn(args);\n\n\t\tconst getAuthorizedSettingsFiltered = async (settings: ISetting[]): Promise<ISetting[]> =>\n\t\t\t(\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tsettings.map(async (record) => {\n\t\t\t\t\t\tif (await hasPermissionAsync(uid, getSettingPermissionId(record._id))) {\n\t\t\t\t\t\t\treturn record;\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t).filter(Boolean) as ISetting[];\n\n\t\tconst getAuthorizedSettings = async (updatedAfter: Date | undefined, privilegedSetting: boolean): Promise<ISetting[]> =>\n\t\t\tapplyFilter(\n\t\t\t\tprivilegedSetting ? bypass : getAuthorizedSettingsFiltered,\n\t\t\t\tawait Settings.findNotHidden(updatedAfter && { updatedAfter }).toArray(),\n\t\t\t);\n\n\t\tif (!(updatedAfter instanceof Date)) {\n\t\t\t// this does not only imply an unfiltered setting range, it also identifies the caller's context:\n\t\t\t// If called *with* filter (see below), the user wants a collection as a result.\n\t\t\t// in this case, it shall only be a plain array\n\t\t\treturn getAuthorizedSettings(updatedAfter, privilegedSetting);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: await getAuthorizedSettings(updatedAfter, privilegedSetting),\n\t\t\tremove: await Settings.trashFindDeletedAfter(\n\t\t\t\tupdatedAfter,\n\t\t\t\t{\n\t\t\t\t\thidden: {\n\t\t\t\t\t\t$ne: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\t_deletedAt: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t).toArray(),\n\t\t};\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f3b701aec31241fd20b328b8be1b6a2f1fa585f7"}
