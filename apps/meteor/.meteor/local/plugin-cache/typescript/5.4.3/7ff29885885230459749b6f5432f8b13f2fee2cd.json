{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/smarsh-connector/server/functions/generateEml.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/smarsh-connector/server/functions/generateEml.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/smarsh-connector/server/functions/generateEml.ts","inputSourceMap":{"version":3,"file":"app/smarsh-connector/server/functions/generateEml.ts","sourceRoot":"","sources":["app/smarsh-connector/server/functions/generateEml.ts"],"names":[],"mappings":"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","sourcesContent":["import { Messages, SmarshHistory, Users, Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport moment from 'moment';\nimport 'moment-timezone';\n\nimport { i18n } from '../../../../server/lib/i18n';\nimport { settings } from '../../../settings/server';\nimport { MessageTypes } from '../../../ui-utils/server';\nimport { sendEmail } from './sendEmail';\n\nconst start =\n\t'<table style=\"width: 100%; border: 1px solid; border-collapse: collapse; table-layout: fixed; margin-top: 10px; font-size: 12px; word-break: break-word;\"><tbody>';\nconst end = '</tbody></table>';\nconst opentr = '<tr style=\"border: 1px solid;\">';\nconst closetr = '</tr>';\nconst open20td = '<td style=\"border: 1px solid; text-align: center; width: 20%;\">';\nconst open60td = '<td style=\"border: 1px solid; text-align: left; width: 60%; padding: 0 5px;\">';\nconst closetd = '</td>';\n\nfunction _getLink(attachment: { title_link: string }): string {\n\tconst url = attachment.title_link.replace(/ /g, '%20');\n\n\tif (url.match(/^(https?:)?\\/\\//i)) {\n\t\treturn url;\n\t}\n\treturn Meteor.absoluteUrl().replace(/\\/$/, '') + __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + url;\n}\n\nexport const generateEml = async (): Promise<void> => {\n\tsetImmediate(async () => {\n\t\tconst smarshMissingEmail = settings.get('Smarsh_MissingEmail_Email');\n\t\tconst timeZone = settings.get<string>('Smarsh_Timezone');\n\n\t\t// TODO: revisit with more time => This appears to be a super expensive operation, going through all rooms\n\t\tfor await (const room of Rooms.find()) {\n\t\t\tconst smarshHistory = await SmarshHistory.findOne({ _id: room._id });\n\t\t\tconst query: Record<string, any> = { rid: room._id };\n\n\t\t\tif (smarshHistory) {\n\t\t\t\tquery.ts = { $gt: smarshHistory.lastRan };\n\t\t\t}\n\n\t\t\tconst date = new Date();\n\t\t\tconst rows: string[] = [];\n\t\t\tconst data: {\n\t\t\t\tusers: string[];\n\t\t\t\tmsgs: number;\n\t\t\t\tfiles: string[];\n\t\t\t\ttime: number;\n\t\t\t\troom: string;\n\t\t\t} = {\n\t\t\t\tusers: [],\n\t\t\t\tmsgs: 0,\n\t\t\t\tfiles: [],\n\t\t\t\ttime: smarshHistory ? moment(date).diff(moment(smarshHistory.lastRan), 'minutes') : moment(date).diff(moment(room.ts), 'minutes'),\n\t\t\t\troom: room.name ? `#${room.name}` : `Direct Message Between: ${room?.usernames?.join(' & ')}`,\n\t\t\t};\n\n\t\t\tconst cursor = Messages.find(query);\n\n\t\t\tfor await (const message of cursor) {\n\t\t\t\trows.push(opentr);\n\n\t\t\t\t// The timestamp\n\t\t\t\trows.push(open20td);\n\t\t\t\trows.push(moment(message.ts).tz(timeZone).format('YYYY-MM-DD HH-mm-ss z'));\n\t\t\t\trows.push(closetd);\n\n\t\t\t\t// The sender\n\t\t\t\trows.push(open20td);\n\t\t\t\tconst sender = await Users.findOne({ _id: message.u._id });\n\t\t\t\tif (!sender) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (data.users.indexOf(sender?._id) === -1) {\n\t\t\t\t\tdata.users.push(sender._id);\n\t\t\t\t}\n\n\t\t\t\t// Get the user's email, can be nothing if it is an unconfigured bot account (like rocket.cat)\n\t\t\t\tif (sender.emails?.[0]?.address) {\n\t\t\t\t\trows.push(`${sender.name} &lt;${sender.emails[0].address}&gt;`);\n\t\t\t\t} else {\n\t\t\t\t\trows.push(`${sender.name} &lt;${smarshMissingEmail}&gt;`);\n\t\t\t\t}\n\t\t\t\trows.push(closetd);\n\n\t\t\t\t// The message\n\t\t\t\trows.push(open60td);\n\t\t\t\tdata.msgs++;\n\t\t\t\tif (message.t) {\n\t\t\t\t\tconst messageType = MessageTypes.getType(message);\n\t\t\t\t\tif (messageType) {\n\t\t\t\t\t\trows.push(\n\t\t\t\t\t\t\ti18n.t(messageType.message, {\n\t\t\t\t\t\t\t\tlng: 'en',\n\t\t\t\t\t\t\t\treplace: messageType.data ? messageType.data(message) : {},\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trows.push(`${message.msg} (${message.t})`);\n\t\t\t\t\t}\n\t\t\t\t} else if (message.file) {\n\t\t\t\t\tdata.files.push(message.file._id);\n\t\t\t\t\trows.push(`${message?.attachments?.[0].title} (${_getLink({ title_link: message?.attachments?.[0].title_link || '' })})})`);\n\t\t\t\t} else if (message.attachments) {\n\t\t\t\t\tconst attaches: string[] = [];\n\t\t\t\t\tmessage.attachments.forEach((a) => {\n\t\t\t\t\t\tif ('image_url' in a && a.image_url !== undefined) {\n\t\t\t\t\t\t\tattaches.push(a.image_url);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Verify other type of attachments which need to be handled that aren't file uploads and image urls\n\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t// \tconsole.log(a);\n\t\t\t\t\t\t// }\n\t\t\t\t\t});\n\n\t\t\t\t\trows.push(`${message.msg} (${attaches.join(', ')})`);\n\t\t\t\t} else {\n\t\t\t\t\trows.push(message.msg);\n\t\t\t\t}\n\t\t\t\trows.push(closetd);\n\n\t\t\t\trows.push(closetr);\n\t\t\t}\n\n\t\t\tif (rows.length !== 0) {\n\t\t\t\tconst result = start + rows.join('') + end;\n\n\t\t\t\tawait SmarshHistory.updateOne(\n\t\t\t\t\t{ _id: room._id },\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: room._id,\n\t\t\t\t\t\tlastRan: date,\n\t\t\t\t\t\tlastResult: result,\n\t\t\t\t\t},\n\t\t\t\t\t{ upsert: true },\n\t\t\t\t);\n\n\t\t\t\tawait sendEmail({\n\t\t\t\t\tbody: result,\n\t\t\t\t\tsubject: `Rocket.Chat, ${data.users.length} Users, ${data.msgs} Messages, ${data.files.length} Files, ${data.time} Minutes, in ${data.room}`,\n\t\t\t\t\tfiles: data.files,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/smarsh-connector/server/functions/generateEml.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/smarsh-connector/server/functions/generateEml.ts","inputSourceMap":{"version":3,"file":"app/smarsh-connector/server/functions/generateEml.ts","sourceRoot":"","sources":["app/smarsh-connector/server/functions/generateEml.ts"],"names":[],"mappings":"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","sourcesContent":["import { Messages, SmarshHistory, Users, Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport moment from 'moment';\nimport 'moment-timezone';\n\nimport { i18n } from '../../../../server/lib/i18n';\nimport { settings } from '../../../settings/server';\nimport { MessageTypes } from '../../../ui-utils/server';\nimport { sendEmail } from './sendEmail';\n\nconst start =\n\t'<table style=\"width: 100%; border: 1px solid; border-collapse: collapse; table-layout: fixed; margin-top: 10px; font-size: 12px; word-break: break-word;\"><tbody>';\nconst end = '</tbody></table>';\nconst opentr = '<tr style=\"border: 1px solid;\">';\nconst closetr = '</tr>';\nconst open20td = '<td style=\"border: 1px solid; text-align: center; width: 20%;\">';\nconst open60td = '<td style=\"border: 1px solid; text-align: left; width: 60%; padding: 0 5px;\">';\nconst closetd = '</td>';\n\nfunction _getLink(attachment: { title_link: string }): string {\n\tconst url = attachment.title_link.replace(/ /g, '%20');\n\n\tif (url.match(/^(https?:)?\\/\\//i)) {\n\t\treturn url;\n\t}\n\treturn Meteor.absoluteUrl().replace(/\\/$/, '') + __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + url;\n}\n\nexport const generateEml = async (): Promise<void> => {\n\tsetImmediate(async () => {\n\t\tconst smarshMissingEmail = settings.get('Smarsh_MissingEmail_Email');\n\t\tconst timeZone = settings.get<string>('Smarsh_Timezone');\n\n\t\t// TODO: revisit with more time => This appears to be a super expensive operation, going through all rooms\n\t\tfor await (const room of Rooms.find()) {\n\t\t\tconst smarshHistory = await SmarshHistory.findOne({ _id: room._id });\n\t\t\tconst query: Record<string, any> = { rid: room._id };\n\n\t\t\tif (smarshHistory) {\n\t\t\t\tquery.ts = { $gt: smarshHistory.lastRan };\n\t\t\t}\n\n\t\t\tconst date = new Date();\n\t\t\tconst rows: string[] = [];\n\t\t\tconst data: {\n\t\t\t\tusers: string[];\n\t\t\t\tmsgs: number;\n\t\t\t\tfiles: string[];\n\t\t\t\ttime: number;\n\t\t\t\troom: string;\n\t\t\t} = {\n\t\t\t\tusers: [],\n\t\t\t\tmsgs: 0,\n\t\t\t\tfiles: [],\n\t\t\t\ttime: smarshHistory ? moment(date).diff(moment(smarshHistory.lastRan), 'minutes') : moment(date).diff(moment(room.ts), 'minutes'),\n\t\t\t\troom: room.name ? `#${room.name}` : `Direct Message Between: ${room?.usernames?.join(' & ')}`,\n\t\t\t};\n\n\t\t\tconst cursor = Messages.find(query);\n\n\t\t\tfor await (const message of cursor) {\n\t\t\t\trows.push(opentr);\n\n\t\t\t\t// The timestamp\n\t\t\t\trows.push(open20td);\n\t\t\t\trows.push(moment(message.ts).tz(timeZone).format('YYYY-MM-DD HH-mm-ss z'));\n\t\t\t\trows.push(closetd);\n\n\t\t\t\t// The sender\n\t\t\t\trows.push(open20td);\n\t\t\t\tconst sender = await Users.findOne({ _id: message.u._id });\n\t\t\t\tif (!sender) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (data.users.indexOf(sender?._id) === -1) {\n\t\t\t\t\tdata.users.push(sender._id);\n\t\t\t\t}\n\n\t\t\t\t// Get the user's email, can be nothing if it is an unconfigured bot account (like rocket.cat)\n\t\t\t\tif (sender.emails?.[0]?.address) {\n\t\t\t\t\trows.push(`${sender.name} &lt;${sender.emails[0].address}&gt;`);\n\t\t\t\t} else {\n\t\t\t\t\trows.push(`${sender.name} &lt;${smarshMissingEmail}&gt;`);\n\t\t\t\t}\n\t\t\t\trows.push(closetd);\n\n\t\t\t\t// The message\n\t\t\t\trows.push(open60td);\n\t\t\t\tdata.msgs++;\n\t\t\t\tif (message.t) {\n\t\t\t\t\tconst messageType = MessageTypes.getType(message);\n\t\t\t\t\tif (messageType) {\n\t\t\t\t\t\trows.push(\n\t\t\t\t\t\t\ti18n.t(messageType.message, {\n\t\t\t\t\t\t\t\tlng: 'en',\n\t\t\t\t\t\t\t\treplace: messageType.data ? messageType.data(message) : {},\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trows.push(`${message.msg} (${message.t})`);\n\t\t\t\t\t}\n\t\t\t\t} else if (message.file) {\n\t\t\t\t\tdata.files.push(message.file._id);\n\t\t\t\t\trows.push(`${message?.attachments?.[0].title} (${_getLink({ title_link: message?.attachments?.[0].title_link || '' })})})`);\n\t\t\t\t} else if (message.attachments) {\n\t\t\t\t\tconst attaches: string[] = [];\n\t\t\t\t\tmessage.attachments.forEach((a) => {\n\t\t\t\t\t\tif ('image_url' in a && a.image_url !== undefined) {\n\t\t\t\t\t\t\tattaches.push(a.image_url);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Verify other type of attachments which need to be handled that aren't file uploads and image urls\n\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t// \tconsole.log(a);\n\t\t\t\t\t\t// }\n\t\t\t\t\t});\n\n\t\t\t\t\trows.push(`${message.msg} (${attaches.join(', ')})`);\n\t\t\t\t} else {\n\t\t\t\t\trows.push(message.msg);\n\t\t\t\t}\n\t\t\t\trows.push(closetd);\n\n\t\t\t\trows.push(closetr);\n\t\t\t}\n\n\t\t\tif (rows.length !== 0) {\n\t\t\t\tconst result = start + rows.join('') + end;\n\n\t\t\t\tawait SmarshHistory.updateOne(\n\t\t\t\t\t{ _id: room._id },\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: room._id,\n\t\t\t\t\t\tlastRan: date,\n\t\t\t\t\t\tlastResult: result,\n\t\t\t\t\t},\n\t\t\t\t\t{ upsert: true },\n\t\t\t\t);\n\n\t\t\t\tawait sendEmail({\n\t\t\t\t\tbody: result,\n\t\t\t\t\tsubject: `Rocket.Chat, ${data.users.length} Users, ${data.msgs} Messages, ${data.files.length} Files, ${data.time} Minutes, in ${data.room}`,\n\t\t\t\t\tfiles: data.files,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      generateEml: () => generateEml\n    });\n    let Messages, SmarshHistory, Users, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      SmarshHistory(v) {\n        SmarshHistory = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let moment;\n    module.link(\"moment\", {\n      default(v) {\n        moment = v;\n      }\n    }, 2);\n    module.link(\"moment-timezone\");\n    let i18n;\n    module.link(\"../../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    let MessageTypes;\n    module.link(\"../../../ui-utils/server\", {\n      MessageTypes(v) {\n        MessageTypes = v;\n      }\n    }, 5);\n    let sendEmail;\n    module.link(\"./sendEmail\", {\n      sendEmail(v) {\n        sendEmail = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const start = '<table style=\"width: 100%; border: 1px solid; border-collapse: collapse; table-layout: fixed; margin-top: 10px; font-size: 12px; word-break: break-word;\"><tbody>';\n    const end = '</tbody></table>';\n    const opentr = '<tr style=\"border: 1px solid;\">';\n    const closetr = '</tr>';\n    const open20td = '<td style=\"border: 1px solid; text-align: center; width: 20%;\">';\n    const open60td = '<td style=\"border: 1px solid; text-align: left; width: 60%; padding: 0 5px;\">';\n    const closetd = '</td>';\n    function _getLink(attachment) {\n      const url = attachment.title_link.replace(/ /g, '%20');\n      if (url.match(/^(https?:)?\\/\\//i)) {\n        return url;\n      }\n      return Meteor.absoluteUrl().replace(/\\/$/, '') + __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + url;\n    }\n    const generateEml = async () => {\n      setImmediate(async () => {\n        const smarshMissingEmail = settings.get('Smarsh_MissingEmail_Email');\n        const timeZone = settings.get('Smarsh_Timezone');\n        // TODO: revisit with more time => This appears to be a super expensive operation, going through all rooms\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(Rooms.find()), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const room = _step.value;\n            {\n              var _room$usernames;\n              const smarshHistory = await SmarshHistory.findOne({\n                _id: room._id\n              });\n              const query = {\n                rid: room._id\n              };\n              if (smarshHistory) {\n                query.ts = {\n                  $gt: smarshHistory.lastRan\n                };\n              }\n              const date = new Date();\n              const rows = [];\n              const data = {\n                users: [],\n                msgs: 0,\n                files: [],\n                time: smarshHistory ? moment(date).diff(moment(smarshHistory.lastRan), 'minutes') : moment(date).diff(moment(room.ts), 'minutes'),\n                room: room.name ? \"#\".concat(room.name) : \"Direct Message Between: \".concat(room === null || room === void 0 ? void 0 : (_room$usernames = room.usernames) === null || _room$usernames === void 0 ? void 0 : _room$usernames.join(' & '))\n              };\n              const cursor = Messages.find(query);\n              var _iteratorAbruptCompletion2 = false;\n              var _didIteratorError2 = false;\n              var _iteratorError2;\n              try {\n                for (var _iterator2 = _asyncIterator(cursor), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n                  const message = _step2.value;\n                  {\n                    var _sender$emails, _sender$emails$;\n                    rows.push(opentr);\n                    // The timestamp\n                    rows.push(open20td);\n                    rows.push(moment(message.ts).tz(timeZone).format('YYYY-MM-DD HH-mm-ss z'));\n                    rows.push(closetd);\n                    // The sender\n                    rows.push(open20td);\n                    const sender = await Users.findOne({\n                      _id: message.u._id\n                    });\n                    if (!sender) {\n                      return;\n                    }\n                    if (data.users.indexOf(sender === null || sender === void 0 ? void 0 : sender._id) === -1) {\n                      data.users.push(sender._id);\n                    }\n                    // Get the user's email, can be nothing if it is an unconfigured bot account (like rocket.cat)\n                    if ((_sender$emails = sender.emails) !== null && _sender$emails !== void 0 && (_sender$emails$ = _sender$emails[0]) !== null && _sender$emails$ !== void 0 && _sender$emails$.address) {\n                      rows.push(\"\".concat(sender.name, \" &lt;\").concat(sender.emails[0].address, \"&gt;\"));\n                    } else {\n                      rows.push(\"\".concat(sender.name, \" &lt;\").concat(smarshMissingEmail, \"&gt;\"));\n                    }\n                    rows.push(closetd);\n                    // The message\n                    rows.push(open60td);\n                    data.msgs++;\n                    if (message.t) {\n                      const messageType = MessageTypes.getType(message);\n                      if (messageType) {\n                        rows.push(i18n.t(messageType.message, {\n                          lng: 'en',\n                          replace: messageType.data ? messageType.data(message) : {}\n                        }));\n                      } else {\n                        rows.push(\"\".concat(message.msg, \" (\").concat(message.t, \")\"));\n                      }\n                    } else if (message.file) {\n                      var _message$attachments, _message$attachments2;\n                      data.files.push(message.file._id);\n                      rows.push(\"\".concat(message === null || message === void 0 ? void 0 : (_message$attachments = message.attachments) === null || _message$attachments === void 0 ? void 0 : _message$attachments[0].title, \" (\").concat(_getLink({\n                        title_link: (message === null || message === void 0 ? void 0 : (_message$attachments2 = message.attachments) === null || _message$attachments2 === void 0 ? void 0 : _message$attachments2[0].title_link) || ''\n                      }), \")})\"));\n                    } else if (message.attachments) {\n                      const attaches = [];\n                      message.attachments.forEach(a => {\n                        if ('image_url' in a && a.image_url !== undefined) {\n                          attaches.push(a.image_url);\n                        }\n                        // TODO: Verify other type of attachments which need to be handled that aren't file uploads and image urls\n                        // } else {\n                        // \tconsole.log(a);\n                        // }\n                      });\n                      rows.push(\"\".concat(message.msg, \" (\").concat(attaches.join(', '), \")\"));\n                    } else {\n                      rows.push(message.msg);\n                    }\n                    rows.push(closetd);\n                    rows.push(closetr);\n                  }\n                }\n              } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n              } finally {\n                try {\n                  if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n                    await _iterator2.return();\n                  }\n                } finally {\n                  if (_didIteratorError2) {\n                    throw _iteratorError2;\n                  }\n                }\n              }\n              if (rows.length !== 0) {\n                const result = start + rows.join('') + end;\n                await SmarshHistory.updateOne({\n                  _id: room._id\n                }, {\n                  _id: room._id,\n                  lastRan: date,\n                  lastResult: result\n                }, {\n                  upsert: true\n                });\n                await sendEmail({\n                  body: result,\n                  subject: \"Rocket.Chat, \".concat(data.users.length, \" Users, \").concat(data.msgs, \" Messages, \").concat(data.files.length, \" Files, \").concat(data.time, \" Minutes, in \").concat(data.room),\n                  files: data.files\n                });\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","generateEml","Messages","SmarshHistory","Users","Rooms","Meteor","moment","i18n","settings","MessageTypes","sendEmail","__reifyWaitForDeps__","start","end","opentr","closetr","open20td","open60td","closetd","_getLink","attachment","url","title_link","replace","match","absoluteUrl","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","setImmediate","smarshMissingEmail","get","timeZone","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","find","_step","next","done","room","value","_room$usernames","smarshHistory","findOne","_id","query","rid","ts","$gt","lastRan","date","Date","rows","data","users","msgs","files","time","diff","name","concat","usernames","join","cursor","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","message","_sender$emails","_sender$emails$","push","tz","format","sender","u","indexOf","emails","address","t","messageType","getType","lng","msg","file","_message$attachments","_message$attachments2","attachments","title","attaches","forEach","a","image_url","undefined","err","return","length","result","updateOne","lastResult","upsert","body","subject","__reify_async_result__","_reifyError","self","async"],"sources":["app/smarsh-connector/server/functions/generateEml.ts"],"sourcesContent":["import { Messages, SmarshHistory, Users, Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport moment from 'moment';\nimport 'moment-timezone';\n\nimport { i18n } from '../../../../server/lib/i18n';\nimport { settings } from '../../../settings/server';\nimport { MessageTypes } from '../../../ui-utils/server';\nimport { sendEmail } from './sendEmail';\n\nconst start =\n\t'<table style=\"width: 100%; border: 1px solid; border-collapse: collapse; table-layout: fixed; margin-top: 10px; font-size: 12px; word-break: break-word;\"><tbody>';\nconst end = '</tbody></table>';\nconst opentr = '<tr style=\"border: 1px solid;\">';\nconst closetr = '</tr>';\nconst open20td = '<td style=\"border: 1px solid; text-align: center; width: 20%;\">';\nconst open60td = '<td style=\"border: 1px solid; text-align: left; width: 60%; padding: 0 5px;\">';\nconst closetd = '</td>';\n\nfunction _getLink(attachment: { title_link: string }): string {\n\tconst url = attachment.title_link.replace(/ /g, '%20');\n\n\tif (url.match(/^(https?:)?\\/\\//i)) {\n\t\treturn url;\n\t}\n\treturn Meteor.absoluteUrl().replace(/\\/$/, '') + __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + url;\n}\n\nexport const generateEml = async (): Promise<void> => {\n\tsetImmediate(async () => {\n\t\tconst smarshMissingEmail = settings.get('Smarsh_MissingEmail_Email');\n\t\tconst timeZone = settings.get<string>('Smarsh_Timezone');\n\n\t\t// TODO: revisit with more time => This appears to be a super expensive operation, going through all rooms\n\t\tfor await (const room of Rooms.find()) {\n\t\t\tconst smarshHistory = await SmarshHistory.findOne({ _id: room._id });\n\t\t\tconst query: Record<string, any> = { rid: room._id };\n\n\t\t\tif (smarshHistory) {\n\t\t\t\tquery.ts = { $gt: smarshHistory.lastRan };\n\t\t\t}\n\n\t\t\tconst date = new Date();\n\t\t\tconst rows: string[] = [];\n\t\t\tconst data: {\n\t\t\t\tusers: string[];\n\t\t\t\tmsgs: number;\n\t\t\t\tfiles: string[];\n\t\t\t\ttime: number;\n\t\t\t\troom: string;\n\t\t\t} = {\n\t\t\t\tusers: [],\n\t\t\t\tmsgs: 0,\n\t\t\t\tfiles: [],\n\t\t\t\ttime: smarshHistory ? moment(date).diff(moment(smarshHistory.lastRan), 'minutes') : moment(date).diff(moment(room.ts), 'minutes'),\n\t\t\t\troom: room.name ? `#${room.name}` : `Direct Message Between: ${room?.usernames?.join(' & ')}`,\n\t\t\t};\n\n\t\t\tconst cursor = Messages.find(query);\n\n\t\t\tfor await (const message of cursor) {\n\t\t\t\trows.push(opentr);\n\n\t\t\t\t// The timestamp\n\t\t\t\trows.push(open20td);\n\t\t\t\trows.push(moment(message.ts).tz(timeZone).format('YYYY-MM-DD HH-mm-ss z'));\n\t\t\t\trows.push(closetd);\n\n\t\t\t\t// The sender\n\t\t\t\trows.push(open20td);\n\t\t\t\tconst sender = await Users.findOne({ _id: message.u._id });\n\t\t\t\tif (!sender) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (data.users.indexOf(sender?._id) === -1) {\n\t\t\t\t\tdata.users.push(sender._id);\n\t\t\t\t}\n\n\t\t\t\t// Get the user's email, can be nothing if it is an unconfigured bot account (like rocket.cat)\n\t\t\t\tif (sender.emails?.[0]?.address) {\n\t\t\t\t\trows.push(`${sender.name} &lt;${sender.emails[0].address}&gt;`);\n\t\t\t\t} else {\n\t\t\t\t\trows.push(`${sender.name} &lt;${smarshMissingEmail}&gt;`);\n\t\t\t\t}\n\t\t\t\trows.push(closetd);\n\n\t\t\t\t// The message\n\t\t\t\trows.push(open60td);\n\t\t\t\tdata.msgs++;\n\t\t\t\tif (message.t) {\n\t\t\t\t\tconst messageType = MessageTypes.getType(message);\n\t\t\t\t\tif (messageType) {\n\t\t\t\t\t\trows.push(\n\t\t\t\t\t\t\ti18n.t(messageType.message, {\n\t\t\t\t\t\t\t\tlng: 'en',\n\t\t\t\t\t\t\t\treplace: messageType.data ? messageType.data(message) : {},\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trows.push(`${message.msg} (${message.t})`);\n\t\t\t\t\t}\n\t\t\t\t} else if (message.file) {\n\t\t\t\t\tdata.files.push(message.file._id);\n\t\t\t\t\trows.push(`${message?.attachments?.[0].title} (${_getLink({ title_link: message?.attachments?.[0].title_link || '' })})})`);\n\t\t\t\t} else if (message.attachments) {\n\t\t\t\t\tconst attaches: string[] = [];\n\t\t\t\t\tmessage.attachments.forEach((a) => {\n\t\t\t\t\t\tif ('image_url' in a && a.image_url !== undefined) {\n\t\t\t\t\t\t\tattaches.push(a.image_url);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// TODO: Verify other type of attachments which need to be handled that aren't file uploads and image urls\n\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t// \tconsole.log(a);\n\t\t\t\t\t\t// }\n\t\t\t\t\t});\n\n\t\t\t\t\trows.push(`${message.msg} (${attaches.join(', ')})`);\n\t\t\t\t} else {\n\t\t\t\t\trows.push(message.msg);\n\t\t\t\t}\n\t\t\t\trows.push(closetd);\n\n\t\t\t\trows.push(closetr);\n\t\t\t}\n\n\t\t\tif (rows.length !== 0) {\n\t\t\t\tconst result = start + rows.join('') + end;\n\n\t\t\t\tawait SmarshHistory.updateOne(\n\t\t\t\t\t{ _id: room._id },\n\t\t\t\t\t{\n\t\t\t\t\t\t_id: room._id,\n\t\t\t\t\t\tlastRan: date,\n\t\t\t\t\t\tlastResult: result,\n\t\t\t\t\t},\n\t\t\t\t\t{ upsert: true },\n\t\t\t\t);\n\n\t\t\t\tawait sendEmail({\n\t\t\t\t\tbody: result,\n\t\t\t\t\tsubject: `Rocket.Chat, ${data.users.length} Users, ${data.msgs} Messages, ${data.files.length} Files, ${data.time} Minutes, in ${data.room}`,\n\t\t\t\t\tfiles: data.files,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7ff29885885230459749b6f5432f8b13f2fee2cd"}
