{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/compareUserPassword.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/compareUserPassword.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/compareUserPassword.ts","inputSourceMap":{"version":3,"file":"server/lib/compareUserPassword.ts","sourceRoot":"","sources":["server/lib/compareUserPassword.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAEhD;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,mBAAmB,CAAC,IAAW,EAAE,IAAe;IACrE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC;QAC/C,OAAO,KAAK,CAAC;IACd,CAAC;IAED,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;QAC5C,OAAO,KAAK,CAAC;IACd,CAAC;IAED,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,IAAI;QAC9B,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE;QACxC,SAAS,EAAE,SAAkB;KAC7B,CAAC;IAEF,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,mBAAmB,CAAC,IAAmB,EAAE,QAAQ,CAAC,CAAC;IAEpF,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC;QACrB,OAAO,KAAK,CAAC;IACd,CAAC;IAED,OAAO,IAAI,CAAC;AACb,CAAC","sourcesContent":["import type { IUser, IPassword } from '@rocket.chat/core-typings';\nimport { Accounts } from 'meteor/accounts-base';\n\n/**\n * Check if a given password is the one user by given user or if the user doesn't have a password\n * @param {object} user User object\n * @param {object} pass Object with { plain: 'plain-test-password' } or { sha256: 'sha256password' }\n */\nexport async function compareUserPassword(user: IUser, pass: IPassword): Promise<boolean> {\n\tif (!user?.services?.password?.bcrypt?.trim()) {\n\t\treturn false;\n\t}\n\n\tif (!pass || (!pass.plain && !pass.sha256)) {\n\t\treturn false;\n\t}\n\n\tconst password = pass.plain || {\n\t\tdigest: pass.sha256?.toLowerCase() || '',\n\t\talgorithm: 'sha-256' as const,\n\t};\n\n\tconst passCheck = await Accounts._checkPasswordAsync(user as Meteor.User, password);\n\n\tif (passCheck.error) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/compareUserPassword.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/compareUserPassword.ts","inputSourceMap":{"version":3,"file":"server/lib/compareUserPassword.ts","sourceRoot":"","sources":["server/lib/compareUserPassword.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAEhD;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,mBAAmB,CAAC,IAAW,EAAE,IAAe;IACrE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC;QAC/C,OAAO,KAAK,CAAC;IACd,CAAC;IAED,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;QAC5C,OAAO,KAAK,CAAC;IACd,CAAC;IAED,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,IAAI;QAC9B,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE;QACxC,SAAS,EAAE,SAAkB;KAC7B,CAAC;IAEF,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,mBAAmB,CAAC,IAAmB,EAAE,QAAQ,CAAC,CAAC;IAEpF,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC;QACrB,OAAO,KAAK,CAAC;IACd,CAAC;IAED,OAAO,IAAI,CAAC;AACb,CAAC","sourcesContent":["import type { IUser, IPassword } from '@rocket.chat/core-typings';\nimport { Accounts } from 'meteor/accounts-base';\n\n/**\n * Check if a given password is the one user by given user or if the user doesn't have a password\n * @param {object} user User object\n * @param {object} pass Object with { plain: 'plain-test-password' } or { sha256: 'sha256password' }\n */\nexport async function compareUserPassword(user: IUser, pass: IPassword): Promise<boolean> {\n\tif (!user?.services?.password?.bcrypt?.trim()) {\n\t\treturn false;\n\t}\n\n\tif (!pass || (!pass.plain && !pass.sha256)) {\n\t\treturn false;\n\t}\n\n\tconst password = pass.plain || {\n\t\tdigest: pass.sha256?.toLowerCase() || '',\n\t\talgorithm: 'sha-256' as const,\n\t};\n\n\tconst passCheck = await Accounts._checkPasswordAsync(user as Meteor.User, password);\n\n\tif (passCheck.error) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      compareUserPassword: () => compareUserPassword\n    });\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function compareUserPassword(user, pass) {\n      var _user$services, _user$services$passwo, _user$services$passwo2, _pass$sha;\n      if (!(user !== null && user !== void 0 && (_user$services = user.services) !== null && _user$services !== void 0 && (_user$services$passwo = _user$services.password) !== null && _user$services$passwo !== void 0 && (_user$services$passwo2 = _user$services$passwo.bcrypt) !== null && _user$services$passwo2 !== void 0 && _user$services$passwo2.trim())) {\n        return false;\n      }\n      if (!pass || !pass.plain && !pass.sha256) {\n        return false;\n      }\n      const password = pass.plain || {\n        digest: ((_pass$sha = pass.sha256) === null || _pass$sha === void 0 ? void 0 : _pass$sha.toLowerCase()) || '',\n        algorithm: 'sha-256'\n      };\n      const passCheck = await Accounts._checkPasswordAsync(user, password);\n      if (passCheck.error) {\n        return false;\n      }\n      return true;\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","compareUserPassword","Accounts","link","v","__reifyWaitForDeps__","user","pass","_user$services","_user$services$passwo","_user$services$passwo2","_pass$sha","services","password","bcrypt","trim","plain","sha256","digest","toLowerCase","algorithm","passCheck","_checkPasswordAsync","error","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/compareUserPassword.ts"],"sourcesContent":["import type { IUser, IPassword } from '@rocket.chat/core-typings';\nimport { Accounts } from 'meteor/accounts-base';\n\n/**\n * Check if a given password is the one user by given user or if the user doesn't have a password\n * @param {object} user User object\n * @param {object} pass Object with { plain: 'plain-test-password' } or { sha256: 'sha256password' }\n */\nexport async function compareUserPassword(user: IUser, pass: IPassword): Promise<boolean> {\n\tif (!user?.services?.password?.bcrypt?.trim()) {\n\t\treturn false;\n\t}\n\n\tif (!pass || (!pass.plain && !pass.sha256)) {\n\t\treturn false;\n\t}\n\n\tconst password = pass.plain || {\n\t\tdigest: pass.sha256?.toLowerCase() || '',\n\t\talgorithm: 'sha-256' as const,\n\t};\n\n\tconst passCheck = await Accounts._checkPasswordAsync(user as Meteor.User, password);\n\n\tif (passCheck.error) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n"],"mappings":";;;IACAA,MAAA,CAAOC,MAAE;MAAAC,mBAAgB,EAAAA,CAAA,KAAAA;IAAuB;IAAA,IAAAC,QAAA;IAAAH,MAAA,CAAAI,IAAA;MAAAD,SAAAE,CAAA;QAAAF,QAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,oBAAA,WAAAA,oBAAA;IAOzC,eAAeJ,mBAAmBA,CAACK,IAAW,EAAEC,IAAe;MAAA,IAAAC,cAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,SAAA;MACrE,IAAI,EAACL,IAAI,aAAJA,IAAI,gBAAAE,cAAA,GAAJF,IAAI,CAAEM,QAAQ,cAAAJ,cAAA,gBAAAC,qBAAA,GAAdD,cAAA,CAAgBK,QAAQ,cAAAJ,qBAAA,gBAAAC,sBAAA,GAAxBD,qBAAA,CAA0BK,MAAM,cAAAJ,sBAAA,eAAhCA,sBAAA,CAAkCK,IAAI,EAAE,GAAE;QAC9C,OAAO,KAAK;MACb;MAEA,IAAI,CAACR,IAAI,IAAK,CAACA,IAAI,CAACS,KAAK,IAAI,CAACT,IAAI,CAACU,MAAO,EAAE;QAC3C,OAAO,KAAK;MACb;MAEA,MAAMJ,QAAQ,GAAGN,IAAI,CAACS,KAAK,IAAI;QAC9BE,MAAM,EAAE,EAAAP,SAAA,GAAAJ,IAAI,CAACU,MAAM,cAAAN,SAAA,uBAAXA,SAAA,CAAaQ,WAAW,EAAE,KAAI,EAAE;QACxCC,SAAS,EAAE;OACX;MAED,MAAMC,SAAS,GAAG,MAAMnB,QAAQ,CAACoB,mBAAmB,CAAChB,IAAmB,EAAEO,QAAQ,CAAC;MAEnF,IAAIQ,SAAS,CAACE,KAAK,EAAE;QACpB,OAAO,KAAK;MACb;MAEA,OAAO,IAAI;IACZ;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"57c6d2f9c7e33d25016d400eae1f6f5c41473392"}
