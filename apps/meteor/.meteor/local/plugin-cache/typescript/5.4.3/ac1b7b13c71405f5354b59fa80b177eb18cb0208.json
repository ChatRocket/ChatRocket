{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/EditableSettingsContext.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/admin/EditableSettingsContext.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/EditableSettingsContext.ts","inputSourceMap":{"version":3,"file":"client/views/admin/EditableSettingsContext.ts","sourceRoot":"","sources":["client/views/admin/EditableSettingsContext.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISettingBase, SectionName, SettingId, GroupId, TabId, ISettingColor } from '@rocket.chat/core-typings';\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\nimport { createContext, useContext, useMemo } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nexport type EditableSetting = (ISettingBase | ISettingColor) & {\n\tdisabled: boolean;\n\tchanged: boolean;\n\tinvisible: boolean;\n};\n\ntype EditableSettingsContextQuery = SettingsContextQuery & {\n\tchanged?: boolean;\n};\n\nexport type EditableSettingsContextValue = {\n\treadonly queryEditableSetting: (\n\t\t_id: SettingId,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting | undefined];\n\treadonly queryEditableSettings: (\n\t\tquery: EditableSettingsContextQuery,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting[]];\n\treadonly queryGroupSections: (\n\t\t_id: GroupId,\n\t\ttab?: TabId,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => SectionName[]];\n\treadonly queryGroupTabs: (_id: GroupId) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => TabId[]];\n\treadonly dispatch: (changes: Partial<EditableSetting>[]) => void;\n\treadonly isEnterprise: boolean;\n};\n\nexport const EditableSettingsContext = createContext<EditableSettingsContextValue>({\n\tqueryEditableSetting: () => [(): (() => void) => (): void => undefined, (): undefined => undefined],\n\tqueryEditableSettings: () => [(): (() => void) => (): void => undefined, (): EditableSetting[] => []],\n\tqueryGroupSections: () => [(): (() => void) => (): void => undefined, (): SectionName[] => []],\n\tqueryGroupTabs: () => [(): (() => void) => (): void => undefined, (): TabId[] => []],\n\tdispatch: () => undefined,\n\tisEnterprise: false,\n});\n\nexport const useIsEnterprise = (): boolean => useContext(EditableSettingsContext).isEnterprise;\n\nexport const useEditableSetting = (_id: SettingId): EditableSetting | undefined => {\n\tconst { queryEditableSetting } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSetting(_id), [queryEditableSetting, _id]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettings = (query?: EditableSettingsContextQuery): EditableSetting[] => {\n\tconst { queryEditableSettings } = useContext(EditableSettingsContext);\n\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSettings(query ?? {}), [queryEditableSettings, query]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsGroupSections = (_id: SettingId, tab?: TabId): SectionName[] => {\n\tconst { queryGroupSections } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupSections(_id, tab), [queryGroupSections, _id, tab]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsGroupTabs = (_id: SettingId): TabId[] => {\n\tconst { queryGroupTabs } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupTabs(_id), [queryGroupTabs, _id]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsDispatch = (): ((changes: Partial<EditableSetting>[]) => void) =>\n\tuseContext(EditableSettingsContext).dispatch;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/EditableSettingsContext.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/EditableSettingsContext.ts","inputSourceMap":{"version":3,"file":"client/views/admin/EditableSettingsContext.ts","sourceRoot":"","sources":["client/views/admin/EditableSettingsContext.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISettingBase, SectionName, SettingId, GroupId, TabId, ISettingColor } from '@rocket.chat/core-typings';\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\nimport { createContext, useContext, useMemo } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nexport type EditableSetting = (ISettingBase | ISettingColor) & {\n\tdisabled: boolean;\n\tchanged: boolean;\n\tinvisible: boolean;\n};\n\ntype EditableSettingsContextQuery = SettingsContextQuery & {\n\tchanged?: boolean;\n};\n\nexport type EditableSettingsContextValue = {\n\treadonly queryEditableSetting: (\n\t\t_id: SettingId,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting | undefined];\n\treadonly queryEditableSettings: (\n\t\tquery: EditableSettingsContextQuery,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting[]];\n\treadonly queryGroupSections: (\n\t\t_id: GroupId,\n\t\ttab?: TabId,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => SectionName[]];\n\treadonly queryGroupTabs: (_id: GroupId) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => TabId[]];\n\treadonly dispatch: (changes: Partial<EditableSetting>[]) => void;\n\treadonly isEnterprise: boolean;\n};\n\nexport const EditableSettingsContext = createContext<EditableSettingsContextValue>({\n\tqueryEditableSetting: () => [(): (() => void) => (): void => undefined, (): undefined => undefined],\n\tqueryEditableSettings: () => [(): (() => void) => (): void => undefined, (): EditableSetting[] => []],\n\tqueryGroupSections: () => [(): (() => void) => (): void => undefined, (): SectionName[] => []],\n\tqueryGroupTabs: () => [(): (() => void) => (): void => undefined, (): TabId[] => []],\n\tdispatch: () => undefined,\n\tisEnterprise: false,\n});\n\nexport const useIsEnterprise = (): boolean => useContext(EditableSettingsContext).isEnterprise;\n\nexport const useEditableSetting = (_id: SettingId): EditableSetting | undefined => {\n\tconst { queryEditableSetting } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSetting(_id), [queryEditableSetting, _id]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettings = (query?: EditableSettingsContextQuery): EditableSetting[] => {\n\tconst { queryEditableSettings } = useContext(EditableSettingsContext);\n\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSettings(query ?? {}), [queryEditableSettings, query]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsGroupSections = (_id: SettingId, tab?: TabId): SectionName[] => {\n\tconst { queryGroupSections } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupSections(_id, tab), [queryGroupSections, _id, tab]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsGroupTabs = (_id: SettingId): TabId[] => {\n\tconst { queryGroupTabs } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupTabs(_id), [queryGroupTabs, _id]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsDispatch = (): ((changes: Partial<EditableSetting>[]) => void) =>\n\tuseContext(EditableSettingsContext).dispatch;\n"]}}},"code":"var _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 0);\nmodule.export({\n  EditableSettingsContext: function () {\n    return EditableSettingsContext;\n  },\n  useIsEnterprise: function () {\n    return useIsEnterprise;\n  },\n  useEditableSetting: function () {\n    return useEditableSetting;\n  },\n  useEditableSettings: function () {\n    return useEditableSettings;\n  },\n  useEditableSettingsGroupSections: function () {\n    return useEditableSettingsGroupSections;\n  },\n  useEditableSettingsGroupTabs: function () {\n    return useEditableSettingsGroupTabs;\n  },\n  useEditableSettingsDispatch: function () {\n    return useEditableSettingsDispatch;\n  }\n});\nvar createContext, useContext, useMemo;\nmodule.link(\"react\", {\n  createContext: function (v) {\n    createContext = v;\n  },\n  useContext: function (v) {\n    useContext = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 0);\nvar useSyncExternalStore;\nmodule.link(\"use-sync-external-store/shim\", {\n  useSyncExternalStore: function (v) {\n    useSyncExternalStore = v;\n  }\n}, 1);\nvar EditableSettingsContext = /*#__PURE__*/createContext({\n  queryEditableSetting: function () {\n    return [function () {\n      return function () {\n        return undefined;\n      };\n    }, function () {\n      return undefined;\n    }];\n  },\n  queryEditableSettings: function () {\n    return [function () {\n      return function () {\n        return undefined;\n      };\n    }, function () {\n      return [];\n    }];\n  },\n  queryGroupSections: function () {\n    return [function () {\n      return function () {\n        return undefined;\n      };\n    }, function () {\n      return [];\n    }];\n  },\n  queryGroupTabs: function () {\n    return [function () {\n      return function () {\n        return undefined;\n      };\n    }, function () {\n      return [];\n    }];\n  },\n  dispatch: function () {\n    return undefined;\n  },\n  isEnterprise: false\n});\nvar useIsEnterprise = function () {\n  return useContext(EditableSettingsContext).isEnterprise;\n};\nvar useEditableSetting = function (_id) {\n  var _useContext = useContext(EditableSettingsContext),\n    queryEditableSetting = _useContext.queryEditableSetting;\n  var _useMemo = useMemo(function () {\n      return queryEditableSetting(_id);\n    }, [queryEditableSetting, _id]),\n    _useMemo2 = _slicedToArray(_useMemo, 2),\n    subscribe = _useMemo2[0],\n    getSnapshot = _useMemo2[1];\n  return useSyncExternalStore(subscribe, getSnapshot);\n};\nvar useEditableSettings = function (query) {\n  var _useContext2 = useContext(EditableSettingsContext),\n    queryEditableSettings = _useContext2.queryEditableSettings;\n  var _useMemo3 = useMemo(function () {\n      return queryEditableSettings(query !== null && query !== void 0 ? query : {});\n    }, [queryEditableSettings, query]),\n    _useMemo4 = _slicedToArray(_useMemo3, 2),\n    subscribe = _useMemo4[0],\n    getSnapshot = _useMemo4[1];\n  return useSyncExternalStore(subscribe, getSnapshot);\n};\nvar useEditableSettingsGroupSections = function (_id, tab) {\n  var _useContext3 = useContext(EditableSettingsContext),\n    queryGroupSections = _useContext3.queryGroupSections;\n  var _useMemo5 = useMemo(function () {\n      return queryGroupSections(_id, tab);\n    }, [queryGroupSections, _id, tab]),\n    _useMemo6 = _slicedToArray(_useMemo5, 2),\n    subscribe = _useMemo6[0],\n    getSnapshot = _useMemo6[1];\n  return useSyncExternalStore(subscribe, getSnapshot);\n};\nvar useEditableSettingsGroupTabs = function (_id) {\n  var _useContext4 = useContext(EditableSettingsContext),\n    queryGroupTabs = _useContext4.queryGroupTabs;\n  var _useMemo7 = useMemo(function () {\n      return queryGroupTabs(_id);\n    }, [queryGroupTabs, _id]),\n    _useMemo8 = _slicedToArray(_useMemo7, 2),\n    subscribe = _useMemo8[0],\n    getSnapshot = _useMemo8[1];\n  return useSyncExternalStore(subscribe, getSnapshot);\n};\nvar useEditableSettingsDispatch = function () {\n  return useContext(EditableSettingsContext).dispatch;\n};","map":{"version":3,"names":["_slicedToArray","module","link","default","v","export","EditableSettingsContext","useIsEnterprise","useEditableSetting","useEditableSettings","useEditableSettingsGroupSections","useEditableSettingsGroupTabs","useEditableSettingsDispatch","createContext","useContext","useMemo","useSyncExternalStore","queryEditableSetting","undefined","queryEditableSettings","queryGroupSections","queryGroupTabs","dispatch","isEnterprise","_id","_useContext","_useMemo","_useMemo2","subscribe","getSnapshot","query","_useContext2","_useMemo3","_useMemo4","tab","_useContext3","_useMemo5","_useMemo6","_useContext4","_useMemo7","_useMemo8"],"sources":["client/views/admin/EditableSettingsContext.ts"],"sourcesContent":["import type { ISettingBase, SectionName, SettingId, GroupId, TabId, ISettingColor } from '@rocket.chat/core-typings';\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\nimport { createContext, useContext, useMemo } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nexport type EditableSetting = (ISettingBase | ISettingColor) & {\n\tdisabled: boolean;\n\tchanged: boolean;\n\tinvisible: boolean;\n};\n\ntype EditableSettingsContextQuery = SettingsContextQuery & {\n\tchanged?: boolean;\n};\n\nexport type EditableSettingsContextValue = {\n\treadonly queryEditableSetting: (\n\t\t_id: SettingId,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting | undefined];\n\treadonly queryEditableSettings: (\n\t\tquery: EditableSettingsContextQuery,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => EditableSetting[]];\n\treadonly queryGroupSections: (\n\t\t_id: GroupId,\n\t\ttab?: TabId,\n\t) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => SectionName[]];\n\treadonly queryGroupTabs: (_id: GroupId) => [subscribe: (onStoreChange: () => void) => () => void, getSnapshot: () => TabId[]];\n\treadonly dispatch: (changes: Partial<EditableSetting>[]) => void;\n\treadonly isEnterprise: boolean;\n};\n\nexport const EditableSettingsContext = createContext<EditableSettingsContextValue>({\n\tqueryEditableSetting: () => [(): (() => void) => (): void => undefined, (): undefined => undefined],\n\tqueryEditableSettings: () => [(): (() => void) => (): void => undefined, (): EditableSetting[] => []],\n\tqueryGroupSections: () => [(): (() => void) => (): void => undefined, (): SectionName[] => []],\n\tqueryGroupTabs: () => [(): (() => void) => (): void => undefined, (): TabId[] => []],\n\tdispatch: () => undefined,\n\tisEnterprise: false,\n});\n\nexport const useIsEnterprise = (): boolean => useContext(EditableSettingsContext).isEnterprise;\n\nexport const useEditableSetting = (_id: SettingId): EditableSetting | undefined => {\n\tconst { queryEditableSetting } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSetting(_id), [queryEditableSetting, _id]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettings = (query?: EditableSettingsContextQuery): EditableSetting[] => {\n\tconst { queryEditableSettings } = useContext(EditableSettingsContext);\n\tconst [subscribe, getSnapshot] = useMemo(() => queryEditableSettings(query ?? {}), [queryEditableSettings, query]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsGroupSections = (_id: SettingId, tab?: TabId): SectionName[] => {\n\tconst { queryGroupSections } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupSections(_id, tab), [queryGroupSections, _id, tab]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsGroupTabs = (_id: SettingId): TabId[] => {\n\tconst { queryGroupTabs } = useContext(EditableSettingsContext);\n\n\tconst [subscribe, getSnapshot] = useMemo(() => queryGroupTabs(_id), [queryGroupTabs, _id]);\n\treturn useSyncExternalStore(subscribe, getSnapshot);\n};\n\nexport const useEditableSettingsDispatch = (): ((changes: Partial<EditableSetting>[]) => void) =>\n\tuseContext(EditableSettingsContext).dispatch;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ac1b7b13c71405f5354b59fa80b177eb18cb0208"}
