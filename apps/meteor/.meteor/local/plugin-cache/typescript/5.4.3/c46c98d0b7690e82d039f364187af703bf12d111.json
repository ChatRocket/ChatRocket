{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/parseMessageTextToAstMarkdown.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/parseMessageTextToAstMarkdown.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/parseMessageTextToAstMarkdown.ts","inputSourceMap":{"version":3,"file":"client/lib/parseMessageTextToAstMarkdown.ts","sourceRoot":"","sources":["client/lib/parseMessageTextToAstMarkdown.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, ITranslatedMessage, MessageAttachment } from '@rocket.chat/core-typings';\nimport {\n\tisFileAttachment,\n\tisE2EEMessage,\n\tisOTRMessage,\n\tisOTRAckMessage,\n\tisQuoteAttachment,\n\tisTranslatedAttachment,\n\tisTranslatedMessage,\n} from '@rocket.chat/core-typings';\nimport type { Options, Root } from '@rocket.chat/message-parser';\nimport { parse } from '@rocket.chat/message-parser';\n\nimport type { AutoTranslateOptions } from '../views/room/MessageList/hooks/useAutoTranslate';\nimport { isParsedMessage } from '../views/room/MessageList/lib/isParsedMessage';\n\ntype WithRequiredProperty<Type, Key extends keyof Type> = Omit<Type, Key> & {\n\t[Property in Key]-?: Type[Property];\n};\n\nexport type MessageWithMdEnforced<TMessage extends IMessage & Partial<ITranslatedMessage> = IMessage & Partial<ITranslatedMessage>> =\n\tWithRequiredProperty<TMessage, 'md'>;\n/**\n * Removes null values for known properties values.\n * Adds a property `md` to the message with the parsed message if is not provided.\n * if has `attachments` property, but attachment is missing `md` property, it will be added.\n * if translation is enabled and message contains `translations` property, it will be replaced by the parsed message.\n * @param message The message to be parsed.\n * @param parseOptions The options to be used in the parser.\n * @param autoTranslateOptions The auto translate options to be used in the parser.\n * @returns message normalized.\n */\nexport const parseMessageTextToAstMarkdown = <\n\tTMessage extends IMessage & Partial<ITranslatedMessage> = IMessage & Partial<ITranslatedMessage>,\n>(\n\tmessage: TMessage,\n\tparseOptions: Options,\n\tautoTranslateOptions: AutoTranslateOptions,\n): MessageWithMdEnforced => {\n\tconst msg = removePossibleNullMessageValues(message);\n\tconst { showAutoTranslate, autoTranslateLanguage } = autoTranslateOptions;\n\tconst translations = autoTranslateLanguage && isTranslatedMessage(msg) && msg.translations;\n\tconst translated = showAutoTranslate(message);\n\n\tconst text = (translated && translations && translations[autoTranslateLanguage]) || msg.msg;\n\n\treturn {\n\t\t...msg,\n\t\tmd:\n\t\t\tisE2EEMessage(message) || isOTRMessage(message) || isOTRAckMessage(message) || translated\n\t\t\t\t? textToMessageToken(text, parseOptions)\n\t\t\t\t: msg.md ?? textToMessageToken(text, parseOptions),\n\t\t...(msg.attachments && {\n\t\t\tattachments: parseMessageAttachments(msg.attachments, parseOptions, { autoTranslateLanguage, translated }),\n\t\t}),\n\t};\n};\n\nexport const parseMessageAttachment = <T extends MessageAttachment>(\n\tattachment: T,\n\tparseOptions: Options,\n\tautoTranslateOptions: { autoTranslateLanguage?: string; translated: boolean },\n): T => {\n\tconst { translated, autoTranslateLanguage } = autoTranslateOptions;\n\tif (!attachment.text && !attachment.description) {\n\t\treturn attachment;\n\t}\n\n\tif (isQuoteAttachment(attachment) && attachment.attachments) {\n\t\tattachment.attachments = parseMessageAttachments(attachment.attachments, parseOptions, autoTranslateOptions);\n\t}\n\n\tconst text =\n\t\t(isTranslatedAttachment(attachment) && autoTranslateLanguage && attachment?.translations?.[autoTranslateLanguage]) ||\n\t\tattachment.text ||\n\t\tattachment.description ||\n\t\t'';\n\n\tif (isFileAttachment(attachment) && attachment.description) {\n\t\tattachment.descriptionMd = translated\n\t\t\t? textToMessageToken(text, parseOptions)\n\t\t\t: attachment.descriptionMd ?? textToMessageToken(text, parseOptions);\n\t}\n\n\treturn {\n\t\t...attachment,\n\t\tmd: translated ? textToMessageToken(text, parseOptions) : attachment.md ?? textToMessageToken(text, parseOptions),\n\t};\n};\n\nexport const parseMessageAttachments = <T extends MessageAttachment>(\n\tattachments: T[],\n\tparseOptions: Options,\n\tautoTranslateOptions: { autoTranslateLanguage?: string; translated: boolean },\n): T[] => attachments.map((attachment) => parseMessageAttachment(attachment, parseOptions, autoTranslateOptions));\n\nconst isNotNullOrUndefined = (value: unknown): boolean => value !== null && value !== undefined;\n\n// In a previous version of the app, some values were being set to null.\n// This is a workaround to remove those null values.\n// A migration script should be created to remove this code.\nexport const removePossibleNullMessageValues = <TMessage extends IMessage = IMessage>({\n\teditedBy,\n\teditedAt,\n\temoji,\n\tavatar,\n\talias,\n\tcustomFields,\n\tgroupable,\n\tattachments,\n\treactions,\n\t...message\n}: any): TMessage => ({\n\t...message,\n\t...(isNotNullOrUndefined(editedBy) && { editedBy }),\n\t...(isNotNullOrUndefined(editedAt) && { editedAt }),\n\t...(isNotNullOrUndefined(emoji) && { emoji }),\n\t...(isNotNullOrUndefined(avatar) && { avatar }),\n\t...(isNotNullOrUndefined(alias) && { alias }),\n\t...(isNotNullOrUndefined(customFields) && { customFields }),\n\t...(isNotNullOrUndefined(groupable) && { groupable }),\n\t...(isNotNullOrUndefined(attachments) && { attachments }),\n\t...(isNotNullOrUndefined(reactions) && { reactions }),\n});\n\nconst textToMessageToken = (textOrRoot: string | Root, parseOptions: Options): Root => {\n\tif (!textOrRoot) {\n\t\treturn [];\n\t}\n\n\tif (isParsedMessage(textOrRoot)) {\n\t\treturn textOrRoot;\n\t}\n\tconst parsedMessage = parse(textOrRoot, parseOptions);\n\n\tconst parsedMessageCleaned = parsedMessage[0].type !== 'LINE_BREAK' ? parsedMessage : (parsedMessage.slice(1) as Root);\n\n\treturn parsedMessageCleaned;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/parseMessageTextToAstMarkdown.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/parseMessageTextToAstMarkdown.ts","inputSourceMap":{"version":3,"file":"client/lib/parseMessageTextToAstMarkdown.ts","sourceRoot":"","sources":["client/lib/parseMessageTextToAstMarkdown.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, ITranslatedMessage, MessageAttachment } from '@rocket.chat/core-typings';\nimport {\n\tisFileAttachment,\n\tisE2EEMessage,\n\tisOTRMessage,\n\tisOTRAckMessage,\n\tisQuoteAttachment,\n\tisTranslatedAttachment,\n\tisTranslatedMessage,\n} from '@rocket.chat/core-typings';\nimport type { Options, Root } from '@rocket.chat/message-parser';\nimport { parse } from '@rocket.chat/message-parser';\n\nimport type { AutoTranslateOptions } from '../views/room/MessageList/hooks/useAutoTranslate';\nimport { isParsedMessage } from '../views/room/MessageList/lib/isParsedMessage';\n\ntype WithRequiredProperty<Type, Key extends keyof Type> = Omit<Type, Key> & {\n\t[Property in Key]-?: Type[Property];\n};\n\nexport type MessageWithMdEnforced<TMessage extends IMessage & Partial<ITranslatedMessage> = IMessage & Partial<ITranslatedMessage>> =\n\tWithRequiredProperty<TMessage, 'md'>;\n/**\n * Removes null values for known properties values.\n * Adds a property `md` to the message with the parsed message if is not provided.\n * if has `attachments` property, but attachment is missing `md` property, it will be added.\n * if translation is enabled and message contains `translations` property, it will be replaced by the parsed message.\n * @param message The message to be parsed.\n * @param parseOptions The options to be used in the parser.\n * @param autoTranslateOptions The auto translate options to be used in the parser.\n * @returns message normalized.\n */\nexport const parseMessageTextToAstMarkdown = <\n\tTMessage extends IMessage & Partial<ITranslatedMessage> = IMessage & Partial<ITranslatedMessage>,\n>(\n\tmessage: TMessage,\n\tparseOptions: Options,\n\tautoTranslateOptions: AutoTranslateOptions,\n): MessageWithMdEnforced => {\n\tconst msg = removePossibleNullMessageValues(message);\n\tconst { showAutoTranslate, autoTranslateLanguage } = autoTranslateOptions;\n\tconst translations = autoTranslateLanguage && isTranslatedMessage(msg) && msg.translations;\n\tconst translated = showAutoTranslate(message);\n\n\tconst text = (translated && translations && translations[autoTranslateLanguage]) || msg.msg;\n\n\treturn {\n\t\t...msg,\n\t\tmd:\n\t\t\tisE2EEMessage(message) || isOTRMessage(message) || isOTRAckMessage(message) || translated\n\t\t\t\t? textToMessageToken(text, parseOptions)\n\t\t\t\t: msg.md ?? textToMessageToken(text, parseOptions),\n\t\t...(msg.attachments && {\n\t\t\tattachments: parseMessageAttachments(msg.attachments, parseOptions, { autoTranslateLanguage, translated }),\n\t\t}),\n\t};\n};\n\nexport const parseMessageAttachment = <T extends MessageAttachment>(\n\tattachment: T,\n\tparseOptions: Options,\n\tautoTranslateOptions: { autoTranslateLanguage?: string; translated: boolean },\n): T => {\n\tconst { translated, autoTranslateLanguage } = autoTranslateOptions;\n\tif (!attachment.text && !attachment.description) {\n\t\treturn attachment;\n\t}\n\n\tif (isQuoteAttachment(attachment) && attachment.attachments) {\n\t\tattachment.attachments = parseMessageAttachments(attachment.attachments, parseOptions, autoTranslateOptions);\n\t}\n\n\tconst text =\n\t\t(isTranslatedAttachment(attachment) && autoTranslateLanguage && attachment?.translations?.[autoTranslateLanguage]) ||\n\t\tattachment.text ||\n\t\tattachment.description ||\n\t\t'';\n\n\tif (isFileAttachment(attachment) && attachment.description) {\n\t\tattachment.descriptionMd = translated\n\t\t\t? textToMessageToken(text, parseOptions)\n\t\t\t: attachment.descriptionMd ?? textToMessageToken(text, parseOptions);\n\t}\n\n\treturn {\n\t\t...attachment,\n\t\tmd: translated ? textToMessageToken(text, parseOptions) : attachment.md ?? textToMessageToken(text, parseOptions),\n\t};\n};\n\nexport const parseMessageAttachments = <T extends MessageAttachment>(\n\tattachments: T[],\n\tparseOptions: Options,\n\tautoTranslateOptions: { autoTranslateLanguage?: string; translated: boolean },\n): T[] => attachments.map((attachment) => parseMessageAttachment(attachment, parseOptions, autoTranslateOptions));\n\nconst isNotNullOrUndefined = (value: unknown): boolean => value !== null && value !== undefined;\n\n// In a previous version of the app, some values were being set to null.\n// This is a workaround to remove those null values.\n// A migration script should be created to remove this code.\nexport const removePossibleNullMessageValues = <TMessage extends IMessage = IMessage>({\n\teditedBy,\n\teditedAt,\n\temoji,\n\tavatar,\n\talias,\n\tcustomFields,\n\tgroupable,\n\tattachments,\n\treactions,\n\t...message\n}: any): TMessage => ({\n\t...message,\n\t...(isNotNullOrUndefined(editedBy) && { editedBy }),\n\t...(isNotNullOrUndefined(editedAt) && { editedAt }),\n\t...(isNotNullOrUndefined(emoji) && { emoji }),\n\t...(isNotNullOrUndefined(avatar) && { avatar }),\n\t...(isNotNullOrUndefined(alias) && { alias }),\n\t...(isNotNullOrUndefined(customFields) && { customFields }),\n\t...(isNotNullOrUndefined(groupable) && { groupable }),\n\t...(isNotNullOrUndefined(attachments) && { attachments }),\n\t...(isNotNullOrUndefined(reactions) && { reactions }),\n});\n\nconst textToMessageToken = (textOrRoot: string | Root, parseOptions: Options): Root => {\n\tif (!textOrRoot) {\n\t\treturn [];\n\t}\n\n\tif (isParsedMessage(textOrRoot)) {\n\t\treturn textOrRoot;\n\t}\n\tconst parsedMessage = parse(textOrRoot, parseOptions);\n\n\tconst parsedMessageCleaned = parsedMessage[0].type !== 'LINE_BREAK' ? parsedMessage : (parsedMessage.slice(1) as Root);\n\n\treturn parsedMessageCleaned;\n};\n"]}}},"code":"var _excluded = [\"editedBy\", \"editedAt\", \"emoji\", \"avatar\", \"alias\", \"customFields\", \"groupable\", \"attachments\", \"reactions\"];\nvar _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default: function (v) {\n    _objectWithoutProperties = v;\n  }\n}, 0);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 1);\nmodule.export({\n  parseMessageTextToAstMarkdown: function () {\n    return parseMessageTextToAstMarkdown;\n  },\n  parseMessageAttachment: function () {\n    return parseMessageAttachment;\n  },\n  parseMessageAttachments: function () {\n    return parseMessageAttachments;\n  },\n  removePossibleNullMessageValues: function () {\n    return removePossibleNullMessageValues;\n  }\n});\nvar isFileAttachment, isE2EEMessage, isOTRMessage, isOTRAckMessage, isQuoteAttachment, isTranslatedAttachment, isTranslatedMessage;\nmodule.link(\"@rocket.chat/core-typings\", {\n  isFileAttachment: function (v) {\n    isFileAttachment = v;\n  },\n  isE2EEMessage: function (v) {\n    isE2EEMessage = v;\n  },\n  isOTRMessage: function (v) {\n    isOTRMessage = v;\n  },\n  isOTRAckMessage: function (v) {\n    isOTRAckMessage = v;\n  },\n  isQuoteAttachment: function (v) {\n    isQuoteAttachment = v;\n  },\n  isTranslatedAttachment: function (v) {\n    isTranslatedAttachment = v;\n  },\n  isTranslatedMessage: function (v) {\n    isTranslatedMessage = v;\n  }\n}, 0);\nvar parse;\nmodule.link(\"@rocket.chat/message-parser\", {\n  parse: function (v) {\n    parse = v;\n  }\n}, 1);\nvar isParsedMessage;\nmodule.link(\"../views/room/MessageList/lib/isParsedMessage\", {\n  isParsedMessage: function (v) {\n    isParsedMessage = v;\n  }\n}, 2);\nvar parseMessageTextToAstMarkdown = function (message, parseOptions, autoTranslateOptions) {\n  var _msg$md;\n  var msg = removePossibleNullMessageValues(message);\n  var showAutoTranslate = autoTranslateOptions.showAutoTranslate,\n    autoTranslateLanguage = autoTranslateOptions.autoTranslateLanguage;\n  var translations = autoTranslateLanguage && isTranslatedMessage(msg) && msg.translations;\n  var translated = showAutoTranslate(message);\n  var text = translated && translations && translations[autoTranslateLanguage] || msg.msg;\n  return _objectSpread(_objectSpread({}, msg), {}, {\n    md: isE2EEMessage(message) || isOTRMessage(message) || isOTRAckMessage(message) || translated ? textToMessageToken(text, parseOptions) : (_msg$md = msg.md) !== null && _msg$md !== void 0 ? _msg$md : textToMessageToken(text, parseOptions)\n  }, msg.attachments && {\n    attachments: parseMessageAttachments(msg.attachments, parseOptions, {\n      autoTranslateLanguage: autoTranslateLanguage,\n      translated: translated\n    })\n  });\n};\nvar parseMessageAttachment = function (attachment, parseOptions, autoTranslateOptions) {\n  var _attachment$translati, _attachment$md;\n  var translated = autoTranslateOptions.translated,\n    autoTranslateLanguage = autoTranslateOptions.autoTranslateLanguage;\n  if (!attachment.text && !attachment.description) {\n    return attachment;\n  }\n  if (isQuoteAttachment(attachment) && attachment.attachments) {\n    attachment.attachments = parseMessageAttachments(attachment.attachments, parseOptions, autoTranslateOptions);\n  }\n  var text = isTranslatedAttachment(attachment) && autoTranslateLanguage && (attachment === null || attachment === void 0 ? void 0 : (_attachment$translati = attachment.translations) === null || _attachment$translati === void 0 ? void 0 : _attachment$translati[autoTranslateLanguage]) || attachment.text || attachment.description || '';\n  if (isFileAttachment(attachment) && attachment.description) {\n    var _attachment$descripti;\n    attachment.descriptionMd = translated ? textToMessageToken(text, parseOptions) : (_attachment$descripti = attachment.descriptionMd) !== null && _attachment$descripti !== void 0 ? _attachment$descripti : textToMessageToken(text, parseOptions);\n  }\n  return _objectSpread(_objectSpread({}, attachment), {}, {\n    md: translated ? textToMessageToken(text, parseOptions) : (_attachment$md = attachment.md) !== null && _attachment$md !== void 0 ? _attachment$md : textToMessageToken(text, parseOptions)\n  });\n};\nvar parseMessageAttachments = function (attachments, parseOptions, autoTranslateOptions) {\n  return attachments.map(function (attachment) {\n    return parseMessageAttachment(attachment, parseOptions, autoTranslateOptions);\n  });\n};\nvar isNotNullOrUndefined = function (value) {\n  return value !== null && value !== undefined;\n};\n// In a previous version of the app, some values were being set to null.\n// This is a workaround to remove those null values.\n// A migration script should be created to remove this code.\nvar removePossibleNullMessageValues = function (_ref) {\n  var editedBy = _ref.editedBy,\n    editedAt = _ref.editedAt,\n    emoji = _ref.emoji,\n    avatar = _ref.avatar,\n    alias = _ref.alias,\n    customFields = _ref.customFields,\n    groupable = _ref.groupable,\n    attachments = _ref.attachments,\n    reactions = _ref.reactions,\n    message = _objectWithoutProperties(_ref, _excluded);\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, message), isNotNullOrUndefined(editedBy) && {\n    editedBy: editedBy\n  }), isNotNullOrUndefined(editedAt) && {\n    editedAt: editedAt\n  }), isNotNullOrUndefined(emoji) && {\n    emoji: emoji\n  }), isNotNullOrUndefined(avatar) && {\n    avatar: avatar\n  }), isNotNullOrUndefined(alias) && {\n    alias: alias\n  }), isNotNullOrUndefined(customFields) && {\n    customFields: customFields\n  }), isNotNullOrUndefined(groupable) && {\n    groupable: groupable\n  }), isNotNullOrUndefined(attachments) && {\n    attachments: attachments\n  }), isNotNullOrUndefined(reactions) && {\n    reactions: reactions\n  });\n};\nvar textToMessageToken = function (textOrRoot, parseOptions) {\n  if (!textOrRoot) {\n    return [];\n  }\n  if (isParsedMessage(textOrRoot)) {\n    return textOrRoot;\n  }\n  var parsedMessage = parse(textOrRoot, parseOptions);\n  var parsedMessageCleaned = parsedMessage[0].type !== 'LINE_BREAK' ? parsedMessage : parsedMessage.slice(1);\n  return parsedMessageCleaned;\n};","map":{"version":3,"names":["_objectWithoutProperties","module","link","default","v","_objectSpread","export","parseMessageTextToAstMarkdown","parseMessageAttachment","parseMessageAttachments","removePossibleNullMessageValues","isFileAttachment","isE2EEMessage","isOTRMessage","isOTRAckMessage","isQuoteAttachment","isTranslatedAttachment","isTranslatedMessage","parse","isParsedMessage","message","parseOptions","autoTranslateOptions","_msg$md","msg","showAutoTranslate","autoTranslateLanguage","translations","translated","text","md","textToMessageToken","attachments","attachment","_attachment$translati","_attachment$md","description","_attachment$descripti","descriptionMd","map","isNotNullOrUndefined","value","undefined","_ref","editedBy","editedAt","emoji","avatar","alias","customFields","groupable","reactions","_excluded","textOrRoot","parsedMessage","parsedMessageCleaned","type","slice"],"sources":["client/lib/parseMessageTextToAstMarkdown.ts"],"sourcesContent":["import type { IMessage, ITranslatedMessage, MessageAttachment } from '@rocket.chat/core-typings';\nimport {\n\tisFileAttachment,\n\tisE2EEMessage,\n\tisOTRMessage,\n\tisOTRAckMessage,\n\tisQuoteAttachment,\n\tisTranslatedAttachment,\n\tisTranslatedMessage,\n} from '@rocket.chat/core-typings';\nimport type { Options, Root } from '@rocket.chat/message-parser';\nimport { parse } from '@rocket.chat/message-parser';\n\nimport type { AutoTranslateOptions } from '../views/room/MessageList/hooks/useAutoTranslate';\nimport { isParsedMessage } from '../views/room/MessageList/lib/isParsedMessage';\n\ntype WithRequiredProperty<Type, Key extends keyof Type> = Omit<Type, Key> & {\n\t[Property in Key]-?: Type[Property];\n};\n\nexport type MessageWithMdEnforced<TMessage extends IMessage & Partial<ITranslatedMessage> = IMessage & Partial<ITranslatedMessage>> =\n\tWithRequiredProperty<TMessage, 'md'>;\n/**\n * Removes null values for known properties values.\n * Adds a property `md` to the message with the parsed message if is not provided.\n * if has `attachments` property, but attachment is missing `md` property, it will be added.\n * if translation is enabled and message contains `translations` property, it will be replaced by the parsed message.\n * @param message The message to be parsed.\n * @param parseOptions The options to be used in the parser.\n * @param autoTranslateOptions The auto translate options to be used in the parser.\n * @returns message normalized.\n */\nexport const parseMessageTextToAstMarkdown = <\n\tTMessage extends IMessage & Partial<ITranslatedMessage> = IMessage & Partial<ITranslatedMessage>,\n>(\n\tmessage: TMessage,\n\tparseOptions: Options,\n\tautoTranslateOptions: AutoTranslateOptions,\n): MessageWithMdEnforced => {\n\tconst msg = removePossibleNullMessageValues(message);\n\tconst { showAutoTranslate, autoTranslateLanguage } = autoTranslateOptions;\n\tconst translations = autoTranslateLanguage && isTranslatedMessage(msg) && msg.translations;\n\tconst translated = showAutoTranslate(message);\n\n\tconst text = (translated && translations && translations[autoTranslateLanguage]) || msg.msg;\n\n\treturn {\n\t\t...msg,\n\t\tmd:\n\t\t\tisE2EEMessage(message) || isOTRMessage(message) || isOTRAckMessage(message) || translated\n\t\t\t\t? textToMessageToken(text, parseOptions)\n\t\t\t\t: msg.md ?? textToMessageToken(text, parseOptions),\n\t\t...(msg.attachments && {\n\t\t\tattachments: parseMessageAttachments(msg.attachments, parseOptions, { autoTranslateLanguage, translated }),\n\t\t}),\n\t};\n};\n\nexport const parseMessageAttachment = <T extends MessageAttachment>(\n\tattachment: T,\n\tparseOptions: Options,\n\tautoTranslateOptions: { autoTranslateLanguage?: string; translated: boolean },\n): T => {\n\tconst { translated, autoTranslateLanguage } = autoTranslateOptions;\n\tif (!attachment.text && !attachment.description) {\n\t\treturn attachment;\n\t}\n\n\tif (isQuoteAttachment(attachment) && attachment.attachments) {\n\t\tattachment.attachments = parseMessageAttachments(attachment.attachments, parseOptions, autoTranslateOptions);\n\t}\n\n\tconst text =\n\t\t(isTranslatedAttachment(attachment) && autoTranslateLanguage && attachment?.translations?.[autoTranslateLanguage]) ||\n\t\tattachment.text ||\n\t\tattachment.description ||\n\t\t'';\n\n\tif (isFileAttachment(attachment) && attachment.description) {\n\t\tattachment.descriptionMd = translated\n\t\t\t? textToMessageToken(text, parseOptions)\n\t\t\t: attachment.descriptionMd ?? textToMessageToken(text, parseOptions);\n\t}\n\n\treturn {\n\t\t...attachment,\n\t\tmd: translated ? textToMessageToken(text, parseOptions) : attachment.md ?? textToMessageToken(text, parseOptions),\n\t};\n};\n\nexport const parseMessageAttachments = <T extends MessageAttachment>(\n\tattachments: T[],\n\tparseOptions: Options,\n\tautoTranslateOptions: { autoTranslateLanguage?: string; translated: boolean },\n): T[] => attachments.map((attachment) => parseMessageAttachment(attachment, parseOptions, autoTranslateOptions));\n\nconst isNotNullOrUndefined = (value: unknown): boolean => value !== null && value !== undefined;\n\n// In a previous version of the app, some values were being set to null.\n// This is a workaround to remove those null values.\n// A migration script should be created to remove this code.\nexport const removePossibleNullMessageValues = <TMessage extends IMessage = IMessage>({\n\teditedBy,\n\teditedAt,\n\temoji,\n\tavatar,\n\talias,\n\tcustomFields,\n\tgroupable,\n\tattachments,\n\treactions,\n\t...message\n}: any): TMessage => ({\n\t...message,\n\t...(isNotNullOrUndefined(editedBy) && { editedBy }),\n\t...(isNotNullOrUndefined(editedAt) && { editedAt }),\n\t...(isNotNullOrUndefined(emoji) && { emoji }),\n\t...(isNotNullOrUndefined(avatar) && { avatar }),\n\t...(isNotNullOrUndefined(alias) && { alias }),\n\t...(isNotNullOrUndefined(customFields) && { customFields }),\n\t...(isNotNullOrUndefined(groupable) && { groupable }),\n\t...(isNotNullOrUndefined(attachments) && { attachments }),\n\t...(isNotNullOrUndefined(reactions) && { reactions }),\n});\n\nconst textToMessageToken = (textOrRoot: string | Root, parseOptions: Options): Root => {\n\tif (!textOrRoot) {\n\t\treturn [];\n\t}\n\n\tif (isParsedMessage(textOrRoot)) {\n\t\treturn textOrRoot;\n\t}\n\tconst parsedMessage = parse(textOrRoot, parseOptions);\n\n\tconst parsedMessageCleaned = parsedMessage[0].type !== 'LINE_BREAK' ? parsedMessage : (parsedMessage.slice(1) as Root);\n\n\treturn parsedMessageCleaned;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c46c98d0b7690e82d039f364187af703bf12d111"}
