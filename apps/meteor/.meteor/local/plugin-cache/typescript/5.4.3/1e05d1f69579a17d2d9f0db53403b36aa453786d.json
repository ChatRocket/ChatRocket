{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/authorization/server/functions/canSendMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/authorization/server/functions/canSendMessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/authorization/server/functions/canSendMessage.ts","inputSourceMap":{"version":3,"file":"app/authorization/server/functions/canSendMessage.ts","sourceRoot":"","sources":["app/authorization/server/functions/canSendMessage.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE3D,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AACrD,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AACrD,OAAO,EAAE,iBAAiB,EAAE,MAAM,wCAAwC,CAAC;AAC3E,OAAO,EAAE,eAAe,EAAE,MAAM,8CAA8C,CAAC;AAE/E,MAAM,mBAAmB,GAAG;IAC3B,UAAU,EAAE;QACX,OAAO,EAAE,CAAC;QACV,OAAO,EAAE,CAAC;KACV;CACD,CAAC;AAEF,MAAM,CAAC,KAAK,UAAU,mCAAmC,CACxD,IAAkB,EAClB,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAA2E,EAChG,SAA+B;IAE/B,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACvC,CAAC;IAED,IAAI,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC;QAClF,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,MAAM,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,IAAI,EAAE,iBAAiB,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC;QAC3G,MAAM,YAAY,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,mBAAmB,CAAC,CAAC;QACtG,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC;YACpE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACpC,CAAC;IACF,CAAC;IAED,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,GAAG,EAAE,eAAe,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;QACrF,uCAAuC;QACvC,IAAI,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC1D,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;QAC1E,CAAC;IACF,CAAC;IAED,IAAI,QAAQ,IAAI,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;QACjD,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;IACxC,CAAC;AACF,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,mBAAmB,CACxC,GAAiB,EACjB,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAA2E,EAChG,SAA+B;IAE/B,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC1C,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,mCAAmC,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,SAAS,CAAC,CAAC;IACpF,OAAO,IAAI,CAAC;AACb,CAAC","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Subscriptions, Rooms } from '@rocket.chat/models';\n\nimport { canAccessRoomAsync } from './canAccessRoom';\nimport { hasPermissionAsync } from './hasPermission';\nimport { RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\n\nconst subscriptionOptions = {\n\tprojection: {\n\t\tblocked: 1,\n\t\tblocker: 1,\n\t},\n};\n\nexport async function validateRoomMessagePermissionsAsync(\n\troom: IRoom | null,\n\t{ uid, username, type }: { uid: IUser['_id']; username: IUser['username']; type: IUser['type'] },\n\textraData?: Record<string, any>,\n): Promise<void> {\n\tif (!room) {\n\t\tthrow new Error('error-invalid-room');\n\t}\n\n\tif (type !== 'app' && !(await canAccessRoomAsync(room, { _id: uid }, extraData))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tif (await roomCoordinator.getRoomDirectives(room.t).allowMemberAction(room, RoomMemberActions.BLOCK, uid)) {\n\t\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(room._id, uid, subscriptionOptions);\n\t\tif (subscription && (subscription.blocked || subscription.blocker)) {\n\t\t\tthrow new Error('room_is_blocked');\n\t\t}\n\t}\n\n\tif (room.ro === true && !(await hasPermissionAsync(uid, 'post-readonly', room._id))) {\n\t\t// Unless the user was manually unmuted\n\t\tif (username && !(room.unmuted || []).includes(username)) {\n\t\t\tthrow new Error(\"You can't send messages because the room is readonly.\");\n\t\t}\n\t}\n\n\tif (username && room?.muted?.includes(username)) {\n\t\tthrow new Error('You_have_been_muted');\n\t}\n}\n\nexport async function canSendMessageAsync(\n\trid: IRoom['_id'],\n\t{ uid, username, type }: { uid: IUser['_id']; username: IUser['username']; type: IUser['type'] },\n\textraData?: Record<string, any>,\n): Promise<IRoom> {\n\tconst room = await Rooms.findOneById(rid);\n\tif (!room) {\n\t\tthrow new Error('error-invalid-room');\n\t}\n\n\tawait validateRoomMessagePermissionsAsync(room, { uid, username, type }, extraData);\n\treturn room;\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/authorization/server/functions/canSendMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/authorization/server/functions/canSendMessage.ts","inputSourceMap":{"version":3,"file":"app/authorization/server/functions/canSendMessage.ts","sourceRoot":"","sources":["app/authorization/server/functions/canSendMessage.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE3D,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AACrD,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AACrD,OAAO,EAAE,iBAAiB,EAAE,MAAM,wCAAwC,CAAC;AAC3E,OAAO,EAAE,eAAe,EAAE,MAAM,8CAA8C,CAAC;AAE/E,MAAM,mBAAmB,GAAG;IAC3B,UAAU,EAAE;QACX,OAAO,EAAE,CAAC;QACV,OAAO,EAAE,CAAC;KACV;CACD,CAAC;AAEF,MAAM,CAAC,KAAK,UAAU,mCAAmC,CACxD,IAAkB,EAClB,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAA2E,EAChG,SAA+B;IAE/B,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACvC,CAAC;IAED,IAAI,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC;QAClF,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,MAAM,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,IAAI,EAAE,iBAAiB,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC;QAC3G,MAAM,YAAY,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,mBAAmB,CAAC,CAAC;QACtG,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC;YACpE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACpC,CAAC;IACF,CAAC;IAED,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,GAAG,EAAE,eAAe,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;QACrF,uCAAuC;QACvC,IAAI,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC1D,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;QAC1E,CAAC;IACF,CAAC;IAED,IAAI,QAAQ,IAAI,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;QACjD,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;IACxC,CAAC;AACF,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,mBAAmB,CACxC,GAAiB,EACjB,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAA2E,EAChG,SAA+B;IAE/B,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC1C,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,mCAAmC,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,SAAS,CAAC,CAAC;IACpF,OAAO,IAAI,CAAC;AACb,CAAC","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Subscriptions, Rooms } from '@rocket.chat/models';\n\nimport { canAccessRoomAsync } from './canAccessRoom';\nimport { hasPermissionAsync } from './hasPermission';\nimport { RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\n\nconst subscriptionOptions = {\n\tprojection: {\n\t\tblocked: 1,\n\t\tblocker: 1,\n\t},\n};\n\nexport async function validateRoomMessagePermissionsAsync(\n\troom: IRoom | null,\n\t{ uid, username, type }: { uid: IUser['_id']; username: IUser['username']; type: IUser['type'] },\n\textraData?: Record<string, any>,\n): Promise<void> {\n\tif (!room) {\n\t\tthrow new Error('error-invalid-room');\n\t}\n\n\tif (type !== 'app' && !(await canAccessRoomAsync(room, { _id: uid }, extraData))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tif (await roomCoordinator.getRoomDirectives(room.t).allowMemberAction(room, RoomMemberActions.BLOCK, uid)) {\n\t\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(room._id, uid, subscriptionOptions);\n\t\tif (subscription && (subscription.blocked || subscription.blocker)) {\n\t\t\tthrow new Error('room_is_blocked');\n\t\t}\n\t}\n\n\tif (room.ro === true && !(await hasPermissionAsync(uid, 'post-readonly', room._id))) {\n\t\t// Unless the user was manually unmuted\n\t\tif (username && !(room.unmuted || []).includes(username)) {\n\t\t\tthrow new Error(\"You can't send messages because the room is readonly.\");\n\t\t}\n\t}\n\n\tif (username && room?.muted?.includes(username)) {\n\t\tthrow new Error('You_have_been_muted');\n\t}\n}\n\nexport async function canSendMessageAsync(\n\trid: IRoom['_id'],\n\t{ uid, username, type }: { uid: IUser['_id']; username: IUser['username']; type: IUser['type'] },\n\textraData?: Record<string, any>,\n): Promise<IRoom> {\n\tconst room = await Rooms.findOneById(rid);\n\tif (!room) {\n\t\tthrow new Error('error-invalid-room');\n\t}\n\n\tawait validateRoomMessagePermissionsAsync(room, { uid, username, type }, extraData);\n\treturn room;\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      validateRoomMessagePermissionsAsync: () => validateRoomMessagePermissionsAsync,\n      canSendMessageAsync: () => canSendMessageAsync\n    });\n    let Subscriptions, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 0);\n    let canAccessRoomAsync;\n    module.link(\"./canAccessRoom\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 1);\n    let hasPermissionAsync;\n    module.link(\"./hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 2);\n    let RoomMemberActions;\n    module.link(\"../../../../definition/IRoomTypeConfig\", {\n      RoomMemberActions(v) {\n        RoomMemberActions = v;\n      }\n    }, 3);\n    let roomCoordinator;\n    module.link(\"../../../../server/lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const subscriptionOptions = {\n      projection: {\n        blocked: 1,\n        blocker: 1\n      }\n    };\n    async function validateRoomMessagePermissionsAsync(room, _ref, extraData) {\n      var _room$muted;\n      let {\n        uid,\n        username,\n        type\n      } = _ref;\n      if (!room) {\n        throw new Error('error-invalid-room');\n      }\n      if (type !== 'app' && !(await canAccessRoomAsync(room, {\n        _id: uid\n      }, extraData))) {\n        throw new Error('error-not-allowed');\n      }\n      if (await roomCoordinator.getRoomDirectives(room.t).allowMemberAction(room, RoomMemberActions.BLOCK, uid)) {\n        const subscription = await Subscriptions.findOneByRoomIdAndUserId(room._id, uid, subscriptionOptions);\n        if (subscription && (subscription.blocked || subscription.blocker)) {\n          throw new Error('room_is_blocked');\n        }\n      }\n      if (room.ro === true && !(await hasPermissionAsync(uid, 'post-readonly', room._id))) {\n        // Unless the user was manually unmuted\n        if (username && !(room.unmuted || []).includes(username)) {\n          throw new Error(\"You can't send messages because the room is readonly.\");\n        }\n      }\n      if (username && room !== null && room !== void 0 && (_room$muted = room.muted) !== null && _room$muted !== void 0 && _room$muted.includes(username)) {\n        throw new Error('You_have_been_muted');\n      }\n    }\n    async function canSendMessageAsync(rid, _ref2, extraData) {\n      let {\n        uid,\n        username,\n        type\n      } = _ref2;\n      const room = await Rooms.findOneById(rid);\n      if (!room) {\n        throw new Error('error-invalid-room');\n      }\n      await validateRoomMessagePermissionsAsync(room, {\n        uid,\n        username,\n        type\n      }, extraData);\n      return room;\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","validateRoomMessagePermissionsAsync","canSendMessageAsync","Subscriptions","Rooms","link","v","canAccessRoomAsync","hasPermissionAsync","RoomMemberActions","roomCoordinator","__reifyWaitForDeps__","subscriptionOptions","projection","blocked","blocker","room","_ref","extraData","_room$muted","uid","username","type","Error","_id","getRoomDirectives","t","allowMemberAction","BLOCK","subscription","findOneByRoomIdAndUserId","ro","unmuted","includes","muted","rid","_ref2","findOneById","__reify_async_result__","_reifyError","self","async"],"sources":["app/authorization/server/functions/canSendMessage.ts"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Subscriptions, Rooms } from '@rocket.chat/models';\n\nimport { canAccessRoomAsync } from './canAccessRoom';\nimport { hasPermissionAsync } from './hasPermission';\nimport { RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\n\nconst subscriptionOptions = {\n\tprojection: {\n\t\tblocked: 1,\n\t\tblocker: 1,\n\t},\n};\n\nexport async function validateRoomMessagePermissionsAsync(\n\troom: IRoom | null,\n\t{ uid, username, type }: { uid: IUser['_id']; username: IUser['username']; type: IUser['type'] },\n\textraData?: Record<string, any>,\n): Promise<void> {\n\tif (!room) {\n\t\tthrow new Error('error-invalid-room');\n\t}\n\n\tif (type !== 'app' && !(await canAccessRoomAsync(room, { _id: uid }, extraData))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tif (await roomCoordinator.getRoomDirectives(room.t).allowMemberAction(room, RoomMemberActions.BLOCK, uid)) {\n\t\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(room._id, uid, subscriptionOptions);\n\t\tif (subscription && (subscription.blocked || subscription.blocker)) {\n\t\t\tthrow new Error('room_is_blocked');\n\t\t}\n\t}\n\n\tif (room.ro === true && !(await hasPermissionAsync(uid, 'post-readonly', room._id))) {\n\t\t// Unless the user was manually unmuted\n\t\tif (username && !(room.unmuted || []).includes(username)) {\n\t\t\tthrow new Error(\"You can't send messages because the room is readonly.\");\n\t\t}\n\t}\n\n\tif (username && room?.muted?.includes(username)) {\n\t\tthrow new Error('You_have_been_muted');\n\t}\n}\n\nexport async function canSendMessageAsync(\n\trid: IRoom['_id'],\n\t{ uid, username, type }: { uid: IUser['_id']; username: IUser['username']; type: IUser['type'] },\n\textraData?: Record<string, any>,\n): Promise<IRoom> {\n\tconst room = await Rooms.findOneById(rid);\n\tif (!room) {\n\t\tthrow new Error('error-invalid-room');\n\t}\n\n\tawait validateRoomMessagePermissionsAsync(room, { uid, username, type }, extraData);\n\treturn room;\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1e05d1f69579a17d2d9f0db53403b36aa453786d"}
