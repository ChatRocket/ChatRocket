{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/AutoCompleteAgent.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/AutoCompleteAgent.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/AutoCompleteAgent.tsx","inputSourceMap":{"version":3,"file":"client/components/AutoCompleteAgent.tsx","sourceRoot":"","sources":["client/components/AutoCompleteAgent.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,MAAM,uBAAuB,CAAC;AAChE,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;AAEhE,OAAO,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEvD,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAC7D,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAelE,MAAM,iBAAiB,GAAG,CAAC,EAC1B,KAAK,EACL,KAAK,EACL,WAAW,EACX,OAAO,GAAG,KAAK,EACf,0BAA0B,GAAG,KAAK,EAClC,SAAS,EACT,cAAc,GAAG,IAAI,EACrB,aAAa,GAAG,KAAK,EACrB,SAAS,GAAG,KAAK,EACjB,QAAQ,GACgB,EAAgB,EAAE;IAC1C,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,QAAQ,CAAS,EAAE,CAAC,CAAC;IAE7D,MAAM,qBAAqB,GAAG,iBAAiB,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IAEnE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,cAAc,EAAE,GAAG,aAAa,CAC7E,OAAO,CACN,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,qBAAqB,EAAE,aAAa,EAAE,OAAO,EAAE,0BAA0B,EAAE,SAAS,EAAE,cAAc,EAAE,CAAC,EACtH,CAAC,qBAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,0BAA0B,EAAE,aAAa,EAAE,cAAc,CAAC,CACtG,CACD,CAAC;IAEF,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;IAErG,OAAO,CACN,CAAC,uBAAuB,CACvB,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,WAAW,CAAC,CAAC,WAAW,CAAC,CACzB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,UAAU,CAAC,CAAC,CAAC,CAAC,CACd,MAAM,CAAC,CAAC,YAAY,CAAC,CACrB,SAAS,CAAC,CAAC,eAA+D,CAAC,CAC3E,OAAO,CAAC,CAAC,WAAW,CAAC,CACrB,OAAO,CAAC,oBAAoB,CAC5B,UAAU,CAAC,CACV,WAAW,KAAK,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,GAAS,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAQ,EAAE,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,WAAW,CAAC,CACnI,CAAC,EACA,CACF,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,IAAI,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["import { PaginatedSelectFiltered } from '@rocket.chat/fuselage';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport type { ReactElement } from 'react';\nimport React, { memo, useMemo, useState } from 'react';\n\nimport { useRecordList } from '../hooks/lists/useRecordList';\nimport { AsyncStatePhase } from '../lib/asyncState';\nimport { useAgentsList } from './Omnichannel/hooks/useAgentsList';\n\ntype AutoCompleteAgentProps = {\n\tvalue: string;\n\terror?: string;\n\tplaceholder?: string;\n\thaveAll?: boolean;\n\thaveNoAgentsSelectedOption?: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tonlyAvailable?: boolean;\n\twithTitle?: boolean;\n\tonChange: (value: string) => void;\n};\n\nconst AutoCompleteAgent = ({\n\tvalue,\n\terror,\n\tplaceholder,\n\thaveAll = false,\n\thaveNoAgentsSelectedOption = false,\n\texcludeId,\n\tshowIdleAgents = true,\n\tonlyAvailable = false,\n\twithTitle = false,\n\tonChange,\n}: AutoCompleteAgentProps): ReactElement => {\n\tconst [agentsFilter, setAgentsFilter] = useState<string>('');\n\n\tconst debouncedAgentsFilter = useDebouncedValue(agentsFilter, 500);\n\n\tconst { itemsList: AgentsList, loadMoreItems: loadMoreAgents } = useAgentsList(\n\t\tuseMemo(\n\t\t\t() => ({ text: debouncedAgentsFilter, onlyAvailable, haveAll, haveNoAgentsSelectedOption, excludeId, showIdleAgents }),\n\t\t\t[debouncedAgentsFilter, excludeId, haveAll, haveNoAgentsSelectedOption, onlyAvailable, showIdleAgents],\n\t\t),\n\t);\n\n\tconst { phase: agentsPhase, itemCount: agentsTotal, items: agentsItems } = useRecordList(AgentsList);\n\n\treturn (\n\t\t<PaginatedSelectFiltered\n\t\t\twithTitle={withTitle}\n\t\t\tvalue={value}\n\t\t\terror={error}\n\t\t\tplaceholder={placeholder}\n\t\t\tonChange={onChange}\n\t\t\tflexShrink={0}\n\t\t\tfilter={agentsFilter}\n\t\t\tsetFilter={setAgentsFilter as (value: string | number | undefined) => void}\n\t\t\toptions={agentsItems}\n\t\t\tdata-qa='autocomplete-agent'\n\t\t\tendReached={\n\t\t\t\tagentsPhase === AsyncStatePhase.LOADING ? (): void => undefined : (start): void => loadMoreAgents(start, Math.min(50, agentsTotal))\n\t\t\t}\n\t\t/>\n\t);\n};\n\nexport default memo(AutoCompleteAgent);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/AutoCompleteAgent.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/AutoCompleteAgent.tsx","inputSourceMap":{"version":3,"file":"client/components/AutoCompleteAgent.tsx","sourceRoot":"","sources":["client/components/AutoCompleteAgent.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,MAAM,uBAAuB,CAAC;AAChE,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;AAEhE,OAAO,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAEvD,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAC7D,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAelE,MAAM,iBAAiB,GAAG,CAAC,EAC1B,KAAK,EACL,KAAK,EACL,WAAW,EACX,OAAO,GAAG,KAAK,EACf,0BAA0B,GAAG,KAAK,EAClC,SAAS,EACT,cAAc,GAAG,IAAI,EACrB,aAAa,GAAG,KAAK,EACrB,SAAS,GAAG,KAAK,EACjB,QAAQ,GACgB,EAAgB,EAAE;IAC1C,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,QAAQ,CAAS,EAAE,CAAC,CAAC;IAE7D,MAAM,qBAAqB,GAAG,iBAAiB,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IAEnE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,cAAc,EAAE,GAAG,aAAa,CAC7E,OAAO,CACN,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,qBAAqB,EAAE,aAAa,EAAE,OAAO,EAAE,0BAA0B,EAAE,SAAS,EAAE,cAAc,EAAE,CAAC,EACtH,CAAC,qBAAqB,EAAE,SAAS,EAAE,OAAO,EAAE,0BAA0B,EAAE,aAAa,EAAE,cAAc,CAAC,CACtG,CACD,CAAC;IAEF,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;IAErG,OAAO,CACN,CAAC,uBAAuB,CACvB,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,WAAW,CAAC,CAAC,WAAW,CAAC,CACzB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,UAAU,CAAC,CAAC,CAAC,CAAC,CACd,MAAM,CAAC,CAAC,YAAY,CAAC,CACrB,SAAS,CAAC,CAAC,eAA+D,CAAC,CAC3E,OAAO,CAAC,CAAC,WAAW,CAAC,CACrB,OAAO,CAAC,oBAAoB,CAC5B,UAAU,CAAC,CACV,WAAW,KAAK,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,GAAS,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,EAAQ,EAAE,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,WAAW,CAAC,CACnI,CAAC,EACA,CACF,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,IAAI,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["import { PaginatedSelectFiltered } from '@rocket.chat/fuselage';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport type { ReactElement } from 'react';\nimport React, { memo, useMemo, useState } from 'react';\n\nimport { useRecordList } from '../hooks/lists/useRecordList';\nimport { AsyncStatePhase } from '../lib/asyncState';\nimport { useAgentsList } from './Omnichannel/hooks/useAgentsList';\n\ntype AutoCompleteAgentProps = {\n\tvalue: string;\n\terror?: string;\n\tplaceholder?: string;\n\thaveAll?: boolean;\n\thaveNoAgentsSelectedOption?: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tonlyAvailable?: boolean;\n\twithTitle?: boolean;\n\tonChange: (value: string) => void;\n};\n\nconst AutoCompleteAgent = ({\n\tvalue,\n\terror,\n\tplaceholder,\n\thaveAll = false,\n\thaveNoAgentsSelectedOption = false,\n\texcludeId,\n\tshowIdleAgents = true,\n\tonlyAvailable = false,\n\twithTitle = false,\n\tonChange,\n}: AutoCompleteAgentProps): ReactElement => {\n\tconst [agentsFilter, setAgentsFilter] = useState<string>('');\n\n\tconst debouncedAgentsFilter = useDebouncedValue(agentsFilter, 500);\n\n\tconst { itemsList: AgentsList, loadMoreItems: loadMoreAgents } = useAgentsList(\n\t\tuseMemo(\n\t\t\t() => ({ text: debouncedAgentsFilter, onlyAvailable, haveAll, haveNoAgentsSelectedOption, excludeId, showIdleAgents }),\n\t\t\t[debouncedAgentsFilter, excludeId, haveAll, haveNoAgentsSelectedOption, onlyAvailable, showIdleAgents],\n\t\t),\n\t);\n\n\tconst { phase: agentsPhase, itemCount: agentsTotal, items: agentsItems } = useRecordList(AgentsList);\n\n\treturn (\n\t\t<PaginatedSelectFiltered\n\t\t\twithTitle={withTitle}\n\t\t\tvalue={value}\n\t\t\terror={error}\n\t\t\tplaceholder={placeholder}\n\t\t\tonChange={onChange}\n\t\t\tflexShrink={0}\n\t\t\tfilter={agentsFilter}\n\t\t\tsetFilter={setAgentsFilter as (value: string | number | undefined) => void}\n\t\t\toptions={agentsItems}\n\t\t\tdata-qa='autocomplete-agent'\n\t\t\tendReached={\n\t\t\t\tagentsPhase === AsyncStatePhase.LOADING ? (): void => undefined : (start): void => loadMoreAgents(start, Math.min(50, agentsTotal))\n\t\t\t}\n\t\t/>\n\t);\n};\n\nexport default memo(AutoCompleteAgent);\n"]}}},"code":"let PaginatedSelectFiltered;\nmodule.link(\"@rocket.chat/fuselage\", {\n  PaginatedSelectFiltered(v) {\n    PaginatedSelectFiltered = v;\n  }\n}, 0);\nlet useDebouncedValue;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useDebouncedValue(v) {\n    useDebouncedValue = v;\n  }\n}, 1);\nlet React, memo, useMemo, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  memo(v) {\n    memo = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  },\n  useState(v) {\n    useState = v;\n  }\n}, 2);\nlet useRecordList;\nmodule.link(\"../hooks/lists/useRecordList\", {\n  useRecordList(v) {\n    useRecordList = v;\n  }\n}, 3);\nlet AsyncStatePhase;\nmodule.link(\"../lib/asyncState\", {\n  AsyncStatePhase(v) {\n    AsyncStatePhase = v;\n  }\n}, 4);\nlet useAgentsList;\nmodule.link(\"./Omnichannel/hooks/useAgentsList\", {\n  useAgentsList(v) {\n    useAgentsList = v;\n  }\n}, 5);\nconst AutoCompleteAgent = _ref => {\n  let {\n    value,\n    error,\n    placeholder,\n    haveAll = false,\n    haveNoAgentsSelectedOption = false,\n    excludeId,\n    showIdleAgents = true,\n    onlyAvailable = false,\n    withTitle = false,\n    onChange\n  } = _ref;\n  const [agentsFilter, setAgentsFilter] = useState('');\n  const debouncedAgentsFilter = useDebouncedValue(agentsFilter, 500);\n  const {\n    itemsList: AgentsList,\n    loadMoreItems: loadMoreAgents\n  } = useAgentsList(useMemo(() => ({\n    text: debouncedAgentsFilter,\n    onlyAvailable,\n    haveAll,\n    haveNoAgentsSelectedOption,\n    excludeId,\n    showIdleAgents\n  }), [debouncedAgentsFilter, excludeId, haveAll, haveNoAgentsSelectedOption, onlyAvailable, showIdleAgents]));\n  const {\n    phase: agentsPhase,\n    itemCount: agentsTotal,\n    items: agentsItems\n  } = useRecordList(AgentsList);\n  return /*#__PURE__*/React.createElement(PaginatedSelectFiltered, {\n    withTitle: withTitle,\n    value: value,\n    error: error,\n    placeholder: placeholder,\n    onChange: onChange,\n    flexShrink: 0,\n    filter: agentsFilter,\n    setFilter: setAgentsFilter,\n    options: agentsItems,\n    \"data-qa\": \"autocomplete-agent\",\n    endReached: agentsPhase === AsyncStatePhase.LOADING ? () => undefined : start => loadMoreAgents(start, Math.min(50, agentsTotal))\n  });\n};\nmodule.exportDefault( /*#__PURE__*/memo(AutoCompleteAgent));","map":{"version":3,"names":["PaginatedSelectFiltered","module","link","v","useDebouncedValue","React","memo","useMemo","useState","default","useRecordList","AsyncStatePhase","useAgentsList","AutoCompleteAgent","_ref","value","error","placeholder","haveAll","haveNoAgentsSelectedOption","excludeId","showIdleAgents","onlyAvailable","withTitle","onChange","agentsFilter","setAgentsFilter","debouncedAgentsFilter","itemsList","AgentsList","loadMoreItems","loadMoreAgents","text","phase","agentsPhase","itemCount","agentsTotal","items","agentsItems","createElement","flexShrink","filter","setFilter","options","endReached","LOADING","undefined","start","Math","min","exportDefault"],"sources":["client/components/AutoCompleteAgent.tsx"],"sourcesContent":["import { PaginatedSelectFiltered } from '@rocket.chat/fuselage';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport type { ReactElement } from 'react';\nimport React, { memo, useMemo, useState } from 'react';\n\nimport { useRecordList } from '../hooks/lists/useRecordList';\nimport { AsyncStatePhase } from '../lib/asyncState';\nimport { useAgentsList } from './Omnichannel/hooks/useAgentsList';\n\ntype AutoCompleteAgentProps = {\n\tvalue: string;\n\terror?: string;\n\tplaceholder?: string;\n\thaveAll?: boolean;\n\thaveNoAgentsSelectedOption?: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tonlyAvailable?: boolean;\n\twithTitle?: boolean;\n\tonChange: (value: string) => void;\n};\n\nconst AutoCompleteAgent = ({\n\tvalue,\n\terror,\n\tplaceholder,\n\thaveAll = false,\n\thaveNoAgentsSelectedOption = false,\n\texcludeId,\n\tshowIdleAgents = true,\n\tonlyAvailable = false,\n\twithTitle = false,\n\tonChange,\n}: AutoCompleteAgentProps): ReactElement => {\n\tconst [agentsFilter, setAgentsFilter] = useState<string>('');\n\n\tconst debouncedAgentsFilter = useDebouncedValue(agentsFilter, 500);\n\n\tconst { itemsList: AgentsList, loadMoreItems: loadMoreAgents } = useAgentsList(\n\t\tuseMemo(\n\t\t\t() => ({ text: debouncedAgentsFilter, onlyAvailable, haveAll, haveNoAgentsSelectedOption, excludeId, showIdleAgents }),\n\t\t\t[debouncedAgentsFilter, excludeId, haveAll, haveNoAgentsSelectedOption, onlyAvailable, showIdleAgents],\n\t\t),\n\t);\n\n\tconst { phase: agentsPhase, itemCount: agentsTotal, items: agentsItems } = useRecordList(AgentsList);\n\n\treturn (\n\t\t<PaginatedSelectFiltered\n\t\t\twithTitle={withTitle}\n\t\t\tvalue={value}\n\t\t\terror={error}\n\t\t\tplaceholder={placeholder}\n\t\t\tonChange={onChange}\n\t\t\tflexShrink={0}\n\t\t\tfilter={agentsFilter}\n\t\t\tsetFilter={setAgentsFilter as (value: string | number | undefined) => void}\n\t\t\toptions={agentsItems}\n\t\t\tdata-qa='autocomplete-agent'\n\t\t\tendReached={\n\t\t\t\tagentsPhase === AsyncStatePhase.LOADING ? (): void => undefined : (start): void => loadMoreAgents(start, Math.min(50, agentsTotal))\n\t\t\t}\n\t\t/>\n\t);\n};\n\nexport default memo(AutoCompleteAgent);\n"],"mappings":"AAAA,IAAAA,uBAAS;AAAAC,MAAyB,CAAAC,IAAA,CAAM,uBAAuB,EAAC;EAAAF,wBAAAG,CAAA;IAAAH,uBAAA,GAAAG,CAAA;EAAA;AAAA;AAAA,IAAAC,iBAAA;AAAAH,MAAA,CAAAC,IAAA;EAAAE,kBAAAD,CAAA;IAAAC,iBAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,KAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,QAAA;AAAAP,MAAA,CAAAC,IAAA;EAAAO,QAAAN,CAAA;IAAAE,KAAA,GAAAF,CAAA;EAAA;EAAAG,KAAAH,CAAA;IAAAG,IAAA,GAAAH,CAAA;EAAA;EAAAI,QAAAJ,CAAA;IAAAI,OAAA,GAAAJ,CAAA;EAAA;EAAAK,SAAAL,CAAA;IAAAK,QAAA,GAAAL,CAAA;EAAA;AAAA;AAAA,IAAAO,aAAA;AAAAT,MAAA,CAAAC,IAAA;EAAAQ,cAAAP,CAAA;IAAAO,aAAA,GAAAP,CAAA;EAAA;AAAA;AAAA,IAAAQ,eAAA;AAAAV,MAAA,CAAAC,IAAA;EAAAS,gBAAAR,CAAA;IAAAQ,eAAA,GAAAR,CAAA;EAAA;AAAA;AAAA,IAAAS,aAAA;AAAAX,MAAA,CAAAC,IAAA;EAAAU,cAAAT,CAAA;IAAAS,aAAA,GAAAT,CAAA;EAAA;AAAA;AAsBhE,MAAMU,iBAAiB,GAAGC,IAAA,IAWiB;EAAA,IAXhB;IAC1BC,KAAK;IACLC,KAAK;IACLC,WAAW;IACXC,OAAO,GAAG,KAAK;IACfC,0BAA0B,GAAG,KAAK;IAClCC,SAAS;IACTC,cAAc,GAAG,IAAI;IACrBC,aAAa,GAAG,KAAK;IACrBC,SAAS,GAAG,KAAK;IACjBC;EAAQ,CACgB,GAAAV,IAAA;EACxB,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAS,EAAE,CAAC;EAE5D,MAAMmB,qBAAqB,GAAGvB,iBAAiB,CAACqB,YAAY,EAAE,GAAG,CAAC;EAElE,MAAM;IAAEG,SAAS,EAAEC,UAAU;IAAEC,aAAa,EAAEC;EAAc,CAAE,GAAGnB,aAAa,CAC7EL,OAAO,CACN,OAAO;IAAEyB,IAAI,EAAEL,qBAAqB;IAAEL,aAAa;IAAEJ,OAAO;IAAEC,0BAA0B;IAAEC,SAAS;IAAEC;EAAc,CAAE,CAAC,EACtH,CAACM,qBAAqB,EAAEP,SAAS,EAAEF,OAAO,EAAEC,0BAA0B,EAAEG,aAAa,EAAED,cAAc,CAAC,CACtG,CACD;EAED,MAAM;IAAEY,KAAK,EAAEC,WAAW;IAAEC,SAAS,EAAEC,WAAW;IAAEC,KAAK,EAAEC;EAAW,CAAE,GAAG5B,aAAa,CAACmB,UAAU,CAAC;EAEpG,oBACCxB,KAAA,CAAAkC,aAAA,CAACvC,uBAAuB;IACvBuB,SAAS,EAAEA,SAAU;IACrBR,KAAK,EAAEA,KAAM;IACbC,KAAK,EAAEA,KAAM;IACbC,WAAW,EAAEA,WAAY;IACzBO,QAAQ,EAAEA,QAAS;IACnBgB,UAAU,EAAE,CAAE;IACdC,MAAM,EAAEhB,YAAa;IACrBiB,SAAS,EAAEhB,eAAgE;IAC3EiB,OAAO,EAAEL,WAAY;IACrB,WAAQ,oBAAoB;IAC5BM,UAAU,EACTV,WAAW,KAAKvB,eAAe,CAACkC,OAAO,GAAG,MAAYC,SAAS,GAAIC,KAAK,IAAWhB,cAAc,CAACgB,KAAK,EAAEC,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEb,WAAW,CAAC;EAClI,EACA;AAEJ,CAAC;AAhEDnC,MAAA,CAAOiD,aAAE,eAkEM5C,IAAI,CAACO,iBAAiB,CAlE5B","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9f558697880dd1319e1373b09c881f502a7f81ff"}
