{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/UserAutoCompleteMultiple/UserAutoCompleteMultipleFederated.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/UserAutoCompleteMultiple/UserAutoCompleteMultipleFederated.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/UserAutoCompleteMultiple/UserAutoCompleteMultipleFederated.tsx","inputSourceMap":{"version":3,"file":"client/components/UserAutoCompleteMultiple/UserAutoCompleteMultipleFederated.tsx","sourceRoot":"","sources":["client/components/UserAutoCompleteMultiple/UserAutoCompleteMultipleFederated.tsx"],"names":[],"mappings":"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","sourcesContent":["import { MultiSelectFiltered, Icon, Box, Chip } from '@rocket.chat/fuselage';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport { UserAvatar } from '@rocket.chat/ui-avatar';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement, AllHTMLAttributes } from 'react';\nimport React, { memo, useState, useCallback, useMemo } from 'react';\n\nimport AutocompleteOptions, { OptionsContext } from './UserAutoCompleteMultipleOptions';\n\ntype UserAutoCompleteMultipleFederatedProps = {\n\tonChange: (value: Array<string>) => void;\n\tvalue: Array<string>;\n\tplaceholder?: string;\n} & Omit<AllHTMLAttributes<HTMLElement>, 'is' | 'onChange'>;\n\ntype UserAutoCompleteOptionType = {\n\tname: string;\n\tusername: string;\n\t_federated?: boolean;\n};\n\ntype UserAutoCompleteOptions = {\n\t[k: string]: UserAutoCompleteOptionType;\n};\n\nconst matrixRegex = new RegExp('@(.*:.*)');\n\nconst UserAutoCompleteMultipleFederated = ({\n\tonChange,\n\tvalue,\n\tplaceholder,\n\t...props\n}: UserAutoCompleteMultipleFederatedProps): ReactElement => {\n\tconst [filter, setFilter] = useState('');\n\tconst [selectedCache, setSelectedCache] = useState<UserAutoCompleteOptions>({});\n\n\tconst debouncedFilter = useDebouncedValue(filter, 500);\n\tconst getUsers = useEndpoint('GET', '/v1/users.autocomplete');\n\n\tconst { data } = useQuery(\n\t\t['users.autocomplete', debouncedFilter],\n\t\tasync () => {\n\t\t\tconst users = await getUsers({ selector: JSON.stringify({ term: debouncedFilter }) });\n\t\t\tconst options = users.items.map((item): [string, UserAutoCompleteOptionType] => [item.username, item]);\n\n\t\t\t// Add extra option if filter text matches `username:server`\n\t\t\t// Used to add federated users that do not exist yet\n\t\t\tif (matrixRegex.test(debouncedFilter)) {\n\t\t\t\toptions.unshift([debouncedFilter, { name: debouncedFilter, username: debouncedFilter, _federated: true }]);\n\t\t\t}\n\n\t\t\treturn options;\n\t\t},\n\t\t{ keepPreviousData: true },\n\t);\n\n\tconst options = useMemo(() => data || [], [data]);\n\n\tconst onAddUser = useCallback(\n\t\t(username: string): void => {\n\t\t\tconst user = options.find(([val]) => val === username)?.[1];\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('UserAutoCompleteMultiple - onAddSelected - failed to cache option');\n\t\t\t}\n\t\t\tsetSelectedCache((selectedCache) => ({ ...selectedCache, [username]: user }));\n\t\t},\n\t\t[setSelectedCache, options],\n\t);\n\n\tconst onRemoveUser = useCallback(\n\t\t(username: string): void =>\n\t\t\tsetSelectedCache((selectedCache) => {\n\t\t\t\tconst users = { ...selectedCache };\n\t\t\t\tdelete users[username];\n\t\t\t\treturn users;\n\t\t\t}),\n\t\t[setSelectedCache],\n\t);\n\n\tconst handleOnChange = useCallback(\n\t\t(usernames: string[]) => {\n\t\t\tonChange(usernames);\n\t\t\tconst newAddedUsername = usernames.filter((username) => !value.includes(username))[0];\n\t\t\tconst removedUsername = value.filter((username) => !usernames.includes(username))[0];\n\t\t\tsetFilter('');\n\t\t\tnewAddedUsername && onAddUser(newAddedUsername);\n\t\t\tremovedUsername && onRemoveUser(removedUsername);\n\t\t},\n\t\t[onChange, setFilter, onAddUser, onRemoveUser, value],\n\t);\n\n\treturn (\n\t\t<OptionsContext.Provider value={{ options }}>\n\t\t\t<MultiSelectFiltered\n\t\t\t\t{...props}\n\t\t\t\tdata-qa-type='user-auto-complete-input'\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleOnChange}\n\t\t\t\tfilter={filter}\n\t\t\t\tsetFilter={setFilter}\n\t\t\t\trenderSelected={({ value, onMouseDown }: { value: string; onMouseDown: () => void }) => {\n\t\t\t\t\tconst currentCachedOption = selectedCache[value] || {};\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Chip key={value} height='x20' onMouseDown={onMouseDown} mie={4} mb={2}>\n\t\t\t\t\t\t\t{currentCachedOption._federated ? <Icon size='x20' name='globe' /> : <UserAvatar size='x20' username={value} />}\n\t\t\t\t\t\t\t<Box is='span' margin='none' mis={4}>\n\t\t\t\t\t\t\t\t{currentCachedOption.name || currentCachedOption.username || value}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Chip>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t\trenderOptions={AutocompleteOptions}\n\t\t\t\toptions={options.concat(Object.entries(selectedCache)).map(([, item]) => [item.username, item.name || item.username])}\n\t\t\t\tdata-qa='create-channel-users-autocomplete'\n\t\t\t/>\n\t\t</OptionsContext.Provider>\n\t);\n};\n\nexport default memo(UserAutoCompleteMultipleFederated);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/UserAutoCompleteMultiple/UserAutoCompleteMultipleFederated.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/UserAutoCompleteMultiple/UserAutoCompleteMultipleFederated.tsx","inputSourceMap":{"version":3,"file":"client/components/UserAutoCompleteMultiple/UserAutoCompleteMultipleFederated.tsx","sourceRoot":"","sources":["client/components/UserAutoCompleteMultiple/UserAutoCompleteMultipleFederated.tsx"],"names":[],"mappings":"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","sourcesContent":["import { MultiSelectFiltered, Icon, Box, Chip } from '@rocket.chat/fuselage';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport { UserAvatar } from '@rocket.chat/ui-avatar';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement, AllHTMLAttributes } from 'react';\nimport React, { memo, useState, useCallback, useMemo } from 'react';\n\nimport AutocompleteOptions, { OptionsContext } from './UserAutoCompleteMultipleOptions';\n\ntype UserAutoCompleteMultipleFederatedProps = {\n\tonChange: (value: Array<string>) => void;\n\tvalue: Array<string>;\n\tplaceholder?: string;\n} & Omit<AllHTMLAttributes<HTMLElement>, 'is' | 'onChange'>;\n\ntype UserAutoCompleteOptionType = {\n\tname: string;\n\tusername: string;\n\t_federated?: boolean;\n};\n\ntype UserAutoCompleteOptions = {\n\t[k: string]: UserAutoCompleteOptionType;\n};\n\nconst matrixRegex = new RegExp('@(.*:.*)');\n\nconst UserAutoCompleteMultipleFederated = ({\n\tonChange,\n\tvalue,\n\tplaceholder,\n\t...props\n}: UserAutoCompleteMultipleFederatedProps): ReactElement => {\n\tconst [filter, setFilter] = useState('');\n\tconst [selectedCache, setSelectedCache] = useState<UserAutoCompleteOptions>({});\n\n\tconst debouncedFilter = useDebouncedValue(filter, 500);\n\tconst getUsers = useEndpoint('GET', '/v1/users.autocomplete');\n\n\tconst { data } = useQuery(\n\t\t['users.autocomplete', debouncedFilter],\n\t\tasync () => {\n\t\t\tconst users = await getUsers({ selector: JSON.stringify({ term: debouncedFilter }) });\n\t\t\tconst options = users.items.map((item): [string, UserAutoCompleteOptionType] => [item.username, item]);\n\n\t\t\t// Add extra option if filter text matches `username:server`\n\t\t\t// Used to add federated users that do not exist yet\n\t\t\tif (matrixRegex.test(debouncedFilter)) {\n\t\t\t\toptions.unshift([debouncedFilter, { name: debouncedFilter, username: debouncedFilter, _federated: true }]);\n\t\t\t}\n\n\t\t\treturn options;\n\t\t},\n\t\t{ keepPreviousData: true },\n\t);\n\n\tconst options = useMemo(() => data || [], [data]);\n\n\tconst onAddUser = useCallback(\n\t\t(username: string): void => {\n\t\t\tconst user = options.find(([val]) => val === username)?.[1];\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('UserAutoCompleteMultiple - onAddSelected - failed to cache option');\n\t\t\t}\n\t\t\tsetSelectedCache((selectedCache) => ({ ...selectedCache, [username]: user }));\n\t\t},\n\t\t[setSelectedCache, options],\n\t);\n\n\tconst onRemoveUser = useCallback(\n\t\t(username: string): void =>\n\t\t\tsetSelectedCache((selectedCache) => {\n\t\t\t\tconst users = { ...selectedCache };\n\t\t\t\tdelete users[username];\n\t\t\t\treturn users;\n\t\t\t}),\n\t\t[setSelectedCache],\n\t);\n\n\tconst handleOnChange = useCallback(\n\t\t(usernames: string[]) => {\n\t\t\tonChange(usernames);\n\t\t\tconst newAddedUsername = usernames.filter((username) => !value.includes(username))[0];\n\t\t\tconst removedUsername = value.filter((username) => !usernames.includes(username))[0];\n\t\t\tsetFilter('');\n\t\t\tnewAddedUsername && onAddUser(newAddedUsername);\n\t\t\tremovedUsername && onRemoveUser(removedUsername);\n\t\t},\n\t\t[onChange, setFilter, onAddUser, onRemoveUser, value],\n\t);\n\n\treturn (\n\t\t<OptionsContext.Provider value={{ options }}>\n\t\t\t<MultiSelectFiltered\n\t\t\t\t{...props}\n\t\t\t\tdata-qa-type='user-auto-complete-input'\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleOnChange}\n\t\t\t\tfilter={filter}\n\t\t\t\tsetFilter={setFilter}\n\t\t\t\trenderSelected={({ value, onMouseDown }: { value: string; onMouseDown: () => void }) => {\n\t\t\t\t\tconst currentCachedOption = selectedCache[value] || {};\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Chip key={value} height='x20' onMouseDown={onMouseDown} mie={4} mb={2}>\n\t\t\t\t\t\t\t{currentCachedOption._federated ? <Icon size='x20' name='globe' /> : <UserAvatar size='x20' username={value} />}\n\t\t\t\t\t\t\t<Box is='span' margin='none' mis={4}>\n\t\t\t\t\t\t\t\t{currentCachedOption.name || currentCachedOption.username || value}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Chip>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t\trenderOptions={AutocompleteOptions}\n\t\t\t\toptions={options.concat(Object.entries(selectedCache)).map(([, item]) => [item.username, item.name || item.username])}\n\t\t\t\tdata-qa='create-channel-users-autocomplete'\n\t\t\t/>\n\t\t</OptionsContext.Provider>\n\t);\n};\n\nexport default memo(UserAutoCompleteMultipleFederated);\n"]}}},"code":"const _excluded = [\"onChange\", \"value\", \"placeholder\"];\nlet _extends;\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n}, 0);\nlet _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 1);\nlet _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n}, 2);\nlet MultiSelectFiltered, Icon, Box, Chip;\nmodule.link(\"@rocket.chat/fuselage\", {\n  MultiSelectFiltered(v) {\n    MultiSelectFiltered = v;\n  },\n  Icon(v) {\n    Icon = v;\n  },\n  Box(v) {\n    Box = v;\n  },\n  Chip(v) {\n    Chip = v;\n  }\n}, 0);\nlet useDebouncedValue;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useDebouncedValue(v) {\n    useDebouncedValue = v;\n  }\n}, 1);\nlet UserAvatar;\nmodule.link(\"@rocket.chat/ui-avatar\", {\n  UserAvatar(v) {\n    UserAvatar = v;\n  }\n}, 2);\nlet useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n}, 3);\nlet useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  }\n}, 4);\nlet React, memo, useState, useCallback, useMemo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  memo(v) {\n    memo = v;\n  },\n  useState(v) {\n    useState = v;\n  },\n  useCallback(v) {\n    useCallback = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 5);\nlet AutocompleteOptions, OptionsContext;\nmodule.link(\"./UserAutoCompleteMultipleOptions\", {\n  default(v) {\n    AutocompleteOptions = v;\n  },\n  OptionsContext(v) {\n    OptionsContext = v;\n  }\n}, 6);\nconst matrixRegex = new RegExp('@(.*:.*)');\nconst UserAutoCompleteMultipleFederated = _ref => {\n  let {\n      onChange,\n      value,\n      placeholder\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const [filter, setFilter] = useState('');\n  const [selectedCache, setSelectedCache] = useState({});\n  const debouncedFilter = useDebouncedValue(filter, 500);\n  const getUsers = useEndpoint('GET', '/v1/users.autocomplete');\n  const {\n    data\n  } = useQuery(['users.autocomplete', debouncedFilter], async () => {\n    const users = await getUsers({\n      selector: JSON.stringify({\n        term: debouncedFilter\n      })\n    });\n    const options = users.items.map(item => [item.username, item]);\n    // Add extra option if filter text matches `username:server`\n    // Used to add federated users that do not exist yet\n    if (matrixRegex.test(debouncedFilter)) {\n      options.unshift([debouncedFilter, {\n        name: debouncedFilter,\n        username: debouncedFilter,\n        _federated: true\n      }]);\n    }\n    return options;\n  }, {\n    keepPreviousData: true\n  });\n  const options = useMemo(() => data || [], [data]);\n  const onAddUser = useCallback(username => {\n    var _options$find;\n    const user = (_options$find = options.find(_ref2 => {\n      let [val] = _ref2;\n      return val === username;\n    })) === null || _options$find === void 0 ? void 0 : _options$find[1];\n    if (!user) {\n      throw new Error('UserAutoCompleteMultiple - onAddSelected - failed to cache option');\n    }\n    setSelectedCache(selectedCache => _objectSpread(_objectSpread({}, selectedCache), {}, {\n      [username]: user\n    }));\n  }, [setSelectedCache, options]);\n  const onRemoveUser = useCallback(username => setSelectedCache(selectedCache => {\n    const users = _objectSpread({}, selectedCache);\n    delete users[username];\n    return users;\n  }), [setSelectedCache]);\n  const handleOnChange = useCallback(usernames => {\n    onChange(usernames);\n    const newAddedUsername = usernames.filter(username => !value.includes(username))[0];\n    const removedUsername = value.filter(username => !usernames.includes(username))[0];\n    setFilter('');\n    newAddedUsername && onAddUser(newAddedUsername);\n    removedUsername && onRemoveUser(removedUsername);\n  }, [onChange, setFilter, onAddUser, onRemoveUser, value]);\n  return /*#__PURE__*/React.createElement(OptionsContext.Provider, {\n    value: {\n      options\n    }\n  }, /*#__PURE__*/React.createElement(MultiSelectFiltered, _extends({}, props, {\n    \"data-qa-type\": \"user-auto-complete-input\",\n    placeholder: placeholder,\n    value: value,\n    onChange: handleOnChange,\n    filter: filter,\n    setFilter: setFilter,\n    renderSelected: _ref3 => {\n      let {\n        value,\n        onMouseDown\n      } = _ref3;\n      const currentCachedOption = selectedCache[value] || {};\n      return /*#__PURE__*/React.createElement(Chip, {\n        key: value,\n        height: \"x20\",\n        onMouseDown: onMouseDown,\n        mie: 4,\n        mb: 2\n      }, currentCachedOption._federated ? /*#__PURE__*/React.createElement(Icon, {\n        size: \"x20\",\n        name: \"globe\"\n      }) : /*#__PURE__*/React.createElement(UserAvatar, {\n        size: \"x20\",\n        username: value\n      }), /*#__PURE__*/React.createElement(Box, {\n        is: \"span\",\n        margin: \"none\",\n        mis: 4\n      }, currentCachedOption.name || currentCachedOption.username || value));\n    },\n    renderOptions: AutocompleteOptions,\n    options: options.concat(Object.entries(selectedCache)).map(_ref4 => {\n      let [, item] = _ref4;\n      return [item.username, item.name || item.username];\n    }),\n    \"data-qa\": \"create-channel-users-autocomplete\"\n  })));\n};\nmodule.exportDefault( /*#__PURE__*/memo(UserAutoCompleteMultipleFederated));","map":{"version":3,"names":["_extends","module","link","default","v","_objectSpread","_objectWithoutProperties","MultiSelectFiltered","Icon","Box","Chip","useDebouncedValue","UserAvatar","useEndpoint","useQuery","React","memo","useState","useCallback","useMemo","AutocompleteOptions","OptionsContext","matrixRegex","RegExp","UserAutoCompleteMultipleFederated","_ref","onChange","value","placeholder","props","_excluded","filter","setFilter","selectedCache","setSelectedCache","debouncedFilter","getUsers","data","users","selector","JSON","stringify","term","options","items","map","item","username","test","unshift","name","_federated","keepPreviousData","onAddUser","_options$find","user","find","_ref2","val","Error","onRemoveUser","handleOnChange","usernames","newAddedUsername","includes","removedUsername","createElement","Provider","renderSelected","_ref3","onMouseDown","currentCachedOption","key","height","mie","mb","size","is","margin","mis","renderOptions","concat","Object","entries","_ref4","exportDefault"],"sources":["client/components/UserAutoCompleteMultiple/UserAutoCompleteMultipleFederated.tsx"],"sourcesContent":["import { MultiSelectFiltered, Icon, Box, Chip } from '@rocket.chat/fuselage';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport { UserAvatar } from '@rocket.chat/ui-avatar';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement, AllHTMLAttributes } from 'react';\nimport React, { memo, useState, useCallback, useMemo } from 'react';\n\nimport AutocompleteOptions, { OptionsContext } from './UserAutoCompleteMultipleOptions';\n\ntype UserAutoCompleteMultipleFederatedProps = {\n\tonChange: (value: Array<string>) => void;\n\tvalue: Array<string>;\n\tplaceholder?: string;\n} & Omit<AllHTMLAttributes<HTMLElement>, 'is' | 'onChange'>;\n\ntype UserAutoCompleteOptionType = {\n\tname: string;\n\tusername: string;\n\t_federated?: boolean;\n};\n\ntype UserAutoCompleteOptions = {\n\t[k: string]: UserAutoCompleteOptionType;\n};\n\nconst matrixRegex = new RegExp('@(.*:.*)');\n\nconst UserAutoCompleteMultipleFederated = ({\n\tonChange,\n\tvalue,\n\tplaceholder,\n\t...props\n}: UserAutoCompleteMultipleFederatedProps): ReactElement => {\n\tconst [filter, setFilter] = useState('');\n\tconst [selectedCache, setSelectedCache] = useState<UserAutoCompleteOptions>({});\n\n\tconst debouncedFilter = useDebouncedValue(filter, 500);\n\tconst getUsers = useEndpoint('GET', '/v1/users.autocomplete');\n\n\tconst { data } = useQuery(\n\t\t['users.autocomplete', debouncedFilter],\n\t\tasync () => {\n\t\t\tconst users = await getUsers({ selector: JSON.stringify({ term: debouncedFilter }) });\n\t\t\tconst options = users.items.map((item): [string, UserAutoCompleteOptionType] => [item.username, item]);\n\n\t\t\t// Add extra option if filter text matches `username:server`\n\t\t\t// Used to add federated users that do not exist yet\n\t\t\tif (matrixRegex.test(debouncedFilter)) {\n\t\t\t\toptions.unshift([debouncedFilter, { name: debouncedFilter, username: debouncedFilter, _federated: true }]);\n\t\t\t}\n\n\t\t\treturn options;\n\t\t},\n\t\t{ keepPreviousData: true },\n\t);\n\n\tconst options = useMemo(() => data || [], [data]);\n\n\tconst onAddUser = useCallback(\n\t\t(username: string): void => {\n\t\t\tconst user = options.find(([val]) => val === username)?.[1];\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('UserAutoCompleteMultiple - onAddSelected - failed to cache option');\n\t\t\t}\n\t\t\tsetSelectedCache((selectedCache) => ({ ...selectedCache, [username]: user }));\n\t\t},\n\t\t[setSelectedCache, options],\n\t);\n\n\tconst onRemoveUser = useCallback(\n\t\t(username: string): void =>\n\t\t\tsetSelectedCache((selectedCache) => {\n\t\t\t\tconst users = { ...selectedCache };\n\t\t\t\tdelete users[username];\n\t\t\t\treturn users;\n\t\t\t}),\n\t\t[setSelectedCache],\n\t);\n\n\tconst handleOnChange = useCallback(\n\t\t(usernames: string[]) => {\n\t\t\tonChange(usernames);\n\t\t\tconst newAddedUsername = usernames.filter((username) => !value.includes(username))[0];\n\t\t\tconst removedUsername = value.filter((username) => !usernames.includes(username))[0];\n\t\t\tsetFilter('');\n\t\t\tnewAddedUsername && onAddUser(newAddedUsername);\n\t\t\tremovedUsername && onRemoveUser(removedUsername);\n\t\t},\n\t\t[onChange, setFilter, onAddUser, onRemoveUser, value],\n\t);\n\n\treturn (\n\t\t<OptionsContext.Provider value={{ options }}>\n\t\t\t<MultiSelectFiltered\n\t\t\t\t{...props}\n\t\t\t\tdata-qa-type='user-auto-complete-input'\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleOnChange}\n\t\t\t\tfilter={filter}\n\t\t\t\tsetFilter={setFilter}\n\t\t\t\trenderSelected={({ value, onMouseDown }: { value: string; onMouseDown: () => void }) => {\n\t\t\t\t\tconst currentCachedOption = selectedCache[value] || {};\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Chip key={value} height='x20' onMouseDown={onMouseDown} mie={4} mb={2}>\n\t\t\t\t\t\t\t{currentCachedOption._federated ? <Icon size='x20' name='globe' /> : <UserAvatar size='x20' username={value} />}\n\t\t\t\t\t\t\t<Box is='span' margin='none' mis={4}>\n\t\t\t\t\t\t\t\t{currentCachedOption.name || currentCachedOption.username || value}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Chip>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t\trenderOptions={AutocompleteOptions}\n\t\t\t\toptions={options.concat(Object.entries(selectedCache)).map(([, item]) => [item.username, item.name || item.username])}\n\t\t\t\tdata-qa='create-channel-users-autocomplete'\n\t\t\t/>\n\t\t</OptionsContext.Provider>\n\t);\n};\n\nexport default memo(UserAutoCompleteMultipleFederated);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"73757053a423a70eacca87a3fd690bc6bc38703d"}
