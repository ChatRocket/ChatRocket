{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/authorization/service.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/authorization/service.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/authorization/service.ts","inputSourceMap":{"version":3,"file":"server/services/authorization/service.ts","sourceRoot":"","sources":["server/services/authorization/service.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAuthorization, RoomAccessValidator } from '@rocket.chat/core-services';\nimport { License, ServiceClass } from '@rocket.chat/core-services';\nimport type { IUser, IRole, IRoom, ISubscription, IRocketChatRecord } from '@rocket.chat/core-typings';\nimport { Subscriptions, Rooms, Users, Roles, Permissions } from '@rocket.chat/models';\nimport mem, { memClear } from 'mem';\n\nimport { AuthorizationUtils } from '../../../app/authorization/lib/AuthorizationUtils';\nimport { canAccessRoom } from './canAccessRoom';\n\nimport './canAccessRoomLivechat';\n\n// Register as class\nexport class Authorization extends ServiceClass implements IAuthorization {\n\tprotected name = 'authorization';\n\n\tprivate getRolesCached = mem(this.getRoles.bind(this), {\n\t\tmaxAge: 1000,\n\t\tcacheKey: JSON.stringify,\n\t});\n\n\tprivate rolesHasPermissionCached = mem(this.rolesHasPermission.bind(this), {\n\t\tcacheKey: JSON.stringify,\n\t\t...(process.env.TEST_MODE === 'true' && { maxAge: 1 }),\n\t});\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst clearCache = (): void => {\n\t\t\tmemClear(this.getRolesCached);\n\t\t\tmemClear(this.rolesHasPermissionCached);\n\t\t};\n\n\t\tthis.onEvent('watch.roles', clearCache);\n\t\tthis.onEvent('permission.changed', clearCache);\n\t\tthis.onEvent('authorization.guestPermissions', (permissions: string[]) => {\n\t\t\tAuthorizationUtils.addRolePermissionWhiteList('guest', permissions);\n\t\t});\n\t}\n\n\tasync started(): Promise<void> {\n\t\ttry {\n\t\t\tif (!(await License.hasValidLicense())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst permissions = await License.getGuestPermissions();\n\t\t\tif (!permissions) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tAuthorizationUtils.addRolePermissionWhiteList('guest', permissions);\n\t\t} catch (error) {\n\t\t\tconsole.error('Authorization Service did not start correctly', error);\n\t\t}\n\t}\n\n\tasync hasAllPermission(userId: string, permissions: string[], scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.all(userId, permissions, scope);\n\t}\n\n\tasync hasPermission(userId: string, permissionId: string, scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.all(userId, [permissionId], scope);\n\t}\n\n\tasync hasAtLeastOnePermission(userId: string, permissions: string[], scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.atLeastOne(userId, permissions, scope);\n\t}\n\n\tasync canAccessRoom(...args: Parameters<RoomAccessValidator>): Promise<boolean> {\n\t\treturn canAccessRoom(...args);\n\t}\n\n\tasync canAccessRoomId(rid: IRoom['_id'], uid: IUser['_id']): Promise<boolean> {\n\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 't' | 'teamId' | 'prid'>>(rid, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tt: 1,\n\t\t\t\tteamId: 1,\n\t\t\t\tprid: 1,\n\t\t\t},\n\t\t});\n\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.canAccessRoom(room, { _id: uid });\n\t}\n\n\tasync addRoleRestrictions(role: IRole['_id'], permissions: string[]): Promise<void> {\n\t\tAuthorizationUtils.addRolePermissionWhiteList(role, permissions);\n\t}\n\n\tasync getUsersFromPublicRoles(): Promise<(IRocketChatRecord & Pick<IUser, '_id' | 'username' | 'roles'>)[]> {\n\t\tconst roleIds = await this.getPublicRoles();\n\n\t\treturn this.getUserFromRoles(roleIds);\n\t}\n\n\tprivate getPublicRoles = mem(\n\t\tasync (): Promise<string[]> => {\n\t\t\tconst roles = await Roles.find<Pick<IRole, '_id'>>(\n\t\t\t\t{ scope: 'Users', description: { $exists: true, $ne: '' } },\n\t\t\t\t{ projection: { _id: 1 } },\n\t\t\t).toArray();\n\n\t\t\treturn roles.map(({ _id }) => _id);\n\t\t},\n\t\t{ maxAge: 10000 },\n\t);\n\n\tprivate getUserFromRoles = mem(\n\t\tasync (roleIds: string[]) => {\n\t\t\tconst options = {\n\t\t\t\tsort: {\n\t\t\t\t\tusername: 1,\n\t\t\t\t},\n\t\t\t\tprojection: {\n\t\t\t\t\tusername: 1,\n\t\t\t\t\troles: 1,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst users = await Users.findUsersInRoles(roleIds, null, options).toArray();\n\n\t\t\treturn users.map((user) => ({\n\t\t\t\t...user,\n\t\t\t\troles: user.roles.filter((roleId: string) => roleIds.includes(roleId)),\n\t\t\t}));\n\t\t},\n\t\t{ maxAge: 10000 },\n\t);\n\n\tprivate async rolesHasPermission(permission: string, roles: IRole['_id'][]): Promise<boolean> {\n\t\tif (AuthorizationUtils.isPermissionRestrictedForRoleList(permission, roles)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst result = await Permissions.findOne({ _id: permission, roles: { $in: roles } }, { projection: { _id: 1 } });\n\t\treturn !!result;\n\t}\n\n\tprivate async getRoles(uid: string, scope?: IRoom['_id']): Promise<string[]> {\n\t\tconst { roles: userRoles = [] } = (await Users.findOneById(uid, { projection: { roles: 1 } })) || {};\n\t\tconst { roles: subscriptionsRoles = [] } =\n\t\t\t(scope &&\n\t\t\t\t(await Subscriptions.findOne<Pick<ISubscription, 'roles'>>({ 'rid': scope, 'u._id': uid }, { projection: { roles: 1 } }))) ||\n\t\t\t{};\n\t\treturn [...userRoles, ...subscriptionsRoles].sort((a, b) => a.localeCompare(b));\n\t}\n\n\tprivate async atLeastOne(uid: string, permissions: string[] = [], scope?: string): Promise<boolean> {\n\t\tconst sortedRoles = await this.getRolesCached(uid, scope);\n\t\tfor await (const permission of permissions) {\n\t\t\tif (await this.rolesHasPermissionCached(permission, sortedRoles)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate async all(uid: string, permissions: string[] = [], scope?: string): Promise<boolean> {\n\t\tconst sortedRoles = await this.getRolesCached(uid, scope);\n\t\tfor await (const permission of permissions) {\n\t\t\tif (!(await this.rolesHasPermissionCached(permission, sortedRoles))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/authorization/service.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/authorization/service.ts","inputSourceMap":{"version":3,"file":"server/services/authorization/service.ts","sourceRoot":"","sources":["server/services/authorization/service.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAuthorization, RoomAccessValidator } from '@rocket.chat/core-services';\nimport { License, ServiceClass } from '@rocket.chat/core-services';\nimport type { IUser, IRole, IRoom, ISubscription, IRocketChatRecord } from '@rocket.chat/core-typings';\nimport { Subscriptions, Rooms, Users, Roles, Permissions } from '@rocket.chat/models';\nimport mem, { memClear } from 'mem';\n\nimport { AuthorizationUtils } from '../../../app/authorization/lib/AuthorizationUtils';\nimport { canAccessRoom } from './canAccessRoom';\n\nimport './canAccessRoomLivechat';\n\n// Register as class\nexport class Authorization extends ServiceClass implements IAuthorization {\n\tprotected name = 'authorization';\n\n\tprivate getRolesCached = mem(this.getRoles.bind(this), {\n\t\tmaxAge: 1000,\n\t\tcacheKey: JSON.stringify,\n\t});\n\n\tprivate rolesHasPermissionCached = mem(this.rolesHasPermission.bind(this), {\n\t\tcacheKey: JSON.stringify,\n\t\t...(process.env.TEST_MODE === 'true' && { maxAge: 1 }),\n\t});\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst clearCache = (): void => {\n\t\t\tmemClear(this.getRolesCached);\n\t\t\tmemClear(this.rolesHasPermissionCached);\n\t\t};\n\n\t\tthis.onEvent('watch.roles', clearCache);\n\t\tthis.onEvent('permission.changed', clearCache);\n\t\tthis.onEvent('authorization.guestPermissions', (permissions: string[]) => {\n\t\t\tAuthorizationUtils.addRolePermissionWhiteList('guest', permissions);\n\t\t});\n\t}\n\n\tasync started(): Promise<void> {\n\t\ttry {\n\t\t\tif (!(await License.hasValidLicense())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst permissions = await License.getGuestPermissions();\n\t\t\tif (!permissions) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tAuthorizationUtils.addRolePermissionWhiteList('guest', permissions);\n\t\t} catch (error) {\n\t\t\tconsole.error('Authorization Service did not start correctly', error);\n\t\t}\n\t}\n\n\tasync hasAllPermission(userId: string, permissions: string[], scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.all(userId, permissions, scope);\n\t}\n\n\tasync hasPermission(userId: string, permissionId: string, scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.all(userId, [permissionId], scope);\n\t}\n\n\tasync hasAtLeastOnePermission(userId: string, permissions: string[], scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.atLeastOne(userId, permissions, scope);\n\t}\n\n\tasync canAccessRoom(...args: Parameters<RoomAccessValidator>): Promise<boolean> {\n\t\treturn canAccessRoom(...args);\n\t}\n\n\tasync canAccessRoomId(rid: IRoom['_id'], uid: IUser['_id']): Promise<boolean> {\n\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 't' | 'teamId' | 'prid'>>(rid, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tt: 1,\n\t\t\t\tteamId: 1,\n\t\t\t\tprid: 1,\n\t\t\t},\n\t\t});\n\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.canAccessRoom(room, { _id: uid });\n\t}\n\n\tasync addRoleRestrictions(role: IRole['_id'], permissions: string[]): Promise<void> {\n\t\tAuthorizationUtils.addRolePermissionWhiteList(role, permissions);\n\t}\n\n\tasync getUsersFromPublicRoles(): Promise<(IRocketChatRecord & Pick<IUser, '_id' | 'username' | 'roles'>)[]> {\n\t\tconst roleIds = await this.getPublicRoles();\n\n\t\treturn this.getUserFromRoles(roleIds);\n\t}\n\n\tprivate getPublicRoles = mem(\n\t\tasync (): Promise<string[]> => {\n\t\t\tconst roles = await Roles.find<Pick<IRole, '_id'>>(\n\t\t\t\t{ scope: 'Users', description: { $exists: true, $ne: '' } },\n\t\t\t\t{ projection: { _id: 1 } },\n\t\t\t).toArray();\n\n\t\t\treturn roles.map(({ _id }) => _id);\n\t\t},\n\t\t{ maxAge: 10000 },\n\t);\n\n\tprivate getUserFromRoles = mem(\n\t\tasync (roleIds: string[]) => {\n\t\t\tconst options = {\n\t\t\t\tsort: {\n\t\t\t\t\tusername: 1,\n\t\t\t\t},\n\t\t\t\tprojection: {\n\t\t\t\t\tusername: 1,\n\t\t\t\t\troles: 1,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst users = await Users.findUsersInRoles(roleIds, null, options).toArray();\n\n\t\t\treturn users.map((user) => ({\n\t\t\t\t...user,\n\t\t\t\troles: user.roles.filter((roleId: string) => roleIds.includes(roleId)),\n\t\t\t}));\n\t\t},\n\t\t{ maxAge: 10000 },\n\t);\n\n\tprivate async rolesHasPermission(permission: string, roles: IRole['_id'][]): Promise<boolean> {\n\t\tif (AuthorizationUtils.isPermissionRestrictedForRoleList(permission, roles)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst result = await Permissions.findOne({ _id: permission, roles: { $in: roles } }, { projection: { _id: 1 } });\n\t\treturn !!result;\n\t}\n\n\tprivate async getRoles(uid: string, scope?: IRoom['_id']): Promise<string[]> {\n\t\tconst { roles: userRoles = [] } = (await Users.findOneById(uid, { projection: { roles: 1 } })) || {};\n\t\tconst { roles: subscriptionsRoles = [] } =\n\t\t\t(scope &&\n\t\t\t\t(await Subscriptions.findOne<Pick<ISubscription, 'roles'>>({ 'rid': scope, 'u._id': uid }, { projection: { roles: 1 } }))) ||\n\t\t\t{};\n\t\treturn [...userRoles, ...subscriptionsRoles].sort((a, b) => a.localeCompare(b));\n\t}\n\n\tprivate async atLeastOne(uid: string, permissions: string[] = [], scope?: string): Promise<boolean> {\n\t\tconst sortedRoles = await this.getRolesCached(uid, scope);\n\t\tfor await (const permission of permissions) {\n\t\t\tif (await this.rolesHasPermissionCached(permission, sortedRoles)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate async all(uid: string, permissions: string[] = [], scope?: string): Promise<boolean> {\n\t\tconst sortedRoles = await this.getRolesCached(uid, scope);\n\t\tfor await (const permission of permissions) {\n\t\t\tif (!(await this.rolesHasPermissionCached(permission, sortedRoles))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      Authorization: () => Authorization\n    });\n    let License, ServiceClass;\n    module.link(\"@rocket.chat/core-services\", {\n      License(v) {\n        License = v;\n      },\n      ServiceClass(v) {\n        ServiceClass = v;\n      }\n    }, 0);\n    let Subscriptions, Rooms, Users, Roles, Permissions;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      Roles(v) {\n        Roles = v;\n      },\n      Permissions(v) {\n        Permissions = v;\n      }\n    }, 1);\n    let mem, memClear;\n    module.link(\"mem\", {\n      default(v) {\n        mem = v;\n      },\n      memClear(v) {\n        memClear = v;\n      }\n    }, 2);\n    let AuthorizationUtils;\n    module.link(\"../../../app/authorization/lib/AuthorizationUtils\", {\n      AuthorizationUtils(v) {\n        AuthorizationUtils = v;\n      }\n    }, 3);\n    let canAccessRoom;\n    module.link(\"./canAccessRoom\", {\n      canAccessRoom(v) {\n        canAccessRoom = v;\n      }\n    }, 4);\n    module.link(\"./canAccessRoomLivechat\");\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class Authorization extends ServiceClass {\n      constructor() {\n        super();\n        this.name = 'authorization';\n        this.getRolesCached = mem(this.getRoles.bind(this), {\n          maxAge: 1000,\n          cacheKey: JSON.stringify\n        });\n        this.rolesHasPermissionCached = mem(this.rolesHasPermission.bind(this), _objectSpread({\n          cacheKey: JSON.stringify\n        }, process.env.TEST_MODE === 'true' && {\n          maxAge: 1\n        }));\n        this.getPublicRoles = mem(async () => {\n          const roles = await Roles.find({\n            scope: 'Users',\n            description: {\n              $exists: true,\n              $ne: ''\n            }\n          }, {\n            projection: {\n              _id: 1\n            }\n          }).toArray();\n          return roles.map(_ref => {\n            let {\n              _id\n            } = _ref;\n            return _id;\n          });\n        }, {\n          maxAge: 10000\n        });\n        this.getUserFromRoles = mem(async roleIds => {\n          const options = {\n            sort: {\n              username: 1\n            },\n            projection: {\n              username: 1,\n              roles: 1\n            }\n          };\n          const users = await Users.findUsersInRoles(roleIds, null, options).toArray();\n          return users.map(user => _objectSpread(_objectSpread({}, user), {}, {\n            roles: user.roles.filter(roleId => roleIds.includes(roleId))\n          }));\n        }, {\n          maxAge: 10000\n        });\n        const clearCache = () => {\n          memClear(this.getRolesCached);\n          memClear(this.rolesHasPermissionCached);\n        };\n        this.onEvent('watch.roles', clearCache);\n        this.onEvent('permission.changed', clearCache);\n        this.onEvent('authorization.guestPermissions', permissions => {\n          AuthorizationUtils.addRolePermissionWhiteList('guest', permissions);\n        });\n      }\n      async started() {\n        try {\n          if (!(await License.hasValidLicense())) {\n            return;\n          }\n          const permissions = await License.getGuestPermissions();\n          if (!permissions) {\n            return;\n          }\n          AuthorizationUtils.addRolePermissionWhiteList('guest', permissions);\n        } catch (error) {\n          console.error('Authorization Service did not start correctly', error);\n        }\n      }\n      async hasAllPermission(userId, permissions, scope) {\n        if (!userId) {\n          return false;\n        }\n        return this.all(userId, permissions, scope);\n      }\n      async hasPermission(userId, permissionId, scope) {\n        if (!userId) {\n          return false;\n        }\n        return this.all(userId, [permissionId], scope);\n      }\n      async hasAtLeastOnePermission(userId, permissions, scope) {\n        if (!userId) {\n          return false;\n        }\n        return this.atLeastOne(userId, permissions, scope);\n      }\n      async canAccessRoom() {\n        return canAccessRoom(...arguments);\n      }\n      async canAccessRoomId(rid, uid) {\n        const room = await Rooms.findOneById(rid, {\n          projection: {\n            _id: 1,\n            t: 1,\n            teamId: 1,\n            prid: 1\n          }\n        });\n        if (!room) {\n          return false;\n        }\n        return this.canAccessRoom(room, {\n          _id: uid\n        });\n      }\n      async addRoleRestrictions(role, permissions) {\n        AuthorizationUtils.addRolePermissionWhiteList(role, permissions);\n      }\n      async getUsersFromPublicRoles() {\n        const roleIds = await this.getPublicRoles();\n        return this.getUserFromRoles(roleIds);\n      }\n      async rolesHasPermission(permission, roles) {\n        if (AuthorizationUtils.isPermissionRestrictedForRoleList(permission, roles)) {\n          return false;\n        }\n        const result = await Permissions.findOne({\n          _id: permission,\n          roles: {\n            $in: roles\n          }\n        }, {\n          projection: {\n            _id: 1\n          }\n        });\n        return !!result;\n      }\n      async getRoles(uid, scope) {\n        const {\n          roles: userRoles = []\n        } = (await Users.findOneById(uid, {\n          projection: {\n            roles: 1\n          }\n        })) || {};\n        const {\n          roles: subscriptionsRoles = []\n        } = scope && (await Subscriptions.findOne({\n          'rid': scope,\n          'u._id': uid\n        }, {\n          projection: {\n            roles: 1\n          }\n        })) || {};\n        return [...userRoles, ...subscriptionsRoles].sort((a, b) => a.localeCompare(b));\n      }\n      async atLeastOne(uid) {\n        let permissions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        let scope = arguments.length > 2 ? arguments[2] : undefined;\n        const sortedRoles = await this.getRolesCached(uid, scope);\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(permissions), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const permission = _step.value;\n            {\n              if (await this.rolesHasPermissionCached(permission, sortedRoles)) {\n                return true;\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        return false;\n      }\n      async all(uid) {\n        let permissions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        let scope = arguments.length > 2 ? arguments[2] : undefined;\n        const sortedRoles = await this.getRolesCached(uid, scope);\n        var _iteratorAbruptCompletion2 = false;\n        var _didIteratorError2 = false;\n        var _iteratorError2;\n        try {\n          for (var _iterator2 = _asyncIterator(permissions), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n            const permission = _step2.value;\n            {\n              if (!(await this.rolesHasPermissionCached(permission, sortedRoles))) {\n                return false;\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n              await _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n        return true;\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","Authorization","License","ServiceClass","Subscriptions","Rooms","Users","Roles","Permissions","mem","memClear","AuthorizationUtils","canAccessRoom","__reifyWaitForDeps__","constructor","name","getRolesCached","getRoles","bind","maxAge","cacheKey","JSON","stringify","rolesHasPermissionCached","rolesHasPermission","process","env","TEST_MODE","getPublicRoles","roles","find","scope","description","$exists","$ne","projection","_id","toArray","map","_ref","getUserFromRoles","roleIds","options","sort","username","users","findUsersInRoles","user","filter","roleId","includes","clearCache","onEvent","permissions","addRolePermissionWhiteList","started","hasValidLicense","getGuestPermissions","error","console","hasAllPermission","userId","all","hasPermission","permissionId","hasAtLeastOnePermission","atLeastOne","arguments","canAccessRoomId","rid","uid","room","findOneById","t","teamId","prid","addRoleRestrictions","role","getUsersFromPublicRoles","permission","isPermissionRestrictedForRoleList","result","findOne","$in","userRoles","subscriptionsRoles","a","b","localeCompare","length","undefined","sortedRoles","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","err","return","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/authorization/service.ts"],"sourcesContent":["import type { IAuthorization, RoomAccessValidator } from '@rocket.chat/core-services';\nimport { License, ServiceClass } from '@rocket.chat/core-services';\nimport type { IUser, IRole, IRoom, ISubscription, IRocketChatRecord } from '@rocket.chat/core-typings';\nimport { Subscriptions, Rooms, Users, Roles, Permissions } from '@rocket.chat/models';\nimport mem, { memClear } from 'mem';\n\nimport { AuthorizationUtils } from '../../../app/authorization/lib/AuthorizationUtils';\nimport { canAccessRoom } from './canAccessRoom';\n\nimport './canAccessRoomLivechat';\n\n// Register as class\nexport class Authorization extends ServiceClass implements IAuthorization {\n\tprotected name = 'authorization';\n\n\tprivate getRolesCached = mem(this.getRoles.bind(this), {\n\t\tmaxAge: 1000,\n\t\tcacheKey: JSON.stringify,\n\t});\n\n\tprivate rolesHasPermissionCached = mem(this.rolesHasPermission.bind(this), {\n\t\tcacheKey: JSON.stringify,\n\t\t...(process.env.TEST_MODE === 'true' && { maxAge: 1 }),\n\t});\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst clearCache = (): void => {\n\t\t\tmemClear(this.getRolesCached);\n\t\t\tmemClear(this.rolesHasPermissionCached);\n\t\t};\n\n\t\tthis.onEvent('watch.roles', clearCache);\n\t\tthis.onEvent('permission.changed', clearCache);\n\t\tthis.onEvent('authorization.guestPermissions', (permissions: string[]) => {\n\t\t\tAuthorizationUtils.addRolePermissionWhiteList('guest', permissions);\n\t\t});\n\t}\n\n\tasync started(): Promise<void> {\n\t\ttry {\n\t\t\tif (!(await License.hasValidLicense())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst permissions = await License.getGuestPermissions();\n\t\t\tif (!permissions) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tAuthorizationUtils.addRolePermissionWhiteList('guest', permissions);\n\t\t} catch (error) {\n\t\t\tconsole.error('Authorization Service did not start correctly', error);\n\t\t}\n\t}\n\n\tasync hasAllPermission(userId: string, permissions: string[], scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.all(userId, permissions, scope);\n\t}\n\n\tasync hasPermission(userId: string, permissionId: string, scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.all(userId, [permissionId], scope);\n\t}\n\n\tasync hasAtLeastOnePermission(userId: string, permissions: string[], scope?: string): Promise<boolean> {\n\t\tif (!userId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.atLeastOne(userId, permissions, scope);\n\t}\n\n\tasync canAccessRoom(...args: Parameters<RoomAccessValidator>): Promise<boolean> {\n\t\treturn canAccessRoom(...args);\n\t}\n\n\tasync canAccessRoomId(rid: IRoom['_id'], uid: IUser['_id']): Promise<boolean> {\n\t\tconst room = await Rooms.findOneById<Pick<IRoom, '_id' | 't' | 'teamId' | 'prid'>>(rid, {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tt: 1,\n\t\t\t\tteamId: 1,\n\t\t\t\tprid: 1,\n\t\t\t},\n\t\t});\n\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.canAccessRoom(room, { _id: uid });\n\t}\n\n\tasync addRoleRestrictions(role: IRole['_id'], permissions: string[]): Promise<void> {\n\t\tAuthorizationUtils.addRolePermissionWhiteList(role, permissions);\n\t}\n\n\tasync getUsersFromPublicRoles(): Promise<(IRocketChatRecord & Pick<IUser, '_id' | 'username' | 'roles'>)[]> {\n\t\tconst roleIds = await this.getPublicRoles();\n\n\t\treturn this.getUserFromRoles(roleIds);\n\t}\n\n\tprivate getPublicRoles = mem(\n\t\tasync (): Promise<string[]> => {\n\t\t\tconst roles = await Roles.find<Pick<IRole, '_id'>>(\n\t\t\t\t{ scope: 'Users', description: { $exists: true, $ne: '' } },\n\t\t\t\t{ projection: { _id: 1 } },\n\t\t\t).toArray();\n\n\t\t\treturn roles.map(({ _id }) => _id);\n\t\t},\n\t\t{ maxAge: 10000 },\n\t);\n\n\tprivate getUserFromRoles = mem(\n\t\tasync (roleIds: string[]) => {\n\t\t\tconst options = {\n\t\t\t\tsort: {\n\t\t\t\t\tusername: 1,\n\t\t\t\t},\n\t\t\t\tprojection: {\n\t\t\t\t\tusername: 1,\n\t\t\t\t\troles: 1,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst users = await Users.findUsersInRoles(roleIds, null, options).toArray();\n\n\t\t\treturn users.map((user) => ({\n\t\t\t\t...user,\n\t\t\t\troles: user.roles.filter((roleId: string) => roleIds.includes(roleId)),\n\t\t\t}));\n\t\t},\n\t\t{ maxAge: 10000 },\n\t);\n\n\tprivate async rolesHasPermission(permission: string, roles: IRole['_id'][]): Promise<boolean> {\n\t\tif (AuthorizationUtils.isPermissionRestrictedForRoleList(permission, roles)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst result = await Permissions.findOne({ _id: permission, roles: { $in: roles } }, { projection: { _id: 1 } });\n\t\treturn !!result;\n\t}\n\n\tprivate async getRoles(uid: string, scope?: IRoom['_id']): Promise<string[]> {\n\t\tconst { roles: userRoles = [] } = (await Users.findOneById(uid, { projection: { roles: 1 } })) || {};\n\t\tconst { roles: subscriptionsRoles = [] } =\n\t\t\t(scope &&\n\t\t\t\t(await Subscriptions.findOne<Pick<ISubscription, 'roles'>>({ 'rid': scope, 'u._id': uid }, { projection: { roles: 1 } }))) ||\n\t\t\t{};\n\t\treturn [...userRoles, ...subscriptionsRoles].sort((a, b) => a.localeCompare(b));\n\t}\n\n\tprivate async atLeastOne(uid: string, permissions: string[] = [], scope?: string): Promise<boolean> {\n\t\tconst sortedRoles = await this.getRolesCached(uid, scope);\n\t\tfor await (const permission of permissions) {\n\t\t\tif (await this.rolesHasPermissionCached(permission, sortedRoles)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate async all(uid: string, permissions: string[] = [], scope?: string): Promise<boolean> {\n\t\tconst sortedRoles = await this.getRolesCached(uid, scope);\n\t\tfor await (const permission of permissions) {\n\t\t\tif (!(await this.rolesHasPermissionCached(permission, sortedRoles))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"5c1de98fba07324f08a4449f8f707af03373b54c"}
