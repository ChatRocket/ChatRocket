{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/notifications/index.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/notifications/index.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/notifications/index.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/notifications/index.ts","sourceRoot":"","sources":["app/lib/server/functions/notifications/index.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AACpF,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAE3D,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,IAAI,EAAE,MAAM,gCAAgC,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAC5C,WAAmB,EACnB,OAA0D,EAC1D,QAAiC;IAEjC,MAAM,GAAG,GAAG,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;IAElE,MAAM,eAAe,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,eAAe,IAAI,gBAAgB,CAAC,eAAe,CAAC,IAAI,qBAAqB,CAAC,eAAe,CAAC,EAAE,CAAC;QACpH,OAAO,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,oBAAoB,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;IACpH,CAAC;IAED,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,CAAC,CAAC,mBAAmB,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,gGAAgG;IAChG,OAAO,SAAS,CAAC,GAAG,CAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC;AACzD,CAAC;AAED;;;;;;;GAOG;AACH,MAAM,UAAU,sCAAsC,CAAC,OAAe,EAAE,QAA2C;IAClH,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QAC5B,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QAChG,CAAC;IACF,CAAC,CAAC,CAAC;IACH,OAAO,OAAO,CAAC;AAChB,CAAC;AAED;;;;;;;GAOG;AACH,MAAM,UAAU,wBAAwB,CAAC,OAA8B,EAAE,UAAgC;IACxG,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC5C,OAAO,KAAK,CAAC;IACd,CAAC;IAED,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC,SAAiB,EAAE,EAAE;QAC5C,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QACxD,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { isFileAttachment, isFileImageAttachment } from '@rocket.chat/core-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { settings } from '../../../../settings/server';\n\n/**\n * This function returns a string ready to be shown in the notification\n *\n * @param {object} message the message to be parsed\n */\nexport async function parseMessageTextPerUser(\n\tmessageText: string,\n\tmessage: Pick<IMessage, 'u' | 'msg' | 't' | 'attachments'>,\n\treceiver: Pick<IUser, 'language'>,\n): Promise<string> {\n\tconst lng = receiver.language || settings.get('Language') || 'en';\n\n\tconst firstAttachment = message.attachments?.[0];\n\tif (!message.msg && firstAttachment && isFileAttachment(firstAttachment) && isFileImageAttachment(firstAttachment)) {\n\t\treturn firstAttachment.image_type ? i18n.t('User_uploaded_image', { lng }) : i18n.t('User_uploaded_file', { lng });\n\t}\n\n\tif (message.msg && message.t === 'e2e') {\n\t\treturn i18n.t('Encrypted_message', { lng });\n\t}\n\n\t// perform processing required before sending message as notification such as markdown filtering\n\treturn callbacks.run('renderNotification', messageText);\n}\n\n/**\n * Replaces @username with full name\n *\n * @param {string} message The message to replace\n * @param {object[]} mentions Array of mentions used to make replacements\n *\n * @returns {string}\n */\nexport function replaceMentionedUsernamesWithFullNames(message: string, mentions: NonNullable<IMessage['mentions']>): string {\n\tmentions.forEach((mention) => {\n\t\tif (mention.name) {\n\t\t\tmessage = message.replace(new RegExp(escapeRegExp(`@${mention.username}`), 'g'), mention.name);\n\t\t}\n\t});\n\treturn message;\n}\n\n/**\n * Checks if a message contains a user highlight\n *\n * @param {string} message\n * @param {array|undefined} highlights\n *\n * @returns {boolean}\n */\nexport function messageContainsHighlight(message: Pick<IMessage, 'msg'>, highlights: string[] | undefined): boolean {\n\tif (!highlights || highlights.length === 0) {\n\t\treturn false;\n\t}\n\n\treturn highlights.some((highlight: string) => {\n\t\tconst regexp = new RegExp(escapeRegExp(highlight), 'i');\n\t\treturn regexp.test(message.msg);\n\t});\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/notifications/index.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/notifications/index.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/notifications/index.ts","sourceRoot":"","sources":["app/lib/server/functions/notifications/index.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AACpF,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAE3D,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,IAAI,EAAE,MAAM,gCAAgC,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAC5C,WAAmB,EACnB,OAA0D,EAC1D,QAAiC;IAEjC,MAAM,GAAG,GAAG,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;IAElE,MAAM,eAAe,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,eAAe,IAAI,gBAAgB,CAAC,eAAe,CAAC,IAAI,qBAAqB,CAAC,eAAe,CAAC,EAAE,CAAC;QACpH,OAAO,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,oBAAoB,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;IACpH,CAAC;IAED,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,CAAC,CAAC,mBAAmB,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED,gGAAgG;IAChG,OAAO,SAAS,CAAC,GAAG,CAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC;AACzD,CAAC;AAED;;;;;;;GAOG;AACH,MAAM,UAAU,sCAAsC,CAAC,OAAe,EAAE,QAA2C;IAClH,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QAC5B,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QAChG,CAAC;IACF,CAAC,CAAC,CAAC;IACH,OAAO,OAAO,CAAC;AAChB,CAAC;AAED;;;;;;;GAOG;AACH,MAAM,UAAU,wBAAwB,CAAC,OAA8B,EAAE,UAAgC;IACxG,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC5C,OAAO,KAAK,CAAC;IACd,CAAC;IAED,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC,SAAiB,EAAE,EAAE;QAC5C,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QACxD,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { isFileAttachment, isFileImageAttachment } from '@rocket.chat/core-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { settings } from '../../../../settings/server';\n\n/**\n * This function returns a string ready to be shown in the notification\n *\n * @param {object} message the message to be parsed\n */\nexport async function parseMessageTextPerUser(\n\tmessageText: string,\n\tmessage: Pick<IMessage, 'u' | 'msg' | 't' | 'attachments'>,\n\treceiver: Pick<IUser, 'language'>,\n): Promise<string> {\n\tconst lng = receiver.language || settings.get('Language') || 'en';\n\n\tconst firstAttachment = message.attachments?.[0];\n\tif (!message.msg && firstAttachment && isFileAttachment(firstAttachment) && isFileImageAttachment(firstAttachment)) {\n\t\treturn firstAttachment.image_type ? i18n.t('User_uploaded_image', { lng }) : i18n.t('User_uploaded_file', { lng });\n\t}\n\n\tif (message.msg && message.t === 'e2e') {\n\t\treturn i18n.t('Encrypted_message', { lng });\n\t}\n\n\t// perform processing required before sending message as notification such as markdown filtering\n\treturn callbacks.run('renderNotification', messageText);\n}\n\n/**\n * Replaces @username with full name\n *\n * @param {string} message The message to replace\n * @param {object[]} mentions Array of mentions used to make replacements\n *\n * @returns {string}\n */\nexport function replaceMentionedUsernamesWithFullNames(message: string, mentions: NonNullable<IMessage['mentions']>): string {\n\tmentions.forEach((mention) => {\n\t\tif (mention.name) {\n\t\t\tmessage = message.replace(new RegExp(escapeRegExp(`@${mention.username}`), 'g'), mention.name);\n\t\t}\n\t});\n\treturn message;\n}\n\n/**\n * Checks if a message contains a user highlight\n *\n * @param {string} message\n * @param {array|undefined} highlights\n *\n * @returns {boolean}\n */\nexport function messageContainsHighlight(message: Pick<IMessage, 'msg'>, highlights: string[] | undefined): boolean {\n\tif (!highlights || highlights.length === 0) {\n\t\treturn false;\n\t}\n\n\treturn highlights.some((highlight: string) => {\n\t\tconst regexp = new RegExp(escapeRegExp(highlight), 'i');\n\t\treturn regexp.test(message.msg);\n\t});\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      parseMessageTextPerUser: () => parseMessageTextPerUser,\n      replaceMentionedUsernamesWithFullNames: () => replaceMentionedUsernamesWithFullNames,\n      messageContainsHighlight: () => messageContainsHighlight\n    });\n    let isFileAttachment, isFileImageAttachment;\n    module.link(\"@rocket.chat/core-typings\", {\n      isFileAttachment(v) {\n        isFileAttachment = v;\n      },\n      isFileImageAttachment(v) {\n        isFileImageAttachment = v;\n      }\n    }, 0);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 1);\n    let callbacks;\n    module.link(\"../../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 2);\n    let i18n;\n    module.link(\"../../../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function parseMessageTextPerUser(messageText, message, receiver) {\n      var _message$attachments;\n      const lng = receiver.language || settings.get('Language') || 'en';\n      const firstAttachment = (_message$attachments = message.attachments) === null || _message$attachments === void 0 ? void 0 : _message$attachments[0];\n      if (!message.msg && firstAttachment && isFileAttachment(firstAttachment) && isFileImageAttachment(firstAttachment)) {\n        return firstAttachment.image_type ? i18n.t('User_uploaded_image', {\n          lng\n        }) : i18n.t('User_uploaded_file', {\n          lng\n        });\n      }\n      if (message.msg && message.t === 'e2e') {\n        return i18n.t('Encrypted_message', {\n          lng\n        });\n      }\n      // perform processing required before sending message as notification such as markdown filtering\n      return callbacks.run('renderNotification', messageText);\n    }\n    function replaceMentionedUsernamesWithFullNames(message, mentions) {\n      mentions.forEach(mention => {\n        if (mention.name) {\n          message = message.replace(new RegExp(escapeRegExp(\"@\".concat(mention.username)), 'g'), mention.name);\n        }\n      });\n      return message;\n    }\n    function messageContainsHighlight(message, highlights) {\n      if (!highlights || highlights.length === 0) {\n        return false;\n      }\n      return highlights.some(highlight => {\n        const regexp = new RegExp(escapeRegExp(highlight), 'i');\n        return regexp.test(message.msg);\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","parseMessageTextPerUser","replaceMentionedUsernamesWithFullNames","messageContainsHighlight","isFileAttachment","isFileImageAttachment","link","v","escapeRegExp","callbacks","i18n","settings","__reifyWaitForDeps__","messageText","message","receiver","_message$attachments","lng","language","get","firstAttachment","attachments","msg","image_type","t","run","mentions","forEach","mention","name","replace","RegExp","concat","username","highlights","length","some","highlight","regexp","test","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/notifications/index.ts"],"sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { isFileAttachment, isFileImageAttachment } from '@rocket.chat/core-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { callbacks } from '../../../../../lib/callbacks';\nimport { i18n } from '../../../../../server/lib/i18n';\nimport { settings } from '../../../../settings/server';\n\n/**\n * This function returns a string ready to be shown in the notification\n *\n * @param {object} message the message to be parsed\n */\nexport async function parseMessageTextPerUser(\n\tmessageText: string,\n\tmessage: Pick<IMessage, 'u' | 'msg' | 't' | 'attachments'>,\n\treceiver: Pick<IUser, 'language'>,\n): Promise<string> {\n\tconst lng = receiver.language || settings.get('Language') || 'en';\n\n\tconst firstAttachment = message.attachments?.[0];\n\tif (!message.msg && firstAttachment && isFileAttachment(firstAttachment) && isFileImageAttachment(firstAttachment)) {\n\t\treturn firstAttachment.image_type ? i18n.t('User_uploaded_image', { lng }) : i18n.t('User_uploaded_file', { lng });\n\t}\n\n\tif (message.msg && message.t === 'e2e') {\n\t\treturn i18n.t('Encrypted_message', { lng });\n\t}\n\n\t// perform processing required before sending message as notification such as markdown filtering\n\treturn callbacks.run('renderNotification', messageText);\n}\n\n/**\n * Replaces @username with full name\n *\n * @param {string} message The message to replace\n * @param {object[]} mentions Array of mentions used to make replacements\n *\n * @returns {string}\n */\nexport function replaceMentionedUsernamesWithFullNames(message: string, mentions: NonNullable<IMessage['mentions']>): string {\n\tmentions.forEach((mention) => {\n\t\tif (mention.name) {\n\t\t\tmessage = message.replace(new RegExp(escapeRegExp(`@${mention.username}`), 'g'), mention.name);\n\t\t}\n\t});\n\treturn message;\n}\n\n/**\n * Checks if a message contains a user highlight\n *\n * @param {string} message\n * @param {array|undefined} highlights\n *\n * @returns {boolean}\n */\nexport function messageContainsHighlight(message: Pick<IMessage, 'msg'>, highlights: string[] | undefined): boolean {\n\tif (!highlights || highlights.length === 0) {\n\t\treturn false;\n\t}\n\n\treturn highlights.some((highlight: string) => {\n\t\tconst regexp = new RegExp(escapeRegExp(highlight), 'i');\n\t\treturn regexp.test(message.msg);\n\t});\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"4905c5f1c7aaf52be04e83cac7cf35514a21fa5a"}
