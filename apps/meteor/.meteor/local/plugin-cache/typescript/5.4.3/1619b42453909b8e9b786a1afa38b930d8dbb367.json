{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/classes/ImportDataConverter.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/importer/server/classes/ImportDataConverter.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/classes/ImportDataConverter.ts","inputSourceMap":{"version":3,"file":"app/importer/server/classes/ImportDataConverter.ts","sourceRoot":"","sources":["app/importer/server/classes/ImportDataConverter.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IImportRecord, IImportUser, IImportMessage, IImportChannel } from '@rocket.chat/core-typings';\nimport type { Logger } from '@rocket.chat/logger';\nimport { ImportData } from '@rocket.chat/models';\nimport { pick } from '@rocket.chat/tools';\n\nimport type { IConversionCallbacks } from '../definitions/IConversionCallbacks';\nimport { ConverterCache } from './converters/ConverterCache';\nimport { type MessageConversionCallbacks, MessageConverter } from './converters/MessageConverter';\nimport type { RecordConverter, RecordConverterOptions } from './converters/RecordConverter';\nimport { RoomConverter } from './converters/RoomConverter';\nimport { UserConverter, type UserConverterOptions } from './converters/UserConverter';\n\nexport type ConverterOptions = UserConverterOptions & Omit<RecordConverterOptions, 'deleteDbData'>;\n\nexport class ImportDataConverter {\n\tprotected _options: ConverterOptions;\n\n\tprotected _userConverter: UserConverter;\n\n\tprotected _roomConverter: RoomConverter;\n\n\tprotected _messageConverter: MessageConverter;\n\n\tprotected _cache = new ConverterCache();\n\n\tpublic get options(): ConverterOptions {\n\t\treturn this._options;\n\t}\n\n\tconstructor(logger: Logger, options?: ConverterOptions) {\n\t\tthis._options = {\n\t\t\tworkInMemory: false,\n\t\t\t...(options || {}),\n\t\t};\n\n\t\tthis.initializeUserConverter(logger);\n\t\tthis.initializeRoomConverter(logger);\n\t\tthis.initializeMessageConverter(logger);\n\t}\n\n\tprotected getRecordConverterOptions(): RecordConverterOptions {\n\t\treturn {\n\t\t\t...pick(this._options, 'workInMemory'),\n\t\t\t// DbData is deleted by this class directly, so the converters don't need to do it individually\n\t\t\tdeleteDbData: false,\n\t\t};\n\t}\n\n\tprotected getUserConverterOptions(): UserConverterOptions {\n\t\treturn {\n\t\t\tflagEmailsAsVerified: false,\n\t\t\tskipExistingUsers: false,\n\t\t\tskipNewUsers: false,\n\n\t\t\t...pick(\n\t\t\t\tthis._options,\n\t\t\t\t'flagEmailsAsVerified',\n\t\t\t\t'skipExistingUsers',\n\t\t\t\t'skipNewUsers',\n\t\t\t\t'skipUserCallbacks',\n\t\t\t\t'skipDefaultChannels',\n\t\t\t\t'quickUserInsertion',\n\t\t\t\t'enableEmail2fa',\n\t\t\t),\n\t\t};\n\t}\n\n\tprotected initializeUserConverter(logger: Logger): void {\n\t\tconst userOptions = {\n\t\t\t...this.getRecordConverterOptions(),\n\t\t\t...this.getUserConverterOptions(),\n\t\t};\n\n\t\tthis._userConverter = new UserConverter(userOptions, logger, this._cache);\n\t}\n\n\tprotected initializeRoomConverter(logger: Logger): void {\n\t\tconst roomOptions = {\n\t\t\t...this.getRecordConverterOptions(),\n\t\t};\n\n\t\tthis._roomConverter = new RoomConverter(roomOptions, logger, this._cache);\n\t}\n\n\tprotected initializeMessageConverter(logger: Logger): void {\n\t\tconst messageOptions = {\n\t\t\t...this.getRecordConverterOptions(),\n\t\t};\n\n\t\tthis._messageConverter = new MessageConverter(messageOptions, logger, this._cache);\n\t}\n\n\tasync addUser(data: IImportUser): Promise<void> {\n\t\treturn this._userConverter.addObject(data);\n\t}\n\n\tasync addChannel(data: IImportChannel): Promise<void> {\n\t\treturn this._roomConverter.addObject(data);\n\t}\n\n\tasync addMessage(data: IImportMessage, useQuickInsert = false): Promise<void> {\n\t\treturn this._messageConverter.addObject(data, {\n\t\t\tuseQuickInsert: useQuickInsert || undefined,\n\t\t});\n\t}\n\n\tasync convertUsers(callbacks: IConversionCallbacks): Promise<void> {\n\t\treturn this._userConverter.convertData(callbacks);\n\t}\n\n\tasync convertChannels(startedByUserId: string, callbacks: IConversionCallbacks): Promise<void> {\n\t\treturn this._roomConverter.convertChannels(startedByUserId, callbacks);\n\t}\n\n\tasync convertMessages(callbacks: MessageConversionCallbacks): Promise<void> {\n\t\treturn this._messageConverter.convertData(callbacks);\n\t}\n\n\tasync convertData(startedByUserId: string, callbacks: IConversionCallbacks = {}): Promise<void> {\n\t\tawait this.convertUsers(callbacks);\n\t\tawait this.convertChannels(startedByUserId, callbacks);\n\t\tawait this.convertMessages(callbacks);\n\n\t\tprocess.nextTick(async () => {\n\t\t\tawait this.clearSuccessfullyImportedData();\n\t\t});\n\t}\n\n\tprotected getAllConverters(): RecordConverter<IImportRecord>[] {\n\t\treturn [this._userConverter, this._roomConverter, this._messageConverter];\n\t}\n\n\tpublic async clearImportData(): Promise<void> {\n\t\tif (!this._options.workInMemory) {\n\t\t\t// Using raw collection since its faster\n\t\t\tawait ImportData.col.deleteMany({});\n\t\t}\n\n\t\tawait Promise.all(this.getAllConverters().map((converter) => converter.clearImportData()));\n\t}\n\n\tasync clearSuccessfullyImportedData(): Promise<void> {\n\t\tif (!this._options.workInMemory) {\n\t\t\tawait ImportData.col.deleteMany({\n\t\t\t\terrors: {\n\t\t\t\t\t$exists: false,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tawait Promise.all(this.getAllConverters().map((converter) => converter.clearSuccessfullyImportedData()));\n\t}\n\n\tpublic abort(): void {\n\t\tthis.getAllConverters().forEach((converter) => {\n\t\t\tconverter.aborted = true;\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/classes/ImportDataConverter.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/importer/server/classes/ImportDataConverter.ts","inputSourceMap":{"version":3,"file":"app/importer/server/classes/ImportDataConverter.ts","sourceRoot":"","sources":["app/importer/server/classes/ImportDataConverter.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IImportRecord, IImportUser, IImportMessage, IImportChannel } from '@rocket.chat/core-typings';\nimport type { Logger } from '@rocket.chat/logger';\nimport { ImportData } from '@rocket.chat/models';\nimport { pick } from '@rocket.chat/tools';\n\nimport type { IConversionCallbacks } from '../definitions/IConversionCallbacks';\nimport { ConverterCache } from './converters/ConverterCache';\nimport { type MessageConversionCallbacks, MessageConverter } from './converters/MessageConverter';\nimport type { RecordConverter, RecordConverterOptions } from './converters/RecordConverter';\nimport { RoomConverter } from './converters/RoomConverter';\nimport { UserConverter, type UserConverterOptions } from './converters/UserConverter';\n\nexport type ConverterOptions = UserConverterOptions & Omit<RecordConverterOptions, 'deleteDbData'>;\n\nexport class ImportDataConverter {\n\tprotected _options: ConverterOptions;\n\n\tprotected _userConverter: UserConverter;\n\n\tprotected _roomConverter: RoomConverter;\n\n\tprotected _messageConverter: MessageConverter;\n\n\tprotected _cache = new ConverterCache();\n\n\tpublic get options(): ConverterOptions {\n\t\treturn this._options;\n\t}\n\n\tconstructor(logger: Logger, options?: ConverterOptions) {\n\t\tthis._options = {\n\t\t\tworkInMemory: false,\n\t\t\t...(options || {}),\n\t\t};\n\n\t\tthis.initializeUserConverter(logger);\n\t\tthis.initializeRoomConverter(logger);\n\t\tthis.initializeMessageConverter(logger);\n\t}\n\n\tprotected getRecordConverterOptions(): RecordConverterOptions {\n\t\treturn {\n\t\t\t...pick(this._options, 'workInMemory'),\n\t\t\t// DbData is deleted by this class directly, so the converters don't need to do it individually\n\t\t\tdeleteDbData: false,\n\t\t};\n\t}\n\n\tprotected getUserConverterOptions(): UserConverterOptions {\n\t\treturn {\n\t\t\tflagEmailsAsVerified: false,\n\t\t\tskipExistingUsers: false,\n\t\t\tskipNewUsers: false,\n\n\t\t\t...pick(\n\t\t\t\tthis._options,\n\t\t\t\t'flagEmailsAsVerified',\n\t\t\t\t'skipExistingUsers',\n\t\t\t\t'skipNewUsers',\n\t\t\t\t'skipUserCallbacks',\n\t\t\t\t'skipDefaultChannels',\n\t\t\t\t'quickUserInsertion',\n\t\t\t\t'enableEmail2fa',\n\t\t\t),\n\t\t};\n\t}\n\n\tprotected initializeUserConverter(logger: Logger): void {\n\t\tconst userOptions = {\n\t\t\t...this.getRecordConverterOptions(),\n\t\t\t...this.getUserConverterOptions(),\n\t\t};\n\n\t\tthis._userConverter = new UserConverter(userOptions, logger, this._cache);\n\t}\n\n\tprotected initializeRoomConverter(logger: Logger): void {\n\t\tconst roomOptions = {\n\t\t\t...this.getRecordConverterOptions(),\n\t\t};\n\n\t\tthis._roomConverter = new RoomConverter(roomOptions, logger, this._cache);\n\t}\n\n\tprotected initializeMessageConverter(logger: Logger): void {\n\t\tconst messageOptions = {\n\t\t\t...this.getRecordConverterOptions(),\n\t\t};\n\n\t\tthis._messageConverter = new MessageConverter(messageOptions, logger, this._cache);\n\t}\n\n\tasync addUser(data: IImportUser): Promise<void> {\n\t\treturn this._userConverter.addObject(data);\n\t}\n\n\tasync addChannel(data: IImportChannel): Promise<void> {\n\t\treturn this._roomConverter.addObject(data);\n\t}\n\n\tasync addMessage(data: IImportMessage, useQuickInsert = false): Promise<void> {\n\t\treturn this._messageConverter.addObject(data, {\n\t\t\tuseQuickInsert: useQuickInsert || undefined,\n\t\t});\n\t}\n\n\tasync convertUsers(callbacks: IConversionCallbacks): Promise<void> {\n\t\treturn this._userConverter.convertData(callbacks);\n\t}\n\n\tasync convertChannels(startedByUserId: string, callbacks: IConversionCallbacks): Promise<void> {\n\t\treturn this._roomConverter.convertChannels(startedByUserId, callbacks);\n\t}\n\n\tasync convertMessages(callbacks: MessageConversionCallbacks): Promise<void> {\n\t\treturn this._messageConverter.convertData(callbacks);\n\t}\n\n\tasync convertData(startedByUserId: string, callbacks: IConversionCallbacks = {}): Promise<void> {\n\t\tawait this.convertUsers(callbacks);\n\t\tawait this.convertChannels(startedByUserId, callbacks);\n\t\tawait this.convertMessages(callbacks);\n\n\t\tprocess.nextTick(async () => {\n\t\t\tawait this.clearSuccessfullyImportedData();\n\t\t});\n\t}\n\n\tprotected getAllConverters(): RecordConverter<IImportRecord>[] {\n\t\treturn [this._userConverter, this._roomConverter, this._messageConverter];\n\t}\n\n\tpublic async clearImportData(): Promise<void> {\n\t\tif (!this._options.workInMemory) {\n\t\t\t// Using raw collection since its faster\n\t\t\tawait ImportData.col.deleteMany({});\n\t\t}\n\n\t\tawait Promise.all(this.getAllConverters().map((converter) => converter.clearImportData()));\n\t}\n\n\tasync clearSuccessfullyImportedData(): Promise<void> {\n\t\tif (!this._options.workInMemory) {\n\t\t\tawait ImportData.col.deleteMany({\n\t\t\t\terrors: {\n\t\t\t\t\t$exists: false,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tawait Promise.all(this.getAllConverters().map((converter) => converter.clearSuccessfullyImportedData()));\n\t}\n\n\tpublic abort(): void {\n\t\tthis.getAllConverters().forEach((converter) => {\n\t\t\tconverter.aborted = true;\n\t\t});\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      ImportDataConverter: () => ImportDataConverter\n    });\n    let ImportData;\n    module.link(\"@rocket.chat/models\", {\n      ImportData(v) {\n        ImportData = v;\n      }\n    }, 0);\n    let pick;\n    module.link(\"@rocket.chat/tools\", {\n      pick(v) {\n        pick = v;\n      }\n    }, 1);\n    let ConverterCache;\n    module.link(\"./converters/ConverterCache\", {\n      ConverterCache(v) {\n        ConverterCache = v;\n      }\n    }, 2);\n    let MessageConverter;\n    module.link(\"./converters/MessageConverter\", {\n      MessageConverter(v) {\n        MessageConverter = v;\n      }\n    }, 3);\n    let RoomConverter;\n    module.link(\"./converters/RoomConverter\", {\n      RoomConverter(v) {\n        RoomConverter = v;\n      }\n    }, 4);\n    let UserConverter;\n    module.link(\"./converters/UserConverter\", {\n      UserConverter(v) {\n        UserConverter = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class ImportDataConverter {\n      get options() {\n        return this._options;\n      }\n      constructor(logger, options) {\n        this._options = void 0;\n        this._userConverter = void 0;\n        this._roomConverter = void 0;\n        this._messageConverter = void 0;\n        this._cache = new ConverterCache();\n        this._options = _objectSpread({\n          workInMemory: false\n        }, options || {});\n        this.initializeUserConverter(logger);\n        this.initializeRoomConverter(logger);\n        this.initializeMessageConverter(logger);\n      }\n      getRecordConverterOptions() {\n        return _objectSpread(_objectSpread({}, pick(this._options, 'workInMemory')), {}, {\n          // DbData is deleted by this class directly, so the converters don't need to do it individually\n          deleteDbData: false\n        });\n      }\n      getUserConverterOptions() {\n        return _objectSpread({\n          flagEmailsAsVerified: false,\n          skipExistingUsers: false,\n          skipNewUsers: false\n        }, pick(this._options, 'flagEmailsAsVerified', 'skipExistingUsers', 'skipNewUsers', 'skipUserCallbacks', 'skipDefaultChannels', 'quickUserInsertion', 'enableEmail2fa'));\n      }\n      initializeUserConverter(logger) {\n        const userOptions = _objectSpread(_objectSpread({}, this.getRecordConverterOptions()), this.getUserConverterOptions());\n        this._userConverter = new UserConverter(userOptions, logger, this._cache);\n      }\n      initializeRoomConverter(logger) {\n        const roomOptions = _objectSpread({}, this.getRecordConverterOptions());\n        this._roomConverter = new RoomConverter(roomOptions, logger, this._cache);\n      }\n      initializeMessageConverter(logger) {\n        const messageOptions = _objectSpread({}, this.getRecordConverterOptions());\n        this._messageConverter = new MessageConverter(messageOptions, logger, this._cache);\n      }\n      async addUser(data) {\n        return this._userConverter.addObject(data);\n      }\n      async addChannel(data) {\n        return this._roomConverter.addObject(data);\n      }\n      async addMessage(data) {\n        let useQuickInsert = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        return this._messageConverter.addObject(data, {\n          useQuickInsert: useQuickInsert || undefined\n        });\n      }\n      async convertUsers(callbacks) {\n        return this._userConverter.convertData(callbacks);\n      }\n      async convertChannels(startedByUserId, callbacks) {\n        return this._roomConverter.convertChannels(startedByUserId, callbacks);\n      }\n      async convertMessages(callbacks) {\n        return this._messageConverter.convertData(callbacks);\n      }\n      async convertData(startedByUserId) {\n        let callbacks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        await this.convertUsers(callbacks);\n        await this.convertChannels(startedByUserId, callbacks);\n        await this.convertMessages(callbacks);\n        process.nextTick(async () => {\n          await this.clearSuccessfullyImportedData();\n        });\n      }\n      getAllConverters() {\n        return [this._userConverter, this._roomConverter, this._messageConverter];\n      }\n      async clearImportData() {\n        if (!this._options.workInMemory) {\n          // Using raw collection since its faster\n          await ImportData.col.deleteMany({});\n        }\n        await Promise.all(this.getAllConverters().map(converter => converter.clearImportData()));\n      }\n      async clearSuccessfullyImportedData() {\n        if (!this._options.workInMemory) {\n          await ImportData.col.deleteMany({\n            errors: {\n              $exists: false\n            }\n          });\n        }\n        await Promise.all(this.getAllConverters().map(converter => converter.clearSuccessfullyImportedData()));\n      }\n      abort() {\n        this.getAllConverters().forEach(converter => {\n          converter.aborted = true;\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","ImportDataConverter","ImportData","pick","ConverterCache","MessageConverter","RoomConverter","UserConverter","__reifyWaitForDeps__","options","_options","constructor","logger","_userConverter","_roomConverter","_messageConverter","_cache","workInMemory","initializeUserConverter","initializeRoomConverter","initializeMessageConverter","getRecordConverterOptions","deleteDbData","getUserConverterOptions","flagEmailsAsVerified","skipExistingUsers","skipNewUsers","userOptions","roomOptions","messageOptions","addUser","data","addObject","addChannel","addMessage","useQuickInsert","arguments","length","undefined","convertUsers","callbacks","convertData","convertChannels","startedByUserId","convertMessages","process","nextTick","clearSuccessfullyImportedData","getAllConverters","clearImportData","col","deleteMany","Promise","all","map","converter","errors","$exists","abort","forEach","aborted","__reify_async_result__","_reifyError","self","async"],"sources":["app/importer/server/classes/ImportDataConverter.ts"],"sourcesContent":["import type { IImportRecord, IImportUser, IImportMessage, IImportChannel } from '@rocket.chat/core-typings';\nimport type { Logger } from '@rocket.chat/logger';\nimport { ImportData } from '@rocket.chat/models';\nimport { pick } from '@rocket.chat/tools';\n\nimport type { IConversionCallbacks } from '../definitions/IConversionCallbacks';\nimport { ConverterCache } from './converters/ConverterCache';\nimport { type MessageConversionCallbacks, MessageConverter } from './converters/MessageConverter';\nimport type { RecordConverter, RecordConverterOptions } from './converters/RecordConverter';\nimport { RoomConverter } from './converters/RoomConverter';\nimport { UserConverter, type UserConverterOptions } from './converters/UserConverter';\n\nexport type ConverterOptions = UserConverterOptions & Omit<RecordConverterOptions, 'deleteDbData'>;\n\nexport class ImportDataConverter {\n\tprotected _options: ConverterOptions;\n\n\tprotected _userConverter: UserConverter;\n\n\tprotected _roomConverter: RoomConverter;\n\n\tprotected _messageConverter: MessageConverter;\n\n\tprotected _cache = new ConverterCache();\n\n\tpublic get options(): ConverterOptions {\n\t\treturn this._options;\n\t}\n\n\tconstructor(logger: Logger, options?: ConverterOptions) {\n\t\tthis._options = {\n\t\t\tworkInMemory: false,\n\t\t\t...(options || {}),\n\t\t};\n\n\t\tthis.initializeUserConverter(logger);\n\t\tthis.initializeRoomConverter(logger);\n\t\tthis.initializeMessageConverter(logger);\n\t}\n\n\tprotected getRecordConverterOptions(): RecordConverterOptions {\n\t\treturn {\n\t\t\t...pick(this._options, 'workInMemory'),\n\t\t\t// DbData is deleted by this class directly, so the converters don't need to do it individually\n\t\t\tdeleteDbData: false,\n\t\t};\n\t}\n\n\tprotected getUserConverterOptions(): UserConverterOptions {\n\t\treturn {\n\t\t\tflagEmailsAsVerified: false,\n\t\t\tskipExistingUsers: false,\n\t\t\tskipNewUsers: false,\n\n\t\t\t...pick(\n\t\t\t\tthis._options,\n\t\t\t\t'flagEmailsAsVerified',\n\t\t\t\t'skipExistingUsers',\n\t\t\t\t'skipNewUsers',\n\t\t\t\t'skipUserCallbacks',\n\t\t\t\t'skipDefaultChannels',\n\t\t\t\t'quickUserInsertion',\n\t\t\t\t'enableEmail2fa',\n\t\t\t),\n\t\t};\n\t}\n\n\tprotected initializeUserConverter(logger: Logger): void {\n\t\tconst userOptions = {\n\t\t\t...this.getRecordConverterOptions(),\n\t\t\t...this.getUserConverterOptions(),\n\t\t};\n\n\t\tthis._userConverter = new UserConverter(userOptions, logger, this._cache);\n\t}\n\n\tprotected initializeRoomConverter(logger: Logger): void {\n\t\tconst roomOptions = {\n\t\t\t...this.getRecordConverterOptions(),\n\t\t};\n\n\t\tthis._roomConverter = new RoomConverter(roomOptions, logger, this._cache);\n\t}\n\n\tprotected initializeMessageConverter(logger: Logger): void {\n\t\tconst messageOptions = {\n\t\t\t...this.getRecordConverterOptions(),\n\t\t};\n\n\t\tthis._messageConverter = new MessageConverter(messageOptions, logger, this._cache);\n\t}\n\n\tasync addUser(data: IImportUser): Promise<void> {\n\t\treturn this._userConverter.addObject(data);\n\t}\n\n\tasync addChannel(data: IImportChannel): Promise<void> {\n\t\treturn this._roomConverter.addObject(data);\n\t}\n\n\tasync addMessage(data: IImportMessage, useQuickInsert = false): Promise<void> {\n\t\treturn this._messageConverter.addObject(data, {\n\t\t\tuseQuickInsert: useQuickInsert || undefined,\n\t\t});\n\t}\n\n\tasync convertUsers(callbacks: IConversionCallbacks): Promise<void> {\n\t\treturn this._userConverter.convertData(callbacks);\n\t}\n\n\tasync convertChannels(startedByUserId: string, callbacks: IConversionCallbacks): Promise<void> {\n\t\treturn this._roomConverter.convertChannels(startedByUserId, callbacks);\n\t}\n\n\tasync convertMessages(callbacks: MessageConversionCallbacks): Promise<void> {\n\t\treturn this._messageConverter.convertData(callbacks);\n\t}\n\n\tasync convertData(startedByUserId: string, callbacks: IConversionCallbacks = {}): Promise<void> {\n\t\tawait this.convertUsers(callbacks);\n\t\tawait this.convertChannels(startedByUserId, callbacks);\n\t\tawait this.convertMessages(callbacks);\n\n\t\tprocess.nextTick(async () => {\n\t\t\tawait this.clearSuccessfullyImportedData();\n\t\t});\n\t}\n\n\tprotected getAllConverters(): RecordConverter<IImportRecord>[] {\n\t\treturn [this._userConverter, this._roomConverter, this._messageConverter];\n\t}\n\n\tpublic async clearImportData(): Promise<void> {\n\t\tif (!this._options.workInMemory) {\n\t\t\t// Using raw collection since its faster\n\t\t\tawait ImportData.col.deleteMany({});\n\t\t}\n\n\t\tawait Promise.all(this.getAllConverters().map((converter) => converter.clearImportData()));\n\t}\n\n\tasync clearSuccessfullyImportedData(): Promise<void> {\n\t\tif (!this._options.workInMemory) {\n\t\t\tawait ImportData.col.deleteMany({\n\t\t\t\terrors: {\n\t\t\t\t\t$exists: false,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tawait Promise.all(this.getAllConverters().map((converter) => converter.clearSuccessfullyImportedData()));\n\t}\n\n\tpublic abort(): void {\n\t\tthis.getAllConverters().forEach((converter) => {\n\t\t\tconverter.aborted = true;\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1619b42453909b8e9b786a1afa38b930d8dbb367"}
