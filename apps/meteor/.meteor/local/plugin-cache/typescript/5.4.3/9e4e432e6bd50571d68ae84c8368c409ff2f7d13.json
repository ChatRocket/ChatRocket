{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/apps-engine/service.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/apps-engine/service.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/apps-engine/service.ts","inputSourceMap":{"version":3,"file":"server/services/apps-engine/service.ts","sourceRoot":"","sources":["server/services/apps-engine/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport type { AppStatus } from '@rocket.chat/apps-engine/definition/AppStatus';\nimport { AppStatusUtils } from '@rocket.chat/apps-engine/definition/AppStatus';\nimport type { IAppInfo } from '@rocket.chat/apps-engine/definition/metadata';\nimport type { IGetAppsFilter } from '@rocket.chat/apps-engine/server/IGetAppsFilter';\nimport type { IAppStorageItem } from '@rocket.chat/apps-engine/server/storage';\nimport type { IAppsEngineService } from '@rocket.chat/core-services';\nimport { ServiceClassInternal } from '@rocket.chat/core-services';\n\nimport { SystemLogger } from '../../lib/logger/system';\n\nexport class AppsEngineService extends ServiceClassInternal implements IAppsEngineService {\n\tprotected name = 'apps-engine';\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.onEvent('presence.status', async ({ user, previousStatus }): Promise<void> => {\n\t\t\tawait Apps.self?.triggerEvent(AppEvents.IPostUserStatusChanged, {\n\t\t\t\tuser,\n\t\t\t\tcurrentStatus: user.status,\n\t\t\t\tpreviousStatus,\n\t\t\t});\n\t\t});\n\n\t\tthis.onEvent('apps.added', async (appId: string): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.added\" event received for app \"${appId}\"`);\n\t\t\t// if the app already exists in this instance, don't load it again\n\t\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\n\t\t\tif (app) {\n\t\t\t\tApps.self?.getRocketChatLogger().info(`\"apps.added\" event received for app \"${appId}\", but it already exists in this instance`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Apps.self?.getManager()?.addLocal(appId);\n\t\t});\n\n\t\tthis.onEvent('apps.removed', async (appId: string): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.removed\" event received for app \"${appId}\"`);\n\t\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\t\t\tif (!app) {\n\t\t\t\tApps.self\n\t\t\t\t\t?.getRocketChatLogger()\n\t\t\t\t\t.info(`\"apps.removed\" event received for app \"${appId}\", but it couldn't be found in this instance`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Apps.self?.getManager()?.removeLocal(appId);\n\t\t});\n\n\t\tthis.onEvent('apps.updated', async (appId: string): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.updated\" event received for app \"${appId}\"`);\n\t\t\tconst storageItem = await Apps.self?.getStorage()?.retrieveOne(appId);\n\t\t\tif (!storageItem) {\n\t\t\t\tApps.self?.getRocketChatLogger().info(`\"apps.updated\" event received for app \"${appId}\", but it couldn't be found in the storage`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst appPackage = await Apps.self?.getAppSourceStorage()?.fetch(storageItem);\n\t\t\tif (!appPackage) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst isEnabled = AppStatusUtils.isEnabled(storageItem.status);\n\t\t\tif (isEnabled) {\n\t\t\t\tawait Apps.self?.getManager()?.updateAndStartupLocal(storageItem, appPackage);\n\t\t\t} else {\n\t\t\t\tawait Apps.self?.getManager()?.updateAndInitializeLocal(storageItem, appPackage);\n\t\t\t}\n\t\t});\n\n\t\tthis.onEvent('apps.statusUpdate', async (appId: string, status: AppStatus): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.statusUpdate\" event received for app \"${appId}\" with status \"${status}\"`);\n\t\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\t\t\tif (!app) {\n\t\t\t\tApps.self\n\t\t\t\t\t?.getRocketChatLogger()\n\t\t\t\t\t.info(`\"apps.statusUpdate\" event received for app \"${appId}\", but it couldn't be found in this instance`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ((await app.getStatus()) === status) {\n\t\t\t\tApps.self?.getRocketChatLogger().info(`\"apps.statusUpdate\" event received for app \"${appId}\", but the status is the same`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (AppStatusUtils.isEnabled(status)) {\n\t\t\t\tawait Apps.self?.getManager()?.enable(appId).catch(SystemLogger.error);\n\t\t\t} else if (AppStatusUtils.isDisabled(status)) {\n\t\t\t\tawait Apps.self?.getManager()?.disable(appId, status, true).catch(SystemLogger.error);\n\t\t\t}\n\t\t});\n\n\t\tthis.onEvent('apps.settingUpdated', async (appId: string, setting): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.settingUpdated\" event received for app \"${appId}\"`, { setting });\n\t\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\t\t\tconst oldSetting = app?.getStorageItem().settings[setting.id].value;\n\n\t\t\t// avoid updating the setting if the value is the same,\n\t\t\t// which caused an infinite loop\n\t\t\t// and sometimes the settings can be an array\n\t\t\t// so we need to convert it to JSON stringified to compare it\n\n\t\t\tif (JSON.stringify(oldSetting) === JSON.stringify(setting.value)) {\n\t\t\t\tApps.self\n\t\t\t\t\t?.getRocketChatLogger()\n\t\t\t\t\t.info(`\"apps.settingUpdated\" event received for setting ${setting.id} of app \"${appId}\", but the setting value is the same`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Apps.self\n\t\t\t\t?.getManager()\n\t\t\t\t?.getSettingsManager()\n\t\t\t\t.updateAppSetting(appId, setting as any);\n\t\t});\n\t}\n\n\tisInitialized(): boolean {\n\t\treturn Boolean(Apps.self?.isInitialized());\n\t}\n\n\tasync getApps(query: IGetAppsFilter): Promise<IAppInfo[] | undefined> {\n\t\treturn (await Apps.self?.getManager()?.get(query))?.map((app) => app.getInfo());\n\t}\n\n\tasync getAppStorageItemById(appId: string): Promise<IAppStorageItem | undefined> {\n\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\n\t\tif (!app) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn app.getStorageItem();\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/apps-engine/service.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/apps-engine/service.ts","inputSourceMap":{"version":3,"file":"server/services/apps-engine/service.ts","sourceRoot":"","sources":["server/services/apps-engine/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport type { AppStatus } from '@rocket.chat/apps-engine/definition/AppStatus';\nimport { AppStatusUtils } from '@rocket.chat/apps-engine/definition/AppStatus';\nimport type { IAppInfo } from '@rocket.chat/apps-engine/definition/metadata';\nimport type { IGetAppsFilter } from '@rocket.chat/apps-engine/server/IGetAppsFilter';\nimport type { IAppStorageItem } from '@rocket.chat/apps-engine/server/storage';\nimport type { IAppsEngineService } from '@rocket.chat/core-services';\nimport { ServiceClassInternal } from '@rocket.chat/core-services';\n\nimport { SystemLogger } from '../../lib/logger/system';\n\nexport class AppsEngineService extends ServiceClassInternal implements IAppsEngineService {\n\tprotected name = 'apps-engine';\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.onEvent('presence.status', async ({ user, previousStatus }): Promise<void> => {\n\t\t\tawait Apps.self?.triggerEvent(AppEvents.IPostUserStatusChanged, {\n\t\t\t\tuser,\n\t\t\t\tcurrentStatus: user.status,\n\t\t\t\tpreviousStatus,\n\t\t\t});\n\t\t});\n\n\t\tthis.onEvent('apps.added', async (appId: string): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.added\" event received for app \"${appId}\"`);\n\t\t\t// if the app already exists in this instance, don't load it again\n\t\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\n\t\t\tif (app) {\n\t\t\t\tApps.self?.getRocketChatLogger().info(`\"apps.added\" event received for app \"${appId}\", but it already exists in this instance`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Apps.self?.getManager()?.addLocal(appId);\n\t\t});\n\n\t\tthis.onEvent('apps.removed', async (appId: string): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.removed\" event received for app \"${appId}\"`);\n\t\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\t\t\tif (!app) {\n\t\t\t\tApps.self\n\t\t\t\t\t?.getRocketChatLogger()\n\t\t\t\t\t.info(`\"apps.removed\" event received for app \"${appId}\", but it couldn't be found in this instance`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Apps.self?.getManager()?.removeLocal(appId);\n\t\t});\n\n\t\tthis.onEvent('apps.updated', async (appId: string): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.updated\" event received for app \"${appId}\"`);\n\t\t\tconst storageItem = await Apps.self?.getStorage()?.retrieveOne(appId);\n\t\t\tif (!storageItem) {\n\t\t\t\tApps.self?.getRocketChatLogger().info(`\"apps.updated\" event received for app \"${appId}\", but it couldn't be found in the storage`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst appPackage = await Apps.self?.getAppSourceStorage()?.fetch(storageItem);\n\t\t\tif (!appPackage) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst isEnabled = AppStatusUtils.isEnabled(storageItem.status);\n\t\t\tif (isEnabled) {\n\t\t\t\tawait Apps.self?.getManager()?.updateAndStartupLocal(storageItem, appPackage);\n\t\t\t} else {\n\t\t\t\tawait Apps.self?.getManager()?.updateAndInitializeLocal(storageItem, appPackage);\n\t\t\t}\n\t\t});\n\n\t\tthis.onEvent('apps.statusUpdate', async (appId: string, status: AppStatus): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.statusUpdate\" event received for app \"${appId}\" with status \"${status}\"`);\n\t\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\t\t\tif (!app) {\n\t\t\t\tApps.self\n\t\t\t\t\t?.getRocketChatLogger()\n\t\t\t\t\t.info(`\"apps.statusUpdate\" event received for app \"${appId}\", but it couldn't be found in this instance`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ((await app.getStatus()) === status) {\n\t\t\t\tApps.self?.getRocketChatLogger().info(`\"apps.statusUpdate\" event received for app \"${appId}\", but the status is the same`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (AppStatusUtils.isEnabled(status)) {\n\t\t\t\tawait Apps.self?.getManager()?.enable(appId).catch(SystemLogger.error);\n\t\t\t} else if (AppStatusUtils.isDisabled(status)) {\n\t\t\t\tawait Apps.self?.getManager()?.disable(appId, status, true).catch(SystemLogger.error);\n\t\t\t}\n\t\t});\n\n\t\tthis.onEvent('apps.settingUpdated', async (appId: string, setting): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.settingUpdated\" event received for app \"${appId}\"`, { setting });\n\t\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\t\t\tconst oldSetting = app?.getStorageItem().settings[setting.id].value;\n\n\t\t\t// avoid updating the setting if the value is the same,\n\t\t\t// which caused an infinite loop\n\t\t\t// and sometimes the settings can be an array\n\t\t\t// so we need to convert it to JSON stringified to compare it\n\n\t\t\tif (JSON.stringify(oldSetting) === JSON.stringify(setting.value)) {\n\t\t\t\tApps.self\n\t\t\t\t\t?.getRocketChatLogger()\n\t\t\t\t\t.info(`\"apps.settingUpdated\" event received for setting ${setting.id} of app \"${appId}\", but the setting value is the same`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Apps.self\n\t\t\t\t?.getManager()\n\t\t\t\t?.getSettingsManager()\n\t\t\t\t.updateAppSetting(appId, setting as any);\n\t\t});\n\t}\n\n\tisInitialized(): boolean {\n\t\treturn Boolean(Apps.self?.isInitialized());\n\t}\n\n\tasync getApps(query: IGetAppsFilter): Promise<IAppInfo[] | undefined> {\n\t\treturn (await Apps.self?.getManager()?.get(query))?.map((app) => app.getInfo());\n\t}\n\n\tasync getAppStorageItemById(appId: string): Promise<IAppStorageItem | undefined> {\n\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\n\t\tif (!app) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn app.getStorageItem();\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      AppsEngineService: () => AppsEngineService\n    });\n    let Apps, AppEvents;\n    module.link(\"@rocket.chat/apps\", {\n      Apps(v) {\n        Apps = v;\n      },\n      AppEvents(v) {\n        AppEvents = v;\n      }\n    }, 0);\n    let AppStatusUtils;\n    module.link(\"@rocket.chat/apps-engine/definition/AppStatus\", {\n      AppStatusUtils(v) {\n        AppStatusUtils = v;\n      }\n    }, 1);\n    let ServiceClassInternal;\n    module.link(\"@rocket.chat/core-services\", {\n      ServiceClassInternal(v) {\n        ServiceClassInternal = v;\n      }\n    }, 2);\n    let SystemLogger;\n    module.link(\"../../lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AppsEngineService extends ServiceClassInternal {\n      constructor() {\n        super();\n        this.name = 'apps-engine';\n        this.onEvent('presence.status', async _ref => {\n          var _Apps$self;\n          let {\n            user,\n            previousStatus\n          } = _ref;\n          await ((_Apps$self = Apps.self) === null || _Apps$self === void 0 ? void 0 : _Apps$self.triggerEvent(AppEvents.IPostUserStatusChanged, {\n            user,\n            currentStatus: user.status,\n            previousStatus\n          }));\n        });\n        this.onEvent('apps.added', async appId => {\n          var _Apps$self2, _Apps$self3, _Apps$self3$getManage, _Apps$self5, _Apps$self5$getManage;\n          (_Apps$self2 = Apps.self) === null || _Apps$self2 === void 0 ? void 0 : _Apps$self2.getRocketChatLogger().debug(\"\\\"apps.added\\\" event received for app \\\"\".concat(appId, \"\\\"\"));\n          // if the app already exists in this instance, don't load it again\n          const app = (_Apps$self3 = Apps.self) === null || _Apps$self3 === void 0 ? void 0 : (_Apps$self3$getManage = _Apps$self3.getManager()) === null || _Apps$self3$getManage === void 0 ? void 0 : _Apps$self3$getManage.getOneById(appId);\n          if (app) {\n            var _Apps$self4;\n            (_Apps$self4 = Apps.self) === null || _Apps$self4 === void 0 ? void 0 : _Apps$self4.getRocketChatLogger().info(\"\\\"apps.added\\\" event received for app \\\"\".concat(appId, \"\\\", but it already exists in this instance\"));\n            return;\n          }\n          await ((_Apps$self5 = Apps.self) === null || _Apps$self5 === void 0 ? void 0 : (_Apps$self5$getManage = _Apps$self5.getManager()) === null || _Apps$self5$getManage === void 0 ? void 0 : _Apps$self5$getManage.addLocal(appId));\n        });\n        this.onEvent('apps.removed', async appId => {\n          var _Apps$self6, _Apps$self7, _Apps$self7$getManage, _Apps$self9, _Apps$self9$getManage;\n          (_Apps$self6 = Apps.self) === null || _Apps$self6 === void 0 ? void 0 : _Apps$self6.getRocketChatLogger().debug(\"\\\"apps.removed\\\" event received for app \\\"\".concat(appId, \"\\\"\"));\n          const app = (_Apps$self7 = Apps.self) === null || _Apps$self7 === void 0 ? void 0 : (_Apps$self7$getManage = _Apps$self7.getManager()) === null || _Apps$self7$getManage === void 0 ? void 0 : _Apps$self7$getManage.getOneById(appId);\n          if (!app) {\n            var _Apps$self8;\n            (_Apps$self8 = Apps.self) === null || _Apps$self8 === void 0 ? void 0 : _Apps$self8.getRocketChatLogger().info(\"\\\"apps.removed\\\" event received for app \\\"\".concat(appId, \"\\\", but it couldn't be found in this instance\"));\n            return;\n          }\n          await ((_Apps$self9 = Apps.self) === null || _Apps$self9 === void 0 ? void 0 : (_Apps$self9$getManage = _Apps$self9.getManager()) === null || _Apps$self9$getManage === void 0 ? void 0 : _Apps$self9$getManage.removeLocal(appId));\n        });\n        this.onEvent('apps.updated', async appId => {\n          var _Apps$self10, _Apps$self11, _Apps$self11$getStora, _Apps$self13, _Apps$self13$getAppSo;\n          (_Apps$self10 = Apps.self) === null || _Apps$self10 === void 0 ? void 0 : _Apps$self10.getRocketChatLogger().debug(\"\\\"apps.updated\\\" event received for app \\\"\".concat(appId, \"\\\"\"));\n          const storageItem = await ((_Apps$self11 = Apps.self) === null || _Apps$self11 === void 0 ? void 0 : (_Apps$self11$getStora = _Apps$self11.getStorage()) === null || _Apps$self11$getStora === void 0 ? void 0 : _Apps$self11$getStora.retrieveOne(appId));\n          if (!storageItem) {\n            var _Apps$self12;\n            (_Apps$self12 = Apps.self) === null || _Apps$self12 === void 0 ? void 0 : _Apps$self12.getRocketChatLogger().info(\"\\\"apps.updated\\\" event received for app \\\"\".concat(appId, \"\\\", but it couldn't be found in the storage\"));\n            return;\n          }\n          const appPackage = await ((_Apps$self13 = Apps.self) === null || _Apps$self13 === void 0 ? void 0 : (_Apps$self13$getAppSo = _Apps$self13.getAppSourceStorage()) === null || _Apps$self13$getAppSo === void 0 ? void 0 : _Apps$self13$getAppSo.fetch(storageItem));\n          if (!appPackage) {\n            return;\n          }\n          const isEnabled = AppStatusUtils.isEnabled(storageItem.status);\n          if (isEnabled) {\n            var _Apps$self14, _Apps$self14$getManag;\n            await ((_Apps$self14 = Apps.self) === null || _Apps$self14 === void 0 ? void 0 : (_Apps$self14$getManag = _Apps$self14.getManager()) === null || _Apps$self14$getManag === void 0 ? void 0 : _Apps$self14$getManag.updateAndStartupLocal(storageItem, appPackage));\n          } else {\n            var _Apps$self15, _Apps$self15$getManag;\n            await ((_Apps$self15 = Apps.self) === null || _Apps$self15 === void 0 ? void 0 : (_Apps$self15$getManag = _Apps$self15.getManager()) === null || _Apps$self15$getManag === void 0 ? void 0 : _Apps$self15$getManag.updateAndInitializeLocal(storageItem, appPackage));\n          }\n        });\n        this.onEvent('apps.statusUpdate', async (appId, status) => {\n          var _Apps$self16, _Apps$self17, _Apps$self17$getManag;\n          (_Apps$self16 = Apps.self) === null || _Apps$self16 === void 0 ? void 0 : _Apps$self16.getRocketChatLogger().debug(\"\\\"apps.statusUpdate\\\" event received for app \\\"\".concat(appId, \"\\\" with status \\\"\").concat(status, \"\\\"\"));\n          const app = (_Apps$self17 = Apps.self) === null || _Apps$self17 === void 0 ? void 0 : (_Apps$self17$getManag = _Apps$self17.getManager()) === null || _Apps$self17$getManag === void 0 ? void 0 : _Apps$self17$getManag.getOneById(appId);\n          if (!app) {\n            var _Apps$self18;\n            (_Apps$self18 = Apps.self) === null || _Apps$self18 === void 0 ? void 0 : _Apps$self18.getRocketChatLogger().info(\"\\\"apps.statusUpdate\\\" event received for app \\\"\".concat(appId, \"\\\", but it couldn't be found in this instance\"));\n            return;\n          }\n          if ((await app.getStatus()) === status) {\n            var _Apps$self19;\n            (_Apps$self19 = Apps.self) === null || _Apps$self19 === void 0 ? void 0 : _Apps$self19.getRocketChatLogger().info(\"\\\"apps.statusUpdate\\\" event received for app \\\"\".concat(appId, \"\\\", but the status is the same\"));\n            return;\n          }\n          if (AppStatusUtils.isEnabled(status)) {\n            var _Apps$self20, _Apps$self20$getManag;\n            await ((_Apps$self20 = Apps.self) === null || _Apps$self20 === void 0 ? void 0 : (_Apps$self20$getManag = _Apps$self20.getManager()) === null || _Apps$self20$getManag === void 0 ? void 0 : _Apps$self20$getManag.enable(appId).catch(SystemLogger.error));\n          } else if (AppStatusUtils.isDisabled(status)) {\n            var _Apps$self21, _Apps$self21$getManag;\n            await ((_Apps$self21 = Apps.self) === null || _Apps$self21 === void 0 ? void 0 : (_Apps$self21$getManag = _Apps$self21.getManager()) === null || _Apps$self21$getManag === void 0 ? void 0 : _Apps$self21$getManag.disable(appId, status, true).catch(SystemLogger.error));\n          }\n        });\n        this.onEvent('apps.settingUpdated', async (appId, setting) => {\n          var _Apps$self22, _Apps$self23, _Apps$self23$getManag, _Apps$self25, _Apps$self25$getManag;\n          (_Apps$self22 = Apps.self) === null || _Apps$self22 === void 0 ? void 0 : _Apps$self22.getRocketChatLogger().debug(\"\\\"apps.settingUpdated\\\" event received for app \\\"\".concat(appId, \"\\\"\"), {\n            setting\n          });\n          const app = (_Apps$self23 = Apps.self) === null || _Apps$self23 === void 0 ? void 0 : (_Apps$self23$getManag = _Apps$self23.getManager()) === null || _Apps$self23$getManag === void 0 ? void 0 : _Apps$self23$getManag.getOneById(appId);\n          const oldSetting = app === null || app === void 0 ? void 0 : app.getStorageItem().settings[setting.id].value;\n          // avoid updating the setting if the value is the same,\n          // which caused an infinite loop\n          // and sometimes the settings can be an array\n          // so we need to convert it to JSON stringified to compare it\n          if (JSON.stringify(oldSetting) === JSON.stringify(setting.value)) {\n            var _Apps$self24;\n            (_Apps$self24 = Apps.self) === null || _Apps$self24 === void 0 ? void 0 : _Apps$self24.getRocketChatLogger().info(\"\\\"apps.settingUpdated\\\" event received for setting \".concat(setting.id, \" of app \\\"\").concat(appId, \"\\\", but the setting value is the same\"));\n            return;\n          }\n          await ((_Apps$self25 = Apps.self) === null || _Apps$self25 === void 0 ? void 0 : (_Apps$self25$getManag = _Apps$self25.getManager()) === null || _Apps$self25$getManag === void 0 ? void 0 : _Apps$self25$getManag.getSettingsManager().updateAppSetting(appId, setting));\n        });\n      }\n      isInitialized() {\n        var _Apps$self26;\n        return Boolean((_Apps$self26 = Apps.self) === null || _Apps$self26 === void 0 ? void 0 : _Apps$self26.isInitialized());\n      }\n      async getApps(query) {\n        var _await$Apps$self$getM, _Apps$self27, _Apps$self27$getManag;\n        return (_await$Apps$self$getM = await ((_Apps$self27 = Apps.self) === null || _Apps$self27 === void 0 ? void 0 : (_Apps$self27$getManag = _Apps$self27.getManager()) === null || _Apps$self27$getManag === void 0 ? void 0 : _Apps$self27$getManag.get(query))) === null || _await$Apps$self$getM === void 0 ? void 0 : _await$Apps$self$getM.map(app => app.getInfo());\n      }\n      async getAppStorageItemById(appId) {\n        var _Apps$self28, _Apps$self28$getManag;\n        const app = (_Apps$self28 = Apps.self) === null || _Apps$self28 === void 0 ? void 0 : (_Apps$self28$getManag = _Apps$self28.getManager()) === null || _Apps$self28$getManag === void 0 ? void 0 : _Apps$self28$getManag.getOneById(appId);\n        if (!app) {\n          return;\n        }\n        return app.getStorageItem();\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","AppsEngineService","Apps","AppEvents","link","v","AppStatusUtils","ServiceClassInternal","SystemLogger","__reifyWaitForDeps__","constructor","name","onEvent","_ref","_Apps$self","user","previousStatus","self","triggerEvent","IPostUserStatusChanged","currentStatus","status","appId","_Apps$self2","_Apps$self3","_Apps$self3$getManage","_Apps$self5","_Apps$self5$getManage","getRocketChatLogger","debug","concat","app","getManager","getOneById","_Apps$self4","info","addLocal","_Apps$self6","_Apps$self7","_Apps$self7$getManage","_Apps$self9","_Apps$self9$getManage","_Apps$self8","removeLocal","_Apps$self10","_Apps$self11","_Apps$self11$getStora","_Apps$self13","_Apps$self13$getAppSo","storageItem","getStorage","retrieveOne","_Apps$self12","appPackage","getAppSourceStorage","fetch","isEnabled","_Apps$self14","_Apps$self14$getManag","updateAndStartupLocal","_Apps$self15","_Apps$self15$getManag","updateAndInitializeLocal","_Apps$self16","_Apps$self17","_Apps$self17$getManag","_Apps$self18","getStatus","_Apps$self19","_Apps$self20","_Apps$self20$getManag","enable","catch","error","isDisabled","_Apps$self21","_Apps$self21$getManag","disable","setting","_Apps$self22","_Apps$self23","_Apps$self23$getManag","_Apps$self25","_Apps$self25$getManag","oldSetting","getStorageItem","settings","id","value","JSON","stringify","_Apps$self24","getSettingsManager","updateAppSetting","isInitialized","_Apps$self26","Boolean","getApps","query","_await$Apps$self$getM","_Apps$self27","_Apps$self27$getManag","get","map","getInfo","getAppStorageItemById","_Apps$self28","_Apps$self28$getManag","__reify_async_result__","_reifyError","async"],"sources":["server/services/apps-engine/service.ts"],"sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport type { AppStatus } from '@rocket.chat/apps-engine/definition/AppStatus';\nimport { AppStatusUtils } from '@rocket.chat/apps-engine/definition/AppStatus';\nimport type { IAppInfo } from '@rocket.chat/apps-engine/definition/metadata';\nimport type { IGetAppsFilter } from '@rocket.chat/apps-engine/server/IGetAppsFilter';\nimport type { IAppStorageItem } from '@rocket.chat/apps-engine/server/storage';\nimport type { IAppsEngineService } from '@rocket.chat/core-services';\nimport { ServiceClassInternal } from '@rocket.chat/core-services';\n\nimport { SystemLogger } from '../../lib/logger/system';\n\nexport class AppsEngineService extends ServiceClassInternal implements IAppsEngineService {\n\tprotected name = 'apps-engine';\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.onEvent('presence.status', async ({ user, previousStatus }): Promise<void> => {\n\t\t\tawait Apps.self?.triggerEvent(AppEvents.IPostUserStatusChanged, {\n\t\t\t\tuser,\n\t\t\t\tcurrentStatus: user.status,\n\t\t\t\tpreviousStatus,\n\t\t\t});\n\t\t});\n\n\t\tthis.onEvent('apps.added', async (appId: string): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.added\" event received for app \"${appId}\"`);\n\t\t\t// if the app already exists in this instance, don't load it again\n\t\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\n\t\t\tif (app) {\n\t\t\t\tApps.self?.getRocketChatLogger().info(`\"apps.added\" event received for app \"${appId}\", but it already exists in this instance`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Apps.self?.getManager()?.addLocal(appId);\n\t\t});\n\n\t\tthis.onEvent('apps.removed', async (appId: string): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.removed\" event received for app \"${appId}\"`);\n\t\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\t\t\tif (!app) {\n\t\t\t\tApps.self\n\t\t\t\t\t?.getRocketChatLogger()\n\t\t\t\t\t.info(`\"apps.removed\" event received for app \"${appId}\", but it couldn't be found in this instance`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Apps.self?.getManager()?.removeLocal(appId);\n\t\t});\n\n\t\tthis.onEvent('apps.updated', async (appId: string): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.updated\" event received for app \"${appId}\"`);\n\t\t\tconst storageItem = await Apps.self?.getStorage()?.retrieveOne(appId);\n\t\t\tif (!storageItem) {\n\t\t\t\tApps.self?.getRocketChatLogger().info(`\"apps.updated\" event received for app \"${appId}\", but it couldn't be found in the storage`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst appPackage = await Apps.self?.getAppSourceStorage()?.fetch(storageItem);\n\t\t\tif (!appPackage) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst isEnabled = AppStatusUtils.isEnabled(storageItem.status);\n\t\t\tif (isEnabled) {\n\t\t\t\tawait Apps.self?.getManager()?.updateAndStartupLocal(storageItem, appPackage);\n\t\t\t} else {\n\t\t\t\tawait Apps.self?.getManager()?.updateAndInitializeLocal(storageItem, appPackage);\n\t\t\t}\n\t\t});\n\n\t\tthis.onEvent('apps.statusUpdate', async (appId: string, status: AppStatus): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.statusUpdate\" event received for app \"${appId}\" with status \"${status}\"`);\n\t\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\t\t\tif (!app) {\n\t\t\t\tApps.self\n\t\t\t\t\t?.getRocketChatLogger()\n\t\t\t\t\t.info(`\"apps.statusUpdate\" event received for app \"${appId}\", but it couldn't be found in this instance`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ((await app.getStatus()) === status) {\n\t\t\t\tApps.self?.getRocketChatLogger().info(`\"apps.statusUpdate\" event received for app \"${appId}\", but the status is the same`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (AppStatusUtils.isEnabled(status)) {\n\t\t\t\tawait Apps.self?.getManager()?.enable(appId).catch(SystemLogger.error);\n\t\t\t} else if (AppStatusUtils.isDisabled(status)) {\n\t\t\t\tawait Apps.self?.getManager()?.disable(appId, status, true).catch(SystemLogger.error);\n\t\t\t}\n\t\t});\n\n\t\tthis.onEvent('apps.settingUpdated', async (appId: string, setting): Promise<void> => {\n\t\t\tApps.self?.getRocketChatLogger().debug(`\"apps.settingUpdated\" event received for app \"${appId}\"`, { setting });\n\t\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\t\t\tconst oldSetting = app?.getStorageItem().settings[setting.id].value;\n\n\t\t\t// avoid updating the setting if the value is the same,\n\t\t\t// which caused an infinite loop\n\t\t\t// and sometimes the settings can be an array\n\t\t\t// so we need to convert it to JSON stringified to compare it\n\n\t\t\tif (JSON.stringify(oldSetting) === JSON.stringify(setting.value)) {\n\t\t\t\tApps.self\n\t\t\t\t\t?.getRocketChatLogger()\n\t\t\t\t\t.info(`\"apps.settingUpdated\" event received for setting ${setting.id} of app \"${appId}\", but the setting value is the same`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait Apps.self\n\t\t\t\t?.getManager()\n\t\t\t\t?.getSettingsManager()\n\t\t\t\t.updateAppSetting(appId, setting as any);\n\t\t});\n\t}\n\n\tisInitialized(): boolean {\n\t\treturn Boolean(Apps.self?.isInitialized());\n\t}\n\n\tasync getApps(query: IGetAppsFilter): Promise<IAppInfo[] | undefined> {\n\t\treturn (await Apps.self?.getManager()?.get(query))?.map((app) => app.getInfo());\n\t}\n\n\tasync getAppStorageItemById(appId: string): Promise<IAppStorageItem | undefined> {\n\t\tconst app = Apps.self?.getManager()?.getOneById(appId);\n\n\t\tif (!app) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn app.getStorageItem();\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9e4e432e6bd50571d68ae84c8368c409ff2f7d13"}
