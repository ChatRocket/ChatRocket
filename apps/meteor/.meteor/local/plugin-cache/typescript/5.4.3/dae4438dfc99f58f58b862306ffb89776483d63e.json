{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","sourceRoot":"","sources":["client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\nimport { useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQueryClient, useQuery } from '@tanstack/react-query';\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { withDebouncing } from '../../../../../../lib/utils/highOrderFunctions';\nimport type { FieldExpression, Query } from '../../../../../lib/minimongo';\nimport { createFilterFromQuery } from '../../../../../lib/minimongo';\nimport { onClientMessageReceived } from '../../../../../lib/onClientMessageReceived';\nimport { useRoom } from '../../../contexts/RoomContext';\nimport { useGetMessageByID } from './useGetMessageByID';\n\ntype RoomMessagesRidEvent = IMessage;\n\ntype NotifyRoomRidDeleteMessageBulkEvent = {\n\trid: IMessage['rid'];\n\texcludePinned: boolean;\n\tignoreDiscussion: boolean;\n\tts: FieldExpression<Date>;\n\tusers: string[];\n\tids?: string[]; // message ids have priority over ts\n\tshowDeletedStatus?: boolean;\n};\n\nconst createDeleteCriteria = (params: NotifyRoomRidDeleteMessageBulkEvent): ((message: IMessage) => boolean) => {\n\tconst query: Query<IMessage> = {};\n\n\tif (params.ids) {\n\t\tquery._id = { $in: params.ids };\n\t} else {\n\t\tquery.ts = params.ts;\n\t}\n\n\tif (params.excludePinned) {\n\t\tquery.pinned = { $ne: true };\n\t}\n\n\tif (params.ignoreDiscussion) {\n\t\tquery.drid = { $exists: false };\n\t}\n\tif (params.users?.length) {\n\t\tquery['u.username'] = { $in: params.users };\n\t}\n\n\treturn createFilterFromQuery<IMessage>(query);\n};\n\nconst useSubscribeToMessage = () => {\n\tconst subscribeToRoomMessages = useStream('room-messages');\n\tconst subscribeToNotifyRoom = useStream('notify-room');\n\n\treturn useCallback(\n\t\t(message: IMessage, { onMutate, onDelete }: { onMutate?: (message: IMessage) => void; onDelete?: () => void }) => {\n\t\t\tconst unsubscribeFromRoomMessages = subscribeToRoomMessages(message.rid, (event: RoomMessagesRidEvent) => {\n\t\t\t\tif (message._id === event._id) onMutate?.(event);\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessage = subscribeToNotifyRoom(`${message.rid}/deleteMessage`, (event) => {\n\t\t\t\tif (message._id === event._id) onDelete?.();\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(`${message.rid}/deleteMessageBulk`, (params) => {\n\t\t\t\tconst matchDeleteCriteria = createDeleteCriteria(params);\n\t\t\t\tif (matchDeleteCriteria(message)) onDelete?.();\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tunsubscribeFromRoomMessages();\n\t\t\t\tunsubscribeFromDeleteMessage();\n\t\t\t\tunsubscribeFromDeleteMessageBulk();\n\t\t\t};\n\t\t},\n\t\t[subscribeToNotifyRoom, subscribeToRoomMessages],\n\t);\n};\n\nexport const useThreadMainMessageQuery = (\n\ttmid: IMessage['_id'],\n\t{ onDelete }: { onDelete?: () => void } = {},\n): UseQueryResult<IThreadMainMessage, Error> => {\n\tconst room = useRoom();\n\n\tconst getMessage = useGetMessageByID();\n\tconst subscribeToMessage = useSubscribeToMessage();\n\n\tconst queryClient = useQueryClient();\n\tconst unsubscribeRef = useRef<(() => void) | undefined>();\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tunsubscribeRef.current?.();\n\t\t\tunsubscribeRef.current = undefined;\n\t\t};\n\t}, [tmid]);\n\n\treturn useQuery(['rooms', room._id, 'threads', tmid, 'main-message'] as const, async ({ queryKey }) => {\n\t\tconst mainMessage = await getMessage(tmid);\n\n\t\tif (!mainMessage) {\n\t\t\tthrow new Error('Invalid main message');\n\t\t}\n\n\t\tconst debouncedInvalidate = withDebouncing({ wait: 10000 })(() => {\n\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t});\n\n\t\tunsubscribeRef.current =\n\t\t\tunsubscribeRef.current ||\n\t\t\tsubscribeToMessage(mainMessage, {\n\t\t\t\tonMutate: async (message) => {\n\t\t\t\t\tconst msg = await onClientMessageReceived(message);\n\t\t\t\t\tqueryClient.setQueryData(queryKey, () => msg);\n\t\t\t\t\tdebouncedInvalidate();\n\t\t\t\t},\n\t\t\t\tonDelete: () => {\n\t\t\t\t\tonDelete?.();\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t\t\t},\n\t\t\t});\n\n\t\treturn mainMessage;\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","sourceRoot":"","sources":["client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\nimport { useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQueryClient, useQuery } from '@tanstack/react-query';\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { withDebouncing } from '../../../../../../lib/utils/highOrderFunctions';\nimport type { FieldExpression, Query } from '../../../../../lib/minimongo';\nimport { createFilterFromQuery } from '../../../../../lib/minimongo';\nimport { onClientMessageReceived } from '../../../../../lib/onClientMessageReceived';\nimport { useRoom } from '../../../contexts/RoomContext';\nimport { useGetMessageByID } from './useGetMessageByID';\n\ntype RoomMessagesRidEvent = IMessage;\n\ntype NotifyRoomRidDeleteMessageBulkEvent = {\n\trid: IMessage['rid'];\n\texcludePinned: boolean;\n\tignoreDiscussion: boolean;\n\tts: FieldExpression<Date>;\n\tusers: string[];\n\tids?: string[]; // message ids have priority over ts\n\tshowDeletedStatus?: boolean;\n};\n\nconst createDeleteCriteria = (params: NotifyRoomRidDeleteMessageBulkEvent): ((message: IMessage) => boolean) => {\n\tconst query: Query<IMessage> = {};\n\n\tif (params.ids) {\n\t\tquery._id = { $in: params.ids };\n\t} else {\n\t\tquery.ts = params.ts;\n\t}\n\n\tif (params.excludePinned) {\n\t\tquery.pinned = { $ne: true };\n\t}\n\n\tif (params.ignoreDiscussion) {\n\t\tquery.drid = { $exists: false };\n\t}\n\tif (params.users?.length) {\n\t\tquery['u.username'] = { $in: params.users };\n\t}\n\n\treturn createFilterFromQuery<IMessage>(query);\n};\n\nconst useSubscribeToMessage = () => {\n\tconst subscribeToRoomMessages = useStream('room-messages');\n\tconst subscribeToNotifyRoom = useStream('notify-room');\n\n\treturn useCallback(\n\t\t(message: IMessage, { onMutate, onDelete }: { onMutate?: (message: IMessage) => void; onDelete?: () => void }) => {\n\t\t\tconst unsubscribeFromRoomMessages = subscribeToRoomMessages(message.rid, (event: RoomMessagesRidEvent) => {\n\t\t\t\tif (message._id === event._id) onMutate?.(event);\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessage = subscribeToNotifyRoom(`${message.rid}/deleteMessage`, (event) => {\n\t\t\t\tif (message._id === event._id) onDelete?.();\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(`${message.rid}/deleteMessageBulk`, (params) => {\n\t\t\t\tconst matchDeleteCriteria = createDeleteCriteria(params);\n\t\t\t\tif (matchDeleteCriteria(message)) onDelete?.();\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tunsubscribeFromRoomMessages();\n\t\t\t\tunsubscribeFromDeleteMessage();\n\t\t\t\tunsubscribeFromDeleteMessageBulk();\n\t\t\t};\n\t\t},\n\t\t[subscribeToNotifyRoom, subscribeToRoomMessages],\n\t);\n};\n\nexport const useThreadMainMessageQuery = (\n\ttmid: IMessage['_id'],\n\t{ onDelete }: { onDelete?: () => void } = {},\n): UseQueryResult<IThreadMainMessage, Error> => {\n\tconst room = useRoom();\n\n\tconst getMessage = useGetMessageByID();\n\tconst subscribeToMessage = useSubscribeToMessage();\n\n\tconst queryClient = useQueryClient();\n\tconst unsubscribeRef = useRef<(() => void) | undefined>();\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tunsubscribeRef.current?.();\n\t\t\tunsubscribeRef.current = undefined;\n\t\t};\n\t}, [tmid]);\n\n\treturn useQuery(['rooms', room._id, 'threads', tmid, 'main-message'] as const, async ({ queryKey }) => {\n\t\tconst mainMessage = await getMessage(tmid);\n\n\t\tif (!mainMessage) {\n\t\t\tthrow new Error('Invalid main message');\n\t\t}\n\n\t\tconst debouncedInvalidate = withDebouncing({ wait: 10000 })(() => {\n\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t});\n\n\t\tunsubscribeRef.current =\n\t\t\tunsubscribeRef.current ||\n\t\t\tsubscribeToMessage(mainMessage, {\n\t\t\t\tonMutate: async (message) => {\n\t\t\t\t\tconst msg = await onClientMessageReceived(message);\n\t\t\t\t\tqueryClient.setQueryData(queryKey, () => msg);\n\t\t\t\t\tdebouncedInvalidate();\n\t\t\t\t},\n\t\t\t\tonDelete: () => {\n\t\t\t\t\tonDelete?.();\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t\t\t},\n\t\t\t});\n\n\t\treturn mainMessage;\n\t});\n};\n"]}}},"code":"module.export({\n  useThreadMainMessageQuery: () => useThreadMainMessageQuery\n});\nlet useStream;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useStream(v) {\n    useStream = v;\n  }\n}, 0);\nlet useQueryClient, useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQueryClient(v) {\n    useQueryClient = v;\n  },\n  useQuery(v) {\n    useQuery = v;\n  }\n}, 1);\nlet useCallback, useEffect, useRef;\nmodule.link(\"react\", {\n  useCallback(v) {\n    useCallback = v;\n  },\n  useEffect(v) {\n    useEffect = v;\n  },\n  useRef(v) {\n    useRef = v;\n  }\n}, 2);\nlet withDebouncing;\nmodule.link(\"../../../../../../lib/utils/highOrderFunctions\", {\n  withDebouncing(v) {\n    withDebouncing = v;\n  }\n}, 3);\nlet createFilterFromQuery;\nmodule.link(\"../../../../../lib/minimongo\", {\n  createFilterFromQuery(v) {\n    createFilterFromQuery = v;\n  }\n}, 4);\nlet onClientMessageReceived;\nmodule.link(\"../../../../../lib/onClientMessageReceived\", {\n  onClientMessageReceived(v) {\n    onClientMessageReceived = v;\n  }\n}, 5);\nlet useRoom;\nmodule.link(\"../../../contexts/RoomContext\", {\n  useRoom(v) {\n    useRoom = v;\n  }\n}, 6);\nlet useGetMessageByID;\nmodule.link(\"./useGetMessageByID\", {\n  useGetMessageByID(v) {\n    useGetMessageByID = v;\n  }\n}, 7);\nconst createDeleteCriteria = params => {\n  var _params$users;\n  const query = {};\n  if (params.ids) {\n    query._id = {\n      $in: params.ids\n    };\n  } else {\n    query.ts = params.ts;\n  }\n  if (params.excludePinned) {\n    query.pinned = {\n      $ne: true\n    };\n  }\n  if (params.ignoreDiscussion) {\n    query.drid = {\n      $exists: false\n    };\n  }\n  if ((_params$users = params.users) !== null && _params$users !== void 0 && _params$users.length) {\n    query['u.username'] = {\n      $in: params.users\n    };\n  }\n  return createFilterFromQuery(query);\n};\nconst useSubscribeToMessage = () => {\n  const subscribeToRoomMessages = useStream('room-messages');\n  const subscribeToNotifyRoom = useStream('notify-room');\n  return useCallback((message, _ref) => {\n    let {\n      onMutate,\n      onDelete\n    } = _ref;\n    const unsubscribeFromRoomMessages = subscribeToRoomMessages(message.rid, event => {\n      if (message._id === event._id) onMutate === null || onMutate === void 0 ? void 0 : onMutate(event);\n    });\n    const unsubscribeFromDeleteMessage = subscribeToNotifyRoom(\"\".concat(message.rid, \"/deleteMessage\"), event => {\n      if (message._id === event._id) onDelete === null || onDelete === void 0 ? void 0 : onDelete();\n    });\n    const unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(\"\".concat(message.rid, \"/deleteMessageBulk\"), params => {\n      const matchDeleteCriteria = createDeleteCriteria(params);\n      if (matchDeleteCriteria(message)) onDelete === null || onDelete === void 0 ? void 0 : onDelete();\n    });\n    return () => {\n      unsubscribeFromRoomMessages();\n      unsubscribeFromDeleteMessage();\n      unsubscribeFromDeleteMessageBulk();\n    };\n  }, [subscribeToNotifyRoom, subscribeToRoomMessages]);\n};\nconst useThreadMainMessageQuery = function (tmid) {\n  let {\n    onDelete\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const room = useRoom();\n  const getMessage = useGetMessageByID();\n  const subscribeToMessage = useSubscribeToMessage();\n  const queryClient = useQueryClient();\n  const unsubscribeRef = useRef();\n  useEffect(() => {\n    return () => {\n      var _unsubscribeRef$curre;\n      (_unsubscribeRef$curre = unsubscribeRef.current) === null || _unsubscribeRef$curre === void 0 ? void 0 : _unsubscribeRef$curre.call(unsubscribeRef);\n      unsubscribeRef.current = undefined;\n    };\n  }, [tmid]);\n  return useQuery(['rooms', room._id, 'threads', tmid, 'main-message'], async _ref2 => {\n    let {\n      queryKey\n    } = _ref2;\n    const mainMessage = await getMessage(tmid);\n    if (!mainMessage) {\n      throw new Error('Invalid main message');\n    }\n    const debouncedInvalidate = withDebouncing({\n      wait: 10000\n    })(() => {\n      queryClient.invalidateQueries(queryKey, {\n        exact: true\n      });\n    });\n    unsubscribeRef.current = unsubscribeRef.current || subscribeToMessage(mainMessage, {\n      onMutate: async message => {\n        const msg = await onClientMessageReceived(message);\n        queryClient.setQueryData(queryKey, () => msg);\n        debouncedInvalidate();\n      },\n      onDelete: () => {\n        onDelete === null || onDelete === void 0 ? void 0 : onDelete();\n        queryClient.invalidateQueries(queryKey, {\n          exact: true\n        });\n      }\n    });\n    return mainMessage;\n  });\n};","map":{"version":3,"names":["module","export","useThreadMainMessageQuery","useStream","link","v","useQueryClient","useQuery","useCallback","useEffect","useRef","withDebouncing","createFilterFromQuery","onClientMessageReceived","useRoom","useGetMessageByID","createDeleteCriteria","params","_params$users","query","ids","_id","$in","ts","excludePinned","pinned","$ne","ignoreDiscussion","drid","$exists","users","length","useSubscribeToMessage","subscribeToRoomMessages","subscribeToNotifyRoom","message","_ref","onMutate","onDelete","unsubscribeFromRoomMessages","rid","event","unsubscribeFromDeleteMessage","concat","unsubscribeFromDeleteMessageBulk","matchDeleteCriteria","tmid","arguments","undefined","room","getMessage","subscribeToMessage","queryClient","unsubscribeRef","_unsubscribeRef$curre","current","call","_ref2","queryKey","mainMessage","Error","debouncedInvalidate","wait","invalidateQueries","exact","msg","setQueryData"],"sources":["client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts"],"sourcesContent":["import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\nimport { useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQueryClient, useQuery } from '@tanstack/react-query';\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { withDebouncing } from '../../../../../../lib/utils/highOrderFunctions';\nimport type { FieldExpression, Query } from '../../../../../lib/minimongo';\nimport { createFilterFromQuery } from '../../../../../lib/minimongo';\nimport { onClientMessageReceived } from '../../../../../lib/onClientMessageReceived';\nimport { useRoom } from '../../../contexts/RoomContext';\nimport { useGetMessageByID } from './useGetMessageByID';\n\ntype RoomMessagesRidEvent = IMessage;\n\ntype NotifyRoomRidDeleteMessageBulkEvent = {\n\trid: IMessage['rid'];\n\texcludePinned: boolean;\n\tignoreDiscussion: boolean;\n\tts: FieldExpression<Date>;\n\tusers: string[];\n\tids?: string[]; // message ids have priority over ts\n\tshowDeletedStatus?: boolean;\n};\n\nconst createDeleteCriteria = (params: NotifyRoomRidDeleteMessageBulkEvent): ((message: IMessage) => boolean) => {\n\tconst query: Query<IMessage> = {};\n\n\tif (params.ids) {\n\t\tquery._id = { $in: params.ids };\n\t} else {\n\t\tquery.ts = params.ts;\n\t}\n\n\tif (params.excludePinned) {\n\t\tquery.pinned = { $ne: true };\n\t}\n\n\tif (params.ignoreDiscussion) {\n\t\tquery.drid = { $exists: false };\n\t}\n\tif (params.users?.length) {\n\t\tquery['u.username'] = { $in: params.users };\n\t}\n\n\treturn createFilterFromQuery<IMessage>(query);\n};\n\nconst useSubscribeToMessage = () => {\n\tconst subscribeToRoomMessages = useStream('room-messages');\n\tconst subscribeToNotifyRoom = useStream('notify-room');\n\n\treturn useCallback(\n\t\t(message: IMessage, { onMutate, onDelete }: { onMutate?: (message: IMessage) => void; onDelete?: () => void }) => {\n\t\t\tconst unsubscribeFromRoomMessages = subscribeToRoomMessages(message.rid, (event: RoomMessagesRidEvent) => {\n\t\t\t\tif (message._id === event._id) onMutate?.(event);\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessage = subscribeToNotifyRoom(`${message.rid}/deleteMessage`, (event) => {\n\t\t\t\tif (message._id === event._id) onDelete?.();\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(`${message.rid}/deleteMessageBulk`, (params) => {\n\t\t\t\tconst matchDeleteCriteria = createDeleteCriteria(params);\n\t\t\t\tif (matchDeleteCriteria(message)) onDelete?.();\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tunsubscribeFromRoomMessages();\n\t\t\t\tunsubscribeFromDeleteMessage();\n\t\t\t\tunsubscribeFromDeleteMessageBulk();\n\t\t\t};\n\t\t},\n\t\t[subscribeToNotifyRoom, subscribeToRoomMessages],\n\t);\n};\n\nexport const useThreadMainMessageQuery = (\n\ttmid: IMessage['_id'],\n\t{ onDelete }: { onDelete?: () => void } = {},\n): UseQueryResult<IThreadMainMessage, Error> => {\n\tconst room = useRoom();\n\n\tconst getMessage = useGetMessageByID();\n\tconst subscribeToMessage = useSubscribeToMessage();\n\n\tconst queryClient = useQueryClient();\n\tconst unsubscribeRef = useRef<(() => void) | undefined>();\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tunsubscribeRef.current?.();\n\t\t\tunsubscribeRef.current = undefined;\n\t\t};\n\t}, [tmid]);\n\n\treturn useQuery(['rooms', room._id, 'threads', tmid, 'main-message'] as const, async ({ queryKey }) => {\n\t\tconst mainMessage = await getMessage(tmid);\n\n\t\tif (!mainMessage) {\n\t\t\tthrow new Error('Invalid main message');\n\t\t}\n\n\t\tconst debouncedInvalidate = withDebouncing({ wait: 10000 })(() => {\n\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t});\n\n\t\tunsubscribeRef.current =\n\t\t\tunsubscribeRef.current ||\n\t\t\tsubscribeToMessage(mainMessage, {\n\t\t\t\tonMutate: async (message) => {\n\t\t\t\t\tconst msg = await onClientMessageReceived(message);\n\t\t\t\t\tqueryClient.setQueryData(queryKey, () => msg);\n\t\t\t\t\tdebouncedInvalidate();\n\t\t\t\t},\n\t\t\t\tonDelete: () => {\n\t\t\t\t\tonDelete?.();\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t\t\t},\n\t\t\t});\n\n\t\treturn mainMessage;\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"dae4438dfc99f58f58b862306ffb89776483d63e"}
