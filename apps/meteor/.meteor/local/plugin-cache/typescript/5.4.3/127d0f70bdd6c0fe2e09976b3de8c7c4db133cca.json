{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/omnichannel/reports/hooks/useChannelsSection.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/omnichannel/reports/hooks/useChannelsSection.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/omnichannel/reports/hooks/useChannelsSection.tsx","inputSourceMap":{"version":3,"file":"client/omnichannel/reports/hooks/useChannelsSection.tsx","sourceRoot":"","sources":["client/omnichannel/reports/hooks/useChannelsSection.tsx"],"names":[],"mappings":"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","sourcesContent":["import { capitalize } from '@rocket.chat/string-helpers';\nimport type { TranslationContextValue, TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useMemo } from 'react';\n\nimport { getPeriodRange } from '../../../components/dashboards/periods';\nimport { usePeriodSelectorStorage } from '../../../components/dashboards/usePeriodSelectorStorage';\nimport { PERIOD_OPTIONS } from '../components/constants';\nimport { formatPeriodDescription } from '../utils/formatPeriodDescription';\nimport { getTop } from '../utils/getTop';\nimport { round } from '../utils/round';\nimport { useDefaultDownload } from './useDefaultDownload';\n\ntype DataItem = { label: string; value: number; id: string; rawLabel: string };\n\nconst TYPE_LABEL: Record<string, TranslationKey> = {\n\t'widget': 'Livechat',\n\t'email-inbox': 'Email',\n\t'twilio': 'SMS',\n\t'api': 'Custom_Integration',\n};\n\nconst formatItem = (item: { label: string; value: number }, total: number, t: TranslationContextValue['translate']): DataItem => {\n\tconst percentage = total > 0 ? round((item.value / total) * 100) : 0;\n\tconst label = `${t(TYPE_LABEL[item.label]) || capitalize(item.label)}`;\n\treturn {\n\t\t...item,\n\t\tlabel: `${label} ${item.value} (${percentage}%)`,\n\t\trawLabel: label,\n\t\tid: item.label,\n\t};\n};\n\nconst formatChartData = (data: { label: string; value: number }[] | undefined = [], total = 0, t: TranslationContextValue['translate']) => {\n\treturn data.map((item) => formatItem(item, total, t));\n};\n\nexport const useChannelsSection = () => {\n\tconst t = useTranslation();\n\tconst [period, periodSelectorProps] = usePeriodSelectorStorage('reports-channels-period', PERIOD_OPTIONS);\n\tconst getConversationsBySource = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-source');\n\n\tconst {\n\t\tdata: { data, rawData, total } = { data: [], rawData: [], total: 0 },\n\t\trefetch,\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t} = useQuery(\n\t\t['omnichannel-reports', 'conversations-by-source', period],\n\t\tasync () => {\n\t\t\tconst { start, end } = getPeriodRange(period);\n\t\t\tconst response = await getConversationsBySource({ start: start.toISOString(), end: end.toISOString() });\n\t\t\tconst data = formatChartData(response.data, response.total, t);\n\t\t\tconst displayData: DataItem[] = getTop<DataItem>(5, data, (value) => formatItem({ label: t('Others'), value }, response.total, t));\n\t\t\treturn { ...response, data: displayData, rawData: data };\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 5 * 60 * 1000,\n\t\t},\n\t);\n\n\tconst title = t('Conversations_by_channel');\n\tconst subtitle = t('__count__conversations__period__', {\n\t\tcount: total ?? 0,\n\t\tperiod: formatPeriodDescription(period, t),\n\t});\n\tconst emptyStateSubtitle = t('Omnichannel_Reports_Channels_Empty_Subtitle');\n\n\tconst downloadProps = useDefaultDownload({ columnName: t('Channel'), title, data: rawData, period });\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: 'conversations-by-channel',\n\t\t\ttitle,\n\t\t\tsubtitle,\n\t\t\temptyStateSubtitle,\n\t\t\tdata,\n\t\t\ttotal,\n\t\t\tisLoading,\n\t\t\tisError,\n\t\t\tisDataFound: isSuccess && data.length > 0,\n\t\t\tperiodSelectorProps,\n\t\t\tperiod,\n\t\t\tdownloadProps,\n\t\t\tonRetry: refetch,\n\t\t}),\n\t\t[title, subtitle, emptyStateSubtitle, data, total, isLoading, isError, isSuccess, periodSelectorProps, period, downloadProps, refetch],\n\t);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/omnichannel/reports/hooks/useChannelsSection.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/omnichannel/reports/hooks/useChannelsSection.tsx","inputSourceMap":{"version":3,"file":"client/omnichannel/reports/hooks/useChannelsSection.tsx","sourceRoot":"","sources":["client/omnichannel/reports/hooks/useChannelsSection.tsx"],"names":[],"mappings":"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","sourcesContent":["import { capitalize } from '@rocket.chat/string-helpers';\nimport type { TranslationContextValue, TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useMemo } from 'react';\n\nimport { getPeriodRange } from '../../../components/dashboards/periods';\nimport { usePeriodSelectorStorage } from '../../../components/dashboards/usePeriodSelectorStorage';\nimport { PERIOD_OPTIONS } from '../components/constants';\nimport { formatPeriodDescription } from '../utils/formatPeriodDescription';\nimport { getTop } from '../utils/getTop';\nimport { round } from '../utils/round';\nimport { useDefaultDownload } from './useDefaultDownload';\n\ntype DataItem = { label: string; value: number; id: string; rawLabel: string };\n\nconst TYPE_LABEL: Record<string, TranslationKey> = {\n\t'widget': 'Livechat',\n\t'email-inbox': 'Email',\n\t'twilio': 'SMS',\n\t'api': 'Custom_Integration',\n};\n\nconst formatItem = (item: { label: string; value: number }, total: number, t: TranslationContextValue['translate']): DataItem => {\n\tconst percentage = total > 0 ? round((item.value / total) * 100) : 0;\n\tconst label = `${t(TYPE_LABEL[item.label]) || capitalize(item.label)}`;\n\treturn {\n\t\t...item,\n\t\tlabel: `${label} ${item.value} (${percentage}%)`,\n\t\trawLabel: label,\n\t\tid: item.label,\n\t};\n};\n\nconst formatChartData = (data: { label: string; value: number }[] | undefined = [], total = 0, t: TranslationContextValue['translate']) => {\n\treturn data.map((item) => formatItem(item, total, t));\n};\n\nexport const useChannelsSection = () => {\n\tconst t = useTranslation();\n\tconst [period, periodSelectorProps] = usePeriodSelectorStorage('reports-channels-period', PERIOD_OPTIONS);\n\tconst getConversationsBySource = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-source');\n\n\tconst {\n\t\tdata: { data, rawData, total } = { data: [], rawData: [], total: 0 },\n\t\trefetch,\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t} = useQuery(\n\t\t['omnichannel-reports', 'conversations-by-source', period],\n\t\tasync () => {\n\t\t\tconst { start, end } = getPeriodRange(period);\n\t\t\tconst response = await getConversationsBySource({ start: start.toISOString(), end: end.toISOString() });\n\t\t\tconst data = formatChartData(response.data, response.total, t);\n\t\t\tconst displayData: DataItem[] = getTop<DataItem>(5, data, (value) => formatItem({ label: t('Others'), value }, response.total, t));\n\t\t\treturn { ...response, data: displayData, rawData: data };\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 5 * 60 * 1000,\n\t\t},\n\t);\n\n\tconst title = t('Conversations_by_channel');\n\tconst subtitle = t('__count__conversations__period__', {\n\t\tcount: total ?? 0,\n\t\tperiod: formatPeriodDescription(period, t),\n\t});\n\tconst emptyStateSubtitle = t('Omnichannel_Reports_Channels_Empty_Subtitle');\n\n\tconst downloadProps = useDefaultDownload({ columnName: t('Channel'), title, data: rawData, period });\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: 'conversations-by-channel',\n\t\t\ttitle,\n\t\t\tsubtitle,\n\t\t\temptyStateSubtitle,\n\t\t\tdata,\n\t\t\ttotal,\n\t\t\tisLoading,\n\t\t\tisError,\n\t\t\tisDataFound: isSuccess && data.length > 0,\n\t\t\tperiodSelectorProps,\n\t\t\tperiod,\n\t\t\tdownloadProps,\n\t\t\tonRetry: refetch,\n\t\t}),\n\t\t[title, subtitle, emptyStateSubtitle, data, total, isLoading, isError, isSuccess, periodSelectorProps, period, downloadProps, refetch],\n\t);\n};\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 1);\nvar _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 2);\nmodule.export({\n  useChannelsSection: function () {\n    return useChannelsSection;\n  }\n});\nvar capitalize;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  capitalize: function (v) {\n    capitalize = v;\n  }\n}, 0);\nvar useEndpoint, useTranslation;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  },\n  useTranslation: function (v) {\n    useTranslation = v;\n  }\n}, 1);\nvar useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery: function (v) {\n    useQuery = v;\n  }\n}, 2);\nvar useMemo;\nmodule.link(\"react\", {\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 3);\nvar getPeriodRange;\nmodule.link(\"../../../components/dashboards/periods\", {\n  getPeriodRange: function (v) {\n    getPeriodRange = v;\n  }\n}, 4);\nvar usePeriodSelectorStorage;\nmodule.link(\"../../../components/dashboards/usePeriodSelectorStorage\", {\n  usePeriodSelectorStorage: function (v) {\n    usePeriodSelectorStorage = v;\n  }\n}, 5);\nvar PERIOD_OPTIONS;\nmodule.link(\"../components/constants\", {\n  PERIOD_OPTIONS: function (v) {\n    PERIOD_OPTIONS = v;\n  }\n}, 6);\nvar formatPeriodDescription;\nmodule.link(\"../utils/formatPeriodDescription\", {\n  formatPeriodDescription: function (v) {\n    formatPeriodDescription = v;\n  }\n}, 7);\nvar getTop;\nmodule.link(\"../utils/getTop\", {\n  getTop: function (v) {\n    getTop = v;\n  }\n}, 8);\nvar round;\nmodule.link(\"../utils/round\", {\n  round: function (v) {\n    round = v;\n  }\n}, 9);\nvar useDefaultDownload;\nmodule.link(\"./useDefaultDownload\", {\n  useDefaultDownload: function (v) {\n    useDefaultDownload = v;\n  }\n}, 10);\nvar TYPE_LABEL = {\n  'widget': 'Livechat',\n  'email-inbox': 'Email',\n  'twilio': 'SMS',\n  'api': 'Custom_Integration'\n};\nvar formatItem = function (item, total, t) {\n  var percentage = total > 0 ? round(item.value / total * 100) : 0;\n  var label = \"\" + (t(TYPE_LABEL[item.label]) || capitalize(item.label));\n  return _objectSpread(_objectSpread({}, item), {}, {\n    label: label + \" \" + item.value + \" (\" + percentage + \"%)\",\n    rawLabel: label,\n    id: item.label\n  });\n};\nvar formatChartData = function () {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var total = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var t = arguments.length > 2 ? arguments[2] : undefined;\n  return data.map(function (item) {\n    return formatItem(item, total, t);\n  });\n};\nvar useChannelsSection = function () {\n  var t = useTranslation();\n  var _usePeriodSelectorSto = usePeriodSelectorStorage('reports-channels-period', PERIOD_OPTIONS),\n    _usePeriodSelectorSto2 = _slicedToArray(_usePeriodSelectorSto, 2),\n    period = _usePeriodSelectorSto2[0],\n    periodSelectorProps = _usePeriodSelectorSto2[1];\n  var getConversationsBySource = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-source');\n  var _useQuery = useQuery(['omnichannel-reports', 'conversations-by-source', period], function () {\n      function _callee() {\n        var _getPeriodRange, start, end, response, data, displayData;\n        return _regeneratorRuntime.async(function () {\n          function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _getPeriodRange = getPeriodRange(period), start = _getPeriodRange.start, end = _getPeriodRange.end;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(getConversationsBySource({\n                  start: start.toISOString(),\n                  end: end.toISOString()\n                }));\n              case 3:\n                response = _context.sent;\n                data = formatChartData(response.data, response.total, t);\n                displayData = getTop(5, data, function (value) {\n                  return formatItem({\n                    label: t('Others'),\n                    value: value\n                  }, response.total, t);\n                });\n                return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, response), {}, {\n                  data: displayData,\n                  rawData: data\n                }));\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n          return _callee$;\n        }(), null, null, null, Promise);\n      }\n      return _callee;\n    }(), {\n      refetchInterval: 5 * 60 * 1000\n    }),\n    _useQuery$data = _useQuery.data;\n  _useQuery$data = _useQuery$data === void 0 ? {\n    data: [],\n    rawData: [],\n    total: 0\n  } : _useQuery$data;\n  var data = _useQuery$data.data,\n    rawData = _useQuery$data.rawData,\n    total = _useQuery$data.total,\n    refetch = _useQuery.refetch,\n    isLoading = _useQuery.isLoading,\n    isError = _useQuery.isError,\n    isSuccess = _useQuery.isSuccess;\n  var title = t('Conversations_by_channel');\n  var subtitle = t('__count__conversations__period__', {\n    count: total !== null && total !== void 0 ? total : 0,\n    period: formatPeriodDescription(period, t)\n  });\n  var emptyStateSubtitle = t('Omnichannel_Reports_Channels_Empty_Subtitle');\n  var downloadProps = useDefaultDownload({\n    columnName: t('Channel'),\n    title: title,\n    data: rawData,\n    period: period\n  });\n  return useMemo(function () {\n    return {\n      id: 'conversations-by-channel',\n      title: title,\n      subtitle: subtitle,\n      emptyStateSubtitle: emptyStateSubtitle,\n      data: data,\n      total: total,\n      isLoading: isLoading,\n      isError: isError,\n      isDataFound: isSuccess && data.length > 0,\n      periodSelectorProps: periodSelectorProps,\n      period: period,\n      downloadProps: downloadProps,\n      onRetry: refetch\n    };\n  }, [title, subtitle, emptyStateSubtitle, data, total, isLoading, isError, isSuccess, periodSelectorProps, period, downloadProps, refetch]);\n};","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_slicedToArray","_objectSpread","export","useChannelsSection","capitalize","useEndpoint","useTranslation","useQuery","useMemo","getPeriodRange","usePeriodSelectorStorage","PERIOD_OPTIONS","formatPeriodDescription","getTop","round","useDefaultDownload","TYPE_LABEL","formatItem","item","total","t","percentage","value","label","rawLabel","id","formatChartData","data","arguments","length","undefined","map","_usePeriodSelectorSto","_usePeriodSelectorSto2","period","periodSelectorProps","getConversationsBySource","_useQuery","_callee","_getPeriodRange","start","end","response","displayData","async","_callee$","_context","prev","next","awrap","toISOString","sent","abrupt","rawData","stop","Promise","refetchInterval","_useQuery$data","refetch","isLoading","isError","isSuccess","title","subtitle","count","emptyStateSubtitle","downloadProps","columnName","isDataFound","onRetry"],"sources":["client/omnichannel/reports/hooks/useChannelsSection.tsx"],"sourcesContent":["import { capitalize } from '@rocket.chat/string-helpers';\nimport type { TranslationContextValue, TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useMemo } from 'react';\n\nimport { getPeriodRange } from '../../../components/dashboards/periods';\nimport { usePeriodSelectorStorage } from '../../../components/dashboards/usePeriodSelectorStorage';\nimport { PERIOD_OPTIONS } from '../components/constants';\nimport { formatPeriodDescription } from '../utils/formatPeriodDescription';\nimport { getTop } from '../utils/getTop';\nimport { round } from '../utils/round';\nimport { useDefaultDownload } from './useDefaultDownload';\n\ntype DataItem = { label: string; value: number; id: string; rawLabel: string };\n\nconst TYPE_LABEL: Record<string, TranslationKey> = {\n\t'widget': 'Livechat',\n\t'email-inbox': 'Email',\n\t'twilio': 'SMS',\n\t'api': 'Custom_Integration',\n};\n\nconst formatItem = (item: { label: string; value: number }, total: number, t: TranslationContextValue['translate']): DataItem => {\n\tconst percentage = total > 0 ? round((item.value / total) * 100) : 0;\n\tconst label = `${t(TYPE_LABEL[item.label]) || capitalize(item.label)}`;\n\treturn {\n\t\t...item,\n\t\tlabel: `${label} ${item.value} (${percentage}%)`,\n\t\trawLabel: label,\n\t\tid: item.label,\n\t};\n};\n\nconst formatChartData = (data: { label: string; value: number }[] | undefined = [], total = 0, t: TranslationContextValue['translate']) => {\n\treturn data.map((item) => formatItem(item, total, t));\n};\n\nexport const useChannelsSection = () => {\n\tconst t = useTranslation();\n\tconst [period, periodSelectorProps] = usePeriodSelectorStorage('reports-channels-period', PERIOD_OPTIONS);\n\tconst getConversationsBySource = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-source');\n\n\tconst {\n\t\tdata: { data, rawData, total } = { data: [], rawData: [], total: 0 },\n\t\trefetch,\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t} = useQuery(\n\t\t['omnichannel-reports', 'conversations-by-source', period],\n\t\tasync () => {\n\t\t\tconst { start, end } = getPeriodRange(period);\n\t\t\tconst response = await getConversationsBySource({ start: start.toISOString(), end: end.toISOString() });\n\t\t\tconst data = formatChartData(response.data, response.total, t);\n\t\t\tconst displayData: DataItem[] = getTop<DataItem>(5, data, (value) => formatItem({ label: t('Others'), value }, response.total, t));\n\t\t\treturn { ...response, data: displayData, rawData: data };\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 5 * 60 * 1000,\n\t\t},\n\t);\n\n\tconst title = t('Conversations_by_channel');\n\tconst subtitle = t('__count__conversations__period__', {\n\t\tcount: total ?? 0,\n\t\tperiod: formatPeriodDescription(period, t),\n\t});\n\tconst emptyStateSubtitle = t('Omnichannel_Reports_Channels_Empty_Subtitle');\n\n\tconst downloadProps = useDefaultDownload({ columnName: t('Channel'), title, data: rawData, period });\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: 'conversations-by-channel',\n\t\t\ttitle,\n\t\t\tsubtitle,\n\t\t\temptyStateSubtitle,\n\t\t\tdata,\n\t\t\ttotal,\n\t\t\tisLoading,\n\t\t\tisError,\n\t\t\tisDataFound: isSuccess && data.length > 0,\n\t\t\tperiodSelectorProps,\n\t\t\tperiod,\n\t\t\tdownloadProps,\n\t\t\tonRetry: refetch,\n\t\t}),\n\t\t[title, subtitle, emptyStateSubtitle, data, total, isLoading, isError, isSuccess, periodSelectorProps, period, downloadProps, refetch],\n\t);\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"127d0f70bdd6c0fe2e09976b3de8c7c4db133cca"}
