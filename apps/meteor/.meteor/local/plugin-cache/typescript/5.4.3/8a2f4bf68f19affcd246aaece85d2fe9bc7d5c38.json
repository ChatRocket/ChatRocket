{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/message/list/MessageListContext.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/message/list/MessageListContext.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/message/list/MessageListContext.tsx","inputSourceMap":{"version":3,"file":"client/components/message/list/MessageListContext.tsx","sourceRoot":"","sources":["client/components/message/list/MessageListContext.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AA6BlD,MAAM,CAAC,MAAM,kBAAkB,GAAG,aAAa,CAA0B;IACxE,iBAAiB,EAAE,GAAG,EAAE,CAAC,KAAK;IAC9B,cAAc,EAAE,GAAG,EAAE,CAAC,KAAK;IAC3B,gBAAgB,EAAE,GAAG,EAAE,CAAC,KAAK;IAC7B,iBAAiB,EAAE,GAAG,EAAE,CAAC,GAAY,EAAE,CAAC,KAAK;IAC7C,uBAAuB,EACtB,GAAG,EAAE,CACL,CAAC,IAAU,EAAU,EAAE,CACtB,IAAI,CAAC,QAAQ,EAAE;IACjB,kBAAkB,EAAE,GAAG,EAAE,CAAC,GAAS,EAAE,CAAC,SAAS;IAC/C,SAAS,EAAE,KAAK;IAChB,YAAY,EAAE,KAAK;IACnB,YAAY,EAAE,KAAK;IACnB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE,SAAS;IACnB,cAAc,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;CACjC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,iBAAiB,GAAiD,CAAC,GAAG,IAAI,EAAE,EAAE,CAC1F,UAAU,CAAC,kBAAkB,CAAC,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3D,MAAM,CAAC,MAAM,cAAc,GAA8C,CAAC,GAAG,IAAI,EAAE,EAAE,CACpF,UAAU,CAAC,kBAAkB,CAAC,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,CAAC;AACxD,MAAM,CAAC,MAAM,gBAAgB,GAAgD,CAAC,GAAG,IAAI,EAAE,EAAE,CACxF,UAAU,CAAC,kBAAkB,CAAC,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC;AAC1D,MAAM,CAAC,MAAM,uBAAuB,GAAuD,CAAC,GAAG,IAAI,EAAE,EAAE,CACtG,UAAU,CAAC,kBAAkB,CAAC,CAAC,uBAAuB,CAAC,GAAG,IAAI,CAAC,CAAC;AACjE,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAyC,EAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC;AAC5H,MAAM,CAAC,MAAM,0BAA0B,GAAG,GAA4C,EAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC;AACrI,MAAM,CAAC,MAAM,0BAA0B,GAAG,GAA4C,EAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC;AACrI,MAAM,CAAC,MAAM,wBAAwB,GAAG,GAA0C,EAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC;AAC/H,MAAM,CAAC,MAAM,gCAAgC,GAAG,GAAkD,EAAE,CACnG,UAAU,CAAC,kBAAkB,CAAC,CAAC,kBAAkB,CAAC;AAEnD,MAAM,CAAC,MAAM,iBAAiB,GAAiD,CAAC,OAAiB,EAAE,EAAE,CACpG,UAAU,CAAC,kBAAkB,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAC3D,MAAM,CAAC,MAAM,kBAAkB,GAAkD,CAAC,GAAG,IAAI,EAAE,EAAE,CAC5F,UAAU,CAAC,kBAAkB,CAAC,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,CAAC;AAE5D,MAAM,CAAC,MAAM,iBAAiB,GAAG,GAA8C,EAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,cAAc,CAAC","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { createContext, useContext } from 'react';\n\nexport type MessageListContextValue = {\n\tuseShowTranslated: (message: IMessage) => boolean;\n\tuseShowStarred: ({ message }: { message: IMessage }) => boolean;\n\tuseShowFollowing: ({ message }: { message: IMessage }) => boolean;\n\tuseMessageDateFormatter: () => (date: Date) => string;\n\tuseUserHasReacted: (message: IMessage) => (reaction: string) => boolean;\n\tuseOpenEmojiPicker: (message: IMessage) => (event: React.MouseEvent | React.KeyboardEvent) => void;\n\tshowRoles: boolean;\n\tshowRealName: boolean;\n\tshowUsername: boolean;\n\thighlights?:\n\t\t| {\n\t\t\t\thighlight: string;\n\t\t\t\tregex: RegExp;\n\t\t\t\turlRegex: RegExp;\n\t\t  }[];\n\tkatex?: {\n\t\tdollarSyntaxEnabled: boolean;\n\t\tparenthesisSyntaxEnabled: boolean;\n\t};\n\tautoTranslateLanguage?: string;\n\tshowColors: boolean;\n\tjumpToMessageParam?: string;\n\tusername: string | undefined;\n\tmessageListRef?: React.RefObject<HTMLElement>;\n};\n\nexport const MessageListContext = createContext<MessageListContextValue>({\n\tuseShowTranslated: () => false,\n\tuseShowStarred: () => false,\n\tuseShowFollowing: () => false,\n\tuseUserHasReacted: () => (): boolean => false,\n\tuseMessageDateFormatter:\n\t\t() =>\n\t\t(date: Date): string =>\n\t\t\tdate.toString(),\n\tuseOpenEmojiPicker: () => (): void => undefined,\n\tshowRoles: false,\n\tshowRealName: false,\n\tshowUsername: false,\n\tshowColors: false,\n\tusername: undefined,\n\tmessageListRef: { current: null },\n});\n\nexport const useShowTranslated: MessageListContextValue['useShowTranslated'] = (...args) =>\n\tuseContext(MessageListContext).useShowTranslated(...args);\nexport const useShowStarred: MessageListContextValue['useShowStarred'] = (...args) =>\n\tuseContext(MessageListContext).useShowStarred(...args);\nexport const useShowFollowing: MessageListContextValue['useShowFollowing'] = (...args) =>\n\tuseContext(MessageListContext).useShowFollowing(...args);\nexport const useMessageDateFormatter: MessageListContextValue['useMessageDateFormatter'] = (...args) =>\n\tuseContext(MessageListContext).useMessageDateFormatter(...args);\nexport const useMessageListShowRoles = (): MessageListContextValue['showRoles'] => useContext(MessageListContext).showRoles;\nexport const useMessageListShowRealName = (): MessageListContextValue['showRealName'] => useContext(MessageListContext).showRealName;\nexport const useMessageListShowUsername = (): MessageListContextValue['showUsername'] => useContext(MessageListContext).showUsername;\nexport const useMessageListHighlights = (): MessageListContextValue['highlights'] => useContext(MessageListContext).highlights;\nexport const useMessageListJumpToMessageParam = (): MessageListContextValue['jumpToMessageParam'] =>\n\tuseContext(MessageListContext).jumpToMessageParam;\n\nexport const useUserHasReacted: MessageListContextValue['useUserHasReacted'] = (message: IMessage) =>\n\tuseContext(MessageListContext).useUserHasReacted(message);\nexport const useOpenEmojiPicker: MessageListContextValue['useOpenEmojiPicker'] = (...args) =>\n\tuseContext(MessageListContext).useOpenEmojiPicker(...args);\n\nexport const useMessageListRef = (): MessageListContextValue['messageListRef'] => useContext(MessageListContext).messageListRef;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/message/list/MessageListContext.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/message/list/MessageListContext.tsx","inputSourceMap":{"version":3,"file":"client/components/message/list/MessageListContext.tsx","sourceRoot":"","sources":["client/components/message/list/MessageListContext.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AA6BlD,MAAM,CAAC,MAAM,kBAAkB,GAAG,aAAa,CAA0B;IACxE,iBAAiB,EAAE,GAAG,EAAE,CAAC,KAAK;IAC9B,cAAc,EAAE,GAAG,EAAE,CAAC,KAAK;IAC3B,gBAAgB,EAAE,GAAG,EAAE,CAAC,KAAK;IAC7B,iBAAiB,EAAE,GAAG,EAAE,CAAC,GAAY,EAAE,CAAC,KAAK;IAC7C,uBAAuB,EACtB,GAAG,EAAE,CACL,CAAC,IAAU,EAAU,EAAE,CACtB,IAAI,CAAC,QAAQ,EAAE;IACjB,kBAAkB,EAAE,GAAG,EAAE,CAAC,GAAS,EAAE,CAAC,SAAS;IAC/C,SAAS,EAAE,KAAK;IAChB,YAAY,EAAE,KAAK;IACnB,YAAY,EAAE,KAAK;IACnB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE,SAAS;IACnB,cAAc,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;CACjC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,iBAAiB,GAAiD,CAAC,GAAG,IAAI,EAAE,EAAE,CAC1F,UAAU,CAAC,kBAAkB,CAAC,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3D,MAAM,CAAC,MAAM,cAAc,GAA8C,CAAC,GAAG,IAAI,EAAE,EAAE,CACpF,UAAU,CAAC,kBAAkB,CAAC,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,CAAC;AACxD,MAAM,CAAC,MAAM,gBAAgB,GAAgD,CAAC,GAAG,IAAI,EAAE,EAAE,CACxF,UAAU,CAAC,kBAAkB,CAAC,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC;AAC1D,MAAM,CAAC,MAAM,uBAAuB,GAAuD,CAAC,GAAG,IAAI,EAAE,EAAE,CACtG,UAAU,CAAC,kBAAkB,CAAC,CAAC,uBAAuB,CAAC,GAAG,IAAI,CAAC,CAAC;AACjE,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAyC,EAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC;AAC5H,MAAM,CAAC,MAAM,0BAA0B,GAAG,GAA4C,EAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC;AACrI,MAAM,CAAC,MAAM,0BAA0B,GAAG,GAA4C,EAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC;AACrI,MAAM,CAAC,MAAM,wBAAwB,GAAG,GAA0C,EAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC;AAC/H,MAAM,CAAC,MAAM,gCAAgC,GAAG,GAAkD,EAAE,CACnG,UAAU,CAAC,kBAAkB,CAAC,CAAC,kBAAkB,CAAC;AAEnD,MAAM,CAAC,MAAM,iBAAiB,GAAiD,CAAC,OAAiB,EAAE,EAAE,CACpG,UAAU,CAAC,kBAAkB,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAC3D,MAAM,CAAC,MAAM,kBAAkB,GAAkD,CAAC,GAAG,IAAI,EAAE,EAAE,CAC5F,UAAU,CAAC,kBAAkB,CAAC,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,CAAC;AAE5D,MAAM,CAAC,MAAM,iBAAiB,GAAG,GAA8C,EAAE,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,cAAc,CAAC","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { createContext, useContext } from 'react';\n\nexport type MessageListContextValue = {\n\tuseShowTranslated: (message: IMessage) => boolean;\n\tuseShowStarred: ({ message }: { message: IMessage }) => boolean;\n\tuseShowFollowing: ({ message }: { message: IMessage }) => boolean;\n\tuseMessageDateFormatter: () => (date: Date) => string;\n\tuseUserHasReacted: (message: IMessage) => (reaction: string) => boolean;\n\tuseOpenEmojiPicker: (message: IMessage) => (event: React.MouseEvent | React.KeyboardEvent) => void;\n\tshowRoles: boolean;\n\tshowRealName: boolean;\n\tshowUsername: boolean;\n\thighlights?:\n\t\t| {\n\t\t\t\thighlight: string;\n\t\t\t\tregex: RegExp;\n\t\t\t\turlRegex: RegExp;\n\t\t  }[];\n\tkatex?: {\n\t\tdollarSyntaxEnabled: boolean;\n\t\tparenthesisSyntaxEnabled: boolean;\n\t};\n\tautoTranslateLanguage?: string;\n\tshowColors: boolean;\n\tjumpToMessageParam?: string;\n\tusername: string | undefined;\n\tmessageListRef?: React.RefObject<HTMLElement>;\n};\n\nexport const MessageListContext = createContext<MessageListContextValue>({\n\tuseShowTranslated: () => false,\n\tuseShowStarred: () => false,\n\tuseShowFollowing: () => false,\n\tuseUserHasReacted: () => (): boolean => false,\n\tuseMessageDateFormatter:\n\t\t() =>\n\t\t(date: Date): string =>\n\t\t\tdate.toString(),\n\tuseOpenEmojiPicker: () => (): void => undefined,\n\tshowRoles: false,\n\tshowRealName: false,\n\tshowUsername: false,\n\tshowColors: false,\n\tusername: undefined,\n\tmessageListRef: { current: null },\n});\n\nexport const useShowTranslated: MessageListContextValue['useShowTranslated'] = (...args) =>\n\tuseContext(MessageListContext).useShowTranslated(...args);\nexport const useShowStarred: MessageListContextValue['useShowStarred'] = (...args) =>\n\tuseContext(MessageListContext).useShowStarred(...args);\nexport const useShowFollowing: MessageListContextValue['useShowFollowing'] = (...args) =>\n\tuseContext(MessageListContext).useShowFollowing(...args);\nexport const useMessageDateFormatter: MessageListContextValue['useMessageDateFormatter'] = (...args) =>\n\tuseContext(MessageListContext).useMessageDateFormatter(...args);\nexport const useMessageListShowRoles = (): MessageListContextValue['showRoles'] => useContext(MessageListContext).showRoles;\nexport const useMessageListShowRealName = (): MessageListContextValue['showRealName'] => useContext(MessageListContext).showRealName;\nexport const useMessageListShowUsername = (): MessageListContextValue['showUsername'] => useContext(MessageListContext).showUsername;\nexport const useMessageListHighlights = (): MessageListContextValue['highlights'] => useContext(MessageListContext).highlights;\nexport const useMessageListJumpToMessageParam = (): MessageListContextValue['jumpToMessageParam'] =>\n\tuseContext(MessageListContext).jumpToMessageParam;\n\nexport const useUserHasReacted: MessageListContextValue['useUserHasReacted'] = (message: IMessage) =>\n\tuseContext(MessageListContext).useUserHasReacted(message);\nexport const useOpenEmojiPicker: MessageListContextValue['useOpenEmojiPicker'] = (...args) =>\n\tuseContext(MessageListContext).useOpenEmojiPicker(...args);\n\nexport const useMessageListRef = (): MessageListContextValue['messageListRef'] => useContext(MessageListContext).messageListRef;\n"]}}},"code":"module.export({\n  MessageListContext: () => MessageListContext,\n  useShowTranslated: () => useShowTranslated,\n  useShowStarred: () => useShowStarred,\n  useShowFollowing: () => useShowFollowing,\n  useMessageDateFormatter: () => useMessageDateFormatter,\n  useMessageListShowRoles: () => useMessageListShowRoles,\n  useMessageListShowRealName: () => useMessageListShowRealName,\n  useMessageListShowUsername: () => useMessageListShowUsername,\n  useMessageListHighlights: () => useMessageListHighlights,\n  useMessageListJumpToMessageParam: () => useMessageListJumpToMessageParam,\n  useUserHasReacted: () => useUserHasReacted,\n  useOpenEmojiPicker: () => useOpenEmojiPicker,\n  useMessageListRef: () => useMessageListRef\n});\nlet createContext, useContext;\nmodule.link(\"react\", {\n  createContext(v) {\n    createContext = v;\n  },\n  useContext(v) {\n    useContext = v;\n  }\n}, 0);\nconst MessageListContext = /*#__PURE__*/createContext({\n  useShowTranslated: () => false,\n  useShowStarred: () => false,\n  useShowFollowing: () => false,\n  useUserHasReacted: () => () => false,\n  useMessageDateFormatter: () => date => date.toString(),\n  useOpenEmojiPicker: () => () => undefined,\n  showRoles: false,\n  showRealName: false,\n  showUsername: false,\n  showColors: false,\n  username: undefined,\n  messageListRef: {\n    current: null\n  }\n});\nconst useShowTranslated = function () {\n  return useContext(MessageListContext).useShowTranslated(...arguments);\n};\nconst useShowStarred = function () {\n  return useContext(MessageListContext).useShowStarred(...arguments);\n};\nconst useShowFollowing = function () {\n  return useContext(MessageListContext).useShowFollowing(...arguments);\n};\nconst useMessageDateFormatter = function () {\n  return useContext(MessageListContext).useMessageDateFormatter(...arguments);\n};\nconst useMessageListShowRoles = () => useContext(MessageListContext).showRoles;\nconst useMessageListShowRealName = () => useContext(MessageListContext).showRealName;\nconst useMessageListShowUsername = () => useContext(MessageListContext).showUsername;\nconst useMessageListHighlights = () => useContext(MessageListContext).highlights;\nconst useMessageListJumpToMessageParam = () => useContext(MessageListContext).jumpToMessageParam;\nconst useUserHasReacted = message => useContext(MessageListContext).useUserHasReacted(message);\nconst useOpenEmojiPicker = function () {\n  return useContext(MessageListContext).useOpenEmojiPicker(...arguments);\n};\nconst useMessageListRef = () => useContext(MessageListContext).messageListRef;","map":{"version":3,"names":["module","export","MessageListContext","useShowTranslated","useShowStarred","useShowFollowing","useMessageDateFormatter","useMessageListShowRoles","useMessageListShowRealName","useMessageListShowUsername","useMessageListHighlights","useMessageListJumpToMessageParam","useUserHasReacted","useOpenEmojiPicker","useMessageListRef","createContext","useContext","link","v","date","toString","undefined","showRoles","showRealName","showUsername","showColors","username","messageListRef","current","arguments","highlights","jumpToMessageParam","message"],"sources":["client/components/message/list/MessageListContext.tsx"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { createContext, useContext } from 'react';\n\nexport type MessageListContextValue = {\n\tuseShowTranslated: (message: IMessage) => boolean;\n\tuseShowStarred: ({ message }: { message: IMessage }) => boolean;\n\tuseShowFollowing: ({ message }: { message: IMessage }) => boolean;\n\tuseMessageDateFormatter: () => (date: Date) => string;\n\tuseUserHasReacted: (message: IMessage) => (reaction: string) => boolean;\n\tuseOpenEmojiPicker: (message: IMessage) => (event: React.MouseEvent | React.KeyboardEvent) => void;\n\tshowRoles: boolean;\n\tshowRealName: boolean;\n\tshowUsername: boolean;\n\thighlights?:\n\t\t| {\n\t\t\t\thighlight: string;\n\t\t\t\tregex: RegExp;\n\t\t\t\turlRegex: RegExp;\n\t\t  }[];\n\tkatex?: {\n\t\tdollarSyntaxEnabled: boolean;\n\t\tparenthesisSyntaxEnabled: boolean;\n\t};\n\tautoTranslateLanguage?: string;\n\tshowColors: boolean;\n\tjumpToMessageParam?: string;\n\tusername: string | undefined;\n\tmessageListRef?: React.RefObject<HTMLElement>;\n};\n\nexport const MessageListContext = createContext<MessageListContextValue>({\n\tuseShowTranslated: () => false,\n\tuseShowStarred: () => false,\n\tuseShowFollowing: () => false,\n\tuseUserHasReacted: () => (): boolean => false,\n\tuseMessageDateFormatter:\n\t\t() =>\n\t\t(date: Date): string =>\n\t\t\tdate.toString(),\n\tuseOpenEmojiPicker: () => (): void => undefined,\n\tshowRoles: false,\n\tshowRealName: false,\n\tshowUsername: false,\n\tshowColors: false,\n\tusername: undefined,\n\tmessageListRef: { current: null },\n});\n\nexport const useShowTranslated: MessageListContextValue['useShowTranslated'] = (...args) =>\n\tuseContext(MessageListContext).useShowTranslated(...args);\nexport const useShowStarred: MessageListContextValue['useShowStarred'] = (...args) =>\n\tuseContext(MessageListContext).useShowStarred(...args);\nexport const useShowFollowing: MessageListContextValue['useShowFollowing'] = (...args) =>\n\tuseContext(MessageListContext).useShowFollowing(...args);\nexport const useMessageDateFormatter: MessageListContextValue['useMessageDateFormatter'] = (...args) =>\n\tuseContext(MessageListContext).useMessageDateFormatter(...args);\nexport const useMessageListShowRoles = (): MessageListContextValue['showRoles'] => useContext(MessageListContext).showRoles;\nexport const useMessageListShowRealName = (): MessageListContextValue['showRealName'] => useContext(MessageListContext).showRealName;\nexport const useMessageListShowUsername = (): MessageListContextValue['showUsername'] => useContext(MessageListContext).showUsername;\nexport const useMessageListHighlights = (): MessageListContextValue['highlights'] => useContext(MessageListContext).highlights;\nexport const useMessageListJumpToMessageParam = (): MessageListContextValue['jumpToMessageParam'] =>\n\tuseContext(MessageListContext).jumpToMessageParam;\n\nexport const useUserHasReacted: MessageListContextValue['useUserHasReacted'] = (message: IMessage) =>\n\tuseContext(MessageListContext).useUserHasReacted(message);\nexport const useOpenEmojiPicker: MessageListContextValue['useOpenEmojiPicker'] = (...args) =>\n\tuseContext(MessageListContext).useOpenEmojiPicker(...args);\n\nexport const useMessageListRef = (): MessageListContextValue['messageListRef'] => useContext(MessageListContext).messageListRef;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8a2f4bf68f19affcd246aaece85d2fe9bc7d5c38"}
