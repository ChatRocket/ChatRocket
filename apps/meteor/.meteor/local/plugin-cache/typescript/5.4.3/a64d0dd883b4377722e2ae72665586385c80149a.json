{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/converters/to-external-parser-formatter.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/infrastructure/rocket-chat/converters/to-external-parser-formatter.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/converters/to-external-parser-formatter.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/rocket-chat/converters/to-external-parser-formatter.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/rocket-chat/converters/to-external-parser-formatter.ts"],"names":[],"mappings":"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","sourcesContent":["import sanitizeHtml from 'sanitize-html';\nimport type { IFrame } from 'sanitize-html';\n\nimport { FederatedUser } from '../../../domain/FederatedUser';\n\ninterface IInternalMention {\n\tmention: string;\n\trealName: string;\n}\n\nconst DEFAULT_LINK_FOR_MATRIX_MENTIONS = 'https://matrix.to/#/';\nconst DEFAULT_TAGS_FOR_MATRIX_QUOTES = ['mx-reply', 'blockquote'];\n\nconst getAllMentionsWithTheirRealNames = (message: string, homeServerDomain: string, senderExternalId: string): IInternalMention[] => {\n\tconst mentions: IInternalMention[] = [];\n\tsanitizeHtml(message, {\n\t\tallowedTags: ['a'],\n\t\texclusiveFilter: (frame: IFrame): boolean => {\n\t\t\tconst {\n\t\t\t\tattribs: { href = '' },\n\t\t\t\ttag,\n\t\t\t\ttext,\n\t\t\t} = frame;\n\t\t\tconst validATag = tag === 'a' && href && text;\n\t\t\tif (!validATag) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst isUsernameMention = href.includes(DEFAULT_LINK_FOR_MATRIX_MENTIONS) && href.includes('@');\n\t\t\tif (isUsernameMention) {\n\t\t\t\tconst [, username] = href.split('@');\n\t\t\t\tconst [, serverDomain] = username.split(':');\n\n\t\t\t\tconst withoutServerIdentification = `@${username.split(':').shift()}`;\n\t\t\t\tconst fullUsername = `@${username}`;\n\t\t\t\tconst isMentioningHimself = senderExternalId === text;\n\n\t\t\t\tmentions.push({\n\t\t\t\t\tmention: FederatedUser.isOriginalFromTheProxyServer(serverDomain, homeServerDomain) ? withoutServerIdentification : fullUsername,\n\t\t\t\t\trealName: isMentioningHimself ? withoutServerIdentification : text,\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst isMentioningAll = href.includes(DEFAULT_LINK_FOR_MATRIX_MENTIONS) && !href.includes('@');\n\t\t\tif (isMentioningAll) {\n\t\t\t\tmentions.push({\n\t\t\t\t\tmention: '@all',\n\t\t\t\t\trealName: text,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t});\n\n\treturn mentions;\n};\n\nexport const toInternalMessageFormat = ({\n\trawMessage,\n\tformattedMessage,\n\thomeServerDomain,\n\tsenderExternalId,\n}: {\n\trawMessage: string;\n\tformattedMessage: string;\n\thomeServerDomain: string;\n\tsenderExternalId: string;\n}): string =>\n\treplaceAllMentionsOneByOneSequentially(\n\t\trawMessage,\n\t\tgetAllMentionsWithTheirRealNames(formattedMessage, homeServerDomain, senderExternalId),\n\t);\n\nconst MATCH_ANYTHING = 'w';\nconst replaceAllMentionsOneByOneSequentially = (message: string, allMentionsWithRealNames: IInternalMention[]): string => {\n\tlet parsedMessage = '';\n\tlet toCompareAgain = message;\n\n\tif (allMentionsWithRealNames.length === 0) {\n\t\treturn message;\n\t}\n\n\tallMentionsWithRealNames.forEach(({ mention, realName }, mentionsIndex) => {\n\t\tconst negativeLookAhead = `(?!${MATCH_ANYTHING})`;\n\t\tconst realNameRegex = new RegExp(`(?<!w)${realName}${negativeLookAhead}`);\n\t\tlet realNamePosition = toCompareAgain.search(realNameRegex);\n\t\tconst realNamePresentInMessage = realNamePosition !== -1;\n\t\tlet messageReplacedWithMention = realNamePresentInMessage ? toCompareAgain.replace(realNameRegex, mention) : '';\n\t\tlet positionRemovingLastMention = realNamePresentInMessage ? realNamePosition + realName.length + 1 : -1;\n\t\tconst mentionForRoom = realName.charAt(0) === '!';\n\t\tif (!realNamePresentInMessage && mentionForRoom) {\n\t\t\tconst allMention = '@all';\n\t\t\tconst defaultRegexForRooms = new RegExp(`(?<!w)${allMention}${negativeLookAhead}`);\n\t\t\trealNamePosition = toCompareAgain.search(defaultRegexForRooms);\n\t\t\tmessageReplacedWithMention = toCompareAgain.replace(defaultRegexForRooms, mention);\n\t\t\tpositionRemovingLastMention = realNamePosition + allMention.length + 1;\n\t\t}\n\t\tconst lastItem = allMentionsWithRealNames.length - 1;\n\t\tconst lastMentionToProcess = mentionsIndex === lastItem;\n\t\tconst lastMentionPosition = realNamePosition + mention.length + 1;\n\n\t\ttoCompareAgain = toCompareAgain.slice(positionRemovingLastMention);\n\t\tparsedMessage += messageReplacedWithMention.slice(0, lastMentionToProcess ? undefined : lastMentionPosition);\n\t});\n\n\treturn parsedMessage.trim();\n};\n\nfunction stripReplyQuote(message: string): string {\n\tconst splitLines = message.split(/\\r?\\n/);\n\n\t// Find which line the quote ends on\n\tlet splitLineIndex = 0;\n\tfor (const line of splitLines) {\n\t\tif (line[0] !== '>') {\n\t\t\tbreak;\n\t\t}\n\t\tsplitLineIndex += 1;\n\t}\n\n\treturn splitLines.splice(splitLineIndex).join('\\n').trim();\n}\n\nexport const toInternalQuoteMessageFormat = async ({\n\thomeServerDomain,\n\tformattedMessage,\n\trawMessage,\n\tmessageToReplyToUrl,\n\tsenderExternalId,\n}: {\n\tmessageToReplyToUrl: string;\n\tformattedMessage: string;\n\trawMessage: string;\n\thomeServerDomain: string;\n\tsenderExternalId: string;\n}): Promise<string> => {\n\tconst withMentionsOnly = sanitizeHtml(formattedMessage, {\n\t\tallowedTags: ['a'],\n\t\tallowedAttributes: {\n\t\t\ta: ['href'],\n\t\t},\n\t\tnonTextTags: DEFAULT_TAGS_FOR_MATRIX_QUOTES,\n\t});\n\tconst rawMessageWithoutMatrixQuotingFormatting = stripReplyQuote(rawMessage);\n\n\treturn `[ ](${messageToReplyToUrl}) ${replaceAllMentionsOneByOneSequentially(\n\t\trawMessageWithoutMatrixQuotingFormatting,\n\t\tgetAllMentionsWithTheirRealNames(withMentionsOnly, homeServerDomain, senderExternalId),\n\t)}`;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/converters/to-external-parser-formatter.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/infrastructure/rocket-chat/converters/to-external-parser-formatter.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/rocket-chat/converters/to-external-parser-formatter.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/rocket-chat/converters/to-external-parser-formatter.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,eAAe,CAAC;AAGzC,OAAO,EAAE,aAAa,EAAE,MAAM,+BAA+B,CAAC;AAO9D,MAAM,gCAAgC,GAAG,sBAAsB,CAAC;AAChE,MAAM,8BAA8B,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;AAElE,MAAM,gCAAgC,GAAG,CAAC,OAAe,EAAE,gBAAwB,EAAE,gBAAwB,EAAsB,EAAE;IACpI,MAAM,QAAQ,GAAuB,EAAE,CAAC;IACxC,YAAY,CAAC,OAAO,EAAE;QACrB,WAAW,EAAE,CAAC,GAAG,CAAC;QAClB,eAAe,EAAE,CAAC,KAAa,EAAW,EAAE;YAC3C,MAAM,EACL,OAAO,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EACtB,GAAG,EACH,IAAI,GACJ,GAAG,KAAK,CAAC;YACV,MAAM,SAAS,GAAG,GAAG,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC;YAC9C,IAAI,CAAC,SAAS,EAAE,CAAC;gBAChB,OAAO,KAAK,CAAC;YACd,CAAC;YACD,MAAM,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,gCAAgC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAChG,IAAI,iBAAiB,EAAE,CAAC;gBACvB,MAAM,CAAC,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACrC,MAAM,CAAC,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE7C,MAAM,2BAA2B,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC;gBACtE,MAAM,YAAY,GAAG,IAAI,QAAQ,EAAE,CAAC;gBACpC,MAAM,mBAAmB,GAAG,gBAAgB,KAAK,IAAI,CAAC;gBAEtD,QAAQ,CAAC,IAAI,CAAC;oBACb,OAAO,EAAE,aAAa,CAAC,4BAA4B,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,YAAY;oBAChI,QAAQ,EAAE,mBAAmB,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,IAAI;iBAClE,CAAC,CAAC;YACJ,CAAC;YACD,MAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,gCAAgC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAC/F,IAAI,eAAe,EAAE,CAAC;gBACrB,QAAQ,CAAC,IAAI,CAAC;oBACb,OAAO,EAAE,MAAM;oBACf,QAAQ,EAAE,IAAI;iBACd,CAAC,CAAC;YACJ,CAAC;YACD,OAAO,KAAK,CAAC;QACd,CAAC;KACD,CAAC,CAAC;IAEH,OAAO,QAAQ,CAAC;AACjB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,EACvC,UAAU,EACV,gBAAgB,EAChB,gBAAgB,EAChB,gBAAgB,GAMhB,EAAU,EAAE,CACZ,sCAAsC,CACrC,UAAU,EACV,gCAAgC,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,CACtF,CAAC;AAEH,MAAM,cAAc,GAAG,GAAG,CAAC;AAC3B,MAAM,sCAAsC,GAAG,CAAC,OAAe,EAAE,wBAA4C,EAAU,EAAE;IACxH,IAAI,aAAa,GAAG,EAAE,CAAC;IACvB,IAAI,cAAc,GAAG,OAAO,CAAC;IAE7B,IAAI,wBAAwB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC3C,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,wBAAwB,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,aAAa,EAAE,EAAE;QACzE,MAAM,iBAAiB,GAAG,MAAM,cAAc,GAAG,CAAC;QAClD,MAAM,aAAa,GAAG,IAAI,MAAM,CAAC,SAAS,QAAQ,GAAG,iBAAiB,EAAE,CAAC,CAAC;QAC1E,IAAI,gBAAgB,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC5D,MAAM,wBAAwB,GAAG,gBAAgB,KAAK,CAAC,CAAC,CAAC;QACzD,IAAI,0BAA0B,GAAG,wBAAwB,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAChH,IAAI,2BAA2B,GAAG,wBAAwB,CAAC,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzG,MAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;QAClD,IAAI,CAAC,wBAAwB,IAAI,cAAc,EAAE,CAAC;YACjD,MAAM,UAAU,GAAG,MAAM,CAAC;YAC1B,MAAM,oBAAoB,GAAG,IAAI,MAAM,CAAC,SAAS,UAAU,GAAG,iBAAiB,EAAE,CAAC,CAAC;YACnF,gBAAgB,GAAG,cAAc,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;YAC/D,0BAA0B,GAAG,cAAc,CAAC,OAAO,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;YACnF,2BAA2B,GAAG,gBAAgB,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;QACxE,CAAC;QACD,MAAM,QAAQ,GAAG,wBAAwB,CAAC,MAAM,GAAG,CAAC,CAAC;QACrD,MAAM,oBAAoB,GAAG,aAAa,KAAK,QAAQ,CAAC;QACxD,MAAM,mBAAmB,GAAG,gBAAgB,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QAElE,cAAc,GAAG,cAAc,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;QACnE,aAAa,IAAI,0BAA0B,CAAC,KAAK,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;IAC9G,CAAC,CAAC,CAAC;IAEH,OAAO,aAAa,CAAC,IAAI,EAAE,CAAC;AAC7B,CAAC,CAAC;AAEF,SAAS,eAAe,CAAC,OAAe;IACvC,MAAM,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAE1C,oCAAoC;IACpC,IAAI,cAAc,GAAG,CAAC,CAAC;IACvB,KAAK,MAAM,IAAI,IAAI,UAAU,EAAE,CAAC;QAC/B,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;YACrB,MAAM;QACP,CAAC;QACD,cAAc,IAAI,CAAC,CAAC;IACrB,CAAC;IAED,OAAO,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;AAC5D,CAAC;AAED,MAAM,CAAC,MAAM,4BAA4B,GAAG,KAAK,EAAE,EAClD,gBAAgB,EAChB,gBAAgB,EAChB,UAAU,EACV,mBAAmB,EACnB,gBAAgB,GAOhB,EAAmB,EAAE;IACrB,MAAM,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,EAAE;QACvD,WAAW,EAAE,CAAC,GAAG,CAAC;QAClB,iBAAiB,EAAE;YAClB,CAAC,EAAE,CAAC,MAAM,CAAC;SACX;QACD,WAAW,EAAE,8BAA8B;KAC3C,CAAC,CAAC;IACH,MAAM,wCAAwC,GAAG,eAAe,CAAC,UAAU,CAAC,CAAC;IAE7E,OAAO,OAAO,mBAAmB,KAAK,sCAAsC,CAC3E,wCAAwC,EACxC,gCAAgC,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,CACtF,EAAE,CAAC;AACL,CAAC,CAAC","sourcesContent":["import sanitizeHtml from 'sanitize-html';\nimport type { IFrame } from 'sanitize-html';\n\nimport { FederatedUser } from '../../../domain/FederatedUser';\n\ninterface IInternalMention {\n\tmention: string;\n\trealName: string;\n}\n\nconst DEFAULT_LINK_FOR_MATRIX_MENTIONS = 'https://matrix.to/#/';\nconst DEFAULT_TAGS_FOR_MATRIX_QUOTES = ['mx-reply', 'blockquote'];\n\nconst getAllMentionsWithTheirRealNames = (message: string, homeServerDomain: string, senderExternalId: string): IInternalMention[] => {\n\tconst mentions: IInternalMention[] = [];\n\tsanitizeHtml(message, {\n\t\tallowedTags: ['a'],\n\t\texclusiveFilter: (frame: IFrame): boolean => {\n\t\t\tconst {\n\t\t\t\tattribs: { href = '' },\n\t\t\t\ttag,\n\t\t\t\ttext,\n\t\t\t} = frame;\n\t\t\tconst validATag = tag === 'a' && href && text;\n\t\t\tif (!validATag) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst isUsernameMention = href.includes(DEFAULT_LINK_FOR_MATRIX_MENTIONS) && href.includes('@');\n\t\t\tif (isUsernameMention) {\n\t\t\t\tconst [, username] = href.split('@');\n\t\t\t\tconst [, serverDomain] = username.split(':');\n\n\t\t\t\tconst withoutServerIdentification = `@${username.split(':').shift()}`;\n\t\t\t\tconst fullUsername = `@${username}`;\n\t\t\t\tconst isMentioningHimself = senderExternalId === text;\n\n\t\t\t\tmentions.push({\n\t\t\t\t\tmention: FederatedUser.isOriginalFromTheProxyServer(serverDomain, homeServerDomain) ? withoutServerIdentification : fullUsername,\n\t\t\t\t\trealName: isMentioningHimself ? withoutServerIdentification : text,\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst isMentioningAll = href.includes(DEFAULT_LINK_FOR_MATRIX_MENTIONS) && !href.includes('@');\n\t\t\tif (isMentioningAll) {\n\t\t\t\tmentions.push({\n\t\t\t\t\tmention: '@all',\n\t\t\t\t\trealName: text,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t});\n\n\treturn mentions;\n};\n\nexport const toInternalMessageFormat = ({\n\trawMessage,\n\tformattedMessage,\n\thomeServerDomain,\n\tsenderExternalId,\n}: {\n\trawMessage: string;\n\tformattedMessage: string;\n\thomeServerDomain: string;\n\tsenderExternalId: string;\n}): string =>\n\treplaceAllMentionsOneByOneSequentially(\n\t\trawMessage,\n\t\tgetAllMentionsWithTheirRealNames(formattedMessage, homeServerDomain, senderExternalId),\n\t);\n\nconst MATCH_ANYTHING = 'w';\nconst replaceAllMentionsOneByOneSequentially = (message: string, allMentionsWithRealNames: IInternalMention[]): string => {\n\tlet parsedMessage = '';\n\tlet toCompareAgain = message;\n\n\tif (allMentionsWithRealNames.length === 0) {\n\t\treturn message;\n\t}\n\n\tallMentionsWithRealNames.forEach(({ mention, realName }, mentionsIndex) => {\n\t\tconst negativeLookAhead = `(?!${MATCH_ANYTHING})`;\n\t\tconst realNameRegex = new RegExp(`(?<!w)${realName}${negativeLookAhead}`);\n\t\tlet realNamePosition = toCompareAgain.search(realNameRegex);\n\t\tconst realNamePresentInMessage = realNamePosition !== -1;\n\t\tlet messageReplacedWithMention = realNamePresentInMessage ? toCompareAgain.replace(realNameRegex, mention) : '';\n\t\tlet positionRemovingLastMention = realNamePresentInMessage ? realNamePosition + realName.length + 1 : -1;\n\t\tconst mentionForRoom = realName.charAt(0) === '!';\n\t\tif (!realNamePresentInMessage && mentionForRoom) {\n\t\t\tconst allMention = '@all';\n\t\t\tconst defaultRegexForRooms = new RegExp(`(?<!w)${allMention}${negativeLookAhead}`);\n\t\t\trealNamePosition = toCompareAgain.search(defaultRegexForRooms);\n\t\t\tmessageReplacedWithMention = toCompareAgain.replace(defaultRegexForRooms, mention);\n\t\t\tpositionRemovingLastMention = realNamePosition + allMention.length + 1;\n\t\t}\n\t\tconst lastItem = allMentionsWithRealNames.length - 1;\n\t\tconst lastMentionToProcess = mentionsIndex === lastItem;\n\t\tconst lastMentionPosition = realNamePosition + mention.length + 1;\n\n\t\ttoCompareAgain = toCompareAgain.slice(positionRemovingLastMention);\n\t\tparsedMessage += messageReplacedWithMention.slice(0, lastMentionToProcess ? undefined : lastMentionPosition);\n\t});\n\n\treturn parsedMessage.trim();\n};\n\nfunction stripReplyQuote(message: string): string {\n\tconst splitLines = message.split(/\\r?\\n/);\n\n\t// Find which line the quote ends on\n\tlet splitLineIndex = 0;\n\tfor (const line of splitLines) {\n\t\tif (line[0] !== '>') {\n\t\t\tbreak;\n\t\t}\n\t\tsplitLineIndex += 1;\n\t}\n\n\treturn splitLines.splice(splitLineIndex).join('\\n').trim();\n}\n\nexport const toInternalQuoteMessageFormat = async ({\n\thomeServerDomain,\n\tformattedMessage,\n\trawMessage,\n\tmessageToReplyToUrl,\n\tsenderExternalId,\n}: {\n\tmessageToReplyToUrl: string;\n\tformattedMessage: string;\n\trawMessage: string;\n\thomeServerDomain: string;\n\tsenderExternalId: string;\n}): Promise<string> => {\n\tconst withMentionsOnly = sanitizeHtml(formattedMessage, {\n\t\tallowedTags: ['a'],\n\t\tallowedAttributes: {\n\t\t\ta: ['href'],\n\t\t},\n\t\tnonTextTags: DEFAULT_TAGS_FOR_MATRIX_QUOTES,\n\t});\n\tconst rawMessageWithoutMatrixQuotingFormatting = stripReplyQuote(rawMessage);\n\n\treturn `[ ](${messageToReplyToUrl}) ${replaceAllMentionsOneByOneSequentially(\n\t\trawMessageWithoutMatrixQuotingFormatting,\n\t\tgetAllMentionsWithTheirRealNames(withMentionsOnly, homeServerDomain, senderExternalId),\n\t)}`;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      toInternalMessageFormat: () => toInternalMessageFormat,\n      toInternalQuoteMessageFormat: () => toInternalQuoteMessageFormat\n    });\n    let sanitizeHtml;\n    module.link(\"sanitize-html\", {\n      default(v) {\n        sanitizeHtml = v;\n      }\n    }, 0);\n    let FederatedUser;\n    module.link(\"../../../domain/FederatedUser\", {\n      FederatedUser(v) {\n        FederatedUser = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const DEFAULT_LINK_FOR_MATRIX_MENTIONS = 'https://matrix.to/#/';\n    const DEFAULT_TAGS_FOR_MATRIX_QUOTES = ['mx-reply', 'blockquote'];\n    const getAllMentionsWithTheirRealNames = (message, homeServerDomain, senderExternalId) => {\n      const mentions = [];\n      sanitizeHtml(message, {\n        allowedTags: ['a'],\n        exclusiveFilter: frame => {\n          const {\n            attribs: {\n              href = ''\n            },\n            tag,\n            text\n          } = frame;\n          const validATag = tag === 'a' && href && text;\n          if (!validATag) {\n            return false;\n          }\n          const isUsernameMention = href.includes(DEFAULT_LINK_FOR_MATRIX_MENTIONS) && href.includes('@');\n          if (isUsernameMention) {\n            const [, username] = href.split('@');\n            const [, serverDomain] = username.split(':');\n            const withoutServerIdentification = \"@\".concat(username.split(':').shift());\n            const fullUsername = \"@\".concat(username);\n            const isMentioningHimself = senderExternalId === text;\n            mentions.push({\n              mention: FederatedUser.isOriginalFromTheProxyServer(serverDomain, homeServerDomain) ? withoutServerIdentification : fullUsername,\n              realName: isMentioningHimself ? withoutServerIdentification : text\n            });\n          }\n          const isMentioningAll = href.includes(DEFAULT_LINK_FOR_MATRIX_MENTIONS) && !href.includes('@');\n          if (isMentioningAll) {\n            mentions.push({\n              mention: '@all',\n              realName: text\n            });\n          }\n          return false;\n        }\n      });\n      return mentions;\n    };\n    const toInternalMessageFormat = _ref => {\n      let {\n        rawMessage,\n        formattedMessage,\n        homeServerDomain,\n        senderExternalId\n      } = _ref;\n      return replaceAllMentionsOneByOneSequentially(rawMessage, getAllMentionsWithTheirRealNames(formattedMessage, homeServerDomain, senderExternalId));\n    };\n    const MATCH_ANYTHING = 'w';\n    const replaceAllMentionsOneByOneSequentially = (message, allMentionsWithRealNames) => {\n      let parsedMessage = '';\n      let toCompareAgain = message;\n      if (allMentionsWithRealNames.length === 0) {\n        return message;\n      }\n      allMentionsWithRealNames.forEach((_ref2, mentionsIndex) => {\n        let {\n          mention,\n          realName\n        } = _ref2;\n        const negativeLookAhead = \"(?!\".concat(MATCH_ANYTHING, \")\");\n        const realNameRegex = new RegExp(\"(?<!w)\".concat(realName).concat(negativeLookAhead));\n        let realNamePosition = toCompareAgain.search(realNameRegex);\n        const realNamePresentInMessage = realNamePosition !== -1;\n        let messageReplacedWithMention = realNamePresentInMessage ? toCompareAgain.replace(realNameRegex, mention) : '';\n        let positionRemovingLastMention = realNamePresentInMessage ? realNamePosition + realName.length + 1 : -1;\n        const mentionForRoom = realName.charAt(0) === '!';\n        if (!realNamePresentInMessage && mentionForRoom) {\n          const allMention = '@all';\n          const defaultRegexForRooms = new RegExp(\"(?<!w)\".concat(allMention).concat(negativeLookAhead));\n          realNamePosition = toCompareAgain.search(defaultRegexForRooms);\n          messageReplacedWithMention = toCompareAgain.replace(defaultRegexForRooms, mention);\n          positionRemovingLastMention = realNamePosition + allMention.length + 1;\n        }\n        const lastItem = allMentionsWithRealNames.length - 1;\n        const lastMentionToProcess = mentionsIndex === lastItem;\n        const lastMentionPosition = realNamePosition + mention.length + 1;\n        toCompareAgain = toCompareAgain.slice(positionRemovingLastMention);\n        parsedMessage += messageReplacedWithMention.slice(0, lastMentionToProcess ? undefined : lastMentionPosition);\n      });\n      return parsedMessage.trim();\n    };\n    function stripReplyQuote(message) {\n      const splitLines = message.split(/\\r?\\n/);\n      // Find which line the quote ends on\n      let splitLineIndex = 0;\n      for (const line of splitLines) {\n        if (line[0] !== '>') {\n          break;\n        }\n        splitLineIndex += 1;\n      }\n      return splitLines.splice(splitLineIndex).join('\\n').trim();\n    }\n    const toInternalQuoteMessageFormat = async _ref3 => {\n      let {\n        homeServerDomain,\n        formattedMessage,\n        rawMessage,\n        messageToReplyToUrl,\n        senderExternalId\n      } = _ref3;\n      const withMentionsOnly = sanitizeHtml(formattedMessage, {\n        allowedTags: ['a'],\n        allowedAttributes: {\n          a: ['href']\n        },\n        nonTextTags: DEFAULT_TAGS_FOR_MATRIX_QUOTES\n      });\n      const rawMessageWithoutMatrixQuotingFormatting = stripReplyQuote(rawMessage);\n      return \"[ ](\".concat(messageToReplyToUrl, \") \").concat(replaceAllMentionsOneByOneSequentially(rawMessageWithoutMatrixQuotingFormatting, getAllMentionsWithTheirRealNames(withMentionsOnly, homeServerDomain, senderExternalId)));\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","toInternalMessageFormat","toInternalQuoteMessageFormat","sanitizeHtml","link","default","v","FederatedUser","__reifyWaitForDeps__","DEFAULT_LINK_FOR_MATRIX_MENTIONS","DEFAULT_TAGS_FOR_MATRIX_QUOTES","getAllMentionsWithTheirRealNames","message","homeServerDomain","senderExternalId","mentions","allowedTags","exclusiveFilter","frame","attribs","href","tag","text","validATag","isUsernameMention","includes","username","split","serverDomain","withoutServerIdentification","concat","shift","fullUsername","isMentioningHimself","push","mention","isOriginalFromTheProxyServer","realName","isMentioningAll","_ref","rawMessage","formattedMessage","replaceAllMentionsOneByOneSequentially","MATCH_ANYTHING","allMentionsWithRealNames","parsedMessage","toCompareAgain","length","forEach","_ref2","mentionsIndex","negativeLookAhead","realNameRegex","RegExp","realNamePosition","search","realNamePresentInMessage","messageReplacedWithMention","replace","positionRemovingLastMention","mentionForRoom","charAt","allMention","defaultRegexForRooms","lastItem","lastMentionToProcess","lastMentionPosition","slice","undefined","trim","stripReplyQuote","splitLines","splitLineIndex","line","splice","join","_ref3","messageToReplyToUrl","withMentionsOnly","allowedAttributes","a","nonTextTags","rawMessageWithoutMatrixQuotingFormatting","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/federation/infrastructure/rocket-chat/converters/to-external-parser-formatter.ts"],"sourcesContent":["import sanitizeHtml from 'sanitize-html';\nimport type { IFrame } from 'sanitize-html';\n\nimport { FederatedUser } from '../../../domain/FederatedUser';\n\ninterface IInternalMention {\n\tmention: string;\n\trealName: string;\n}\n\nconst DEFAULT_LINK_FOR_MATRIX_MENTIONS = 'https://matrix.to/#/';\nconst DEFAULT_TAGS_FOR_MATRIX_QUOTES = ['mx-reply', 'blockquote'];\n\nconst getAllMentionsWithTheirRealNames = (message: string, homeServerDomain: string, senderExternalId: string): IInternalMention[] => {\n\tconst mentions: IInternalMention[] = [];\n\tsanitizeHtml(message, {\n\t\tallowedTags: ['a'],\n\t\texclusiveFilter: (frame: IFrame): boolean => {\n\t\t\tconst {\n\t\t\t\tattribs: { href = '' },\n\t\t\t\ttag,\n\t\t\t\ttext,\n\t\t\t} = frame;\n\t\t\tconst validATag = tag === 'a' && href && text;\n\t\t\tif (!validATag) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst isUsernameMention = href.includes(DEFAULT_LINK_FOR_MATRIX_MENTIONS) && href.includes('@');\n\t\t\tif (isUsernameMention) {\n\t\t\t\tconst [, username] = href.split('@');\n\t\t\t\tconst [, serverDomain] = username.split(':');\n\n\t\t\t\tconst withoutServerIdentification = `@${username.split(':').shift()}`;\n\t\t\t\tconst fullUsername = `@${username}`;\n\t\t\t\tconst isMentioningHimself = senderExternalId === text;\n\n\t\t\t\tmentions.push({\n\t\t\t\t\tmention: FederatedUser.isOriginalFromTheProxyServer(serverDomain, homeServerDomain) ? withoutServerIdentification : fullUsername,\n\t\t\t\t\trealName: isMentioningHimself ? withoutServerIdentification : text,\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst isMentioningAll = href.includes(DEFAULT_LINK_FOR_MATRIX_MENTIONS) && !href.includes('@');\n\t\t\tif (isMentioningAll) {\n\t\t\t\tmentions.push({\n\t\t\t\t\tmention: '@all',\n\t\t\t\t\trealName: text,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t});\n\n\treturn mentions;\n};\n\nexport const toInternalMessageFormat = ({\n\trawMessage,\n\tformattedMessage,\n\thomeServerDomain,\n\tsenderExternalId,\n}: {\n\trawMessage: string;\n\tformattedMessage: string;\n\thomeServerDomain: string;\n\tsenderExternalId: string;\n}): string =>\n\treplaceAllMentionsOneByOneSequentially(\n\t\trawMessage,\n\t\tgetAllMentionsWithTheirRealNames(formattedMessage, homeServerDomain, senderExternalId),\n\t);\n\nconst MATCH_ANYTHING = 'w';\nconst replaceAllMentionsOneByOneSequentially = (message: string, allMentionsWithRealNames: IInternalMention[]): string => {\n\tlet parsedMessage = '';\n\tlet toCompareAgain = message;\n\n\tif (allMentionsWithRealNames.length === 0) {\n\t\treturn message;\n\t}\n\n\tallMentionsWithRealNames.forEach(({ mention, realName }, mentionsIndex) => {\n\t\tconst negativeLookAhead = `(?!${MATCH_ANYTHING})`;\n\t\tconst realNameRegex = new RegExp(`(?<!w)${realName}${negativeLookAhead}`);\n\t\tlet realNamePosition = toCompareAgain.search(realNameRegex);\n\t\tconst realNamePresentInMessage = realNamePosition !== -1;\n\t\tlet messageReplacedWithMention = realNamePresentInMessage ? toCompareAgain.replace(realNameRegex, mention) : '';\n\t\tlet positionRemovingLastMention = realNamePresentInMessage ? realNamePosition + realName.length + 1 : -1;\n\t\tconst mentionForRoom = realName.charAt(0) === '!';\n\t\tif (!realNamePresentInMessage && mentionForRoom) {\n\t\t\tconst allMention = '@all';\n\t\t\tconst defaultRegexForRooms = new RegExp(`(?<!w)${allMention}${negativeLookAhead}`);\n\t\t\trealNamePosition = toCompareAgain.search(defaultRegexForRooms);\n\t\t\tmessageReplacedWithMention = toCompareAgain.replace(defaultRegexForRooms, mention);\n\t\t\tpositionRemovingLastMention = realNamePosition + allMention.length + 1;\n\t\t}\n\t\tconst lastItem = allMentionsWithRealNames.length - 1;\n\t\tconst lastMentionToProcess = mentionsIndex === lastItem;\n\t\tconst lastMentionPosition = realNamePosition + mention.length + 1;\n\n\t\ttoCompareAgain = toCompareAgain.slice(positionRemovingLastMention);\n\t\tparsedMessage += messageReplacedWithMention.slice(0, lastMentionToProcess ? undefined : lastMentionPosition);\n\t});\n\n\treturn parsedMessage.trim();\n};\n\nfunction stripReplyQuote(message: string): string {\n\tconst splitLines = message.split(/\\r?\\n/);\n\n\t// Find which line the quote ends on\n\tlet splitLineIndex = 0;\n\tfor (const line of splitLines) {\n\t\tif (line[0] !== '>') {\n\t\t\tbreak;\n\t\t}\n\t\tsplitLineIndex += 1;\n\t}\n\n\treturn splitLines.splice(splitLineIndex).join('\\n').trim();\n}\n\nexport const toInternalQuoteMessageFormat = async ({\n\thomeServerDomain,\n\tformattedMessage,\n\trawMessage,\n\tmessageToReplyToUrl,\n\tsenderExternalId,\n}: {\n\tmessageToReplyToUrl: string;\n\tformattedMessage: string;\n\trawMessage: string;\n\thomeServerDomain: string;\n\tsenderExternalId: string;\n}): Promise<string> => {\n\tconst withMentionsOnly = sanitizeHtml(formattedMessage, {\n\t\tallowedTags: ['a'],\n\t\tallowedAttributes: {\n\t\t\ta: ['href'],\n\t\t},\n\t\tnonTextTags: DEFAULT_TAGS_FOR_MATRIX_QUOTES,\n\t});\n\tconst rawMessageWithoutMatrixQuotingFormatting = stripReplyQuote(rawMessage);\n\n\treturn `[ ](${messageToReplyToUrl}) ${replaceAllMentionsOneByOneSequentially(\n\t\trawMessageWithoutMatrixQuotingFormatting,\n\t\tgetAllMentionsWithTheirRealNames(withMentionsOnly, homeServerDomain, senderExternalId),\n\t)}`;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a64d0dd883b4377722e2ae72665586385c80149a"}
