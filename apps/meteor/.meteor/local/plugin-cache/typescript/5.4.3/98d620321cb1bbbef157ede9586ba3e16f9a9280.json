{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/message/list/MessageListSkeleton.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/components/message/list/MessageListSkeleton.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/message/list/MessageListSkeleton.tsx","inputSourceMap":{"version":3,"file":"client/components/message/list/MessageListSkeleton.tsx","sourceRoot":"","sources":["client/components/message/list/MessageListSkeleton.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEtD,OAAO,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAE7C,MAAM,yBAAyB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAMnD,MAAM,mBAAmB,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC,EAA4B,EAAgB,EAAE;IAC5F,MAAM,MAAM,GAAG,OAAO,CACrB,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,yBAAyB,CAAC,KAAK,GAAG,yBAAyB,CAAC,MAAM,CAAC,GAAG,CAAC,EACnI,CAAC,YAAY,CAAC,CACd,CAAC;IAEF,OAAO,CACN,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CACnF;GAAA,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAC7B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAC9C;KAAA,CAAC,GAAG,CACH;MAAA,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAChD;KAAA,EAAE,GAAG,CACL;KAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxB;MAAA,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EACtB;MAAA,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EACxB;KAAA,EAAE,GAAG,CACN;IAAA,EAAE,GAAG,CAAC,CACN,CAAC,CACH;EAAA,EAAE,GAAG,CAAC,CACN,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,IAAI,CAAC,mBAAmB,CAAC,CAAC","sourcesContent":["import { Box, Skeleton } from '@rocket.chat/fuselage';\nimport type { ReactElement } from 'react';\nimport React, { memo, useMemo } from 'react';\n\nconst availablePercentualWidths = [47, 68, 75, 82];\n\ntype MessageListSkeletonProps = {\n\tmessageCount?: number;\n};\n\nconst MessageListSkeleton = ({ messageCount = 2 }: MessageListSkeletonProps): ReactElement => {\n\tconst widths = useMemo(\n\t\t() => Array.from({ length: messageCount }, (_, index) => `${availablePercentualWidths[index % availablePercentualWidths.length]}%`),\n\t\t[messageCount],\n\t);\n\n\treturn (\n\t\t<Box display='flex' height='100%' justifyContent='flex-start' flexDirection='column'>\n\t\t\t{widths.map((width, index) => (\n\t\t\t\t<Box key={index} pi={24} pb={16} display='flex'>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Skeleton variant='rect' width={36} height={36} />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box mis={8} flexGrow={1}>\n\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t<Skeleton width={width} />\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t))}\n\t\t</Box>\n\t);\n};\n\nexport default memo(MessageListSkeleton);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/message/list/MessageListSkeleton.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/message/list/MessageListSkeleton.tsx","inputSourceMap":{"version":3,"file":"client/components/message/list/MessageListSkeleton.tsx","sourceRoot":"","sources":["client/components/message/list/MessageListSkeleton.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEtD,OAAO,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAE7C,MAAM,yBAAyB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAMnD,MAAM,mBAAmB,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC,EAA4B,EAAgB,EAAE;IAC5F,MAAM,MAAM,GAAG,OAAO,CACrB,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,yBAAyB,CAAC,KAAK,GAAG,yBAAyB,CAAC,MAAM,CAAC,GAAG,CAAC,EACnI,CAAC,YAAY,CAAC,CACd,CAAC;IAEF,OAAO,CACN,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CACnF;GAAA,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAC7B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAC9C;KAAA,CAAC,GAAG,CACH;MAAA,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAChD;KAAA,EAAE,GAAG,CACL;KAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxB;MAAA,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EACtB;MAAA,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EACxB;KAAA,EAAE,GAAG,CACN;IAAA,EAAE,GAAG,CAAC,CACN,CAAC,CACH;EAAA,EAAE,GAAG,CAAC,CACN,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,IAAI,CAAC,mBAAmB,CAAC,CAAC","sourcesContent":["import { Box, Skeleton } from '@rocket.chat/fuselage';\nimport type { ReactElement } from 'react';\nimport React, { memo, useMemo } from 'react';\n\nconst availablePercentualWidths = [47, 68, 75, 82];\n\ntype MessageListSkeletonProps = {\n\tmessageCount?: number;\n};\n\nconst MessageListSkeleton = ({ messageCount = 2 }: MessageListSkeletonProps): ReactElement => {\n\tconst widths = useMemo(\n\t\t() => Array.from({ length: messageCount }, (_, index) => `${availablePercentualWidths[index % availablePercentualWidths.length]}%`),\n\t\t[messageCount],\n\t);\n\n\treturn (\n\t\t<Box display='flex' height='100%' justifyContent='flex-start' flexDirection='column'>\n\t\t\t{widths.map((width, index) => (\n\t\t\t\t<Box key={index} pi={24} pb={16} display='flex'>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Skeleton variant='rect' width={36} height={36} />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box mis={8} flexGrow={1}>\n\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t<Skeleton width={width} />\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t))}\n\t\t</Box>\n\t);\n};\n\nexport default memo(MessageListSkeleton);\n"]}}},"code":"var Box, Skeleton;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box: function (v) {\n    Box = v;\n  },\n  Skeleton: function (v) {\n    Skeleton = v;\n  }\n}, 0);\nvar React, memo, useMemo;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  memo: function (v) {\n    memo = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 1);\nvar availablePercentualWidths = [47, 68, 75, 82];\nvar MessageListSkeleton = function (_ref) {\n  var _ref$messageCount = _ref.messageCount,\n    messageCount = _ref$messageCount === void 0 ? 2 : _ref$messageCount;\n  var widths = useMemo(function () {\n    return Array.from({\n      length: messageCount\n    }, function (_, index) {\n      return availablePercentualWidths[index % availablePercentualWidths.length] + \"%\";\n    });\n  }, [messageCount]);\n  return /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    height: \"100%\",\n    justifyContent: \"flex-start\",\n    flexDirection: \"column\"\n  }, widths.map(function (width, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      pi: 24,\n      pb: 16,\n      display: \"flex\"\n    }, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Skeleton, {\n      variant: \"rect\",\n      width: 36,\n      height: 36\n    })), /*#__PURE__*/React.createElement(Box, {\n      mis: 8,\n      flexGrow: 1\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      width: \"100%\"\n    }), /*#__PURE__*/React.createElement(Skeleton, {\n      width: width\n    })));\n  }));\n};\nmodule.exportDefault( /*#__PURE__*/memo(MessageListSkeleton));","map":{"version":3,"names":["Box","Skeleton","module","link","v","React","memo","useMemo","default","availablePercentualWidths","MessageListSkeleton","_ref","_ref$messageCount","messageCount","widths","Array","from","length","_","index","createElement","display","height","justifyContent","flexDirection","map","width","key","pi","pb","variant","mis","flexGrow","exportDefault"],"sources":["client/components/message/list/MessageListSkeleton.tsx"],"sourcesContent":["import { Box, Skeleton } from '@rocket.chat/fuselage';\nimport type { ReactElement } from 'react';\nimport React, { memo, useMemo } from 'react';\n\nconst availablePercentualWidths = [47, 68, 75, 82];\n\ntype MessageListSkeletonProps = {\n\tmessageCount?: number;\n};\n\nconst MessageListSkeleton = ({ messageCount = 2 }: MessageListSkeletonProps): ReactElement => {\n\tconst widths = useMemo(\n\t\t() => Array.from({ length: messageCount }, (_, index) => `${availablePercentualWidths[index % availablePercentualWidths.length]}%`),\n\t\t[messageCount],\n\t);\n\n\treturn (\n\t\t<Box display='flex' height='100%' justifyContent='flex-start' flexDirection='column'>\n\t\t\t{widths.map((width, index) => (\n\t\t\t\t<Box key={index} pi={24} pb={16} display='flex'>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Skeleton variant='rect' width={36} height={36} />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box mis={8} flexGrow={1}>\n\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t<Skeleton width={width} />\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t))}\n\t\t</Box>\n\t);\n};\n\nexport default memo(MessageListSkeleton);\n"],"mappings":"AAAA,IAAAA,GAAO,EAAAC,QAAO;AAAAC,MAAQ,CAAEC,IAAA,wBAAM,EAAuB;EAACH,GAAA,WAAAA,CAAAI,CAAA;IAAAJ,GAAA,GAAAI,CAAA;EAAA;EAAAH,QAAA,WAAAA,CAAAG,CAAA;IAAAH,QAAA,GAAAG,CAAA;EAAA;AAAA;AAAA,IAAAC,KAAA,EAAAC,IAAA,EAAAC,OAAA;AAAAL,MAAA,CAAAC,IAAA;EAAA,oBAAAK,CAAAJ,CAAA;IAAAC,KAAA,GAAAD,CAAA;EAAA;EAAAE,IAAA,WAAAA,CAAAF,CAAA;IAAAE,IAAA,GAAAF,CAAA;EAAA;EAAAG,OAAA,WAAAA,CAAAH,CAAA;IAAAG,OAAA,GAAAH,CAAA;EAAA;AAAA;AAItD,IAAMK,yBAAyB,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAMlD,IAAMC,mBAAmB,GAAG,SAAAA,CAAAC,IAAA,EAAiE;EAAA,IAAAC,iBAAA,GAAAD,IAAA,CAA9DE,YAAY;IAAZA,YAAY,GAAAD,iBAAA,cAAG,CAAC,GAAAA,iBAAA;EAC9C,IAAME,MAAM,GAAGP,OAAO,CACrB;IAAA,OAAMQ,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEJ;IAAY,CAAE,EAAE,UAACK,CAAC,EAAEC,KAAK;MAAA,OAAQV,yBAAyB,CAACU,KAAK,GAAGV,yBAAyB,CAACQ,MAAM,CAAC;IAAA,CAAG,CAAC;EAAA,GACnI,CAACJ,YAAY,CAAC,CACd;EAED,oBACCR,KAAA,CAAAe,aAAA,CAACpB,GAAG;IAACqB,OAAO,EAAC,MAAM;IAACC,MAAM,EAAC,MAAM;IAACC,cAAc,EAAC,YAAY;IAACC,aAAa,EAAC;EAAQ,GAClFV,MAAM,CAACW,GAAG,CAAC,UAACC,KAAK,EAAEP,KAAK;IAAA,oBACxBd,KAAA,CAAAe,aAAA,CAACpB,GAAG;MAAC2B,GAAG,EAAER,KAAM;MAACS,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,EAAG;MAACR,OAAO,EAAC;IAAM,gBAC9ChB,KAAA,CAAAe,aAAA,CAACpB,GAAG,qBACHK,KAAA,CAAAe,aAAA,CAACnB,QAAQ;MAAC6B,OAAO,EAAC,MAAM;MAACJ,KAAK,EAAE,EAAG;MAACJ,MAAM,EAAE;IAAG,EAC3C,CACL,eAAAjB,KAAA,CAAAe,aAAA,CAACpB,GAAG;MAAC+B,GAAG,EAAE,CAAE;MAACC,QAAQ,EAAE;IAAE,gBACxB3B,KAAA,CAAAe,aAAA,CAACnB,QAAQ;MAACyB,KAAK,EAAC;IAAM,EACtB,eAAArB,KAAA,CAAAe,aAAA,CAACnB,QAAQ;MAACyB,KAAK,EAAEA;IAAM,EACnB,CACD,CAAC;EAAA,CACN,CACG,CAAC;AAER,CAAC;AA/BDxB,MAAA,CAAO+B,aAAO,eAiCC3B,IAAI,CAACI,mBAAmB,CAjCf","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"98d620321cb1bbbef157ede9586ba3e16f9a9280"}
