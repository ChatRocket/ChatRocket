{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/oauth/updateOAuthServices.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/oauth/updateOAuthServices.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/oauth/updateOAuthServices.ts","inputSourceMap":{"version":3,"file":"server/lib/oauth/updateOAuthServices.ts","sourceRoot":"","sources":["server/lib/oauth/updateOAuthServices.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n\tFacebookOAuthConfiguration,\n\tILoginServiceConfiguration,\n\tLinkedinOAuthConfiguration,\n\tOAuthConfiguration,\n\tTwitterOAuthConfiguration,\n} from '@rocket.chat/core-typings';\nimport { LoginServiceConfiguration } from '@rocket.chat/models';\n\nimport { CustomOAuth } from '../../../app/custom-oauth/server/custom_oauth_server';\nimport {\n\tnotifyOnLoginServiceConfigurationChanged,\n\tnotifyOnLoginServiceConfigurationChangedByService,\n} from '../../../app/lib/server/lib/notifyListener';\nimport { settings } from '../../../app/settings/server/cached';\nimport { logger } from './logger';\n\nexport async function updateOAuthServices(): Promise<void> {\n\tconst services = settings.getByRegexp(/^(Accounts_OAuth_|Accounts_OAuth_Custom-)[a-z0-9_]+$/i);\n\tconst filteredServices = services.filter(([, value]) => typeof value === 'boolean');\n\tfor await (const [key, value] of filteredServices) {\n\t\tlogger.debug({ oauth_updated: key });\n\t\tlet serviceName = key.replace('Accounts_OAuth_', '');\n\t\tif (serviceName === 'Meteor') {\n\t\t\tserviceName = 'meteor-developer';\n\t\t}\n\t\tif (/Accounts_OAuth_Custom-/.test(key)) {\n\t\t\tserviceName = key.replace('Accounts_OAuth_Custom-', '');\n\t\t}\n\n\t\tconst serviceKey = serviceName.toLowerCase();\n\n\t\tif (value === true) {\n\t\t\tconst data: Partial<ILoginServiceConfiguration & Omit<OAuthConfiguration, '_id'>> = {\n\t\t\t\tclientId: settings.get(`${key}_id`),\n\t\t\t\tsecret: settings.get(`${key}_secret`),\n\t\t\t};\n\n\t\t\tif (/Accounts_OAuth_Custom-/.test(key)) {\n\t\t\t\tdata.custom = true;\n\t\t\t\tdata.clientId = settings.get(`${key}-id`);\n\t\t\t\tdata.secret = settings.get(`${key}-secret`);\n\t\t\t\tdata.serverURL = settings.get(`${key}-url`);\n\t\t\t\tdata.tokenPath = settings.get(`${key}-token_path`);\n\t\t\t\tdata.identityPath = settings.get(`${key}-identity_path`);\n\t\t\t\tdata.authorizePath = settings.get(`${key}-authorize_path`);\n\t\t\t\tdata.scope = settings.get(`${key}-scope`);\n\t\t\t\tdata.accessTokenParam = settings.get(`${key}-access_token_param`);\n\t\t\t\tdata.buttonLabelText = settings.get(`${key}-button_label_text`);\n\t\t\t\tdata.buttonLabelColor = settings.get(`${key}-button_label_color`);\n\t\t\t\tdata.loginStyle = settings.get(`${key}-login_style`);\n\t\t\t\tdata.buttonColor = settings.get(`${key}-button_color`);\n\t\t\t\tdata.tokenSentVia = settings.get(`${key}-token_sent_via`);\n\t\t\t\tdata.identityTokenSentVia = settings.get(`${key}-identity_token_sent_via`);\n\t\t\t\tdata.keyField = settings.get(`${key}-key_field`);\n\t\t\t\tdata.usernameField = settings.get(`${key}-username_field`);\n\t\t\t\tdata.emailField = settings.get(`${key}-email_field`);\n\t\t\t\tdata.nameField = settings.get(`${key}-name_field`);\n\t\t\t\tdata.avatarField = settings.get(`${key}-avatar_field`);\n\t\t\t\tdata.rolesClaim = settings.get(`${key}-roles_claim`);\n\t\t\t\tdata.groupsClaim = settings.get(`${key}-groups_claim`);\n\t\t\t\tdata.channelsMap = settings.get(`${key}-groups_channel_map`);\n\t\t\t\tdata.channelsAdmin = settings.get(`${key}-channels_admin`);\n\t\t\t\tdata.mergeUsers = settings.get(`${key}-merge_users`);\n\t\t\t\tdata.mergeUsersDistinctServices = settings.get(`${key}-merge_users_distinct_services`);\n\t\t\t\tdata.mapChannels = settings.get(`${key}-map_channels`);\n\t\t\t\tdata.mergeRoles = settings.get(`${key}-merge_roles`);\n\t\t\t\tdata.rolesToSync = settings.get(`${key}-roles_to_sync`);\n\t\t\t\tdata.showButton = settings.get(`${key}-show_button`);\n\n\t\t\t\tnew CustomOAuth(serviceKey, {\n\t\t\t\t\tserverURL: data.serverURL,\n\t\t\t\t\ttokenPath: data.tokenPath,\n\t\t\t\t\tidentityPath: data.identityPath,\n\t\t\t\t\tauthorizePath: data.authorizePath,\n\t\t\t\t\tscope: data.scope,\n\t\t\t\t\tloginStyle: data.loginStyle,\n\t\t\t\t\ttokenSentVia: data.tokenSentVia,\n\t\t\t\t\tidentityTokenSentVia: data.identityTokenSentVia,\n\t\t\t\t\tkeyField: data.keyField,\n\t\t\t\t\tusernameField: data.usernameField,\n\t\t\t\t\temailField: data.emailField,\n\t\t\t\t\tnameField: data.nameField,\n\t\t\t\t\tavatarField: data.avatarField,\n\t\t\t\t\trolesClaim: data.rolesClaim,\n\t\t\t\t\tgroupsClaim: data.groupsClaim,\n\t\t\t\t\tmapChannels: data.mapChannels,\n\t\t\t\t\tchannelsMap: data.channelsMap,\n\t\t\t\t\tchannelsAdmin: data.channelsAdmin,\n\t\t\t\t\tmergeUsers: data.mergeUsers,\n\t\t\t\t\tmergeUsersDistinctServices: data.mergeUsersDistinctServices,\n\t\t\t\t\tmergeRoles: data.mergeRoles,\n\t\t\t\t\trolesToSync: data.rolesToSync,\n\t\t\t\t\taccessTokenParam: data.accessTokenParam,\n\t\t\t\t\tshowButton: data.showButton,\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (serviceName === 'Facebook') {\n\t\t\t\t(data as FacebookOAuthConfiguration).appId = data.clientId as string;\n\t\t\t\tdelete data.clientId;\n\t\t\t}\n\t\t\tif (serviceName === 'Twitter') {\n\t\t\t\t(data as TwitterOAuthConfiguration).consumerKey = data.clientId as string;\n\t\t\t\tdelete data.clientId;\n\t\t\t}\n\n\t\t\tif (serviceName === 'Linkedin') {\n\t\t\t\t(data as LinkedinOAuthConfiguration).clientConfig = {\n\t\t\t\t\trequestPermissions: ['openid', 'email', 'profile'],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (serviceName === 'Nextcloud') {\n\t\t\t\tdata.buttonLabelText = settings.get('Accounts_OAuth_Nextcloud_button_label_text');\n\t\t\t\tdata.buttonLabelColor = settings.get('Accounts_OAuth_Nextcloud_button_label_color');\n\t\t\t\tdata.buttonColor = settings.get('Accounts_OAuth_Nextcloud_button_color');\n\t\t\t}\n\n\t\t\tawait LoginServiceConfiguration.createOrUpdateService(serviceKey, data);\n\t\t\tvoid notifyOnLoginServiceConfigurationChangedByService(serviceKey);\n\t\t} else {\n\t\t\tconst service = await LoginServiceConfiguration.findOneByService(serviceName, { projection: { _id: 1 } });\n\t\t\tif (service?._id) {\n\t\t\t\tconst { deletedCount } = await LoginServiceConfiguration.removeService(service._id);\n\t\t\t\tif (deletedCount > 0) {\n\t\t\t\t\tvoid notifyOnLoginServiceConfigurationChanged({ _id: service._id }, 'removed');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/oauth/updateOAuthServices.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/oauth/updateOAuthServices.ts","inputSourceMap":{"version":3,"file":"server/lib/oauth/updateOAuthServices.ts","sourceRoot":"","sources":["server/lib/oauth/updateOAuthServices.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n\tFacebookOAuthConfiguration,\n\tILoginServiceConfiguration,\n\tLinkedinOAuthConfiguration,\n\tOAuthConfiguration,\n\tTwitterOAuthConfiguration,\n} from '@rocket.chat/core-typings';\nimport { LoginServiceConfiguration } from '@rocket.chat/models';\n\nimport { CustomOAuth } from '../../../app/custom-oauth/server/custom_oauth_server';\nimport {\n\tnotifyOnLoginServiceConfigurationChanged,\n\tnotifyOnLoginServiceConfigurationChangedByService,\n} from '../../../app/lib/server/lib/notifyListener';\nimport { settings } from '../../../app/settings/server/cached';\nimport { logger } from './logger';\n\nexport async function updateOAuthServices(): Promise<void> {\n\tconst services = settings.getByRegexp(/^(Accounts_OAuth_|Accounts_OAuth_Custom-)[a-z0-9_]+$/i);\n\tconst filteredServices = services.filter(([, value]) => typeof value === 'boolean');\n\tfor await (const [key, value] of filteredServices) {\n\t\tlogger.debug({ oauth_updated: key });\n\t\tlet serviceName = key.replace('Accounts_OAuth_', '');\n\t\tif (serviceName === 'Meteor') {\n\t\t\tserviceName = 'meteor-developer';\n\t\t}\n\t\tif (/Accounts_OAuth_Custom-/.test(key)) {\n\t\t\tserviceName = key.replace('Accounts_OAuth_Custom-', '');\n\t\t}\n\n\t\tconst serviceKey = serviceName.toLowerCase();\n\n\t\tif (value === true) {\n\t\t\tconst data: Partial<ILoginServiceConfiguration & Omit<OAuthConfiguration, '_id'>> = {\n\t\t\t\tclientId: settings.get(`${key}_id`),\n\t\t\t\tsecret: settings.get(`${key}_secret`),\n\t\t\t};\n\n\t\t\tif (/Accounts_OAuth_Custom-/.test(key)) {\n\t\t\t\tdata.custom = true;\n\t\t\t\tdata.clientId = settings.get(`${key}-id`);\n\t\t\t\tdata.secret = settings.get(`${key}-secret`);\n\t\t\t\tdata.serverURL = settings.get(`${key}-url`);\n\t\t\t\tdata.tokenPath = settings.get(`${key}-token_path`);\n\t\t\t\tdata.identityPath = settings.get(`${key}-identity_path`);\n\t\t\t\tdata.authorizePath = settings.get(`${key}-authorize_path`);\n\t\t\t\tdata.scope = settings.get(`${key}-scope`);\n\t\t\t\tdata.accessTokenParam = settings.get(`${key}-access_token_param`);\n\t\t\t\tdata.buttonLabelText = settings.get(`${key}-button_label_text`);\n\t\t\t\tdata.buttonLabelColor = settings.get(`${key}-button_label_color`);\n\t\t\t\tdata.loginStyle = settings.get(`${key}-login_style`);\n\t\t\t\tdata.buttonColor = settings.get(`${key}-button_color`);\n\t\t\t\tdata.tokenSentVia = settings.get(`${key}-token_sent_via`);\n\t\t\t\tdata.identityTokenSentVia = settings.get(`${key}-identity_token_sent_via`);\n\t\t\t\tdata.keyField = settings.get(`${key}-key_field`);\n\t\t\t\tdata.usernameField = settings.get(`${key}-username_field`);\n\t\t\t\tdata.emailField = settings.get(`${key}-email_field`);\n\t\t\t\tdata.nameField = settings.get(`${key}-name_field`);\n\t\t\t\tdata.avatarField = settings.get(`${key}-avatar_field`);\n\t\t\t\tdata.rolesClaim = settings.get(`${key}-roles_claim`);\n\t\t\t\tdata.groupsClaim = settings.get(`${key}-groups_claim`);\n\t\t\t\tdata.channelsMap = settings.get(`${key}-groups_channel_map`);\n\t\t\t\tdata.channelsAdmin = settings.get(`${key}-channels_admin`);\n\t\t\t\tdata.mergeUsers = settings.get(`${key}-merge_users`);\n\t\t\t\tdata.mergeUsersDistinctServices = settings.get(`${key}-merge_users_distinct_services`);\n\t\t\t\tdata.mapChannels = settings.get(`${key}-map_channels`);\n\t\t\t\tdata.mergeRoles = settings.get(`${key}-merge_roles`);\n\t\t\t\tdata.rolesToSync = settings.get(`${key}-roles_to_sync`);\n\t\t\t\tdata.showButton = settings.get(`${key}-show_button`);\n\n\t\t\t\tnew CustomOAuth(serviceKey, {\n\t\t\t\t\tserverURL: data.serverURL,\n\t\t\t\t\ttokenPath: data.tokenPath,\n\t\t\t\t\tidentityPath: data.identityPath,\n\t\t\t\t\tauthorizePath: data.authorizePath,\n\t\t\t\t\tscope: data.scope,\n\t\t\t\t\tloginStyle: data.loginStyle,\n\t\t\t\t\ttokenSentVia: data.tokenSentVia,\n\t\t\t\t\tidentityTokenSentVia: data.identityTokenSentVia,\n\t\t\t\t\tkeyField: data.keyField,\n\t\t\t\t\tusernameField: data.usernameField,\n\t\t\t\t\temailField: data.emailField,\n\t\t\t\t\tnameField: data.nameField,\n\t\t\t\t\tavatarField: data.avatarField,\n\t\t\t\t\trolesClaim: data.rolesClaim,\n\t\t\t\t\tgroupsClaim: data.groupsClaim,\n\t\t\t\t\tmapChannels: data.mapChannels,\n\t\t\t\t\tchannelsMap: data.channelsMap,\n\t\t\t\t\tchannelsAdmin: data.channelsAdmin,\n\t\t\t\t\tmergeUsers: data.mergeUsers,\n\t\t\t\t\tmergeUsersDistinctServices: data.mergeUsersDistinctServices,\n\t\t\t\t\tmergeRoles: data.mergeRoles,\n\t\t\t\t\trolesToSync: data.rolesToSync,\n\t\t\t\t\taccessTokenParam: data.accessTokenParam,\n\t\t\t\t\tshowButton: data.showButton,\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (serviceName === 'Facebook') {\n\t\t\t\t(data as FacebookOAuthConfiguration).appId = data.clientId as string;\n\t\t\t\tdelete data.clientId;\n\t\t\t}\n\t\t\tif (serviceName === 'Twitter') {\n\t\t\t\t(data as TwitterOAuthConfiguration).consumerKey = data.clientId as string;\n\t\t\t\tdelete data.clientId;\n\t\t\t}\n\n\t\t\tif (serviceName === 'Linkedin') {\n\t\t\t\t(data as LinkedinOAuthConfiguration).clientConfig = {\n\t\t\t\t\trequestPermissions: ['openid', 'email', 'profile'],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (serviceName === 'Nextcloud') {\n\t\t\t\tdata.buttonLabelText = settings.get('Accounts_OAuth_Nextcloud_button_label_text');\n\t\t\t\tdata.buttonLabelColor = settings.get('Accounts_OAuth_Nextcloud_button_label_color');\n\t\t\t\tdata.buttonColor = settings.get('Accounts_OAuth_Nextcloud_button_color');\n\t\t\t}\n\n\t\t\tawait LoginServiceConfiguration.createOrUpdateService(serviceKey, data);\n\t\t\tvoid notifyOnLoginServiceConfigurationChangedByService(serviceKey);\n\t\t} else {\n\t\t\tconst service = await LoginServiceConfiguration.findOneByService(serviceName, { projection: { _id: 1 } });\n\t\t\tif (service?._id) {\n\t\t\t\tconst { deletedCount } = await LoginServiceConfiguration.removeService(service._id);\n\t\t\t\tif (deletedCount > 0) {\n\t\t\t\t\tvoid notifyOnLoginServiceConfigurationChanged({ _id: service._id }, 'removed');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      updateOAuthServices: () => updateOAuthServices\n    });\n    let LoginServiceConfiguration;\n    module.link(\"@rocket.chat/models\", {\n      LoginServiceConfiguration(v) {\n        LoginServiceConfiguration = v;\n      }\n    }, 0);\n    let CustomOAuth;\n    module.link(\"../../../app/custom-oauth/server/custom_oauth_server\", {\n      CustomOAuth(v) {\n        CustomOAuth = v;\n      }\n    }, 1);\n    let notifyOnLoginServiceConfigurationChanged, notifyOnLoginServiceConfigurationChangedByService;\n    module.link(\"../../../app/lib/server/lib/notifyListener\", {\n      notifyOnLoginServiceConfigurationChanged(v) {\n        notifyOnLoginServiceConfigurationChanged = v;\n      },\n      notifyOnLoginServiceConfigurationChangedByService(v) {\n        notifyOnLoginServiceConfigurationChangedByService = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../app/settings/server/cached\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    let logger;\n    module.link(\"./logger\", {\n      logger(v) {\n        logger = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function updateOAuthServices() {\n      const services = settings.getByRegexp(/^(Accounts_OAuth_|Accounts_OAuth_Custom-)[a-z0-9_]+$/i);\n      const filteredServices = services.filter(_ref => {\n        let [, value] = _ref;\n        return typeof value === 'boolean';\n      });\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(filteredServices), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const [key, value] = _step.value;\n          {\n            logger.debug({\n              oauth_updated: key\n            });\n            let serviceName = key.replace('Accounts_OAuth_', '');\n            if (serviceName === 'Meteor') {\n              serviceName = 'meteor-developer';\n            }\n            if (/Accounts_OAuth_Custom-/.test(key)) {\n              serviceName = key.replace('Accounts_OAuth_Custom-', '');\n            }\n            const serviceKey = serviceName.toLowerCase();\n            if (value === true) {\n              const data = {\n                clientId: settings.get(\"\".concat(key, \"_id\")),\n                secret: settings.get(\"\".concat(key, \"_secret\"))\n              };\n              if (/Accounts_OAuth_Custom-/.test(key)) {\n                data.custom = true;\n                data.clientId = settings.get(\"\".concat(key, \"-id\"));\n                data.secret = settings.get(\"\".concat(key, \"-secret\"));\n                data.serverURL = settings.get(\"\".concat(key, \"-url\"));\n                data.tokenPath = settings.get(\"\".concat(key, \"-token_path\"));\n                data.identityPath = settings.get(\"\".concat(key, \"-identity_path\"));\n                data.authorizePath = settings.get(\"\".concat(key, \"-authorize_path\"));\n                data.scope = settings.get(\"\".concat(key, \"-scope\"));\n                data.accessTokenParam = settings.get(\"\".concat(key, \"-access_token_param\"));\n                data.buttonLabelText = settings.get(\"\".concat(key, \"-button_label_text\"));\n                data.buttonLabelColor = settings.get(\"\".concat(key, \"-button_label_color\"));\n                data.loginStyle = settings.get(\"\".concat(key, \"-login_style\"));\n                data.buttonColor = settings.get(\"\".concat(key, \"-button_color\"));\n                data.tokenSentVia = settings.get(\"\".concat(key, \"-token_sent_via\"));\n                data.identityTokenSentVia = settings.get(\"\".concat(key, \"-identity_token_sent_via\"));\n                data.keyField = settings.get(\"\".concat(key, \"-key_field\"));\n                data.usernameField = settings.get(\"\".concat(key, \"-username_field\"));\n                data.emailField = settings.get(\"\".concat(key, \"-email_field\"));\n                data.nameField = settings.get(\"\".concat(key, \"-name_field\"));\n                data.avatarField = settings.get(\"\".concat(key, \"-avatar_field\"));\n                data.rolesClaim = settings.get(\"\".concat(key, \"-roles_claim\"));\n                data.groupsClaim = settings.get(\"\".concat(key, \"-groups_claim\"));\n                data.channelsMap = settings.get(\"\".concat(key, \"-groups_channel_map\"));\n                data.channelsAdmin = settings.get(\"\".concat(key, \"-channels_admin\"));\n                data.mergeUsers = settings.get(\"\".concat(key, \"-merge_users\"));\n                data.mergeUsersDistinctServices = settings.get(\"\".concat(key, \"-merge_users_distinct_services\"));\n                data.mapChannels = settings.get(\"\".concat(key, \"-map_channels\"));\n                data.mergeRoles = settings.get(\"\".concat(key, \"-merge_roles\"));\n                data.rolesToSync = settings.get(\"\".concat(key, \"-roles_to_sync\"));\n                data.showButton = settings.get(\"\".concat(key, \"-show_button\"));\n                new CustomOAuth(serviceKey, {\n                  serverURL: data.serverURL,\n                  tokenPath: data.tokenPath,\n                  identityPath: data.identityPath,\n                  authorizePath: data.authorizePath,\n                  scope: data.scope,\n                  loginStyle: data.loginStyle,\n                  tokenSentVia: data.tokenSentVia,\n                  identityTokenSentVia: data.identityTokenSentVia,\n                  keyField: data.keyField,\n                  usernameField: data.usernameField,\n                  emailField: data.emailField,\n                  nameField: data.nameField,\n                  avatarField: data.avatarField,\n                  rolesClaim: data.rolesClaim,\n                  groupsClaim: data.groupsClaim,\n                  mapChannels: data.mapChannels,\n                  channelsMap: data.channelsMap,\n                  channelsAdmin: data.channelsAdmin,\n                  mergeUsers: data.mergeUsers,\n                  mergeUsersDistinctServices: data.mergeUsersDistinctServices,\n                  mergeRoles: data.mergeRoles,\n                  rolesToSync: data.rolesToSync,\n                  accessTokenParam: data.accessTokenParam,\n                  showButton: data.showButton\n                });\n              }\n              if (serviceName === 'Facebook') {\n                data.appId = data.clientId;\n                delete data.clientId;\n              }\n              if (serviceName === 'Twitter') {\n                data.consumerKey = data.clientId;\n                delete data.clientId;\n              }\n              if (serviceName === 'Linkedin') {\n                data.clientConfig = {\n                  requestPermissions: ['openid', 'email', 'profile']\n                };\n              }\n              if (serviceName === 'Nextcloud') {\n                data.buttonLabelText = settings.get('Accounts_OAuth_Nextcloud_button_label_text');\n                data.buttonLabelColor = settings.get('Accounts_OAuth_Nextcloud_button_label_color');\n                data.buttonColor = settings.get('Accounts_OAuth_Nextcloud_button_color');\n              }\n              await LoginServiceConfiguration.createOrUpdateService(serviceKey, data);\n              void notifyOnLoginServiceConfigurationChangedByService(serviceKey);\n            } else {\n              const service = await LoginServiceConfiguration.findOneByService(serviceName, {\n                projection: {\n                  _id: 1\n                }\n              });\n              if (service !== null && service !== void 0 && service._id) {\n                const {\n                  deletedCount\n                } = await LoginServiceConfiguration.removeService(service._id);\n                if (deletedCount > 0) {\n                  void notifyOnLoginServiceConfigurationChanged({\n                    _id: service._id\n                  }, 'removed');\n                }\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","updateOAuthServices","LoginServiceConfiguration","CustomOAuth","notifyOnLoginServiceConfigurationChanged","notifyOnLoginServiceConfigurationChangedByService","settings","logger","__reifyWaitForDeps__","services","getByRegexp","filteredServices","filter","_ref","value","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","key","debug","oauth_updated","serviceName","replace","test","serviceKey","toLowerCase","data","clientId","get","concat","secret","custom","serverURL","tokenPath","identityPath","authorizePath","scope","accessTokenParam","buttonLabelText","buttonLabelColor","loginStyle","buttonColor","tokenSentVia","identityTokenSentVia","keyField","usernameField","emailField","nameField","avatarField","rolesClaim","groupsClaim","channelsMap","channelsAdmin","mergeUsers","mergeUsersDistinctServices","mapChannels","mergeRoles","rolesToSync","showButton","appId","consumerKey","clientConfig","requestPermissions","createOrUpdateService","service","findOneByService","projection","_id","deletedCount","removeService","err","return","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/oauth/updateOAuthServices.ts"],"sourcesContent":["import type {\n\tFacebookOAuthConfiguration,\n\tILoginServiceConfiguration,\n\tLinkedinOAuthConfiguration,\n\tOAuthConfiguration,\n\tTwitterOAuthConfiguration,\n} from '@rocket.chat/core-typings';\nimport { LoginServiceConfiguration } from '@rocket.chat/models';\n\nimport { CustomOAuth } from '../../../app/custom-oauth/server/custom_oauth_server';\nimport {\n\tnotifyOnLoginServiceConfigurationChanged,\n\tnotifyOnLoginServiceConfigurationChangedByService,\n} from '../../../app/lib/server/lib/notifyListener';\nimport { settings } from '../../../app/settings/server/cached';\nimport { logger } from './logger';\n\nexport async function updateOAuthServices(): Promise<void> {\n\tconst services = settings.getByRegexp(/^(Accounts_OAuth_|Accounts_OAuth_Custom-)[a-z0-9_]+$/i);\n\tconst filteredServices = services.filter(([, value]) => typeof value === 'boolean');\n\tfor await (const [key, value] of filteredServices) {\n\t\tlogger.debug({ oauth_updated: key });\n\t\tlet serviceName = key.replace('Accounts_OAuth_', '');\n\t\tif (serviceName === 'Meteor') {\n\t\t\tserviceName = 'meteor-developer';\n\t\t}\n\t\tif (/Accounts_OAuth_Custom-/.test(key)) {\n\t\t\tserviceName = key.replace('Accounts_OAuth_Custom-', '');\n\t\t}\n\n\t\tconst serviceKey = serviceName.toLowerCase();\n\n\t\tif (value === true) {\n\t\t\tconst data: Partial<ILoginServiceConfiguration & Omit<OAuthConfiguration, '_id'>> = {\n\t\t\t\tclientId: settings.get(`${key}_id`),\n\t\t\t\tsecret: settings.get(`${key}_secret`),\n\t\t\t};\n\n\t\t\tif (/Accounts_OAuth_Custom-/.test(key)) {\n\t\t\t\tdata.custom = true;\n\t\t\t\tdata.clientId = settings.get(`${key}-id`);\n\t\t\t\tdata.secret = settings.get(`${key}-secret`);\n\t\t\t\tdata.serverURL = settings.get(`${key}-url`);\n\t\t\t\tdata.tokenPath = settings.get(`${key}-token_path`);\n\t\t\t\tdata.identityPath = settings.get(`${key}-identity_path`);\n\t\t\t\tdata.authorizePath = settings.get(`${key}-authorize_path`);\n\t\t\t\tdata.scope = settings.get(`${key}-scope`);\n\t\t\t\tdata.accessTokenParam = settings.get(`${key}-access_token_param`);\n\t\t\t\tdata.buttonLabelText = settings.get(`${key}-button_label_text`);\n\t\t\t\tdata.buttonLabelColor = settings.get(`${key}-button_label_color`);\n\t\t\t\tdata.loginStyle = settings.get(`${key}-login_style`);\n\t\t\t\tdata.buttonColor = settings.get(`${key}-button_color`);\n\t\t\t\tdata.tokenSentVia = settings.get(`${key}-token_sent_via`);\n\t\t\t\tdata.identityTokenSentVia = settings.get(`${key}-identity_token_sent_via`);\n\t\t\t\tdata.keyField = settings.get(`${key}-key_field`);\n\t\t\t\tdata.usernameField = settings.get(`${key}-username_field`);\n\t\t\t\tdata.emailField = settings.get(`${key}-email_field`);\n\t\t\t\tdata.nameField = settings.get(`${key}-name_field`);\n\t\t\t\tdata.avatarField = settings.get(`${key}-avatar_field`);\n\t\t\t\tdata.rolesClaim = settings.get(`${key}-roles_claim`);\n\t\t\t\tdata.groupsClaim = settings.get(`${key}-groups_claim`);\n\t\t\t\tdata.channelsMap = settings.get(`${key}-groups_channel_map`);\n\t\t\t\tdata.channelsAdmin = settings.get(`${key}-channels_admin`);\n\t\t\t\tdata.mergeUsers = settings.get(`${key}-merge_users`);\n\t\t\t\tdata.mergeUsersDistinctServices = settings.get(`${key}-merge_users_distinct_services`);\n\t\t\t\tdata.mapChannels = settings.get(`${key}-map_channels`);\n\t\t\t\tdata.mergeRoles = settings.get(`${key}-merge_roles`);\n\t\t\t\tdata.rolesToSync = settings.get(`${key}-roles_to_sync`);\n\t\t\t\tdata.showButton = settings.get(`${key}-show_button`);\n\n\t\t\t\tnew CustomOAuth(serviceKey, {\n\t\t\t\t\tserverURL: data.serverURL,\n\t\t\t\t\ttokenPath: data.tokenPath,\n\t\t\t\t\tidentityPath: data.identityPath,\n\t\t\t\t\tauthorizePath: data.authorizePath,\n\t\t\t\t\tscope: data.scope,\n\t\t\t\t\tloginStyle: data.loginStyle,\n\t\t\t\t\ttokenSentVia: data.tokenSentVia,\n\t\t\t\t\tidentityTokenSentVia: data.identityTokenSentVia,\n\t\t\t\t\tkeyField: data.keyField,\n\t\t\t\t\tusernameField: data.usernameField,\n\t\t\t\t\temailField: data.emailField,\n\t\t\t\t\tnameField: data.nameField,\n\t\t\t\t\tavatarField: data.avatarField,\n\t\t\t\t\trolesClaim: data.rolesClaim,\n\t\t\t\t\tgroupsClaim: data.groupsClaim,\n\t\t\t\t\tmapChannels: data.mapChannels,\n\t\t\t\t\tchannelsMap: data.channelsMap,\n\t\t\t\t\tchannelsAdmin: data.channelsAdmin,\n\t\t\t\t\tmergeUsers: data.mergeUsers,\n\t\t\t\t\tmergeUsersDistinctServices: data.mergeUsersDistinctServices,\n\t\t\t\t\tmergeRoles: data.mergeRoles,\n\t\t\t\t\trolesToSync: data.rolesToSync,\n\t\t\t\t\taccessTokenParam: data.accessTokenParam,\n\t\t\t\t\tshowButton: data.showButton,\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (serviceName === 'Facebook') {\n\t\t\t\t(data as FacebookOAuthConfiguration).appId = data.clientId as string;\n\t\t\t\tdelete data.clientId;\n\t\t\t}\n\t\t\tif (serviceName === 'Twitter') {\n\t\t\t\t(data as TwitterOAuthConfiguration).consumerKey = data.clientId as string;\n\t\t\t\tdelete data.clientId;\n\t\t\t}\n\n\t\t\tif (serviceName === 'Linkedin') {\n\t\t\t\t(data as LinkedinOAuthConfiguration).clientConfig = {\n\t\t\t\t\trequestPermissions: ['openid', 'email', 'profile'],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (serviceName === 'Nextcloud') {\n\t\t\t\tdata.buttonLabelText = settings.get('Accounts_OAuth_Nextcloud_button_label_text');\n\t\t\t\tdata.buttonLabelColor = settings.get('Accounts_OAuth_Nextcloud_button_label_color');\n\t\t\t\tdata.buttonColor = settings.get('Accounts_OAuth_Nextcloud_button_color');\n\t\t\t}\n\n\t\t\tawait LoginServiceConfiguration.createOrUpdateService(serviceKey, data);\n\t\t\tvoid notifyOnLoginServiceConfigurationChangedByService(serviceKey);\n\t\t} else {\n\t\t\tconst service = await LoginServiceConfiguration.findOneByService(serviceName, { projection: { _id: 1 } });\n\t\t\tif (service?._id) {\n\t\t\t\tconst { deletedCount } = await LoginServiceConfiguration.removeService(service._id);\n\t\t\t\tif (deletedCount > 0) {\n\t\t\t\t\tvoid notifyOnLoginServiceConfigurationChanged({ _id: service._id }, 'removed');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":";;;IAOA,IAAAA,cAAS;IAAAC,MAAA,CAAAC,IAAA,uCAAuD;MAAAC,QAAAC,CAAA;QAAAJ,cAAA,GAAAI,CAAA;MAAA;IAAA;IAAhEH,MAAA,CAAOI,MAAE;MAAAC,mBAAyB,EAAAA,CAAA,KAAEA;IAAM;IAAA,IAAsBC,yBAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,0BAAAH,CAAA;QAAAG,yBAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,WAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAM,YAAAJ,CAAA;QAAAI,WAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,wCAAA,EAAAC,iDAAA;IAAAT,MAAA,CAAAC,IAAA;MAAAO,yCAAAL,CAAA;QAAAK,wCAAA,GAAAL,CAAA;MAAA;MAAAM,kDAAAN,CAAA;QAAAM,iDAAA,GAAAN,CAAA;MAAA;IAAA;IAAA,IAAAO,QAAA;IAAAV,MAAA,CAAAC,IAAA;MAAAS,SAAAP,CAAA;QAAAO,QAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,MAAA;IAAAX,MAAA,CAAAC,IAAA;MAAAU,OAAAR,CAAA;QAAAQ,MAAA,GAAAR,CAAA;MAAA;IAAA;IAAA,IAAAS,oBAAA,WAAAA,oBAAA;IAUzD,eAAeP,mBAAmBA,CAAA;MACxC,MAAMQ,QAAQ,GAAGH,QAAQ,CAACI,WAAW,CAAC,uDAAuD,CAAC;MAC9F,MAAMC,gBAAgB,GAAGF,QAAQ,CAACG,MAAM,CAACC,IAAA;QAAA,IAAC,GAAGC,KAAK,CAAC,GAAAD,IAAA;QAAA,OAAK,OAAOC,KAAK,KAAK,SAAS;MAAA,EAAC;MAAC,IAAAC,yBAAA;MAAA,IAAAC,iBAAA;MAAA,IAAAC,cAAA;MAAA;QACpF,SAAAC,SAAA,GAAAvB,cAAA,CAAiCgB,gBAAgB,GAAAQ,KAAA,EAAAJ,yBAAA,KAAAI,KAAA,SAAAD,SAAA,CAAAE,IAAA,IAAAC,IAAA,EAAAN,yBAAA,UAAE;UAAA,MAAlC,CAACO,GAAG,EAAER,KAAK,CAAC,GAAAK,KAAA,CAAAL,KAAA;UAAA;YAC5BP,MAAM,CAACgB,KAAK,CAAC;cAAEC,aAAa,EAAEF;YAAG,CAAE,CAAC;YACpC,IAAIG,WAAW,GAAGH,GAAG,CAACI,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC;YACpD,IAAID,WAAW,KAAK,QAAQ,EAAE;cAC7BA,WAAW,GAAG,kBAAkB;YACjC;YACA,IAAI,wBAAwB,CAACE,IAAI,CAACL,GAAG,CAAC,EAAE;cACvCG,WAAW,GAAGH,GAAG,CAACI,OAAO,CAAC,wBAAwB,EAAE,EAAE,CAAC;YACxD;YAEA,MAAME,UAAU,GAAGH,WAAW,CAACI,WAAW,EAAE;YAE5C,IAAIf,KAAK,KAAK,IAAI,EAAE;cACnB,MAAMgB,IAAI,GAA0E;gBACnFC,QAAQ,EAAEzB,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,QAAK,CAAC;gBACnCY,MAAM,EAAE5B,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,YAAS;eACpC;cAED,IAAI,wBAAwB,CAACK,IAAI,CAACL,GAAG,CAAC,EAAE;gBACvCQ,IAAI,CAACK,MAAM,GAAG,IAAI;gBAClBL,IAAI,CAACC,QAAQ,GAAGzB,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,QAAK,CAAC;gBACzCQ,IAAI,CAACI,MAAM,GAAG5B,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,YAAS,CAAC;gBAC3CQ,IAAI,CAACM,SAAS,GAAG9B,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,SAAM,CAAC;gBAC3CQ,IAAI,CAACO,SAAS,GAAG/B,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,gBAAa,CAAC;gBAClDQ,IAAI,CAACQ,YAAY,GAAGhC,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,mBAAgB,CAAC;gBACxDQ,IAAI,CAACS,aAAa,GAAGjC,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,oBAAiB,CAAC;gBAC1DQ,IAAI,CAACU,KAAK,GAAGlC,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,WAAQ,CAAC;gBACzCQ,IAAI,CAACW,gBAAgB,GAAGnC,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,wBAAqB,CAAC;gBACjEQ,IAAI,CAACY,eAAe,GAAGpC,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,uBAAoB,CAAC;gBAC/DQ,IAAI,CAACa,gBAAgB,GAAGrC,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,wBAAqB,CAAC;gBACjEQ,IAAI,CAACc,UAAU,GAAGtC,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,iBAAc,CAAC;gBACpDQ,IAAI,CAACe,WAAW,GAAGvC,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,kBAAe,CAAC;gBACtDQ,IAAI,CAACgB,YAAY,GAAGxC,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,oBAAiB,CAAC;gBACzDQ,IAAI,CAACiB,oBAAoB,GAAGzC,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,6BAA0B,CAAC;gBAC1EQ,IAAI,CAACkB,QAAQ,GAAG1C,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,eAAY,CAAC;gBAChDQ,IAAI,CAACmB,aAAa,GAAG3C,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,oBAAiB,CAAC;gBAC1DQ,IAAI,CAACoB,UAAU,GAAG5C,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,iBAAc,CAAC;gBACpDQ,IAAI,CAACqB,SAAS,GAAG7C,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,gBAAa,CAAC;gBAClDQ,IAAI,CAACsB,WAAW,GAAG9C,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,kBAAe,CAAC;gBACtDQ,IAAI,CAACuB,UAAU,GAAG/C,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,iBAAc,CAAC;gBACpDQ,IAAI,CAACwB,WAAW,GAAGhD,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,kBAAe,CAAC;gBACtDQ,IAAI,CAACyB,WAAW,GAAGjD,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,wBAAqB,CAAC;gBAC5DQ,IAAI,CAAC0B,aAAa,GAAGlD,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,oBAAiB,CAAC;gBAC1DQ,IAAI,CAAC2B,UAAU,GAAGnD,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,iBAAc,CAAC;gBACpDQ,IAAI,CAAC4B,0BAA0B,GAAGpD,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,mCAAgC,CAAC;gBACtFQ,IAAI,CAAC6B,WAAW,GAAGrD,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,kBAAe,CAAC;gBACtDQ,IAAI,CAAC8B,UAAU,GAAGtD,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,iBAAc,CAAC;gBACpDQ,IAAI,CAAC+B,WAAW,GAAGvD,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,mBAAgB,CAAC;gBACvDQ,IAAI,CAACgC,UAAU,GAAGxD,QAAQ,CAAC0B,GAAG,IAAAC,MAAA,CAAIX,GAAG,iBAAc,CAAC;gBAEpD,IAAInB,WAAW,CAACyB,UAAU,EAAE;kBAC3BQ,SAAS,EAAEN,IAAI,CAACM,SAAS;kBACzBC,SAAS,EAAEP,IAAI,CAACO,SAAS;kBACzBC,YAAY,EAAER,IAAI,CAACQ,YAAY;kBAC/BC,aAAa,EAAET,IAAI,CAACS,aAAa;kBACjCC,KAAK,EAAEV,IAAI,CAACU,KAAK;kBACjBI,UAAU,EAAEd,IAAI,CAACc,UAAU;kBAC3BE,YAAY,EAAEhB,IAAI,CAACgB,YAAY;kBAC/BC,oBAAoB,EAAEjB,IAAI,CAACiB,oBAAoB;kBAC/CC,QAAQ,EAAElB,IAAI,CAACkB,QAAQ;kBACvBC,aAAa,EAAEnB,IAAI,CAACmB,aAAa;kBACjCC,UAAU,EAAEpB,IAAI,CAACoB,UAAU;kBAC3BC,SAAS,EAAErB,IAAI,CAACqB,SAAS;kBACzBC,WAAW,EAAEtB,IAAI,CAACsB,WAAW;kBAC7BC,UAAU,EAAEvB,IAAI,CAACuB,UAAU;kBAC3BC,WAAW,EAAExB,IAAI,CAACwB,WAAW;kBAC7BK,WAAW,EAAE7B,IAAI,CAAC6B,WAAW;kBAC7BJ,WAAW,EAAEzB,IAAI,CAACyB,WAAW;kBAC7BC,aAAa,EAAE1B,IAAI,CAAC0B,aAAa;kBACjCC,UAAU,EAAE3B,IAAI,CAAC2B,UAAU;kBAC3BC,0BAA0B,EAAE5B,IAAI,CAAC4B,0BAA0B;kBAC3DE,UAAU,EAAE9B,IAAI,CAAC8B,UAAU;kBAC3BC,WAAW,EAAE/B,IAAI,CAAC+B,WAAW;kBAC7BpB,gBAAgB,EAAEX,IAAI,CAACW,gBAAgB;kBACvCqB,UAAU,EAAEhC,IAAI,CAACgC;iBACjB,CAAC;cACH;cACA,IAAIrC,WAAW,KAAK,UAAU,EAAE;gBAC9BK,IAAmC,CAACiC,KAAK,GAAGjC,IAAI,CAACC,QAAkB;gBACpE,OAAOD,IAAI,CAACC,QAAQ;cACrB;cACA,IAAIN,WAAW,KAAK,SAAS,EAAE;gBAC7BK,IAAkC,CAACkC,WAAW,GAAGlC,IAAI,CAACC,QAAkB;gBACzE,OAAOD,IAAI,CAACC,QAAQ;cACrB;cAEA,IAAIN,WAAW,KAAK,UAAU,EAAE;gBAC9BK,IAAmC,CAACmC,YAAY,GAAG;kBACnDC,kBAAkB,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,SAAS;iBACjD;cACF;cAEA,IAAIzC,WAAW,KAAK,WAAW,EAAE;gBAChCK,IAAI,CAACY,eAAe,GAAGpC,QAAQ,CAAC0B,GAAG,CAAC,4CAA4C,CAAC;gBACjFF,IAAI,CAACa,gBAAgB,GAAGrC,QAAQ,CAAC0B,GAAG,CAAC,6CAA6C,CAAC;gBACnFF,IAAI,CAACe,WAAW,GAAGvC,QAAQ,CAAC0B,GAAG,CAAC,uCAAuC,CAAC;cACzE;cAEA,MAAM9B,yBAAyB,CAACiE,qBAAqB,CAACvC,UAAU,EAAEE,IAAI,CAAC;cACvE,KAAKzB,iDAAiD,CAACuB,UAAU,CAAC;YACnE,CAAC,MAAM;cACN,MAAMwC,OAAO,GAAG,MAAMlE,yBAAyB,CAACmE,gBAAgB,CAAC5C,WAAW,EAAE;gBAAE6C,UAAU,EAAE;kBAAEC,GAAG,EAAE;gBAAC;cAAE,CAAE,CAAC;cACzG,IAAIH,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEG,GAAG,EAAE;gBACjB,MAAM;kBAAEC;gBAAY,CAAE,GAAG,MAAMtE,yBAAyB,CAACuE,aAAa,CAACL,OAAO,CAACG,GAAG,CAAC;gBACnF,IAAIC,YAAY,GAAG,CAAC,EAAE;kBACrB,KAAKpE,wCAAwC,CAAC;oBAAEmE,GAAG,EAAEH,OAAO,CAACG;kBAAG,CAAE,EAAE,SAAS,CAAC;gBAC/E;cACD;YACD;UAAC;QACF;MAAC,SAAAG,GAAA;QAAA1D,iBAAA;QAAAC,cAAA,GAAAyD,GAAA;MAAA;QAAA;UAAA,IAAA3D,yBAAA,IAAAG,SAAA,CAAAyD,MAAA;YAAA,MAAAzD,SAAA,CAAAyD,MAAA;UAAA;QAAA;UAAA,IAAA3D,iBAAA;YAAA,MAAAC,cAAA;UAAA;QAAA;MAAA;IACF;IAAC2D,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"55108c44d63996f69cc915fe9c375bd6fa94086e"}
