{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/videoConferences.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/bridges/videoConferences.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/videoConferences.ts","inputSourceMap":{"version":3,"file":"app/apps/server/bridges/videoConferences.ts","sourceRoot":"","sources":["app/apps/server/bridges/videoConferences.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,qBAAqB,EAAE,MAAM,+DAA+D,CAAC;AACtG,OAAO,EAAE,SAAS,EAAE,MAAM,4BAA4B,CAAC;AAEvD,OAAO,EAAE,kBAAkB,EAAE,MAAM,2CAA2C,CAAC;AAG/E,MAAM,OAAO,wBAAyB,SAAQ,qBAAqB;IACrC;IAA7B,YAA6B,IAA4B;QACxD,KAAK,EAAE,CAAC;QADoB,SAAI,GAAJ,IAAI,CAAwB;IAEzD,CAAC;IAES,KAAK,CAAC,OAAO,CAAC,MAAc,EAAE,KAAa;QACpD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,2CAA2C,MAAM,GAAG,CAAC,CAAC;QAEzF,kIAAkI;QAClI,MAAM,OAAO,GAAyC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,GAAG,CAAC,kBAAkB,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC7H,OAAO,OAAmC,CAAC;IAC5C,CAAC;IAES,KAAK,CAAC,MAAM,CAAC,IAAwB,EAAE,KAAa;QAC7D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,kCAAkC,CAAC,CAAC;QAEvE,OAAO,CACN,MAAM,SAAS,CAAC,MAAM,CAAC;YACtB,IAAI,EAAE,iBAAiB;YACvB,GAAG,IAAI;SACP,CAAC,CACF,CAAC,MAAM,CAAC;IACV,CAAC;IAES,KAAK,CAAC,MAAM,CAAC,IAAqB,EAAE,KAAa;QAC1D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,kCAAkC,CAAC,CAAC;QAEvE,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;QAC7D,CAAC;QAED,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,GAAG,CAAC,kBAAkB,CAAkC,CAAA,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;QAClI,MAAM,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAE7D,IAAI,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YAC5C,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC;gBACpD,SAAS;YACV,CAAC;YAED,MAAM,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAC5C,CAAC;QAED,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC;YAC/D,MAAM,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACxD,CAAC;aAAM,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACzB,MAAM,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACpD,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;YAClC,MAAM,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC;QAED,IAAI,IAAI,CAAC,aAAa,KAAK,OAAO,CAAC,aAAa,EAAE,CAAC;YAClD,MAAM,SAAS,CAAC,4BAA4B,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5E,CAAC;IACF,CAAC;IAES,KAAK,CAAC,gBAAgB,CAAC,IAAwB,EAAE,KAAa;QACvE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,8CAA8C,CAAC,CAAC;QACnF,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;IAChF,CAAC;IAES,KAAK,CAAC,kBAAkB,CAAC,IAAwB;QAC1D,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;CACD","sourcesContent":["import type { IAppServerOrchestrator } from '@rocket.chat/apps';\nimport type { IVideoConfProvider } from '@rocket.chat/apps-engine/definition/videoConfProviders';\nimport type { AppVideoConference, VideoConference } from '@rocket.chat/apps-engine/definition/videoConferences';\nimport { VideoConferenceBridge } from '@rocket.chat/apps-engine/server/bridges/VideoConferenceBridge';\nimport { VideoConf } from '@rocket.chat/core-services';\n\nimport { videoConfProviders } from '../../../../server/lib/videoConfProviders';\nimport type { AppVideoConferencesConverter } from '../converters/videoConferences';\n\nexport class AppVideoConferenceBridge extends VideoConferenceBridge {\n\tconstructor(private readonly orch: IAppServerOrchestrator) {\n\t\tsuper();\n\t}\n\n\tprotected async getById(callId: string, appId: string): Promise<VideoConference> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the video conference byId: \"${callId}\"`);\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst promise: Promise<VideoConference | undefined> = this.orch.getConverters()?.get('videoConferences').convertById(callId);\n\t\treturn promise as Promise<VideoConference>;\n\t}\n\n\tprotected async create(call: AppVideoConference, appId: string): Promise<string> {\n\t\tthis.orch.debugLog(`The App ${appId} is creating a video conference.`);\n\n\t\treturn (\n\t\t\tawait VideoConf.create({\n\t\t\t\ttype: 'videoconference',\n\t\t\t\t...call,\n\t\t\t})\n\t\t).callId;\n\t}\n\n\tprotected async update(call: VideoConference, appId: string): Promise<void> {\n\t\tthis.orch.debugLog(`The App ${appId} is updating a video conference.`);\n\n\t\tconst oldData = call._id && (await VideoConf.getUnfiltered(call._id));\n\t\tif (!oldData) {\n\t\t\tthrow new Error('A video conference must exist to update.');\n\t\t}\n\n\t\tconst data = (this.orch.getConverters()?.get('videoConferences') as AppVideoConferencesConverter).convertAppVideoConference(call);\n\t\tawait VideoConf.setProviderData(call._id, data.providerData);\n\n\t\tfor await (const { _id, ts } of data.users) {\n\t\t\tif (oldData.users.find((user) => user._id === _id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tawait VideoConf.addUser(call._id, _id, ts);\n\t\t}\n\n\t\tif (data.endedBy && data.endedBy._id !== oldData.endedBy?._id) {\n\t\t\tawait VideoConf.setEndedBy(call._id, data.endedBy._id);\n\t\t} else if (data.endedAt) {\n\t\t\tawait VideoConf.setEndedAt(call._id, data.endedAt);\n\t\t}\n\n\t\tif (data.status > oldData.status) {\n\t\t\tawait VideoConf.setStatus(call._id, data.status);\n\t\t}\n\n\t\tif (data.discussionRid !== oldData.discussionRid) {\n\t\t\tawait VideoConf.assignDiscussionToConference(call._id, data.discussionRid);\n\t\t}\n\t}\n\n\tprotected async registerProvider(info: IVideoConfProvider, appId: string): Promise<void> {\n\t\tthis.orch.debugLog(`The App ${appId} is registering a video conference provider.`);\n\t\tvideoConfProviders.registerProvider(info.name, info.capabilities || {}, appId);\n\t}\n\n\tprotected async unRegisterProvider(info: IVideoConfProvider): Promise<void> {\n\t\tvideoConfProviders.unRegisterProvider(info.name);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/videoConferences.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/bridges/videoConferences.ts","inputSourceMap":{"version":3,"file":"app/apps/server/bridges/videoConferences.ts","sourceRoot":"","sources":["app/apps/server/bridges/videoConferences.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAppServerOrchestrator } from '@rocket.chat/apps';\nimport type { IVideoConfProvider } from '@rocket.chat/apps-engine/definition/videoConfProviders';\nimport type { AppVideoConference, VideoConference } from '@rocket.chat/apps-engine/definition/videoConferences';\nimport { VideoConferenceBridge } from '@rocket.chat/apps-engine/server/bridges/VideoConferenceBridge';\nimport { VideoConf } from '@rocket.chat/core-services';\n\nimport { videoConfProviders } from '../../../../server/lib/videoConfProviders';\nimport type { AppVideoConferencesConverter } from '../converters/videoConferences';\n\nexport class AppVideoConferenceBridge extends VideoConferenceBridge {\n\tconstructor(private readonly orch: IAppServerOrchestrator) {\n\t\tsuper();\n\t}\n\n\tprotected async getById(callId: string, appId: string): Promise<VideoConference> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the video conference byId: \"${callId}\"`);\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst promise: Promise<VideoConference | undefined> = this.orch.getConverters()?.get('videoConferences').convertById(callId);\n\t\treturn promise as Promise<VideoConference>;\n\t}\n\n\tprotected async create(call: AppVideoConference, appId: string): Promise<string> {\n\t\tthis.orch.debugLog(`The App ${appId} is creating a video conference.`);\n\n\t\treturn (\n\t\t\tawait VideoConf.create({\n\t\t\t\ttype: 'videoconference',\n\t\t\t\t...call,\n\t\t\t})\n\t\t).callId;\n\t}\n\n\tprotected async update(call: VideoConference, appId: string): Promise<void> {\n\t\tthis.orch.debugLog(`The App ${appId} is updating a video conference.`);\n\n\t\tconst oldData = call._id && (await VideoConf.getUnfiltered(call._id));\n\t\tif (!oldData) {\n\t\t\tthrow new Error('A video conference must exist to update.');\n\t\t}\n\n\t\tconst data = (this.orch.getConverters()?.get('videoConferences') as AppVideoConferencesConverter).convertAppVideoConference(call);\n\t\tawait VideoConf.setProviderData(call._id, data.providerData);\n\n\t\tfor await (const { _id, ts } of data.users) {\n\t\t\tif (oldData.users.find((user) => user._id === _id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tawait VideoConf.addUser(call._id, _id, ts);\n\t\t}\n\n\t\tif (data.endedBy && data.endedBy._id !== oldData.endedBy?._id) {\n\t\t\tawait VideoConf.setEndedBy(call._id, data.endedBy._id);\n\t\t} else if (data.endedAt) {\n\t\t\tawait VideoConf.setEndedAt(call._id, data.endedAt);\n\t\t}\n\n\t\tif (data.status > oldData.status) {\n\t\t\tawait VideoConf.setStatus(call._id, data.status);\n\t\t}\n\n\t\tif (data.discussionRid !== oldData.discussionRid) {\n\t\t\tawait VideoConf.assignDiscussionToConference(call._id, data.discussionRid);\n\t\t}\n\t}\n\n\tprotected async registerProvider(info: IVideoConfProvider, appId: string): Promise<void> {\n\t\tthis.orch.debugLog(`The App ${appId} is registering a video conference provider.`);\n\t\tvideoConfProviders.registerProvider(info.name, info.capabilities || {}, appId);\n\t}\n\n\tprotected async unRegisterProvider(info: IVideoConfProvider): Promise<void> {\n\t\tvideoConfProviders.unRegisterProvider(info.name);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      AppVideoConferenceBridge: () => AppVideoConferenceBridge\n    });\n    let VideoConferenceBridge;\n    module.link(\"@rocket.chat/apps-engine/server/bridges/VideoConferenceBridge\", {\n      VideoConferenceBridge(v) {\n        VideoConferenceBridge = v;\n      }\n    }, 0);\n    let VideoConf;\n    module.link(\"@rocket.chat/core-services\", {\n      VideoConf(v) {\n        VideoConf = v;\n      }\n    }, 1);\n    let videoConfProviders;\n    module.link(\"../../../../server/lib/videoConfProviders\", {\n      videoConfProviders(v) {\n        videoConfProviders = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AppVideoConferenceBridge extends VideoConferenceBridge {\n      constructor(orch) {\n        super();\n        this.orch = void 0;\n        this.orch = orch;\n      }\n      async getById(callId, appId) {\n        var _this$orch$getConvert;\n        this.orch.debugLog(\"The App \".concat(appId, \" is getting the video conference byId: \\\"\").concat(callId, \"\\\"\"));\n        // #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n        const promise = (_this$orch$getConvert = this.orch.getConverters()) === null || _this$orch$getConvert === void 0 ? void 0 : _this$orch$getConvert.get('videoConferences').convertById(callId);\n        return promise;\n      }\n      async create(call, appId) {\n        this.orch.debugLog(\"The App \".concat(appId, \" is creating a video conference.\"));\n        return (await VideoConf.create(_objectSpread({\n          type: 'videoconference'\n        }, call))).callId;\n      }\n      async update(call, appId) {\n        var _this$orch$getConvert2, _oldData$endedBy;\n        this.orch.debugLog(\"The App \".concat(appId, \" is updating a video conference.\"));\n        const oldData = call._id && (await VideoConf.getUnfiltered(call._id));\n        if (!oldData) {\n          throw new Error('A video conference must exist to update.');\n        }\n        const data = ((_this$orch$getConvert2 = this.orch.getConverters()) === null || _this$orch$getConvert2 === void 0 ? void 0 : _this$orch$getConvert2.get('videoConferences')).convertAppVideoConference(call);\n        await VideoConf.setProviderData(call._id, data.providerData);\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(data.users), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const {\n              _id,\n              ts\n            } = _step.value;\n            {\n              if (oldData.users.find(user => user._id === _id)) {\n                continue;\n              }\n              await VideoConf.addUser(call._id, _id, ts);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        if (data.endedBy && data.endedBy._id !== ((_oldData$endedBy = oldData.endedBy) === null || _oldData$endedBy === void 0 ? void 0 : _oldData$endedBy._id)) {\n          await VideoConf.setEndedBy(call._id, data.endedBy._id);\n        } else if (data.endedAt) {\n          await VideoConf.setEndedAt(call._id, data.endedAt);\n        }\n        if (data.status > oldData.status) {\n          await VideoConf.setStatus(call._id, data.status);\n        }\n        if (data.discussionRid !== oldData.discussionRid) {\n          await VideoConf.assignDiscussionToConference(call._id, data.discussionRid);\n        }\n      }\n      async registerProvider(info, appId) {\n        this.orch.debugLog(\"The App \".concat(appId, \" is registering a video conference provider.\"));\n        videoConfProviders.registerProvider(info.name, info.capabilities || {}, appId);\n      }\n      async unRegisterProvider(info) {\n        videoConfProviders.unRegisterProvider(info.name);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","AppVideoConferenceBridge","VideoConferenceBridge","VideoConf","videoConfProviders","__reifyWaitForDeps__","constructor","orch","getById","callId","appId","_this$orch$getConvert","debugLog","concat","promise","getConverters","get","convertById","create","call","type","update","_this$orch$getConvert2","_oldData$endedBy","oldData","_id","getUnfiltered","Error","data","convertAppVideoConference","setProviderData","providerData","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","users","_step","next","done","ts","value","find","user","addUser","err","return","endedBy","setEndedBy","endedAt","setEndedAt","status","setStatus","discussionRid","assignDiscussionToConference","registerProvider","info","name","capabilities","unRegisterProvider","__reify_async_result__","_reifyError","self","async"],"sources":["app/apps/server/bridges/videoConferences.ts"],"sourcesContent":["import type { IAppServerOrchestrator } from '@rocket.chat/apps';\nimport type { IVideoConfProvider } from '@rocket.chat/apps-engine/definition/videoConfProviders';\nimport type { AppVideoConference, VideoConference } from '@rocket.chat/apps-engine/definition/videoConferences';\nimport { VideoConferenceBridge } from '@rocket.chat/apps-engine/server/bridges/VideoConferenceBridge';\nimport { VideoConf } from '@rocket.chat/core-services';\n\nimport { videoConfProviders } from '../../../../server/lib/videoConfProviders';\nimport type { AppVideoConferencesConverter } from '../converters/videoConferences';\n\nexport class AppVideoConferenceBridge extends VideoConferenceBridge {\n\tconstructor(private readonly orch: IAppServerOrchestrator) {\n\t\tsuper();\n\t}\n\n\tprotected async getById(callId: string, appId: string): Promise<VideoConference> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the video conference byId: \"${callId}\"`);\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst promise: Promise<VideoConference | undefined> = this.orch.getConverters()?.get('videoConferences').convertById(callId);\n\t\treturn promise as Promise<VideoConference>;\n\t}\n\n\tprotected async create(call: AppVideoConference, appId: string): Promise<string> {\n\t\tthis.orch.debugLog(`The App ${appId} is creating a video conference.`);\n\n\t\treturn (\n\t\t\tawait VideoConf.create({\n\t\t\t\ttype: 'videoconference',\n\t\t\t\t...call,\n\t\t\t})\n\t\t).callId;\n\t}\n\n\tprotected async update(call: VideoConference, appId: string): Promise<void> {\n\t\tthis.orch.debugLog(`The App ${appId} is updating a video conference.`);\n\n\t\tconst oldData = call._id && (await VideoConf.getUnfiltered(call._id));\n\t\tif (!oldData) {\n\t\t\tthrow new Error('A video conference must exist to update.');\n\t\t}\n\n\t\tconst data = (this.orch.getConverters()?.get('videoConferences') as AppVideoConferencesConverter).convertAppVideoConference(call);\n\t\tawait VideoConf.setProviderData(call._id, data.providerData);\n\n\t\tfor await (const { _id, ts } of data.users) {\n\t\t\tif (oldData.users.find((user) => user._id === _id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tawait VideoConf.addUser(call._id, _id, ts);\n\t\t}\n\n\t\tif (data.endedBy && data.endedBy._id !== oldData.endedBy?._id) {\n\t\t\tawait VideoConf.setEndedBy(call._id, data.endedBy._id);\n\t\t} else if (data.endedAt) {\n\t\t\tawait VideoConf.setEndedAt(call._id, data.endedAt);\n\t\t}\n\n\t\tif (data.status > oldData.status) {\n\t\t\tawait VideoConf.setStatus(call._id, data.status);\n\t\t}\n\n\t\tif (data.discussionRid !== oldData.discussionRid) {\n\t\t\tawait VideoConf.assignDiscussionToConference(call._id, data.discussionRid);\n\t\t}\n\t}\n\n\tprotected async registerProvider(info: IVideoConfProvider, appId: string): Promise<void> {\n\t\tthis.orch.debugLog(`The App ${appId} is registering a video conference provider.`);\n\t\tvideoConfProviders.registerProvider(info.name, info.capabilities || {}, appId);\n\t}\n\n\tprotected async unRegisterProvider(info: IVideoConfProvider): Promise<void> {\n\t\tvideoConfProviders.unRegisterProvider(info.name);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e7bd54ba1ad1eef71c6410b75c821848068bbaed"}
