{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-message/client/messageBox/messageBoxFormatting.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/ui-message/client/messageBox/messageBoxFormatting.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-message/client/messageBox/messageBoxFormatting.ts","inputSourceMap":{"version":3,"file":"app/ui-message/client/messageBox/messageBoxFormatting.ts","sourceRoot":"","sources":["app/ui-message/client/messageBox/messageBoxFormatting.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,eAAe,EAAE,MAAM,wCAAwC,CAAC;AACzE,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,0BAA0B,MAAM,8BAA8B,CAAC;AAwBtE,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,MAAwB,EAA0B,EAAE,CAAC,QAAQ,IAAI,MAAM,CAAC;AAEvG,MAAM,CAAC,MAAM,iBAAiB,GAAoC;IACjE;QACC,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,YAAY;QACrB,OAAO,EAAE,GAAG;KACZ;IACD;QACC,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,YAAY;QACrB,OAAO,EAAE,GAAG;KACZ;IACD;QACC,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,YAAY;KACrB;IACD;QACC,KAAK,EAAE,aAAa;QACpB,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,YAAY;KACrB;IACD;QACC,KAAK,EAAE,YAAY;QACnB,IAAI,EAAE,WAAW;QACjB,OAAO,EAAE,qBAAqB;KAC9B;IACD;QACC,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,CAAC,WAAwB,EAAE,EAAE;YACpC,MAAM,EAAE,SAAS,EAAE,GAAG,WAAW,CAAC;YAElC,MAAM,YAAY,GAAG,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;YAE3E,MAAM,OAAO,GAAG,GAAG,EAAE;gBACpB,eAAe,CAAC,KAAK,EAAE,CAAC;gBACxB,WAAW,CAAC,KAAK,EAAE,CAAC;YACrB,CAAC,CAAC;YAEF,MAAM,SAAS,GAAG,CAAC,GAAW,EAAE,IAAY,EAAE,EAAE;gBAC/C,OAAO,EAAE,CAAC;gBACV,WAAW,CAAC,WAAW,CAAC,IAAI,IAAI,KAAK,GAAG,GAAG,EAAE,SAAS,CAAC,CAAC;gBACxD,WAAW,CAAC,cAAc,EAAE,CAAC;YAC9B,CAAC,CAAC;YAEF,eAAe,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,0BAA0B,EAAE,KAAK,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QAC9G,CAAC;KACD;IACD;QACC,KAAK,EAAE,OAAyB;QAChC,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,GAAG,EAAE;YACV,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC;gBACpC,OAAO;YACR,CAAC;YACD,IAAI,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,EAAE,CAAC;gBACzC,OAAO,WAAW,CAAC;YACpB,CAAC;YACD,IAAI,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC,EAAE,CAAC;gBAC9C,OAAO,aAAa,CAAC;YACtB,CAAC;QACF,CAAC;QACD,IAAI,EAAE,oDAAoD;QAC1D,SAAS,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC;KAC9C;CACQ,CAAC","sourcesContent":["import type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\n\nimport type { ComposerAPI } from '../../../../client/lib/chats/ChatAPI';\nimport { imperativeModal } from '../../../../client/lib/imperativeModal';\nimport { settings } from '../../../settings/client';\nimport AddLinkComposerActionModal from './AddLinkComposerActionModal';\n\ntype FormattingButtonDefault = { label: TranslationKey; condition?: () => boolean };\n\ntype TextButton = {\n\ttext: () => string | undefined;\n\tlink: string;\n} & FormattingButtonDefault;\n\ntype PatternButton = {\n\ticon: IconName;\n\tpattern: string;\n\t// text?: () => string | undefined;\n\tcommand?: string;\n\tlink?: string;\n} & FormattingButtonDefault;\n\ntype PromptButton = {\n\tprompt: (composer: ComposerAPI) => void;\n\ticon: IconName;\n} & FormattingButtonDefault;\n\nexport type FormattingButton = PatternButton | PromptButton | TextButton;\n\nexport const isPromptButton = (button: FormattingButton): button is PromptButton => 'prompt' in button;\n\nexport const formattingButtons: ReadonlyArray<FormattingButton> = [\n\t{\n\t\tlabel: 'Bold',\n\t\ticon: 'bold',\n\t\tpattern: '*{{text}}*',\n\t\tcommand: 'b',\n\t},\n\t{\n\t\tlabel: 'Italic',\n\t\ticon: 'italic',\n\t\tpattern: '_{{text}}_',\n\t\tcommand: 'i',\n\t},\n\t{\n\t\tlabel: 'Strike',\n\t\ticon: 'strike',\n\t\tpattern: '~{{text}}~',\n\t},\n\t{\n\t\tlabel: 'Inline_code',\n\t\ticon: 'code',\n\t\tpattern: '`{{text}}`',\n\t},\n\t{\n\t\tlabel: 'Multi_line',\n\t\ticon: 'multiline',\n\t\tpattern: '```\\n{{text}}\\n``` ',\n\t},\n\t{\n\t\tlabel: 'Link',\n\t\ticon: 'link',\n\t\tprompt: (composerApi: ComposerAPI) => {\n\t\t\tconst { selection } = composerApi;\n\n\t\t\tconst selectedText = composerApi.substring(selection.start, selection.end);\n\n\t\t\tconst onClose = () => {\n\t\t\t\timperativeModal.close();\n\t\t\t\tcomposerApi.focus();\n\t\t\t};\n\n\t\t\tconst onConfirm = (url: string, text: string) => {\n\t\t\t\tonClose();\n\t\t\t\tcomposerApi.replaceText(`[${text}](${url})`, selection);\n\t\t\t\tcomposerApi.setCursorToEnd();\n\t\t\t};\n\n\t\t\timperativeModal.open({ component: AddLinkComposerActionModal, props: { onConfirm, selectedText, onClose } });\n\t\t},\n\t},\n\t{\n\t\tlabel: 'KaTeX' as TranslationKey,\n\t\ticon: 'katex',\n\t\ttext: () => {\n\t\t\tif (!settings.get('Katex_Enabled')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (settings.get('Katex_Dollar_Syntax')) {\n\t\t\t\treturn '$$KaTeX$$';\n\t\t\t}\n\t\t\tif (settings.get('Katex_Parenthesis_Syntax')) {\n\t\t\t\treturn '\\\\[KaTeX\\\\]';\n\t\t\t}\n\t\t},\n\t\tlink: 'https://khan.github.io/KaTeX/function-support.html',\n\t\tcondition: () => settings.get('Katex_Enabled'),\n\t},\n] as const;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-message/client/messageBox/messageBoxFormatting.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-message/client/messageBox/messageBoxFormatting.ts","inputSourceMap":{"version":3,"file":"app/ui-message/client/messageBox/messageBoxFormatting.ts","sourceRoot":"","sources":["app/ui-message/client/messageBox/messageBoxFormatting.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,eAAe,EAAE,MAAM,wCAAwC,CAAC;AACzE,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,0BAA0B,MAAM,8BAA8B,CAAC;AAwBtE,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,MAAwB,EAA0B,EAAE,CAAC,QAAQ,IAAI,MAAM,CAAC;AAEvG,MAAM,CAAC,MAAM,iBAAiB,GAAoC;IACjE;QACC,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,YAAY;QACrB,OAAO,EAAE,GAAG;KACZ;IACD;QACC,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,YAAY;QACrB,OAAO,EAAE,GAAG;KACZ;IACD;QACC,KAAK,EAAE,QAAQ;QACf,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,YAAY;KACrB;IACD;QACC,KAAK,EAAE,aAAa;QACpB,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,YAAY;KACrB;IACD;QACC,KAAK,EAAE,YAAY;QACnB,IAAI,EAAE,WAAW;QACjB,OAAO,EAAE,qBAAqB;KAC9B;IACD;QACC,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,CAAC,WAAwB,EAAE,EAAE;YACpC,MAAM,EAAE,SAAS,EAAE,GAAG,WAAW,CAAC;YAElC,MAAM,YAAY,GAAG,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;YAE3E,MAAM,OAAO,GAAG,GAAG,EAAE;gBACpB,eAAe,CAAC,KAAK,EAAE,CAAC;gBACxB,WAAW,CAAC,KAAK,EAAE,CAAC;YACrB,CAAC,CAAC;YAEF,MAAM,SAAS,GAAG,CAAC,GAAW,EAAE,IAAY,EAAE,EAAE;gBAC/C,OAAO,EAAE,CAAC;gBACV,WAAW,CAAC,WAAW,CAAC,IAAI,IAAI,KAAK,GAAG,GAAG,EAAE,SAAS,CAAC,CAAC;gBACxD,WAAW,CAAC,cAAc,EAAE,CAAC;YAC9B,CAAC,CAAC;YAEF,eAAe,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,0BAA0B,EAAE,KAAK,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QAC9G,CAAC;KACD;IACD;QACC,KAAK,EAAE,OAAyB;QAChC,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,GAAG,EAAE;YACV,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC;gBACpC,OAAO;YACR,CAAC;YACD,IAAI,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,EAAE,CAAC;gBACzC,OAAO,WAAW,CAAC;YACpB,CAAC;YACD,IAAI,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC,EAAE,CAAC;gBAC9C,OAAO,aAAa,CAAC;YACtB,CAAC;QACF,CAAC;QACD,IAAI,EAAE,oDAAoD;QAC1D,SAAS,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC;KAC9C;CACQ,CAAC","sourcesContent":["import type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\n\nimport type { ComposerAPI } from '../../../../client/lib/chats/ChatAPI';\nimport { imperativeModal } from '../../../../client/lib/imperativeModal';\nimport { settings } from '../../../settings/client';\nimport AddLinkComposerActionModal from './AddLinkComposerActionModal';\n\ntype FormattingButtonDefault = { label: TranslationKey; condition?: () => boolean };\n\ntype TextButton = {\n\ttext: () => string | undefined;\n\tlink: string;\n} & FormattingButtonDefault;\n\ntype PatternButton = {\n\ticon: IconName;\n\tpattern: string;\n\t// text?: () => string | undefined;\n\tcommand?: string;\n\tlink?: string;\n} & FormattingButtonDefault;\n\ntype PromptButton = {\n\tprompt: (composer: ComposerAPI) => void;\n\ticon: IconName;\n} & FormattingButtonDefault;\n\nexport type FormattingButton = PatternButton | PromptButton | TextButton;\n\nexport const isPromptButton = (button: FormattingButton): button is PromptButton => 'prompt' in button;\n\nexport const formattingButtons: ReadonlyArray<FormattingButton> = [\n\t{\n\t\tlabel: 'Bold',\n\t\ticon: 'bold',\n\t\tpattern: '*{{text}}*',\n\t\tcommand: 'b',\n\t},\n\t{\n\t\tlabel: 'Italic',\n\t\ticon: 'italic',\n\t\tpattern: '_{{text}}_',\n\t\tcommand: 'i',\n\t},\n\t{\n\t\tlabel: 'Strike',\n\t\ticon: 'strike',\n\t\tpattern: '~{{text}}~',\n\t},\n\t{\n\t\tlabel: 'Inline_code',\n\t\ticon: 'code',\n\t\tpattern: '`{{text}}`',\n\t},\n\t{\n\t\tlabel: 'Multi_line',\n\t\ticon: 'multiline',\n\t\tpattern: '```\\n{{text}}\\n``` ',\n\t},\n\t{\n\t\tlabel: 'Link',\n\t\ticon: 'link',\n\t\tprompt: (composerApi: ComposerAPI) => {\n\t\t\tconst { selection } = composerApi;\n\n\t\t\tconst selectedText = composerApi.substring(selection.start, selection.end);\n\n\t\t\tconst onClose = () => {\n\t\t\t\timperativeModal.close();\n\t\t\t\tcomposerApi.focus();\n\t\t\t};\n\n\t\t\tconst onConfirm = (url: string, text: string) => {\n\t\t\t\tonClose();\n\t\t\t\tcomposerApi.replaceText(`[${text}](${url})`, selection);\n\t\t\t\tcomposerApi.setCursorToEnd();\n\t\t\t};\n\n\t\t\timperativeModal.open({ component: AddLinkComposerActionModal, props: { onConfirm, selectedText, onClose } });\n\t\t},\n\t},\n\t{\n\t\tlabel: 'KaTeX' as TranslationKey,\n\t\ticon: 'katex',\n\t\ttext: () => {\n\t\t\tif (!settings.get('Katex_Enabled')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (settings.get('Katex_Dollar_Syntax')) {\n\t\t\t\treturn '$$KaTeX$$';\n\t\t\t}\n\t\t\tif (settings.get('Katex_Parenthesis_Syntax')) {\n\t\t\t\treturn '\\\\[KaTeX\\\\]';\n\t\t\t}\n\t\t},\n\t\tlink: 'https://khan.github.io/KaTeX/function-support.html',\n\t\tcondition: () => settings.get('Katex_Enabled'),\n\t},\n] as const;\n"]}}},"code":"module.export({\n  isPromptButton: function () {\n    return isPromptButton;\n  },\n  formattingButtons: function () {\n    return formattingButtons;\n  }\n});\nvar imperativeModal;\nmodule.link(\"../../../../client/lib/imperativeModal\", {\n  imperativeModal: function (v) {\n    imperativeModal = v;\n  }\n}, 0);\nvar settings;\nmodule.link(\"../../../settings/client\", {\n  settings: function (v) {\n    settings = v;\n  }\n}, 1);\nvar AddLinkComposerActionModal;\nmodule.link(\"./AddLinkComposerActionModal\", {\n  \"default\": function (v) {\n    AddLinkComposerActionModal = v;\n  }\n}, 2);\nvar isPromptButton = function (button) {\n  return 'prompt' in button;\n};\nvar formattingButtons = [{\n  label: 'Bold',\n  icon: 'bold',\n  pattern: '*{{text}}*',\n  command: 'b'\n}, {\n  label: 'Italic',\n  icon: 'italic',\n  pattern: '_{{text}}_',\n  command: 'i'\n}, {\n  label: 'Strike',\n  icon: 'strike',\n  pattern: '~{{text}}~'\n}, {\n  label: 'Inline_code',\n  icon: 'code',\n  pattern: '`{{text}}`'\n}, {\n  label: 'Multi_line',\n  icon: 'multiline',\n  pattern: '```\\n{{text}}\\n``` '\n}, {\n  label: 'Link',\n  icon: 'link',\n  prompt: function (composerApi) {\n    var selection = composerApi.selection;\n    var selectedText = composerApi.substring(selection.start, selection.end);\n    var onClose = function () {\n      imperativeModal.close();\n      composerApi.focus();\n    };\n    var onConfirm = function (url, text) {\n      onClose();\n      composerApi.replaceText(\"[\" + text + \"](\" + url + \")\", selection);\n      composerApi.setCursorToEnd();\n    };\n    imperativeModal.open({\n      component: AddLinkComposerActionModal,\n      props: {\n        onConfirm: onConfirm,\n        selectedText: selectedText,\n        onClose: onClose\n      }\n    });\n  }\n}, {\n  label: 'KaTeX',\n  icon: 'katex',\n  text: function () {\n    if (!settings.get('Katex_Enabled')) {\n      return;\n    }\n    if (settings.get('Katex_Dollar_Syntax')) {\n      return '$$KaTeX$$';\n    }\n    if (settings.get('Katex_Parenthesis_Syntax')) {\n      return '\\\\[KaTeX\\\\]';\n    }\n  },\n  link: 'https://khan.github.io/KaTeX/function-support.html',\n  condition: function () {\n    return settings.get('Katex_Enabled');\n  }\n}];","map":{"version":3,"names":["module","export","isPromptButton","formattingButtons","imperativeModal","link","v","settings","AddLinkComposerActionModal","default","button","label","icon","pattern","command","prompt","composerApi","selection","selectedText","substring","start","end","onClose","close","focus","onConfirm","url","text","replaceText","setCursorToEnd","open","component","props","get","condition"],"sources":["app/ui-message/client/messageBox/messageBoxFormatting.ts"],"sourcesContent":["import type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\n\nimport type { ComposerAPI } from '../../../../client/lib/chats/ChatAPI';\nimport { imperativeModal } from '../../../../client/lib/imperativeModal';\nimport { settings } from '../../../settings/client';\nimport AddLinkComposerActionModal from './AddLinkComposerActionModal';\n\ntype FormattingButtonDefault = { label: TranslationKey; condition?: () => boolean };\n\ntype TextButton = {\n\ttext: () => string | undefined;\n\tlink: string;\n} & FormattingButtonDefault;\n\ntype PatternButton = {\n\ticon: IconName;\n\tpattern: string;\n\t// text?: () => string | undefined;\n\tcommand?: string;\n\tlink?: string;\n} & FormattingButtonDefault;\n\ntype PromptButton = {\n\tprompt: (composer: ComposerAPI) => void;\n\ticon: IconName;\n} & FormattingButtonDefault;\n\nexport type FormattingButton = PatternButton | PromptButton | TextButton;\n\nexport const isPromptButton = (button: FormattingButton): button is PromptButton => 'prompt' in button;\n\nexport const formattingButtons: ReadonlyArray<FormattingButton> = [\n\t{\n\t\tlabel: 'Bold',\n\t\ticon: 'bold',\n\t\tpattern: '*{{text}}*',\n\t\tcommand: 'b',\n\t},\n\t{\n\t\tlabel: 'Italic',\n\t\ticon: 'italic',\n\t\tpattern: '_{{text}}_',\n\t\tcommand: 'i',\n\t},\n\t{\n\t\tlabel: 'Strike',\n\t\ticon: 'strike',\n\t\tpattern: '~{{text}}~',\n\t},\n\t{\n\t\tlabel: 'Inline_code',\n\t\ticon: 'code',\n\t\tpattern: '`{{text}}`',\n\t},\n\t{\n\t\tlabel: 'Multi_line',\n\t\ticon: 'multiline',\n\t\tpattern: '```\\n{{text}}\\n``` ',\n\t},\n\t{\n\t\tlabel: 'Link',\n\t\ticon: 'link',\n\t\tprompt: (composerApi: ComposerAPI) => {\n\t\t\tconst { selection } = composerApi;\n\n\t\t\tconst selectedText = composerApi.substring(selection.start, selection.end);\n\n\t\t\tconst onClose = () => {\n\t\t\t\timperativeModal.close();\n\t\t\t\tcomposerApi.focus();\n\t\t\t};\n\n\t\t\tconst onConfirm = (url: string, text: string) => {\n\t\t\t\tonClose();\n\t\t\t\tcomposerApi.replaceText(`[${text}](${url})`, selection);\n\t\t\t\tcomposerApi.setCursorToEnd();\n\t\t\t};\n\n\t\t\timperativeModal.open({ component: AddLinkComposerActionModal, props: { onConfirm, selectedText, onClose } });\n\t\t},\n\t},\n\t{\n\t\tlabel: 'KaTeX' as TranslationKey,\n\t\ticon: 'katex',\n\t\ttext: () => {\n\t\t\tif (!settings.get('Katex_Enabled')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (settings.get('Katex_Dollar_Syntax')) {\n\t\t\t\treturn '$$KaTeX$$';\n\t\t\t}\n\t\t\tif (settings.get('Katex_Parenthesis_Syntax')) {\n\t\t\t\treturn '\\\\[KaTeX\\\\]';\n\t\t\t}\n\t\t},\n\t\tlink: 'https://khan.github.io/KaTeX/function-support.html',\n\t\tcondition: () => settings.get('Katex_Enabled'),\n\t},\n] as const;\n"],"mappings":"AAIAA,MAAA,CAAOC,MAAE;EAAAC,cAAiB,WAAAA,CAAA,EAAM;IAAA,OAAAA,cAAA;EAAA;EAAAC,iBAAyC,WAAAA,CAAA;IAAA,OAAAA,iBAAA;EAAA;AAAA;AAAA,IAAAC,eAAA;AAAAJ,MAAA,CAAAK,IAAA;EAAAD,eAAA,WAAAA,CAAAE,CAAA;IAAAF,eAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,QAAA;AAAAP,MAAA,CAAAK,IAAA;EAAAE,QAAA,WAAAA,CAAAD,CAAA;IAAAC,QAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,0BAAA;AAAAR,MAAA,CAAAK,IAAA;EAAA,oBAAAI,CAAAH,CAAA;IAAAE,0BAAA,GAAAF,CAAA;EAAA;AAAA;AA0BlE,IAAMJ,cAAc,GAAG,SAAAA,CAACQ,MAAwB;EAAA,OAA6B,QAAQ,IAAIA,MAAM;AAAA;AAE/F,IAAMP,iBAAiB,GAAoC,CACjE;EACCQ,KAAK,EAAE,MAAM;EACbC,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE,YAAY;EACrBC,OAAO,EAAE;CACT,EACD;EACCH,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE,YAAY;EACrBC,OAAO,EAAE;CACT,EACD;EACCH,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE;CACT,EACD;EACCF,KAAK,EAAE,aAAa;EACpBC,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE;CACT,EACD;EACCF,KAAK,EAAE,YAAY;EACnBC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE;CACT,EACD;EACCF,KAAK,EAAE,MAAM;EACbC,IAAI,EAAE,MAAM;EACZG,MAAM,EAAE,SAAAA,CAACC,WAAwB,EAAI;IACpC,IAAQC,SAAS,GAAKD,WAAW,CAAzBC,SAAS;IAEjB,IAAMC,YAAY,GAAGF,WAAW,CAACG,SAAS,CAACF,SAAS,CAACG,KAAK,EAAEH,SAAS,CAACI,GAAG,CAAC;IAE1E,IAAMC,OAAO,GAAG,SAAAA,CAAA,EAAK;MACpBlB,eAAe,CAACmB,KAAK,EAAE;MACvBP,WAAW,CAACQ,KAAK,EAAE;IACpB,CAAC;IAED,IAAMC,SAAS,GAAG,SAAAA,CAACC,GAAW,EAAEC,IAAY,EAAI;MAC/CL,OAAO,EAAE;MACTN,WAAW,CAACY,WAAW,OAAKD,IAAI,UAAKD,GAAG,QAAKT,SAAS,CAAC;MACvDD,WAAW,CAACa,cAAc,EAAE;IAC7B,CAAC;IAEDzB,eAAe,CAAC0B,IAAI,CAAC;MAAEC,SAAS,EAAEvB,0BAA0B;MAAEwB,KAAK,EAAE;QAAEP,SAAS,EAATA,SAAS;QAAEP,YAAY,EAAZA,YAAY;QAAEI,OAAO,EAAPA;MAAO;IAAE,CAAE,CAAC;EAC7G;CACA,EACD;EACCX,KAAK,EAAE,OAAyB;EAChCC,IAAI,EAAE,OAAO;EACbe,IAAI,EAAE,SAAAA,CAAA,EAAK;IACV,IAAI,CAACpB,QAAQ,CAAC0B,GAAG,CAAC,eAAe,CAAC,EAAE;MACnC;IACD;IACA,IAAI1B,QAAQ,CAAC0B,GAAG,CAAC,qBAAqB,CAAC,EAAE;MACxC,OAAO,WAAW;IACnB;IACA,IAAI1B,QAAQ,CAAC0B,GAAG,CAAC,0BAA0B,CAAC,EAAE;MAC7C,OAAO,aAAa;IACrB;EACD,CAAC;EACD5B,IAAI,EAAE,oDAAoD;EAC1D6B,SAAS,EAAE,SAAAA,CAAA;IAAA,OAAM3B,QAAQ,CAAC0B,GAAG,CAAC,eAAe,CAAC;EAAA;CAC9C,CACQ","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"604c0313b1eb730ee750d6a3ff0f01be530557c7"}
