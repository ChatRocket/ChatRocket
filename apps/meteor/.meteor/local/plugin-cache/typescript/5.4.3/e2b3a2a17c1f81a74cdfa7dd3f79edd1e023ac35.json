{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/banner/service.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/banner/service.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/banner/service.ts","inputSourceMap":{"version":3,"file":"server/services/banner/service.ts","sourceRoot":"","sources":["server/services/banner/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { api, ServiceClassInternal } from '@rocket.chat/core-services';\nimport type { IBannerService } from '@rocket.chat/core-services';\nimport type { BannerPlatform, IBanner, IBannerDismiss, Optional, IUser } from '@rocket.chat/core-typings';\nimport { Banners, BannersDismiss, Users } from '@rocket.chat/models';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class BannerService extends ServiceClassInternal implements IBannerService {\n\tprotected name = 'banner';\n\n\tasync getById(bannerId: string): Promise<null | IBanner> {\n\t\treturn Banners.findOneById(bannerId);\n\t}\n\n\tasync discardDismissal(bannerId: string): Promise<boolean> {\n\t\tconst result = await Banners.findOneById(bannerId);\n\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { _id, ...banner } = result;\n\n\t\tconst snapshot = await this.create({ ...banner, snapshot: _id, active: false }); // create a snapshot\n\n\t\tawait BannersDismiss.updateMany({ bannerId }, { $set: { bannerId: snapshot._id } });\n\t\treturn true;\n\t}\n\n\tasync create(doc: Optional<IBanner, '_id' | '_updatedAt'>): Promise<IBanner> {\n\t\tconst bannerId = doc._id || uuidv4();\n\n\t\tdoc.view.appId = doc.view.appId ?? 'banner-core';\n\t\tdoc.view.viewId = bannerId;\n\n\t\tawait Banners.createOrUpdate({\n\t\t\t...doc,\n\t\t\t_id: bannerId,\n\t\t});\n\n\t\tconst banner = await Banners.findOneById(bannerId);\n\t\tif (!banner) {\n\t\t\tthrow new Error('error-creating-banner');\n\t\t}\n\n\t\tvoid this.sendToUsers(banner);\n\n\t\treturn banner;\n\t}\n\n\tasync getBannersForUser(userId: string, platform: BannerPlatform, bannerId?: string): Promise<IBanner[]> {\n\t\tconst user = await Users.findOneById<Pick<IUser, 'roles'>>(userId, {\n\t\t\tprojection: { roles: 1 },\n\t\t});\n\n\t\tconst { roles } = user || { roles: [] };\n\n\t\tconst banners = await Banners.findActiveByRoleOrId(roles, platform, bannerId).toArray();\n\n\t\tconst bannerIds = banners.map(({ _id }) => _id);\n\n\t\tconst result = await BannersDismiss.findByUserIdAndBannerId<Pick<IBannerDismiss, 'bannerId'>>(userId, bannerIds, {\n\t\t\tprojection: { bannerId: 1, _id: 0 },\n\t\t}).toArray();\n\n\t\tconst dismissed = new Set(result.map(({ bannerId }) => bannerId));\n\n\t\treturn banners\n\t\t\t.filter((banner) => !dismissed.has(banner._id))\n\t\t\t.map((banner) => ({\n\t\t\t\t...banner,\n\t\t\t\tview: {\n\t\t\t\t\t...banner.view,\n\t\t\t\t\t// All modern banners should have a viewId, but we have old banners that were created without it\n\t\t\t\t\t// such as the seatsTaken banner. In this case, we use the bannerId as the viewId\n\t\t\t\t\tviewId: banner.view.viewId || banner._id,\n\t\t\t\t},\n\t\t\t\t// add surface to legacy banners\n\t\t\t\tsurface: !banner.surface ? 'banner' : banner.surface,\n\t\t\t}));\n\t}\n\n\tasync dismiss(userId: string, bannerId: string): Promise<boolean> {\n\t\tif (!userId || !bannerId) {\n\t\t\tthrow new Error('Invalid params');\n\t\t}\n\n\t\tconst banner = await Banners.findOneById(bannerId);\n\t\tif (!banner) {\n\t\t\tthrow new Error('Banner not found');\n\t\t}\n\n\t\tconst user = await Users.findOneById<Pick<IUser, 'username' | '_id'>>(userId, {\n\t\t\tprojection: { username: 1 },\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new Error('User not found');\n\t\t}\n\n\t\tconst dismissedBy = {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t};\n\n\t\tconst today = new Date();\n\n\t\tconst doc = {\n\t\t\tuserId,\n\t\t\tbannerId,\n\t\t\tdismissedBy,\n\t\t\tdismissedAt: today,\n\t\t\t_updatedAt: today,\n\t\t};\n\n\t\tawait BannersDismiss.insertOne(doc);\n\n\t\treturn true;\n\t}\n\n\tasync disable(bannerId: string): Promise<boolean> {\n\t\tconst result = await Banners.disable(bannerId);\n\n\t\tif (result) {\n\t\t\tvoid api.broadcast('banner.disabled', bannerId);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync enable(bannerId: string, doc: Partial<Omit<IBanner, '_id'>> = {}): Promise<boolean> {\n\t\tconst result = await Banners.findOneById(bannerId);\n\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { _id, ...banner } = result;\n\n\t\tconst newBanner = { ...banner, ...doc, active: true };\n\n\t\tawait Banners.updateOne({ _id }, { $set: newBanner }); // reenable the banner\n\n\t\tvoid this.sendToUsers({ _id, ...newBanner });\n\n\t\treturn true;\n\t}\n\n\tasync sendToUsers(banner: IBanner): Promise<boolean> {\n\t\tif (!banner.active) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// no roles set, so it should be sent to all users\n\t\tif (!banner.roles?.length) {\n\t\t\tvoid api.broadcast('banner.enabled', banner._id);\n\t\t\treturn true;\n\t\t}\n\n\t\tconst total = await Users.countActiveUsersInRoles(banner.roles);\n\n\t\t// if more than 100 users should receive the banner, send it to all users\n\t\tif (total > 100) {\n\t\t\tvoid api.broadcast('banner.enabled', banner._id);\n\t\t\treturn true;\n\t\t}\n\n\t\tawait Users.findActiveUsersInRoles(banner.roles, { projection: { _id: 1 } }).forEach((user) => {\n\t\t\tvoid api.broadcast('banner.user', user._id, banner);\n\t\t});\n\n\t\treturn true;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/banner/service.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/banner/service.ts","inputSourceMap":{"version":3,"file":"server/services/banner/service.ts","sourceRoot":"","sources":["server/services/banner/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { api, ServiceClassInternal } from '@rocket.chat/core-services';\nimport type { IBannerService } from '@rocket.chat/core-services';\nimport type { BannerPlatform, IBanner, IBannerDismiss, Optional, IUser } from '@rocket.chat/core-typings';\nimport { Banners, BannersDismiss, Users } from '@rocket.chat/models';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class BannerService extends ServiceClassInternal implements IBannerService {\n\tprotected name = 'banner';\n\n\tasync getById(bannerId: string): Promise<null | IBanner> {\n\t\treturn Banners.findOneById(bannerId);\n\t}\n\n\tasync discardDismissal(bannerId: string): Promise<boolean> {\n\t\tconst result = await Banners.findOneById(bannerId);\n\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { _id, ...banner } = result;\n\n\t\tconst snapshot = await this.create({ ...banner, snapshot: _id, active: false }); // create a snapshot\n\n\t\tawait BannersDismiss.updateMany({ bannerId }, { $set: { bannerId: snapshot._id } });\n\t\treturn true;\n\t}\n\n\tasync create(doc: Optional<IBanner, '_id' | '_updatedAt'>): Promise<IBanner> {\n\t\tconst bannerId = doc._id || uuidv4();\n\n\t\tdoc.view.appId = doc.view.appId ?? 'banner-core';\n\t\tdoc.view.viewId = bannerId;\n\n\t\tawait Banners.createOrUpdate({\n\t\t\t...doc,\n\t\t\t_id: bannerId,\n\t\t});\n\n\t\tconst banner = await Banners.findOneById(bannerId);\n\t\tif (!banner) {\n\t\t\tthrow new Error('error-creating-banner');\n\t\t}\n\n\t\tvoid this.sendToUsers(banner);\n\n\t\treturn banner;\n\t}\n\n\tasync getBannersForUser(userId: string, platform: BannerPlatform, bannerId?: string): Promise<IBanner[]> {\n\t\tconst user = await Users.findOneById<Pick<IUser, 'roles'>>(userId, {\n\t\t\tprojection: { roles: 1 },\n\t\t});\n\n\t\tconst { roles } = user || { roles: [] };\n\n\t\tconst banners = await Banners.findActiveByRoleOrId(roles, platform, bannerId).toArray();\n\n\t\tconst bannerIds = banners.map(({ _id }) => _id);\n\n\t\tconst result = await BannersDismiss.findByUserIdAndBannerId<Pick<IBannerDismiss, 'bannerId'>>(userId, bannerIds, {\n\t\t\tprojection: { bannerId: 1, _id: 0 },\n\t\t}).toArray();\n\n\t\tconst dismissed = new Set(result.map(({ bannerId }) => bannerId));\n\n\t\treturn banners\n\t\t\t.filter((banner) => !dismissed.has(banner._id))\n\t\t\t.map((banner) => ({\n\t\t\t\t...banner,\n\t\t\t\tview: {\n\t\t\t\t\t...banner.view,\n\t\t\t\t\t// All modern banners should have a viewId, but we have old banners that were created without it\n\t\t\t\t\t// such as the seatsTaken banner. In this case, we use the bannerId as the viewId\n\t\t\t\t\tviewId: banner.view.viewId || banner._id,\n\t\t\t\t},\n\t\t\t\t// add surface to legacy banners\n\t\t\t\tsurface: !banner.surface ? 'banner' : banner.surface,\n\t\t\t}));\n\t}\n\n\tasync dismiss(userId: string, bannerId: string): Promise<boolean> {\n\t\tif (!userId || !bannerId) {\n\t\t\tthrow new Error('Invalid params');\n\t\t}\n\n\t\tconst banner = await Banners.findOneById(bannerId);\n\t\tif (!banner) {\n\t\t\tthrow new Error('Banner not found');\n\t\t}\n\n\t\tconst user = await Users.findOneById<Pick<IUser, 'username' | '_id'>>(userId, {\n\t\t\tprojection: { username: 1 },\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new Error('User not found');\n\t\t}\n\n\t\tconst dismissedBy = {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t};\n\n\t\tconst today = new Date();\n\n\t\tconst doc = {\n\t\t\tuserId,\n\t\t\tbannerId,\n\t\t\tdismissedBy,\n\t\t\tdismissedAt: today,\n\t\t\t_updatedAt: today,\n\t\t};\n\n\t\tawait BannersDismiss.insertOne(doc);\n\n\t\treturn true;\n\t}\n\n\tasync disable(bannerId: string): Promise<boolean> {\n\t\tconst result = await Banners.disable(bannerId);\n\n\t\tif (result) {\n\t\t\tvoid api.broadcast('banner.disabled', bannerId);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync enable(bannerId: string, doc: Partial<Omit<IBanner, '_id'>> = {}): Promise<boolean> {\n\t\tconst result = await Banners.findOneById(bannerId);\n\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { _id, ...banner } = result;\n\n\t\tconst newBanner = { ...banner, ...doc, active: true };\n\n\t\tawait Banners.updateOne({ _id }, { $set: newBanner }); // reenable the banner\n\n\t\tvoid this.sendToUsers({ _id, ...newBanner });\n\n\t\treturn true;\n\t}\n\n\tasync sendToUsers(banner: IBanner): Promise<boolean> {\n\t\tif (!banner.active) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// no roles set, so it should be sent to all users\n\t\tif (!banner.roles?.length) {\n\t\t\tvoid api.broadcast('banner.enabled', banner._id);\n\t\t\treturn true;\n\t\t}\n\n\t\tconst total = await Users.countActiveUsersInRoles(banner.roles);\n\n\t\t// if more than 100 users should receive the banner, send it to all users\n\t\tif (total > 100) {\n\t\t\tvoid api.broadcast('banner.enabled', banner._id);\n\t\t\treturn true;\n\t\t}\n\n\t\tawait Users.findActiveUsersInRoles(banner.roles, { projection: { _id: 1 } }).forEach((user) => {\n\t\t\tvoid api.broadcast('banner.user', user._id, banner);\n\t\t});\n\n\t\treturn true;\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _objectWithoutProperties;\n    module.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n      default(v) {\n        _objectWithoutProperties = v;\n      }\n    }, 1);\n    const _excluded = [\"_id\"],\n      _excluded2 = [\"_id\"];\n    module.export({\n      BannerService: () => BannerService\n    });\n    let api, ServiceClassInternal;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      },\n      ServiceClassInternal(v) {\n        ServiceClassInternal = v;\n      }\n    }, 0);\n    let Banners, BannersDismiss, Users;\n    module.link(\"@rocket.chat/models\", {\n      Banners(v) {\n        Banners = v;\n      },\n      BannersDismiss(v) {\n        BannersDismiss = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let uuidv4;\n    module.link(\"uuid\", {\n      v4(v) {\n        uuidv4 = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class BannerService extends ServiceClassInternal {\n      constructor() {\n        super(...arguments);\n        this.name = 'banner';\n      }\n      async getById(bannerId) {\n        return Banners.findOneById(bannerId);\n      }\n      async discardDismissal(bannerId) {\n        const result = await Banners.findOneById(bannerId);\n        if (!result) {\n          return false;\n        }\n        const {\n            _id\n          } = result,\n          banner = _objectWithoutProperties(result, _excluded);\n        const snapshot = await this.create(_objectSpread(_objectSpread({}, banner), {}, {\n          snapshot: _id,\n          active: false\n        })); // create a snapshot\n        await BannersDismiss.updateMany({\n          bannerId\n        }, {\n          $set: {\n            bannerId: snapshot._id\n          }\n        });\n        return true;\n      }\n      async create(doc) {\n        var _doc$view$appId;\n        const bannerId = doc._id || uuidv4();\n        doc.view.appId = (_doc$view$appId = doc.view.appId) !== null && _doc$view$appId !== void 0 ? _doc$view$appId : 'banner-core';\n        doc.view.viewId = bannerId;\n        await Banners.createOrUpdate(_objectSpread(_objectSpread({}, doc), {}, {\n          _id: bannerId\n        }));\n        const banner = await Banners.findOneById(bannerId);\n        if (!banner) {\n          throw new Error('error-creating-banner');\n        }\n        void this.sendToUsers(banner);\n        return banner;\n      }\n      async getBannersForUser(userId, platform, bannerId) {\n        const user = await Users.findOneById(userId, {\n          projection: {\n            roles: 1\n          }\n        });\n        const {\n          roles\n        } = user || {\n          roles: []\n        };\n        const banners = await Banners.findActiveByRoleOrId(roles, platform, bannerId).toArray();\n        const bannerIds = banners.map(_ref => {\n          let {\n            _id\n          } = _ref;\n          return _id;\n        });\n        const result = await BannersDismiss.findByUserIdAndBannerId(userId, bannerIds, {\n          projection: {\n            bannerId: 1,\n            _id: 0\n          }\n        }).toArray();\n        const dismissed = new Set(result.map(_ref2 => {\n          let {\n            bannerId\n          } = _ref2;\n          return bannerId;\n        }));\n        return banners.filter(banner => !dismissed.has(banner._id)).map(banner => _objectSpread(_objectSpread({}, banner), {}, {\n          view: _objectSpread(_objectSpread({}, banner.view), {}, {\n            // All modern banners should have a viewId, but we have old banners that were created without it\n            // such as the seatsTaken banner. In this case, we use the bannerId as the viewId\n            viewId: banner.view.viewId || banner._id\n          }),\n          // add surface to legacy banners\n          surface: !banner.surface ? 'banner' : banner.surface\n        }));\n      }\n      async dismiss(userId, bannerId) {\n        if (!userId || !bannerId) {\n          throw new Error('Invalid params');\n        }\n        const banner = await Banners.findOneById(bannerId);\n        if (!banner) {\n          throw new Error('Banner not found');\n        }\n        const user = await Users.findOneById(userId, {\n          projection: {\n            username: 1\n          }\n        });\n        if (!user) {\n          throw new Error('User not found');\n        }\n        const dismissedBy = {\n          _id: user._id,\n          username: user.username\n        };\n        const today = new Date();\n        const doc = {\n          userId,\n          bannerId,\n          dismissedBy,\n          dismissedAt: today,\n          _updatedAt: today\n        };\n        await BannersDismiss.insertOne(doc);\n        return true;\n      }\n      async disable(bannerId) {\n        const result = await Banners.disable(bannerId);\n        if (result) {\n          void api.broadcast('banner.disabled', bannerId);\n          return true;\n        }\n        return false;\n      }\n      async enable(bannerId) {\n        let doc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const result = await Banners.findOneById(bannerId);\n        if (!result) {\n          return false;\n        }\n        const {\n            _id\n          } = result,\n          banner = _objectWithoutProperties(result, _excluded2);\n        const newBanner = _objectSpread(_objectSpread(_objectSpread({}, banner), doc), {}, {\n          active: true\n        });\n        await Banners.updateOne({\n          _id\n        }, {\n          $set: newBanner\n        }); // reenable the banner\n        void this.sendToUsers(_objectSpread({\n          _id\n        }, newBanner));\n        return true;\n      }\n      async sendToUsers(banner) {\n        var _banner$roles;\n        if (!banner.active) {\n          return false;\n        }\n        // no roles set, so it should be sent to all users\n        if (!((_banner$roles = banner.roles) !== null && _banner$roles !== void 0 && _banner$roles.length)) {\n          void api.broadcast('banner.enabled', banner._id);\n          return true;\n        }\n        const total = await Users.countActiveUsersInRoles(banner.roles);\n        // if more than 100 users should receive the banner, send it to all users\n        if (total > 100) {\n          void api.broadcast('banner.enabled', banner._id);\n          return true;\n        }\n        await Users.findActiveUsersInRoles(banner.roles, {\n          projection: {\n            _id: 1\n          }\n        }).forEach(user => {\n          void api.broadcast('banner.user', user._id, banner);\n        });\n        return true;\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","_excluded","_excluded2","export","BannerService","api","ServiceClassInternal","Banners","BannersDismiss","Users","uuidv4","v4","__reifyWaitForDeps__","constructor","arguments","name","getById","bannerId","findOneById","discardDismissal","result","_id","banner","snapshot","create","active","updateMany","$set","doc","_doc$view$appId","view","appId","viewId","createOrUpdate","Error","sendToUsers","getBannersForUser","userId","platform","user","projection","roles","banners","findActiveByRoleOrId","toArray","bannerIds","map","_ref","findByUserIdAndBannerId","dismissed","Set","_ref2","filter","has","surface","dismiss","username","dismissedBy","today","Date","dismissedAt","_updatedAt","insertOne","disable","broadcast","enable","length","undefined","newBanner","updateOne","_banner$roles","total","countActiveUsersInRoles","findActiveUsersInRoles","forEach","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/banner/service.ts"],"sourcesContent":["import { api, ServiceClassInternal } from '@rocket.chat/core-services';\nimport type { IBannerService } from '@rocket.chat/core-services';\nimport type { BannerPlatform, IBanner, IBannerDismiss, Optional, IUser } from '@rocket.chat/core-typings';\nimport { Banners, BannersDismiss, Users } from '@rocket.chat/models';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class BannerService extends ServiceClassInternal implements IBannerService {\n\tprotected name = 'banner';\n\n\tasync getById(bannerId: string): Promise<null | IBanner> {\n\t\treturn Banners.findOneById(bannerId);\n\t}\n\n\tasync discardDismissal(bannerId: string): Promise<boolean> {\n\t\tconst result = await Banners.findOneById(bannerId);\n\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { _id, ...banner } = result;\n\n\t\tconst snapshot = await this.create({ ...banner, snapshot: _id, active: false }); // create a snapshot\n\n\t\tawait BannersDismiss.updateMany({ bannerId }, { $set: { bannerId: snapshot._id } });\n\t\treturn true;\n\t}\n\n\tasync create(doc: Optional<IBanner, '_id' | '_updatedAt'>): Promise<IBanner> {\n\t\tconst bannerId = doc._id || uuidv4();\n\n\t\tdoc.view.appId = doc.view.appId ?? 'banner-core';\n\t\tdoc.view.viewId = bannerId;\n\n\t\tawait Banners.createOrUpdate({\n\t\t\t...doc,\n\t\t\t_id: bannerId,\n\t\t});\n\n\t\tconst banner = await Banners.findOneById(bannerId);\n\t\tif (!banner) {\n\t\t\tthrow new Error('error-creating-banner');\n\t\t}\n\n\t\tvoid this.sendToUsers(banner);\n\n\t\treturn banner;\n\t}\n\n\tasync getBannersForUser(userId: string, platform: BannerPlatform, bannerId?: string): Promise<IBanner[]> {\n\t\tconst user = await Users.findOneById<Pick<IUser, 'roles'>>(userId, {\n\t\t\tprojection: { roles: 1 },\n\t\t});\n\n\t\tconst { roles } = user || { roles: [] };\n\n\t\tconst banners = await Banners.findActiveByRoleOrId(roles, platform, bannerId).toArray();\n\n\t\tconst bannerIds = banners.map(({ _id }) => _id);\n\n\t\tconst result = await BannersDismiss.findByUserIdAndBannerId<Pick<IBannerDismiss, 'bannerId'>>(userId, bannerIds, {\n\t\t\tprojection: { bannerId: 1, _id: 0 },\n\t\t}).toArray();\n\n\t\tconst dismissed = new Set(result.map(({ bannerId }) => bannerId));\n\n\t\treturn banners\n\t\t\t.filter((banner) => !dismissed.has(banner._id))\n\t\t\t.map((banner) => ({\n\t\t\t\t...banner,\n\t\t\t\tview: {\n\t\t\t\t\t...banner.view,\n\t\t\t\t\t// All modern banners should have a viewId, but we have old banners that were created without it\n\t\t\t\t\t// such as the seatsTaken banner. In this case, we use the bannerId as the viewId\n\t\t\t\t\tviewId: banner.view.viewId || banner._id,\n\t\t\t\t},\n\t\t\t\t// add surface to legacy banners\n\t\t\t\tsurface: !banner.surface ? 'banner' : banner.surface,\n\t\t\t}));\n\t}\n\n\tasync dismiss(userId: string, bannerId: string): Promise<boolean> {\n\t\tif (!userId || !bannerId) {\n\t\t\tthrow new Error('Invalid params');\n\t\t}\n\n\t\tconst banner = await Banners.findOneById(bannerId);\n\t\tif (!banner) {\n\t\t\tthrow new Error('Banner not found');\n\t\t}\n\n\t\tconst user = await Users.findOneById<Pick<IUser, 'username' | '_id'>>(userId, {\n\t\t\tprojection: { username: 1 },\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new Error('User not found');\n\t\t}\n\n\t\tconst dismissedBy = {\n\t\t\t_id: user._id,\n\t\t\tusername: user.username,\n\t\t};\n\n\t\tconst today = new Date();\n\n\t\tconst doc = {\n\t\t\tuserId,\n\t\t\tbannerId,\n\t\t\tdismissedBy,\n\t\t\tdismissedAt: today,\n\t\t\t_updatedAt: today,\n\t\t};\n\n\t\tawait BannersDismiss.insertOne(doc);\n\n\t\treturn true;\n\t}\n\n\tasync disable(bannerId: string): Promise<boolean> {\n\t\tconst result = await Banners.disable(bannerId);\n\n\t\tif (result) {\n\t\t\tvoid api.broadcast('banner.disabled', bannerId);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync enable(bannerId: string, doc: Partial<Omit<IBanner, '_id'>> = {}): Promise<boolean> {\n\t\tconst result = await Banners.findOneById(bannerId);\n\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { _id, ...banner } = result;\n\n\t\tconst newBanner = { ...banner, ...doc, active: true };\n\n\t\tawait Banners.updateOne({ _id }, { $set: newBanner }); // reenable the banner\n\n\t\tvoid this.sendToUsers({ _id, ...newBanner });\n\n\t\treturn true;\n\t}\n\n\tasync sendToUsers(banner: IBanner): Promise<boolean> {\n\t\tif (!banner.active) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// no roles set, so it should be sent to all users\n\t\tif (!banner.roles?.length) {\n\t\t\tvoid api.broadcast('banner.enabled', banner._id);\n\t\t\treturn true;\n\t\t}\n\n\t\tconst total = await Users.countActiveUsersInRoles(banner.roles);\n\n\t\t// if more than 100 users should receive the banner, send it to all users\n\t\tif (total > 100) {\n\t\t\tvoid api.broadcast('banner.enabled', banner._id);\n\t\t\treturn true;\n\t\t}\n\n\t\tawait Users.findActiveUsersInRoles(banner.roles, { projection: { _id: 1 } }).forEach((user) => {\n\t\t\tvoid api.broadcast('banner.user', user._id, banner);\n\t\t});\n\n\t\treturn true;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e2b3a2a17c1f81a74cdfa7dd3f79edd1e023ac35"}
