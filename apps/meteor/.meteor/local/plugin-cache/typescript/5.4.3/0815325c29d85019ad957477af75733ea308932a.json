{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/inquiries.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/imports/server/rest/inquiries.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/inquiries.ts","inputSourceMap":{"version":3,"file":"app/livechat/imports/server/rest/inquiries.ts","sourceRoot":"","sources":["app/livechat/imports/server/rest/inquiries.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AAClE,OAAO,EAAE,eAAe,EAAE,kBAAkB,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACjF,OAAO,EACN,gCAAgC,EAChC,iCAAiC,EACjC,yCAAyC,EACzC,kCAAkC,GAClC,MAAM,2BAA2B,CAAC;AAEnC,OAAO,EAAE,GAAG,EAAE,MAAM,wBAAwB,CAAC;AAC7C,OAAO,EAAE,kBAAkB,EAAE,MAAM,mDAAmD,CAAC;AACvF,OAAO,EAAE,aAAa,EAAE,sBAAsB,EAAE,MAAM,mCAAmC,CAAC;AAC1F,OAAO,EAAE,WAAW,EAAE,MAAM,qCAAqC,CAAC;AAElE,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,yBAAyB,EACzB,EAAE,YAAY,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,uBAAuB,CAAC,EAAE,cAAc,EAAE,gCAAgC,EAAE,EACxH;IACC,KAAK,CAAC,GAAG;QACR,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC7C,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QACxC,MAAM,QAAQ,GAA4C,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;QAC/E,IAAI,UAAU,EAAE,CAAC;YAChB,MAAM,gBAAgB,GAAG,MAAM,kBAAkB,CAAC,iBAAiB,CAAC,UAAU,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAC5G,IAAI,gBAAgB,EAAE,CAAC;gBACtB,QAAQ,CAAC,UAAU,GAAG,gBAAgB,CAAC,GAAG,CAAC;YAC5C,CAAC;QACF,CAAC;QACD,oCAAoC;QACpC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,eAAe,CAAC,aAAa,CAAC,QAAQ,EAAE;YACtE,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE;YACxB,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,KAAK;YACZ,UAAU,EAAE;gBACX,GAAG,EAAE,CAAC;gBACN,IAAI,EAAE,CAAC;gBACP,EAAE,EAAE,CAAC;gBACL,MAAM,EAAE,CAAC;gBACT,UAAU,EAAE,CAAC;aACb;SACD,CAAC,CAAC;QAEH,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;QAE7E,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,SAAS;YACT,MAAM;YACN,KAAK,EAAE,SAAS,CAAC,MAAM;YACvB,KAAK;SACL,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,yBAAyB,EACzB,EAAE,YAAY,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,aAAa,CAAC,EAAE,cAAc,EAAE,iCAAiC,EAAE,EAC/G;IACC,KAAK,CAAC,IAAI;QACT,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;YAC9G,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;QAC9C,CAAC;QACD,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,OAAO,EAAE,MAAM,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;SAC5F,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,kCAAkC,EAClC,EAAE,YAAY,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,aAAa,CAAC,EAAE,cAAc,EAAE,yCAAyC,EAAE,EACvH;IACC,KAAK,CAAC,GAAG;QACR,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC7C,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAExC,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CACpB,MAAM,aAAa,CAAC;YACnB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,UAAU;YACV,MAAM,EAAE,qBAAqB,CAAC,MAAM;YACpC,UAAU,EAAE;gBACX,MAAM;gBACN,KAAK;gBACL,IAAI;aACJ;SACD,CAAC,CACF,CAAC;IACH,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,2BAA2B,EAC3B,EAAE,YAAY,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,aAAa,CAAC,EAAE,cAAc,EAAE,kCAAkC,EAAE,EAChH;IACC,KAAK,CAAC,GAAG;QACR,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAEpC,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CACpB,MAAM,sBAAsB,CAAC;YAC5B,MAAM;SACN,CAAC,CACF,CAAC;IACH,CAAC;CACD,CACD,CAAC","sourcesContent":["import { LivechatInquiryStatus } from '@rocket.chat/core-typings';\nimport { LivechatInquiry, LivechatDepartment, Users } from '@rocket.chat/models';\nimport {\n\tisGETLivechatInquiriesListParams,\n\tisPOSTLivechatInquiriesTakeParams,\n\tisGETLivechatInquiriesQueuedForUserParams,\n\tisGETLivechatInquiriesGetOneParams,\n} from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../api/server';\nimport { getPaginationItems } from '../../../../api/server/helpers/getPaginationItems';\nimport { findInquiries, findOneInquiryByRoomId } from '../../../server/api/lib/inquiries';\nimport { takeInquiry } from '../../../server/methods/takeInquiry';\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.list',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'], validateParams: isGETLivechatInquiriesListParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { department } = this.queryParams;\n\t\t\tconst ourQuery: { status: string; department?: string } = { status: 'queued' };\n\t\t\tif (department) {\n\t\t\t\tconst departmentFromDB = await LivechatDepartment.findOneByIdOrName(department, { projection: { _id: 1 } });\n\t\t\t\tif (departmentFromDB) {\n\t\t\t\t\tourQuery.department = departmentFromDB._id;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// @ts-expect-error - attachments...\n\t\t\tconst { cursor, totalCount } = LivechatInquiry.findPaginated(ourQuery, {\n\t\t\t\tsort: sort || { ts: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tprojection: {\n\t\t\t\t\trid: 1,\n\t\t\t\t\tname: 1,\n\t\t\t\t\tts: 1,\n\t\t\t\t\tstatus: 1,\n\t\t\t\t\tdepartment: 1,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst [inquiries, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tinquiries,\n\t\t\t\toffset,\n\t\t\t\tcount: inquiries.length,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.take',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isPOSTLivechatInquiriesTakeParams },\n\t{\n\t\tasync post() {\n\t\t\tif (this.bodyParams.userId && !(await Users.findOneById(this.bodyParams.userId, { projection: { _id: 1 } }))) {\n\t\t\t\treturn API.v1.failure('The user is invalid');\n\t\t\t}\n\t\t\treturn API.v1.success({\n\t\t\t\tinquiry: await takeInquiry(this.bodyParams.userId || this.userId, this.bodyParams.inquiryId),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.queuedForUser',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatInquiriesQueuedForUserParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { department } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findInquiries({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\tdepartment,\n\t\t\t\t\tstatus: LivechatInquiryStatus.QUEUED,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.getOne',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatInquiriesGetOneParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { roomId } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findOneInquiryByRoomId({\n\t\t\t\t\troomId,\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/imports/server/rest/inquiries.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/imports/server/rest/inquiries.ts","inputSourceMap":{"version":3,"file":"app/livechat/imports/server/rest/inquiries.ts","sourceRoot":"","sources":["app/livechat/imports/server/rest/inquiries.ts"],"names":[],"mappings":"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","sourcesContent":["import { LivechatInquiryStatus } from '@rocket.chat/core-typings';\nimport { LivechatInquiry, LivechatDepartment, Users } from '@rocket.chat/models';\nimport {\n\tisGETLivechatInquiriesListParams,\n\tisPOSTLivechatInquiriesTakeParams,\n\tisGETLivechatInquiriesQueuedForUserParams,\n\tisGETLivechatInquiriesGetOneParams,\n} from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../api/server';\nimport { getPaginationItems } from '../../../../api/server/helpers/getPaginationItems';\nimport { findInquiries, findOneInquiryByRoomId } from '../../../server/api/lib/inquiries';\nimport { takeInquiry } from '../../../server/methods/takeInquiry';\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.list',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'], validateParams: isGETLivechatInquiriesListParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { department } = this.queryParams;\n\t\t\tconst ourQuery: { status: string; department?: string } = { status: 'queued' };\n\t\t\tif (department) {\n\t\t\t\tconst departmentFromDB = await LivechatDepartment.findOneByIdOrName(department, { projection: { _id: 1 } });\n\t\t\t\tif (departmentFromDB) {\n\t\t\t\t\tourQuery.department = departmentFromDB._id;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// @ts-expect-error - attachments...\n\t\t\tconst { cursor, totalCount } = LivechatInquiry.findPaginated(ourQuery, {\n\t\t\t\tsort: sort || { ts: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tprojection: {\n\t\t\t\t\trid: 1,\n\t\t\t\t\tname: 1,\n\t\t\t\t\tts: 1,\n\t\t\t\t\tstatus: 1,\n\t\t\t\t\tdepartment: 1,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst [inquiries, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tinquiries,\n\t\t\t\toffset,\n\t\t\t\tcount: inquiries.length,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.take',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isPOSTLivechatInquiriesTakeParams },\n\t{\n\t\tasync post() {\n\t\t\tif (this.bodyParams.userId && !(await Users.findOneById(this.bodyParams.userId, { projection: { _id: 1 } }))) {\n\t\t\t\treturn API.v1.failure('The user is invalid');\n\t\t\t}\n\t\t\treturn API.v1.success({\n\t\t\t\tinquiry: await takeInquiry(this.bodyParams.userId || this.userId, this.bodyParams.inquiryId),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.queuedForUser',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatInquiriesQueuedForUserParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { department } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findInquiries({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\tdepartment,\n\t\t\t\t\tstatus: LivechatInquiryStatus.QUEUED,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.getOne',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatInquiriesGetOneParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { roomId } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findOneInquiryByRoomId({\n\t\t\t\t\troomId,\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let LivechatInquiryStatus;\n    module.link(\"@rocket.chat/core-typings\", {\n      LivechatInquiryStatus(v) {\n        LivechatInquiryStatus = v;\n      }\n    }, 0);\n    let LivechatInquiry, LivechatDepartment, Users;\n    module.link(\"@rocket.chat/models\", {\n      LivechatInquiry(v) {\n        LivechatInquiry = v;\n      },\n      LivechatDepartment(v) {\n        LivechatDepartment = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let isGETLivechatInquiriesListParams, isPOSTLivechatInquiriesTakeParams, isGETLivechatInquiriesQueuedForUserParams, isGETLivechatInquiriesGetOneParams;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isGETLivechatInquiriesListParams(v) {\n        isGETLivechatInquiriesListParams = v;\n      },\n      isPOSTLivechatInquiriesTakeParams(v) {\n        isPOSTLivechatInquiriesTakeParams = v;\n      },\n      isGETLivechatInquiriesQueuedForUserParams(v) {\n        isGETLivechatInquiriesQueuedForUserParams = v;\n      },\n      isGETLivechatInquiriesGetOneParams(v) {\n        isGETLivechatInquiriesGetOneParams = v;\n      }\n    }, 2);\n    let API;\n    module.link(\"../../../../api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 3);\n    let getPaginationItems;\n    module.link(\"../../../../api/server/helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 4);\n    let findInquiries, findOneInquiryByRoomId;\n    module.link(\"../../../server/api/lib/inquiries\", {\n      findInquiries(v) {\n        findInquiries = v;\n      },\n      findOneInquiryByRoomId(v) {\n        findOneInquiryByRoomId = v;\n      }\n    }, 5);\n    let takeInquiry;\n    module.link(\"../../../server/methods/takeInquiry\", {\n      takeInquiry(v) {\n        takeInquiry = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('livechat/inquiries.list', {\n      authRequired: true,\n      permissionsRequired: ['view-livechat-manager'],\n      validateParams: isGETLivechatInquiriesListParams\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort\n        } = await this.parseJsonQuery();\n        const {\n          department\n        } = this.queryParams;\n        const ourQuery = {\n          status: 'queued'\n        };\n        if (department) {\n          const departmentFromDB = await LivechatDepartment.findOneByIdOrName(department, {\n            projection: {\n              _id: 1\n            }\n          });\n          if (departmentFromDB) {\n            ourQuery.department = departmentFromDB._id;\n          }\n        }\n        // @ts-expect-error - attachments...\n        const {\n          cursor,\n          totalCount\n        } = LivechatInquiry.findPaginated(ourQuery, {\n          sort: sort || {\n            ts: -1\n          },\n          skip: offset,\n          limit: count,\n          projection: {\n            rid: 1,\n            name: 1,\n            ts: 1,\n            status: 1,\n            department: 1\n          }\n        });\n        const [inquiries, total] = await Promise.all([cursor.toArray(), totalCount]);\n        return API.v1.success({\n          inquiries,\n          offset,\n          count: inquiries.length,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('livechat/inquiries.take', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isPOSTLivechatInquiriesTakeParams\n    }, {\n      async post() {\n        if (this.bodyParams.userId && !(await Users.findOneById(this.bodyParams.userId, {\n          projection: {\n            _id: 1\n          }\n        }))) {\n          return API.v1.failure('The user is invalid');\n        }\n        return API.v1.success({\n          inquiry: await takeInquiry(this.bodyParams.userId || this.userId, this.bodyParams.inquiryId)\n        });\n      }\n    });\n    API.v1.addRoute('livechat/inquiries.queuedForUser', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isGETLivechatInquiriesQueuedForUserParams\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort\n        } = await this.parseJsonQuery();\n        const {\n          department\n        } = this.queryParams;\n        return API.v1.success(await findInquiries({\n          userId: this.userId,\n          department,\n          status: LivechatInquiryStatus.QUEUED,\n          pagination: {\n            offset,\n            count,\n            sort\n          }\n        }));\n      }\n    });\n    API.v1.addRoute('livechat/inquiries.getOne', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isGETLivechatInquiriesGetOneParams\n    }, {\n      async get() {\n        const {\n          roomId\n        } = this.queryParams;\n        return API.v1.success(await findOneInquiryByRoomId({\n          roomId\n        }));\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["LivechatInquiryStatus","module","link","v","LivechatInquiry","LivechatDepartment","Users","isGETLivechatInquiriesListParams","isPOSTLivechatInquiriesTakeParams","isGETLivechatInquiriesQueuedForUserParams","isGETLivechatInquiriesGetOneParams","API","getPaginationItems","findInquiries","findOneInquiryByRoomId","takeInquiry","__reifyWaitForDeps__","v1","addRoute","authRequired","permissionsRequired","validateParams","get","offset","count","queryParams","sort","parseJsonQuery","department","ourQuery","status","departmentFromDB","findOneByIdOrName","projection","_id","cursor","totalCount","findPaginated","ts","skip","limit","rid","name","inquiries","total","Promise","all","toArray","success","length","post","bodyParams","userId","findOneById","failure","inquiry","inquiryId","QUEUED","pagination","roomId","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/imports/server/rest/inquiries.ts"],"sourcesContent":["import { LivechatInquiryStatus } from '@rocket.chat/core-typings';\nimport { LivechatInquiry, LivechatDepartment, Users } from '@rocket.chat/models';\nimport {\n\tisGETLivechatInquiriesListParams,\n\tisPOSTLivechatInquiriesTakeParams,\n\tisGETLivechatInquiriesQueuedForUserParams,\n\tisGETLivechatInquiriesGetOneParams,\n} from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../api/server';\nimport { getPaginationItems } from '../../../../api/server/helpers/getPaginationItems';\nimport { findInquiries, findOneInquiryByRoomId } from '../../../server/api/lib/inquiries';\nimport { takeInquiry } from '../../../server/methods/takeInquiry';\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.list',\n\t{ authRequired: true, permissionsRequired: ['view-livechat-manager'], validateParams: isGETLivechatInquiriesListParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { department } = this.queryParams;\n\t\t\tconst ourQuery: { status: string; department?: string } = { status: 'queued' };\n\t\t\tif (department) {\n\t\t\t\tconst departmentFromDB = await LivechatDepartment.findOneByIdOrName(department, { projection: { _id: 1 } });\n\t\t\t\tif (departmentFromDB) {\n\t\t\t\t\tourQuery.department = departmentFromDB._id;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// @ts-expect-error - attachments...\n\t\t\tconst { cursor, totalCount } = LivechatInquiry.findPaginated(ourQuery, {\n\t\t\t\tsort: sort || { ts: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tprojection: {\n\t\t\t\t\trid: 1,\n\t\t\t\t\tname: 1,\n\t\t\t\t\tts: 1,\n\t\t\t\t\tstatus: 1,\n\t\t\t\t\tdepartment: 1,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst [inquiries, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tinquiries,\n\t\t\t\toffset,\n\t\t\t\tcount: inquiries.length,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.take',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isPOSTLivechatInquiriesTakeParams },\n\t{\n\t\tasync post() {\n\t\t\tif (this.bodyParams.userId && !(await Users.findOneById(this.bodyParams.userId, { projection: { _id: 1 } }))) {\n\t\t\t\treturn API.v1.failure('The user is invalid');\n\t\t\t}\n\t\t\treturn API.v1.success({\n\t\t\t\tinquiry: await takeInquiry(this.bodyParams.userId || this.userId, this.bodyParams.inquiryId),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.queuedForUser',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatInquiriesQueuedForUserParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort } = await this.parseJsonQuery();\n\t\t\tconst { department } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findInquiries({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\tdepartment,\n\t\t\t\t\tstatus: LivechatInquiryStatus.QUEUED,\n\t\t\t\t\tpagination: {\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/inquiries.getOne',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isGETLivechatInquiriesGetOneParams },\n\t{\n\t\tasync get() {\n\t\t\tconst { roomId } = this.queryParams;\n\n\t\t\treturn API.v1.success(\n\t\t\t\tawait findOneInquiryByRoomId({\n\t\t\t\t\troomId,\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0815325c29d85019ad957477af75733ea308932a"}
