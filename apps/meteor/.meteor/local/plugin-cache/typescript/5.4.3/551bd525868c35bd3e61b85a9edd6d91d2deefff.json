{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-cached-collection/client/models/CachedCollection.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-cached-collection/client/models/CachedCollection.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-cached-collection/client/models/CachedCollection.ts","inputSourceMap":{"version":3,"file":"app/ui-cached-collection/client/models/CachedCollection.ts","sourceRoot":"","sources":["app/ui-cached-collection/client/models/CachedCollection.ts"],"names":[],"mappings":"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","sourcesContent":["import type { StreamNames } from '@rocket.chat/ddp-client';\nimport { Emitter } from '@rocket.chat/emitter';\nimport localforage from 'localforage';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport type { MinimongoCollection } from '../../../../client/definitions/MinimongoCollection';\nimport { baseURI } from '../../../../client/lib/baseURI';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { withDebouncing } from '../../../../lib/utils/highOrderFunctions';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { CachedCollectionManager } from './CachedCollectionManager';\n\nexport type EventType = 'notify-logged' | 'notify-all' | 'notify-user';\n\ntype Name = 'rooms' | 'subscriptions' | 'permissions' | 'public-settings' | 'private-settings';\n\nconst hasId = <T>(record: T): record is T & { _id: string } => typeof record === 'object' && record !== null && '_id' in record;\nconst hasUpdatedAt = <T>(record: T): record is T & { _updatedAt: Date } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_updatedAt' in record &&\n\t(record as unknown as { _updatedAt: unknown })._updatedAt instanceof Date;\nconst hasDeletedAt = <T>(record: T): record is T & { _deletedAt: Date } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_deletedAt' in record &&\n\t(record as unknown as { _deletedAt: unknown })._deletedAt instanceof Date;\nconst hasUnserializedUpdatedAt = <T>(record: T): record is T & { _updatedAt: ConstructorParameters<typeof Date>[0] } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_updatedAt' in record &&\n\t!((record as unknown as { _updatedAt: unknown })._updatedAt instanceof Date);\n\nlocalforage.config({\n\tname: baseURI,\n});\n\nexport class CachedCollection<T extends { _id: string }, U = T> extends Emitter<{ changed: T; removed: T }> {\n\tprivate static MAX_CACHE_TIME = 60 * 60 * 24 * 30;\n\n\tpublic collection: MinimongoCollection<T>;\n\n\tpublic ready = new ReactiveVar(false);\n\n\tpublic name: Name;\n\n\tpublic eventType: StreamNames;\n\n\tpublic version = 18;\n\n\tpublic userRelated: boolean;\n\n\tpublic updatedAt = new Date(0);\n\n\tpublic log: (...args: any[]) => void;\n\n\tpublic timer: ReturnType<typeof setTimeout>;\n\n\tconstructor({ name, eventType = 'notify-user', userRelated = true }: { name: Name; eventType?: StreamNames; userRelated?: boolean }) {\n\t\tsuper();\n\n\t\tthis.collection = new Mongo.Collection(null) as MinimongoCollection<T>;\n\n\t\tthis.name = name;\n\t\tthis.eventType = eventType;\n\t\tthis.userRelated = userRelated;\n\n\t\tthis.log = [getConfig(`debugCachedCollection-${this.name}`), getConfig('debugCachedCollection'), getConfig('debug')].includes('true')\n\t\t\t? console.log.bind(console, `%cCachedCollection ${this.name}`, `color: navy; font-weight: bold;`)\n\t\t\t: () => undefined;\n\n\t\tCachedCollectionManager.register(this);\n\n\t\tif (!userRelated) {\n\t\t\tvoid this.init();\n\t\t\treturn;\n\t\t}\n\n\t\tCachedCollectionManager.onLogin(() => {\n\t\t\tvoid this.init();\n\t\t});\n\t}\n\n\tprotected get eventName(): `${Name}-changed` | `${string}/${Name}-changed` {\n\t\tif (this.eventType === 'notify-user') {\n\t\t\treturn `${Meteor.userId()}/${this.name}-changed`;\n\t\t}\n\t\treturn `${this.name}-changed`;\n\t}\n\n\tgetToken() {\n\t\tif (this.userRelated === false) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Accounts._storedLoginToken();\n\t}\n\n\tprivate async loadFromCache() {\n\t\tconst data = await localforage.getItem<{ version: number; token: unknown; records: unknown[]; updatedAt: Date | string }>(this.name);\n\n\t\tif (!data) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (data.version < this.version || data.token !== this.getToken()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (data.records.length <= 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// updatedAt may be a Date or a string depending on the used localForage backend\n\t\tif (!(data.updatedAt instanceof Date)) {\n\t\t\tdata.updatedAt = new Date(data.updatedAt);\n\t\t}\n\n\t\tif (Date.now() - data.updatedAt.getTime() >= 1000 * CachedCollection.MAX_CACHE_TIME) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.log(`${data.records.length} records loaded from cache`);\n\n\t\tconst deserializedRecords = data.records.map((record) => this.deserializeFromCache(record)).filter(isTruthy);\n\n\t\tconst updatedAt = Math.max(...deserializedRecords.filter(hasUpdatedAt).map((record) => record?._updatedAt.getTime() ?? 0));\n\n\t\tif (updatedAt > this.updatedAt.getTime()) {\n\t\t\tthis.updatedAt = new Date(updatedAt);\n\t\t}\n\n\t\tthis.collection._collection._docs._map = new Map(\n\t\t\tdeserializedRecords.filter(hasId).map((record) => [this.collection._collection._docs._idStringify(record._id), record]),\n\t\t);\n\n\t\tthis.updatedAt = data.updatedAt || this.updatedAt;\n\n\t\tObject.values(this.collection._collection.queries).forEach((query) => this.collection._collection._recomputeResults(query));\n\n\t\treturn true;\n\t}\n\n\tprotected deserializeFromCache(record: unknown): T | undefined {\n\t\tif (typeof record !== 'object' || record === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\t...(record as unknown as T),\n\t\t\t...(hasUnserializedUpdatedAt(record) && {\n\t\t\t\t_updatedAt: new Date(record._updatedAt),\n\t\t\t}),\n\t\t};\n\t}\n\n\tprivate async callLoad() {\n\t\t// TODO: workaround for bad function overload\n\t\tconst data = await sdk.call(`${this.name}/get`);\n\t\treturn data as unknown as U[];\n\t}\n\n\tprivate async callSync(updatedSince: Date) {\n\t\t// TODO: workaround for bad function overload\n\t\tconst data = await sdk.call(`${this.name}/get`, updatedSince);\n\t\treturn data as unknown as { update: U[]; remove: U[] };\n\t}\n\n\tprivate async loadFromServer() {\n\t\tconst startTime = new Date();\n\t\tconst lastTime = this.updatedAt;\n\t\tconst data = await this.callLoad();\n\t\tthis.log(`${data.length} records loaded from server`);\n\n\t\tdata.forEach((record) => {\n\t\t\tconst newRecord = this.handleLoadFromServer(record);\n\t\t\tif (!hasId(newRecord)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { _id } = newRecord;\n\t\t\tthis.collection.upsert({ _id } as Mongo.Selector<T>, newRecord);\n\t\t\tthis.emit('changed', newRecord as any); // TODO: investigate why this is needed\n\n\t\t\tif (hasUpdatedAt(newRecord) && newRecord._updatedAt > this.updatedAt) {\n\t\t\t\tthis.updatedAt = newRecord._updatedAt;\n\t\t\t}\n\t\t});\n\t\tthis.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n\t}\n\n\tprotected handleLoadFromServer(record: U): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprotected handleReceived(record: U, _action: 'removed' | 'changed'): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprotected handleSync(record: U, _action: 'removed' | 'changed'): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprivate async loadFromServerAndPopulate() {\n\t\tawait this.loadFromServer();\n\t\tawait this.save();\n\t}\n\n\tsave = withDebouncing({ wait: 1000 })(async () => {\n\t\tthis.log('saving cache');\n\t\tconst data = this.collection.find().fetch();\n\t\tawait localforage.setItem(this.name, {\n\t\t\tupdatedAt: this.updatedAt,\n\t\t\tversion: this.version,\n\t\t\ttoken: this.getToken(),\n\t\t\trecords: data,\n\t\t});\n\t\tthis.log('saving cache (done)');\n\t});\n\n\tclearCacheOnLogout() {\n\t\tif (this.userRelated === true) {\n\t\t\tvoid this.clearCache();\n\t\t}\n\t}\n\n\tasync clearCache() {\n\t\tthis.log('clearing cache');\n\t\tawait localforage.removeItem(this.name);\n\t\tthis.collection.remove({});\n\t}\n\n\tasync setupListener() {\n\t\tsdk.stream(this.eventType, [this.eventName], (async (action: 'removed' | 'changed', record: any) => {\n\t\t\tthis.log('record received', action, record);\n\t\t\tconst newRecord = this.handleReceived(record, action);\n\n\t\t\tif (!hasId(newRecord)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (action === 'removed') {\n\t\t\t\tthis.collection.remove(newRecord._id);\n\t\t\t} else {\n\t\t\t\tconst { _id } = newRecord;\n\t\t\t\tif (!_id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.collection.upsert({ _id } as any, newRecord);\n\t\t\t}\n\t\t\tawait this.save();\n\t\t}) as (...args: unknown[]) => void);\n\t}\n\n\ttrySync(delay = 10) {\n\t\tclearTimeout(this.timer);\n\t\t// Wait for an empty queue to load data again and sync\n\t\tthis.timer = setTimeout(async () => {\n\t\t\tif (!(await this.sync())) {\n\t\t\t\treturn this.trySync(delay);\n\t\t\t}\n\t\t\tawait this.save();\n\t\t}, delay);\n\t}\n\n\tasync sync() {\n\t\tif (!this.updatedAt || this.updatedAt.getTime() === 0 || Meteor.connection._outstandingMethodBlocks.length !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst startTime = new Date();\n\t\tconst lastTime = this.updatedAt;\n\n\t\tthis.log(`syncing from ${this.updatedAt}`);\n\n\t\tconst data = await this.callSync(this.updatedAt);\n\t\tconst changes = [];\n\n\t\tif (data.update && data.update.length > 0) {\n\t\t\tthis.log(`${data.update.length} records updated in sync`);\n\t\t\tfor (const record of data.update) {\n\t\t\t\tconst action = 'changed';\n\t\t\t\tconst newRecord = this.handleSync(record, action);\n\n\t\t\t\tif (!hasId(newRecord)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst actionTime = hasUpdatedAt(newRecord) ? newRecord._updatedAt : startTime;\n\t\t\t\tchanges.push({\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tconst { _id } = newRecord;\n\t\t\t\t\t\tthis.collection.upsert({ _id } as Mongo.Selector<T>, newRecord);\n\t\t\t\t\t\tif (actionTime > this.updatedAt) {\n\t\t\t\t\t\t\tthis.updatedAt = actionTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(action, newRecord as any); // TODO: investigate why this is needed\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: actionTime.getTime(),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (data.remove && data.remove.length > 0) {\n\t\t\tthis.log(`${data.remove.length} records removed in sync`);\n\t\t\tfor (const record of data.remove) {\n\t\t\t\tconst action = 'removed';\n\t\t\t\tconst newRecord = this.handleSync(record, action);\n\n\t\t\t\tif (!hasId(newRecord) || !hasDeletedAt(newRecord)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst actionTime = newRecord._deletedAt;\n\t\t\t\tchanges.push({\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tconst { _id } = newRecord;\n\t\t\t\t\t\tthis.collection.remove({ _id } as Mongo.Selector<T>);\n\t\t\t\t\t\tif (actionTime > this.updatedAt) {\n\t\t\t\t\t\t\tthis.updatedAt = actionTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(action, newRecord as any); // TODO: investigate why this is needed\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: actionTime.getTime(),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tchanges\n\t\t\t.sort((a, b) => a.timestamp - b.timestamp)\n\t\t\t.forEach((c) => {\n\t\t\t\tc.action();\n\t\t\t});\n\n\t\tthis.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n\n\t\treturn true;\n\t}\n\n\tasync init() {\n\t\t// this.ready.set(false);\n\n\t\tif (await this.loadFromCache()) {\n\t\t\tthis.trySync();\n\t\t} else {\n\t\t\tawait this.loadFromServerAndPopulate();\n\t\t}\n\n\t\tthis.ready.set(true);\n\n\t\tCachedCollectionManager.onReconnect(() => {\n\t\t\tthis.trySync();\n\t\t});\n\n\t\treturn this.setupListener();\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-cached-collection/client/models/CachedCollection.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-cached-collection/client/models/CachedCollection.ts","inputSourceMap":{"version":3,"file":"app/ui-cached-collection/client/models/CachedCollection.ts","sourceRoot":"","sources":["app/ui-cached-collection/client/models/CachedCollection.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,WAAW,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAGlD,OAAO,EAAE,OAAO,EAAE,MAAM,gCAAgC,CAAC;AACzD,OAAO,EAAE,SAAS,EAAE,MAAM,wCAAwC,CAAC;AACnE,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,cAAc,EAAE,MAAM,0CAA0C,CAAC;AAC1E,OAAO,EAAE,GAAG,EAAE,MAAM,qCAAqC,CAAC;AAC1D,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAMpE,MAAM,KAAK,GAAG,CAAI,MAAS,EAAiC,EAAE,CAAC,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC;AAChI,MAAM,YAAY,GAAG,CAAI,MAAS,EAAsC,EAAE,CACzE,OAAO,MAAM,KAAK,QAAQ;IAC1B,MAAM,KAAK,IAAI;IACf,YAAY,IAAI,MAAM;IACrB,MAA6C,CAAC,UAAU,YAAY,IAAI,CAAC;AAC3E,MAAM,YAAY,GAAG,CAAI,MAAS,EAAsC,EAAE,CACzE,OAAO,MAAM,KAAK,QAAQ;IAC1B,MAAM,KAAK,IAAI;IACf,YAAY,IAAI,MAAM;IACrB,MAA6C,CAAC,UAAU,YAAY,IAAI,CAAC;AAC3E,MAAM,wBAAwB,GAAG,CAAI,MAAS,EAAuE,EAAE,CACtH,OAAO,MAAM,KAAK,QAAQ;IAC1B,MAAM,KAAK,IAAI;IACf,YAAY,IAAI,MAAM;IACtB,CAAC,CAAE,MAA6C,CAAC,UAAU,YAAY,IAAI,CAAC,CAAC;AAE9E,WAAW,CAAC,MAAM,CAAC;IAClB,IAAI,EAAE,OAAO;CACb,CAAC,CAAC;AAEH,MAAM,OAAO,gBAAmD,SAAQ,OAAmC;IAClG,MAAM,CAAC,cAAc,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAE3C,UAAU,CAAyB;IAEnC,KAAK,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;IAE/B,IAAI,CAAO;IAEX,SAAS,CAAc;IAEvB,OAAO,GAAG,EAAE,CAAC;IAEb,WAAW,CAAU;IAErB,SAAS,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAExB,GAAG,CAA2B;IAE9B,KAAK,CAAgC;IAE5C,YAAY,EAAE,IAAI,EAAE,SAAS,GAAG,aAAa,EAAE,WAAW,GAAG,IAAI,EAAkE;QAClI,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAA2B,CAAC;QAEvE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,IAAI,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,yBAAyB,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,SAAS,CAAC,uBAAuB,CAAC,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;YACpI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,sBAAsB,IAAI,CAAC,IAAI,EAAE,EAAE,iCAAiC,CAAC;YACjG,CAAC,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC;QAEnB,uBAAuB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEvC,IAAI,CAAC,WAAW,EAAE,CAAC;YAClB,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;YACjB,OAAO;QACR,CAAC;QAED,uBAAuB,CAAC,OAAO,CAAC,GAAG,EAAE;YACpC,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,IAAc,SAAS;QACtB,IAAI,IAAI,CAAC,SAAS,KAAK,aAAa,EAAE,CAAC;YACtC,OAAO,GAAG,MAAM,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,IAAI,UAAU,CAAC;QAClD,CAAC;QACD,OAAO,GAAG,IAAI,CAAC,IAAI,UAAU,CAAC;IAC/B,CAAC;IAED,QAAQ;QACP,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE,CAAC;YAChC,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,OAAO,QAAQ,CAAC,iBAAiB,EAAE,CAAC;IACrC,CAAC;IAEO,KAAK,CAAC,aAAa;QAC1B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,OAAO,CAAoF,IAAI,CAAC,IAAI,CAAC,CAAC;QAErI,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACnE,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC;QACd,CAAC;QAED,gFAAgF;QAChF,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,YAAY,IAAI,CAAC,EAAE,CAAC;YACvC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,IAAI,GAAG,gBAAgB,CAAC,cAAc,EAAE,CAAC;YACrF,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,4BAA4B,CAAC,CAAC;QAE7D,MAAM,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE7G,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,mBAAmB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAE3H,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,CAAC;YAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QACtC,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,CAC/C,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CACvH,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;QAElD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;QAE5H,OAAO,IAAI,CAAC;IACb,CAAC;IAES,oBAAoB,CAAC,MAAe;QAC7C,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;YACnD,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,OAAO;YACN,GAAI,MAAuB;YAC3B,GAAG,CAAC,wBAAwB,CAAC,MAAM,CAAC,IAAI;gBACvC,UAAU,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;aACvC,CAAC;SACF,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,QAAQ;QACrB,6CAA6C;QAC7C,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC;QAChD,OAAO,IAAsB,CAAC;IAC/B,CAAC;IAEO,KAAK,CAAC,QAAQ,CAAC,YAAkB;QACxC,6CAA6C;QAC7C,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAAM,EAAE,YAAY,CAAC,CAAC;QAC9D,OAAO,IAA+C,CAAC;IACxD,CAAC;IAEO,KAAK,CAAC,cAAc;QAC3B,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,6BAA6B,CAAC,CAAC;QAEtD,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YACvB,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;gBACvB,OAAO;YACR,CAAC;YAED,MAAM,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,GAAG,EAAuB,EAAE,SAAS,CAAC,CAAC;YAChE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,SAAgB,CAAC,CAAC,CAAC,uCAAuC;YAE/E,IAAI,YAAY,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBACtE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,UAAU,CAAC;YACvC,CAAC;QACF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;IAC3E,CAAC;IAES,oBAAoB,CAAC,MAAS;QACvC,OAAO,MAAsB,CAAC;IAC/B,CAAC;IAES,cAAc,CAAC,MAAS,EAAE,OAA8B;QACjE,OAAO,MAAsB,CAAC;IAC/B,CAAC;IAES,UAAU,CAAC,MAAS,EAAE,OAA8B;QAC7D,OAAO,MAAsB,CAAC;IAC/B,CAAC;IAEO,KAAK,CAAC,yBAAyB;QACtC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;IAED,IAAI,GAAG,cAAc,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;QAChD,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACzB,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;QAC5C,MAAM,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;YACpC,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE;YACtB,OAAO,EAAE,IAAI;SACb,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,kBAAkB;QACjB,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE,CAAC;YAC/B,KAAK,IAAI,CAAC,UAAU,EAAE,CAAC;QACxB,CAAC;IACF,CAAC;IAED,KAAK,CAAC,UAAU;QACf,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC3B,MAAM,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IAED,KAAK,CAAC,aAAa;QAClB,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,EAAE,MAA6B,EAAE,MAAW,EAAE,EAAE;YAClG,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;YAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAEtD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;gBACvB,OAAO;YACR,CAAC;YAED,IAAI,MAAM,KAAK,SAAS,EAAE,CAAC;gBAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACvC,CAAC;iBAAM,CAAC;gBACP,MAAM,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC;gBAC1B,IAAI,CAAC,GAAG,EAAE,CAAC;oBACV,OAAO;gBACR,CAAC;gBACD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,GAAG,EAAS,EAAE,SAAS,CAAC,CAAC;YACnD,CAAC;YACD,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,CAAiC,CAAC,CAAC;IACrC,CAAC;IAED,OAAO,CAAC,KAAK,GAAG,EAAE;QACjB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,sDAAsD;QACtD,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,IAAI,EAAE;YAClC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;gBAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC;YACD,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC,EAAE,KAAK,CAAC,CAAC;IACX,CAAC;IAED,KAAK,CAAC,IAAI;QACT,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,wBAAwB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAClH,OAAO,KAAK,CAAC;QACd,CAAC;QAED,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAEhC,IAAI,CAAC,GAAG,CAAC,gBAAgB,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAE3C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjD,MAAM,OAAO,GAAG,EAAE,CAAC;QAEnB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3C,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,0BAA0B,CAAC,CAAC;YAC1D,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClC,MAAM,MAAM,GAAG,SAAS,CAAC;gBACzB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAElD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC;oBACvB,SAAS;gBACV,CAAC;gBAED,MAAM,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC9E,OAAO,CAAC,IAAI,CAAC;oBACZ,MAAM,EAAE,GAAG,EAAE;wBACZ,MAAM,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC;wBAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,GAAG,EAAuB,EAAE,SAAS,CAAC,CAAC;wBAChE,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;4BACjC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;wBAC7B,CAAC;wBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,SAAgB,CAAC,CAAC,CAAC,uCAAuC;oBAC7E,CAAC;oBACD,SAAS,EAAE,UAAU,CAAC,OAAO,EAAE;iBAC/B,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC3C,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,0BAA0B,CAAC,CAAC;YAC1D,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClC,MAAM,MAAM,GAAG,SAAS,CAAC;gBACzB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAElD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC;oBACnD,SAAS;gBACV,CAAC;gBAED,MAAM,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;gBACxC,OAAO,CAAC,IAAI,CAAC;oBACZ,MAAM,EAAE,GAAG,EAAE;wBACZ,MAAM,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC;wBAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,GAAG,EAAuB,CAAC,CAAC;wBACrD,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;4BACjC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;wBAC7B,CAAC;wBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,SAAgB,CAAC,CAAC,CAAC,uCAAuC;oBAC7E,CAAC;oBACD,SAAS,EAAE,UAAU,CAAC,OAAO,EAAE;iBAC/B,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAED,OAAO;aACL,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;aACzC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACd,CAAC,CAAC,MAAM,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QAE1E,OAAO,IAAI,CAAC;IACb,CAAC;IAED,KAAK,CAAC,IAAI;QACT,yBAAyB;QAEzB,IAAI,MAAM,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC;YAChC,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC;aAAM,CAAC;YACP,MAAM,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACxC,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAErB,uBAAuB,CAAC,WAAW,CAAC,GAAG,EAAE;YACxC,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC","sourcesContent":["import type { StreamNames } from '@rocket.chat/ddp-client';\nimport { Emitter } from '@rocket.chat/emitter';\nimport localforage from 'localforage';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport type { MinimongoCollection } from '../../../../client/definitions/MinimongoCollection';\nimport { baseURI } from '../../../../client/lib/baseURI';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { withDebouncing } from '../../../../lib/utils/highOrderFunctions';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { CachedCollectionManager } from './CachedCollectionManager';\n\nexport type EventType = 'notify-logged' | 'notify-all' | 'notify-user';\n\ntype Name = 'rooms' | 'subscriptions' | 'permissions' | 'public-settings' | 'private-settings';\n\nconst hasId = <T>(record: T): record is T & { _id: string } => typeof record === 'object' && record !== null && '_id' in record;\nconst hasUpdatedAt = <T>(record: T): record is T & { _updatedAt: Date } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_updatedAt' in record &&\n\t(record as unknown as { _updatedAt: unknown })._updatedAt instanceof Date;\nconst hasDeletedAt = <T>(record: T): record is T & { _deletedAt: Date } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_deletedAt' in record &&\n\t(record as unknown as { _deletedAt: unknown })._deletedAt instanceof Date;\nconst hasUnserializedUpdatedAt = <T>(record: T): record is T & { _updatedAt: ConstructorParameters<typeof Date>[0] } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_updatedAt' in record &&\n\t!((record as unknown as { _updatedAt: unknown })._updatedAt instanceof Date);\n\nlocalforage.config({\n\tname: baseURI,\n});\n\nexport class CachedCollection<T extends { _id: string }, U = T> extends Emitter<{ changed: T; removed: T }> {\n\tprivate static MAX_CACHE_TIME = 60 * 60 * 24 * 30;\n\n\tpublic collection: MinimongoCollection<T>;\n\n\tpublic ready = new ReactiveVar(false);\n\n\tpublic name: Name;\n\n\tpublic eventType: StreamNames;\n\n\tpublic version = 18;\n\n\tpublic userRelated: boolean;\n\n\tpublic updatedAt = new Date(0);\n\n\tpublic log: (...args: any[]) => void;\n\n\tpublic timer: ReturnType<typeof setTimeout>;\n\n\tconstructor({ name, eventType = 'notify-user', userRelated = true }: { name: Name; eventType?: StreamNames; userRelated?: boolean }) {\n\t\tsuper();\n\n\t\tthis.collection = new Mongo.Collection(null) as MinimongoCollection<T>;\n\n\t\tthis.name = name;\n\t\tthis.eventType = eventType;\n\t\tthis.userRelated = userRelated;\n\n\t\tthis.log = [getConfig(`debugCachedCollection-${this.name}`), getConfig('debugCachedCollection'), getConfig('debug')].includes('true')\n\t\t\t? console.log.bind(console, `%cCachedCollection ${this.name}`, `color: navy; font-weight: bold;`)\n\t\t\t: () => undefined;\n\n\t\tCachedCollectionManager.register(this);\n\n\t\tif (!userRelated) {\n\t\t\tvoid this.init();\n\t\t\treturn;\n\t\t}\n\n\t\tCachedCollectionManager.onLogin(() => {\n\t\t\tvoid this.init();\n\t\t});\n\t}\n\n\tprotected get eventName(): `${Name}-changed` | `${string}/${Name}-changed` {\n\t\tif (this.eventType === 'notify-user') {\n\t\t\treturn `${Meteor.userId()}/${this.name}-changed`;\n\t\t}\n\t\treturn `${this.name}-changed`;\n\t}\n\n\tgetToken() {\n\t\tif (this.userRelated === false) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Accounts._storedLoginToken();\n\t}\n\n\tprivate async loadFromCache() {\n\t\tconst data = await localforage.getItem<{ version: number; token: unknown; records: unknown[]; updatedAt: Date | string }>(this.name);\n\n\t\tif (!data) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (data.version < this.version || data.token !== this.getToken()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (data.records.length <= 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// updatedAt may be a Date or a string depending on the used localForage backend\n\t\tif (!(data.updatedAt instanceof Date)) {\n\t\t\tdata.updatedAt = new Date(data.updatedAt);\n\t\t}\n\n\t\tif (Date.now() - data.updatedAt.getTime() >= 1000 * CachedCollection.MAX_CACHE_TIME) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.log(`${data.records.length} records loaded from cache`);\n\n\t\tconst deserializedRecords = data.records.map((record) => this.deserializeFromCache(record)).filter(isTruthy);\n\n\t\tconst updatedAt = Math.max(...deserializedRecords.filter(hasUpdatedAt).map((record) => record?._updatedAt.getTime() ?? 0));\n\n\t\tif (updatedAt > this.updatedAt.getTime()) {\n\t\t\tthis.updatedAt = new Date(updatedAt);\n\t\t}\n\n\t\tthis.collection._collection._docs._map = new Map(\n\t\t\tdeserializedRecords.filter(hasId).map((record) => [this.collection._collection._docs._idStringify(record._id), record]),\n\t\t);\n\n\t\tthis.updatedAt = data.updatedAt || this.updatedAt;\n\n\t\tObject.values(this.collection._collection.queries).forEach((query) => this.collection._collection._recomputeResults(query));\n\n\t\treturn true;\n\t}\n\n\tprotected deserializeFromCache(record: unknown): T | undefined {\n\t\tif (typeof record !== 'object' || record === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\t...(record as unknown as T),\n\t\t\t...(hasUnserializedUpdatedAt(record) && {\n\t\t\t\t_updatedAt: new Date(record._updatedAt),\n\t\t\t}),\n\t\t};\n\t}\n\n\tprivate async callLoad() {\n\t\t// TODO: workaround for bad function overload\n\t\tconst data = await sdk.call(`${this.name}/get`);\n\t\treturn data as unknown as U[];\n\t}\n\n\tprivate async callSync(updatedSince: Date) {\n\t\t// TODO: workaround for bad function overload\n\t\tconst data = await sdk.call(`${this.name}/get`, updatedSince);\n\t\treturn data as unknown as { update: U[]; remove: U[] };\n\t}\n\n\tprivate async loadFromServer() {\n\t\tconst startTime = new Date();\n\t\tconst lastTime = this.updatedAt;\n\t\tconst data = await this.callLoad();\n\t\tthis.log(`${data.length} records loaded from server`);\n\n\t\tdata.forEach((record) => {\n\t\t\tconst newRecord = this.handleLoadFromServer(record);\n\t\t\tif (!hasId(newRecord)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { _id } = newRecord;\n\t\t\tthis.collection.upsert({ _id } as Mongo.Selector<T>, newRecord);\n\t\t\tthis.emit('changed', newRecord as any); // TODO: investigate why this is needed\n\n\t\t\tif (hasUpdatedAt(newRecord) && newRecord._updatedAt > this.updatedAt) {\n\t\t\t\tthis.updatedAt = newRecord._updatedAt;\n\t\t\t}\n\t\t});\n\t\tthis.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n\t}\n\n\tprotected handleLoadFromServer(record: U): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprotected handleReceived(record: U, _action: 'removed' | 'changed'): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprotected handleSync(record: U, _action: 'removed' | 'changed'): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprivate async loadFromServerAndPopulate() {\n\t\tawait this.loadFromServer();\n\t\tawait this.save();\n\t}\n\n\tsave = withDebouncing({ wait: 1000 })(async () => {\n\t\tthis.log('saving cache');\n\t\tconst data = this.collection.find().fetch();\n\t\tawait localforage.setItem(this.name, {\n\t\t\tupdatedAt: this.updatedAt,\n\t\t\tversion: this.version,\n\t\t\ttoken: this.getToken(),\n\t\t\trecords: data,\n\t\t});\n\t\tthis.log('saving cache (done)');\n\t});\n\n\tclearCacheOnLogout() {\n\t\tif (this.userRelated === true) {\n\t\t\tvoid this.clearCache();\n\t\t}\n\t}\n\n\tasync clearCache() {\n\t\tthis.log('clearing cache');\n\t\tawait localforage.removeItem(this.name);\n\t\tthis.collection.remove({});\n\t}\n\n\tasync setupListener() {\n\t\tsdk.stream(this.eventType, [this.eventName], (async (action: 'removed' | 'changed', record: any) => {\n\t\t\tthis.log('record received', action, record);\n\t\t\tconst newRecord = this.handleReceived(record, action);\n\n\t\t\tif (!hasId(newRecord)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (action === 'removed') {\n\t\t\t\tthis.collection.remove(newRecord._id);\n\t\t\t} else {\n\t\t\t\tconst { _id } = newRecord;\n\t\t\t\tif (!_id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.collection.upsert({ _id } as any, newRecord);\n\t\t\t}\n\t\t\tawait this.save();\n\t\t}) as (...args: unknown[]) => void);\n\t}\n\n\ttrySync(delay = 10) {\n\t\tclearTimeout(this.timer);\n\t\t// Wait for an empty queue to load data again and sync\n\t\tthis.timer = setTimeout(async () => {\n\t\t\tif (!(await this.sync())) {\n\t\t\t\treturn this.trySync(delay);\n\t\t\t}\n\t\t\tawait this.save();\n\t\t}, delay);\n\t}\n\n\tasync sync() {\n\t\tif (!this.updatedAt || this.updatedAt.getTime() === 0 || Meteor.connection._outstandingMethodBlocks.length !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst startTime = new Date();\n\t\tconst lastTime = this.updatedAt;\n\n\t\tthis.log(`syncing from ${this.updatedAt}`);\n\n\t\tconst data = await this.callSync(this.updatedAt);\n\t\tconst changes = [];\n\n\t\tif (data.update && data.update.length > 0) {\n\t\t\tthis.log(`${data.update.length} records updated in sync`);\n\t\t\tfor (const record of data.update) {\n\t\t\t\tconst action = 'changed';\n\t\t\t\tconst newRecord = this.handleSync(record, action);\n\n\t\t\t\tif (!hasId(newRecord)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst actionTime = hasUpdatedAt(newRecord) ? newRecord._updatedAt : startTime;\n\t\t\t\tchanges.push({\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tconst { _id } = newRecord;\n\t\t\t\t\t\tthis.collection.upsert({ _id } as Mongo.Selector<T>, newRecord);\n\t\t\t\t\t\tif (actionTime > this.updatedAt) {\n\t\t\t\t\t\t\tthis.updatedAt = actionTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(action, newRecord as any); // TODO: investigate why this is needed\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: actionTime.getTime(),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (data.remove && data.remove.length > 0) {\n\t\t\tthis.log(`${data.remove.length} records removed in sync`);\n\t\t\tfor (const record of data.remove) {\n\t\t\t\tconst action = 'removed';\n\t\t\t\tconst newRecord = this.handleSync(record, action);\n\n\t\t\t\tif (!hasId(newRecord) || !hasDeletedAt(newRecord)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst actionTime = newRecord._deletedAt;\n\t\t\t\tchanges.push({\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tconst { _id } = newRecord;\n\t\t\t\t\t\tthis.collection.remove({ _id } as Mongo.Selector<T>);\n\t\t\t\t\t\tif (actionTime > this.updatedAt) {\n\t\t\t\t\t\t\tthis.updatedAt = actionTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(action, newRecord as any); // TODO: investigate why this is needed\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: actionTime.getTime(),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tchanges\n\t\t\t.sort((a, b) => a.timestamp - b.timestamp)\n\t\t\t.forEach((c) => {\n\t\t\t\tc.action();\n\t\t\t});\n\n\t\tthis.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n\n\t\treturn true;\n\t}\n\n\tasync init() {\n\t\t// this.ready.set(false);\n\n\t\tif (await this.loadFromCache()) {\n\t\t\tthis.trySync();\n\t\t} else {\n\t\t\tawait this.loadFromServerAndPopulate();\n\t\t}\n\n\t\tthis.ready.set(true);\n\n\t\tCachedCollectionManager.onReconnect(() => {\n\t\t\tthis.trySync();\n\t\t});\n\n\t\treturn this.setupListener();\n\t}\n}\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  CachedCollection: () => CachedCollection\n});\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n}, 0);\nlet localforage;\nmodule.link(\"localforage\", {\n  default(v) {\n    localforage = v;\n  }\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n}, 2);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 3);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n}, 4);\nlet ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar(v) {\n    ReactiveVar = v;\n  }\n}, 5);\nlet baseURI;\nmodule.link(\"../../../../client/lib/baseURI\", {\n  baseURI(v) {\n    baseURI = v;\n  }\n}, 6);\nlet getConfig;\nmodule.link(\"../../../../client/lib/utils/getConfig\", {\n  getConfig(v) {\n    getConfig = v;\n  }\n}, 7);\nlet isTruthy;\nmodule.link(\"../../../../lib/isTruthy\", {\n  isTruthy(v) {\n    isTruthy = v;\n  }\n}, 8);\nlet withDebouncing;\nmodule.link(\"../../../../lib/utils/highOrderFunctions\", {\n  withDebouncing(v) {\n    withDebouncing = v;\n  }\n}, 9);\nlet sdk;\nmodule.link(\"../../../utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 10);\nlet CachedCollectionManager;\nmodule.link(\"./CachedCollectionManager\", {\n  CachedCollectionManager(v) {\n    CachedCollectionManager = v;\n  }\n}, 11);\nconst hasId = record => typeof record === 'object' && record !== null && '_id' in record;\nconst hasUpdatedAt = record => typeof record === 'object' && record !== null && '_updatedAt' in record && record._updatedAt instanceof Date;\nconst hasDeletedAt = record => typeof record === 'object' && record !== null && '_deletedAt' in record && record._deletedAt instanceof Date;\nconst hasUnserializedUpdatedAt = record => typeof record === 'object' && record !== null && '_updatedAt' in record && !(record._updatedAt instanceof Date);\nlocalforage.config({\n  name: baseURI\n});\nclass CachedCollection extends Emitter {\n  constructor(_ref) {\n    let {\n      name,\n      eventType = 'notify-user',\n      userRelated = true\n    } = _ref;\n    super();\n    this.collection = void 0;\n    this.ready = new ReactiveVar(false);\n    this.name = void 0;\n    this.eventType = void 0;\n    this.version = 18;\n    this.userRelated = void 0;\n    this.updatedAt = new Date(0);\n    this.log = void 0;\n    this.timer = void 0;\n    this.save = withDebouncing({\n      wait: 1000\n    })(async () => {\n      this.log('saving cache');\n      const data = this.collection.find().fetch();\n      await localforage.setItem(this.name, {\n        updatedAt: this.updatedAt,\n        version: this.version,\n        token: this.getToken(),\n        records: data\n      });\n      this.log('saving cache (done)');\n    });\n    this.collection = new Mongo.Collection(null);\n    this.name = name;\n    this.eventType = eventType;\n    this.userRelated = userRelated;\n    this.log = [getConfig(\"debugCachedCollection-\".concat(this.name)), getConfig('debugCachedCollection'), getConfig('debug')].includes('true') ? console.log.bind(console, \"%cCachedCollection \".concat(this.name), \"color: navy; font-weight: bold;\") : () => undefined;\n    CachedCollectionManager.register(this);\n    if (!userRelated) {\n      void this.init();\n      return;\n    }\n    CachedCollectionManager.onLogin(() => {\n      void this.init();\n    });\n  }\n  get eventName() {\n    if (this.eventType === 'notify-user') {\n      return \"\".concat(Meteor.userId(), \"/\").concat(this.name, \"-changed\");\n    }\n    return \"\".concat(this.name, \"-changed\");\n  }\n  getToken() {\n    if (this.userRelated === false) {\n      return undefined;\n    }\n    return Accounts._storedLoginToken();\n  }\n  async loadFromCache() {\n    const data = await localforage.getItem(this.name);\n    if (!data) {\n      return false;\n    }\n    if (data.version < this.version || data.token !== this.getToken()) {\n      return false;\n    }\n    if (data.records.length <= 0) {\n      return false;\n    }\n    // updatedAt may be a Date or a string depending on the used localForage backend\n    if (!(data.updatedAt instanceof Date)) {\n      data.updatedAt = new Date(data.updatedAt);\n    }\n    if (Date.now() - data.updatedAt.getTime() >= 1000 * CachedCollection.MAX_CACHE_TIME) {\n      return false;\n    }\n    this.log(\"\".concat(data.records.length, \" records loaded from cache\"));\n    const deserializedRecords = data.records.map(record => this.deserializeFromCache(record)).filter(isTruthy);\n    const updatedAt = Math.max(...deserializedRecords.filter(hasUpdatedAt).map(record => {\n      var _record$_updatedAt$ge;\n      return (_record$_updatedAt$ge = record === null || record === void 0 ? void 0 : record._updatedAt.getTime()) !== null && _record$_updatedAt$ge !== void 0 ? _record$_updatedAt$ge : 0;\n    }));\n    if (updatedAt > this.updatedAt.getTime()) {\n      this.updatedAt = new Date(updatedAt);\n    }\n    this.collection._collection._docs._map = new Map(deserializedRecords.filter(hasId).map(record => [this.collection._collection._docs._idStringify(record._id), record]));\n    this.updatedAt = data.updatedAt || this.updatedAt;\n    Object.values(this.collection._collection.queries).forEach(query => this.collection._collection._recomputeResults(query));\n    return true;\n  }\n  deserializeFromCache(record) {\n    if (typeof record !== 'object' || record === null) {\n      return undefined;\n    }\n    return _objectSpread(_objectSpread({}, record), hasUnserializedUpdatedAt(record) && {\n      _updatedAt: new Date(record._updatedAt)\n    });\n  }\n  async callLoad() {\n    // TODO: workaround for bad function overload\n    const data = await sdk.call(\"\".concat(this.name, \"/get\"));\n    return data;\n  }\n  async callSync(updatedSince) {\n    // TODO: workaround for bad function overload\n    const data = await sdk.call(\"\".concat(this.name, \"/get\"), updatedSince);\n    return data;\n  }\n  async loadFromServer() {\n    const startTime = new Date();\n    const lastTime = this.updatedAt;\n    const data = await this.callLoad();\n    this.log(\"\".concat(data.length, \" records loaded from server\"));\n    data.forEach(record => {\n      const newRecord = this.handleLoadFromServer(record);\n      if (!hasId(newRecord)) {\n        return;\n      }\n      const {\n        _id\n      } = newRecord;\n      this.collection.upsert({\n        _id\n      }, newRecord);\n      this.emit('changed', newRecord); // TODO: investigate why this is needed\n      if (hasUpdatedAt(newRecord) && newRecord._updatedAt > this.updatedAt) {\n        this.updatedAt = newRecord._updatedAt;\n      }\n    });\n    this.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n  }\n  handleLoadFromServer(record) {\n    return record;\n  }\n  handleReceived(record, _action) {\n    return record;\n  }\n  handleSync(record, _action) {\n    return record;\n  }\n  async loadFromServerAndPopulate() {\n    await this.loadFromServer();\n    await this.save();\n  }\n  clearCacheOnLogout() {\n    if (this.userRelated === true) {\n      void this.clearCache();\n    }\n  }\n  async clearCache() {\n    this.log('clearing cache');\n    await localforage.removeItem(this.name);\n    this.collection.remove({});\n  }\n  async setupListener() {\n    sdk.stream(this.eventType, [this.eventName], async (action, record) => {\n      this.log('record received', action, record);\n      const newRecord = this.handleReceived(record, action);\n      if (!hasId(newRecord)) {\n        return;\n      }\n      if (action === 'removed') {\n        this.collection.remove(newRecord._id);\n      } else {\n        const {\n          _id\n        } = newRecord;\n        if (!_id) {\n          return;\n        }\n        this.collection.upsert({\n          _id\n        }, newRecord);\n      }\n      await this.save();\n    });\n  }\n  trySync() {\n    let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    clearTimeout(this.timer);\n    // Wait for an empty queue to load data again and sync\n    this.timer = setTimeout(async () => {\n      if (!(await this.sync())) {\n        return this.trySync(delay);\n      }\n      await this.save();\n    }, delay);\n  }\n  async sync() {\n    if (!this.updatedAt || this.updatedAt.getTime() === 0 || Meteor.connection._outstandingMethodBlocks.length !== 0) {\n      return false;\n    }\n    const startTime = new Date();\n    const lastTime = this.updatedAt;\n    this.log(\"syncing from \".concat(this.updatedAt));\n    const data = await this.callSync(this.updatedAt);\n    const changes = [];\n    if (data.update && data.update.length > 0) {\n      this.log(\"\".concat(data.update.length, \" records updated in sync\"));\n      for (const record of data.update) {\n        const action = 'changed';\n        const newRecord = this.handleSync(record, action);\n        if (!hasId(newRecord)) {\n          continue;\n        }\n        const actionTime = hasUpdatedAt(newRecord) ? newRecord._updatedAt : startTime;\n        changes.push({\n          action: () => {\n            const {\n              _id\n            } = newRecord;\n            this.collection.upsert({\n              _id\n            }, newRecord);\n            if (actionTime > this.updatedAt) {\n              this.updatedAt = actionTime;\n            }\n            this.emit(action, newRecord); // TODO: investigate why this is needed\n          },\n          timestamp: actionTime.getTime()\n        });\n      }\n    }\n    if (data.remove && data.remove.length > 0) {\n      this.log(\"\".concat(data.remove.length, \" records removed in sync\"));\n      for (const record of data.remove) {\n        const action = 'removed';\n        const newRecord = this.handleSync(record, action);\n        if (!hasId(newRecord) || !hasDeletedAt(newRecord)) {\n          continue;\n        }\n        const actionTime = newRecord._deletedAt;\n        changes.push({\n          action: () => {\n            const {\n              _id\n            } = newRecord;\n            this.collection.remove({\n              _id\n            });\n            if (actionTime > this.updatedAt) {\n              this.updatedAt = actionTime;\n            }\n            this.emit(action, newRecord); // TODO: investigate why this is needed\n          },\n          timestamp: actionTime.getTime()\n        });\n      }\n    }\n    changes.sort((a, b) => a.timestamp - b.timestamp).forEach(c => {\n      c.action();\n    });\n    this.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n    return true;\n  }\n  async init() {\n    // this.ready.set(false);\n    if (await this.loadFromCache()) {\n      this.trySync();\n    } else {\n      await this.loadFromServerAndPopulate();\n    }\n    this.ready.set(true);\n    CachedCollectionManager.onReconnect(() => {\n      this.trySync();\n    });\n    return this.setupListener();\n  }\n}\nCachedCollection.MAX_CACHE_TIME = 60 * 60 * 24 * 30;","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","CachedCollection","Emitter","localforage","Accounts","Meteor","Mongo","ReactiveVar","baseURI","getConfig","isTruthy","withDebouncing","sdk","CachedCollectionManager","hasId","record","hasUpdatedAt","_updatedAt","Date","hasDeletedAt","_deletedAt","hasUnserializedUpdatedAt","config","name","constructor","_ref","eventType","userRelated","collection","ready","version","updatedAt","log","timer","save","wait","data","find","fetch","setItem","token","getToken","records","Collection","concat","includes","console","bind","undefined","register","init","onLogin","eventName","userId","_storedLoginToken","loadFromCache","getItem","length","now","getTime","MAX_CACHE_TIME","deserializedRecords","map","deserializeFromCache","filter","Math","max","_record$_updatedAt$ge","_collection","_docs","_map","Map","_idStringify","_id","Object","values","queries","forEach","query","_recomputeResults","callLoad","call","callSync","updatedSince","loadFromServer","startTime","lastTime","newRecord","handleLoadFromServer","upsert","emit","handleReceived","_action","handleSync","loadFromServerAndPopulate","clearCacheOnLogout","clearCache","removeItem","remove","setupListener","stream","action","trySync","delay","arguments","clearTimeout","setTimeout","sync","connection","_outstandingMethodBlocks","changes","update","actionTime","push","timestamp","sort","a","b","c","set","onReconnect"],"sources":["app/ui-cached-collection/client/models/CachedCollection.ts"],"sourcesContent":["import type { StreamNames } from '@rocket.chat/ddp-client';\nimport { Emitter } from '@rocket.chat/emitter';\nimport localforage from 'localforage';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport type { MinimongoCollection } from '../../../../client/definitions/MinimongoCollection';\nimport { baseURI } from '../../../../client/lib/baseURI';\nimport { getConfig } from '../../../../client/lib/utils/getConfig';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { withDebouncing } from '../../../../lib/utils/highOrderFunctions';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { CachedCollectionManager } from './CachedCollectionManager';\n\nexport type EventType = 'notify-logged' | 'notify-all' | 'notify-user';\n\ntype Name = 'rooms' | 'subscriptions' | 'permissions' | 'public-settings' | 'private-settings';\n\nconst hasId = <T>(record: T): record is T & { _id: string } => typeof record === 'object' && record !== null && '_id' in record;\nconst hasUpdatedAt = <T>(record: T): record is T & { _updatedAt: Date } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_updatedAt' in record &&\n\t(record as unknown as { _updatedAt: unknown })._updatedAt instanceof Date;\nconst hasDeletedAt = <T>(record: T): record is T & { _deletedAt: Date } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_deletedAt' in record &&\n\t(record as unknown as { _deletedAt: unknown })._deletedAt instanceof Date;\nconst hasUnserializedUpdatedAt = <T>(record: T): record is T & { _updatedAt: ConstructorParameters<typeof Date>[0] } =>\n\ttypeof record === 'object' &&\n\trecord !== null &&\n\t'_updatedAt' in record &&\n\t!((record as unknown as { _updatedAt: unknown })._updatedAt instanceof Date);\n\nlocalforage.config({\n\tname: baseURI,\n});\n\nexport class CachedCollection<T extends { _id: string }, U = T> extends Emitter<{ changed: T; removed: T }> {\n\tprivate static MAX_CACHE_TIME = 60 * 60 * 24 * 30;\n\n\tpublic collection: MinimongoCollection<T>;\n\n\tpublic ready = new ReactiveVar(false);\n\n\tpublic name: Name;\n\n\tpublic eventType: StreamNames;\n\n\tpublic version = 18;\n\n\tpublic userRelated: boolean;\n\n\tpublic updatedAt = new Date(0);\n\n\tpublic log: (...args: any[]) => void;\n\n\tpublic timer: ReturnType<typeof setTimeout>;\n\n\tconstructor({ name, eventType = 'notify-user', userRelated = true }: { name: Name; eventType?: StreamNames; userRelated?: boolean }) {\n\t\tsuper();\n\n\t\tthis.collection = new Mongo.Collection(null) as MinimongoCollection<T>;\n\n\t\tthis.name = name;\n\t\tthis.eventType = eventType;\n\t\tthis.userRelated = userRelated;\n\n\t\tthis.log = [getConfig(`debugCachedCollection-${this.name}`), getConfig('debugCachedCollection'), getConfig('debug')].includes('true')\n\t\t\t? console.log.bind(console, `%cCachedCollection ${this.name}`, `color: navy; font-weight: bold;`)\n\t\t\t: () => undefined;\n\n\t\tCachedCollectionManager.register(this);\n\n\t\tif (!userRelated) {\n\t\t\tvoid this.init();\n\t\t\treturn;\n\t\t}\n\n\t\tCachedCollectionManager.onLogin(() => {\n\t\t\tvoid this.init();\n\t\t});\n\t}\n\n\tprotected get eventName(): `${Name}-changed` | `${string}/${Name}-changed` {\n\t\tif (this.eventType === 'notify-user') {\n\t\t\treturn `${Meteor.userId()}/${this.name}-changed`;\n\t\t}\n\t\treturn `${this.name}-changed`;\n\t}\n\n\tgetToken() {\n\t\tif (this.userRelated === false) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Accounts._storedLoginToken();\n\t}\n\n\tprivate async loadFromCache() {\n\t\tconst data = await localforage.getItem<{ version: number; token: unknown; records: unknown[]; updatedAt: Date | string }>(this.name);\n\n\t\tif (!data) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (data.version < this.version || data.token !== this.getToken()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (data.records.length <= 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// updatedAt may be a Date or a string depending on the used localForage backend\n\t\tif (!(data.updatedAt instanceof Date)) {\n\t\t\tdata.updatedAt = new Date(data.updatedAt);\n\t\t}\n\n\t\tif (Date.now() - data.updatedAt.getTime() >= 1000 * CachedCollection.MAX_CACHE_TIME) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.log(`${data.records.length} records loaded from cache`);\n\n\t\tconst deserializedRecords = data.records.map((record) => this.deserializeFromCache(record)).filter(isTruthy);\n\n\t\tconst updatedAt = Math.max(...deserializedRecords.filter(hasUpdatedAt).map((record) => record?._updatedAt.getTime() ?? 0));\n\n\t\tif (updatedAt > this.updatedAt.getTime()) {\n\t\t\tthis.updatedAt = new Date(updatedAt);\n\t\t}\n\n\t\tthis.collection._collection._docs._map = new Map(\n\t\t\tdeserializedRecords.filter(hasId).map((record) => [this.collection._collection._docs._idStringify(record._id), record]),\n\t\t);\n\n\t\tthis.updatedAt = data.updatedAt || this.updatedAt;\n\n\t\tObject.values(this.collection._collection.queries).forEach((query) => this.collection._collection._recomputeResults(query));\n\n\t\treturn true;\n\t}\n\n\tprotected deserializeFromCache(record: unknown): T | undefined {\n\t\tif (typeof record !== 'object' || record === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\t...(record as unknown as T),\n\t\t\t...(hasUnserializedUpdatedAt(record) && {\n\t\t\t\t_updatedAt: new Date(record._updatedAt),\n\t\t\t}),\n\t\t};\n\t}\n\n\tprivate async callLoad() {\n\t\t// TODO: workaround for bad function overload\n\t\tconst data = await sdk.call(`${this.name}/get`);\n\t\treturn data as unknown as U[];\n\t}\n\n\tprivate async callSync(updatedSince: Date) {\n\t\t// TODO: workaround for bad function overload\n\t\tconst data = await sdk.call(`${this.name}/get`, updatedSince);\n\t\treturn data as unknown as { update: U[]; remove: U[] };\n\t}\n\n\tprivate async loadFromServer() {\n\t\tconst startTime = new Date();\n\t\tconst lastTime = this.updatedAt;\n\t\tconst data = await this.callLoad();\n\t\tthis.log(`${data.length} records loaded from server`);\n\n\t\tdata.forEach((record) => {\n\t\t\tconst newRecord = this.handleLoadFromServer(record);\n\t\t\tif (!hasId(newRecord)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { _id } = newRecord;\n\t\t\tthis.collection.upsert({ _id } as Mongo.Selector<T>, newRecord);\n\t\t\tthis.emit('changed', newRecord as any); // TODO: investigate why this is needed\n\n\t\t\tif (hasUpdatedAt(newRecord) && newRecord._updatedAt > this.updatedAt) {\n\t\t\t\tthis.updatedAt = newRecord._updatedAt;\n\t\t\t}\n\t\t});\n\t\tthis.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n\t}\n\n\tprotected handleLoadFromServer(record: U): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprotected handleReceived(record: U, _action: 'removed' | 'changed'): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprotected handleSync(record: U, _action: 'removed' | 'changed'): T {\n\t\treturn record as unknown as T;\n\t}\n\n\tprivate async loadFromServerAndPopulate() {\n\t\tawait this.loadFromServer();\n\t\tawait this.save();\n\t}\n\n\tsave = withDebouncing({ wait: 1000 })(async () => {\n\t\tthis.log('saving cache');\n\t\tconst data = this.collection.find().fetch();\n\t\tawait localforage.setItem(this.name, {\n\t\t\tupdatedAt: this.updatedAt,\n\t\t\tversion: this.version,\n\t\t\ttoken: this.getToken(),\n\t\t\trecords: data,\n\t\t});\n\t\tthis.log('saving cache (done)');\n\t});\n\n\tclearCacheOnLogout() {\n\t\tif (this.userRelated === true) {\n\t\t\tvoid this.clearCache();\n\t\t}\n\t}\n\n\tasync clearCache() {\n\t\tthis.log('clearing cache');\n\t\tawait localforage.removeItem(this.name);\n\t\tthis.collection.remove({});\n\t}\n\n\tasync setupListener() {\n\t\tsdk.stream(this.eventType, [this.eventName], (async (action: 'removed' | 'changed', record: any) => {\n\t\t\tthis.log('record received', action, record);\n\t\t\tconst newRecord = this.handleReceived(record, action);\n\n\t\t\tif (!hasId(newRecord)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (action === 'removed') {\n\t\t\t\tthis.collection.remove(newRecord._id);\n\t\t\t} else {\n\t\t\t\tconst { _id } = newRecord;\n\t\t\t\tif (!_id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.collection.upsert({ _id } as any, newRecord);\n\t\t\t}\n\t\t\tawait this.save();\n\t\t}) as (...args: unknown[]) => void);\n\t}\n\n\ttrySync(delay = 10) {\n\t\tclearTimeout(this.timer);\n\t\t// Wait for an empty queue to load data again and sync\n\t\tthis.timer = setTimeout(async () => {\n\t\t\tif (!(await this.sync())) {\n\t\t\t\treturn this.trySync(delay);\n\t\t\t}\n\t\t\tawait this.save();\n\t\t}, delay);\n\t}\n\n\tasync sync() {\n\t\tif (!this.updatedAt || this.updatedAt.getTime() === 0 || Meteor.connection._outstandingMethodBlocks.length !== 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst startTime = new Date();\n\t\tconst lastTime = this.updatedAt;\n\n\t\tthis.log(`syncing from ${this.updatedAt}`);\n\n\t\tconst data = await this.callSync(this.updatedAt);\n\t\tconst changes = [];\n\n\t\tif (data.update && data.update.length > 0) {\n\t\t\tthis.log(`${data.update.length} records updated in sync`);\n\t\t\tfor (const record of data.update) {\n\t\t\t\tconst action = 'changed';\n\t\t\t\tconst newRecord = this.handleSync(record, action);\n\n\t\t\t\tif (!hasId(newRecord)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst actionTime = hasUpdatedAt(newRecord) ? newRecord._updatedAt : startTime;\n\t\t\t\tchanges.push({\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tconst { _id } = newRecord;\n\t\t\t\t\t\tthis.collection.upsert({ _id } as Mongo.Selector<T>, newRecord);\n\t\t\t\t\t\tif (actionTime > this.updatedAt) {\n\t\t\t\t\t\t\tthis.updatedAt = actionTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(action, newRecord as any); // TODO: investigate why this is needed\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: actionTime.getTime(),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (data.remove && data.remove.length > 0) {\n\t\t\tthis.log(`${data.remove.length} records removed in sync`);\n\t\t\tfor (const record of data.remove) {\n\t\t\t\tconst action = 'removed';\n\t\t\t\tconst newRecord = this.handleSync(record, action);\n\n\t\t\t\tif (!hasId(newRecord) || !hasDeletedAt(newRecord)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst actionTime = newRecord._deletedAt;\n\t\t\t\tchanges.push({\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tconst { _id } = newRecord;\n\t\t\t\t\t\tthis.collection.remove({ _id } as Mongo.Selector<T>);\n\t\t\t\t\t\tif (actionTime > this.updatedAt) {\n\t\t\t\t\t\t\tthis.updatedAt = actionTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(action, newRecord as any); // TODO: investigate why this is needed\n\t\t\t\t\t},\n\t\t\t\t\ttimestamp: actionTime.getTime(),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tchanges\n\t\t\t.sort((a, b) => a.timestamp - b.timestamp)\n\t\t\t.forEach((c) => {\n\t\t\t\tc.action();\n\t\t\t});\n\n\t\tthis.updatedAt = this.updatedAt === lastTime ? startTime : this.updatedAt;\n\n\t\treturn true;\n\t}\n\n\tasync init() {\n\t\t// this.ready.set(false);\n\n\t\tif (await this.loadFromCache()) {\n\t\t\tthis.trySync();\n\t\t} else {\n\t\t\tawait this.loadFromServerAndPopulate();\n\t\t}\n\n\t\tthis.ready.set(true);\n\n\t\tCachedCollectionManager.onReconnect(() => {\n\t\t\tthis.trySync();\n\t\t});\n\n\t\treturn this.setupListener();\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"551bd525868c35bd3e61b85a9edd6d91d2deefff"}
