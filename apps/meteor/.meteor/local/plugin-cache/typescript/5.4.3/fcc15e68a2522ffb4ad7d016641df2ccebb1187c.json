{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/readMessages.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/readMessages.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/readMessages.ts","inputSourceMap":{"version":3,"file":"server/lib/readMessages.ts","sourceRoot":"","sources":["server/lib/readMessages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,iBAAiB,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEvE,OAAO,EAAE,4CAA4C,EAAE,MAAM,yCAAyC,CAAC;AACvG,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAEhD,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,GAAiB,EAAE,GAAiB,EAAE,WAAoB;IAC5F,MAAM,SAAS,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAEpD,MAAM,UAAU,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;IAC1D,MAAM,GAAG,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC;IACnF,IAAI,CAAC,GAAG,EAAE,CAAC;QACV,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;IAC/C,CAAC;IAED,6DAA6D;IAC7D,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,WAAW,IAAI,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAErF,MAAM,iBAAiB,GAAG,MAAM,aAAa,CAAC,0BAA0B,CAAC,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IACvG,IAAI,iBAAiB,CAAC,aAAa,EAAE,CAAC;QACrC,KAAK,4CAA4C,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7D,CAAC;IAED,MAAM,iBAAiB,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;IAEhD,MAAM,QAAQ,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC;IAClC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC;AACjE,CAAC","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { NotificationQueue, Subscriptions } from '@rocket.chat/models';\n\nimport { notifyOnSubscriptionChangedByRoomIdAndUserId } from '../../app/lib/server/lib/notifyListener';\nimport { callbacks } from '../../lib/callbacks';\n\nexport async function readMessages(rid: IRoom['_id'], uid: IUser['_id'], readThreads: boolean): Promise<void> {\n\tawait callbacks.run('beforeReadMessages', rid, uid);\n\n\tconst projection = { ls: 1, tunread: 1, alert: 1, ts: 1 };\n\tconst sub = await Subscriptions.findOneByRoomIdAndUserId(rid, uid, { projection });\n\tif (!sub) {\n\t\tthrow new Error('error-invalid-subscription');\n\t}\n\n\t// do not mark room as read if there are still unread threads\n\tconst alert = !!(sub.alert && !readThreads && sub.tunread && sub.tunread.length > 0);\n\n\tconst setAsReadResponse = await Subscriptions.setAsReadByRoomIdAndUserId(rid, uid, readThreads, alert);\n\tif (setAsReadResponse.modifiedCount) {\n\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(rid, uid);\n\t}\n\n\tawait NotificationQueue.clearQueueByUserId(uid);\n\n\tconst lastSeen = sub.ls || sub.ts;\n\tcallbacks.runAsync('afterReadMessages', rid, { uid, lastSeen });\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/readMessages.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/readMessages.ts","inputSourceMap":{"version":3,"file":"server/lib/readMessages.ts","sourceRoot":"","sources":["server/lib/readMessages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,iBAAiB,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEvE,OAAO,EAAE,4CAA4C,EAAE,MAAM,yCAAyC,CAAC;AACvG,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAEhD,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,GAAiB,EAAE,GAAiB,EAAE,WAAoB;IAC5F,MAAM,SAAS,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAEpD,MAAM,UAAU,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;IAC1D,MAAM,GAAG,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC;IACnF,IAAI,CAAC,GAAG,EAAE,CAAC;QACV,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;IAC/C,CAAC;IAED,6DAA6D;IAC7D,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,WAAW,IAAI,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAErF,MAAM,iBAAiB,GAAG,MAAM,aAAa,CAAC,0BAA0B,CAAC,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IACvG,IAAI,iBAAiB,CAAC,aAAa,EAAE,CAAC;QACrC,KAAK,4CAA4C,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC7D,CAAC;IAED,MAAM,iBAAiB,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;IAEhD,MAAM,QAAQ,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC;IAClC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC;AACjE,CAAC","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { NotificationQueue, Subscriptions } from '@rocket.chat/models';\n\nimport { notifyOnSubscriptionChangedByRoomIdAndUserId } from '../../app/lib/server/lib/notifyListener';\nimport { callbacks } from '../../lib/callbacks';\n\nexport async function readMessages(rid: IRoom['_id'], uid: IUser['_id'], readThreads: boolean): Promise<void> {\n\tawait callbacks.run('beforeReadMessages', rid, uid);\n\n\tconst projection = { ls: 1, tunread: 1, alert: 1, ts: 1 };\n\tconst sub = await Subscriptions.findOneByRoomIdAndUserId(rid, uid, { projection });\n\tif (!sub) {\n\t\tthrow new Error('error-invalid-subscription');\n\t}\n\n\t// do not mark room as read if there are still unread threads\n\tconst alert = !!(sub.alert && !readThreads && sub.tunread && sub.tunread.length > 0);\n\n\tconst setAsReadResponse = await Subscriptions.setAsReadByRoomIdAndUserId(rid, uid, readThreads, alert);\n\tif (setAsReadResponse.modifiedCount) {\n\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(rid, uid);\n\t}\n\n\tawait NotificationQueue.clearQueueByUserId(uid);\n\n\tconst lastSeen = sub.ls || sub.ts;\n\tcallbacks.runAsync('afterReadMessages', rid, { uid, lastSeen });\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      readMessages: () => readMessages\n    });\n    let NotificationQueue, Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      NotificationQueue(v) {\n        NotificationQueue = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 0);\n    let notifyOnSubscriptionChangedByRoomIdAndUserId;\n    module.link(\"../../app/lib/server/lib/notifyListener\", {\n      notifyOnSubscriptionChangedByRoomIdAndUserId(v) {\n        notifyOnSubscriptionChangedByRoomIdAndUserId = v;\n      }\n    }, 1);\n    let callbacks;\n    module.link(\"../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function readMessages(rid, uid, readThreads) {\n      await callbacks.run('beforeReadMessages', rid, uid);\n      const projection = {\n        ls: 1,\n        tunread: 1,\n        alert: 1,\n        ts: 1\n      };\n      const sub = await Subscriptions.findOneByRoomIdAndUserId(rid, uid, {\n        projection\n      });\n      if (!sub) {\n        throw new Error('error-invalid-subscription');\n      }\n      // do not mark room as read if there are still unread threads\n      const alert = !!(sub.alert && !readThreads && sub.tunread && sub.tunread.length > 0);\n      const setAsReadResponse = await Subscriptions.setAsReadByRoomIdAndUserId(rid, uid, readThreads, alert);\n      if (setAsReadResponse.modifiedCount) {\n        void notifyOnSubscriptionChangedByRoomIdAndUserId(rid, uid);\n      }\n      await NotificationQueue.clearQueueByUserId(uid);\n      const lastSeen = sub.ls || sub.ts;\n      callbacks.runAsync('afterReadMessages', rid, {\n        uid,\n        lastSeen\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","readMessages","NotificationQueue","Subscriptions","link","v","notifyOnSubscriptionChangedByRoomIdAndUserId","callbacks","__reifyWaitForDeps__","rid","uid","readThreads","run","projection","ls","tunread","alert","ts","sub","findOneByRoomIdAndUserId","Error","length","setAsReadResponse","setAsReadByRoomIdAndUserId","modifiedCount","clearQueueByUserId","lastSeen","runAsync","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/readMessages.ts"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { NotificationQueue, Subscriptions } from '@rocket.chat/models';\n\nimport { notifyOnSubscriptionChangedByRoomIdAndUserId } from '../../app/lib/server/lib/notifyListener';\nimport { callbacks } from '../../lib/callbacks';\n\nexport async function readMessages(rid: IRoom['_id'], uid: IUser['_id'], readThreads: boolean): Promise<void> {\n\tawait callbacks.run('beforeReadMessages', rid, uid);\n\n\tconst projection = { ls: 1, tunread: 1, alert: 1, ts: 1 };\n\tconst sub = await Subscriptions.findOneByRoomIdAndUserId(rid, uid, { projection });\n\tif (!sub) {\n\t\tthrow new Error('error-invalid-subscription');\n\t}\n\n\t// do not mark room as read if there are still unread threads\n\tconst alert = !!(sub.alert && !readThreads && sub.tunread && sub.tunread.length > 0);\n\n\tconst setAsReadResponse = await Subscriptions.setAsReadByRoomIdAndUserId(rid, uid, readThreads, alert);\n\tif (setAsReadResponse.modifiedCount) {\n\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(rid, uid);\n\t}\n\n\tawait NotificationQueue.clearQueueByUserId(uid);\n\n\tconst lastSeen = sub.ls || sub.ts;\n\tcallbacks.runAsync('afterReadMessages', rid, { uid, lastSeen });\n}\n"],"mappings":";;;IACAA,MAAA,CAAOC,MAAE;MAAAC,YAAiB,EAAEA,CAAA,KAAAA;IAAe;IAAA,IAAMC,iBAAA,EAAAC,aAAsB;IAAAJ,MAAA,CAAAK,IAAA;MAAAF,kBAAAG,CAAA;QAAAH,iBAAA,GAAAG,CAAA;MAAA;MAAAF,cAAAE,CAAA;QAAAF,aAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,4CAAA;IAAAP,MAAA,CAAAK,IAAA;MAAAE,6CAAAD,CAAA;QAAAC,4CAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,SAAA;IAAAR,MAAA,CAAAK,IAAA;MAAAG,UAAAF,CAAA;QAAAE,SAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,oBAAA,WAAAA,oBAAA;IAKhE,eAAeP,YAAYA,CAACQ,GAAiB,EAAEC,GAAiB,EAAEC,WAAoB;MAC5F,MAAMJ,SAAS,CAACK,GAAG,CAAC,oBAAoB,EAAEH,GAAG,EAAEC,GAAG,CAAC;MAEnD,MAAMG,UAAU,GAAG;QAAEC,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAC,CAAE;MACzD,MAAMC,GAAG,GAAG,MAAMf,aAAa,CAACgB,wBAAwB,CAACV,GAAG,EAAEC,GAAG,EAAE;QAAEG;MAAU,CAAE,CAAC;MAClF,IAAI,CAACK,GAAG,EAAE;QACT,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC;MAC9C;MAEA;MACA,MAAMJ,KAAK,GAAG,CAAC,EAAEE,GAAG,CAACF,KAAK,IAAI,CAACL,WAAW,IAAIO,GAAG,CAACH,OAAO,IAAIG,GAAG,CAACH,OAAO,CAACM,MAAM,GAAG,CAAC,CAAC;MAEpF,MAAMC,iBAAiB,GAAG,MAAMnB,aAAa,CAACoB,0BAA0B,CAACd,GAAG,EAAEC,GAAG,EAAEC,WAAW,EAAEK,KAAK,CAAC;MACtG,IAAIM,iBAAiB,CAACE,aAAa,EAAE;QACpC,KAAKlB,4CAA4C,CAACG,GAAG,EAAEC,GAAG,CAAC;MAC5D;MAEA,MAAMR,iBAAiB,CAACuB,kBAAkB,CAACf,GAAG,CAAC;MAE/C,MAAMgB,QAAQ,GAAGR,GAAG,CAACJ,EAAE,IAAII,GAAG,CAACD,EAAE;MACjCV,SAAS,CAACoB,QAAQ,CAAC,mBAAmB,EAAElB,GAAG,EAAE;QAAEC,GAAG;QAAEgB;MAAQ,CAAE,CAAC;IAChE;IAACE,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"fcc15e68a2522ffb4ad7d016641df2ccebb1187c"}
