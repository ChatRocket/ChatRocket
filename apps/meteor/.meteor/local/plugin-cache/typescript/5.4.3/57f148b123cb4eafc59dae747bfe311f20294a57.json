{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveMentions.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/messages/hooks/BeforeSaveMentions.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveMentions.ts","inputSourceMap":{"version":3,"file":"server/services/messages/hooks/BeforeSaveMentions.ts","sourceRoot":"","sources":["server/services/messages/hooks/BeforeSaveMentions.ts"],"names":[],"mappings":"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","sourcesContent":["import { api, Team, MeteorError } from '@rocket.chat/core-services';\nimport type { IMessage, IUser, IRoom } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users, Rooms } from '@rocket.chat/models';\n\nimport { MentionsServer } from '../../../../app/mentions/server/Mentions';\nimport { settings } from '../../../../app/settings/server';\nimport { i18n } from '../../../lib/i18n';\n\nclass MentionQueries {\n\tasync getUsers(usernames: string[]): Promise<{ type: 'team' | 'user'; _id: string; username?: string; name?: string }[]> {\n\t\tconst uniqueUsernames = [...new Set(usernames)];\n\n\t\tconst teams = await Team.listByNames(uniqueUsernames, { projection: { name: 1 } });\n\n\t\tconst users = await Users.find<Pick<IUser, '_id' | 'username' | 'name'>>(\n\t\t\t{ username: { $in: uniqueUsernames } },\n\t\t\t{ projection: { _id: 1, username: 1, name: 1 } },\n\t\t).toArray();\n\n\t\tconst taggedUsers = users.map((user) => ({\n\t\t\t...user,\n\t\t\ttype: 'user' as const,\n\t\t}));\n\n\t\tif (settings.get<boolean>('Troubleshoot_Disable_Teams_Mention')) {\n\t\t\treturn taggedUsers;\n\t\t}\n\n\t\tconst taggedTeams = teams.map((team) => ({\n\t\t\t...team,\n\t\t\ttype: 'team' as const,\n\t\t}));\n\n\t\treturn [...taggedUsers, ...taggedTeams];\n\t}\n\n\tasync getUser(userId: string): Promise<IUser | null> {\n\t\treturn Users.findOneById(userId);\n\t}\n\n\tgetTotalChannelMembers(rid: string): Promise<number> {\n\t\treturn Subscriptions.countByRoomId(rid);\n\t}\n\n\tgetChannels(channels: string[]): Promise<Pick<IRoom, '_id' | 'name' | 'fname' | 'federated'>[]> {\n\t\treturn Rooms.find(\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{\n\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t{ $and: [{ $or: [{ federated: { $exists: false } }, { federated: false }], name: { $in: [...new Set(channels)] } }] },\n\t\t\t\t\t\t\t{ federated: true, fname: { $in: [...new Set(channels)] } },\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tt: { $in: ['c', 'p'] },\n\t\t\t},\n\t\t\t{ projection: { _id: 1, name: 1, fname: 1, federated: 1 } },\n\t\t).toArray();\n\t}\n}\n\nconst queries = new MentionQueries();\n\nexport const mentionServer = new MentionsServer({\n\tpattern: () => settings.get<string>('UTF8_User_Names_Validation'),\n\tmessageMaxAll: () => settings.get<number>('Message_MaxAll'),\n\tgetUsers: async (usernames: string[]) => queries.getUsers(usernames),\n\tgetUser: async (userId: string) => queries.getUser(userId),\n\tgetTotalChannelMembers: (rid: string) => queries.getTotalChannelMembers(rid),\n\tgetChannels: (channels: string[]) => queries.getChannels(channels),\n\tasync onMaxRoomMembersExceeded({ sender, rid }: { sender: IMessage['u']; rid: string }): Promise<void> {\n\t\t// Get the language of the user for the error notification.\n\t\tconst { language } = (await this.getUser(sender._id)) || {};\n\t\tconst msg = i18n.t('Group_mentions_disabled_x_members', { total: this.messageMaxAll(), lng: language });\n\n\t\tvoid api.broadcast('notify.ephemeralMessage', sender._id, rid, {\n\t\t\tmsg,\n\t\t});\n\n\t\t// Also throw to stop propagation of 'sendMessage'.\n\t\tthrow new MeteorError('error-action-not-allowed', msg, {\n\t\t\tmethod: 'filterATAllTag',\n\t\t\taction: msg,\n\t\t});\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveMentions.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/messages/hooks/BeforeSaveMentions.ts","inputSourceMap":{"version":3,"file":"server/services/messages/hooks/BeforeSaveMentions.ts","sourceRoot":"","sources":["server/services/messages/hooks/BeforeSaveMentions.ts"],"names":[],"mappings":"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","sourcesContent":["import { api, Team, MeteorError } from '@rocket.chat/core-services';\nimport type { IMessage, IUser, IRoom } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users, Rooms } from '@rocket.chat/models';\n\nimport { MentionsServer } from '../../../../app/mentions/server/Mentions';\nimport { settings } from '../../../../app/settings/server';\nimport { i18n } from '../../../lib/i18n';\n\nclass MentionQueries {\n\tasync getUsers(usernames: string[]): Promise<{ type: 'team' | 'user'; _id: string; username?: string; name?: string }[]> {\n\t\tconst uniqueUsernames = [...new Set(usernames)];\n\n\t\tconst teams = await Team.listByNames(uniqueUsernames, { projection: { name: 1 } });\n\n\t\tconst users = await Users.find<Pick<IUser, '_id' | 'username' | 'name'>>(\n\t\t\t{ username: { $in: uniqueUsernames } },\n\t\t\t{ projection: { _id: 1, username: 1, name: 1 } },\n\t\t).toArray();\n\n\t\tconst taggedUsers = users.map((user) => ({\n\t\t\t...user,\n\t\t\ttype: 'user' as const,\n\t\t}));\n\n\t\tif (settings.get<boolean>('Troubleshoot_Disable_Teams_Mention')) {\n\t\t\treturn taggedUsers;\n\t\t}\n\n\t\tconst taggedTeams = teams.map((team) => ({\n\t\t\t...team,\n\t\t\ttype: 'team' as const,\n\t\t}));\n\n\t\treturn [...taggedUsers, ...taggedTeams];\n\t}\n\n\tasync getUser(userId: string): Promise<IUser | null> {\n\t\treturn Users.findOneById(userId);\n\t}\n\n\tgetTotalChannelMembers(rid: string): Promise<number> {\n\t\treturn Subscriptions.countByRoomId(rid);\n\t}\n\n\tgetChannels(channels: string[]): Promise<Pick<IRoom, '_id' | 'name' | 'fname' | 'federated'>[]> {\n\t\treturn Rooms.find(\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{\n\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t{ $and: [{ $or: [{ federated: { $exists: false } }, { federated: false }], name: { $in: [...new Set(channels)] } }] },\n\t\t\t\t\t\t\t{ federated: true, fname: { $in: [...new Set(channels)] } },\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tt: { $in: ['c', 'p'] },\n\t\t\t},\n\t\t\t{ projection: { _id: 1, name: 1, fname: 1, federated: 1 } },\n\t\t).toArray();\n\t}\n}\n\nconst queries = new MentionQueries();\n\nexport const mentionServer = new MentionsServer({\n\tpattern: () => settings.get<string>('UTF8_User_Names_Validation'),\n\tmessageMaxAll: () => settings.get<number>('Message_MaxAll'),\n\tgetUsers: async (usernames: string[]) => queries.getUsers(usernames),\n\tgetUser: async (userId: string) => queries.getUser(userId),\n\tgetTotalChannelMembers: (rid: string) => queries.getTotalChannelMembers(rid),\n\tgetChannels: (channels: string[]) => queries.getChannels(channels),\n\tasync onMaxRoomMembersExceeded({ sender, rid }: { sender: IMessage['u']; rid: string }): Promise<void> {\n\t\t// Get the language of the user for the error notification.\n\t\tconst { language } = (await this.getUser(sender._id)) || {};\n\t\tconst msg = i18n.t('Group_mentions_disabled_x_members', { total: this.messageMaxAll(), lng: language });\n\n\t\tvoid api.broadcast('notify.ephemeralMessage', sender._id, rid, {\n\t\t\tmsg,\n\t\t});\n\n\t\t// Also throw to stop propagation of 'sendMessage'.\n\t\tthrow new MeteorError('error-action-not-allowed', msg, {\n\t\t\tmethod: 'filterATAllTag',\n\t\t\taction: msg,\n\t\t});\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      mentionServer: () => mentionServer\n    });\n    let api, Team, MeteorError;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      },\n      Team(v) {\n        Team = v;\n      },\n      MeteorError(v) {\n        MeteorError = v;\n      }\n    }, 0);\n    let Subscriptions, Users, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 1);\n    let MentionsServer;\n    module.link(\"../../../../app/mentions/server/Mentions\", {\n      MentionsServer(v) {\n        MentionsServer = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    let i18n;\n    module.link(\"../../../lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class MentionQueries {\n      async getUsers(usernames) {\n        const uniqueUsernames = [...new Set(usernames)];\n        const teams = await Team.listByNames(uniqueUsernames, {\n          projection: {\n            name: 1\n          }\n        });\n        const users = await Users.find({\n          username: {\n            $in: uniqueUsernames\n          }\n        }, {\n          projection: {\n            _id: 1,\n            username: 1,\n            name: 1\n          }\n        }).toArray();\n        const taggedUsers = users.map(user => _objectSpread(_objectSpread({}, user), {}, {\n          type: 'user'\n        }));\n        if (settings.get('Troubleshoot_Disable_Teams_Mention')) {\n          return taggedUsers;\n        }\n        const taggedTeams = teams.map(team => _objectSpread(_objectSpread({}, team), {}, {\n          type: 'team'\n        }));\n        return [...taggedUsers, ...taggedTeams];\n      }\n      async getUser(userId) {\n        return Users.findOneById(userId);\n      }\n      getTotalChannelMembers(rid) {\n        return Subscriptions.countByRoomId(rid);\n      }\n      getChannels(channels) {\n        return Rooms.find({\n          $and: [{\n            $or: [{\n              $and: [{\n                $or: [{\n                  federated: {\n                    $exists: false\n                  }\n                }, {\n                  federated: false\n                }],\n                name: {\n                  $in: [...new Set(channels)]\n                }\n              }]\n            }, {\n              federated: true,\n              fname: {\n                $in: [...new Set(channels)]\n              }\n            }]\n          }],\n          t: {\n            $in: ['c', 'p']\n          }\n        }, {\n          projection: {\n            _id: 1,\n            name: 1,\n            fname: 1,\n            federated: 1\n          }\n        }).toArray();\n      }\n    }\n    const queries = new MentionQueries();\n    const mentionServer = new MentionsServer({\n      pattern: () => settings.get('UTF8_User_Names_Validation'),\n      messageMaxAll: () => settings.get('Message_MaxAll'),\n      getUsers: async usernames => queries.getUsers(usernames),\n      getUser: async userId => queries.getUser(userId),\n      getTotalChannelMembers: rid => queries.getTotalChannelMembers(rid),\n      getChannels: channels => queries.getChannels(channels),\n      async onMaxRoomMembersExceeded(_ref) {\n        let {\n          sender,\n          rid\n        } = _ref;\n        // Get the language of the user for the error notification.\n        const {\n          language\n        } = (await this.getUser(sender._id)) || {};\n        const msg = i18n.t('Group_mentions_disabled_x_members', {\n          total: this.messageMaxAll(),\n          lng: language\n        });\n        void api.broadcast('notify.ephemeralMessage', sender._id, rid, {\n          msg\n        });\n        // Also throw to stop propagation of 'sendMessage'.\n        throw new MeteorError('error-action-not-allowed', msg, {\n          method: 'filterATAllTag',\n          action: msg\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","mentionServer","api","Team","MeteorError","Subscriptions","Users","Rooms","MentionsServer","settings","i18n","__reifyWaitForDeps__","MentionQueries","getUsers","usernames","uniqueUsernames","Set","teams","listByNames","projection","name","users","find","username","$in","_id","toArray","taggedUsers","map","user","type","get","taggedTeams","team","getUser","userId","findOneById","getTotalChannelMembers","rid","countByRoomId","getChannels","channels","$and","$or","federated","$exists","fname","t","queries","pattern","messageMaxAll","onMaxRoomMembersExceeded","_ref","sender","language","msg","total","lng","broadcast","method","action","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/messages/hooks/BeforeSaveMentions.ts"],"sourcesContent":["import { api, Team, MeteorError } from '@rocket.chat/core-services';\nimport type { IMessage, IUser, IRoom } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users, Rooms } from '@rocket.chat/models';\n\nimport { MentionsServer } from '../../../../app/mentions/server/Mentions';\nimport { settings } from '../../../../app/settings/server';\nimport { i18n } from '../../../lib/i18n';\n\nclass MentionQueries {\n\tasync getUsers(usernames: string[]): Promise<{ type: 'team' | 'user'; _id: string; username?: string; name?: string }[]> {\n\t\tconst uniqueUsernames = [...new Set(usernames)];\n\n\t\tconst teams = await Team.listByNames(uniqueUsernames, { projection: { name: 1 } });\n\n\t\tconst users = await Users.find<Pick<IUser, '_id' | 'username' | 'name'>>(\n\t\t\t{ username: { $in: uniqueUsernames } },\n\t\t\t{ projection: { _id: 1, username: 1, name: 1 } },\n\t\t).toArray();\n\n\t\tconst taggedUsers = users.map((user) => ({\n\t\t\t...user,\n\t\t\ttype: 'user' as const,\n\t\t}));\n\n\t\tif (settings.get<boolean>('Troubleshoot_Disable_Teams_Mention')) {\n\t\t\treturn taggedUsers;\n\t\t}\n\n\t\tconst taggedTeams = teams.map((team) => ({\n\t\t\t...team,\n\t\t\ttype: 'team' as const,\n\t\t}));\n\n\t\treturn [...taggedUsers, ...taggedTeams];\n\t}\n\n\tasync getUser(userId: string): Promise<IUser | null> {\n\t\treturn Users.findOneById(userId);\n\t}\n\n\tgetTotalChannelMembers(rid: string): Promise<number> {\n\t\treturn Subscriptions.countByRoomId(rid);\n\t}\n\n\tgetChannels(channels: string[]): Promise<Pick<IRoom, '_id' | 'name' | 'fname' | 'federated'>[]> {\n\t\treturn Rooms.find(\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{\n\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t{ $and: [{ $or: [{ federated: { $exists: false } }, { federated: false }], name: { $in: [...new Set(channels)] } }] },\n\t\t\t\t\t\t\t{ federated: true, fname: { $in: [...new Set(channels)] } },\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tt: { $in: ['c', 'p'] },\n\t\t\t},\n\t\t\t{ projection: { _id: 1, name: 1, fname: 1, federated: 1 } },\n\t\t).toArray();\n\t}\n}\n\nconst queries = new MentionQueries();\n\nexport const mentionServer = new MentionsServer({\n\tpattern: () => settings.get<string>('UTF8_User_Names_Validation'),\n\tmessageMaxAll: () => settings.get<number>('Message_MaxAll'),\n\tgetUsers: async (usernames: string[]) => queries.getUsers(usernames),\n\tgetUser: async (userId: string) => queries.getUser(userId),\n\tgetTotalChannelMembers: (rid: string) => queries.getTotalChannelMembers(rid),\n\tgetChannels: (channels: string[]) => queries.getChannels(channels),\n\tasync onMaxRoomMembersExceeded({ sender, rid }: { sender: IMessage['u']; rid: string }): Promise<void> {\n\t\t// Get the language of the user for the error notification.\n\t\tconst { language } = (await this.getUser(sender._id)) || {};\n\t\tconst msg = i18n.t('Group_mentions_disabled_x_members', { total: this.messageMaxAll(), lng: language });\n\n\t\tvoid api.broadcast('notify.ephemeralMessage', sender._id, rid, {\n\t\t\tmsg,\n\t\t});\n\n\t\t// Also throw to stop propagation of 'sendMessage'.\n\t\tthrow new MeteorError('error-action-not-allowed', msg, {\n\t\t\tmethod: 'filterATAllTag',\n\t\t\taction: msg,\n\t\t});\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"57f148b123cb4eafc59dae747bfe311f20294a57"}
