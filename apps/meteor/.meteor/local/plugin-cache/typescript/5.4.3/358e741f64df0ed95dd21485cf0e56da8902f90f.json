{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/hooks/leadCapture.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/hooks/leadCapture.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/hooks/leadCapture.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/hooks/leadCapture.ts","sourceRoot":"","sources":["app/livechat/server/hooks/leadCapture.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAC5D,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAEvD,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAEpD,SAAS,eAAe,CAAC,OAAiB,EAAE,IAAsB;IACjE,gDAAgD;IAChD,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC;QAC9B,OAAO,KAAK,CAAC;IACd,CAAC;IAED,8CAA8C;IAC9C,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,KAAK,WAAW,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;QAClF,OAAO,KAAK,CAAC;IACd,CAAC;IAED,gFAAgF;IAChF,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACpB,OAAO,KAAK,CAAC;IACd,CAAC;IAED,+FAA+F;IAC/F,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC;QACf,OAAO,KAAK,CAAC;IACd,CAAC;IAED,OAAO,IAAI,CAAC;AACb,CAAC;AAED,SAAS,CAAC,GAAG,CACZ,6BAA6B,EAC7B,KAAK,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC3B,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAS,2BAA2B,CAAC,EAAE,GAAG,CAAC,CAAC;IACvF,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IAEzE,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAS,2BAA2B,CAAC,EAAE,IAAI,CAAC,CAAC;IACxF,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzE,IAAI,SAAS,IAAI,SAAS,EAAE,CAAC;QAC5B,MAAM,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAEjF,MAAM,SAAS,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,EACD,SAAS,CAAC,QAAQ,CAAC,GAAG,EACtB,aAAa,CACb,CAAC","sourcesContent":["import type { IMessage, IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { isEditedMessage } from '@rocket.chat/core-typings';\nimport { LivechatVisitors } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { settings } from '../../../settings/server';\n\nfunction validateMessage(message: IMessage, room: IOmnichannelRoom) {\n\t// skips this callback if the message was edited\n\tif (isEditedMessage(message)) {\n\t\treturn false;\n\t}\n\n\t// message valid only if it is a livechat room\n\tif (!(typeof room.t !== 'undefined' && room.t === 'l' && room.v && room.v.token)) {\n\t\treturn false;\n\t}\n\n\t// if the message hasn't a token, it was NOT sent from the visitor, so ignore it\n\tif (!message.token) {\n\t\treturn false;\n\t}\n\n\t// if the message has a type means it is a special message (like the closing comment), so skips\n\tif (message.t) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\ncallbacks.add(\n\t'afterOmnichannelSaveMessage',\n\tasync (message, { room }) => {\n\t\tif (!validateMessage(message, room)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst phoneRegexp = new RegExp(settings.get<string>('Livechat_lead_phone_regex'), 'g');\n\t\tconst msgPhones = message.msg.match(phoneRegexp)?.filter(isTruthy) || [];\n\n\t\tconst emailRegexp = new RegExp(settings.get<string>('Livechat_lead_email_regex'), 'gi');\n\t\tconst msgEmails = message.msg.match(emailRegexp)?.filter(isTruthy) || [];\n\t\tif (msgEmails || msgPhones) {\n\t\t\tawait LivechatVisitors.saveGuestEmailPhoneById(room.v._id, msgEmails, msgPhones);\n\n\t\t\tawait callbacks.run('livechat.leadCapture', room);\n\t\t}\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'leadCapture',\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/hooks/leadCapture.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/hooks/leadCapture.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/hooks/leadCapture.ts","sourceRoot":"","sources":["app/livechat/server/hooks/leadCapture.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAC5D,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAEvD,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAEpD,SAAS,eAAe,CAAC,OAAiB,EAAE,IAAsB;IACjE,gDAAgD;IAChD,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC;QAC9B,OAAO,KAAK,CAAC;IACd,CAAC;IAED,8CAA8C;IAC9C,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,KAAK,WAAW,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;QAClF,OAAO,KAAK,CAAC;IACd,CAAC;IAED,gFAAgF;IAChF,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACpB,OAAO,KAAK,CAAC;IACd,CAAC;IAED,+FAA+F;IAC/F,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC;QACf,OAAO,KAAK,CAAC;IACd,CAAC;IAED,OAAO,IAAI,CAAC;AACb,CAAC;AAED,SAAS,CAAC,GAAG,CACZ,6BAA6B,EAC7B,KAAK,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC3B,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;QACrC,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAS,2BAA2B,CAAC,EAAE,GAAG,CAAC,CAAC;IACvF,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IAEzE,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAS,2BAA2B,CAAC,EAAE,IAAI,CAAC,CAAC;IACxF,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzE,IAAI,SAAS,IAAI,SAAS,EAAE,CAAC;QAC5B,MAAM,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAEjF,MAAM,SAAS,CAAC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,EACD,SAAS,CAAC,QAAQ,CAAC,GAAG,EACtB,aAAa,CACb,CAAC","sourcesContent":["import type { IMessage, IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { isEditedMessage } from '@rocket.chat/core-typings';\nimport { LivechatVisitors } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { settings } from '../../../settings/server';\n\nfunction validateMessage(message: IMessage, room: IOmnichannelRoom) {\n\t// skips this callback if the message was edited\n\tif (isEditedMessage(message)) {\n\t\treturn false;\n\t}\n\n\t// message valid only if it is a livechat room\n\tif (!(typeof room.t !== 'undefined' && room.t === 'l' && room.v && room.v.token)) {\n\t\treturn false;\n\t}\n\n\t// if the message hasn't a token, it was NOT sent from the visitor, so ignore it\n\tif (!message.token) {\n\t\treturn false;\n\t}\n\n\t// if the message has a type means it is a special message (like the closing comment), so skips\n\tif (message.t) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\ncallbacks.add(\n\t'afterOmnichannelSaveMessage',\n\tasync (message, { room }) => {\n\t\tif (!validateMessage(message, room)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst phoneRegexp = new RegExp(settings.get<string>('Livechat_lead_phone_regex'), 'g');\n\t\tconst msgPhones = message.msg.match(phoneRegexp)?.filter(isTruthy) || [];\n\n\t\tconst emailRegexp = new RegExp(settings.get<string>('Livechat_lead_email_regex'), 'gi');\n\t\tconst msgEmails = message.msg.match(emailRegexp)?.filter(isTruthy) || [];\n\t\tif (msgEmails || msgPhones) {\n\t\t\tawait LivechatVisitors.saveGuestEmailPhoneById(room.v._id, msgEmails, msgPhones);\n\n\t\t\tawait callbacks.run('livechat.leadCapture', room);\n\t\t}\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'leadCapture',\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let isEditedMessage;\n    module.link(\"@rocket.chat/core-typings\", {\n      isEditedMessage(v) {\n        isEditedMessage = v;\n      }\n    }, 0);\n    let LivechatVisitors;\n    module.link(\"@rocket.chat/models\", {\n      LivechatVisitors(v) {\n        LivechatVisitors = v;\n      }\n    }, 1);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 2);\n    let isTruthy;\n    module.link(\"../../../../lib/isTruthy\", {\n      isTruthy(v) {\n        isTruthy = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    function validateMessage(message, room) {\n      // skips this callback if the message was edited\n      if (isEditedMessage(message)) {\n        return false;\n      }\n      // message valid only if it is a livechat room\n      if (!(typeof room.t !== 'undefined' && room.t === 'l' && room.v && room.v.token)) {\n        return false;\n      }\n      // if the message hasn't a token, it was NOT sent from the visitor, so ignore it\n      if (!message.token) {\n        return false;\n      }\n      // if the message has a type means it is a special message (like the closing comment), so skips\n      if (message.t) {\n        return false;\n      }\n      return true;\n    }\n    callbacks.add('afterOmnichannelSaveMessage', async (message, _ref) => {\n      var _message$msg$match, _message$msg$match2;\n      let {\n        room\n      } = _ref;\n      if (!validateMessage(message, room)) {\n        return message;\n      }\n      const phoneRegexp = new RegExp(settings.get('Livechat_lead_phone_regex'), 'g');\n      const msgPhones = ((_message$msg$match = message.msg.match(phoneRegexp)) === null || _message$msg$match === void 0 ? void 0 : _message$msg$match.filter(isTruthy)) || [];\n      const emailRegexp = new RegExp(settings.get('Livechat_lead_email_regex'), 'gi');\n      const msgEmails = ((_message$msg$match2 = message.msg.match(emailRegexp)) === null || _message$msg$match2 === void 0 ? void 0 : _message$msg$match2.filter(isTruthy)) || [];\n      if (msgEmails || msgPhones) {\n        await LivechatVisitors.saveGuestEmailPhoneById(room.v._id, msgEmails, msgPhones);\n        await callbacks.run('livechat.leadCapture', room);\n      }\n      return message;\n    }, callbacks.priority.LOW, 'leadCapture');\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["isEditedMessage","module","link","v","LivechatVisitors","callbacks","isTruthy","settings","__reifyWaitForDeps__","validateMessage","message","room","t","token","add","_ref","_message$msg$match","_message$msg$match2","phoneRegexp","RegExp","get","msgPhones","msg","match","filter","emailRegexp","msgEmails","saveGuestEmailPhoneById","_id","run","priority","LOW","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/hooks/leadCapture.ts"],"sourcesContent":["import type { IMessage, IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { isEditedMessage } from '@rocket.chat/core-typings';\nimport { LivechatVisitors } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { settings } from '../../../settings/server';\n\nfunction validateMessage(message: IMessage, room: IOmnichannelRoom) {\n\t// skips this callback if the message was edited\n\tif (isEditedMessage(message)) {\n\t\treturn false;\n\t}\n\n\t// message valid only if it is a livechat room\n\tif (!(typeof room.t !== 'undefined' && room.t === 'l' && room.v && room.v.token)) {\n\t\treturn false;\n\t}\n\n\t// if the message hasn't a token, it was NOT sent from the visitor, so ignore it\n\tif (!message.token) {\n\t\treturn false;\n\t}\n\n\t// if the message has a type means it is a special message (like the closing comment), so skips\n\tif (message.t) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\ncallbacks.add(\n\t'afterOmnichannelSaveMessage',\n\tasync (message, { room }) => {\n\t\tif (!validateMessage(message, room)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst phoneRegexp = new RegExp(settings.get<string>('Livechat_lead_phone_regex'), 'g');\n\t\tconst msgPhones = message.msg.match(phoneRegexp)?.filter(isTruthy) || [];\n\n\t\tconst emailRegexp = new RegExp(settings.get<string>('Livechat_lead_email_regex'), 'gi');\n\t\tconst msgEmails = message.msg.match(emailRegexp)?.filter(isTruthy) || [];\n\t\tif (msgEmails || msgPhones) {\n\t\t\tawait LivechatVisitors.saveGuestEmailPhoneById(room.v._id, msgEmails, msgPhones);\n\n\t\t\tawait callbacks.run('livechat.leadCapture', room);\n\t\t}\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'leadCapture',\n);\n"],"mappings":";;;IACA,IAAAA,eAAS;IAAAC,MAAiB,CAAAC,IAAA,CAAM,2BAA2B,EAAC;MAAAF,gBAAAG,CAAA;QAAAH,eAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,gBAAA;IAAAH,MAAA,CAAAC,IAAA;MAAAE,iBAAAD,CAAA;QAAAC,gBAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,SAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAG,UAAAF,CAAA;QAAAE,SAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,QAAA;IAAAL,MAAA,CAAAC,IAAA;MAAAI,SAAAH,CAAA;QAAAG,QAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,QAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,SAAAJ,CAAA;QAAAI,QAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,oBAAA,WAAAA,oBAAA;IAO5D,SAASC,eAAeA,CAACC,OAAiB,EAAEC,IAAsB;MACjE;MACA,IAAIX,eAAe,CAACU,OAAO,CAAC,EAAE;QAC7B,OAAO,KAAK;MACb;MAEA;MACA,IAAI,EAAE,OAAOC,IAAI,CAACC,CAAC,KAAK,WAAW,IAAID,IAAI,CAACC,CAAC,KAAK,GAAG,IAAID,IAAI,CAACR,CAAC,IAAIQ,IAAI,CAACR,CAAC,CAACU,KAAK,CAAC,EAAE;QACjF,OAAO,KAAK;MACb;MAEA;MACA,IAAI,CAACH,OAAO,CAACG,KAAK,EAAE;QACnB,OAAO,KAAK;MACb;MAEA;MACA,IAAIH,OAAO,CAACE,CAAC,EAAE;QACd,OAAO,KAAK;MACb;MAEA,OAAO,IAAI;IACZ;IAEAP,SAAS,CAACS,GAAG,CACZ,6BAA6B,EAC7B,OAAOJ,OAAO,EAAAK,IAAA,KAAc;MAAA,IAAAC,kBAAA,EAAAC,mBAAA;MAAA,IAAZ;QAAEN;MAAI,CAAE,GAAAI,IAAA;MACvB,IAAI,CAACN,eAAe,CAACC,OAAO,EAAEC,IAAI,CAAC,EAAE;QACpC,OAAOD,OAAO;MACf;MAEA,MAAMQ,WAAW,GAAG,IAAIC,MAAM,CAACZ,QAAQ,CAACa,GAAG,CAAS,2BAA2B,CAAC,EAAE,GAAG,CAAC;MACtF,MAAMC,SAAS,GAAG,EAAAL,kBAAA,GAAAN,OAAO,CAACY,GAAG,CAACC,KAAK,CAACL,WAAW,CAAC,cAAAF,kBAAA,uBAA9BA,kBAAA,CAAgCQ,MAAM,CAAClB,QAAQ,CAAC,KAAI,EAAE;MAExE,MAAMmB,WAAW,GAAG,IAAIN,MAAM,CAACZ,QAAQ,CAACa,GAAG,CAAS,2BAA2B,CAAC,EAAE,IAAI,CAAC;MACvF,MAAMM,SAAS,GAAG,EAAAT,mBAAA,GAAAP,OAAO,CAACY,GAAG,CAACC,KAAK,CAACE,WAAW,CAAC,cAAAR,mBAAA,uBAA9BA,mBAAA,CAAgCO,MAAM,CAAClB,QAAQ,CAAC,KAAI,EAAE;MACxE,IAAIoB,SAAS,IAAIL,SAAS,EAAE;QAC3B,MAAMjB,gBAAgB,CAACuB,uBAAuB,CAAChB,IAAI,CAACR,CAAC,CAACyB,GAAG,EAAEF,SAAS,EAAEL,SAAS,CAAC;QAEhF,MAAMhB,SAAS,CAACwB,GAAG,CAAC,sBAAsB,EAAElB,IAAI,CAAC;MAClD;MAEA,OAAOD,OAAO;IACf,CAAC,EACDL,SAAS,CAACyB,QAAQ,CAACC,GAAG,EACtB,aAAa,CACb;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"358e741f64df0ed95dd21485cf0e56da8902f90f"}
