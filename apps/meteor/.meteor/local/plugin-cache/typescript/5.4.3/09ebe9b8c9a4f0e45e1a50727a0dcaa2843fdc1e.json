{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/apps/storage/AppRealLogStorage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/apps/storage/AppRealLogStorage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/apps/storage/AppRealLogStorage.ts","inputSourceMap":{"version":3,"file":"ee/server/apps/storage/AppRealLogStorage.ts","sourceRoot":"","sources":["ee/server/apps/storage/AppRealLogStorage.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,MAAM,yCAAyC,CAAC;AACxE,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;AAG9D,MAAM,OAAO,iBAAkB,SAAQ,aAAa;IAC/B;IAApB,YAAoB,EAAkB;QACrC,KAAK,CAAC,SAAS,CAAC,CAAC;QADE,OAAE,GAAF,EAAE,CAAgB;IAEtC,CAAC;IAED,KAAK,CAAC,IAAI,CACT,KAEC,EACD,EAAE,MAAM,EAAE,GAAG,OAAO,EAA6B;QAEjD,OAAO,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC1F,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,QAA6B;QAC/C,QAAQ,CAAC,UAAU,GAAG,cAAc,CAAC,EAAE,EAAE,CAAC;QAE1C,MAAM,EAAE,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC;QAE1D,OAAO,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,KAAa;QAChC,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,KAAa;QACnC,MAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACpC,CAAC;CACD","sourcesContent":["import type { ILoggerStorageEntry } from '@rocket.chat/apps-engine/server/logging';\nimport type { IAppLogStorageFindOptions } from '@rocket.chat/apps-engine/server/storage';\nimport { AppLogStorage } from '@rocket.chat/apps-engine/server/storage';\nimport { InstanceStatus } from '@rocket.chat/instance-status';\nimport type { AppLogs } from '@rocket.chat/models';\n\nexport class AppRealLogStorage extends AppLogStorage {\n\tconstructor(private db: typeof AppLogs) {\n\t\tsuper('mongodb');\n\t}\n\n\tasync find(\n\t\tquery: {\n\t\t\t[field: string]: any;\n\t\t},\n\t\t{ fields, ...options }: IAppLogStorageFindOptions,\n\t): Promise<ILoggerStorageEntry[]> {\n\t\treturn this.db.findPaginated(query, { projection: fields, ...options }).cursor.toArray();\n\t}\n\n\tasync storeEntries(logEntry: ILoggerStorageEntry): Promise<ILoggerStorageEntry> {\n\t\tlogEntry.instanceId = InstanceStatus.id();\n\n\t\tconst id = (await this.db.insertOne(logEntry)).insertedId;\n\n\t\treturn this.db.findOneById(id);\n\t}\n\n\tasync getEntriesFor(appId: string): Promise<ILoggerStorageEntry[]> {\n\t\treturn this.db.find({ appId }).toArray();\n\t}\n\n\tasync removeEntriesFor(appId: string): Promise<void> {\n\t\tawait this.db.deleteOne({ appId });\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/apps/storage/AppRealLogStorage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/apps/storage/AppRealLogStorage.ts","inputSourceMap":{"version":3,"file":"ee/server/apps/storage/AppRealLogStorage.ts","sourceRoot":"","sources":["ee/server/apps/storage/AppRealLogStorage.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,MAAM,yCAAyC,CAAC;AACxE,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;AAG9D,MAAM,OAAO,iBAAkB,SAAQ,aAAa;IAC/B;IAApB,YAAoB,EAAkB;QACrC,KAAK,CAAC,SAAS,CAAC,CAAC;QADE,OAAE,GAAF,EAAE,CAAgB;IAEtC,CAAC;IAED,KAAK,CAAC,IAAI,CACT,KAEC,EACD,EAAE,MAAM,EAAE,GAAG,OAAO,EAA6B;QAEjD,OAAO,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC1F,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,QAA6B;QAC/C,QAAQ,CAAC,UAAU,GAAG,cAAc,CAAC,EAAE,EAAE,CAAC;QAE1C,MAAM,EAAE,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC;QAE1D,OAAO,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,KAAa;QAChC,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,KAAa;QACnC,MAAM,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACpC,CAAC;CACD","sourcesContent":["import type { ILoggerStorageEntry } from '@rocket.chat/apps-engine/server/logging';\nimport type { IAppLogStorageFindOptions } from '@rocket.chat/apps-engine/server/storage';\nimport { AppLogStorage } from '@rocket.chat/apps-engine/server/storage';\nimport { InstanceStatus } from '@rocket.chat/instance-status';\nimport type { AppLogs } from '@rocket.chat/models';\n\nexport class AppRealLogStorage extends AppLogStorage {\n\tconstructor(private db: typeof AppLogs) {\n\t\tsuper('mongodb');\n\t}\n\n\tasync find(\n\t\tquery: {\n\t\t\t[field: string]: any;\n\t\t},\n\t\t{ fields, ...options }: IAppLogStorageFindOptions,\n\t): Promise<ILoggerStorageEntry[]> {\n\t\treturn this.db.findPaginated(query, { projection: fields, ...options }).cursor.toArray();\n\t}\n\n\tasync storeEntries(logEntry: ILoggerStorageEntry): Promise<ILoggerStorageEntry> {\n\t\tlogEntry.instanceId = InstanceStatus.id();\n\n\t\tconst id = (await this.db.insertOne(logEntry)).insertedId;\n\n\t\treturn this.db.findOneById(id);\n\t}\n\n\tasync getEntriesFor(appId: string): Promise<ILoggerStorageEntry[]> {\n\t\treturn this.db.find({ appId }).toArray();\n\t}\n\n\tasync removeEntriesFor(appId: string): Promise<void> {\n\t\tawait this.db.deleteOne({ appId });\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _objectWithoutProperties;\n    module.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n      default(v) {\n        _objectWithoutProperties = v;\n      }\n    }, 1);\n    const _excluded = [\"fields\"];\n    module.export({\n      AppRealLogStorage: () => AppRealLogStorage\n    });\n    let AppLogStorage;\n    module.link(\"@rocket.chat/apps-engine/server/storage\", {\n      AppLogStorage(v) {\n        AppLogStorage = v;\n      }\n    }, 0);\n    let InstanceStatus;\n    module.link(\"@rocket.chat/instance-status\", {\n      InstanceStatus(v) {\n        InstanceStatus = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AppRealLogStorage extends AppLogStorage {\n      constructor(db) {\n        super('mongodb');\n        this.db = void 0;\n        this.db = db;\n      }\n      async find(query, _ref) {\n        let {\n            fields\n          } = _ref,\n          options = _objectWithoutProperties(_ref, _excluded);\n        return this.db.findPaginated(query, _objectSpread({\n          projection: fields\n        }, options)).cursor.toArray();\n      }\n      async storeEntries(logEntry) {\n        logEntry.instanceId = InstanceStatus.id();\n        const id = (await this.db.insertOne(logEntry)).insertedId;\n        return this.db.findOneById(id);\n      }\n      async getEntriesFor(appId) {\n        return this.db.find({\n          appId\n        }).toArray();\n      }\n      async removeEntriesFor(appId) {\n        await this.db.deleteOne({\n          appId\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","_excluded","export","AppRealLogStorage","AppLogStorage","InstanceStatus","__reifyWaitForDeps__","constructor","db","find","query","_ref","fields","options","findPaginated","projection","cursor","toArray","storeEntries","logEntry","instanceId","id","insertOne","insertedId","findOneById","getEntriesFor","appId","removeEntriesFor","deleteOne","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/apps/storage/AppRealLogStorage.ts"],"sourcesContent":["import type { ILoggerStorageEntry } from '@rocket.chat/apps-engine/server/logging';\nimport type { IAppLogStorageFindOptions } from '@rocket.chat/apps-engine/server/storage';\nimport { AppLogStorage } from '@rocket.chat/apps-engine/server/storage';\nimport { InstanceStatus } from '@rocket.chat/instance-status';\nimport type { AppLogs } from '@rocket.chat/models';\n\nexport class AppRealLogStorage extends AppLogStorage {\n\tconstructor(private db: typeof AppLogs) {\n\t\tsuper('mongodb');\n\t}\n\n\tasync find(\n\t\tquery: {\n\t\t\t[field: string]: any;\n\t\t},\n\t\t{ fields, ...options }: IAppLogStorageFindOptions,\n\t): Promise<ILoggerStorageEntry[]> {\n\t\treturn this.db.findPaginated(query, { projection: fields, ...options }).cursor.toArray();\n\t}\n\n\tasync storeEntries(logEntry: ILoggerStorageEntry): Promise<ILoggerStorageEntry> {\n\t\tlogEntry.instanceId = InstanceStatus.id();\n\n\t\tconst id = (await this.db.insertOne(logEntry)).insertedId;\n\n\t\treturn this.db.findOneById(id);\n\t}\n\n\tasync getEntriesFor(appId: string): Promise<ILoggerStorageEntry[]> {\n\t\treturn this.db.find({ appId }).toArray();\n\t}\n\n\tasync removeEntriesFor(appId: string): Promise<void> {\n\t\tawait this.db.deleteOne({ appId });\n\t}\n}\n"],"mappings":";;;IAEA,IAAAA,aAAS;IAAAC,MAAe,CAAAC,IAAA,CAAM;MAAAC,OAA0CA,CAAAC,CAAA;QAAAJ,aAAA,GAAAI,CAAA;MAAA;IAAA;IAAA,IAAAC,wBAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAC,QAAAC,CAAA;QAAAC,wBAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,MAAAE,SAAA;IAAxEL,MAAA,CAAOM,MAAE;MAAAC,iBAAqB,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,aAA0C;IAAAR,MAAA,CAAAC,IAAA;MAAAO,cAAAL,CAAA;QAAAK,aAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,cAAA;IAAAT,MAAA,CAAAC,IAAA;MAAAQ,eAAAN,CAAA;QAAAM,cAAA,GAAAN,CAAA;MAAA;IAAA;IAAA,IAAAO,oBAAA,WAAAA,oBAAA;IAIlE,MAAOH,iBAAkB,SAAQC,aAAa;MACnDG,YAAoBC,EAAkB;QACrC,KAAK,CAAC,SAAS,CAAC;QAAC,KADEA,EAAA;QAAA,KAAAA,EAAE,GAAFA,EAAE;MAEtB;MAEA,MAAMC,IAAIA,CACTC,KAEC,EAAAC,IAAA,EACgD;QAAA,IAAjD;YAAEC;UAAkB,CAA6B,GAAAD,IAAA;UAApCE,OAAO,GAAAb,wBAAA,CAAAW,IAAA,EAAAV,SAAA;QAEpB,OAAO,IAAI,CAACO,EAAE,CAACM,aAAa,CAACJ,KAAK,EAAAf,aAAA;UAAIoB,UAAU,EAAEH;QAAM,GAAKC,OAAO,CAAE,CAAC,CAACG,MAAM,CAACC,OAAO,EAAE;MACzF;MAEA,MAAMC,YAAYA,CAACC,QAA6B;QAC/CA,QAAQ,CAACC,UAAU,GAAGf,cAAc,CAACgB,EAAE,EAAE;QAEzC,MAAMA,EAAE,GAAG,CAAC,MAAM,IAAI,CAACb,EAAE,CAACc,SAAS,CAACH,QAAQ,CAAC,EAAEI,UAAU;QAEzD,OAAO,IAAI,CAACf,EAAE,CAACgB,WAAW,CAACH,EAAE,CAAC;MAC/B;MAEA,MAAMI,aAAaA,CAACC,KAAa;QAChC,OAAO,IAAI,CAAClB,EAAE,CAACC,IAAI,CAAC;UAAEiB;QAAK,CAAE,CAAC,CAACT,OAAO,EAAE;MACzC;MAEA,MAAMU,gBAAgBA,CAACD,KAAa;QACnC,MAAM,IAAI,CAAClB,EAAE,CAACoB,SAAS,CAAC;UAAEF;QAAK,CAAE,CAAC;MACnC;;IACAG,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"09ebe9b8c9a4f0e45e1a50727a0dcaa2843fdc1e"}
