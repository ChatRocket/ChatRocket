{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/Omnichannel/hooks/useAgentsList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/Omnichannel/hooks/useAgentsList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/Omnichannel/hooks/useAgentsList.ts","inputSourceMap":{"version":3,"file":"client/components/Omnichannel/hooks/useAgentsList.ts","sourceRoot":"","sources":["client/components/Omnichannel/hooks/useAgentsList.ts"],"names":[],"mappings":"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","sourcesContent":["import { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype AgentsListOptions = {\n\ttext: string;\n\thaveAll: boolean;\n\thaveNoAgentsSelectedOption: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tonlyAvailable?: boolean;\n};\n\ntype AgentOption = { value: string; label: string; _updatedAt: Date; _id: string };\n\nexport const useAgentsList = (\n\toptions: AgentsListOptions,\n): {\n\titemsList: RecordList<AgentOption>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst t = useTranslation();\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<AgentOption>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<AgentOption>()), []);\n\n\tconst getAgents = useEndpoint('GET', '/v1/livechat/users/agent');\n\tconst { text, onlyAvailable = false, showIdleAgents = true, excludeId, haveAll, haveNoAgentsSelectedOption } = options;\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { users: agents, total } = await getAgents({\n\t\t\t\t...(text && { text }),\n\t\t\t\t...(excludeId && { excludeId }),\n\t\t\t\tshowIdleAgents,\n\t\t\t\tonlyAvailable,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t});\n\n\t\t\tconst items = agents.map<AgentOption>((agent) => {\n\t\t\t\tconst agentOption = {\n\t\t\t\t\t_updatedAt: new Date(agent._updatedAt),\n\t\t\t\t\tlabel: `${agent.name || agent._id} (@${agent.username})`,\n\t\t\t\t\tvalue: agent._id,\n\t\t\t\t\t_id: agent._id,\n\t\t\t\t};\n\t\t\t\treturn agentOption;\n\t\t\t});\n\n\t\t\thaveAll &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('All'),\n\t\t\t\t\tvalue: 'all',\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t\t_id: 'all',\n\t\t\t\t});\n\n\t\t\thaveNoAgentsSelectedOption &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('Empty_no_agent_selected'),\n\t\t\t\t\tvalue: 'no-agent-selected',\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t\t_id: 'no-agent-selected',\n\t\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: total + 1,\n\t\t\t};\n\t\t},\n\t\t[excludeId, getAgents, haveAll, haveNoAgentsSelectedOption, onlyAvailable, showIdleAgents, t, text],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/Omnichannel/hooks/useAgentsList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/Omnichannel/hooks/useAgentsList.ts","inputSourceMap":{"version":3,"file":"client/components/Omnichannel/hooks/useAgentsList.ts","sourceRoot":"","sources":["client/components/Omnichannel/hooks/useAgentsList.ts"],"names":[],"mappings":"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","sourcesContent":["import { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype AgentsListOptions = {\n\ttext: string;\n\thaveAll: boolean;\n\thaveNoAgentsSelectedOption: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tonlyAvailable?: boolean;\n};\n\ntype AgentOption = { value: string; label: string; _updatedAt: Date; _id: string };\n\nexport const useAgentsList = (\n\toptions: AgentsListOptions,\n): {\n\titemsList: RecordList<AgentOption>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst t = useTranslation();\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<AgentOption>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<AgentOption>()), []);\n\n\tconst getAgents = useEndpoint('GET', '/v1/livechat/users/agent');\n\tconst { text, onlyAvailable = false, showIdleAgents = true, excludeId, haveAll, haveNoAgentsSelectedOption } = options;\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { users: agents, total } = await getAgents({\n\t\t\t\t...(text && { text }),\n\t\t\t\t...(excludeId && { excludeId }),\n\t\t\t\tshowIdleAgents,\n\t\t\t\tonlyAvailable,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t});\n\n\t\t\tconst items = agents.map<AgentOption>((agent) => {\n\t\t\t\tconst agentOption = {\n\t\t\t\t\t_updatedAt: new Date(agent._updatedAt),\n\t\t\t\t\tlabel: `${agent.name || agent._id} (@${agent.username})`,\n\t\t\t\t\tvalue: agent._id,\n\t\t\t\t\t_id: agent._id,\n\t\t\t\t};\n\t\t\t\treturn agentOption;\n\t\t\t});\n\n\t\t\thaveAll &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('All'),\n\t\t\t\t\tvalue: 'all',\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t\t_id: 'all',\n\t\t\t\t});\n\n\t\t\thaveNoAgentsSelectedOption &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('Empty_no_agent_selected'),\n\t\t\t\t\tvalue: 'no-agent-selected',\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t\t_id: 'no-agent-selected',\n\t\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: total + 1,\n\t\t\t};\n\t\t},\n\t\t[excludeId, getAgents, haveAll, haveNoAgentsSelectedOption, onlyAvailable, showIdleAgents, t, text],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  useAgentsList: () => useAgentsList\n});\nlet useEndpoint, useTranslation;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 0);\nlet useCallback, useState;\nmodule.link(\"react\", {\n  useCallback(v) {\n    useCallback = v;\n  },\n  useState(v) {\n    useState = v;\n  }\n}, 1);\nlet useScrollableRecordList;\nmodule.link(\"../../../hooks/lists/useScrollableRecordList\", {\n  useScrollableRecordList(v) {\n    useScrollableRecordList = v;\n  }\n}, 2);\nlet useComponentDidUpdate;\nmodule.link(\"../../../hooks/useComponentDidUpdate\", {\n  useComponentDidUpdate(v) {\n    useComponentDidUpdate = v;\n  }\n}, 3);\nlet RecordList;\nmodule.link(\"../../../lib/lists/RecordList\", {\n  RecordList(v) {\n    RecordList = v;\n  }\n}, 4);\nconst useAgentsList = options => {\n  const t = useTranslation();\n  const [itemsList, setItemsList] = useState(() => new RecordList());\n  const reload = useCallback(() => setItemsList(new RecordList()), []);\n  const getAgents = useEndpoint('GET', '/v1/livechat/users/agent');\n  const {\n    text,\n    onlyAvailable = false,\n    showIdleAgents = true,\n    excludeId,\n    haveAll,\n    haveNoAgentsSelectedOption\n  } = options;\n  useComponentDidUpdate(() => {\n    options && reload();\n  }, [options, reload]);\n  const fetchData = useCallback(async (start, end) => {\n    const {\n      users: agents,\n      total\n    } = await getAgents(_objectSpread(_objectSpread(_objectSpread({}, text && {\n      text\n    }), excludeId && {\n      excludeId\n    }), {}, {\n      showIdleAgents,\n      onlyAvailable,\n      offset: start,\n      count: end + start,\n      sort: \"{ \\\"name\\\": 1 }\"\n    }));\n    const items = agents.map(agent => {\n      const agentOption = {\n        _updatedAt: new Date(agent._updatedAt),\n        label: \"\".concat(agent.name || agent._id, \" (@\").concat(agent.username, \")\"),\n        value: agent._id,\n        _id: agent._id\n      };\n      return agentOption;\n    });\n    haveAll && items.unshift({\n      label: t('All'),\n      value: 'all',\n      _updatedAt: new Date(),\n      _id: 'all'\n    });\n    haveNoAgentsSelectedOption && items.unshift({\n      label: t('Empty_no_agent_selected'),\n      value: 'no-agent-selected',\n      _updatedAt: new Date(),\n      _id: 'no-agent-selected'\n    });\n    return {\n      items,\n      itemCount: total + 1\n    };\n  }, [excludeId, getAgents, haveAll, haveNoAgentsSelectedOption, onlyAvailable, showIdleAgents, t, text]);\n  const {\n    loadMoreItems,\n    initialItemCount\n  } = useScrollableRecordList(itemsList, fetchData, 25);\n  return {\n    reload,\n    itemsList,\n    loadMoreItems,\n    initialItemCount\n  };\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","useAgentsList","useEndpoint","useTranslation","useCallback","useState","useScrollableRecordList","useComponentDidUpdate","RecordList","options","t","itemsList","setItemsList","reload","getAgents","text","onlyAvailable","showIdleAgents","excludeId","haveAll","haveNoAgentsSelectedOption","fetchData","start","end","users","agents","total","offset","count","sort","items","map","agent","agentOption","_updatedAt","Date","label","concat","name","_id","username","value","unshift","itemCount","loadMoreItems","initialItemCount"],"sources":["client/components/Omnichannel/hooks/useAgentsList.ts"],"sourcesContent":["import { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype AgentsListOptions = {\n\ttext: string;\n\thaveAll: boolean;\n\thaveNoAgentsSelectedOption: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tonlyAvailable?: boolean;\n};\n\ntype AgentOption = { value: string; label: string; _updatedAt: Date; _id: string };\n\nexport const useAgentsList = (\n\toptions: AgentsListOptions,\n): {\n\titemsList: RecordList<AgentOption>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst t = useTranslation();\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<AgentOption>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<AgentOption>()), []);\n\n\tconst getAgents = useEndpoint('GET', '/v1/livechat/users/agent');\n\tconst { text, onlyAvailable = false, showIdleAgents = true, excludeId, haveAll, haveNoAgentsSelectedOption } = options;\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { users: agents, total } = await getAgents({\n\t\t\t\t...(text && { text }),\n\t\t\t\t...(excludeId && { excludeId }),\n\t\t\t\tshowIdleAgents,\n\t\t\t\tonlyAvailable,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t});\n\n\t\t\tconst items = agents.map<AgentOption>((agent) => {\n\t\t\t\tconst agentOption = {\n\t\t\t\t\t_updatedAt: new Date(agent._updatedAt),\n\t\t\t\t\tlabel: `${agent.name || agent._id} (@${agent.username})`,\n\t\t\t\t\tvalue: agent._id,\n\t\t\t\t\t_id: agent._id,\n\t\t\t\t};\n\t\t\t\treturn agentOption;\n\t\t\t});\n\n\t\t\thaveAll &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('All'),\n\t\t\t\t\tvalue: 'all',\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t\t_id: 'all',\n\t\t\t\t});\n\n\t\t\thaveNoAgentsSelectedOption &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('Empty_no_agent_selected'),\n\t\t\t\t\tvalue: 'no-agent-selected',\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t\t_id: 'no-agent-selected',\n\t\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: total + 1,\n\t\t\t};\n\t\t},\n\t\t[excludeId, getAgents, haveAll, haveNoAgentsSelectedOption, onlyAvailable, showIdleAgents, t, text],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8783a5bf7fcc7a63cf16d8a4a629e6672f2dbee5"}
