{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/settings/ldap.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/settings/ldap.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/settings/ldap.ts","inputSourceMap":{"version":3,"file":"ee/server/settings/ldap.ts","sourceRoot":"","sources":["ee/server/settings/ldap.ts"],"names":[],"mappings":"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","sourcesContent":["import { settingsRegistry } from '../../../app/settings/server';\n\nexport const ldapIntervalValuesToCronMap: Record<string, string> = {\n\tevery_1_hour: '0 * * * *',\n\tevery_6_hours: '0 */6 * * *',\n\tevery_12_hours: '0 */12 * * *',\n\tevery_24_hours: '0 0 * * *',\n\tevery_48_hours: '0 0 */2 * *',\n};\n\nexport function addSettings(): Promise<void> {\n\treturn settingsRegistry.addGroup('LDAP', async function () {\n\t\tconst enableQuery = { _id: 'LDAP_Enable', value: true };\n\n\t\tawait this.with(\n\t\t\t{\n\t\t\t\ttab: 'LDAP_Enterprise',\n\t\t\t\tenterprise: true,\n\t\t\t\tmodules: ['ldap-enterprise'],\n\t\t\t},\n\t\t\tasync function () {\n\t\t\t\tawait this.section('LDAP_DataSync_BackgroundSync', async function () {\n\t\t\t\t\tawait this.add('LDAP_Background_Sync', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst backgroundSyncQuery = [enableQuery, { _id: 'LDAP_Background_Sync', value: true }];\n\t\t\t\t\tconst backgroundUpdateQuery = [...backgroundSyncQuery, { _id: 'LDAP_Background_Sync_Keep_Existant_Users_Updated', value: true }];\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Interval', 'every_24_hours', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_1_hour',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_hour',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_6_hours',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_six_hours',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_12_hours',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_12_hours',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_24_hours',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_24_hours',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_48_hours',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_48_hours',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tenableQuery: backgroundSyncQuery,\n\t\t\t\t\t\tinvalidValue: 'every_24_hours',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Import_New_Users', true, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: backgroundSyncQuery,\n\t\t\t\t\t\tinvalidValue: true,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Keep_Existant_Users_Updated', true, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: backgroundSyncQuery,\n\t\t\t\t\t\tinvalidValue: true,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Merge_Existent_Users', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: [...backgroundUpdateQuery, { _id: 'LDAP_Merge_Existing_Users', value: true }],\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Disable_Missing_Users', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: backgroundUpdateQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Avatars', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Avatars_Interval', '0 0 * * *', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: [enableQuery, { _id: 'LDAP_Background_Sync_Avatars', value: true }],\n\t\t\t\t\t\tinvalidValue: '0 0 * * *',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_Advanced', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Active_State', 'disable', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'none', i18nLabel: 'LDAP_Sync_User_Active_State_Nothing' },\n\t\t\t\t\t\t\t{ key: 'disable', i18nLabel: 'LDAP_Sync_User_Active_State_Disable' },\n\t\t\t\t\t\t\t{ key: 'enable', i18nLabel: 'LDAP_Sync_User_Active_State_Enable' },\n\t\t\t\t\t\t\t{ key: 'both', i18nLabel: 'LDAP_Sync_User_Active_State_Both' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nDescription: 'LDAP_Sync_User_Active_State_Description',\n\t\t\t\t\t\tenableQuery: { _id: 'LDAP_Enable', value: true },\n\t\t\t\t\t\tinvalidValue: 'none',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_User_Search_AttributesToQuery', '*,+', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: { _id: 'LDAP_Enable', value: true },\n\t\t\t\t\t\tinvalidValue: '*,+',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_AutoLogout', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_AutoLogout_Enabled', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_AutoLogout_Interval', '*/5 * * * *', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: [enableQuery, { _id: 'LDAP_Sync_AutoLogout_Enabled', value: true }],\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_CustomFields', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_Custom_Fields', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_CustomFieldMap', '{}', {\n\t\t\t\t\t\ttype: 'code',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\tenableQuery: [enableQuery, { _id: 'LDAP_Sync_Custom_Fields', value: true }],\n\t\t\t\t\t\tinvalidValue: '{}',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_Roles', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\t\t\t\t\tconst syncRolesQuery = [enableQuery, { _id: 'LDAP_Sync_User_Data_Roles', value: true }];\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles_AutoRemove', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles_BaseDN', '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles_GroupMembershipValidationStrategy', 'each_group', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'each_group', i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_EachGroup' },\n\t\t\t\t\t\t\t{ key: 'once', i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_Once' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: 'each_group',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles_Filter', '(&(cn=#{groupName})(memberUid=#{username}))', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_RolesMap', '{\\n\\t\"rocket-admin\": \"admin\",\\n\\t\"tech-support\": \"support\"\\n}', {\n\t\t\t\t\t\ttype: 'code',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\tpublic: false,\n\t\t\t\t\t\tcode: 'application/json',\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_Channels', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst syncChannelsQuery = [enableQuery, { _id: 'LDAP_Sync_User_Data_Channels', value: true }];\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_Admin', 'rocket.cat', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: 'rocket.cat',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_BaseDN', '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_GroupMembershipValidationStrategy', 'each_group', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'each_group', i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_EachGroup' },\n\t\t\t\t\t\t\t{ key: 'once', i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_Once' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: 'each_group',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_Filter', '(&(cn=#{groupName})(memberUid=#{username}))', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add(\n\t\t\t\t\t\t'LDAP_Sync_User_Data_ChannelsMap',\n\t\t\t\t\t\t'{\\n\\t\"employee\": \"general\",\\n\\t\"techsupport\": [\\n\\t\\t\"helpdesk\",\\n\\t\\t\"support\"\\n\\t]\\n}',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'code',\n\t\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\t\tpublic: false,\n\t\t\t\t\t\t\tcode: 'application/json',\n\t\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_Enforce_AutoChannels', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_Teams', async function () {\n\t\t\t\t\tawait this.add('LDAP_Enable_LDAP_Groups_To_RC_Teams', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: { _id: 'LDAP_Enable', value: true },\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst enableQueryTeams = { _id: 'LDAP_Enable_LDAP_Groups_To_RC_Teams', value: true };\n\n\t\t\t\t\tawait this.add('LDAP_Groups_To_Rocket_Chat_Teams', '{}', {\n\t\t\t\t\t\ttype: 'code',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: '{}',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add('LDAP_Validate_Teams_For_Each_Login', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add('LDAP_Teams_BaseDN', '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add('LDAP_Teams_Name_Field', 'ou,cn', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Query_To_Get_User_Teams', '(&(ou=*)(uniqueMember=#{userdn}))', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\t});\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/settings/ldap.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/settings/ldap.ts","inputSourceMap":{"version":3,"file":"ee/server/settings/ldap.ts","sourceRoot":"","sources":["ee/server/settings/ldap.ts"],"names":[],"mappings":"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","sourcesContent":["import { settingsRegistry } from '../../../app/settings/server';\n\nexport const ldapIntervalValuesToCronMap: Record<string, string> = {\n\tevery_1_hour: '0 * * * *',\n\tevery_6_hours: '0 */6 * * *',\n\tevery_12_hours: '0 */12 * * *',\n\tevery_24_hours: '0 0 * * *',\n\tevery_48_hours: '0 0 */2 * *',\n};\n\nexport function addSettings(): Promise<void> {\n\treturn settingsRegistry.addGroup('LDAP', async function () {\n\t\tconst enableQuery = { _id: 'LDAP_Enable', value: true };\n\n\t\tawait this.with(\n\t\t\t{\n\t\t\t\ttab: 'LDAP_Enterprise',\n\t\t\t\tenterprise: true,\n\t\t\t\tmodules: ['ldap-enterprise'],\n\t\t\t},\n\t\t\tasync function () {\n\t\t\t\tawait this.section('LDAP_DataSync_BackgroundSync', async function () {\n\t\t\t\t\tawait this.add('LDAP_Background_Sync', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst backgroundSyncQuery = [enableQuery, { _id: 'LDAP_Background_Sync', value: true }];\n\t\t\t\t\tconst backgroundUpdateQuery = [...backgroundSyncQuery, { _id: 'LDAP_Background_Sync_Keep_Existant_Users_Updated', value: true }];\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Interval', 'every_24_hours', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_1_hour',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_hour',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_6_hours',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_six_hours',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_12_hours',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_12_hours',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_24_hours',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_24_hours',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_48_hours',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_48_hours',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tenableQuery: backgroundSyncQuery,\n\t\t\t\t\t\tinvalidValue: 'every_24_hours',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Import_New_Users', true, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: backgroundSyncQuery,\n\t\t\t\t\t\tinvalidValue: true,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Keep_Existant_Users_Updated', true, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: backgroundSyncQuery,\n\t\t\t\t\t\tinvalidValue: true,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Merge_Existent_Users', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: [...backgroundUpdateQuery, { _id: 'LDAP_Merge_Existing_Users', value: true }],\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Disable_Missing_Users', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: backgroundUpdateQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Avatars', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Avatars_Interval', '0 0 * * *', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: [enableQuery, { _id: 'LDAP_Background_Sync_Avatars', value: true }],\n\t\t\t\t\t\tinvalidValue: '0 0 * * *',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_Advanced', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Active_State', 'disable', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'none', i18nLabel: 'LDAP_Sync_User_Active_State_Nothing' },\n\t\t\t\t\t\t\t{ key: 'disable', i18nLabel: 'LDAP_Sync_User_Active_State_Disable' },\n\t\t\t\t\t\t\t{ key: 'enable', i18nLabel: 'LDAP_Sync_User_Active_State_Enable' },\n\t\t\t\t\t\t\t{ key: 'both', i18nLabel: 'LDAP_Sync_User_Active_State_Both' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nDescription: 'LDAP_Sync_User_Active_State_Description',\n\t\t\t\t\t\tenableQuery: { _id: 'LDAP_Enable', value: true },\n\t\t\t\t\t\tinvalidValue: 'none',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_User_Search_AttributesToQuery', '*,+', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: { _id: 'LDAP_Enable', value: true },\n\t\t\t\t\t\tinvalidValue: '*,+',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_AutoLogout', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_AutoLogout_Enabled', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_AutoLogout_Interval', '*/5 * * * *', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: [enableQuery, { _id: 'LDAP_Sync_AutoLogout_Enabled', value: true }],\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_CustomFields', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_Custom_Fields', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_CustomFieldMap', '{}', {\n\t\t\t\t\t\ttype: 'code',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\tenableQuery: [enableQuery, { _id: 'LDAP_Sync_Custom_Fields', value: true }],\n\t\t\t\t\t\tinvalidValue: '{}',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_Roles', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\t\t\t\t\tconst syncRolesQuery = [enableQuery, { _id: 'LDAP_Sync_User_Data_Roles', value: true }];\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles_AutoRemove', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles_BaseDN', '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles_GroupMembershipValidationStrategy', 'each_group', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'each_group', i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_EachGroup' },\n\t\t\t\t\t\t\t{ key: 'once', i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_Once' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: 'each_group',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles_Filter', '(&(cn=#{groupName})(memberUid=#{username}))', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_RolesMap', '{\\n\\t\"rocket-admin\": \"admin\",\\n\\t\"tech-support\": \"support\"\\n}', {\n\t\t\t\t\t\ttype: 'code',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\tpublic: false,\n\t\t\t\t\t\tcode: 'application/json',\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_Channels', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst syncChannelsQuery = [enableQuery, { _id: 'LDAP_Sync_User_Data_Channels', value: true }];\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_Admin', 'rocket.cat', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: 'rocket.cat',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_BaseDN', '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_GroupMembershipValidationStrategy', 'each_group', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'each_group', i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_EachGroup' },\n\t\t\t\t\t\t\t{ key: 'once', i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_Once' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: 'each_group',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_Filter', '(&(cn=#{groupName})(memberUid=#{username}))', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add(\n\t\t\t\t\t\t'LDAP_Sync_User_Data_ChannelsMap',\n\t\t\t\t\t\t'{\\n\\t\"employee\": \"general\",\\n\\t\"techsupport\": [\\n\\t\\t\"helpdesk\",\\n\\t\\t\"support\"\\n\\t]\\n}',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'code',\n\t\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\t\tpublic: false,\n\t\t\t\t\t\t\tcode: 'application/json',\n\t\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_Enforce_AutoChannels', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_Teams', async function () {\n\t\t\t\t\tawait this.add('LDAP_Enable_LDAP_Groups_To_RC_Teams', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: { _id: 'LDAP_Enable', value: true },\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst enableQueryTeams = { _id: 'LDAP_Enable_LDAP_Groups_To_RC_Teams', value: true };\n\n\t\t\t\t\tawait this.add('LDAP_Groups_To_Rocket_Chat_Teams', '{}', {\n\t\t\t\t\t\ttype: 'code',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: '{}',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add('LDAP_Validate_Teams_For_Each_Login', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add('LDAP_Teams_BaseDN', '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add('LDAP_Teams_Name_Field', 'ou,cn', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Query_To_Get_User_Teams', '(&(ou=*)(uniqueMember=#{userdn}))', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\t});\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      ldapIntervalValuesToCronMap: () => ldapIntervalValuesToCronMap,\n      addSettings: () => addSettings\n    });\n    let settingsRegistry;\n    module.link(\"../../../app/settings/server\", {\n      settingsRegistry(v) {\n        settingsRegistry = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const ldapIntervalValuesToCronMap = {\n      every_1_hour: '0 * * * *',\n      every_6_hours: '0 */6 * * *',\n      every_12_hours: '0 */12 * * *',\n      every_24_hours: '0 0 * * *',\n      every_48_hours: '0 0 */2 * *'\n    };\n    function addSettings() {\n      return settingsRegistry.addGroup('LDAP', async function () {\n        const enableQuery = {\n          _id: 'LDAP_Enable',\n          value: true\n        };\n        await this.with({\n          tab: 'LDAP_Enterprise',\n          enterprise: true,\n          modules: ['ldap-enterprise']\n        }, async function () {\n          await this.section('LDAP_DataSync_BackgroundSync', async function () {\n            await this.add('LDAP_Background_Sync', false, {\n              type: 'boolean',\n              enableQuery,\n              invalidValue: false\n            });\n            const backgroundSyncQuery = [enableQuery, {\n              _id: 'LDAP_Background_Sync',\n              value: true\n            }];\n            const backgroundUpdateQuery = [...backgroundSyncQuery, {\n              _id: 'LDAP_Background_Sync_Keep_Existant_Users_Updated',\n              value: true\n            }];\n            await this.add('LDAP_Background_Sync_Interval', 'every_24_hours', {\n              type: 'select',\n              values: [{\n                key: 'every_1_hour',\n                i18nLabel: 'every_hour'\n              }, {\n                key: 'every_6_hours',\n                i18nLabel: 'every_six_hours'\n              }, {\n                key: 'every_12_hours',\n                i18nLabel: 'every_12_hours'\n              }, {\n                key: 'every_24_hours',\n                i18nLabel: 'every_24_hours'\n              }, {\n                key: 'every_48_hours',\n                i18nLabel: 'every_48_hours'\n              }],\n              enableQuery: backgroundSyncQuery,\n              invalidValue: 'every_24_hours'\n            });\n            await this.add('LDAP_Background_Sync_Import_New_Users', true, {\n              type: 'boolean',\n              enableQuery: backgroundSyncQuery,\n              invalidValue: true\n            });\n            await this.add('LDAP_Background_Sync_Keep_Existant_Users_Updated', true, {\n              type: 'boolean',\n              enableQuery: backgroundSyncQuery,\n              invalidValue: true\n            });\n            await this.add('LDAP_Background_Sync_Merge_Existent_Users', false, {\n              type: 'boolean',\n              enableQuery: [...backgroundUpdateQuery, {\n                _id: 'LDAP_Merge_Existing_Users',\n                value: true\n              }],\n              invalidValue: false\n            });\n            await this.add('LDAP_Background_Sync_Disable_Missing_Users', false, {\n              type: 'boolean',\n              enableQuery: backgroundUpdateQuery,\n              invalidValue: false\n            });\n            await this.add('LDAP_Background_Sync_Avatars', false, {\n              type: 'boolean',\n              enableQuery,\n              invalidValue: false\n            });\n            await this.add('LDAP_Background_Sync_Avatars_Interval', '0 0 * * *', {\n              type: 'string',\n              enableQuery: [enableQuery, {\n                _id: 'LDAP_Background_Sync_Avatars',\n                value: true\n              }],\n              invalidValue: '0 0 * * *'\n            });\n          });\n          await this.section('LDAP_DataSync_Advanced', async function () {\n            await this.add('LDAP_Sync_User_Active_State', 'disable', {\n              type: 'select',\n              values: [{\n                key: 'none',\n                i18nLabel: 'LDAP_Sync_User_Active_State_Nothing'\n              }, {\n                key: 'disable',\n                i18nLabel: 'LDAP_Sync_User_Active_State_Disable'\n              }, {\n                key: 'enable',\n                i18nLabel: 'LDAP_Sync_User_Active_State_Enable'\n              }, {\n                key: 'both',\n                i18nLabel: 'LDAP_Sync_User_Active_State_Both'\n              }],\n              i18nDescription: 'LDAP_Sync_User_Active_State_Description',\n              enableQuery: {\n                _id: 'LDAP_Enable',\n                value: true\n              },\n              invalidValue: 'none'\n            });\n            await this.add('LDAP_User_Search_AttributesToQuery', '*,+', {\n              type: 'string',\n              enableQuery: {\n                _id: 'LDAP_Enable',\n                value: true\n              },\n              invalidValue: '*,+'\n            });\n          });\n          await this.section('LDAP_DataSync_AutoLogout', async function () {\n            await this.add('LDAP_Sync_AutoLogout_Enabled', false, {\n              type: 'boolean',\n              enableQuery,\n              invalidValue: false\n            });\n            await this.add('LDAP_Sync_AutoLogout_Interval', '*/5 * * * *', {\n              type: 'string',\n              enableQuery: [enableQuery, {\n                _id: 'LDAP_Sync_AutoLogout_Enabled',\n                value: true\n              }],\n              invalidValue: ''\n            });\n          });\n          await this.section('LDAP_DataSync_CustomFields', async function () {\n            await this.add('LDAP_Sync_Custom_Fields', false, {\n              type: 'boolean',\n              enableQuery,\n              invalidValue: false\n            });\n            await this.add('LDAP_CustomFieldMap', '{}', {\n              type: 'code',\n              multiline: true,\n              enableQuery: [enableQuery, {\n                _id: 'LDAP_Sync_Custom_Fields',\n                value: true\n              }],\n              invalidValue: '{}'\n            });\n          });\n          await this.section('LDAP_DataSync_Roles', async function () {\n            await this.add('LDAP_Sync_User_Data_Roles', false, {\n              type: 'boolean',\n              enableQuery,\n              invalidValue: false\n            });\n            const syncRolesQuery = [enableQuery, {\n              _id: 'LDAP_Sync_User_Data_Roles',\n              value: true\n            }];\n            await this.add('LDAP_Sync_User_Data_Roles_AutoRemove', false, {\n              type: 'boolean',\n              enableQuery: syncRolesQuery,\n              invalidValue: false\n            });\n            await this.add('LDAP_Sync_User_Data_Roles_BaseDN', '', {\n              type: 'string',\n              enableQuery: syncRolesQuery,\n              invalidValue: ''\n            });\n            await this.add('LDAP_Sync_User_Data_Roles_GroupMembershipValidationStrategy', 'each_group', {\n              type: 'select',\n              values: [{\n                key: 'each_group',\n                i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_EachGroup'\n              }, {\n                key: 'once',\n                i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_Once'\n              }],\n              enableQuery: syncRolesQuery,\n              invalidValue: 'each_group'\n            });\n            await this.add('LDAP_Sync_User_Data_Roles_Filter', '(&(cn=#{groupName})(memberUid=#{username}))', {\n              type: 'string',\n              enableQuery: syncRolesQuery,\n              invalidValue: ''\n            });\n            await this.add('LDAP_Sync_User_Data_RolesMap', '{\\n\\t\"rocket-admin\": \"admin\",\\n\\t\"tech-support\": \"support\"\\n}', {\n              type: 'code',\n              multiline: true,\n              public: false,\n              code: 'application/json',\n              enableQuery: syncRolesQuery,\n              invalidValue: ''\n            });\n          });\n          await this.section('LDAP_DataSync_Channels', async function () {\n            await this.add('LDAP_Sync_User_Data_Channels', false, {\n              type: 'boolean',\n              enableQuery,\n              invalidValue: false\n            });\n            const syncChannelsQuery = [enableQuery, {\n              _id: 'LDAP_Sync_User_Data_Channels',\n              value: true\n            }];\n            await this.add('LDAP_Sync_User_Data_Channels_Admin', 'rocket.cat', {\n              type: 'string',\n              enableQuery: syncChannelsQuery,\n              invalidValue: 'rocket.cat'\n            });\n            await this.add('LDAP_Sync_User_Data_Channels_BaseDN', '', {\n              type: 'string',\n              enableQuery: syncChannelsQuery,\n              invalidValue: ''\n            });\n            await this.add('LDAP_Sync_User_Data_Channels_GroupMembershipValidationStrategy', 'each_group', {\n              type: 'select',\n              values: [{\n                key: 'each_group',\n                i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_EachGroup'\n              }, {\n                key: 'once',\n                i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_Once'\n              }],\n              enableQuery: syncChannelsQuery,\n              invalidValue: 'each_group'\n            });\n            await this.add('LDAP_Sync_User_Data_Channels_Filter', '(&(cn=#{groupName})(memberUid=#{username}))', {\n              type: 'string',\n              enableQuery: syncChannelsQuery,\n              invalidValue: ''\n            });\n            await this.add('LDAP_Sync_User_Data_ChannelsMap', '{\\n\\t\"employee\": \"general\",\\n\\t\"techsupport\": [\\n\\t\\t\"helpdesk\",\\n\\t\\t\"support\"\\n\\t]\\n}', {\n              type: 'code',\n              multiline: true,\n              public: false,\n              code: 'application/json',\n              enableQuery: syncChannelsQuery,\n              invalidValue: ''\n            });\n            await this.add('LDAP_Sync_User_Data_Channels_Enforce_AutoChannels', false, {\n              type: 'boolean',\n              enableQuery: syncChannelsQuery,\n              invalidValue: false\n            });\n          });\n          await this.section('LDAP_DataSync_Teams', async function () {\n            await this.add('LDAP_Enable_LDAP_Groups_To_RC_Teams', false, {\n              type: 'boolean',\n              enableQuery: {\n                _id: 'LDAP_Enable',\n                value: true\n              },\n              invalidValue: false\n            });\n            const enableQueryTeams = {\n              _id: 'LDAP_Enable_LDAP_Groups_To_RC_Teams',\n              value: true\n            };\n            await this.add('LDAP_Groups_To_Rocket_Chat_Teams', '{}', {\n              type: 'code',\n              enableQuery: enableQueryTeams,\n              invalidValue: '{}'\n            });\n            await this.add('LDAP_Validate_Teams_For_Each_Login', false, {\n              type: 'boolean',\n              enableQuery: enableQueryTeams,\n              invalidValue: false\n            });\n            await this.add('LDAP_Teams_BaseDN', '', {\n              type: 'string',\n              enableQuery: enableQueryTeams,\n              invalidValue: ''\n            });\n            await this.add('LDAP_Teams_Name_Field', 'ou,cn', {\n              type: 'string',\n              enableQuery: enableQueryTeams,\n              invalidValue: ''\n            });\n            await this.add('LDAP_Query_To_Get_User_Teams', '(&(ou=*)(uniqueMember=#{userdn}))', {\n              type: 'string',\n              enableQuery: enableQueryTeams,\n              invalidValue: ''\n            });\n          });\n        });\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","ldapIntervalValuesToCronMap","addSettings","settingsRegistry","link","v","__reifyWaitForDeps__","every_1_hour","every_6_hours","every_12_hours","every_24_hours","every_48_hours","addGroup","enableQuery","_id","value","with","tab","enterprise","modules","section","add","type","invalidValue","backgroundSyncQuery","backgroundUpdateQuery","values","key","i18nLabel","i18nDescription","multiline","syncRolesQuery","public","code","syncChannelsQuery","enableQueryTeams","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/settings/ldap.ts"],"sourcesContent":["import { settingsRegistry } from '../../../app/settings/server';\n\nexport const ldapIntervalValuesToCronMap: Record<string, string> = {\n\tevery_1_hour: '0 * * * *',\n\tevery_6_hours: '0 */6 * * *',\n\tevery_12_hours: '0 */12 * * *',\n\tevery_24_hours: '0 0 * * *',\n\tevery_48_hours: '0 0 */2 * *',\n};\n\nexport function addSettings(): Promise<void> {\n\treturn settingsRegistry.addGroup('LDAP', async function () {\n\t\tconst enableQuery = { _id: 'LDAP_Enable', value: true };\n\n\t\tawait this.with(\n\t\t\t{\n\t\t\t\ttab: 'LDAP_Enterprise',\n\t\t\t\tenterprise: true,\n\t\t\t\tmodules: ['ldap-enterprise'],\n\t\t\t},\n\t\t\tasync function () {\n\t\t\t\tawait this.section('LDAP_DataSync_BackgroundSync', async function () {\n\t\t\t\t\tawait this.add('LDAP_Background_Sync', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst backgroundSyncQuery = [enableQuery, { _id: 'LDAP_Background_Sync', value: true }];\n\t\t\t\t\tconst backgroundUpdateQuery = [...backgroundSyncQuery, { _id: 'LDAP_Background_Sync_Keep_Existant_Users_Updated', value: true }];\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Interval', 'every_24_hours', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_1_hour',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_hour',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_6_hours',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_six_hours',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_12_hours',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_12_hours',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_24_hours',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_24_hours',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: 'every_48_hours',\n\t\t\t\t\t\t\t\ti18nLabel: 'every_48_hours',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tenableQuery: backgroundSyncQuery,\n\t\t\t\t\t\tinvalidValue: 'every_24_hours',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Import_New_Users', true, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: backgroundSyncQuery,\n\t\t\t\t\t\tinvalidValue: true,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Keep_Existant_Users_Updated', true, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: backgroundSyncQuery,\n\t\t\t\t\t\tinvalidValue: true,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Merge_Existent_Users', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: [...backgroundUpdateQuery, { _id: 'LDAP_Merge_Existing_Users', value: true }],\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Disable_Missing_Users', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: backgroundUpdateQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Avatars', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Background_Sync_Avatars_Interval', '0 0 * * *', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: [enableQuery, { _id: 'LDAP_Background_Sync_Avatars', value: true }],\n\t\t\t\t\t\tinvalidValue: '0 0 * * *',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_Advanced', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Active_State', 'disable', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'none', i18nLabel: 'LDAP_Sync_User_Active_State_Nothing' },\n\t\t\t\t\t\t\t{ key: 'disable', i18nLabel: 'LDAP_Sync_User_Active_State_Disable' },\n\t\t\t\t\t\t\t{ key: 'enable', i18nLabel: 'LDAP_Sync_User_Active_State_Enable' },\n\t\t\t\t\t\t\t{ key: 'both', i18nLabel: 'LDAP_Sync_User_Active_State_Both' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\ti18nDescription: 'LDAP_Sync_User_Active_State_Description',\n\t\t\t\t\t\tenableQuery: { _id: 'LDAP_Enable', value: true },\n\t\t\t\t\t\tinvalidValue: 'none',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_User_Search_AttributesToQuery', '*,+', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: { _id: 'LDAP_Enable', value: true },\n\t\t\t\t\t\tinvalidValue: '*,+',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_AutoLogout', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_AutoLogout_Enabled', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_AutoLogout_Interval', '*/5 * * * *', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: [enableQuery, { _id: 'LDAP_Sync_AutoLogout_Enabled', value: true }],\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_CustomFields', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_Custom_Fields', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_CustomFieldMap', '{}', {\n\t\t\t\t\t\ttype: 'code',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\tenableQuery: [enableQuery, { _id: 'LDAP_Sync_Custom_Fields', value: true }],\n\t\t\t\t\t\tinvalidValue: '{}',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_Roles', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\t\t\t\t\tconst syncRolesQuery = [enableQuery, { _id: 'LDAP_Sync_User_Data_Roles', value: true }];\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles_AutoRemove', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles_BaseDN', '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles_GroupMembershipValidationStrategy', 'each_group', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'each_group', i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_EachGroup' },\n\t\t\t\t\t\t\t{ key: 'once', i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_Once' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: 'each_group',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Roles_Filter', '(&(cn=#{groupName})(memberUid=#{username}))', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_RolesMap', '{\\n\\t\"rocket-admin\": \"admin\",\\n\\t\"tech-support\": \"support\"\\n}', {\n\t\t\t\t\t\ttype: 'code',\n\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\tpublic: false,\n\t\t\t\t\t\tcode: 'application/json',\n\t\t\t\t\t\tenableQuery: syncRolesQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_Channels', async function () {\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst syncChannelsQuery = [enableQuery, { _id: 'LDAP_Sync_User_Data_Channels', value: true }];\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_Admin', 'rocket.cat', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: 'rocket.cat',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_BaseDN', '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_GroupMembershipValidationStrategy', 'each_group', {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t{ key: 'each_group', i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_EachGroup' },\n\t\t\t\t\t\t\t{ key: 'once', i18nLabel: 'LDAP_Sync_User_Data_GroupMembershipValidationStrategy_Once' },\n\t\t\t\t\t\t],\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: 'each_group',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_Filter', '(&(cn=#{groupName})(memberUid=#{username}))', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add(\n\t\t\t\t\t\t'LDAP_Sync_User_Data_ChannelsMap',\n\t\t\t\t\t\t'{\\n\\t\"employee\": \"general\",\\n\\t\"techsupport\": [\\n\\t\\t\"helpdesk\",\\n\\t\\t\"support\"\\n\\t]\\n}',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'code',\n\t\t\t\t\t\t\tmultiline: true,\n\t\t\t\t\t\t\tpublic: false,\n\t\t\t\t\t\t\tcode: 'application/json',\n\t\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\n\t\t\t\t\tawait this.add('LDAP_Sync_User_Data_Channels_Enforce_AutoChannels', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: syncChannelsQuery,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tawait this.section('LDAP_DataSync_Teams', async function () {\n\t\t\t\t\tawait this.add('LDAP_Enable_LDAP_Groups_To_RC_Teams', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: { _id: 'LDAP_Enable', value: true },\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst enableQueryTeams = { _id: 'LDAP_Enable_LDAP_Groups_To_RC_Teams', value: true };\n\n\t\t\t\t\tawait this.add('LDAP_Groups_To_Rocket_Chat_Teams', '{}', {\n\t\t\t\t\t\ttype: 'code',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: '{}',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add('LDAP_Validate_Teams_For_Each_Login', false, {\n\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: false,\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add('LDAP_Teams_BaseDN', '', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\t\t\t\t\tawait this.add('LDAP_Teams_Name_Field', 'ou,cn', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\n\t\t\t\t\tawait this.add('LDAP_Query_To_Get_User_Teams', '(&(ou=*)(uniqueMember=#{userdn}))', {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenableQuery: enableQueryTeams,\n\t\t\t\t\t\tinvalidValue: '',\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\t});\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"358c5843bf3c04a6c81b2762724ebf592127c2a0"}
