{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/calendar/service.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/calendar/service.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/calendar/service.ts","inputSourceMap":{"version":3,"file":"server/services/calendar/service.ts","sourceRoot":"","sources":["server/services/calendar/service.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ICalendarService } from '@rocket.chat/core-services';\nimport { ServiceClassInternal, api } from '@rocket.chat/core-services';\nimport type { IUser, ICalendarEvent } from '@rocket.chat/core-typings';\nimport { cronJobs } from '@rocket.chat/cron';\nimport { Logger } from '@rocket.chat/logger';\nimport type { InsertionModel } from '@rocket.chat/model-typings';\nimport { CalendarEvent } from '@rocket.chat/models';\nimport type { UpdateResult, DeleteResult } from 'mongodb';\n\nimport { settings } from '../../../app/settings/server';\nimport { getUserPreference } from '../../../app/utils/server/lib/getUserPreference';\n\nconst logger = new Logger('Calendar');\n\nconst defaultMinutesForNotifications = 5;\n\nexport class CalendarService extends ServiceClassInternal implements ICalendarService {\n\tprotected name = 'calendar';\n\n\tpublic async create(data: Omit<InsertionModel<ICalendarEvent>, 'reminderTime' | 'notificationSent'>): Promise<ICalendarEvent['_id']> {\n\t\tconst { uid, startTime, subject, description, reminderMinutesBeforeStart, meetingUrl } = data;\n\n\t\tconst minutes = reminderMinutesBeforeStart ?? defaultMinutesForNotifications;\n\t\tconst reminderTime = minutes ? this.getShiftedTime(startTime, -minutes) : undefined;\n\n\t\tconst insertData: InsertionModel<ICalendarEvent> = {\n\t\t\tuid,\n\t\t\tstartTime,\n\t\t\tsubject,\n\t\t\tdescription,\n\t\t\tmeetingUrl,\n\t\t\treminderMinutesBeforeStart: minutes,\n\t\t\treminderTime,\n\t\t\tnotificationSent: false,\n\t\t};\n\n\t\tconst insertResult = await CalendarEvent.insertOne(insertData);\n\t\tawait this.setupNextNotification();\n\n\t\treturn insertResult.insertedId;\n\t}\n\n\tpublic async import(data: Omit<InsertionModel<ICalendarEvent>, 'notificationSent'>): Promise<ICalendarEvent['_id']> {\n\t\tconst { externalId } = data;\n\t\tif (!externalId) {\n\t\t\treturn this.create(data);\n\t\t}\n\n\t\tconst { uid, startTime, subject, description, reminderMinutesBeforeStart } = data;\n\t\tconst meetingUrl = data.meetingUrl ? data.meetingUrl : await this.parseDescriptionForMeetingUrl(description);\n\t\tconst reminderTime = reminderMinutesBeforeStart ? this.getShiftedTime(startTime, -reminderMinutesBeforeStart) : undefined;\n\n\t\tconst updateData: Omit<InsertionModel<ICalendarEvent>, 'uid' | 'notificationSent'> = {\n\t\t\tstartTime,\n\t\t\tsubject,\n\t\t\tdescription,\n\t\t\tmeetingUrl,\n\t\t\treminderMinutesBeforeStart,\n\t\t\treminderTime,\n\t\t\texternalId,\n\t\t};\n\n\t\tconst event = await this.findImportedEvent(externalId, uid);\n\n\t\tif (!event) {\n\t\t\tconst insertResult = await CalendarEvent.insertOne({\n\t\t\t\tuid,\n\t\t\t\tnotificationSent: false,\n\t\t\t\t...updateData,\n\t\t\t});\n\n\t\t\tawait this.setupNextNotification();\n\t\t\treturn insertResult.insertedId;\n\t\t}\n\n\t\tconst updateResult = await CalendarEvent.updateEvent(event._id, updateData);\n\t\tif (updateResult.modifiedCount > 0) {\n\t\t\tawait this.setupNextNotification();\n\t\t}\n\n\t\treturn event._id;\n\t}\n\n\tpublic async get(eventId: ICalendarEvent['_id']): Promise<ICalendarEvent | null> {\n\t\treturn CalendarEvent.findOne({ _id: eventId });\n\t}\n\n\tpublic async list(uid: IUser['_id'], date: Date): Promise<ICalendarEvent[]> {\n\t\treturn CalendarEvent.findByUserIdAndDate(uid, date).toArray();\n\t}\n\n\tpublic async update(eventId: ICalendarEvent['_id'], data: Partial<ICalendarEvent>): Promise<UpdateResult> {\n\t\tconst { startTime, subject, description, reminderMinutesBeforeStart } = data;\n\t\tconst meetingUrl = data.meetingUrl ? data.meetingUrl : await this.parseDescriptionForMeetingUrl(description || '');\n\t\tconst reminderTime = reminderMinutesBeforeStart && startTime ? this.getShiftedTime(startTime, -reminderMinutesBeforeStart) : undefined;\n\n\t\tconst updateData: Partial<ICalendarEvent> = {\n\t\t\tstartTime,\n\t\t\tsubject,\n\t\t\tdescription,\n\t\t\tmeetingUrl,\n\t\t\treminderMinutesBeforeStart,\n\t\t\treminderTime,\n\t\t};\n\n\t\tconst updateResult = await CalendarEvent.updateEvent(eventId, updateData);\n\n\t\tif (updateResult.modifiedCount > 0) {\n\t\t\tawait this.setupNextNotification();\n\t\t}\n\n\t\treturn updateResult;\n\t}\n\n\tpublic async delete(eventId: ICalendarEvent['_id']): Promise<DeleteResult> {\n\t\treturn CalendarEvent.deleteOne({\n\t\t\t_id: eventId,\n\t\t});\n\t}\n\n\tpublic async setupNextNotification(): Promise<void> {\n\t\treturn this.doSetupNextNotification(false);\n\t}\n\n\tprivate async doSetupNextNotification(isRecursive: boolean): Promise<void> {\n\t\tconst date = await CalendarEvent.findNextNotificationDate();\n\t\tif (!date) {\n\t\t\tif (await cronJobs.has('calendar-reminders')) {\n\t\t\t\tawait cronJobs.remove('calendar-reminders');\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tdate.setSeconds(0);\n\t\tif (!isRecursive && date.valueOf() < Date.now()) {\n\t\t\treturn this.sendCurrentNotifications(date);\n\t\t}\n\n\t\tawait cronJobs.addAtTimestamp('calendar-reminders', date, async () => this.sendCurrentNotifications(date));\n\t}\n\n\tpublic async sendCurrentNotifications(date: Date): Promise<void> {\n\t\tconst events = await CalendarEvent.findEventsToNotify(date, 1).toArray();\n\n\t\tfor await (const event of events) {\n\t\t\tawait this.sendEventNotification(event);\n\n\t\t\tawait CalendarEvent.flagNotificationSent(event._id);\n\t\t}\n\n\t\tawait this.doSetupNextNotification(true);\n\t}\n\n\tpublic async sendEventNotification(event: ICalendarEvent): Promise<void> {\n\t\tif (!(await getUserPreference(event.uid, 'notifyCalendarEvents'))) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn api.broadcast('notify.calendar', event.uid, {\n\t\t\ttitle: event.subject,\n\t\t\ttext: event.startTime.toLocaleTimeString(undefined, { hour: 'numeric', minute: 'numeric', dayPeriod: 'narrow' }),\n\t\t\tpayload: {\n\t\t\t\t_id: event._id,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async findImportedEvent(\n\t\texternalId: Required<ICalendarEvent>['externalId'],\n\t\tuid: ICalendarEvent['uid'],\n\t): Promise<ICalendarEvent | null> {\n\t\treturn CalendarEvent.findOneByExternalIdAndUserId(externalId, uid);\n\t}\n\n\tpublic async parseDescriptionForMeetingUrl(description: string): Promise<string | undefined> {\n\t\tif (!description) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst defaultPattern = '(?:[?&]callUrl=([^\\n&<]+))|(?:(?:%3F)|(?:%26))callUrl(?:%3D)((?:(?:[^\\n&<](?!%26)))+[^\\n&<]?)';\n\t\tconst pattern = (settings.get<string>('Calendar_MeetingUrl_Regex') || defaultPattern).trim();\n\n\t\tif (!pattern) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst regex: RegExp | undefined = (() => {\n\t\t\ttry {\n\t\t\t\treturn new RegExp(pattern, 'im');\n\t\t\t} catch {\n\t\t\t\tlogger.error('Failed to parse regular expression for meeting url.');\n\t\t\t}\n\t\t})();\n\n\t\tif (!regex) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst results = description.match(regex);\n\t\tif (!results) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [, ...urls] = results;\n\t\tfor (const encodedUrl of urls) {\n\t\t\tif (!encodedUrl) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet url = encodedUrl;\n\t\t\twhile (!url.includes('://')) {\n\t\t\t\tconst decodedUrl = decodeURIComponent(url);\n\t\t\t\tif (decodedUrl === url) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\turl = decodedUrl;\n\t\t\t}\n\n\t\t\tif (url.includes('://')) {\n\t\t\t\treturn url;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getShiftedTime(time: Date, minutes: number): Date {\n\t\tconst newTime = new Date(time.valueOf());\n\t\tnewTime.setMinutes(newTime.getMinutes() + minutes);\n\t\treturn newTime;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/calendar/service.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/calendar/service.ts","inputSourceMap":{"version":3,"file":"server/services/calendar/service.ts","sourceRoot":"","sources":["server/services/calendar/service.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ICalendarService } from '@rocket.chat/core-services';\nimport { ServiceClassInternal, api } from '@rocket.chat/core-services';\nimport type { IUser, ICalendarEvent } from '@rocket.chat/core-typings';\nimport { cronJobs } from '@rocket.chat/cron';\nimport { Logger } from '@rocket.chat/logger';\nimport type { InsertionModel } from '@rocket.chat/model-typings';\nimport { CalendarEvent } from '@rocket.chat/models';\nimport type { UpdateResult, DeleteResult } from 'mongodb';\n\nimport { settings } from '../../../app/settings/server';\nimport { getUserPreference } from '../../../app/utils/server/lib/getUserPreference';\n\nconst logger = new Logger('Calendar');\n\nconst defaultMinutesForNotifications = 5;\n\nexport class CalendarService extends ServiceClassInternal implements ICalendarService {\n\tprotected name = 'calendar';\n\n\tpublic async create(data: Omit<InsertionModel<ICalendarEvent>, 'reminderTime' | 'notificationSent'>): Promise<ICalendarEvent['_id']> {\n\t\tconst { uid, startTime, subject, description, reminderMinutesBeforeStart, meetingUrl } = data;\n\n\t\tconst minutes = reminderMinutesBeforeStart ?? defaultMinutesForNotifications;\n\t\tconst reminderTime = minutes ? this.getShiftedTime(startTime, -minutes) : undefined;\n\n\t\tconst insertData: InsertionModel<ICalendarEvent> = {\n\t\t\tuid,\n\t\t\tstartTime,\n\t\t\tsubject,\n\t\t\tdescription,\n\t\t\tmeetingUrl,\n\t\t\treminderMinutesBeforeStart: minutes,\n\t\t\treminderTime,\n\t\t\tnotificationSent: false,\n\t\t};\n\n\t\tconst insertResult = await CalendarEvent.insertOne(insertData);\n\t\tawait this.setupNextNotification();\n\n\t\treturn insertResult.insertedId;\n\t}\n\n\tpublic async import(data: Omit<InsertionModel<ICalendarEvent>, 'notificationSent'>): Promise<ICalendarEvent['_id']> {\n\t\tconst { externalId } = data;\n\t\tif (!externalId) {\n\t\t\treturn this.create(data);\n\t\t}\n\n\t\tconst { uid, startTime, subject, description, reminderMinutesBeforeStart } = data;\n\t\tconst meetingUrl = data.meetingUrl ? data.meetingUrl : await this.parseDescriptionForMeetingUrl(description);\n\t\tconst reminderTime = reminderMinutesBeforeStart ? this.getShiftedTime(startTime, -reminderMinutesBeforeStart) : undefined;\n\n\t\tconst updateData: Omit<InsertionModel<ICalendarEvent>, 'uid' | 'notificationSent'> = {\n\t\t\tstartTime,\n\t\t\tsubject,\n\t\t\tdescription,\n\t\t\tmeetingUrl,\n\t\t\treminderMinutesBeforeStart,\n\t\t\treminderTime,\n\t\t\texternalId,\n\t\t};\n\n\t\tconst event = await this.findImportedEvent(externalId, uid);\n\n\t\tif (!event) {\n\t\t\tconst insertResult = await CalendarEvent.insertOne({\n\t\t\t\tuid,\n\t\t\t\tnotificationSent: false,\n\t\t\t\t...updateData,\n\t\t\t});\n\n\t\t\tawait this.setupNextNotification();\n\t\t\treturn insertResult.insertedId;\n\t\t}\n\n\t\tconst updateResult = await CalendarEvent.updateEvent(event._id, updateData);\n\t\tif (updateResult.modifiedCount > 0) {\n\t\t\tawait this.setupNextNotification();\n\t\t}\n\n\t\treturn event._id;\n\t}\n\n\tpublic async get(eventId: ICalendarEvent['_id']): Promise<ICalendarEvent | null> {\n\t\treturn CalendarEvent.findOne({ _id: eventId });\n\t}\n\n\tpublic async list(uid: IUser['_id'], date: Date): Promise<ICalendarEvent[]> {\n\t\treturn CalendarEvent.findByUserIdAndDate(uid, date).toArray();\n\t}\n\n\tpublic async update(eventId: ICalendarEvent['_id'], data: Partial<ICalendarEvent>): Promise<UpdateResult> {\n\t\tconst { startTime, subject, description, reminderMinutesBeforeStart } = data;\n\t\tconst meetingUrl = data.meetingUrl ? data.meetingUrl : await this.parseDescriptionForMeetingUrl(description || '');\n\t\tconst reminderTime = reminderMinutesBeforeStart && startTime ? this.getShiftedTime(startTime, -reminderMinutesBeforeStart) : undefined;\n\n\t\tconst updateData: Partial<ICalendarEvent> = {\n\t\t\tstartTime,\n\t\t\tsubject,\n\t\t\tdescription,\n\t\t\tmeetingUrl,\n\t\t\treminderMinutesBeforeStart,\n\t\t\treminderTime,\n\t\t};\n\n\t\tconst updateResult = await CalendarEvent.updateEvent(eventId, updateData);\n\n\t\tif (updateResult.modifiedCount > 0) {\n\t\t\tawait this.setupNextNotification();\n\t\t}\n\n\t\treturn updateResult;\n\t}\n\n\tpublic async delete(eventId: ICalendarEvent['_id']): Promise<DeleteResult> {\n\t\treturn CalendarEvent.deleteOne({\n\t\t\t_id: eventId,\n\t\t});\n\t}\n\n\tpublic async setupNextNotification(): Promise<void> {\n\t\treturn this.doSetupNextNotification(false);\n\t}\n\n\tprivate async doSetupNextNotification(isRecursive: boolean): Promise<void> {\n\t\tconst date = await CalendarEvent.findNextNotificationDate();\n\t\tif (!date) {\n\t\t\tif (await cronJobs.has('calendar-reminders')) {\n\t\t\t\tawait cronJobs.remove('calendar-reminders');\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tdate.setSeconds(0);\n\t\tif (!isRecursive && date.valueOf() < Date.now()) {\n\t\t\treturn this.sendCurrentNotifications(date);\n\t\t}\n\n\t\tawait cronJobs.addAtTimestamp('calendar-reminders', date, async () => this.sendCurrentNotifications(date));\n\t}\n\n\tpublic async sendCurrentNotifications(date: Date): Promise<void> {\n\t\tconst events = await CalendarEvent.findEventsToNotify(date, 1).toArray();\n\n\t\tfor await (const event of events) {\n\t\t\tawait this.sendEventNotification(event);\n\n\t\t\tawait CalendarEvent.flagNotificationSent(event._id);\n\t\t}\n\n\t\tawait this.doSetupNextNotification(true);\n\t}\n\n\tpublic async sendEventNotification(event: ICalendarEvent): Promise<void> {\n\t\tif (!(await getUserPreference(event.uid, 'notifyCalendarEvents'))) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn api.broadcast('notify.calendar', event.uid, {\n\t\t\ttitle: event.subject,\n\t\t\ttext: event.startTime.toLocaleTimeString(undefined, { hour: 'numeric', minute: 'numeric', dayPeriod: 'narrow' }),\n\t\t\tpayload: {\n\t\t\t\t_id: event._id,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async findImportedEvent(\n\t\texternalId: Required<ICalendarEvent>['externalId'],\n\t\tuid: ICalendarEvent['uid'],\n\t): Promise<ICalendarEvent | null> {\n\t\treturn CalendarEvent.findOneByExternalIdAndUserId(externalId, uid);\n\t}\n\n\tpublic async parseDescriptionForMeetingUrl(description: string): Promise<string | undefined> {\n\t\tif (!description) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst defaultPattern = '(?:[?&]callUrl=([^\\n&<]+))|(?:(?:%3F)|(?:%26))callUrl(?:%3D)((?:(?:[^\\n&<](?!%26)))+[^\\n&<]?)';\n\t\tconst pattern = (settings.get<string>('Calendar_MeetingUrl_Regex') || defaultPattern).trim();\n\n\t\tif (!pattern) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst regex: RegExp | undefined = (() => {\n\t\t\ttry {\n\t\t\t\treturn new RegExp(pattern, 'im');\n\t\t\t} catch {\n\t\t\t\tlogger.error('Failed to parse regular expression for meeting url.');\n\t\t\t}\n\t\t})();\n\n\t\tif (!regex) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst results = description.match(regex);\n\t\tif (!results) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [, ...urls] = results;\n\t\tfor (const encodedUrl of urls) {\n\t\t\tif (!encodedUrl) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet url = encodedUrl;\n\t\t\twhile (!url.includes('://')) {\n\t\t\t\tconst decodedUrl = decodeURIComponent(url);\n\t\t\t\tif (decodedUrl === url) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\turl = decodedUrl;\n\t\t\t}\n\n\t\t\tif (url.includes('://')) {\n\t\t\t\treturn url;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getShiftedTime(time: Date, minutes: number): Date {\n\t\tconst newTime = new Date(time.valueOf());\n\t\tnewTime.setMinutes(newTime.getMinutes() + minutes);\n\t\treturn newTime;\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      CalendarService: () => CalendarService\n    });\n    let ServiceClassInternal, api;\n    module.link(\"@rocket.chat/core-services\", {\n      ServiceClassInternal(v) {\n        ServiceClassInternal = v;\n      },\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let cronJobs;\n    module.link(\"@rocket.chat/cron\", {\n      cronJobs(v) {\n        cronJobs = v;\n      }\n    }, 1);\n    let Logger;\n    module.link(\"@rocket.chat/logger\", {\n      Logger(v) {\n        Logger = v;\n      }\n    }, 2);\n    let CalendarEvent;\n    module.link(\"@rocket.chat/models\", {\n      CalendarEvent(v) {\n        CalendarEvent = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    let getUserPreference;\n    module.link(\"../../../app/utils/server/lib/getUserPreference\", {\n      getUserPreference(v) {\n        getUserPreference = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const logger = new Logger('Calendar');\n    const defaultMinutesForNotifications = 5;\n    class CalendarService extends ServiceClassInternal {\n      constructor() {\n        super(...arguments);\n        this.name = 'calendar';\n      }\n      async create(data) {\n        const {\n          uid,\n          startTime,\n          subject,\n          description,\n          reminderMinutesBeforeStart,\n          meetingUrl\n        } = data;\n        const minutes = reminderMinutesBeforeStart !== null && reminderMinutesBeforeStart !== void 0 ? reminderMinutesBeforeStart : defaultMinutesForNotifications;\n        const reminderTime = minutes ? this.getShiftedTime(startTime, -minutes) : undefined;\n        const insertData = {\n          uid,\n          startTime,\n          subject,\n          description,\n          meetingUrl,\n          reminderMinutesBeforeStart: minutes,\n          reminderTime,\n          notificationSent: false\n        };\n        const insertResult = await CalendarEvent.insertOne(insertData);\n        await this.setupNextNotification();\n        return insertResult.insertedId;\n      }\n      async import(data) {\n        const {\n          externalId\n        } = data;\n        if (!externalId) {\n          return this.create(data);\n        }\n        const {\n          uid,\n          startTime,\n          subject,\n          description,\n          reminderMinutesBeforeStart\n        } = data;\n        const meetingUrl = data.meetingUrl ? data.meetingUrl : await this.parseDescriptionForMeetingUrl(description);\n        const reminderTime = reminderMinutesBeforeStart ? this.getShiftedTime(startTime, -reminderMinutesBeforeStart) : undefined;\n        const updateData = {\n          startTime,\n          subject,\n          description,\n          meetingUrl,\n          reminderMinutesBeforeStart,\n          reminderTime,\n          externalId\n        };\n        const event = await this.findImportedEvent(externalId, uid);\n        if (!event) {\n          const insertResult = await CalendarEvent.insertOne(_objectSpread({\n            uid,\n            notificationSent: false\n          }, updateData));\n          await this.setupNextNotification();\n          return insertResult.insertedId;\n        }\n        const updateResult = await CalendarEvent.updateEvent(event._id, updateData);\n        if (updateResult.modifiedCount > 0) {\n          await this.setupNextNotification();\n        }\n        return event._id;\n      }\n      async get(eventId) {\n        return CalendarEvent.findOne({\n          _id: eventId\n        });\n      }\n      async list(uid, date) {\n        return CalendarEvent.findByUserIdAndDate(uid, date).toArray();\n      }\n      async update(eventId, data) {\n        const {\n          startTime,\n          subject,\n          description,\n          reminderMinutesBeforeStart\n        } = data;\n        const meetingUrl = data.meetingUrl ? data.meetingUrl : await this.parseDescriptionForMeetingUrl(description || '');\n        const reminderTime = reminderMinutesBeforeStart && startTime ? this.getShiftedTime(startTime, -reminderMinutesBeforeStart) : undefined;\n        const updateData = {\n          startTime,\n          subject,\n          description,\n          meetingUrl,\n          reminderMinutesBeforeStart,\n          reminderTime\n        };\n        const updateResult = await CalendarEvent.updateEvent(eventId, updateData);\n        if (updateResult.modifiedCount > 0) {\n          await this.setupNextNotification();\n        }\n        return updateResult;\n      }\n      async delete(eventId) {\n        return CalendarEvent.deleteOne({\n          _id: eventId\n        });\n      }\n      async setupNextNotification() {\n        return this.doSetupNextNotification(false);\n      }\n      async doSetupNextNotification(isRecursive) {\n        const date = await CalendarEvent.findNextNotificationDate();\n        if (!date) {\n          if (await cronJobs.has('calendar-reminders')) {\n            await cronJobs.remove('calendar-reminders');\n          }\n          return;\n        }\n        date.setSeconds(0);\n        if (!isRecursive && date.valueOf() < Date.now()) {\n          return this.sendCurrentNotifications(date);\n        }\n        await cronJobs.addAtTimestamp('calendar-reminders', date, async () => this.sendCurrentNotifications(date));\n      }\n      async sendCurrentNotifications(date) {\n        const events = await CalendarEvent.findEventsToNotify(date, 1).toArray();\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(events), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const event = _step.value;\n            {\n              await this.sendEventNotification(event);\n              await CalendarEvent.flagNotificationSent(event._id);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        await this.doSetupNextNotification(true);\n      }\n      async sendEventNotification(event) {\n        if (!(await getUserPreference(event.uid, 'notifyCalendarEvents'))) {\n          return;\n        }\n        return api.broadcast('notify.calendar', event.uid, {\n          title: event.subject,\n          text: event.startTime.toLocaleTimeString(undefined, {\n            hour: 'numeric',\n            minute: 'numeric',\n            dayPeriod: 'narrow'\n          }),\n          payload: {\n            _id: event._id\n          }\n        });\n      }\n      async findImportedEvent(externalId, uid) {\n        return CalendarEvent.findOneByExternalIdAndUserId(externalId, uid);\n      }\n      async parseDescriptionForMeetingUrl(description) {\n        if (!description) {\n          return;\n        }\n        const defaultPattern = '(?:[?&]callUrl=([^\\n&<]+))|(?:(?:%3F)|(?:%26))callUrl(?:%3D)((?:(?:[^\\n&<](?!%26)))+[^\\n&<]?)';\n        const pattern = (settings.get('Calendar_MeetingUrl_Regex') || defaultPattern).trim();\n        if (!pattern) {\n          return;\n        }\n        const regex = (() => {\n          try {\n            return new RegExp(pattern, 'im');\n          } catch (_unused) {\n            logger.error('Failed to parse regular expression for meeting url.');\n          }\n        })();\n        if (!regex) {\n          return;\n        }\n        const results = description.match(regex);\n        if (!results) {\n          return;\n        }\n        const [, ...urls] = results;\n        for (const encodedUrl of urls) {\n          if (!encodedUrl) {\n            continue;\n          }\n          let url = encodedUrl;\n          while (!url.includes('://')) {\n            const decodedUrl = decodeURIComponent(url);\n            if (decodedUrl === url) {\n              break;\n            }\n            url = decodedUrl;\n          }\n          if (url.includes('://')) {\n            return url;\n          }\n        }\n        return undefined;\n      }\n      getShiftedTime(time, minutes) {\n        const newTime = new Date(time.valueOf());\n        newTime.setMinutes(newTime.getMinutes() + minutes);\n        return newTime;\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","CalendarService","ServiceClassInternal","api","cronJobs","Logger","CalendarEvent","settings","getUserPreference","__reifyWaitForDeps__","logger","defaultMinutesForNotifications","constructor","arguments","name","create","data","uid","startTime","subject","description","reminderMinutesBeforeStart","meetingUrl","minutes","reminderTime","getShiftedTime","undefined","insertData","notificationSent","insertResult","insertOne","setupNextNotification","insertedId","import","externalId","parseDescriptionForMeetingUrl","updateData","event","findImportedEvent","updateResult","updateEvent","_id","modifiedCount","get","eventId","findOne","list","date","findByUserIdAndDate","toArray","update","delete","deleteOne","doSetupNextNotification","isRecursive","findNextNotificationDate","has","remove","setSeconds","valueOf","Date","now","sendCurrentNotifications","addAtTimestamp","events","findEventsToNotify","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","sendEventNotification","flagNotificationSent","err","return","broadcast","title","text","toLocaleTimeString","hour","minute","dayPeriod","payload","findOneByExternalIdAndUserId","defaultPattern","pattern","trim","regex","RegExp","_unused","error","results","match","urls","encodedUrl","url","includes","decodedUrl","decodeURIComponent","time","newTime","setMinutes","getMinutes","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/calendar/service.ts"],"sourcesContent":["import type { ICalendarService } from '@rocket.chat/core-services';\nimport { ServiceClassInternal, api } from '@rocket.chat/core-services';\nimport type { IUser, ICalendarEvent } from '@rocket.chat/core-typings';\nimport { cronJobs } from '@rocket.chat/cron';\nimport { Logger } from '@rocket.chat/logger';\nimport type { InsertionModel } from '@rocket.chat/model-typings';\nimport { CalendarEvent } from '@rocket.chat/models';\nimport type { UpdateResult, DeleteResult } from 'mongodb';\n\nimport { settings } from '../../../app/settings/server';\nimport { getUserPreference } from '../../../app/utils/server/lib/getUserPreference';\n\nconst logger = new Logger('Calendar');\n\nconst defaultMinutesForNotifications = 5;\n\nexport class CalendarService extends ServiceClassInternal implements ICalendarService {\n\tprotected name = 'calendar';\n\n\tpublic async create(data: Omit<InsertionModel<ICalendarEvent>, 'reminderTime' | 'notificationSent'>): Promise<ICalendarEvent['_id']> {\n\t\tconst { uid, startTime, subject, description, reminderMinutesBeforeStart, meetingUrl } = data;\n\n\t\tconst minutes = reminderMinutesBeforeStart ?? defaultMinutesForNotifications;\n\t\tconst reminderTime = minutes ? this.getShiftedTime(startTime, -minutes) : undefined;\n\n\t\tconst insertData: InsertionModel<ICalendarEvent> = {\n\t\t\tuid,\n\t\t\tstartTime,\n\t\t\tsubject,\n\t\t\tdescription,\n\t\t\tmeetingUrl,\n\t\t\treminderMinutesBeforeStart: minutes,\n\t\t\treminderTime,\n\t\t\tnotificationSent: false,\n\t\t};\n\n\t\tconst insertResult = await CalendarEvent.insertOne(insertData);\n\t\tawait this.setupNextNotification();\n\n\t\treturn insertResult.insertedId;\n\t}\n\n\tpublic async import(data: Omit<InsertionModel<ICalendarEvent>, 'notificationSent'>): Promise<ICalendarEvent['_id']> {\n\t\tconst { externalId } = data;\n\t\tif (!externalId) {\n\t\t\treturn this.create(data);\n\t\t}\n\n\t\tconst { uid, startTime, subject, description, reminderMinutesBeforeStart } = data;\n\t\tconst meetingUrl = data.meetingUrl ? data.meetingUrl : await this.parseDescriptionForMeetingUrl(description);\n\t\tconst reminderTime = reminderMinutesBeforeStart ? this.getShiftedTime(startTime, -reminderMinutesBeforeStart) : undefined;\n\n\t\tconst updateData: Omit<InsertionModel<ICalendarEvent>, 'uid' | 'notificationSent'> = {\n\t\t\tstartTime,\n\t\t\tsubject,\n\t\t\tdescription,\n\t\t\tmeetingUrl,\n\t\t\treminderMinutesBeforeStart,\n\t\t\treminderTime,\n\t\t\texternalId,\n\t\t};\n\n\t\tconst event = await this.findImportedEvent(externalId, uid);\n\n\t\tif (!event) {\n\t\t\tconst insertResult = await CalendarEvent.insertOne({\n\t\t\t\tuid,\n\t\t\t\tnotificationSent: false,\n\t\t\t\t...updateData,\n\t\t\t});\n\n\t\t\tawait this.setupNextNotification();\n\t\t\treturn insertResult.insertedId;\n\t\t}\n\n\t\tconst updateResult = await CalendarEvent.updateEvent(event._id, updateData);\n\t\tif (updateResult.modifiedCount > 0) {\n\t\t\tawait this.setupNextNotification();\n\t\t}\n\n\t\treturn event._id;\n\t}\n\n\tpublic async get(eventId: ICalendarEvent['_id']): Promise<ICalendarEvent | null> {\n\t\treturn CalendarEvent.findOne({ _id: eventId });\n\t}\n\n\tpublic async list(uid: IUser['_id'], date: Date): Promise<ICalendarEvent[]> {\n\t\treturn CalendarEvent.findByUserIdAndDate(uid, date).toArray();\n\t}\n\n\tpublic async update(eventId: ICalendarEvent['_id'], data: Partial<ICalendarEvent>): Promise<UpdateResult> {\n\t\tconst { startTime, subject, description, reminderMinutesBeforeStart } = data;\n\t\tconst meetingUrl = data.meetingUrl ? data.meetingUrl : await this.parseDescriptionForMeetingUrl(description || '');\n\t\tconst reminderTime = reminderMinutesBeforeStart && startTime ? this.getShiftedTime(startTime, -reminderMinutesBeforeStart) : undefined;\n\n\t\tconst updateData: Partial<ICalendarEvent> = {\n\t\t\tstartTime,\n\t\t\tsubject,\n\t\t\tdescription,\n\t\t\tmeetingUrl,\n\t\t\treminderMinutesBeforeStart,\n\t\t\treminderTime,\n\t\t};\n\n\t\tconst updateResult = await CalendarEvent.updateEvent(eventId, updateData);\n\n\t\tif (updateResult.modifiedCount > 0) {\n\t\t\tawait this.setupNextNotification();\n\t\t}\n\n\t\treturn updateResult;\n\t}\n\n\tpublic async delete(eventId: ICalendarEvent['_id']): Promise<DeleteResult> {\n\t\treturn CalendarEvent.deleteOne({\n\t\t\t_id: eventId,\n\t\t});\n\t}\n\n\tpublic async setupNextNotification(): Promise<void> {\n\t\treturn this.doSetupNextNotification(false);\n\t}\n\n\tprivate async doSetupNextNotification(isRecursive: boolean): Promise<void> {\n\t\tconst date = await CalendarEvent.findNextNotificationDate();\n\t\tif (!date) {\n\t\t\tif (await cronJobs.has('calendar-reminders')) {\n\t\t\t\tawait cronJobs.remove('calendar-reminders');\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tdate.setSeconds(0);\n\t\tif (!isRecursive && date.valueOf() < Date.now()) {\n\t\t\treturn this.sendCurrentNotifications(date);\n\t\t}\n\n\t\tawait cronJobs.addAtTimestamp('calendar-reminders', date, async () => this.sendCurrentNotifications(date));\n\t}\n\n\tpublic async sendCurrentNotifications(date: Date): Promise<void> {\n\t\tconst events = await CalendarEvent.findEventsToNotify(date, 1).toArray();\n\n\t\tfor await (const event of events) {\n\t\t\tawait this.sendEventNotification(event);\n\n\t\t\tawait CalendarEvent.flagNotificationSent(event._id);\n\t\t}\n\n\t\tawait this.doSetupNextNotification(true);\n\t}\n\n\tpublic async sendEventNotification(event: ICalendarEvent): Promise<void> {\n\t\tif (!(await getUserPreference(event.uid, 'notifyCalendarEvents'))) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn api.broadcast('notify.calendar', event.uid, {\n\t\t\ttitle: event.subject,\n\t\t\ttext: event.startTime.toLocaleTimeString(undefined, { hour: 'numeric', minute: 'numeric', dayPeriod: 'narrow' }),\n\t\t\tpayload: {\n\t\t\t\t_id: event._id,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async findImportedEvent(\n\t\texternalId: Required<ICalendarEvent>['externalId'],\n\t\tuid: ICalendarEvent['uid'],\n\t): Promise<ICalendarEvent | null> {\n\t\treturn CalendarEvent.findOneByExternalIdAndUserId(externalId, uid);\n\t}\n\n\tpublic async parseDescriptionForMeetingUrl(description: string): Promise<string | undefined> {\n\t\tif (!description) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst defaultPattern = '(?:[?&]callUrl=([^\\n&<]+))|(?:(?:%3F)|(?:%26))callUrl(?:%3D)((?:(?:[^\\n&<](?!%26)))+[^\\n&<]?)';\n\t\tconst pattern = (settings.get<string>('Calendar_MeetingUrl_Regex') || defaultPattern).trim();\n\n\t\tif (!pattern) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst regex: RegExp | undefined = (() => {\n\t\t\ttry {\n\t\t\t\treturn new RegExp(pattern, 'im');\n\t\t\t} catch {\n\t\t\t\tlogger.error('Failed to parse regular expression for meeting url.');\n\t\t\t}\n\t\t})();\n\n\t\tif (!regex) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst results = description.match(regex);\n\t\tif (!results) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [, ...urls] = results;\n\t\tfor (const encodedUrl of urls) {\n\t\t\tif (!encodedUrl) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet url = encodedUrl;\n\t\t\twhile (!url.includes('://')) {\n\t\t\t\tconst decodedUrl = decodeURIComponent(url);\n\t\t\t\tif (decodedUrl === url) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\turl = decodedUrl;\n\t\t\t}\n\n\t\t\tif (url.includes('://')) {\n\t\t\t\treturn url;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getShiftedTime(time: Date, minutes: number): Date {\n\t\tconst newTime = new Date(time.valueOf());\n\t\tnewTime.setMinutes(newTime.getMinutes() + minutes);\n\t\treturn newTime;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0f86b0dcf4bf3c0acfd94a14d2e498d7eef63c29"}
