{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","inputSourceMap":{"version":3,"file":"client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","sourceRoot":"","sources":["client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAE,cAAc,EAAE,SAAS,EAAE,uBAAuB,EAAE,SAAS,EAAE,mBAAmB,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAC3I,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEhC,OAAO,EAAE,iBAAiB,EAAE,MAAM,gCAAgC,CAAC;AAGnE,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,IAAqC,EAAE,GAAiB,EAA8B,EAAE;IAC1H,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,mBAAmB,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC;IACrD,MAAM,SAAS,GAAG,SAAS,EAAE,CAAC;IAC9B,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAC1B,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;IAE9B,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,KAAK,CAAC,mBAAmB,CAAC,CAAC;IAClC,CAAC;IAED,MAAM,EAAE,YAAY,EAAE,GAAG,iBAAiB,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,CAAC,CAAC;IAEhH,MAAM,aAAa,GAAG,mBAAmB,EAAE,OAAO,CAAC;IACnD,MAAM,WAAW,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;IAE3E,MAAM,qBAAqB,GAAG,kBAAkB,CAAC,KAAK,IAAI,EAAE;QAC3D,IAAI,CAAC;YACJ,MAAM,WAAW,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;YACzC,oBAAoB,CAAC;gBACpB,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,iBAAiB,CAAC;aACnE,CAAC,CAAC;QACJ,CAAC;QAAC,OAAO,KAAc,EAAE,CAAC;YACzB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACzD,CAAC;IACF,CAAC,CAAC,CAAC;IAEH,MAAM,qBAAqB,GAAG,OAAO,CACpC,GAAG,EAAE,CACJ,YAAY,IAAI,GAAG,KAAK,SAAS;QAChC,CAAC,CAAC;YACA,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;YAC/C,IAAI,EAAE,KAAc;YACpB,OAAO,EAAE,qBAAqB;SAC7B;QACH,CAAC,CAAC,SAAS,EACb,CAAC,aAAa,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC,EAAE,qBAAqB,EAAE,GAAG,CAAC,CACvE,CAAC;IAEF,OAAO,qBAAqB,CAAC;AAC9B,CAAC,CAAC","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useTranslation, useMethod, useToastMessageDispatch, useUserId, useUserSubscription, useUserRoom } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport type { UserInfoAction } from '../useUserInfoActions';\n\nexport const useBlockUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst currentSubscription = useUserSubscription(rid);\n\tconst ownUserId = useUserId();\n\tconst { _id: uid } = user;\n\tconst room = useUserRoom(rid);\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst { roomCanBlock } = getRoomDirectives({ room, showingUserId: uid, userSubscription: currentSubscription });\n\n\tconst isUserBlocked = currentSubscription?.blocker;\n\tconst toggleBlock = useMethod(isUserBlocked ? 'unblockUser' : 'blockUser');\n\n\tconst toggleBlockUserAction = useMutableCallback(async () => {\n\t\ttry {\n\t\t\tawait toggleBlock({ rid, blocked: uid });\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t(isUserBlocked ? 'User_is_unblocked' : 'User_is_blocked'),\n\t\t\t});\n\t\t} catch (error: unknown) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\n\tconst toggleBlockUserOption = useMemo(\n\t\t() =>\n\t\t\troomCanBlock && uid !== ownUserId\n\t\t\t\t? {\n\t\t\t\t\t\tcontent: t(isUserBlocked ? 'Unblock' : 'Block'),\n\t\t\t\t\t\ticon: 'ban' as const,\n\t\t\t\t\t\tonClick: toggleBlockUserAction,\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t\t[isUserBlocked, ownUserId, roomCanBlock, t, toggleBlockUserAction, uid],\n\t);\n\n\treturn toggleBlockUserOption;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","inputSourceMap":{"version":3,"file":"client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts","sourceRoot":"","sources":["client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAE,cAAc,EAAE,SAAS,EAAE,uBAAuB,EAAE,SAAS,EAAE,mBAAmB,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAC3I,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAEhC,OAAO,EAAE,iBAAiB,EAAE,MAAM,gCAAgC,CAAC;AAGnE,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,IAAqC,EAAE,GAAiB,EAA8B,EAAE;IAC1H,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,mBAAmB,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC;IACrD,MAAM,SAAS,GAAG,SAAS,EAAE,CAAC;IAC9B,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAC1B,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;IAE9B,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,KAAK,CAAC,mBAAmB,CAAC,CAAC;IAClC,CAAC;IAED,MAAM,EAAE,YAAY,EAAE,GAAG,iBAAiB,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,GAAG,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,CAAC,CAAC;IAEhH,MAAM,aAAa,GAAG,mBAAmB,EAAE,OAAO,CAAC;IACnD,MAAM,WAAW,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;IAE3E,MAAM,qBAAqB,GAAG,kBAAkB,CAAC,KAAK,IAAI,EAAE;QAC3D,IAAI,CAAC;YACJ,MAAM,WAAW,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;YACzC,oBAAoB,CAAC;gBACpB,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,iBAAiB,CAAC;aACnE,CAAC,CAAC;QACJ,CAAC;QAAC,OAAO,KAAc,EAAE,CAAC;YACzB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACzD,CAAC;IACF,CAAC,CAAC,CAAC;IAEH,MAAM,qBAAqB,GAAG,OAAO,CACpC,GAAG,EAAE,CACJ,YAAY,IAAI,GAAG,KAAK,SAAS;QAChC,CAAC,CAAC;YACA,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC;YAC/C,IAAI,EAAE,KAAc;YACpB,OAAO,EAAE,qBAAqB;SAC7B;QACH,CAAC,CAAC,SAAS,EACb,CAAC,aAAa,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC,EAAE,qBAAqB,EAAE,GAAG,CAAC,CACvE,CAAC;IAEF,OAAO,qBAAqB,CAAC;AAC9B,CAAC,CAAC","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useTranslation, useMethod, useToastMessageDispatch, useUserId, useUserSubscription, useUserRoom } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport type { UserInfoAction } from '../useUserInfoActions';\n\nexport const useBlockUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst currentSubscription = useUserSubscription(rid);\n\tconst ownUserId = useUserId();\n\tconst { _id: uid } = user;\n\tconst room = useUserRoom(rid);\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst { roomCanBlock } = getRoomDirectives({ room, showingUserId: uid, userSubscription: currentSubscription });\n\n\tconst isUserBlocked = currentSubscription?.blocker;\n\tconst toggleBlock = useMethod(isUserBlocked ? 'unblockUser' : 'blockUser');\n\n\tconst toggleBlockUserAction = useMutableCallback(async () => {\n\t\ttry {\n\t\t\tawait toggleBlock({ rid, blocked: uid });\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t(isUserBlocked ? 'User_is_unblocked' : 'User_is_blocked'),\n\t\t\t});\n\t\t} catch (error: unknown) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\n\tconst toggleBlockUserOption = useMemo(\n\t\t() =>\n\t\t\troomCanBlock && uid !== ownUserId\n\t\t\t\t? {\n\t\t\t\t\t\tcontent: t(isUserBlocked ? 'Unblock' : 'Block'),\n\t\t\t\t\t\ticon: 'ban' as const,\n\t\t\t\t\t\tonClick: toggleBlockUserAction,\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t\t[isUserBlocked, ownUserId, roomCanBlock, t, toggleBlockUserAction, uid],\n\t);\n\n\treturn toggleBlockUserOption;\n};\n"]}}},"code":"module.export({\n  useBlockUserAction: () => useBlockUserAction\n});\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n}, 0);\nlet useTranslation, useMethod, useToastMessageDispatch, useUserId, useUserSubscription, useUserRoom;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useTranslation(v) {\n    useTranslation = v;\n  },\n  useMethod(v) {\n    useMethod = v;\n  },\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  },\n  useUserId(v) {\n    useUserId = v;\n  },\n  useUserSubscription(v) {\n    useUserSubscription = v;\n  },\n  useUserRoom(v) {\n    useUserRoom = v;\n  }\n}, 1);\nlet useMemo;\nmodule.link(\"react\", {\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 2);\nlet getRoomDirectives;\nmodule.link(\"../../../lib/getRoomDirectives\", {\n  getRoomDirectives(v) {\n    getRoomDirectives = v;\n  }\n}, 3);\nconst useBlockUserAction = (user, rid) => {\n  const t = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const currentSubscription = useUserSubscription(rid);\n  const ownUserId = useUserId();\n  const {\n    _id: uid\n  } = user;\n  const room = useUserRoom(rid);\n  if (!room) {\n    throw Error('Room not provided');\n  }\n  const {\n    roomCanBlock\n  } = getRoomDirectives({\n    room,\n    showingUserId: uid,\n    userSubscription: currentSubscription\n  });\n  const isUserBlocked = currentSubscription === null || currentSubscription === void 0 ? void 0 : currentSubscription.blocker;\n  const toggleBlock = useMethod(isUserBlocked ? 'unblockUser' : 'blockUser');\n  const toggleBlockUserAction = useMutableCallback(async () => {\n    try {\n      await toggleBlock({\n        rid,\n        blocked: uid\n      });\n      dispatchToastMessage({\n        type: 'success',\n        message: t(isUserBlocked ? 'User_is_unblocked' : 'User_is_blocked')\n      });\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n    }\n  });\n  const toggleBlockUserOption = useMemo(() => roomCanBlock && uid !== ownUserId ? {\n    content: t(isUserBlocked ? 'Unblock' : 'Block'),\n    icon: 'ban',\n    onClick: toggleBlockUserAction\n  } : undefined, [isUserBlocked, ownUserId, roomCanBlock, t, toggleBlockUserAction, uid]);\n  return toggleBlockUserOption;\n};","map":{"version":3,"names":["module","export","useBlockUserAction","useMutableCallback","link","v","useTranslation","useMethod","useToastMessageDispatch","useUserId","useUserSubscription","useUserRoom","useMemo","getRoomDirectives","user","rid","t","dispatchToastMessage","currentSubscription","ownUserId","_id","uid","room","Error","roomCanBlock","showingUserId","userSubscription","isUserBlocked","blocker","toggleBlock","toggleBlockUserAction","blocked","type","message","error","toggleBlockUserOption","content","icon","onClick","undefined"],"sources":["client/views/room/hooks/useUserInfoActions/actions/useBlockUserAction.ts"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useTranslation, useMethod, useToastMessageDispatch, useUserId, useUserSubscription, useUserRoom } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport type { UserInfoAction } from '../useUserInfoActions';\n\nexport const useBlockUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst currentSubscription = useUserSubscription(rid);\n\tconst ownUserId = useUserId();\n\tconst { _id: uid } = user;\n\tconst room = useUserRoom(rid);\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst { roomCanBlock } = getRoomDirectives({ room, showingUserId: uid, userSubscription: currentSubscription });\n\n\tconst isUserBlocked = currentSubscription?.blocker;\n\tconst toggleBlock = useMethod(isUserBlocked ? 'unblockUser' : 'blockUser');\n\n\tconst toggleBlockUserAction = useMutableCallback(async () => {\n\t\ttry {\n\t\t\tawait toggleBlock({ rid, blocked: uid });\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t(isUserBlocked ? 'User_is_unblocked' : 'User_is_blocked'),\n\t\t\t});\n\t\t} catch (error: unknown) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\n\tconst toggleBlockUserOption = useMemo(\n\t\t() =>\n\t\t\troomCanBlock && uid !== ownUserId\n\t\t\t\t? {\n\t\t\t\t\t\tcontent: t(isUserBlocked ? 'Unblock' : 'Block'),\n\t\t\t\t\t\ticon: 'ban' as const,\n\t\t\t\t\t\tonClick: toggleBlockUserAction,\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t\t[isUserBlocked, ownUserId, roomCanBlock, t, toggleBlockUserAction, uid],\n\t);\n\n\treturn toggleBlockUserOption;\n};\n"],"mappings":"AACAA,MAAA,CAAOC,MAAE;EAAAC,kBAAoB,EAAAA,CAAA,KAAMA;AAAA;AAAA,IAAAC,kBAA8B;AAAAH,MAAA,CAAAI,IAAA;EAAAD,mBAAAE,CAAA;IAAAF,kBAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,cAAA,EAAAC,SAAA,EAAAC,uBAAA,EAAAC,SAAA,EAAAC,mBAAA,EAAAC,WAAA;AAAAX,MAAA,CAAAI,IAAA;EAAAE,eAAAD,CAAA;IAAAC,cAAA,GAAAD,CAAA;EAAA;EAAAE,UAAAF,CAAA;IAAAE,SAAA,GAAAF,CAAA;EAAA;EAAAG,wBAAAH,CAAA;IAAAG,uBAAA,GAAAH,CAAA;EAAA;EAAAI,UAAAJ,CAAA;IAAAI,SAAA,GAAAJ,CAAA;EAAA;EAAAK,oBAAAL,CAAA;IAAAK,mBAAA,GAAAL,CAAA;EAAA;EAAAM,YAAAN,CAAA;IAAAM,WAAA,GAAAN,CAAA;EAAA;AAAA;AAAA,IAAAO,OAAA;AAAAZ,MAAA,CAAAI,IAAA;EAAAQ,QAAAP,CAAA;IAAAO,OAAA,GAAAP,CAAA;EAAA;AAAA;AAAA,IAAAQ,iBAAA;AAAAb,MAAA,CAAAI,IAAA;EAAAS,kBAAAR,CAAA;IAAAQ,iBAAA,GAAAR,CAAA;EAAA;AAAA;AAO1D,MAAMH,kBAAkB,GAAGA,CAACY,IAAqC,EAAEC,GAAiB,KAAgC;EAC1H,MAAMC,CAAC,GAAGV,cAAc,EAAE;EAC1B,MAAMW,oBAAoB,GAAGT,uBAAuB,EAAE;EACtD,MAAMU,mBAAmB,GAAGR,mBAAmB,CAACK,GAAG,CAAC;EACpD,MAAMI,SAAS,GAAGV,SAAS,EAAE;EAC7B,MAAM;IAAEW,GAAG,EAAEC;EAAG,CAAE,GAAGP,IAAI;EACzB,MAAMQ,IAAI,GAAGX,WAAW,CAACI,GAAG,CAAC;EAE7B,IAAI,CAACO,IAAI,EAAE;IACV,MAAMC,KAAK,CAAC,mBAAmB,CAAC;EACjC;EAEA,MAAM;IAAEC;EAAY,CAAE,GAAGX,iBAAiB,CAAC;IAAES,IAAI;IAAEG,aAAa,EAAEJ,GAAG;IAAEK,gBAAgB,EAAER;EAAmB,CAAE,CAAC;EAE/G,MAAMS,aAAa,GAAGT,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAEU,OAAO;EAClD,MAAMC,WAAW,GAAGtB,SAAS,CAACoB,aAAa,GAAG,aAAa,GAAG,WAAW,CAAC;EAE1E,MAAMG,qBAAqB,GAAG3B,kBAAkB,CAAC,YAAW;IAC3D,IAAI;MACH,MAAM0B,WAAW,CAAC;QAAEd,GAAG;QAAEgB,OAAO,EAAEV;MAAG,CAAE,CAAC;MACxCJ,oBAAoB,CAAC;QACpBe,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEjB,CAAC,CAACW,aAAa,GAAG,mBAAmB,GAAG,iBAAiB;OAClE,CAAC;IACH,CAAC,CAAC,OAAOO,KAAc,EAAE;MACxBjB,oBAAoB,CAAC;QAAEe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEC;MAAK,CAAE,CAAC;IACxD;EACD,CAAC,CAAC;EAEF,MAAMC,qBAAqB,GAAGvB,OAAO,CACpC,MACCY,YAAY,IAAIH,GAAG,KAAKF,SAAS,GAC9B;IACAiB,OAAO,EAAEpB,CAAC,CAACW,aAAa,GAAG,SAAS,GAAG,OAAO,CAAC;IAC/CU,IAAI,EAAE,KAAc;IACpBC,OAAO,EAAER;GACR,GACDS,SAAS,EACb,CAACZ,aAAa,EAAER,SAAS,EAAEK,YAAY,EAAER,CAAC,EAAEc,qBAAqB,EAAET,GAAG,CAAC,CACvE;EAED,OAAOc,qBAAqB;AAC7B,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"15ab019f9bd960eaa925ac30649f4e82a76662a4"}
