{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/lib/callbacks/callbacksBase.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"lib/callbacks/callbacksBase.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/lib/callbacks/callbacksBase.ts","inputSourceMap":{"version":3,"file":"lib/callbacks/callbacksBase.ts","sourceRoot":"","sources":["lib/callbacks/callbacksBase.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Logger } from '@rocket.chat/logger';\nimport { Random } from '@rocket.chat/random';\n\nimport { compareByRanking } from '../utils/comparisons';\n\nenum CallbackPriority {\n\tHIGH = -1000,\n\tMEDIUM = 0,\n\tLOW = 1000,\n}\n\ntype Callback<H> = {\n\t(item: unknown, constant?: unknown): Promise<unknown>;\n\thook: H;\n\tid: string;\n\tpriority: CallbackPriority;\n\tstack: string;\n};\n\ntype CallbackTracker<H> = (callback: Callback<H>) => () => void;\n\ntype HookTracker<H> = (params: { hook: H; length: number }) => () => void;\n\nexport class Callbacks<\n\tTChainedCallbackSignatures extends {\n\t\t[key: string]: (item: any, constant?: any) => any;\n\t},\n\tTEventLikeCallbackSignatures extends {\n\t\t[key: string]: (item: any, constant?: any) => any;\n\t},\n\tTHook extends string = keyof TChainedCallbackSignatures & keyof TEventLikeCallbackSignatures & string,\n> {\n\tprivate logger: Logger | undefined = undefined;\n\n\tprivate trackCallback: CallbackTracker<THook> | undefined = undefined;\n\n\tprivate trackHook: HookTracker<THook> | undefined = undefined;\n\n\tprivate callbacks = new Map<THook, Callback<THook>[]>();\n\n\tprivate sequentialRunners = new Map<THook, (item: unknown, constant?: unknown) => Promise<unknown>>();\n\n\tprivate asyncRunners = new Map<THook, (item: unknown, constant?: unknown) => unknown>();\n\n\treadonly priority = CallbackPriority;\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tsetMetricsTrackers({ trackCallback, trackHook }: { trackCallback?: CallbackTracker<THook>; trackHook?: HookTracker<THook> }): void {\n\t\tthis.trackCallback = trackCallback;\n\t\tthis.trackHook = trackHook;\n\t}\n\n\tprivate runOne(callback: Callback<THook>, item: unknown, constant: unknown): Promise<unknown> {\n\t\tconst stopTracking = this.trackCallback?.(callback);\n\n\t\treturn Promise.resolve(callback(item, constant)).finally(stopTracking);\n\t}\n\n\tprivate createSequentialRunner(hook: THook, callbacks: Callback<THook>[]): (item: unknown, constant?: unknown) => Promise<unknown> {\n\t\tconst wrapCallback =\n\t\t\t(callback: Callback<THook>) =>\n\t\t\tasync (item: unknown, constant?: unknown): Promise<unknown> => {\n\t\t\t\tthis.logger?.debug(`Executing callback with id ${callback.id} for hook ${callback.hook}`);\n\n\t\t\t\treturn (await this.runOne(callback, item, constant)) ?? item;\n\t\t\t};\n\n\t\tconst identity = <TItem>(item: TItem): Promise<TItem> => Promise.resolve(item);\n\n\t\tconst pipe =\n\t\t\t(curr: (item: unknown, constant?: unknown) => Promise<unknown>, next: (item: unknown, constant?: unknown) => Promise<unknown>) =>\n\t\t\tasync (item: unknown, constant?: unknown): Promise<unknown> =>\n\t\t\t\tnext(await curr(item, constant), constant);\n\n\t\tconst fn = callbacks.map(wrapCallback).reduce(pipe, identity);\n\n\t\treturn async (item: unknown, constant?: unknown): Promise<unknown> => {\n\t\t\tconst stopTracking = this.trackHook?.({ hook, length: callbacks.length });\n\n\t\t\treturn fn(item, constant).finally(() => stopTracking?.());\n\t\t};\n\t}\n\n\tprivate createAsyncRunner(_: THook, callbacks: Callback<THook>[]) {\n\t\treturn (item: unknown, constant?: unknown): unknown => {\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\tthrow new Error('callbacks.runAsync on client server not allowed');\n\t\t\t}\n\n\t\t\tfor (const callback of callbacks) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tvoid this.runOne(callback, item, constant);\n\t\t\t\t}, 0);\n\t\t\t}\n\n\t\t\treturn item;\n\t\t};\n\t}\n\n\tgetCallbacks(hook: THook): Callback<THook>[] {\n\t\treturn this.callbacks.get(hook) ?? [];\n\t}\n\n\tsetCallbacks(hook: THook, callbacks: Callback<THook>[]): void {\n\t\tthis.callbacks.set(hook, callbacks);\n\t\tthis.sequentialRunners.set(hook, this.createSequentialRunner(hook, callbacks));\n\t\tthis.asyncRunners.set(hook, this.createAsyncRunner(hook, callbacks));\n\t}\n\n\t/**\n\t * Add a callback function to a hook\n\t *\n\t * @param hook the name of the hook\n\t * @param callback the callback function\n\t * @param priority the callback run priority (order)\n\t * @param id human friendly name for this callback\n\t */\n\tadd<Hook extends keyof TEventLikeCallbackSignatures>(\n\t\thook: Hook,\n\t\tcallback: TEventLikeCallbackSignatures[Hook],\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd<Hook extends keyof TChainedCallbackSignatures>(\n\t\thook: Hook,\n\t\tcallback: TChainedCallbackSignatures[Hook],\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd<TItem, TConstant, TNextItem = TItem>(\n\t\thook: THook,\n\t\tcallback: (item: TItem, constant?: TConstant) => TNextItem,\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd(hook: THook, callback: (item: unknown, constant?: unknown) => unknown, priority = this.priority.MEDIUM, id = Random.id()): void {\n\t\tconst callbacks = this.getCallbacks(hook);\n\n\t\tif (callbacks.some((cb) => cb.id === id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcallbacks.push(\n\t\t\tObject.assign(callback as Callback<THook>, {\n\t\t\t\thook,\n\t\t\t\tpriority,\n\t\t\t\tid,\n\t\t\t\tstack: new Error().stack,\n\t\t\t}),\n\t\t);\n\t\tcallbacks.sort(compareByRanking((callback: Callback<THook>): number => callback.priority ?? this.priority.MEDIUM));\n\n\t\tthis.setCallbacks(hook, callbacks);\n\t}\n\n\t/**\n\t * Remove a callback from a hook\n\t *\n\t * @param hook the name of the hook\n\t * @param id the callback's id\n\t */\n\tremove(hook: THook, id: string): void {\n\t\tconst hooks = this.getCallbacks(hook).filter((callback) => callback.id !== id);\n\t\tthis.setCallbacks(hook, hooks);\n\t}\n\n\trun<Hook extends keyof TEventLikeCallbackSignatures>(hook: Hook, ...args: Parameters<TEventLikeCallbackSignatures[Hook]>): Promise<void>;\n\n\trun<Hook extends keyof TChainedCallbackSignatures>(\n\t\thook: Hook,\n\t\t...args: Parameters<TChainedCallbackSignatures[Hook]>\n\t): Promise<ReturnType<TChainedCallbackSignatures[Hook]>>;\n\n\trun<TItem, TConstant, TNextItem = TItem>(hook: THook, item: TItem, constant?: TConstant): Promise<TNextItem>;\n\n\t/**\n\t * Successively run all of a hook's callbacks on an item\n\t *\n\t * @param hook the name of the hook\n\t * @param item the post, comment, modifier, etc. on which to run the callbacks\n\t * @param constant an optional constant that will be passed along to each callback\n\t * @returns returns the item after it's been through all the callbacks for this hook\n\t */\n\trun(hook: THook, item: unknown, constant?: unknown): Promise<unknown> {\n\t\tconst runner = this.sequentialRunners.get(hook) ?? (async (item: unknown, _constant?: unknown): Promise<unknown> => item);\n\t\treturn runner(item, constant);\n\t}\n\n\trunAsync<Hook extends keyof TEventLikeCallbackSignatures>(hook: Hook, ...args: Parameters<TEventLikeCallbackSignatures[Hook]>): void;\n\n\t/**\n\t * Successively run all of a hook's callbacks on an item, in async mode (only works on server)\n\t *\n\t * @param hook the name of the hook\n\t * @param item the post, comment, modifier, etc. on which to run the callbacks\n\t * @param constant an optional constant that will be passed along to each callback\n\t * @returns the post, comment, modifier, etc. on which to run the callbacks\n\t */\n\trunAsync(hook: THook, item: unknown, constant?: unknown): unknown {\n\t\tconst runner = this.asyncRunners.get(hook) ?? ((item: unknown, _constant?: unknown): unknown => item);\n\t\treturn runner(item, constant);\n\t}\n\n\tstatic create<F extends (item: any, constant?: any) => any | Promise<any>>(\n\t\thook: string,\n\t): Cb<Parameters<F>[0], ReturnType<F>, Parameters<F>[1]>;\n\n\tstatic create<I, R, C = undefined>(hook: string): Cb<I, R, C> {\n\t\tconst callbacks = new Callbacks();\n\n\t\treturn {\n\t\t\tadd: (callback, priority, id) => callbacks.add(hook as any, callback, priority, id),\n\t\t\tremove: (id) => callbacks.remove(hook as any, id),\n\t\t\trun: (item, constant) => callbacks.run(hook as any, item, constant) as any,\n\t\t};\n\t}\n}\n\n/**\n * Callback hooks provide an easy way to add extra steps to common operations.\n * @deprecated\n */\ntype Cb<I, R, C = undefined> = {\n\tadd: (\n\t\tcallback: (item: I, constant: C) => Promise<R | undefined | void> | R | undefined | void,\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t) => void;\n\tremove: (id: string) => void;\n\trun: (item: I, constant?: C) => Promise<R>;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/lib/callbacks/callbacksBase.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"lib/callbacks/callbacksBase.ts","inputSourceMap":{"version":3,"file":"lib/callbacks/callbacksBase.ts","sourceRoot":"","sources":["lib/callbacks/callbacksBase.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAE7C,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAExD,IAAK,gBAIJ;AAJD,WAAK,gBAAgB;IACpB,2DAAY,CAAA;IACZ,2DAAU,CAAA;IACV,wDAAU,CAAA;AACX,CAAC,EAJI,gBAAgB,KAAhB,gBAAgB,QAIpB;AAcD,MAAM,OAAO,SAAS;IASb,MAAM,GAAuB,SAAS,CAAC;IAEvC,aAAa,GAAuC,SAAS,CAAC;IAE9D,SAAS,GAAmC,SAAS,CAAC;IAEtD,SAAS,GAAG,IAAI,GAAG,EAA4B,CAAC;IAEhD,iBAAiB,GAAG,IAAI,GAAG,EAAkE,CAAC;IAE9F,YAAY,GAAG,IAAI,GAAG,EAAyD,CAAC;IAE/E,QAAQ,GAAG,gBAAgB,CAAC;IAErC,SAAS,CAAC,MAAc;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;IAED,kBAAkB,CAAC,EAAE,aAAa,EAAE,SAAS,EAA8E;QAC1H,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5B,CAAC;IAEO,MAAM,CAAC,QAAyB,EAAE,IAAa,EAAE,QAAiB;QACzE,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAC;QAEpD,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IACxE,CAAC;IAEO,sBAAsB,CAAC,IAAW,EAAE,SAA4B;QACvE,MAAM,YAAY,GACjB,CAAC,QAAyB,EAAE,EAAE,CAC9B,KAAK,EAAE,IAAa,EAAE,QAAkB,EAAoB,EAAE;YAC7D,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,8BAA8B,QAAQ,CAAC,EAAE,aAAa,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;YAE1F,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC;QAC9D,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAG,CAAQ,IAAW,EAAkB,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE/E,MAAM,IAAI,GACT,CAAC,IAA6D,EAAE,IAA6D,EAAE,EAAE,CACjI,KAAK,EAAE,IAAa,EAAE,QAAkB,EAAoB,EAAE,CAC7D,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC;QAE7C,MAAM,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAE9D,OAAO,KAAK,EAAE,IAAa,EAAE,QAAkB,EAAoB,EAAE;YACpE,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;YAE1E,OAAO,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QAC3D,CAAC,CAAC;IACH,CAAC;IAEO,iBAAiB,CAAC,CAAQ,EAAE,SAA4B;QAC/D,OAAO,CAAC,IAAa,EAAE,QAAkB,EAAW,EAAE;YACrD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;gBACnC,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;YACpE,CAAC;YAED,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE,CAAC;gBAClC,UAAU,CAAC,GAAG,EAAE;oBACf,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;gBAC5C,CAAC,EAAE,CAAC,CAAC,CAAC;YACP,CAAC;YAED,OAAO,IAAI,CAAC;QACb,CAAC,CAAC;IACH,CAAC;IAED,YAAY,CAAC,IAAW;QACvB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IACvC,CAAC;IAED,YAAY,CAAC,IAAW,EAAE,SAA4B;QACrD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACpC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;QAC/E,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;IACtE,CAAC;IA+BD,GAAG,CAAC,IAAW,EAAE,QAAwD,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,GAAG,MAAM,CAAC,EAAE,EAAE;QAC3H,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAE1C,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;YAC1C,OAAO;QACR,CAAC;QAED,SAAS,CAAC,IAAI,CACb,MAAM,CAAC,MAAM,CAAC,QAA2B,EAAE;YAC1C,IAAI;YACJ,QAAQ;YACR,EAAE;YACF,KAAK,EAAE,IAAI,KAAK,EAAE,CAAC,KAAK;SACxB,CAAC,CACF,CAAC;QACF,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,QAAyB,EAAU,EAAE,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAEnH,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACpC,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,IAAW,EAAE,EAAU;QAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/E,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAChC,CAAC;IAWD;;;;;;;OAOG;IACH,GAAG,CAAC,IAAW,EAAE,IAAa,EAAE,QAAkB;QACjD,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAa,EAAE,SAAmB,EAAoB,EAAE,CAAC,IAAI,CAAC,CAAC;QAC1H,OAAO,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC/B,CAAC;IAID;;;;;;;OAOG;IACH,QAAQ,CAAC,IAAW,EAAE,IAAa,EAAE,QAAkB;QACtD,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAa,EAAE,SAAmB,EAAW,EAAE,CAAC,IAAI,CAAC,CAAC;QACtG,OAAO,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC/B,CAAC;IAMD,MAAM,CAAC,MAAM,CAAsB,IAAY;QAC9C,MAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;QAElC,OAAO;YACN,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,IAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,CAAC;YACnF,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,IAAW,EAAE,EAAE,CAAC;YACjD,GAAG,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,IAAW,EAAE,IAAI,EAAE,QAAQ,CAAQ;SAC1E,CAAC;IACH,CAAC;CACD","sourcesContent":["import type { Logger } from '@rocket.chat/logger';\nimport { Random } from '@rocket.chat/random';\n\nimport { compareByRanking } from '../utils/comparisons';\n\nenum CallbackPriority {\n\tHIGH = -1000,\n\tMEDIUM = 0,\n\tLOW = 1000,\n}\n\ntype Callback<H> = {\n\t(item: unknown, constant?: unknown): Promise<unknown>;\n\thook: H;\n\tid: string;\n\tpriority: CallbackPriority;\n\tstack: string;\n};\n\ntype CallbackTracker<H> = (callback: Callback<H>) => () => void;\n\ntype HookTracker<H> = (params: { hook: H; length: number }) => () => void;\n\nexport class Callbacks<\n\tTChainedCallbackSignatures extends {\n\t\t[key: string]: (item: any, constant?: any) => any;\n\t},\n\tTEventLikeCallbackSignatures extends {\n\t\t[key: string]: (item: any, constant?: any) => any;\n\t},\n\tTHook extends string = keyof TChainedCallbackSignatures & keyof TEventLikeCallbackSignatures & string,\n> {\n\tprivate logger: Logger | undefined = undefined;\n\n\tprivate trackCallback: CallbackTracker<THook> | undefined = undefined;\n\n\tprivate trackHook: HookTracker<THook> | undefined = undefined;\n\n\tprivate callbacks = new Map<THook, Callback<THook>[]>();\n\n\tprivate sequentialRunners = new Map<THook, (item: unknown, constant?: unknown) => Promise<unknown>>();\n\n\tprivate asyncRunners = new Map<THook, (item: unknown, constant?: unknown) => unknown>();\n\n\treadonly priority = CallbackPriority;\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tsetMetricsTrackers({ trackCallback, trackHook }: { trackCallback?: CallbackTracker<THook>; trackHook?: HookTracker<THook> }): void {\n\t\tthis.trackCallback = trackCallback;\n\t\tthis.trackHook = trackHook;\n\t}\n\n\tprivate runOne(callback: Callback<THook>, item: unknown, constant: unknown): Promise<unknown> {\n\t\tconst stopTracking = this.trackCallback?.(callback);\n\n\t\treturn Promise.resolve(callback(item, constant)).finally(stopTracking);\n\t}\n\n\tprivate createSequentialRunner(hook: THook, callbacks: Callback<THook>[]): (item: unknown, constant?: unknown) => Promise<unknown> {\n\t\tconst wrapCallback =\n\t\t\t(callback: Callback<THook>) =>\n\t\t\tasync (item: unknown, constant?: unknown): Promise<unknown> => {\n\t\t\t\tthis.logger?.debug(`Executing callback with id ${callback.id} for hook ${callback.hook}`);\n\n\t\t\t\treturn (await this.runOne(callback, item, constant)) ?? item;\n\t\t\t};\n\n\t\tconst identity = <TItem>(item: TItem): Promise<TItem> => Promise.resolve(item);\n\n\t\tconst pipe =\n\t\t\t(curr: (item: unknown, constant?: unknown) => Promise<unknown>, next: (item: unknown, constant?: unknown) => Promise<unknown>) =>\n\t\t\tasync (item: unknown, constant?: unknown): Promise<unknown> =>\n\t\t\t\tnext(await curr(item, constant), constant);\n\n\t\tconst fn = callbacks.map(wrapCallback).reduce(pipe, identity);\n\n\t\treturn async (item: unknown, constant?: unknown): Promise<unknown> => {\n\t\t\tconst stopTracking = this.trackHook?.({ hook, length: callbacks.length });\n\n\t\t\treturn fn(item, constant).finally(() => stopTracking?.());\n\t\t};\n\t}\n\n\tprivate createAsyncRunner(_: THook, callbacks: Callback<THook>[]) {\n\t\treturn (item: unknown, constant?: unknown): unknown => {\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\tthrow new Error('callbacks.runAsync on client server not allowed');\n\t\t\t}\n\n\t\t\tfor (const callback of callbacks) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tvoid this.runOne(callback, item, constant);\n\t\t\t\t}, 0);\n\t\t\t}\n\n\t\t\treturn item;\n\t\t};\n\t}\n\n\tgetCallbacks(hook: THook): Callback<THook>[] {\n\t\treturn this.callbacks.get(hook) ?? [];\n\t}\n\n\tsetCallbacks(hook: THook, callbacks: Callback<THook>[]): void {\n\t\tthis.callbacks.set(hook, callbacks);\n\t\tthis.sequentialRunners.set(hook, this.createSequentialRunner(hook, callbacks));\n\t\tthis.asyncRunners.set(hook, this.createAsyncRunner(hook, callbacks));\n\t}\n\n\t/**\n\t * Add a callback function to a hook\n\t *\n\t * @param hook the name of the hook\n\t * @param callback the callback function\n\t * @param priority the callback run priority (order)\n\t * @param id human friendly name for this callback\n\t */\n\tadd<Hook extends keyof TEventLikeCallbackSignatures>(\n\t\thook: Hook,\n\t\tcallback: TEventLikeCallbackSignatures[Hook],\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd<Hook extends keyof TChainedCallbackSignatures>(\n\t\thook: Hook,\n\t\tcallback: TChainedCallbackSignatures[Hook],\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd<TItem, TConstant, TNextItem = TItem>(\n\t\thook: THook,\n\t\tcallback: (item: TItem, constant?: TConstant) => TNextItem,\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd(hook: THook, callback: (item: unknown, constant?: unknown) => unknown, priority = this.priority.MEDIUM, id = Random.id()): void {\n\t\tconst callbacks = this.getCallbacks(hook);\n\n\t\tif (callbacks.some((cb) => cb.id === id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcallbacks.push(\n\t\t\tObject.assign(callback as Callback<THook>, {\n\t\t\t\thook,\n\t\t\t\tpriority,\n\t\t\t\tid,\n\t\t\t\tstack: new Error().stack,\n\t\t\t}),\n\t\t);\n\t\tcallbacks.sort(compareByRanking((callback: Callback<THook>): number => callback.priority ?? this.priority.MEDIUM));\n\n\t\tthis.setCallbacks(hook, callbacks);\n\t}\n\n\t/**\n\t * Remove a callback from a hook\n\t *\n\t * @param hook the name of the hook\n\t * @param id the callback's id\n\t */\n\tremove(hook: THook, id: string): void {\n\t\tconst hooks = this.getCallbacks(hook).filter((callback) => callback.id !== id);\n\t\tthis.setCallbacks(hook, hooks);\n\t}\n\n\trun<Hook extends keyof TEventLikeCallbackSignatures>(hook: Hook, ...args: Parameters<TEventLikeCallbackSignatures[Hook]>): Promise<void>;\n\n\trun<Hook extends keyof TChainedCallbackSignatures>(\n\t\thook: Hook,\n\t\t...args: Parameters<TChainedCallbackSignatures[Hook]>\n\t): Promise<ReturnType<TChainedCallbackSignatures[Hook]>>;\n\n\trun<TItem, TConstant, TNextItem = TItem>(hook: THook, item: TItem, constant?: TConstant): Promise<TNextItem>;\n\n\t/**\n\t * Successively run all of a hook's callbacks on an item\n\t *\n\t * @param hook the name of the hook\n\t * @param item the post, comment, modifier, etc. on which to run the callbacks\n\t * @param constant an optional constant that will be passed along to each callback\n\t * @returns returns the item after it's been through all the callbacks for this hook\n\t */\n\trun(hook: THook, item: unknown, constant?: unknown): Promise<unknown> {\n\t\tconst runner = this.sequentialRunners.get(hook) ?? (async (item: unknown, _constant?: unknown): Promise<unknown> => item);\n\t\treturn runner(item, constant);\n\t}\n\n\trunAsync<Hook extends keyof TEventLikeCallbackSignatures>(hook: Hook, ...args: Parameters<TEventLikeCallbackSignatures[Hook]>): void;\n\n\t/**\n\t * Successively run all of a hook's callbacks on an item, in async mode (only works on server)\n\t *\n\t * @param hook the name of the hook\n\t * @param item the post, comment, modifier, etc. on which to run the callbacks\n\t * @param constant an optional constant that will be passed along to each callback\n\t * @returns the post, comment, modifier, etc. on which to run the callbacks\n\t */\n\trunAsync(hook: THook, item: unknown, constant?: unknown): unknown {\n\t\tconst runner = this.asyncRunners.get(hook) ?? ((item: unknown, _constant?: unknown): unknown => item);\n\t\treturn runner(item, constant);\n\t}\n\n\tstatic create<F extends (item: any, constant?: any) => any | Promise<any>>(\n\t\thook: string,\n\t): Cb<Parameters<F>[0], ReturnType<F>, Parameters<F>[1]>;\n\n\tstatic create<I, R, C = undefined>(hook: string): Cb<I, R, C> {\n\t\tconst callbacks = new Callbacks();\n\n\t\treturn {\n\t\t\tadd: (callback, priority, id) => callbacks.add(hook as any, callback, priority, id),\n\t\t\tremove: (id) => callbacks.remove(hook as any, id),\n\t\t\trun: (item, constant) => callbacks.run(hook as any, item, constant) as any,\n\t\t};\n\t}\n}\n\n/**\n * Callback hooks provide an easy way to add extra steps to common operations.\n * @deprecated\n */\ntype Cb<I, R, C = undefined> = {\n\tadd: (\n\t\tcallback: (item: I, constant: C) => Promise<R | undefined | void> | R | undefined | void,\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t) => void;\n\tremove: (id: string) => void;\n\trun: (item: I, constant?: C) => Promise<R>;\n};\n"]}}},"code":"var _createForOfIteratorHelperLoose;\nmodule.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\", {\n  default: function (v) {\n    _createForOfIteratorHelperLoose = v;\n  }\n}, 0);\nvar _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 1);\nmodule.export({\n  Callbacks: function () {\n    return Callbacks;\n  }\n});\nvar Random;\nmodule.link(\"@rocket.chat/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 0);\nvar compareByRanking;\nmodule.link(\"../utils/comparisons\", {\n  compareByRanking: function (v) {\n    compareByRanking = v;\n  }\n}, 1);\nvar CallbackPriority;\n(function (CallbackPriority) {\n  CallbackPriority[CallbackPriority[\"HIGH\"] = -1000] = \"HIGH\";\n  CallbackPriority[CallbackPriority[\"MEDIUM\"] = 0] = \"MEDIUM\";\n  CallbackPriority[CallbackPriority[\"LOW\"] = 1000] = \"LOW\";\n})(CallbackPriority || (CallbackPriority = {}));\nvar Callbacks = /*#__PURE__*/function () {\n  function Callbacks() {\n    this.logger = undefined;\n    this.trackCallback = undefined;\n    this.trackHook = undefined;\n    this.callbacks = new Map();\n    this.sequentialRunners = new Map();\n    this.asyncRunners = new Map();\n    this.priority = CallbackPriority;\n  }\n  var _proto = Callbacks.prototype;\n  _proto.setLogger = function () {\n    function setLogger(logger) {\n      this.logger = logger;\n    }\n    return setLogger;\n  }();\n  _proto.setMetricsTrackers = function () {\n    function setMetricsTrackers(_ref) {\n      var trackCallback = _ref.trackCallback,\n        trackHook = _ref.trackHook;\n      this.trackCallback = trackCallback;\n      this.trackHook = trackHook;\n    }\n    return setMetricsTrackers;\n  }();\n  _proto.runOne = function () {\n    function runOne(callback, item, constant) {\n      var _this$trackCallback;\n      var stopTracking = (_this$trackCallback = this.trackCallback) === null || _this$trackCallback === void 0 ? void 0 : _this$trackCallback.call(this, callback);\n      return Promise.resolve(callback(item, constant)).finally(stopTracking);\n    }\n    return runOne;\n  }();\n  _proto.createSequentialRunner = function () {\n    function createSequentialRunner(hook, callbacks) {\n      var _this = this;\n      var wrapCallback = function (callback) {\n        return function () {\n          function _callee(item, constant) {\n            var _this$logger, _await$_this$runOne;\n            return _regeneratorRuntime.async(function () {\n              function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    (_this$logger = _this.logger) === null || _this$logger === void 0 ? void 0 : _this$logger.debug(\"Executing callback with id \" + callback.id + \" for hook \" + callback.hook);\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(_this.runOne(callback, item, constant));\n                  case 3:\n                    _context.t1 = _await$_this$runOne = _context.sent;\n                    _context.t0 = _context.t1 !== null;\n                    if (!_context.t0) {\n                      _context.next = 7;\n                      break;\n                    }\n                    _context.t0 = _await$_this$runOne !== void 0;\n                  case 7:\n                    if (!_context.t0) {\n                      _context.next = 11;\n                      break;\n                    }\n                    _context.t2 = _await$_this$runOne;\n                    _context.next = 12;\n                    break;\n                  case 11:\n                    _context.t2 = item;\n                  case 12:\n                    return _context.abrupt(\"return\", _context.t2);\n                  case 13:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n              return _callee$;\n            }(), null, null, null, Promise);\n          }\n          return _callee;\n        }();\n      };\n      var identity = function (item) {\n        return Promise.resolve(item);\n      };\n      var pipe = function (curr, next) {\n        return function () {\n          function _callee2(item, constant) {\n            return _regeneratorRuntime.async(function () {\n              function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.t0 = next;\n                    _context2.next = 3;\n                    return _regeneratorRuntime.awrap(curr(item, constant));\n                  case 3:\n                    _context2.t1 = _context2.sent;\n                    _context2.t2 = constant;\n                    return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t1, _context2.t2));\n                  case 6:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n              return _callee2$;\n            }(), null, null, null, Promise);\n          }\n          return _callee2;\n        }();\n      };\n      var fn = callbacks.map(wrapCallback).reduce(pipe, identity);\n      return function () {\n        function _callee3(item, constant) {\n          var _this$trackHook;\n          var stopTracking;\n          return _regeneratorRuntime.async(function () {\n            function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  stopTracking = (_this$trackHook = _this.trackHook) === null || _this$trackHook === void 0 ? void 0 : _this$trackHook.call(_this, {\n                    hook: hook,\n                    length: callbacks.length\n                  });\n                  return _context3.abrupt(\"return\", fn(item, constant).finally(function () {\n                    return stopTracking === null || stopTracking === void 0 ? void 0 : stopTracking();\n                  }));\n                case 2:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n            return _callee3$;\n          }(), null, null, null, Promise);\n        }\n        return _callee3;\n      }();\n    }\n    return createSequentialRunner;\n  }();\n  _proto.createAsyncRunner = function () {\n    function createAsyncRunner(_, callbacks) {\n      var _this2 = this;\n      return function (item, constant) {\n        if (typeof window !== 'undefined') {\n          throw new Error('callbacks.runAsync on client server not allowed');\n        }\n        var _loop = function (callback) {\n          setTimeout(function () {\n            void _this2.runOne(callback, item, constant);\n          }, 0);\n        };\n        for (var _iterator = _createForOfIteratorHelperLoose(callbacks), _step; !(_step = _iterator()).done;) {\n          var callback = _step.value;\n          _loop(callback);\n        }\n        return item;\n      };\n    }\n    return createAsyncRunner;\n  }();\n  _proto.getCallbacks = function () {\n    function getCallbacks(hook) {\n      var _this$callbacks$get;\n      return (_this$callbacks$get = this.callbacks.get(hook)) !== null && _this$callbacks$get !== void 0 ? _this$callbacks$get : [];\n    }\n    return getCallbacks;\n  }();\n  _proto.setCallbacks = function () {\n    function setCallbacks(hook, callbacks) {\n      this.callbacks.set(hook, callbacks);\n      this.sequentialRunners.set(hook, this.createSequentialRunner(hook, callbacks));\n      this.asyncRunners.set(hook, this.createAsyncRunner(hook, callbacks));\n    }\n    return setCallbacks;\n  }();\n  _proto.add = function () {\n    function add(hook, callback) {\n      var _this3 = this;\n      var priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.priority.MEDIUM;\n      var id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Random.id();\n      var callbacks = this.getCallbacks(hook);\n      if (callbacks.some(function (cb) {\n        return cb.id === id;\n      })) {\n        return;\n      }\n      callbacks.push(Object.assign(callback, {\n        hook: hook,\n        priority: priority,\n        id: id,\n        stack: new Error().stack\n      }));\n      callbacks.sort(compareByRanking(function (callback) {\n        var _callback$priority;\n        return (_callback$priority = callback.priority) !== null && _callback$priority !== void 0 ? _callback$priority : _this3.priority.MEDIUM;\n      }));\n      this.setCallbacks(hook, callbacks);\n    }\n    return add;\n  }()\n  /**\n   * Remove a callback from a hook\n   *\n   * @param hook the name of the hook\n   * @param id the callback's id\n   */\n  ;\n  _proto.remove = function () {\n    function remove(hook, id) {\n      var hooks = this.getCallbacks(hook).filter(function (callback) {\n        return callback.id !== id;\n      });\n      this.setCallbacks(hook, hooks);\n    }\n    return remove;\n  }()\n  /**\n   * Successively run all of a hook's callbacks on an item\n   *\n   * @param hook the name of the hook\n   * @param item the post, comment, modifier, etc. on which to run the callbacks\n   * @param constant an optional constant that will be passed along to each callback\n   * @returns returns the item after it's been through all the callbacks for this hook\n   */\n  ;\n  _proto.run = function () {\n    function run(hook, item, constant) {\n      var _this$sequentialRunne;\n      var runner = (_this$sequentialRunne = this.sequentialRunners.get(hook)) !== null && _this$sequentialRunne !== void 0 ? _this$sequentialRunne : function () {\n        function _callee4(item, _constant) {\n          return _regeneratorRuntime.async(function () {\n            function _callee4$(_context4) {\n              while (1) switch (_context4.prev = _context4.next) {\n                case 0:\n                  return _context4.abrupt(\"return\", item);\n                case 1:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n            return _callee4$;\n          }(), null, null, null, Promise);\n        }\n        return _callee4;\n      }();\n      return runner(item, constant);\n    }\n    return run;\n  }()\n  /**\n   * Successively run all of a hook's callbacks on an item, in async mode (only works on server)\n   *\n   * @param hook the name of the hook\n   * @param item the post, comment, modifier, etc. on which to run the callbacks\n   * @param constant an optional constant that will be passed along to each callback\n   * @returns the post, comment, modifier, etc. on which to run the callbacks\n   */\n  ;\n  _proto.runAsync = function () {\n    function runAsync(hook, item, constant) {\n      var _this$asyncRunners$ge;\n      var runner = (_this$asyncRunners$ge = this.asyncRunners.get(hook)) !== null && _this$asyncRunners$ge !== void 0 ? _this$asyncRunners$ge : function (item, _constant) {\n        return item;\n      };\n      return runner(item, constant);\n    }\n    return runAsync;\n  }();\n  Callbacks.create = function () {\n    function create(hook) {\n      var callbacks = new Callbacks();\n      return {\n        add: function (callback, priority, id) {\n          return callbacks.add(hook, callback, priority, id);\n        },\n        remove: function (id) {\n          return callbacks.remove(hook, id);\n        },\n        run: function (item, constant) {\n          return callbacks.run(hook, item, constant);\n        }\n      };\n    }\n    return create;\n  }();\n  return Callbacks;\n}();","map":{"version":3,"names":["_createForOfIteratorHelperLoose","module","link","default","v","_regeneratorRuntime","export","Callbacks","Random","compareByRanking","CallbackPriority","logger","undefined","trackCallback","trackHook","callbacks","Map","sequentialRunners","asyncRunners","priority","_proto","prototype","setLogger","setMetricsTrackers","_ref","runOne","callback","item","constant","_this$trackCallback","stopTracking","call","Promise","resolve","finally","createSequentialRunner","hook","_this","wrapCallback","_callee","_this$logger","_await$_this$runOne","async","_callee$","_context","prev","next","debug","id","awrap","t1","sent","t0","t2","abrupt","stop","identity","pipe","curr","_callee2","_callee2$","_context2","fn","map","reduce","_callee3","_this$trackHook","_callee3$","_context3","length","createAsyncRunner","_","_this2","window","Error","_loop","setTimeout","_iterator","_step","done","value","getCallbacks","_this$callbacks$get","get","setCallbacks","set","add","_this3","arguments","MEDIUM","some","cb","push","Object","assign","stack","sort","_callback$priority","remove","hooks","filter","run","_this$sequentialRunne","runner","_callee4","_constant","_callee4$","_context4","runAsync","_this$asyncRunners$ge","create"],"sources":["lib/callbacks/callbacksBase.ts"],"sourcesContent":["import type { Logger } from '@rocket.chat/logger';\nimport { Random } from '@rocket.chat/random';\n\nimport { compareByRanking } from '../utils/comparisons';\n\nenum CallbackPriority {\n\tHIGH = -1000,\n\tMEDIUM = 0,\n\tLOW = 1000,\n}\n\ntype Callback<H> = {\n\t(item: unknown, constant?: unknown): Promise<unknown>;\n\thook: H;\n\tid: string;\n\tpriority: CallbackPriority;\n\tstack: string;\n};\n\ntype CallbackTracker<H> = (callback: Callback<H>) => () => void;\n\ntype HookTracker<H> = (params: { hook: H; length: number }) => () => void;\n\nexport class Callbacks<\n\tTChainedCallbackSignatures extends {\n\t\t[key: string]: (item: any, constant?: any) => any;\n\t},\n\tTEventLikeCallbackSignatures extends {\n\t\t[key: string]: (item: any, constant?: any) => any;\n\t},\n\tTHook extends string = keyof TChainedCallbackSignatures & keyof TEventLikeCallbackSignatures & string,\n> {\n\tprivate logger: Logger | undefined = undefined;\n\n\tprivate trackCallback: CallbackTracker<THook> | undefined = undefined;\n\n\tprivate trackHook: HookTracker<THook> | undefined = undefined;\n\n\tprivate callbacks = new Map<THook, Callback<THook>[]>();\n\n\tprivate sequentialRunners = new Map<THook, (item: unknown, constant?: unknown) => Promise<unknown>>();\n\n\tprivate asyncRunners = new Map<THook, (item: unknown, constant?: unknown) => unknown>();\n\n\treadonly priority = CallbackPriority;\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tsetMetricsTrackers({ trackCallback, trackHook }: { trackCallback?: CallbackTracker<THook>; trackHook?: HookTracker<THook> }): void {\n\t\tthis.trackCallback = trackCallback;\n\t\tthis.trackHook = trackHook;\n\t}\n\n\tprivate runOne(callback: Callback<THook>, item: unknown, constant: unknown): Promise<unknown> {\n\t\tconst stopTracking = this.trackCallback?.(callback);\n\n\t\treturn Promise.resolve(callback(item, constant)).finally(stopTracking);\n\t}\n\n\tprivate createSequentialRunner(hook: THook, callbacks: Callback<THook>[]): (item: unknown, constant?: unknown) => Promise<unknown> {\n\t\tconst wrapCallback =\n\t\t\t(callback: Callback<THook>) =>\n\t\t\tasync (item: unknown, constant?: unknown): Promise<unknown> => {\n\t\t\t\tthis.logger?.debug(`Executing callback with id ${callback.id} for hook ${callback.hook}`);\n\n\t\t\t\treturn (await this.runOne(callback, item, constant)) ?? item;\n\t\t\t};\n\n\t\tconst identity = <TItem>(item: TItem): Promise<TItem> => Promise.resolve(item);\n\n\t\tconst pipe =\n\t\t\t(curr: (item: unknown, constant?: unknown) => Promise<unknown>, next: (item: unknown, constant?: unknown) => Promise<unknown>) =>\n\t\t\tasync (item: unknown, constant?: unknown): Promise<unknown> =>\n\t\t\t\tnext(await curr(item, constant), constant);\n\n\t\tconst fn = callbacks.map(wrapCallback).reduce(pipe, identity);\n\n\t\treturn async (item: unknown, constant?: unknown): Promise<unknown> => {\n\t\t\tconst stopTracking = this.trackHook?.({ hook, length: callbacks.length });\n\n\t\t\treturn fn(item, constant).finally(() => stopTracking?.());\n\t\t};\n\t}\n\n\tprivate createAsyncRunner(_: THook, callbacks: Callback<THook>[]) {\n\t\treturn (item: unknown, constant?: unknown): unknown => {\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\tthrow new Error('callbacks.runAsync on client server not allowed');\n\t\t\t}\n\n\t\t\tfor (const callback of callbacks) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tvoid this.runOne(callback, item, constant);\n\t\t\t\t}, 0);\n\t\t\t}\n\n\t\t\treturn item;\n\t\t};\n\t}\n\n\tgetCallbacks(hook: THook): Callback<THook>[] {\n\t\treturn this.callbacks.get(hook) ?? [];\n\t}\n\n\tsetCallbacks(hook: THook, callbacks: Callback<THook>[]): void {\n\t\tthis.callbacks.set(hook, callbacks);\n\t\tthis.sequentialRunners.set(hook, this.createSequentialRunner(hook, callbacks));\n\t\tthis.asyncRunners.set(hook, this.createAsyncRunner(hook, callbacks));\n\t}\n\n\t/**\n\t * Add a callback function to a hook\n\t *\n\t * @param hook the name of the hook\n\t * @param callback the callback function\n\t * @param priority the callback run priority (order)\n\t * @param id human friendly name for this callback\n\t */\n\tadd<Hook extends keyof TEventLikeCallbackSignatures>(\n\t\thook: Hook,\n\t\tcallback: TEventLikeCallbackSignatures[Hook],\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd<Hook extends keyof TChainedCallbackSignatures>(\n\t\thook: Hook,\n\t\tcallback: TChainedCallbackSignatures[Hook],\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd<TItem, TConstant, TNextItem = TItem>(\n\t\thook: THook,\n\t\tcallback: (item: TItem, constant?: TConstant) => TNextItem,\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t): void;\n\n\tadd(hook: THook, callback: (item: unknown, constant?: unknown) => unknown, priority = this.priority.MEDIUM, id = Random.id()): void {\n\t\tconst callbacks = this.getCallbacks(hook);\n\n\t\tif (callbacks.some((cb) => cb.id === id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcallbacks.push(\n\t\t\tObject.assign(callback as Callback<THook>, {\n\t\t\t\thook,\n\t\t\t\tpriority,\n\t\t\t\tid,\n\t\t\t\tstack: new Error().stack,\n\t\t\t}),\n\t\t);\n\t\tcallbacks.sort(compareByRanking((callback: Callback<THook>): number => callback.priority ?? this.priority.MEDIUM));\n\n\t\tthis.setCallbacks(hook, callbacks);\n\t}\n\n\t/**\n\t * Remove a callback from a hook\n\t *\n\t * @param hook the name of the hook\n\t * @param id the callback's id\n\t */\n\tremove(hook: THook, id: string): void {\n\t\tconst hooks = this.getCallbacks(hook).filter((callback) => callback.id !== id);\n\t\tthis.setCallbacks(hook, hooks);\n\t}\n\n\trun<Hook extends keyof TEventLikeCallbackSignatures>(hook: Hook, ...args: Parameters<TEventLikeCallbackSignatures[Hook]>): Promise<void>;\n\n\trun<Hook extends keyof TChainedCallbackSignatures>(\n\t\thook: Hook,\n\t\t...args: Parameters<TChainedCallbackSignatures[Hook]>\n\t): Promise<ReturnType<TChainedCallbackSignatures[Hook]>>;\n\n\trun<TItem, TConstant, TNextItem = TItem>(hook: THook, item: TItem, constant?: TConstant): Promise<TNextItem>;\n\n\t/**\n\t * Successively run all of a hook's callbacks on an item\n\t *\n\t * @param hook the name of the hook\n\t * @param item the post, comment, modifier, etc. on which to run the callbacks\n\t * @param constant an optional constant that will be passed along to each callback\n\t * @returns returns the item after it's been through all the callbacks for this hook\n\t */\n\trun(hook: THook, item: unknown, constant?: unknown): Promise<unknown> {\n\t\tconst runner = this.sequentialRunners.get(hook) ?? (async (item: unknown, _constant?: unknown): Promise<unknown> => item);\n\t\treturn runner(item, constant);\n\t}\n\n\trunAsync<Hook extends keyof TEventLikeCallbackSignatures>(hook: Hook, ...args: Parameters<TEventLikeCallbackSignatures[Hook]>): void;\n\n\t/**\n\t * Successively run all of a hook's callbacks on an item, in async mode (only works on server)\n\t *\n\t * @param hook the name of the hook\n\t * @param item the post, comment, modifier, etc. on which to run the callbacks\n\t * @param constant an optional constant that will be passed along to each callback\n\t * @returns the post, comment, modifier, etc. on which to run the callbacks\n\t */\n\trunAsync(hook: THook, item: unknown, constant?: unknown): unknown {\n\t\tconst runner = this.asyncRunners.get(hook) ?? ((item: unknown, _constant?: unknown): unknown => item);\n\t\treturn runner(item, constant);\n\t}\n\n\tstatic create<F extends (item: any, constant?: any) => any | Promise<any>>(\n\t\thook: string,\n\t): Cb<Parameters<F>[0], ReturnType<F>, Parameters<F>[1]>;\n\n\tstatic create<I, R, C = undefined>(hook: string): Cb<I, R, C> {\n\t\tconst callbacks = new Callbacks();\n\n\t\treturn {\n\t\t\tadd: (callback, priority, id) => callbacks.add(hook as any, callback, priority, id),\n\t\t\tremove: (id) => callbacks.remove(hook as any, id),\n\t\t\trun: (item, constant) => callbacks.run(hook as any, item, constant) as any,\n\t\t};\n\t}\n}\n\n/**\n * Callback hooks provide an easy way to add extra steps to common operations.\n * @deprecated\n */\ntype Cb<I, R, C = undefined> = {\n\tadd: (\n\t\tcallback: (item: I, constant: C) => Promise<R | undefined | void> | R | undefined | void,\n\t\tpriority?: CallbackPriority,\n\t\tid?: string,\n\t) => void;\n\tremove: (id: string) => void;\n\trun: (item: I, constant?: C) => Promise<R>;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f4c8f8fa4e61a4fac97fa7317a84dfca8afe106a"}
