{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/Info/hooks/actions/useRoomMoveToTeam.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/contextualBar/Info/hooks/actions/useRoomMoveToTeam.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/Info/hooks/actions/useRoomMoveToTeam.tsx","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/Info/hooks/actions/useRoomMoveToTeam.tsx","sourceRoot":"","sources":["client/views/room/contextualBar/Info/hooks/actions/useRoomMoveToTeam.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAE5D,OAAO,EAAE,kBAAkB,EAAE,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAE,WAAW,EAAE,uBAAuB,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAC7G,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,kBAAkB,MAAM,0BAA0B,CAAC;AAC1D,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,IAAW,EAAE,EAAE;IAChD,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAC/B,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IAEvD,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;IACrC,MAAM,aAAa,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC;IAEtF,MAAM,iBAAiB,GAAG,WAAW,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;IAEpE,MAAM,gBAAgB,GAAG,kBAAkB,CAAC,KAAK,IAAI,EAAE;QACtD,MAAM,SAAS,GAAG,KAAK,EAAE,MAAuB,EAAE,EAAE;YACnD,IAAI,CAAC,MAAM,EAAE,CAAC;gBACb,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;YACxC,CAAC;YAED,IAAI,CAAC;gBACJ,MAAM,iBAAiB,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;gBACvD,oBAAoB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC;YACnF,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBAChB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;YACzD,CAAC;oBAAS,CAAC;gBACV,QAAQ,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC;QACF,CAAC,CAAC;QAEF,QAAQ,CAAC,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAG,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;IAEH,OAAO,aAAa,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC;AAChD,CAAC,CAAC","sourcesContent":["import { isRoomFederated } from '@rocket.chat/core-typings';\nimport type { IRoom } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useTranslation, useEndpoint } from '@rocket.chat/ui-contexts';\nimport React from 'react';\n\nimport ChannelToTeamModal from '../../ChannelToTeamModal';\nimport { useCanEditRoom } from '../useCanEditRoom';\n\nexport const useRoomMoveToTeam = (room: IRoom) => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst canEdit = useCanEditRoom(room);\n\tconst canMoveToTeam = !isRoomFederated(room) && !room.teamId && !room.prid && canEdit;\n\n\tconst moveChannelToTeam = useEndpoint('POST', '/v1/teams.addRooms');\n\n\tconst handleMoveToTeam = useMutableCallback(async () => {\n\t\tconst onConfirm = async (teamId: IRoom['teamId']) => {\n\t\t\tif (!teamId) {\n\t\t\t\tthrow new Error('teamId not provided');\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait moveChannelToTeam({ rooms: [room._id], teamId });\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Rooms_added_successfully') });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetModal(null);\n\t\t\t}\n\t\t};\n\n\t\tsetModal(<ChannelToTeamModal onCancel={() => setModal(null)} onConfirm={onConfirm} />);\n\t});\n\n\treturn canMoveToTeam ? handleMoveToTeam : null;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/Info/hooks/actions/useRoomMoveToTeam.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/contextualBar/Info/hooks/actions/useRoomMoveToTeam.tsx","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/Info/hooks/actions/useRoomMoveToTeam.tsx","sourceRoot":"","sources":["client/views/room/contextualBar/Info/hooks/actions/useRoomMoveToTeam.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAE5D,OAAO,EAAE,kBAAkB,EAAE,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAE,WAAW,EAAE,uBAAuB,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAC7G,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,kBAAkB,MAAM,0BAA0B,CAAC;AAC1D,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAEnD,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,IAAW,EAAE,EAAE;IAChD,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAC/B,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IAEvD,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;IACrC,MAAM,aAAa,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC;IAEtF,MAAM,iBAAiB,GAAG,WAAW,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;IAEpE,MAAM,gBAAgB,GAAG,kBAAkB,CAAC,KAAK,IAAI,EAAE;QACtD,MAAM,SAAS,GAAG,KAAK,EAAE,MAAuB,EAAE,EAAE;YACnD,IAAI,CAAC,MAAM,EAAE,CAAC;gBACb,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;YACxC,CAAC;YAED,IAAI,CAAC;gBACJ,MAAM,iBAAiB,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;gBACvD,oBAAoB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC;YACnF,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBAChB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;YACzD,CAAC;oBAAS,CAAC;gBACV,QAAQ,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC;QACF,CAAC,CAAC;QAEF,QAAQ,CAAC,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAG,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;IAEH,OAAO,aAAa,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC;AAChD,CAAC,CAAC","sourcesContent":["import { isRoomFederated } from '@rocket.chat/core-typings';\nimport type { IRoom } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useTranslation, useEndpoint } from '@rocket.chat/ui-contexts';\nimport React from 'react';\n\nimport ChannelToTeamModal from '../../ChannelToTeamModal';\nimport { useCanEditRoom } from '../useCanEditRoom';\n\nexport const useRoomMoveToTeam = (room: IRoom) => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst canEdit = useCanEditRoom(room);\n\tconst canMoveToTeam = !isRoomFederated(room) && !room.teamId && !room.prid && canEdit;\n\n\tconst moveChannelToTeam = useEndpoint('POST', '/v1/teams.addRooms');\n\n\tconst handleMoveToTeam = useMutableCallback(async () => {\n\t\tconst onConfirm = async (teamId: IRoom['teamId']) => {\n\t\t\tif (!teamId) {\n\t\t\t\tthrow new Error('teamId not provided');\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait moveChannelToTeam({ rooms: [room._id], teamId });\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Rooms_added_successfully') });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetModal(null);\n\t\t\t}\n\t\t};\n\n\t\tsetModal(<ChannelToTeamModal onCancel={() => setModal(null)} onConfirm={onConfirm} />);\n\t});\n\n\treturn canMoveToTeam ? handleMoveToTeam : null;\n};\n"]}}},"code":"module.export({\n  useRoomMoveToTeam: () => useRoomMoveToTeam\n});\nlet isRoomFederated;\nmodule.link(\"@rocket.chat/core-typings\", {\n  isRoomFederated(v) {\n    isRoomFederated = v;\n  }\n}, 0);\nlet useMutableCallback;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  }\n}, 1);\nlet useSetModal, useToastMessageDispatch, useTranslation, useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useSetModal(v) {\n    useSetModal = v;\n  },\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  },\n  useTranslation(v) {\n    useTranslation = v;\n  },\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n}, 2);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n}, 3);\nlet ChannelToTeamModal;\nmodule.link(\"../../ChannelToTeamModal\", {\n  default(v) {\n    ChannelToTeamModal = v;\n  }\n}, 4);\nlet useCanEditRoom;\nmodule.link(\"../useCanEditRoom\", {\n  useCanEditRoom(v) {\n    useCanEditRoom = v;\n  }\n}, 5);\nconst useRoomMoveToTeam = room => {\n  const t = useTranslation();\n  const setModal = useSetModal();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const canEdit = useCanEditRoom(room);\n  const canMoveToTeam = !isRoomFederated(room) && !room.teamId && !room.prid && canEdit;\n  const moveChannelToTeam = useEndpoint('POST', '/v1/teams.addRooms');\n  const handleMoveToTeam = useMutableCallback(async () => {\n    const onConfirm = async teamId => {\n      if (!teamId) {\n        throw new Error('teamId not provided');\n      }\n      try {\n        await moveChannelToTeam({\n          rooms: [room._id],\n          teamId\n        });\n        dispatchToastMessage({\n          type: 'success',\n          message: t('Rooms_added_successfully')\n        });\n      } catch (error) {\n        dispatchToastMessage({\n          type: 'error',\n          message: error\n        });\n      } finally {\n        setModal(null);\n      }\n    };\n    setModal( /*#__PURE__*/React.createElement(ChannelToTeamModal, {\n      onCancel: () => setModal(null),\n      onConfirm: onConfirm\n    }));\n  });\n  return canMoveToTeam ? handleMoveToTeam : null;\n};","map":{"version":3,"names":["module","export","useRoomMoveToTeam","isRoomFederated","link","v","useMutableCallback","useSetModal","useToastMessageDispatch","useTranslation","useEndpoint","React","default","ChannelToTeamModal","useCanEditRoom","room","t","setModal","dispatchToastMessage","canEdit","canMoveToTeam","teamId","prid","moveChannelToTeam","handleMoveToTeam","onConfirm","Error","rooms","_id","type","message","error","createElement","onCancel"],"sources":["client/views/room/contextualBar/Info/hooks/actions/useRoomMoveToTeam.tsx"],"sourcesContent":["import { isRoomFederated } from '@rocket.chat/core-typings';\nimport type { IRoom } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useTranslation, useEndpoint } from '@rocket.chat/ui-contexts';\nimport React from 'react';\n\nimport ChannelToTeamModal from '../../ChannelToTeamModal';\nimport { useCanEditRoom } from '../useCanEditRoom';\n\nexport const useRoomMoveToTeam = (room: IRoom) => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst canEdit = useCanEditRoom(room);\n\tconst canMoveToTeam = !isRoomFederated(room) && !room.teamId && !room.prid && canEdit;\n\n\tconst moveChannelToTeam = useEndpoint('POST', '/v1/teams.addRooms');\n\n\tconst handleMoveToTeam = useMutableCallback(async () => {\n\t\tconst onConfirm = async (teamId: IRoom['teamId']) => {\n\t\t\tif (!teamId) {\n\t\t\t\tthrow new Error('teamId not provided');\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait moveChannelToTeam({ rooms: [room._id], teamId });\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Rooms_added_successfully') });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetModal(null);\n\t\t\t}\n\t\t};\n\n\t\tsetModal(<ChannelToTeamModal onCancel={() => setModal(null)} onConfirm={onConfirm} />);\n\t});\n\n\treturn canMoveToTeam ? handleMoveToTeam : null;\n};\n"],"mappings":"AAAAA,MAAA,CAAOC,MAAE;EAAAC,iBAAuB,EAAAA,CAAA,KAAAA;AAAA;AAAA,IAA4BC,eAAA;AAAAH,MAAA,CAAAI,IAAA;EAAAD,gBAAAE,CAAA;IAAAF,eAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,kBAAA;AAAAN,MAAA,CAAAI,IAAA;EAAAE,mBAAAD,CAAA;IAAAC,kBAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,WAAA,EAAAC,uBAAA,EAAAC,cAAA,EAAAC,WAAA;AAAAV,MAAA,CAAAI,IAAA;EAAAG,YAAAF,CAAA;IAAAE,WAAA,GAAAF,CAAA;EAAA;EAAAG,wBAAAH,CAAA;IAAAG,uBAAA,GAAAH,CAAA;EAAA;EAAAI,eAAAJ,CAAA;IAAAI,cAAA,GAAAJ,CAAA;EAAA;EAAAK,YAAAL,CAAA;IAAAK,WAAA,GAAAL,CAAA;EAAA;AAAA;AAAA,IAAAM,KAAA;AAAAX,MAAA,CAAAI,IAAA;EAAAQ,QAAAP,CAAA;IAAAM,KAAA,GAAAN,CAAA;EAAA;AAAA;AAAA,IAAAQ,kBAAA;AAAAb,MAAA,CAAAI,IAAA;EAAAQ,QAAAP,CAAA;IAAAQ,kBAAA,GAAAR,CAAA;EAAA;AAAA;AAAA,IAAAS,cAAA;AAAAd,MAAA,CAAAI,IAAA;EAAAU,eAAAT,CAAA;IAAAS,cAAA,GAAAT,CAAA;EAAA;AAAA;AASrD,MAAMH,iBAAiB,GAAIa,IAAW,IAAI;EAChD,MAAMC,CAAC,GAAGP,cAAc,EAAE;EAC1B,MAAMQ,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAMW,oBAAoB,GAAGV,uBAAuB,EAAE;EAEtD,MAAMW,OAAO,GAAGL,cAAc,CAACC,IAAI,CAAC;EACpC,MAAMK,aAAa,GAAG,CAACjB,eAAe,CAACY,IAAI,CAAC,IAAI,CAACA,IAAI,CAACM,MAAM,IAAI,CAACN,IAAI,CAACO,IAAI,IAAIH,OAAO;EAErF,MAAMI,iBAAiB,GAAGb,WAAW,CAAC,MAAM,EAAE,oBAAoB,CAAC;EAEnE,MAAMc,gBAAgB,GAAGlB,kBAAkB,CAAC,YAAW;IACtD,MAAMmB,SAAS,GAAG,MAAOJ,MAAuB,IAAI;MACnD,IAAI,CAACA,MAAM,EAAE;QACZ,MAAM,IAAIK,KAAK,CAAC,qBAAqB,CAAC;MACvC;MAEA,IAAI;QACH,MAAMH,iBAAiB,CAAC;UAAEI,KAAK,EAAE,CAACZ,IAAI,CAACa,GAAG,CAAC;UAAEP;QAAM,CAAE,CAAC;QACtDH,oBAAoB,CAAC;UAAEW,IAAI,EAAE,SAAS;UAAEC,OAAO,EAAEd,CAAC,CAAC,0BAA0B;QAAC,CAAE,CAAC;MAClF,CAAC,CAAC,OAAOe,KAAK,EAAE;QACfb,oBAAoB,CAAC;UAAEW,IAAI,EAAE,OAAO;UAAEC,OAAO,EAAEC;QAAK,CAAE,CAAC;MACxD,CAAC,SAAS;QACTd,QAAQ,CAAC,IAAI,CAAC;MACf;IACD,CAAC;IAEDA,QAAQ,eAACN,KAAA,CAAAqB,aAAA,CAACnB,kBAAkB;MAACoB,QAAQ,EAAEA,CAAA,KAAMhB,QAAQ,CAAC,IAAI,CAAE;MAACQ,SAAS,EAAEA;IAAU,EAAG,CAAC;EACvF,CAAC,CAAC;EAEF,OAAOL,aAAa,GAAGI,gBAAgB,GAAG,IAAI;AAC/C,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c4052aec7521d1df48a4e365cd0dc01447137332"}
