{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/moderation/reportMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/moderation/reportMessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/moderation/reportMessage.ts","inputSourceMap":{"version":3,"file":"server/lib/moderation/reportMessage.ts","sourceRoot":"","sources":["server/lib/moderation/reportMessage.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAEpD,OAAO,EAAE,QAAQ,EAAE,iBAAiB,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAEhF,OAAO,EAAE,kBAAkB,EAAE,MAAM,2DAA2D,CAAC;AAE/F,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,EAAE,SAA0B,EAAE,WAAmB,EAAE,GAAiB,EAAE,EAAE;IACzG,IAAI,CAAC,GAAG,EAAE,CAAC;QACV,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACvC,CAAC;IAED,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAEtD,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAC7C,CAAC;IAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAE1C,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,EAAE,GAAG,EAAE,GAAG,OAAO,CAAC;IACxB,gGAAgG;IAChG,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC1C,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QAC9D,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAC7C,CAAC;IAED,MAAM,UAAU,GAAG;QAClB,GAAG,EAAE,IAAI,CAAC,GAAG;QACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,SAAS,EAAE,IAAI,CAAC,SAAS;KACzB,CAAC;IAEF,MAAM,QAAQ,GAAG;QAChB,GAAG,EAAE,GAAG;QACR,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,KAAK,EAAE,IAAI,CAAC,KAAK;KACjB,CAAC;IAEF,MAAM,iBAAiB,CAAC,qCAAqC,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;IAE1G,MAAM,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,oBAAoB,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAE1F,OAAO,IAAI,CAAC;AACb,CAAC,CAAC","sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { Messages, ModerationReports, Rooms, Users } from '@rocket.chat/models';\n\nimport { canAccessRoomAsync } from '../../../app/authorization/server/functions/canAccessRoom';\n\nexport const reportMessage = async (messageId: IMessage['_id'], description: string, uid: IUser['_id']) => {\n\tif (!uid) {\n\t\tthrow new Error('error-invalid-user');\n\t}\n\n\tif (!description.trim()) {\n\t\tthrow new Error('error-invalid-description');\n\t}\n\n\tconst message = await Messages.findOneById(messageId);\n\n\tif (!message) {\n\t\tthrow new Error('error-invalid-message_id');\n\t}\n\n\tconst user = await Users.findOneById(uid);\n\n\tif (!user) {\n\t\tthrow new Error('error-invalid-user');\n\t}\n\n\tconst { rid } = message;\n\t// If the user can't access the room where the message is, report that the message id is invalid\n\tconst room = await Rooms.findOneById(rid);\n\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\tthrow new Error('error-invalid-message_id');\n\t}\n\n\tconst reportedBy = {\n\t\t_id: user._id,\n\t\tusername: user.username,\n\t\tname: user.name,\n\t\tcreatedAt: user.createdAt,\n\t};\n\n\tconst roomInfo = {\n\t\t_id: rid,\n\t\tname: room.name,\n\t\tt: room.t,\n\t\tfederated: room.federated,\n\t\tfname: room.fname,\n\t};\n\n\tawait ModerationReports.createWithMessageDescriptionAndUserId(message, description, roomInfo, reportedBy);\n\n\tawait Apps.self?.triggerEvent(AppEvents.IPostMessageReported, message, user, description);\n\n\treturn true;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/moderation/reportMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/moderation/reportMessage.ts","inputSourceMap":{"version":3,"file":"server/lib/moderation/reportMessage.ts","sourceRoot":"","sources":["server/lib/moderation/reportMessage.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAEpD,OAAO,EAAE,QAAQ,EAAE,iBAAiB,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAEhF,OAAO,EAAE,kBAAkB,EAAE,MAAM,2DAA2D,CAAC;AAE/F,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,EAAE,SAA0B,EAAE,WAAmB,EAAE,GAAiB,EAAE,EAAE;IACzG,IAAI,CAAC,GAAG,EAAE,CAAC;QACV,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACvC,CAAC;IAED,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAEtD,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAC7C,CAAC;IAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAE1C,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,EAAE,GAAG,EAAE,GAAG,OAAO,CAAC;IACxB,gGAAgG;IAChG,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC1C,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QAC9D,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAC7C,CAAC;IAED,MAAM,UAAU,GAAG;QAClB,GAAG,EAAE,IAAI,CAAC,GAAG;QACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,SAAS,EAAE,IAAI,CAAC,SAAS;KACzB,CAAC;IAEF,MAAM,QAAQ,GAAG;QAChB,GAAG,EAAE,GAAG;QACR,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,KAAK,EAAE,IAAI,CAAC,KAAK;KACjB,CAAC;IAEF,MAAM,iBAAiB,CAAC,qCAAqC,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;IAE1G,MAAM,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,SAAS,CAAC,oBAAoB,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAE1F,OAAO,IAAI,CAAC;AACb,CAAC,CAAC","sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { Messages, ModerationReports, Rooms, Users } from '@rocket.chat/models';\n\nimport { canAccessRoomAsync } from '../../../app/authorization/server/functions/canAccessRoom';\n\nexport const reportMessage = async (messageId: IMessage['_id'], description: string, uid: IUser['_id']) => {\n\tif (!uid) {\n\t\tthrow new Error('error-invalid-user');\n\t}\n\n\tif (!description.trim()) {\n\t\tthrow new Error('error-invalid-description');\n\t}\n\n\tconst message = await Messages.findOneById(messageId);\n\n\tif (!message) {\n\t\tthrow new Error('error-invalid-message_id');\n\t}\n\n\tconst user = await Users.findOneById(uid);\n\n\tif (!user) {\n\t\tthrow new Error('error-invalid-user');\n\t}\n\n\tconst { rid } = message;\n\t// If the user can't access the room where the message is, report that the message id is invalid\n\tconst room = await Rooms.findOneById(rid);\n\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\tthrow new Error('error-invalid-message_id');\n\t}\n\n\tconst reportedBy = {\n\t\t_id: user._id,\n\t\tusername: user.username,\n\t\tname: user.name,\n\t\tcreatedAt: user.createdAt,\n\t};\n\n\tconst roomInfo = {\n\t\t_id: rid,\n\t\tname: room.name,\n\t\tt: room.t,\n\t\tfederated: room.federated,\n\t\tfname: room.fname,\n\t};\n\n\tawait ModerationReports.createWithMessageDescriptionAndUserId(message, description, roomInfo, reportedBy);\n\n\tawait Apps.self?.triggerEvent(AppEvents.IPostMessageReported, message, user, description);\n\n\treturn true;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      reportMessage: () => reportMessage\n    });\n    let Apps, AppEvents;\n    module.link(\"@rocket.chat/apps\", {\n      Apps(v) {\n        Apps = v;\n      },\n      AppEvents(v) {\n        AppEvents = v;\n      }\n    }, 0);\n    let Messages, ModerationReports, Rooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      ModerationReports(v) {\n        ModerationReports = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let canAccessRoomAsync;\n    module.link(\"../../../app/authorization/server/functions/canAccessRoom\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const reportMessage = async (messageId, description, uid) => {\n      var _Apps$self;\n      if (!uid) {\n        throw new Error('error-invalid-user');\n      }\n      if (!description.trim()) {\n        throw new Error('error-invalid-description');\n      }\n      const message = await Messages.findOneById(messageId);\n      if (!message) {\n        throw new Error('error-invalid-message_id');\n      }\n      const user = await Users.findOneById(uid);\n      if (!user) {\n        throw new Error('error-invalid-user');\n      }\n      const {\n        rid\n      } = message;\n      // If the user can't access the room where the message is, report that the message id is invalid\n      const room = await Rooms.findOneById(rid);\n      if (!room || !(await canAccessRoomAsync(room, {\n        _id: uid\n      }))) {\n        throw new Error('error-invalid-message_id');\n      }\n      const reportedBy = {\n        _id: user._id,\n        username: user.username,\n        name: user.name,\n        createdAt: user.createdAt\n      };\n      const roomInfo = {\n        _id: rid,\n        name: room.name,\n        t: room.t,\n        federated: room.federated,\n        fname: room.fname\n      };\n      await ModerationReports.createWithMessageDescriptionAndUserId(message, description, roomInfo, reportedBy);\n      await ((_Apps$self = Apps.self) === null || _Apps$self === void 0 ? void 0 : _Apps$self.triggerEvent(AppEvents.IPostMessageReported, message, user, description));\n      return true;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","reportMessage","Apps","AppEvents","link","v","Messages","ModerationReports","Rooms","Users","canAccessRoomAsync","__reifyWaitForDeps__","messageId","description","uid","_Apps$self","Error","trim","message","findOneById","user","rid","room","_id","reportedBy","username","name","createdAt","roomInfo","t","federated","fname","createWithMessageDescriptionAndUserId","self","triggerEvent","IPostMessageReported","__reify_async_result__","_reifyError","async"],"sources":["server/lib/moderation/reportMessage.ts"],"sourcesContent":["import { Apps, AppEvents } from '@rocket.chat/apps';\nimport type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { Messages, ModerationReports, Rooms, Users } from '@rocket.chat/models';\n\nimport { canAccessRoomAsync } from '../../../app/authorization/server/functions/canAccessRoom';\n\nexport const reportMessage = async (messageId: IMessage['_id'], description: string, uid: IUser['_id']) => {\n\tif (!uid) {\n\t\tthrow new Error('error-invalid-user');\n\t}\n\n\tif (!description.trim()) {\n\t\tthrow new Error('error-invalid-description');\n\t}\n\n\tconst message = await Messages.findOneById(messageId);\n\n\tif (!message) {\n\t\tthrow new Error('error-invalid-message_id');\n\t}\n\n\tconst user = await Users.findOneById(uid);\n\n\tif (!user) {\n\t\tthrow new Error('error-invalid-user');\n\t}\n\n\tconst { rid } = message;\n\t// If the user can't access the room where the message is, report that the message id is invalid\n\tconst room = await Rooms.findOneById(rid);\n\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\tthrow new Error('error-invalid-message_id');\n\t}\n\n\tconst reportedBy = {\n\t\t_id: user._id,\n\t\tusername: user.username,\n\t\tname: user.name,\n\t\tcreatedAt: user.createdAt,\n\t};\n\n\tconst roomInfo = {\n\t\t_id: rid,\n\t\tname: room.name,\n\t\tt: room.t,\n\t\tfederated: room.federated,\n\t\tfname: room.fname,\n\t};\n\n\tawait ModerationReports.createWithMessageDescriptionAndUserId(message, description, roomInfo, reportedBy);\n\n\tawait Apps.self?.triggerEvent(AppEvents.IPostMessageReported, message, user, description);\n\n\treturn true;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f618811cfd6721c903d72cb19f27e137a06805ef"}
