{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/CalendarEvent.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/CalendarEvent.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/CalendarEvent.ts","inputSourceMap":{"version":3,"file":"server/models/raw/CalendarEvent.ts","sourceRoot":"","sources":["server/models/raw/CalendarEvent.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ICalendarEvent, IUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ICalendarEventModel } from '@rocket.chat/model-typings';\nimport type { FindCursor, IndexDescription, Collection, Db, UpdateResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class CalendarEventRaw extends BaseRaw<ICalendarEvent> implements ICalendarEventModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ICalendarEvent>>) {\n\t\tsuper(db, 'calendar_event', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: { startTime: -1, uid: 1, externalId: 1 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: { reminderTime: -1, notificationSent: 1 },\n\t\t\t},\n\t\t];\n\t}\n\n\tpublic async findOneByExternalIdAndUserId(\n\t\texternalId: Required<ICalendarEvent>['externalId'],\n\t\tuid: ICalendarEvent['uid'],\n\t): Promise<ICalendarEvent | null> {\n\t\treturn this.findOne({\n\t\t\texternalId,\n\t\t\tuid,\n\t\t});\n\t}\n\n\tpublic findByUserIdAndDate(uid: IUser['_id'], date: Date): FindCursor<ICalendarEvent> {\n\t\tconst startTime = new Date(date.toISOString());\n\t\tstartTime.setHours(0, 0, 0, 0);\n\n\t\tconst finalTime = new Date(date.valueOf());\n\t\tfinalTime.setDate(finalTime.getDate() + 1);\n\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\tuid,\n\t\t\t\tstartTime: { $gte: startTime, $lt: finalTime },\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: { startTime: 1 },\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async updateEvent(\n\t\teventId: ICalendarEvent['_id'],\n\t\t{ subject, description, startTime, meetingUrl, reminderMinutesBeforeStart, reminderTime }: Partial<ICalendarEvent>,\n\t): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ _id: eventId },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t...(subject !== undefined ? { subject } : {}),\n\t\t\t\t\t...(description !== undefined ? { description } : {}),\n\t\t\t\t\t...(startTime ? { startTime } : {}),\n\t\t\t\t\t...(meetingUrl !== undefined ? { meetingUrl } : {}),\n\t\t\t\t\t...(reminderMinutesBeforeStart ? { reminderMinutesBeforeStart } : {}),\n\t\t\t\t\t...(reminderTime ? { reminderTime } : {}),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async findNextNotificationDate(): Promise<Date | null> {\n\t\tconst nextEvent = await this.findOne<Pick<ICalendarEvent, 'reminderTime'>>(\n\t\t\t{\n\t\t\t\treminderTime: {\n\t\t\t\t\t$gt: new Date(),\n\t\t\t\t},\n\t\t\t\tnotificationSent: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\treminderTime: 1,\n\t\t\t\t},\n\t\t\t\tprojection: {\n\t\t\t\t\treminderTime: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\treturn nextEvent?.reminderTime || null;\n\t}\n\n\tpublic findEventsToNotify(notificationTime: Date, minutes: number): FindCursor<ICalendarEvent> {\n\t\t// Find all the events between notificationTime and +minutes that have not been notified yet\n\t\tconst maxDate = new Date(notificationTime.toISOString());\n\t\tmaxDate.setMinutes(maxDate.getMinutes() + minutes);\n\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\treminderTime: {\n\t\t\t\t\t$gte: notificationTime,\n\t\t\t\t\t$lt: maxDate,\n\t\t\t\t},\n\t\t\t\tnotificationSent: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\treminderTime: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async flagNotificationSent(eventId: ICalendarEvent['_id']): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\t_id: eventId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tnotificationSent: true,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/CalendarEvent.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/CalendarEvent.ts","inputSourceMap":{"version":3,"file":"server/models/raw/CalendarEvent.ts","sourceRoot":"","sources":["server/models/raw/CalendarEvent.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ICalendarEvent, IUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ICalendarEventModel } from '@rocket.chat/model-typings';\nimport type { FindCursor, IndexDescription, Collection, Db, UpdateResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class CalendarEventRaw extends BaseRaw<ICalendarEvent> implements ICalendarEventModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ICalendarEvent>>) {\n\t\tsuper(db, 'calendar_event', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: { startTime: -1, uid: 1, externalId: 1 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: { reminderTime: -1, notificationSent: 1 },\n\t\t\t},\n\t\t];\n\t}\n\n\tpublic async findOneByExternalIdAndUserId(\n\t\texternalId: Required<ICalendarEvent>['externalId'],\n\t\tuid: ICalendarEvent['uid'],\n\t): Promise<ICalendarEvent | null> {\n\t\treturn this.findOne({\n\t\t\texternalId,\n\t\t\tuid,\n\t\t});\n\t}\n\n\tpublic findByUserIdAndDate(uid: IUser['_id'], date: Date): FindCursor<ICalendarEvent> {\n\t\tconst startTime = new Date(date.toISOString());\n\t\tstartTime.setHours(0, 0, 0, 0);\n\n\t\tconst finalTime = new Date(date.valueOf());\n\t\tfinalTime.setDate(finalTime.getDate() + 1);\n\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\tuid,\n\t\t\t\tstartTime: { $gte: startTime, $lt: finalTime },\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: { startTime: 1 },\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async updateEvent(\n\t\teventId: ICalendarEvent['_id'],\n\t\t{ subject, description, startTime, meetingUrl, reminderMinutesBeforeStart, reminderTime }: Partial<ICalendarEvent>,\n\t): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ _id: eventId },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t...(subject !== undefined ? { subject } : {}),\n\t\t\t\t\t...(description !== undefined ? { description } : {}),\n\t\t\t\t\t...(startTime ? { startTime } : {}),\n\t\t\t\t\t...(meetingUrl !== undefined ? { meetingUrl } : {}),\n\t\t\t\t\t...(reminderMinutesBeforeStart ? { reminderMinutesBeforeStart } : {}),\n\t\t\t\t\t...(reminderTime ? { reminderTime } : {}),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async findNextNotificationDate(): Promise<Date | null> {\n\t\tconst nextEvent = await this.findOne<Pick<ICalendarEvent, 'reminderTime'>>(\n\t\t\t{\n\t\t\t\treminderTime: {\n\t\t\t\t\t$gt: new Date(),\n\t\t\t\t},\n\t\t\t\tnotificationSent: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\treminderTime: 1,\n\t\t\t\t},\n\t\t\t\tprojection: {\n\t\t\t\t\treminderTime: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\treturn nextEvent?.reminderTime || null;\n\t}\n\n\tpublic findEventsToNotify(notificationTime: Date, minutes: number): FindCursor<ICalendarEvent> {\n\t\t// Find all the events between notificationTime and +minutes that have not been notified yet\n\t\tconst maxDate = new Date(notificationTime.toISOString());\n\t\tmaxDate.setMinutes(maxDate.getMinutes() + minutes);\n\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\treminderTime: {\n\t\t\t\t\t$gte: notificationTime,\n\t\t\t\t\t$lt: maxDate,\n\t\t\t\t},\n\t\t\t\tnotificationSent: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\treminderTime: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async flagNotificationSent(eventId: ICalendarEvent['_id']): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\t_id: eventId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tnotificationSent: true,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      CalendarEventRaw: () => CalendarEventRaw\n    });\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class CalendarEventRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'calendar_event', trash);\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            startTime: -1,\n            uid: 1,\n            externalId: 1\n          }\n        }, {\n          key: {\n            reminderTime: -1,\n            notificationSent: 1\n          }\n        }];\n      }\n      async findOneByExternalIdAndUserId(externalId, uid) {\n        return this.findOne({\n          externalId,\n          uid\n        });\n      }\n      findByUserIdAndDate(uid, date) {\n        const startTime = new Date(date.toISOString());\n        startTime.setHours(0, 0, 0, 0);\n        const finalTime = new Date(date.valueOf());\n        finalTime.setDate(finalTime.getDate() + 1);\n        return this.find({\n          uid,\n          startTime: {\n            $gte: startTime,\n            $lt: finalTime\n          }\n        }, {\n          sort: {\n            startTime: 1\n          }\n        });\n      }\n      async updateEvent(eventId, _ref) {\n        let {\n          subject,\n          description,\n          startTime,\n          meetingUrl,\n          reminderMinutesBeforeStart,\n          reminderTime\n        } = _ref;\n        return this.updateOne({\n          _id: eventId\n        }, {\n          $set: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, subject !== undefined ? {\n            subject\n          } : {}), description !== undefined ? {\n            description\n          } : {}), startTime ? {\n            startTime\n          } : {}), meetingUrl !== undefined ? {\n            meetingUrl\n          } : {}), reminderMinutesBeforeStart ? {\n            reminderMinutesBeforeStart\n          } : {}), reminderTime ? {\n            reminderTime\n          } : {})\n        });\n      }\n      async findNextNotificationDate() {\n        const nextEvent = await this.findOne({\n          reminderTime: {\n            $gt: new Date()\n          },\n          notificationSent: false\n        }, {\n          sort: {\n            reminderTime: 1\n          },\n          projection: {\n            reminderTime: 1\n          }\n        });\n        return (nextEvent === null || nextEvent === void 0 ? void 0 : nextEvent.reminderTime) || null;\n      }\n      findEventsToNotify(notificationTime, minutes) {\n        // Find all the events between notificationTime and +minutes that have not been notified yet\n        const maxDate = new Date(notificationTime.toISOString());\n        maxDate.setMinutes(maxDate.getMinutes() + minutes);\n        return this.find({\n          reminderTime: {\n            $gte: notificationTime,\n            $lt: maxDate\n          },\n          notificationSent: false\n        }, {\n          sort: {\n            reminderTime: 1\n          }\n        });\n      }\n      async flagNotificationSent(eventId) {\n        return this.updateOne({\n          _id: eventId\n        }, {\n          $set: {\n            notificationSent: true\n          }\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","CalendarEventRaw","BaseRaw","__reifyWaitForDeps__","constructor","db","trash","modelIndexes","key","startTime","uid","externalId","reminderTime","notificationSent","findOneByExternalIdAndUserId","findOne","findByUserIdAndDate","date","Date","toISOString","setHours","finalTime","valueOf","setDate","getDate","find","$gte","$lt","sort","updateEvent","eventId","_ref","subject","description","meetingUrl","reminderMinutesBeforeStart","updateOne","_id","$set","undefined","findNextNotificationDate","nextEvent","$gt","projection","findEventsToNotify","notificationTime","minutes","maxDate","setMinutes","getMinutes","flagNotificationSent","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/CalendarEvent.ts"],"sourcesContent":["import type { ICalendarEvent, IUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ICalendarEventModel } from '@rocket.chat/model-typings';\nimport type { FindCursor, IndexDescription, Collection, Db, UpdateResult } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class CalendarEventRaw extends BaseRaw<ICalendarEvent> implements ICalendarEventModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ICalendarEvent>>) {\n\t\tsuper(db, 'calendar_event', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: { startTime: -1, uid: 1, externalId: 1 },\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: { reminderTime: -1, notificationSent: 1 },\n\t\t\t},\n\t\t];\n\t}\n\n\tpublic async findOneByExternalIdAndUserId(\n\t\texternalId: Required<ICalendarEvent>['externalId'],\n\t\tuid: ICalendarEvent['uid'],\n\t): Promise<ICalendarEvent | null> {\n\t\treturn this.findOne({\n\t\t\texternalId,\n\t\t\tuid,\n\t\t});\n\t}\n\n\tpublic findByUserIdAndDate(uid: IUser['_id'], date: Date): FindCursor<ICalendarEvent> {\n\t\tconst startTime = new Date(date.toISOString());\n\t\tstartTime.setHours(0, 0, 0, 0);\n\n\t\tconst finalTime = new Date(date.valueOf());\n\t\tfinalTime.setDate(finalTime.getDate() + 1);\n\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\tuid,\n\t\t\t\tstartTime: { $gte: startTime, $lt: finalTime },\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: { startTime: 1 },\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async updateEvent(\n\t\teventId: ICalendarEvent['_id'],\n\t\t{ subject, description, startTime, meetingUrl, reminderMinutesBeforeStart, reminderTime }: Partial<ICalendarEvent>,\n\t): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{ _id: eventId },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t...(subject !== undefined ? { subject } : {}),\n\t\t\t\t\t...(description !== undefined ? { description } : {}),\n\t\t\t\t\t...(startTime ? { startTime } : {}),\n\t\t\t\t\t...(meetingUrl !== undefined ? { meetingUrl } : {}),\n\t\t\t\t\t...(reminderMinutesBeforeStart ? { reminderMinutesBeforeStart } : {}),\n\t\t\t\t\t...(reminderTime ? { reminderTime } : {}),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async findNextNotificationDate(): Promise<Date | null> {\n\t\tconst nextEvent = await this.findOne<Pick<ICalendarEvent, 'reminderTime'>>(\n\t\t\t{\n\t\t\t\treminderTime: {\n\t\t\t\t\t$gt: new Date(),\n\t\t\t\t},\n\t\t\t\tnotificationSent: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\treminderTime: 1,\n\t\t\t\t},\n\t\t\t\tprojection: {\n\t\t\t\t\treminderTime: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\treturn nextEvent?.reminderTime || null;\n\t}\n\n\tpublic findEventsToNotify(notificationTime: Date, minutes: number): FindCursor<ICalendarEvent> {\n\t\t// Find all the events between notificationTime and +minutes that have not been notified yet\n\t\tconst maxDate = new Date(notificationTime.toISOString());\n\t\tmaxDate.setMinutes(maxDate.getMinutes() + minutes);\n\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\treminderTime: {\n\t\t\t\t\t$gte: notificationTime,\n\t\t\t\t\t$lt: maxDate,\n\t\t\t\t},\n\t\t\t\tnotificationSent: false,\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\treminderTime: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic async flagNotificationSent(eventId: ICalendarEvent['_id']): Promise<UpdateResult> {\n\t\treturn this.updateOne(\n\t\t\t{\n\t\t\t\t_id: eventId,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tnotificationSent: true,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a55b13dee4b18bc66bcbc319a4205a45c474eba5"}
