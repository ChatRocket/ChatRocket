{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/threads/server/functions.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/threads/server/functions.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/threads/server/functions.ts","inputSourceMap":{"version":3,"file":"app/threads/server/functions.ts","sourceRoot":"","sources":["app/threads/server/functions.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { isEditedMessage } from '@rocket.chat/core-typings';\nimport { Messages, Subscriptions, ReadReceipts, NotificationQueue } from '@rocket.chat/models';\n\nimport {\n\tnotifyOnSubscriptionChangedByRoomIdAndUserIds,\n\tnotifyOnSubscriptionChangedByRoomIdAndUserId,\n} from '../../lib/server/lib/notifyListener';\nimport { getMentions, getUserIdsFromHighlights } from '../../lib/server/lib/notifyUsersOnMessage';\n\nexport async function reply({ tmid }: { tmid?: string }, message: IMessage, parentMessage: IMessage, followers: string[]) {\n\tif (!tmid || isEditedMessage(message)) {\n\t\treturn false;\n\t}\n\n\tconst { rid, ts, u } = message;\n\n\tconst { toAll, toHere, mentionIds } = await getMentions(message);\n\n\tconst addToReplies = [\n\t\t...new Set([\n\t\t\t...followers,\n\t\t\t...mentionIds,\n\t\t\t...(Array.isArray(parentMessage.replies) && parentMessage.replies.length ? [u._id] : [parentMessage.u._id, u._id]),\n\t\t]),\n\t];\n\n\tawait Messages.updateRepliesByThreadId(tmid, addToReplies, ts);\n\n\tconst [highlightsUids, threadFollowers] = await Promise.all([\n\t\tgetUserIdsFromHighlights(rid, message),\n\t\tMessages.getThreadFollowsByThreadId(tmid),\n\t]);\n\n\tconst threadFollowersUids = threadFollowers?.filter((userId) => userId !== u._id && !mentionIds.includes(userId)) || [];\n\n\t// Notify everyone involved in the thread\n\tconst notifyOptions = toAll || toHere ? { groupMention: true } : {};\n\n\t// Notify message mentioned users and highlights\n\tconst mentionedUsers = [...new Set([...mentionIds, ...highlightsUids])];\n\n\tconst promises = [\n\t\tReadReceipts.setAsThreadById(tmid),\n\t\tSubscriptions.addUnreadThreadByRoomIdAndUserIds(rid, threadFollowersUids, tmid, notifyOptions),\n\t];\n\n\tif (mentionedUsers.length) {\n\t\tpromises.push(Subscriptions.addUnreadThreadByRoomIdAndUserIds(rid, mentionedUsers, tmid, { userMention: true }));\n\t}\n\n\tif (highlightsUids.length) {\n\t\tpromises.push(\n\t\t\tSubscriptions.setAlertForRoomIdAndUserIds(rid, highlightsUids),\n\t\t\tSubscriptions.setOpenForRoomIdAndUserIds(rid, highlightsUids),\n\t\t);\n\t}\n\n\tawait Promise.allSettled(promises);\n\n\tvoid notifyOnSubscriptionChangedByRoomIdAndUserIds(rid, [...threadFollowersUids, ...mentionedUsers, ...highlightsUids]);\n}\n\nexport async function follow({ tmid, uid }: { tmid: string; uid: string }) {\n\tif (!tmid || !uid) {\n\t\treturn false;\n\t}\n\n\tawait Messages.addThreadFollowerByThreadId(tmid, uid);\n}\n\nexport async function unfollow({ tmid, rid, uid }: { tmid: string; rid: string; uid: string }) {\n\tif (!tmid || !uid) {\n\t\treturn false;\n\t}\n\n\tconst removeUnreadThreadResponse = await Subscriptions.removeUnreadThreadByRoomIdAndUserId(rid, uid, tmid);\n\tif (removeUnreadThreadResponse.modifiedCount) {\n\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(rid, uid);\n\t}\n\n\tawait Messages.removeThreadFollowerByThreadId(tmid, uid);\n}\n\nexport const readThread = async ({ userId, rid, tmid }: { userId: string; rid: string; tmid: string }) => {\n\tconst sub = await Subscriptions.findOneByRoomIdAndUserId(rid, userId, { projection: { tunread: 1 } });\n\tif (!sub) {\n\t\treturn;\n\t}\n\n\t// if the thread being marked as read is the last one unread also clear the unread subscription flag\n\tconst clearAlert = sub.tunread && sub.tunread?.length <= 1 && sub.tunread.includes(tmid);\n\n\tconst removeUnreadThreadResponse = await Subscriptions.removeUnreadThreadByRoomIdAndUserId(rid, userId, tmid, clearAlert);\n\tif (removeUnreadThreadResponse.modifiedCount) {\n\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(rid, userId);\n\t}\n\n\tawait NotificationQueue.clearQueueByUserId(userId);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/threads/server/functions.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/threads/server/functions.ts","inputSourceMap":{"version":3,"file":"app/threads/server/functions.ts","sourceRoot":"","sources":["app/threads/server/functions.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { isEditedMessage } from '@rocket.chat/core-typings';\nimport { Messages, Subscriptions, ReadReceipts, NotificationQueue } from '@rocket.chat/models';\n\nimport {\n\tnotifyOnSubscriptionChangedByRoomIdAndUserIds,\n\tnotifyOnSubscriptionChangedByRoomIdAndUserId,\n} from '../../lib/server/lib/notifyListener';\nimport { getMentions, getUserIdsFromHighlights } from '../../lib/server/lib/notifyUsersOnMessage';\n\nexport async function reply({ tmid }: { tmid?: string }, message: IMessage, parentMessage: IMessage, followers: string[]) {\n\tif (!tmid || isEditedMessage(message)) {\n\t\treturn false;\n\t}\n\n\tconst { rid, ts, u } = message;\n\n\tconst { toAll, toHere, mentionIds } = await getMentions(message);\n\n\tconst addToReplies = [\n\t\t...new Set([\n\t\t\t...followers,\n\t\t\t...mentionIds,\n\t\t\t...(Array.isArray(parentMessage.replies) && parentMessage.replies.length ? [u._id] : [parentMessage.u._id, u._id]),\n\t\t]),\n\t];\n\n\tawait Messages.updateRepliesByThreadId(tmid, addToReplies, ts);\n\n\tconst [highlightsUids, threadFollowers] = await Promise.all([\n\t\tgetUserIdsFromHighlights(rid, message),\n\t\tMessages.getThreadFollowsByThreadId(tmid),\n\t]);\n\n\tconst threadFollowersUids = threadFollowers?.filter((userId) => userId !== u._id && !mentionIds.includes(userId)) || [];\n\n\t// Notify everyone involved in the thread\n\tconst notifyOptions = toAll || toHere ? { groupMention: true } : {};\n\n\t// Notify message mentioned users and highlights\n\tconst mentionedUsers = [...new Set([...mentionIds, ...highlightsUids])];\n\n\tconst promises = [\n\t\tReadReceipts.setAsThreadById(tmid),\n\t\tSubscriptions.addUnreadThreadByRoomIdAndUserIds(rid, threadFollowersUids, tmid, notifyOptions),\n\t];\n\n\tif (mentionedUsers.length) {\n\t\tpromises.push(Subscriptions.addUnreadThreadByRoomIdAndUserIds(rid, mentionedUsers, tmid, { userMention: true }));\n\t}\n\n\tif (highlightsUids.length) {\n\t\tpromises.push(\n\t\t\tSubscriptions.setAlertForRoomIdAndUserIds(rid, highlightsUids),\n\t\t\tSubscriptions.setOpenForRoomIdAndUserIds(rid, highlightsUids),\n\t\t);\n\t}\n\n\tawait Promise.allSettled(promises);\n\n\tvoid notifyOnSubscriptionChangedByRoomIdAndUserIds(rid, [...threadFollowersUids, ...mentionedUsers, ...highlightsUids]);\n}\n\nexport async function follow({ tmid, uid }: { tmid: string; uid: string }) {\n\tif (!tmid || !uid) {\n\t\treturn false;\n\t}\n\n\tawait Messages.addThreadFollowerByThreadId(tmid, uid);\n}\n\nexport async function unfollow({ tmid, rid, uid }: { tmid: string; rid: string; uid: string }) {\n\tif (!tmid || !uid) {\n\t\treturn false;\n\t}\n\n\tconst removeUnreadThreadResponse = await Subscriptions.removeUnreadThreadByRoomIdAndUserId(rid, uid, tmid);\n\tif (removeUnreadThreadResponse.modifiedCount) {\n\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(rid, uid);\n\t}\n\n\tawait Messages.removeThreadFollowerByThreadId(tmid, uid);\n}\n\nexport const readThread = async ({ userId, rid, tmid }: { userId: string; rid: string; tmid: string }) => {\n\tconst sub = await Subscriptions.findOneByRoomIdAndUserId(rid, userId, { projection: { tunread: 1 } });\n\tif (!sub) {\n\t\treturn;\n\t}\n\n\t// if the thread being marked as read is the last one unread also clear the unread subscription flag\n\tconst clearAlert = sub.tunread && sub.tunread?.length <= 1 && sub.tunread.includes(tmid);\n\n\tconst removeUnreadThreadResponse = await Subscriptions.removeUnreadThreadByRoomIdAndUserId(rid, userId, tmid, clearAlert);\n\tif (removeUnreadThreadResponse.modifiedCount) {\n\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(rid, userId);\n\t}\n\n\tawait NotificationQueue.clearQueueByUserId(userId);\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      reply: () => reply,\n      follow: () => follow,\n      unfollow: () => unfollow,\n      readThread: () => readThread\n    });\n    let isEditedMessage;\n    module.link(\"@rocket.chat/core-typings\", {\n      isEditedMessage(v) {\n        isEditedMessage = v;\n      }\n    }, 0);\n    let Messages, Subscriptions, ReadReceipts, NotificationQueue;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      ReadReceipts(v) {\n        ReadReceipts = v;\n      },\n      NotificationQueue(v) {\n        NotificationQueue = v;\n      }\n    }, 1);\n    let notifyOnSubscriptionChangedByRoomIdAndUserIds, notifyOnSubscriptionChangedByRoomIdAndUserId;\n    module.link(\"../../lib/server/lib/notifyListener\", {\n      notifyOnSubscriptionChangedByRoomIdAndUserIds(v) {\n        notifyOnSubscriptionChangedByRoomIdAndUserIds = v;\n      },\n      notifyOnSubscriptionChangedByRoomIdAndUserId(v) {\n        notifyOnSubscriptionChangedByRoomIdAndUserId = v;\n      }\n    }, 2);\n    let getMentions, getUserIdsFromHighlights;\n    module.link(\"../../lib/server/lib/notifyUsersOnMessage\", {\n      getMentions(v) {\n        getMentions = v;\n      },\n      getUserIdsFromHighlights(v) {\n        getUserIdsFromHighlights = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function reply(_ref, message, parentMessage, followers) {\n      let {\n        tmid\n      } = _ref;\n      if (!tmid || isEditedMessage(message)) {\n        return false;\n      }\n      const {\n        rid,\n        ts,\n        u\n      } = message;\n      const {\n        toAll,\n        toHere,\n        mentionIds\n      } = await getMentions(message);\n      const addToReplies = [...new Set([...followers, ...mentionIds, ...(Array.isArray(parentMessage.replies) && parentMessage.replies.length ? [u._id] : [parentMessage.u._id, u._id])])];\n      await Messages.updateRepliesByThreadId(tmid, addToReplies, ts);\n      const [highlightsUids, threadFollowers] = await Promise.all([getUserIdsFromHighlights(rid, message), Messages.getThreadFollowsByThreadId(tmid)]);\n      const threadFollowersUids = (threadFollowers === null || threadFollowers === void 0 ? void 0 : threadFollowers.filter(userId => userId !== u._id && !mentionIds.includes(userId))) || [];\n      // Notify everyone involved in the thread\n      const notifyOptions = toAll || toHere ? {\n        groupMention: true\n      } : {};\n      // Notify message mentioned users and highlights\n      const mentionedUsers = [...new Set([...mentionIds, ...highlightsUids])];\n      const promises = [ReadReceipts.setAsThreadById(tmid), Subscriptions.addUnreadThreadByRoomIdAndUserIds(rid, threadFollowersUids, tmid, notifyOptions)];\n      if (mentionedUsers.length) {\n        promises.push(Subscriptions.addUnreadThreadByRoomIdAndUserIds(rid, mentionedUsers, tmid, {\n          userMention: true\n        }));\n      }\n      if (highlightsUids.length) {\n        promises.push(Subscriptions.setAlertForRoomIdAndUserIds(rid, highlightsUids), Subscriptions.setOpenForRoomIdAndUserIds(rid, highlightsUids));\n      }\n      await Promise.allSettled(promises);\n      void notifyOnSubscriptionChangedByRoomIdAndUserIds(rid, [...threadFollowersUids, ...mentionedUsers, ...highlightsUids]);\n    }\n    async function follow(_ref2) {\n      let {\n        tmid,\n        uid\n      } = _ref2;\n      if (!tmid || !uid) {\n        return false;\n      }\n      await Messages.addThreadFollowerByThreadId(tmid, uid);\n    }\n    async function unfollow(_ref3) {\n      let {\n        tmid,\n        rid,\n        uid\n      } = _ref3;\n      if (!tmid || !uid) {\n        return false;\n      }\n      const removeUnreadThreadResponse = await Subscriptions.removeUnreadThreadByRoomIdAndUserId(rid, uid, tmid);\n      if (removeUnreadThreadResponse.modifiedCount) {\n        void notifyOnSubscriptionChangedByRoomIdAndUserId(rid, uid);\n      }\n      await Messages.removeThreadFollowerByThreadId(tmid, uid);\n    }\n    const readThread = async _ref4 => {\n      var _sub$tunread;\n      let {\n        userId,\n        rid,\n        tmid\n      } = _ref4;\n      const sub = await Subscriptions.findOneByRoomIdAndUserId(rid, userId, {\n        projection: {\n          tunread: 1\n        }\n      });\n      if (!sub) {\n        return;\n      }\n      // if the thread being marked as read is the last one unread also clear the unread subscription flag\n      const clearAlert = sub.tunread && ((_sub$tunread = sub.tunread) === null || _sub$tunread === void 0 ? void 0 : _sub$tunread.length) <= 1 && sub.tunread.includes(tmid);\n      const removeUnreadThreadResponse = await Subscriptions.removeUnreadThreadByRoomIdAndUserId(rid, userId, tmid, clearAlert);\n      if (removeUnreadThreadResponse.modifiedCount) {\n        void notifyOnSubscriptionChangedByRoomIdAndUserId(rid, userId);\n      }\n      await NotificationQueue.clearQueueByUserId(userId);\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","reply","follow","unfollow","readThread","isEditedMessage","link","v","Messages","Subscriptions","ReadReceipts","NotificationQueue","notifyOnSubscriptionChangedByRoomIdAndUserIds","notifyOnSubscriptionChangedByRoomIdAndUserId","getMentions","getUserIdsFromHighlights","__reifyWaitForDeps__","_ref","message","parentMessage","followers","tmid","rid","ts","u","toAll","toHere","mentionIds","addToReplies","Set","Array","isArray","replies","length","_id","updateRepliesByThreadId","highlightsUids","threadFollowers","Promise","all","getThreadFollowsByThreadId","threadFollowersUids","filter","userId","includes","notifyOptions","groupMention","mentionedUsers","promises","setAsThreadById","addUnreadThreadByRoomIdAndUserIds","push","userMention","setAlertForRoomIdAndUserIds","setOpenForRoomIdAndUserIds","allSettled","_ref2","uid","addThreadFollowerByThreadId","_ref3","removeUnreadThreadResponse","removeUnreadThreadByRoomIdAndUserId","modifiedCount","removeThreadFollowerByThreadId","_ref4","_sub$tunread","sub","findOneByRoomIdAndUserId","projection","tunread","clearAlert","clearQueueByUserId","__reify_async_result__","_reifyError","self","async"],"sources":["app/threads/server/functions.ts"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { isEditedMessage } from '@rocket.chat/core-typings';\nimport { Messages, Subscriptions, ReadReceipts, NotificationQueue } from '@rocket.chat/models';\n\nimport {\n\tnotifyOnSubscriptionChangedByRoomIdAndUserIds,\n\tnotifyOnSubscriptionChangedByRoomIdAndUserId,\n} from '../../lib/server/lib/notifyListener';\nimport { getMentions, getUserIdsFromHighlights } from '../../lib/server/lib/notifyUsersOnMessage';\n\nexport async function reply({ tmid }: { tmid?: string }, message: IMessage, parentMessage: IMessage, followers: string[]) {\n\tif (!tmid || isEditedMessage(message)) {\n\t\treturn false;\n\t}\n\n\tconst { rid, ts, u } = message;\n\n\tconst { toAll, toHere, mentionIds } = await getMentions(message);\n\n\tconst addToReplies = [\n\t\t...new Set([\n\t\t\t...followers,\n\t\t\t...mentionIds,\n\t\t\t...(Array.isArray(parentMessage.replies) && parentMessage.replies.length ? [u._id] : [parentMessage.u._id, u._id]),\n\t\t]),\n\t];\n\n\tawait Messages.updateRepliesByThreadId(tmid, addToReplies, ts);\n\n\tconst [highlightsUids, threadFollowers] = await Promise.all([\n\t\tgetUserIdsFromHighlights(rid, message),\n\t\tMessages.getThreadFollowsByThreadId(tmid),\n\t]);\n\n\tconst threadFollowersUids = threadFollowers?.filter((userId) => userId !== u._id && !mentionIds.includes(userId)) || [];\n\n\t// Notify everyone involved in the thread\n\tconst notifyOptions = toAll || toHere ? { groupMention: true } : {};\n\n\t// Notify message mentioned users and highlights\n\tconst mentionedUsers = [...new Set([...mentionIds, ...highlightsUids])];\n\n\tconst promises = [\n\t\tReadReceipts.setAsThreadById(tmid),\n\t\tSubscriptions.addUnreadThreadByRoomIdAndUserIds(rid, threadFollowersUids, tmid, notifyOptions),\n\t];\n\n\tif (mentionedUsers.length) {\n\t\tpromises.push(Subscriptions.addUnreadThreadByRoomIdAndUserIds(rid, mentionedUsers, tmid, { userMention: true }));\n\t}\n\n\tif (highlightsUids.length) {\n\t\tpromises.push(\n\t\t\tSubscriptions.setAlertForRoomIdAndUserIds(rid, highlightsUids),\n\t\t\tSubscriptions.setOpenForRoomIdAndUserIds(rid, highlightsUids),\n\t\t);\n\t}\n\n\tawait Promise.allSettled(promises);\n\n\tvoid notifyOnSubscriptionChangedByRoomIdAndUserIds(rid, [...threadFollowersUids, ...mentionedUsers, ...highlightsUids]);\n}\n\nexport async function follow({ tmid, uid }: { tmid: string; uid: string }) {\n\tif (!tmid || !uid) {\n\t\treturn false;\n\t}\n\n\tawait Messages.addThreadFollowerByThreadId(tmid, uid);\n}\n\nexport async function unfollow({ tmid, rid, uid }: { tmid: string; rid: string; uid: string }) {\n\tif (!tmid || !uid) {\n\t\treturn false;\n\t}\n\n\tconst removeUnreadThreadResponse = await Subscriptions.removeUnreadThreadByRoomIdAndUserId(rid, uid, tmid);\n\tif (removeUnreadThreadResponse.modifiedCount) {\n\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(rid, uid);\n\t}\n\n\tawait Messages.removeThreadFollowerByThreadId(tmid, uid);\n}\n\nexport const readThread = async ({ userId, rid, tmid }: { userId: string; rid: string; tmid: string }) => {\n\tconst sub = await Subscriptions.findOneByRoomIdAndUserId(rid, userId, { projection: { tunread: 1 } });\n\tif (!sub) {\n\t\treturn;\n\t}\n\n\t// if the thread being marked as read is the last one unread also clear the unread subscription flag\n\tconst clearAlert = sub.tunread && sub.tunread?.length <= 1 && sub.tunread.includes(tmid);\n\n\tconst removeUnreadThreadResponse = await Subscriptions.removeUnreadThreadByRoomIdAndUserId(rid, userId, tmid, clearAlert);\n\tif (removeUnreadThreadResponse.modifiedCount) {\n\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(rid, userId);\n\t}\n\n\tawait NotificationQueue.clearQueueByUserId(userId);\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"02a2da0e2c8111a87a427e9207e99252fc397f02"}
