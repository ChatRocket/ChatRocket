{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveSpotify.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/messages/hooks/BeforeSaveSpotify.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveSpotify.ts","inputSourceMap":{"version":3,"file":"server/services/messages/hooks/BeforeSaveSpotify.ts","sourceRoot":"","sources":["server/services/messages/hooks/BeforeSaveSpotify.ts"],"names":[],"mappings":"AAEA,qHAAqH;AACrH,MAAM,OAAO,iBAAiB;IAC7B,KAAK,CAAC,mBAAmB,CAAC,EAAE,OAAO,EAAyB;QAC3D,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;YAC1B,OAAO,OAAO,CAAC;QAChB,CAAC;QAED,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAE7D,IAAI,OAAO,GAAG,KAAK,CAAC;QAEpB,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;QAChF,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;YACtD,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YAE7B,IAAI,CAAC,mDAAmD,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBACrE,MAAM,EAAE,GAAG,wEAAwE,CAAC;gBAEpF,IAAI,KAAK,CAAC;gBACV,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;oBACxC,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC7D,MAAM,GAAG,GAAG,4BAA4B,IAAI,EAAE,CAAC;oBAC/C,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,WAAW,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;oBAClE,OAAO,GAAG,IAAI,CAAC;gBAChB,CAAC;YACF,CAAC;QACF,CAAC;QAED,IAAI,OAAO,EAAE,CAAC;YACb,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC;QAED,OAAO,OAAO,CAAC;IAChB,CAAC;CACD","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\n\n// look for spotify syntax (e.g.: spotify:track:1q6IK1l4qpYykOaWaLJkWG) on the message and add them to the urls array\nexport class BeforeSaveSpotify {\n\tasync convertSpotifyLinks({ message }: { message: IMessage }): Promise<IMessage> {\n\t\tif (!message.msg?.trim()) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst urls = Array.isArray(message.urls) ? message.urls : [];\n\n\t\tlet changed = false;\n\n\t\tconst msgParts = message.msg.split(/(```\\w*[\\n ]?[\\s\\S]*?```+?)|(`(?:[^`]+)`)/);\n\t\tfor (let index = 0; index < msgParts.length; index++) {\n\t\t\tconst part = msgParts[index];\n\n\t\t\tif (!/(?:```(\\w*)[\\n ]?([\\s\\S]*?)```+?)|(?:`(?:[^`]+)`)/.test(part)) {\n\t\t\t\tconst re = /(?:^|\\s)spotify:([^:\\s]+):([^:\\s]+)(?::([^:\\s]+))?(?::(\\S+))?(?:\\s|$)/g;\n\n\t\t\t\tlet match;\n\t\t\t\twhile ((match = re.exec(part)) != null) {\n\t\t\t\t\tconst data = match.slice(1).filter(Boolean);\n\t\t\t\t\tconst path = data.map((value) => encodeURI(value)).join('/');\n\t\t\t\t\tconst url = `https://open.spotify.com/${path}`;\n\t\t\t\t\turls.push({ url, source: `spotify:${data.join(':')}`, meta: {} });\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (changed) {\n\t\t\tmessage.urls = urls;\n\t\t}\n\n\t\treturn message;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/messages/hooks/BeforeSaveSpotify.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/messages/hooks/BeforeSaveSpotify.ts","inputSourceMap":{"version":3,"file":"server/services/messages/hooks/BeforeSaveSpotify.ts","sourceRoot":"","sources":["server/services/messages/hooks/BeforeSaveSpotify.ts"],"names":[],"mappings":"AAEA,qHAAqH;AACrH,MAAM,OAAO,iBAAiB;IAC7B,KAAK,CAAC,mBAAmB,CAAC,EAAE,OAAO,EAAyB;QAC3D,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;YAC1B,OAAO,OAAO,CAAC;QAChB,CAAC;QAED,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAE7D,IAAI,OAAO,GAAG,KAAK,CAAC;QAEpB,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,2CAA2C,CAAC,CAAC;QAChF,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;YACtD,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YAE7B,IAAI,CAAC,mDAAmD,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBACrE,MAAM,EAAE,GAAG,wEAAwE,CAAC;gBAEpF,IAAI,KAAK,CAAC;gBACV,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;oBACxC,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC7D,MAAM,GAAG,GAAG,4BAA4B,IAAI,EAAE,CAAC;oBAC/C,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,WAAW,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;oBAClE,OAAO,GAAG,IAAI,CAAC;gBAChB,CAAC;YACF,CAAC;QACF,CAAC;QAED,IAAI,OAAO,EAAE,CAAC;YACb,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC;QAED,OAAO,OAAO,CAAC;IAChB,CAAC;CACD","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\n\n// look for spotify syntax (e.g.: spotify:track:1q6IK1l4qpYykOaWaLJkWG) on the message and add them to the urls array\nexport class BeforeSaveSpotify {\n\tasync convertSpotifyLinks({ message }: { message: IMessage }): Promise<IMessage> {\n\t\tif (!message.msg?.trim()) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst urls = Array.isArray(message.urls) ? message.urls : [];\n\n\t\tlet changed = false;\n\n\t\tconst msgParts = message.msg.split(/(```\\w*[\\n ]?[\\s\\S]*?```+?)|(`(?:[^`]+)`)/);\n\t\tfor (let index = 0; index < msgParts.length; index++) {\n\t\t\tconst part = msgParts[index];\n\n\t\t\tif (!/(?:```(\\w*)[\\n ]?([\\s\\S]*?)```+?)|(?:`(?:[^`]+)`)/.test(part)) {\n\t\t\t\tconst re = /(?:^|\\s)spotify:([^:\\s]+):([^:\\s]+)(?::([^:\\s]+))?(?::(\\S+))?(?:\\s|$)/g;\n\n\t\t\t\tlet match;\n\t\t\t\twhile ((match = re.exec(part)) != null) {\n\t\t\t\t\tconst data = match.slice(1).filter(Boolean);\n\t\t\t\t\tconst path = data.map((value) => encodeURI(value)).join('/');\n\t\t\t\t\tconst url = `https://open.spotify.com/${path}`;\n\t\t\t\t\turls.push({ url, source: `spotify:${data.join(':')}`, meta: {} });\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (changed) {\n\t\t\tmessage.urls = urls;\n\t\t}\n\n\t\treturn message;\n\t}\n}\n"]}}},"code":"module.export({\n  BeforeSaveSpotify: () => BeforeSaveSpotify\n});\nclass BeforeSaveSpotify {\n  async convertSpotifyLinks(_ref) {\n    var _message$msg;\n    let {\n      message\n    } = _ref;\n    if (!((_message$msg = message.msg) !== null && _message$msg !== void 0 && _message$msg.trim())) {\n      return message;\n    }\n    const urls = Array.isArray(message.urls) ? message.urls : [];\n    let changed = false;\n    const msgParts = message.msg.split(/(```\\w*[\\n ]?[\\s\\S]*?```+?)|(`(?:[^`]+)`)/);\n    for (let index = 0; index < msgParts.length; index++) {\n      const part = msgParts[index];\n      if (!/(?:```(\\w*)[\\n ]?([\\s\\S]*?)```+?)|(?:`(?:[^`]+)`)/.test(part)) {\n        const re = /(?:^|\\s)spotify:([^:\\s]+):([^:\\s]+)(?::([^:\\s]+))?(?::(\\S+))?(?:\\s|$)/g;\n        let match;\n        while ((match = re.exec(part)) != null) {\n          const data = match.slice(1).filter(Boolean);\n          const path = data.map(value => encodeURI(value)).join('/');\n          const url = \"https://open.spotify.com/\".concat(path);\n          urls.push({\n            url,\n            source: \"spotify:\".concat(data.join(':')),\n            meta: {}\n          });\n          changed = true;\n        }\n      }\n    }\n    if (changed) {\n      message.urls = urls;\n    }\n    return message;\n  }\n}","map":{"version":3,"names":["module","export","BeforeSaveSpotify","convertSpotifyLinks","_ref","_message$msg","message","msg","trim","urls","Array","isArray","changed","msgParts","split","index","length","part","test","re","match","exec","data","slice","filter","Boolean","path","map","value","encodeURI","join","url","concat","push","source","meta"],"sources":["server/services/messages/hooks/BeforeSaveSpotify.ts"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\n\n// look for spotify syntax (e.g.: spotify:track:1q6IK1l4qpYykOaWaLJkWG) on the message and add them to the urls array\nexport class BeforeSaveSpotify {\n\tasync convertSpotifyLinks({ message }: { message: IMessage }): Promise<IMessage> {\n\t\tif (!message.msg?.trim()) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst urls = Array.isArray(message.urls) ? message.urls : [];\n\n\t\tlet changed = false;\n\n\t\tconst msgParts = message.msg.split(/(```\\w*[\\n ]?[\\s\\S]*?```+?)|(`(?:[^`]+)`)/);\n\t\tfor (let index = 0; index < msgParts.length; index++) {\n\t\t\tconst part = msgParts[index];\n\n\t\t\tif (!/(?:```(\\w*)[\\n ]?([\\s\\S]*?)```+?)|(?:`(?:[^`]+)`)/.test(part)) {\n\t\t\t\tconst re = /(?:^|\\s)spotify:([^:\\s]+):([^:\\s]+)(?::([^:\\s]+))?(?::(\\S+))?(?:\\s|$)/g;\n\n\t\t\t\tlet match;\n\t\t\t\twhile ((match = re.exec(part)) != null) {\n\t\t\t\t\tconst data = match.slice(1).filter(Boolean);\n\t\t\t\t\tconst path = data.map((value) => encodeURI(value)).join('/');\n\t\t\t\t\tconst url = `https://open.spotify.com/${path}`;\n\t\t\t\t\turls.push({ url, source: `spotify:${data.join(':')}`, meta: {} });\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (changed) {\n\t\t\tmessage.urls = urls;\n\t\t}\n\n\t\treturn message;\n\t}\n}\n"],"mappings":"AAEAA,MAAA,CAAAC,MAAA;EAAAC,iBAAA,EAAAA,CAAA,KAAAA;AAAA;AACM,MAAOA,iBAAiB;EAC7B,MAAMC,mBAAmBA,CAAAC,IAAA,EAAmC;IAAA,IAAAC,YAAA;IAAA,IAAlC;MAAEC;IAAO,CAAyB,GAAAF,IAAA;IAC3D,IAAI,GAAAC,YAAA,GAACC,OAAO,CAACC,GAAG,cAAAF,YAAA,eAAXA,YAAA,CAAaG,IAAI,EAAE,GAAE;MACzB,OAAOF,OAAO;IACf;IAEA,MAAMG,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACL,OAAO,CAACG,IAAI,CAAC,GAAGH,OAAO,CAACG,IAAI,GAAG,EAAE;IAE5D,IAAIG,OAAO,GAAG,KAAK;IAEnB,MAAMC,QAAQ,GAAGP,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC,2CAA2C,CAAC;IAC/E,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,QAAQ,CAACG,MAAM,EAAED,KAAK,EAAE,EAAE;MACrD,MAAME,IAAI,GAAGJ,QAAQ,CAACE,KAAK,CAAC;MAE5B,IAAI,CAAC,mDAAmD,CAACG,IAAI,CAACD,IAAI,CAAC,EAAE;QACpE,MAAME,EAAE,GAAG,wEAAwE;QAEnF,IAAIC,KAAK;QACT,OAAO,CAACA,KAAK,GAAGD,EAAE,CAACE,IAAI,CAACJ,IAAI,CAAC,KAAK,IAAI,EAAE;UACvC,MAAMK,IAAI,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;UAC3C,MAAMC,IAAI,GAAGJ,IAAI,CAACK,GAAG,CAAEC,KAAK,IAAKC,SAAS,CAACD,KAAK,CAAC,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC;UAC5D,MAAMC,GAAG,+BAAAC,MAAA,CAA+BN,IAAI,CAAE;UAC9CjB,IAAI,CAACwB,IAAI,CAAC;YAAEF,GAAG;YAAEG,MAAM,aAAAF,MAAA,CAAaV,IAAI,CAACQ,IAAI,CAAC,GAAG,CAAC,CAAE;YAAEK,IAAI,EAAE;UAAE,CAAE,CAAC;UACjEvB,OAAO,GAAG,IAAI;QACf;MACD;IACD;IAEA,IAAIA,OAAO,EAAE;MACZN,OAAO,CAACG,IAAI,GAAGA,IAAI;IACpB;IAEA,OAAOH,OAAO;EACf","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2089da1b1df0f6c75c1828b470fc3a846e7fdc40"}
