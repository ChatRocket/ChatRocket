{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/VideoConfManager.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/VideoConfManager.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/VideoConfManager.ts","inputSourceMap":{"version":3,"file":"client/lib/VideoConfManager.ts","sourceRoot":"","sources":["client/lib/VideoConfManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { getConfig } from './utils/getConfig';\nimport { time } from 'console';\n\nconst debug = !!(getConfig('debug') || getConfig('debug-VideoConf'));\n\n// The interval between attempts to call the remote user\nconst CALL_INTERVAL = 3000;\n// How many attempts to call we're gonna make\nconst CALL_ATTEMPT_LIMIT = 10;\n// The amount of time we'll assume an incoming call is still valid without any updates from the remote user\nconst CALL_TIMEOUT = 10000;\n// How long are we gonna wait for a link after accepting an incoming call\nconst ACCEPT_TIMEOUT = 5000;\n\ntype DirectCallParams = {\n\tuid: IUser['_id'];\n\trid: IRoom['_id'];\n\tcallId: string;\n};\n\nexport type DirectCallData = DirectCallParams & {\n\tdismissed: boolean;\n};\n\ntype IncomingDirectCall = DirectCallParams & {\n\ttimeout: ReturnType<typeof setTimeout> | undefined;\n\tacceptTimeout?: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport type CallPreferences = {\n\tmic?: boolean;\n\tcam?: boolean;\n};\n\nexport type ProviderCapabilities = {\n\tmic?: boolean;\n\tcam?: boolean;\n\ttitle?: boolean;\n};\n\ntype CurrentCallParams = {\n\tcallId: string;\n\turl: string;\n\tproviderName?: string;\n};\n\ntype VideoConfEvents = {\n\t// We gave up on calling a remote user or they rejected our call\n\t'direct/cancel': DirectCallParams;\n\n\t// A remote user is calling us\n\t'direct/ringing': DirectCallParams;\n\n\t// An incoming call was lost, either by timeout or because the remote user canceled\n\t'direct/lost': DirectCallParams;\n\n\t// We tried to accept an incoming call but the process failed\n\t'direct/failed': DirectCallParams;\n\n\t// A remote user accepted our call\n\t'direct/accepted': DirectCallParams;\n\n\t// We stopped calling a remote user\n\t'direct/stopped': DirectCallParams;\n\n\t'preference/changed': { key: keyof CallPreferences; value: boolean };\n\n\t// The list of incoming calls has changed in some way\n\t'incoming/changed': void;\n\n\t// The list of ringing incoming calls may have changed\n\t'ringing/changed': void;\n\n\t// The value of `isCalling` may have changed\n\t'calling/changed': void;\n\n\t'calling/ended': void;\n\n\t// When join call\n\t'call/join': CurrentCallParams;\n\n\t'join/error': { error: string };\n\n\t'start/error': { error: string };\n\n\t'capabilities/changed': void;\n};\n\nexport const VideoConfManager = new (class VideoConfManager extends Emitter<VideoConfEvents> {\n\tprivate userId: string | undefined;\n\n\tprivate currentCallHandler: ReturnType<typeof setTimeout> | undefined;\n\n\tprivate currentCallData: (DirectCallParams & { joined?: boolean }) | undefined;\n\n\tprivate startingNewCall = false;\n\n\tprivate hooks: (() => void)[] = [];\n\n\tprivate incomingDirectCalls: Map<string, IncomingDirectCall>;\n\n\tprivate dismissedCalls: Set<string>;\n\n\tprivate _preferences: CallPreferences;\n\n\tprivate _capabilities: ProviderCapabilities;\n\n\tpublic get preferences(): CallPreferences {\n\t\treturn this._preferences;\n\t}\n\n\tpublic get capabilities(): ProviderCapabilities {\n\t\treturn this._capabilities;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.incomingDirectCalls = new Map<string, IncomingDirectCall>();\n\t\tthis.dismissedCalls = new Set<string>();\n\t\tthis._preferences = { mic: true, cam: false };\n\t\tthis._capabilities = {};\n\n\t\tthis.on('incoming/changed', () => {\n\t\t\ttime.directCalls = this.getIncomingDirectCalls();\n\t\t});\n\t}\n\n\tpublic isBusy(): boolean {\n\t\tif (this.startingNewCall) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isCalling();\n\t}\n\n\tpublic isRinging(): boolean {\n\t\treturn [...this.incomingDirectCalls.values()].some(({ callId }) => !this.isCallDismissed(callId));\n\t}\n\n\tpublic isCalling(): boolean {\n\t\tif (this.currentCallHandler || (this.currentCallData && !this.currentCallData.joined)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic getIncomingDirectCalls(): DirectCallData[] {\n\t\treturn (\n\t\t\t[...this.incomingDirectCalls.values()]\n\t\t\t\t// Filter out any calls that we're in the process of accepting, so they're already hidden from the UI\n\t\t\t\t.filter((call) => !call.acceptTimeout)\n\t\t\t\t.map(({ timeout: _, acceptTimeout: _t, ...call }) => ({ ...call, dismissed: this.isCallDismissed(call.callId) }))\n\t\t);\n\t}\n\n\tpublic async startCall(roomId: IRoom['_id'], title?: string): Promise<void> {\n\t\tif (!this.userId || this.isBusy()) {\n\t\t\tthrow new Error('Video manager is busy.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Starting new call on room ${roomId}`);\n\t\tthis.startingNewCall = true;\n\t\tthis.emit('calling/changed');\n\n\t\tconst { data } = await sdk.rest.post('/v1/video-conference.start', { roomId, title, allowRinging: true }).catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to start new call on room ${roomId}`);\n\t\t\tthis.startingNewCall = false;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('start/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis.startingNewCall = false;\n\t\tthis.emit('calling/changed');\n\n\t\tif (data.type !== 'direct') {\n\t\t\tthis.emit('calling/ended');\n\t\t}\n\n\t\tswitch (data.type) {\n\t\t\tcase 'direct':\n\t\t\t\treturn this.callUser({ uid: data.calleeId, rid: roomId, callId: data.callId });\n\t\t\tcase 'videoconference':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t\tcase 'livechat':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t}\n\t}\n\n\tpublic acceptIncomingCall(callId: string): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tthrow new Error('Unable to find accepted call information.');\n\t\t}\n\t\tif (callData.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] We're already trying to accept call ${callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Accepting incoming call ${callId}.`);\n\n\t\tif (callData.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'timeout', undefined);\n\t\t}\n\n\t\t// Mute this call Id so any lingering notifications don't trigger it again\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tthis.setIncomingCallAttribute(\n\t\t\tcallId,\n\t\t\t'acceptTimeout',\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst updatedCallData = this.incomingDirectCalls.get(callId);\n\t\t\t\tif (!updatedCallData?.acceptTimeout) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdebug && console.log(`[VideoConf] Attempt to accept call has timed out.`);\n\t\t\t\tthis.removeIncomingCall(callId);\n\n\t\t\t\tthis.emit('direct/failed', { callId, uid: callData.uid, rid: callData.rid });\n\t\t\t}, ACCEPT_TIMEOUT),\n\t\t);\n\t\tthis.emit('incoming/changed');\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that we accept their call.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'accepted', { callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tpublic rejectIncomingCall(callId: string): void {\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.userId && this.notifyUser(callData.uid, 'rejected', { callId, uid: this.userId, rid: callData.rid });\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tpublic dismissedIncomingCalls(): void {\n\t\t// Mute all calls that are currently ringing\n\t\tif ([...this.incomingDirectCalls.keys()].some((callId) => this.dismissedIncomingCallHelper(callId))) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t}\n\t}\n\n\tpublic async loadCapabilities(): Promise<void> {\n\t\tconst { capabilities } = await sdk.rest.get('/v1/video-conference.capabilities').catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to load video conference capabilities`);\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis._capabilities = capabilities || {};\n\t\tthis.emit('capabilities/changed');\n\t}\n\n\tprivate setIncomingCallAttribute<T extends keyof IncomingDirectCall>(\n\t\tcallId: string,\n\t\tattributeName: T,\n\t\tvalue: IncomingDirectCall[T] | undefined,\n\t): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tdebug && console.error(`[VideoConf] Cannot change attribute \"${attributeName}\" of unknown call \"${callId}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newData: IncomingDirectCall = {\n\t\t\t...callData,\n\t\t};\n\n\t\tif (value === undefined) {\n\t\t\tdelete newData[attributeName];\n\t\t} else {\n\t\t\tnewData[attributeName] = value;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Updating attribute \"${attributeName}\" of call \"${callId}\".`);\n\t\tthis.incomingDirectCalls.set(callId, newData);\n\t}\n\n\tprivate dismissedIncomingCallHelper(callId: string): boolean {\n\t\t// Muting will stop a callId from ringing, but it doesn't affect any part of the existing workflow\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Dismissing call ${callId}`);\n\t\tthis.dismissedCalls.add(callId);\n\t\t// We don't need to hold on to the dismissed callIds forever because the server won't let anyone call us with it for very long\n\t\tsetTimeout(() => this.dismissedCalls.delete(callId), CALL_TIMEOUT * 20);\n\t\t// Only change the state if this call is actually in our list\n\t\treturn this.incomingDirectCalls.has(callId);\n\t}\n\n\tpublic dismissIncomingCall(callId: string): boolean {\n\t\tif (this.dismissedIncomingCallHelper(callId)) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic updateUser(): void {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (this.userId === userId) {\n\t\t\tdebug && console.log(`[VideoConf] Logged user has not changed, so we're not changing the hooks.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Logged user has changed.`);\n\n\t\tif (this.userId) {\n\t\t\tthis.disconnect();\n\t\t}\n\n\t\tif (userId) {\n\t\t\tthis.connectUser(userId);\n\t\t}\n\t}\n\n\tpublic changePreference(key: keyof CallPreferences, value: boolean): void {\n\t\tthis._preferences[key] = value;\n\t\tthis.emit('preference/changed', { key, value });\n\t}\n\n\tpublic setPreferences(prefs: Partial<CallPreferences>): void {\n\t\tfor (const key in prefs) {\n\t\t\tif (prefs.hasOwnProperty(key)) {\n\t\t\t\tconst prefKey = key as keyof CallPreferences;\n\t\t\t\tthis.changePreference(prefKey, prefs[prefKey] as boolean);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async joinCall(callId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] Joining call ${callId}.`);\n\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tconst data = this.incomingDirectCalls.get(callId);\n\t\t\tif (data?.acceptTimeout) {\n\t\t\t\tdebug && console.log('[VideoConf] Clearing acceptance timeout');\n\t\t\t\tclearTimeout(data.acceptTimeout);\n\t\t\t}\n\t\t\tthis.removeIncomingCall(callId);\n\t\t}\n\n\t\tconst params = {\n\t\t\tcallId,\n\t\t\tstate: {\n\t\t\t\t...(this._preferences.mic !== undefined ? { mic: this._preferences.mic } : {}),\n\t\t\t\t...(this._preferences.cam !== undefined ? { cam: this._preferences.cam } : {}),\n\t\t\t},\n\t\t};\n\n\t\tconst { url, providerName } = await sdk.rest.post('/v1/video-conference.join', params).catch((e) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to join call ${callId}`);\n\t\t\tthis.emit('join/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tif (!url) {\n\t\t\tthrow new Error('Failed to get video conference URL.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Opening ${url}.`);\n\t\tthis.emit('call/join', { url, callId, providerName });\n\t}\n\n\tpublic abortCall(): void {\n\t\tif (!this.currentCallData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.giveUp(this.currentCallData);\n\t}\n\n\tprivate rejectIncomingCallsFromUser(userId: string): void {\n\t\tfor (const [, { callId, uid }] of this.incomingDirectCalls) {\n\t\t\tif (userId === uid) {\n\t\t\t\tdebug && console.log(`[VideoConf] Rejecting old incoming call from user ${userId}`);\n\t\t\t\tthis.rejectIncomingCall(callId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async callUser({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tif (this.currentCallHandler || this.currentCallData) {\n\t\t\tthrow new Error('Video Conference State Error.');\n\t\t}\n\n\t\tlet attempt = 1;\n\t\tthis.currentCallData = { callId, rid, uid };\n\t\tthis.currentCallHandler = setInterval(() => {\n\t\t\tif (!this.currentCallHandler) {\n\t\t\t\tdebug && console.warn(`[VideoConf] Ringing interval was not properly cleared.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattempt++;\n\n\t\t\tif (attempt > CALL_ATTEMPT_LIMIT) {\n\t\t\t\tthis.giveUp({ uid, rid, callId });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdebug && console.log(`[VideoConf] Ringing user ${uid}, attempt number ${attempt}.`);\n\t\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t\t}, CALL_INTERVAL);\n\t\tthis.emit('calling/changed');\n\n\t\tdebug && console.log(`[VideoConf] Ringing user ${uid} for the first time.`);\n\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t}\n\n\tprivate async giveUp({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tconst joined = this.currentCallData?.joined;\n\n\t\tdebug && console.log(`[VideoConf] Stop ringing user ${uid}.`);\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.currentCallData = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${uid} that we are no longer calling.`);\n\t\tthis.userId && this.notifyUser(uid, 'canceled', { uid: this.userId, rid, callId });\n\n\t\tthis.emit('direct/cancel', { uid, rid, callId });\n\t\tthis.emit('direct/stopped', { uid, rid, callId });\n\n\t\tif (joined) {\n\t\t\treturn;\n\t\t}\n\n\t\tsdk.rest.post('/v1/video-conference.cancel', { callId });\n\t}\n\n\tprivate disconnect(): void {\n\t\tdebug && console.log(`[VideoConf] disconnecting user ${this.userId}`);\n\t\tfor (const hook of this.hooks) {\n\t\t\thook();\n\t\t}\n\t\tthis.hooks = [];\n\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tthis.incomingDirectCalls.forEach((call) => {\n\t\t\tif (call.timeout) {\n\t\t\t\tclearTimeout(call.timeout);\n\t\t\t}\n\t\t\tif (call.acceptTimeout) {\n\t\t\t\tclearTimeout(call.acceptTimeout);\n\t\t\t}\n\t\t});\n\t\tthis.incomingDirectCalls.clear();\n\t\tthis.dismissedCalls.clear();\n\t\tthis.currentCallData = undefined;\n\t\tthis._preferences = {};\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('calling/changed');\n\t}\n\n\tprivate async onVideoConfNotification({ action, params }: { action: string; params: DirectCallParams }): Promise<void> {\n\t\tif (!action || typeof action !== 'string') {\n\t\t\tdebug && console.error('[VideoConf] Invalid action received.');\n\t\t\treturn;\n\t\t}\n\t\tif (!params || typeof params !== 'object' || !params.callId || !params.uid || !params.rid) {\n\t\t\tdebug && console.error('[VideoConf] Invalid params received.');\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (action) {\n\t\t\tcase 'call':\n\t\t\t\treturn this.onDirectCall(params);\n\t\t\tcase 'canceled':\n\t\t\t\treturn this.onDirectCallCanceled(params);\n\t\t\tcase 'accepted':\n\t\t\t\treturn this.onDirectCallAccepted(params);\n\t\t\tcase 'rejected':\n\t\t\t\treturn this.onDirectCallRejected(params);\n\t\t\tcase 'confirmed':\n\t\t\t\treturn this.onDirectCallConfirmed(params);\n\t\t\tcase 'join':\n\t\t\t\treturn this.onDirectCallJoined(params);\n\t\t\tcase 'end':\n\t\t\t\treturn this.onDirectCallEnded(params);\n\t\t}\n\t}\n\n\tprivate async notifyUser(uid: IUser['_id'], action: string, params: DirectCallParams): Promise<void> {\n\t\treturn sdk.publish('notify-user', [`${uid}/video-conference`, { action, params }]);\n\t}\n\n\tprivate async connectUser(userId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] connecting user ${userId}`);\n\t\tthis.userId = userId;\n\n\t\tconst { stop, ready } = sdk.stream('notify-user', [`${userId}/video-conference`], (data) => this.onVideoConfNotification(data));\n\n\t\tawait ready();\n\n\t\tthis.hooks.push(stop);\n\t}\n\n\tprivate abortIncomingCall(callId: string): void {\n\t\t// If we just accepted this call, then ignore the timeout\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Canceling call ${callId} due to ringing timeout.`);\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate loseIncomingCall(callId: string): void {\n\t\tconst lostCall = this.incomingDirectCalls.get(callId);\n\t\tif (!lostCall) {\n\t\t\tdebug && console.warn(`[VideoConf] Unable to cancel ${callId} because we have no information about it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeIncomingCall(callId);\n\n\t\tdebug && console.log(`[VideoConf] Call ${callId} from ${lostCall.uid} was lost.`);\n\t\tthis.emit('direct/lost', { callId, uid: lostCall.uid, rid: lostCall.rid });\n\t}\n\n\tprivate removeIncomingCall(callId: string): void {\n\t\tdebug && console.log(`[VideoConf] Removing call with id \"${callId}\" from Incoming Calls list.`);\n\t\tif (!this.incomingDirectCalls.has(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isRinging = this.isRinging();\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t}\n\n\t\tthis.incomingDirectCalls.delete(callId);\n\t\tthis.emit('incoming/changed');\n\n\t\tif (isRinging !== this.isRinging()) {\n\t\t\tthis.emit('ringing/changed');\n\t\t}\n\t}\n\n\tprivate createAbortTimeout(callId: string): ReturnType<typeof setTimeout> {\n\t\treturn setTimeout(() => this.abortIncomingCall(callId), CALL_TIMEOUT);\n\t}\n\n\tprivate startNewIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\tdebug && console.log(`[VideoConf] Ignoring dismissed call.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Reject any currently ringing call from the user before registering the new one.\n\t\tthis.rejectIncomingCallsFromUser(uid);\n\n\t\tdebug && console.log(`[VideoConf] Storing this new call information.`);\n\t\tthis.incomingDirectCalls.set(callId, {\n\t\t\tcallId,\n\t\t\tuid,\n\t\t\trid,\n\t\t\ttimeout: this.createAbortTimeout(callId),\n\t\t});\n\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t}\n\n\tprivate refreshExistingIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tconst existingData = this.incomingDirectCalls.get(callId);\n\t\tif (!existingData) {\n\t\t\tthrow new Error('Video Conference Manager State Error');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Resetting call timeout.`);\n\t\tif (existingData.timeout) {\n\t\t\tclearTimeout(existingData.timeout);\n\t\t}\n\t\texistingData.timeout = this.createAbortTimeout(callId);\n\n\t\tif (!this.isCallDismissed(callId)) {\n\t\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCall({ callId, uid, rid }: DirectCallParams): void {\n\t\t// If we already accepted this call, then don't ring again\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${uid} is ringing with call ${callId}.`);\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tthis.refreshExistingIncomingCall({ callId, uid, rid });\n\t\t} else {\n\t\t\tthis.startNewIncomingCall({ callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCallCanceled({ callId }: DirectCallParams): void {\n\t\tdebug && console.log(`[VideoConf] Call ${callId} was canceled by the remote user.`);\n\n\t\t// We had just accepted this call, but the remote user hang up before they got the notification, so cancel our acceptance\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.acceptTimeout) {\n\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'acceptTimeout', undefined);\n\t\t}\n\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate onDirectCallAccepted(params: DirectCallParams, skipConfirmation = false): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst callData = this.currentCallData;\n\n\t\tthis.emit('direct/accepted', params);\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('calling/changed');\n\n\t\tif (!callData.joined) {\n\t\t\tthis.joinCall(params.callId);\n\t\t}\n\n\t\tif (skipConfirmation) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that they can join the call now.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'confirmed', { callId: callData.callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tprivate onDirectCallConfirmed(params: DirectCallParams): void {\n\t\tif (!params.callId || !this.incomingDirectCalls.get(params.callId)?.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} confirmed we can join ${params.callId} but we aren't trying to join it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.joinCall(params.callId);\n\t}\n\n\tprivate onDirectCallJoined(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.join' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (params.uid === this.userId) {\n\t\t\tif (this.currentCallData?.callId === params.callId) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined our own call (${this.userId}) from somewhere else. Flagging the call appropriatelly.`);\n\t\t\t\tthis.currentCallData.joined = true;\n\t\t\t\tthis.emit('calling/changed');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.incomingDirectCalls.has(params.callId)) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined the call ${params.callId} from somewhere else. Dismissing it.`);\n\t\t\t\tthis.dismissIncomingCall(params.callId);\n\t\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has joined a call we started ${params.callId}.`);\n\t\tthis.onDirectCallAccepted(params, true);\n\t}\n\n\tprivate onDirectCallEnded(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.end' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst callData = this.incomingDirectCalls.get(params.callId);\n\t\tif (callData) {\n\t\t\tdebug && console.log(`[VideoConf] Incoming call ended by the server: ${params.callId}.`);\n\t\t\tif (callData.acceptTimeout) {\n\t\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\t\tthis.setIncomingCallAttribute(params.callId, 'acceptTimeout', undefined);\n\t\t\t}\n\n\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.currentCallData?.callId !== params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Server sent a call ended event for a call we're not aware of: ${params.callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Outgoing call ended by the server: ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tthis.currentCallData = undefined;\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('direct/stopped', params);\n\t\t}\n\t}\n\n\tprivate onDirectCallRejected(params: DirectCallParams): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst { joined } = this.currentCallData;\n\n\t\tthis.emit('direct/cancel', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.emit('calling/changed');\n\n\t\tif (!joined) {\n\t\t\tsdk.rest.post('/v1/video-conference.cancel', { callId: params.callId });\n\t\t}\n\t}\n\n\tprivate isCallDismissed(callId: string): boolean {\n\t\treturn this.dismissedCalls.has(callId);\n\t}\n})();\n\nMeteor.startup(() => Tracker.autorun(() => VideoConfManager.updateUser()));\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/VideoConfManager.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/VideoConfManager.ts","inputSourceMap":{"version":3,"file":"client/lib/VideoConfManager.ts","sourceRoot":"","sources":["client/lib/VideoConfManager.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC,OAAO,EAAE,GAAG,EAAE,MAAM,sCAAsC,CAAC;AAC3D,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AAE/B,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAErE,wDAAwD;AACxD,MAAM,aAAa,GAAG,IAAI,CAAC;AAC3B,6CAA6C;AAC7C,MAAM,kBAAkB,GAAG,EAAE,CAAC;AAC9B,2GAA2G;AAC3G,MAAM,YAAY,GAAG,KAAK,CAAC;AAC3B,yEAAyE;AACzE,MAAM,cAAc,GAAG,IAAI,CAAC;AA4E5B,MAAM,CAAC,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,gBAAiB,SAAQ,OAAwB;IACnF,MAAM,CAAqB;IAE3B,kBAAkB,CAA4C;IAE9D,eAAe,CAAwD;IAEvE,eAAe,GAAG,KAAK,CAAC;IAExB,KAAK,GAAmB,EAAE,CAAC;IAE3B,mBAAmB,CAAkC;IAErD,cAAc,CAAc;IAE5B,YAAY,CAAkB;IAE9B,aAAa,CAAuB;IAE5C,IAAW,WAAW;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC1B,CAAC;IAED,IAAW,YAAY;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC3B,CAAC;IAED;QACC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,mBAAmB,GAAG,IAAI,GAAG,EAA8B,CAAC;QACjE,IAAI,CAAC,cAAc,GAAG,IAAI,GAAG,EAAU,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;QAC9C,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAClD,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,MAAM;QACZ,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YAC1B,OAAO,IAAI,CAAC;QACb,CAAC;QAED,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;IACzB,CAAC;IAEM,SAAS;QACf,OAAO,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;IACnG,CAAC;IAEM,SAAS;QACf,IAAI,IAAI,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC;YACvF,OAAO,IAAI,CAAC;QACb,CAAC;QAED,OAAO,KAAK,CAAC;IACd,CAAC;IAEM,sBAAsB;QAC5B,OAAO,CACN,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC;YACrC,qGAAqG;aACpG,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC;aACrC,GAAG,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,aAAa,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAClH,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,MAAoB,EAAE,KAAc;QAC1D,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;YACnC,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC3C,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,yCAAyC,MAAM,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE7B,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAM,EAAE,EAAE;YAC1H,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,gDAAgD,MAAM,EAAE,CAAC,CAAC;YACjF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,KAAK,IAAI,eAAe,EAAE,CAAC,CAAC;YAEpF,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE7B,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC5B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC5B,CAAC;QAED,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,KAAK,QAAQ;gBACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YAChF,KAAK,iBAAiB;gBACrB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnC,KAAK,UAAU;gBACd,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpC,CAAC;IACF,CAAC;IAEM,kBAAkB,CAAC,MAAc;QACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACf,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;QAC9D,CAAC;QACD,IAAI,QAAQ,CAAC,aAAa,EAAE,CAAC;YAC5B,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,mDAAmD,MAAM,GAAG,CAAC,CAAC;YACnF,OAAO;QACR,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,uCAAuC,MAAM,GAAG,CAAC,CAAC;QAEvE,IAAI,QAAQ,CAAC,OAAO,EAAE,CAAC;YACtB,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC/B,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAC7D,CAAC;QAED,0EAA0E;QAC1E,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAEjC,IAAI,CAAC,wBAAwB,CAC5B,MAAM,EACN,eAAe,EACf,UAAU,CAAC,GAAG,EAAE;YACf,MAAM,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC7D,IAAI,CAAC,eAAe,EAAE,aAAa,EAAE,CAAC;gBACrC,OAAO;YACR,CAAC;YAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;YAC1E,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;YAEhC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;QAC9E,CAAC,EAAE,cAAc,CAAC,CAClB,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAE9B,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,8BAA8B,QAAQ,CAAC,GAAG,6BAA6B,CAAC,CAAC;QAC9F,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,UAAU,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;IAC3G,CAAC;IAEM,kBAAkB,CAAC,MAAc;QACvC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACf,OAAO;QACR,CAAC;QAED,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,UAAU,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;QAC1G,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAEM,sBAAsB;QAC5B,4CAA4C;QAC5C,IAAI,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;YACrG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC/B,CAAC;IACF,CAAC;IAEM,KAAK,CAAC,gBAAgB;QAC5B,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAM,EAAE,EAAE;YACjG,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;YAEnF,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,GAAG,YAAY,IAAI,EAAE,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;IACnC,CAAC;IAEO,wBAAwB,CAC/B,MAAc,EACd,aAAgB,EAChB,KAAwC;QAExC,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACf,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,wCAAwC,aAAa,sBAAsB,MAAM,IAAI,CAAC,CAAC;YAC9G,OAAO;QACR,CAAC;QAED,MAAM,OAAO,GAAuB;YACnC,GAAG,QAAQ;SACX,CAAC;QAEF,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;YACzB,OAAO,OAAO,CAAC,aAAa,CAAC,CAAC;QAC/B,CAAC;aAAM,CAAC;YACP,OAAO,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;QAChC,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,mCAAmC,aAAa,cAAc,MAAM,IAAI,CAAC,CAAC;QAC/F,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC/C,CAAC;IAEO,2BAA2B,CAAC,MAAc;QACjD,kGAAkG;QAClG,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC;YAClC,OAAO,KAAK,CAAC;QACd,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,+BAA+B,MAAM,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAChC,8HAA8H;QAC9H,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,YAAY,GAAG,EAAE,CAAC,CAAC;QACxE,6DAA6D;QAC7D,OAAO,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAEM,mBAAmB,CAAC,MAAc;QACxC,IAAI,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,EAAE,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC9B,OAAO,IAAI,CAAC;QACb,CAAC;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAEM,UAAU;QAChB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAE/B,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE,CAAC;YAC5B,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,2EAA2E,CAAC,CAAC;YAClG,OAAO;QACR,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;QAE7D,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YACjB,IAAI,CAAC,UAAU,EAAE,CAAC;QACnB,CAAC;QAED,IAAI,MAAM,EAAE,CAAC;YACZ,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC1B,CAAC;IACF,CAAC;IAEM,gBAAgB,CAAC,GAA0B,EAAE,KAAc;QACjE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;IACjD,CAAC;IAEM,cAAc,CAAC,KAA+B;QACpD,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;YACzB,IAAI,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC/B,MAAM,OAAO,GAAG,GAA4B,CAAC;gBAC7C,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAY,CAAC,CAAC;YAC3D,CAAC;QACF,CAAC;IACF,CAAC;IAEM,KAAK,CAAC,QAAQ,CAAC,MAAc;QACnC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,4BAA4B,MAAM,GAAG,CAAC,CAAC;QAE5D,IAAI,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;YAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAClD,IAAI,IAAI,EAAE,aAAa,EAAE,CAAC;gBACzB,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;gBAChE,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAClC,CAAC;YACD,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,MAAM,GAAG;YACd,MAAM;YACN,KAAK,EAAE;gBACN,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC9E,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;aAC9E;SACD,CAAC;QAEF,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YAClG,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,mCAAmC,MAAM,EAAE,CAAC,CAAC;YACpE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,KAAK,IAAI,eAAe,EAAE,CAAC,CAAC;YAEnF,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QACxD,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,GAAG,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC;IACvD,CAAC;IAEM,SAAS;QACf,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,OAAO;QACR,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACnC,CAAC;IAEO,2BAA2B,CAAC,MAAc;QACjD,KAAK,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC5D,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;gBACpB,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,qDAAqD,MAAM,EAAE,CAAC,CAAC;gBACpF,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;YACjC,CAAC;QACF,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAoB;QAC5D,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACrD,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;QAClD,CAAC;QAED,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,eAAe,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QAC5C,IAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC,GAAG,EAAE;YAC1C,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC9B,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC,wDAAwD,CAAC,CAAC;gBAChF,OAAO;YACR,CAAC;YAED,OAAO,EAAE,CAAC;YAEV,IAAI,OAAO,GAAG,kBAAkB,EAAE,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;gBAClC,OAAO;YACR,CAAC;YAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAG,oBAAoB,OAAO,GAAG,CAAC,CAAC;YACpF,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;QAChF,CAAC,EAAE,aAAa,CAAC,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE7B,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAG,sBAAsB,CAAC,CAAC;QAC5E,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;IAChF,CAAC;IAEO,KAAK,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAoB;QAC1D,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC;QAE5C,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,iCAAiC,GAAG,GAAG,CAAC,CAAC;QAC9D,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC7B,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACvC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;YACpC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC9B,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,iCAAiC,CAAC,CAAC;QACzF,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;QAEnF,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAAC;QAElD,IAAI,MAAM,EAAE,CAAC;YACZ,OAAO;QACR,CAAC;QAED,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1D,CAAC;IAEO,UAAU;QACjB,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,kCAAkC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QACtE,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAI,EAAE,CAAC;QACR,CAAC;QACD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC7B,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACvC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACrC,CAAC;QAED,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACzC,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;gBAClB,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,CAAC;YACD,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;gBACxB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAClC,CAAC;QACF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC9B,CAAC;IAEO,KAAK,CAAC,uBAAuB,CAAC,EAAE,MAAM,EAAE,MAAM,EAAgD;QACrG,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE,CAAC;YAC3C,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;YAC/D,OAAO;QACR,CAAC;QACD,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;YAC3F,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;YAC/D,OAAO;QACR,CAAC;QAED,QAAQ,MAAM,EAAE,CAAC;YAChB,KAAK,MAAM;gBACV,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAClC,KAAK,UAAU;gBACd,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;YAC1C,KAAK,UAAU;gBACd,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;YAC1C,KAAK,UAAU;gBACd,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;YAC1C,KAAK,WAAW;gBACf,OAAO,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;YAC3C,KAAK,MAAM;gBACV,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;YACxC,KAAK,KAAK;gBACT,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC;IACF,CAAC;IAEO,KAAK,CAAC,UAAU,CAAC,GAAiB,EAAE,MAAc,EAAE,MAAwB;QACnF,OAAO,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,GAAG,GAAG,mBAAmB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IACpF,CAAC;IAEO,KAAK,CAAC,WAAW,CAAC,MAAc;QACvC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,+BAA+B,MAAM,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,GAAG,MAAM,mBAAmB,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;QAEhI,MAAM,KAAK,EAAE,CAAC;QAEd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAEO,iBAAiB,CAAC,MAAc;QACvC,yDAAyD;QACzD,IAAI,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,aAAa,EAAE,CAAC;YACzD,OAAO;QACR,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,8BAA8B,MAAM,0BAA0B,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAEO,gBAAgB,CAAC,MAAc;QACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACf,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC,gCAAgC,MAAM,2CAA2C,CAAC,CAAC;YACzG,OAAO;QACR,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAEhC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB,MAAM,SAAS,QAAQ,CAAC,GAAG,YAAY,CAAC,CAAC;QAClF,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;IAC5E,CAAC;IAEO,kBAAkB,CAAC,MAAc;QACxC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,sCAAsC,MAAM,6BAA6B,CAAC,CAAC;QAChG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;YAC3C,OAAO;QACR,CAAC;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAEnC,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,QAAQ,EAAE,OAAO,EAAE,CAAC;YACvB,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAChC,CAAC;QAED,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAE9B,IAAI,SAAS,KAAK,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC9B,CAAC;IACF,CAAC;IAEO,kBAAkB,CAAC,MAAc;QACxC,OAAO,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC;IACvE,CAAC;IAEO,oBAAoB,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAoB;QAClE,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC;YAClC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;YAC7D,OAAO;QACR,CAAC;QAED,kFAAkF;QAClF,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,CAAC;QAEtC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;QACvE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE;YACpC,MAAM;YACN,GAAG;YACH,GAAG;YACH,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;SACxC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACnD,CAAC;IAEO,2BAA2B,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAoB;QACzE,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,YAAY,EAAE,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;QACzD,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;QAC5D,IAAI,YAAY,CAAC,OAAO,EAAE,CAAC;YAC1B,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC;QACD,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAEvD,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACnD,CAAC;IACF,CAAC;IAEO,YAAY,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAoB;QAC1D,0DAA0D;QAC1D,IAAI,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,aAAa,EAAE,CAAC;YACzD,OAAO;QACR,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,yBAAyB,MAAM,GAAG,CAAC,CAAC;QAChF,IAAI,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;YAC1C,IAAI,CAAC,2BAA2B,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACxD,CAAC;aAAM,CAAC;YACP,IAAI,CAAC,oBAAoB,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACjD,CAAC;IACF,CAAC;IAEO,oBAAoB,CAAC,EAAE,MAAM,EAAoB;QACxD,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB,MAAM,mCAAmC,CAAC,CAAC;QAEpF,yHAAyH;QACzH,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,QAAQ,EAAE,aAAa,EAAE,CAAC;YAC7B,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YACrC,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,eAAe,EAAE,SAAS,CAAC,CAAC;QACnE,CAAC;QAED,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAEO,oBAAoB,CAAC,MAAwB,EAAE,gBAAgB,GAAG,KAAK;QAC9E,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,eAAe,EAAE,MAAM,EAAE,CAAC;YACtE,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB,MAAM,CAAC,GAAG,wBAAwB,MAAM,CAAC,MAAM,kCAAkC,CAAC,CAAC;YAC5H,OAAO;QACR,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB,MAAM,CAAC,GAAG,0BAA0B,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAE/F,eAAe;QACf,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC7B,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACvC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACrC,CAAC;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;QAEtC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE7B,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC;QAED,IAAI,gBAAgB,EAAE,CAAC;YACtB,OAAO;QACR,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,8BAA8B,QAAQ,CAAC,GAAG,mCAAmC,CAAC,CAAC;QACpG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,EAAE,WAAW,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;IAC7H,CAAC;IAEO,qBAAqB,CAAC,MAAwB;QACrD,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,aAAa,EAAE,CAAC;YACnF,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB,MAAM,CAAC,GAAG,0BAA0B,MAAM,CAAC,MAAM,mCAAmC,CAAC,CAAC;YAC/H,OAAO;QACR,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAEO,kBAAkB,CAAC,MAAwB;QAClD,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YACpB,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,+DAA+D,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;YACrH,OAAO;QACR,CAAC;QAED,IAAI,MAAM,CAAC,GAAG,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;YAChC,IAAI,IAAI,CAAC,eAAe,EAAE,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE,CAAC;gBACpD,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,uCAAuC,IAAI,CAAC,MAAM,0DAA0D,CAAC,CAAC;gBACnI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAC7B,OAAO;YACR,CAAC;YAED,IAAI,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;gBACjD,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,kCAAkC,MAAM,CAAC,MAAM,sCAAsC,CAAC,CAAC;gBAC5G,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACxC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACtC,CAAC;YACD,OAAO;QACR,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB,MAAM,CAAC,GAAG,iCAAiC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACtG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;IAEO,iBAAiB,CAAC,MAAwB;QACjD,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YACpB,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,8DAA8D,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;YACpH,OAAO;QACR,CAAC;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7D,IAAI,QAAQ,EAAE,CAAC;YACd,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,kDAAkD,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YACzF,IAAI,QAAQ,CAAC,aAAa,EAAE,CAAC;gBAC5B,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gBACrC,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,MAAM,EAAE,eAAe,EAAE,SAAS,CAAC,CAAC;YAC1E,CAAC;YAED,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACrC,OAAO;QACR,CAAC;QAED,IAAI,IAAI,CAAC,eAAe,EAAE,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE,CAAC;YACpD,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,6EAA6E,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YACpH,OAAO;QACR,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,kDAAkD,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAEzF,eAAe;QACf,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACjC,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC7B,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACvC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;YACpC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QACrC,CAAC;IACF,CAAC;IAEO,oBAAoB,CAAC,MAAwB;QACpD,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,eAAe,EAAE,MAAM,EAAE,CAAC;YACtE,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB,MAAM,CAAC,GAAG,wBAAwB,MAAM,CAAC,MAAM,kCAAkC,CAAC,CAAC;YAC5H,OAAO;QACR,CAAC;QAED,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB,MAAM,CAAC,GAAG,0BAA0B,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAE/F,eAAe;QACf,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC7B,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACvC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;QACrC,CAAC;QAED,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC;QAExC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QACnC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE7B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;QACzE,CAAC;IACF,CAAC;IAEO,eAAe,CAAC,MAAc;QACrC,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;CACD,CAAC,EAAE,CAAC;AAEL,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { getConfig } from './utils/getConfig';\nimport { time } from 'console';\n\nconst debug = !!(getConfig('debug') || getConfig('debug-VideoConf'));\n\n// The interval between attempts to call the remote user\nconst CALL_INTERVAL = 3000;\n// How many attempts to call we're gonna make\nconst CALL_ATTEMPT_LIMIT = 10;\n// The amount of time we'll assume an incoming call is still valid without any updates from the remote user\nconst CALL_TIMEOUT = 10000;\n// How long are we gonna wait for a link after accepting an incoming call\nconst ACCEPT_TIMEOUT = 5000;\n\ntype DirectCallParams = {\n\tuid: IUser['_id'];\n\trid: IRoom['_id'];\n\tcallId: string;\n};\n\nexport type DirectCallData = DirectCallParams & {\n\tdismissed: boolean;\n};\n\ntype IncomingDirectCall = DirectCallParams & {\n\ttimeout: ReturnType<typeof setTimeout> | undefined;\n\tacceptTimeout?: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport type CallPreferences = {\n\tmic?: boolean;\n\tcam?: boolean;\n};\n\nexport type ProviderCapabilities = {\n\tmic?: boolean;\n\tcam?: boolean;\n\ttitle?: boolean;\n};\n\ntype CurrentCallParams = {\n\tcallId: string;\n\turl: string;\n\tproviderName?: string;\n};\n\ntype VideoConfEvents = {\n\t// We gave up on calling a remote user or they rejected our call\n\t'direct/cancel': DirectCallParams;\n\n\t// A remote user is calling us\n\t'direct/ringing': DirectCallParams;\n\n\t// An incoming call was lost, either by timeout or because the remote user canceled\n\t'direct/lost': DirectCallParams;\n\n\t// We tried to accept an incoming call but the process failed\n\t'direct/failed': DirectCallParams;\n\n\t// A remote user accepted our call\n\t'direct/accepted': DirectCallParams;\n\n\t// We stopped calling a remote user\n\t'direct/stopped': DirectCallParams;\n\n\t'preference/changed': { key: keyof CallPreferences; value: boolean };\n\n\t// The list of incoming calls has changed in some way\n\t'incoming/changed': void;\n\n\t// The list of ringing incoming calls may have changed\n\t'ringing/changed': void;\n\n\t// The value of `isCalling` may have changed\n\t'calling/changed': void;\n\n\t'calling/ended': void;\n\n\t// When join call\n\t'call/join': CurrentCallParams;\n\n\t'join/error': { error: string };\n\n\t'start/error': { error: string };\n\n\t'capabilities/changed': void;\n};\n\nexport const VideoConfManager = new (class VideoConfManager extends Emitter<VideoConfEvents> {\n\tprivate userId: string | undefined;\n\n\tprivate currentCallHandler: ReturnType<typeof setTimeout> | undefined;\n\n\tprivate currentCallData: (DirectCallParams & { joined?: boolean }) | undefined;\n\n\tprivate startingNewCall = false;\n\n\tprivate hooks: (() => void)[] = [];\n\n\tprivate incomingDirectCalls: Map<string, IncomingDirectCall>;\n\n\tprivate dismissedCalls: Set<string>;\n\n\tprivate _preferences: CallPreferences;\n\n\tprivate _capabilities: ProviderCapabilities;\n\n\tpublic get preferences(): CallPreferences {\n\t\treturn this._preferences;\n\t}\n\n\tpublic get capabilities(): ProviderCapabilities {\n\t\treturn this._capabilities;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.incomingDirectCalls = new Map<string, IncomingDirectCall>();\n\t\tthis.dismissedCalls = new Set<string>();\n\t\tthis._preferences = { mic: true, cam: false };\n\t\tthis._capabilities = {};\n\n\t\tthis.on('incoming/changed', () => {\n\t\t\ttime.directCalls = this.getIncomingDirectCalls();\n\t\t});\n\t}\n\n\tpublic isBusy(): boolean {\n\t\tif (this.startingNewCall) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isCalling();\n\t}\n\n\tpublic isRinging(): boolean {\n\t\treturn [...this.incomingDirectCalls.values()].some(({ callId }) => !this.isCallDismissed(callId));\n\t}\n\n\tpublic isCalling(): boolean {\n\t\tif (this.currentCallHandler || (this.currentCallData && !this.currentCallData.joined)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic getIncomingDirectCalls(): DirectCallData[] {\n\t\treturn (\n\t\t\t[...this.incomingDirectCalls.values()]\n\t\t\t\t// Filter out any calls that we're in the process of accepting, so they're already hidden from the UI\n\t\t\t\t.filter((call) => !call.acceptTimeout)\n\t\t\t\t.map(({ timeout: _, acceptTimeout: _t, ...call }) => ({ ...call, dismissed: this.isCallDismissed(call.callId) }))\n\t\t);\n\t}\n\n\tpublic async startCall(roomId: IRoom['_id'], title?: string): Promise<void> {\n\t\tif (!this.userId || this.isBusy()) {\n\t\t\tthrow new Error('Video manager is busy.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Starting new call on room ${roomId}`);\n\t\tthis.startingNewCall = true;\n\t\tthis.emit('calling/changed');\n\n\t\tconst { data } = await sdk.rest.post('/v1/video-conference.start', { roomId, title, allowRinging: true }).catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to start new call on room ${roomId}`);\n\t\t\tthis.startingNewCall = false;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('start/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis.startingNewCall = false;\n\t\tthis.emit('calling/changed');\n\n\t\tif (data.type !== 'direct') {\n\t\t\tthis.emit('calling/ended');\n\t\t}\n\n\t\tswitch (data.type) {\n\t\t\tcase 'direct':\n\t\t\t\treturn this.callUser({ uid: data.calleeId, rid: roomId, callId: data.callId });\n\t\t\tcase 'videoconference':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t\tcase 'livechat':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t}\n\t}\n\n\tpublic acceptIncomingCall(callId: string): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tthrow new Error('Unable to find accepted call information.');\n\t\t}\n\t\tif (callData.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] We're already trying to accept call ${callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Accepting incoming call ${callId}.`);\n\n\t\tif (callData.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'timeout', undefined);\n\t\t}\n\n\t\t// Mute this call Id so any lingering notifications don't trigger it again\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tthis.setIncomingCallAttribute(\n\t\t\tcallId,\n\t\t\t'acceptTimeout',\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst updatedCallData = this.incomingDirectCalls.get(callId);\n\t\t\t\tif (!updatedCallData?.acceptTimeout) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdebug && console.log(`[VideoConf] Attempt to accept call has timed out.`);\n\t\t\t\tthis.removeIncomingCall(callId);\n\n\t\t\t\tthis.emit('direct/failed', { callId, uid: callData.uid, rid: callData.rid });\n\t\t\t}, ACCEPT_TIMEOUT),\n\t\t);\n\t\tthis.emit('incoming/changed');\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that we accept their call.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'accepted', { callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tpublic rejectIncomingCall(callId: string): void {\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.userId && this.notifyUser(callData.uid, 'rejected', { callId, uid: this.userId, rid: callData.rid });\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tpublic dismissedIncomingCalls(): void {\n\t\t// Mute all calls that are currently ringing\n\t\tif ([...this.incomingDirectCalls.keys()].some((callId) => this.dismissedIncomingCallHelper(callId))) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t}\n\t}\n\n\tpublic async loadCapabilities(): Promise<void> {\n\t\tconst { capabilities } = await sdk.rest.get('/v1/video-conference.capabilities').catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to load video conference capabilities`);\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis._capabilities = capabilities || {};\n\t\tthis.emit('capabilities/changed');\n\t}\n\n\tprivate setIncomingCallAttribute<T extends keyof IncomingDirectCall>(\n\t\tcallId: string,\n\t\tattributeName: T,\n\t\tvalue: IncomingDirectCall[T] | undefined,\n\t): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tdebug && console.error(`[VideoConf] Cannot change attribute \"${attributeName}\" of unknown call \"${callId}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newData: IncomingDirectCall = {\n\t\t\t...callData,\n\t\t};\n\n\t\tif (value === undefined) {\n\t\t\tdelete newData[attributeName];\n\t\t} else {\n\t\t\tnewData[attributeName] = value;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Updating attribute \"${attributeName}\" of call \"${callId}\".`);\n\t\tthis.incomingDirectCalls.set(callId, newData);\n\t}\n\n\tprivate dismissedIncomingCallHelper(callId: string): boolean {\n\t\t// Muting will stop a callId from ringing, but it doesn't affect any part of the existing workflow\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Dismissing call ${callId}`);\n\t\tthis.dismissedCalls.add(callId);\n\t\t// We don't need to hold on to the dismissed callIds forever because the server won't let anyone call us with it for very long\n\t\tsetTimeout(() => this.dismissedCalls.delete(callId), CALL_TIMEOUT * 20);\n\t\t// Only change the state if this call is actually in our list\n\t\treturn this.incomingDirectCalls.has(callId);\n\t}\n\n\tpublic dismissIncomingCall(callId: string): boolean {\n\t\tif (this.dismissedIncomingCallHelper(callId)) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic updateUser(): void {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (this.userId === userId) {\n\t\t\tdebug && console.log(`[VideoConf] Logged user has not changed, so we're not changing the hooks.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Logged user has changed.`);\n\n\t\tif (this.userId) {\n\t\t\tthis.disconnect();\n\t\t}\n\n\t\tif (userId) {\n\t\t\tthis.connectUser(userId);\n\t\t}\n\t}\n\n\tpublic changePreference(key: keyof CallPreferences, value: boolean): void {\n\t\tthis._preferences[key] = value;\n\t\tthis.emit('preference/changed', { key, value });\n\t}\n\n\tpublic setPreferences(prefs: Partial<CallPreferences>): void {\n\t\tfor (const key in prefs) {\n\t\t\tif (prefs.hasOwnProperty(key)) {\n\t\t\t\tconst prefKey = key as keyof CallPreferences;\n\t\t\t\tthis.changePreference(prefKey, prefs[prefKey] as boolean);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async joinCall(callId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] Joining call ${callId}.`);\n\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tconst data = this.incomingDirectCalls.get(callId);\n\t\t\tif (data?.acceptTimeout) {\n\t\t\t\tdebug && console.log('[VideoConf] Clearing acceptance timeout');\n\t\t\t\tclearTimeout(data.acceptTimeout);\n\t\t\t}\n\t\t\tthis.removeIncomingCall(callId);\n\t\t}\n\n\t\tconst params = {\n\t\t\tcallId,\n\t\t\tstate: {\n\t\t\t\t...(this._preferences.mic !== undefined ? { mic: this._preferences.mic } : {}),\n\t\t\t\t...(this._preferences.cam !== undefined ? { cam: this._preferences.cam } : {}),\n\t\t\t},\n\t\t};\n\n\t\tconst { url, providerName } = await sdk.rest.post('/v1/video-conference.join', params).catch((e) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to join call ${callId}`);\n\t\t\tthis.emit('join/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tif (!url) {\n\t\t\tthrow new Error('Failed to get video conference URL.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Opening ${url}.`);\n\t\tthis.emit('call/join', { url, callId, providerName });\n\t}\n\n\tpublic abortCall(): void {\n\t\tif (!this.currentCallData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.giveUp(this.currentCallData);\n\t}\n\n\tprivate rejectIncomingCallsFromUser(userId: string): void {\n\t\tfor (const [, { callId, uid }] of this.incomingDirectCalls) {\n\t\t\tif (userId === uid) {\n\t\t\t\tdebug && console.log(`[VideoConf] Rejecting old incoming call from user ${userId}`);\n\t\t\t\tthis.rejectIncomingCall(callId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async callUser({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tif (this.currentCallHandler || this.currentCallData) {\n\t\t\tthrow new Error('Video Conference State Error.');\n\t\t}\n\n\t\tlet attempt = 1;\n\t\tthis.currentCallData = { callId, rid, uid };\n\t\tthis.currentCallHandler = setInterval(() => {\n\t\t\tif (!this.currentCallHandler) {\n\t\t\t\tdebug && console.warn(`[VideoConf] Ringing interval was not properly cleared.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattempt++;\n\n\t\t\tif (attempt > CALL_ATTEMPT_LIMIT) {\n\t\t\t\tthis.giveUp({ uid, rid, callId });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdebug && console.log(`[VideoConf] Ringing user ${uid}, attempt number ${attempt}.`);\n\t\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t\t}, CALL_INTERVAL);\n\t\tthis.emit('calling/changed');\n\n\t\tdebug && console.log(`[VideoConf] Ringing user ${uid} for the first time.`);\n\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t}\n\n\tprivate async giveUp({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tconst joined = this.currentCallData?.joined;\n\n\t\tdebug && console.log(`[VideoConf] Stop ringing user ${uid}.`);\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.currentCallData = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${uid} that we are no longer calling.`);\n\t\tthis.userId && this.notifyUser(uid, 'canceled', { uid: this.userId, rid, callId });\n\n\t\tthis.emit('direct/cancel', { uid, rid, callId });\n\t\tthis.emit('direct/stopped', { uid, rid, callId });\n\n\t\tif (joined) {\n\t\t\treturn;\n\t\t}\n\n\t\tsdk.rest.post('/v1/video-conference.cancel', { callId });\n\t}\n\n\tprivate disconnect(): void {\n\t\tdebug && console.log(`[VideoConf] disconnecting user ${this.userId}`);\n\t\tfor (const hook of this.hooks) {\n\t\t\thook();\n\t\t}\n\t\tthis.hooks = [];\n\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tthis.incomingDirectCalls.forEach((call) => {\n\t\t\tif (call.timeout) {\n\t\t\t\tclearTimeout(call.timeout);\n\t\t\t}\n\t\t\tif (call.acceptTimeout) {\n\t\t\t\tclearTimeout(call.acceptTimeout);\n\t\t\t}\n\t\t});\n\t\tthis.incomingDirectCalls.clear();\n\t\tthis.dismissedCalls.clear();\n\t\tthis.currentCallData = undefined;\n\t\tthis._preferences = {};\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('calling/changed');\n\t}\n\n\tprivate async onVideoConfNotification({ action, params }: { action: string; params: DirectCallParams }): Promise<void> {\n\t\tif (!action || typeof action !== 'string') {\n\t\t\tdebug && console.error('[VideoConf] Invalid action received.');\n\t\t\treturn;\n\t\t}\n\t\tif (!params || typeof params !== 'object' || !params.callId || !params.uid || !params.rid) {\n\t\t\tdebug && console.error('[VideoConf] Invalid params received.');\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (action) {\n\t\t\tcase 'call':\n\t\t\t\treturn this.onDirectCall(params);\n\t\t\tcase 'canceled':\n\t\t\t\treturn this.onDirectCallCanceled(params);\n\t\t\tcase 'accepted':\n\t\t\t\treturn this.onDirectCallAccepted(params);\n\t\t\tcase 'rejected':\n\t\t\t\treturn this.onDirectCallRejected(params);\n\t\t\tcase 'confirmed':\n\t\t\t\treturn this.onDirectCallConfirmed(params);\n\t\t\tcase 'join':\n\t\t\t\treturn this.onDirectCallJoined(params);\n\t\t\tcase 'end':\n\t\t\t\treturn this.onDirectCallEnded(params);\n\t\t}\n\t}\n\n\tprivate async notifyUser(uid: IUser['_id'], action: string, params: DirectCallParams): Promise<void> {\n\t\treturn sdk.publish('notify-user', [`${uid}/video-conference`, { action, params }]);\n\t}\n\n\tprivate async connectUser(userId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] connecting user ${userId}`);\n\t\tthis.userId = userId;\n\n\t\tconst { stop, ready } = sdk.stream('notify-user', [`${userId}/video-conference`], (data) => this.onVideoConfNotification(data));\n\n\t\tawait ready();\n\n\t\tthis.hooks.push(stop);\n\t}\n\n\tprivate abortIncomingCall(callId: string): void {\n\t\t// If we just accepted this call, then ignore the timeout\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Canceling call ${callId} due to ringing timeout.`);\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate loseIncomingCall(callId: string): void {\n\t\tconst lostCall = this.incomingDirectCalls.get(callId);\n\t\tif (!lostCall) {\n\t\t\tdebug && console.warn(`[VideoConf] Unable to cancel ${callId} because we have no information about it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeIncomingCall(callId);\n\n\t\tdebug && console.log(`[VideoConf] Call ${callId} from ${lostCall.uid} was lost.`);\n\t\tthis.emit('direct/lost', { callId, uid: lostCall.uid, rid: lostCall.rid });\n\t}\n\n\tprivate removeIncomingCall(callId: string): void {\n\t\tdebug && console.log(`[VideoConf] Removing call with id \"${callId}\" from Incoming Calls list.`);\n\t\tif (!this.incomingDirectCalls.has(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isRinging = this.isRinging();\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t}\n\n\t\tthis.incomingDirectCalls.delete(callId);\n\t\tthis.emit('incoming/changed');\n\n\t\tif (isRinging !== this.isRinging()) {\n\t\t\tthis.emit('ringing/changed');\n\t\t}\n\t}\n\n\tprivate createAbortTimeout(callId: string): ReturnType<typeof setTimeout> {\n\t\treturn setTimeout(() => this.abortIncomingCall(callId), CALL_TIMEOUT);\n\t}\n\n\tprivate startNewIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\tdebug && console.log(`[VideoConf] Ignoring dismissed call.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Reject any currently ringing call from the user before registering the new one.\n\t\tthis.rejectIncomingCallsFromUser(uid);\n\n\t\tdebug && console.log(`[VideoConf] Storing this new call information.`);\n\t\tthis.incomingDirectCalls.set(callId, {\n\t\t\tcallId,\n\t\t\tuid,\n\t\t\trid,\n\t\t\ttimeout: this.createAbortTimeout(callId),\n\t\t});\n\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t}\n\n\tprivate refreshExistingIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tconst existingData = this.incomingDirectCalls.get(callId);\n\t\tif (!existingData) {\n\t\t\tthrow new Error('Video Conference Manager State Error');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Resetting call timeout.`);\n\t\tif (existingData.timeout) {\n\t\t\tclearTimeout(existingData.timeout);\n\t\t}\n\t\texistingData.timeout = this.createAbortTimeout(callId);\n\n\t\tif (!this.isCallDismissed(callId)) {\n\t\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCall({ callId, uid, rid }: DirectCallParams): void {\n\t\t// If we already accepted this call, then don't ring again\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${uid} is ringing with call ${callId}.`);\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tthis.refreshExistingIncomingCall({ callId, uid, rid });\n\t\t} else {\n\t\t\tthis.startNewIncomingCall({ callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCallCanceled({ callId }: DirectCallParams): void {\n\t\tdebug && console.log(`[VideoConf] Call ${callId} was canceled by the remote user.`);\n\n\t\t// We had just accepted this call, but the remote user hang up before they got the notification, so cancel our acceptance\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.acceptTimeout) {\n\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'acceptTimeout', undefined);\n\t\t}\n\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate onDirectCallAccepted(params: DirectCallParams, skipConfirmation = false): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst callData = this.currentCallData;\n\n\t\tthis.emit('direct/accepted', params);\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('calling/changed');\n\n\t\tif (!callData.joined) {\n\t\t\tthis.joinCall(params.callId);\n\t\t}\n\n\t\tif (skipConfirmation) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that they can join the call now.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'confirmed', { callId: callData.callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tprivate onDirectCallConfirmed(params: DirectCallParams): void {\n\t\tif (!params.callId || !this.incomingDirectCalls.get(params.callId)?.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} confirmed we can join ${params.callId} but we aren't trying to join it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.joinCall(params.callId);\n\t}\n\n\tprivate onDirectCallJoined(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.join' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (params.uid === this.userId) {\n\t\t\tif (this.currentCallData?.callId === params.callId) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined our own call (${this.userId}) from somewhere else. Flagging the call appropriatelly.`);\n\t\t\t\tthis.currentCallData.joined = true;\n\t\t\t\tthis.emit('calling/changed');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.incomingDirectCalls.has(params.callId)) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined the call ${params.callId} from somewhere else. Dismissing it.`);\n\t\t\t\tthis.dismissIncomingCall(params.callId);\n\t\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has joined a call we started ${params.callId}.`);\n\t\tthis.onDirectCallAccepted(params, true);\n\t}\n\n\tprivate onDirectCallEnded(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.end' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst callData = this.incomingDirectCalls.get(params.callId);\n\t\tif (callData) {\n\t\t\tdebug && console.log(`[VideoConf] Incoming call ended by the server: ${params.callId}.`);\n\t\t\tif (callData.acceptTimeout) {\n\t\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\t\tthis.setIncomingCallAttribute(params.callId, 'acceptTimeout', undefined);\n\t\t\t}\n\n\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.currentCallData?.callId !== params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Server sent a call ended event for a call we're not aware of: ${params.callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Outgoing call ended by the server: ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tthis.currentCallData = undefined;\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('direct/stopped', params);\n\t\t}\n\t}\n\n\tprivate onDirectCallRejected(params: DirectCallParams): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst { joined } = this.currentCallData;\n\n\t\tthis.emit('direct/cancel', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.emit('calling/changed');\n\n\t\tif (!joined) {\n\t\t\tsdk.rest.post('/v1/video-conference.cancel', { callId: params.callId });\n\t\t}\n\t}\n\n\tprivate isCallDismissed(callId: string): boolean {\n\t\treturn this.dismissedCalls.has(callId);\n\t}\n})();\n\nMeteor.startup(() => Tracker.autorun(() => VideoConfManager.updateUser()));\n"]}}},"code":"const _excluded = [\"timeout\", \"acceptTimeout\"];\nlet _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nlet _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n}, 1);\nmodule.export({\n  VideoConfManager: () => VideoConfManager\n});\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 1);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n}, 2);\nlet sdk;\nmodule.link(\"../../app/utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 3);\nlet getConfig;\nmodule.link(\"./utils/getConfig\", {\n  getConfig(v) {\n    getConfig = v;\n  }\n}, 4);\nlet time;\nmodule.link(\"console\", {\n  time(v) {\n    time = v;\n  }\n}, 5);\nconst debug = !!(getConfig('debug') || getConfig('debug-VideoConf'));\n// The interval between attempts to call the remote user\nconst CALL_INTERVAL = 3000;\n// How many attempts to call we're gonna make\nconst CALL_ATTEMPT_LIMIT = 10;\n// The amount of time we'll assume an incoming call is still valid without any updates from the remote user\nconst CALL_TIMEOUT = 10000;\n// How long are we gonna wait for a link after accepting an incoming call\nconst ACCEPT_TIMEOUT = 5000;\nconst VideoConfManager = new class VideoConfManager extends Emitter {\n  get preferences() {\n    return this._preferences;\n  }\n  get capabilities() {\n    return this._capabilities;\n  }\n  constructor() {\n    super();\n    this.userId = void 0;\n    this.currentCallHandler = void 0;\n    this.currentCallData = void 0;\n    this.startingNewCall = false;\n    this.hooks = [];\n    this.incomingDirectCalls = void 0;\n    this.dismissedCalls = void 0;\n    this._preferences = void 0;\n    this._capabilities = void 0;\n    this.incomingDirectCalls = new Map();\n    this.dismissedCalls = new Set();\n    this._preferences = {\n      mic: true,\n      cam: false\n    };\n    this._capabilities = {};\n    this.on('incoming/changed', () => {\n      time.directCalls = this.getIncomingDirectCalls();\n    });\n  }\n  isBusy() {\n    if (this.startingNewCall) {\n      return true;\n    }\n    return this.isCalling();\n  }\n  isRinging() {\n    return [...this.incomingDirectCalls.values()].some(_ref => {\n      let {\n        callId\n      } = _ref;\n      return !this.isCallDismissed(callId);\n    });\n  }\n  isCalling() {\n    if (this.currentCallHandler || this.currentCallData && !this.currentCallData.joined) {\n      return true;\n    }\n    return false;\n  }\n  getIncomingDirectCalls() {\n    return [...this.incomingDirectCalls.values()]\n    // Filter out any calls that we're in the process of accepting, so they're already hidden from the UI\n    .filter(call => !call.acceptTimeout).map(_ref2 => {\n      let {\n          timeout: _,\n          acceptTimeout: _t\n        } = _ref2,\n        call = _objectWithoutProperties(_ref2, _excluded);\n      return _objectSpread(_objectSpread({}, call), {}, {\n        dismissed: this.isCallDismissed(call.callId)\n      });\n    });\n  }\n  async startCall(roomId, title) {\n    if (!this.userId || this.isBusy()) {\n      throw new Error('Video manager is busy.');\n    }\n    debug && console.log(\"[VideoConf] Starting new call on room \".concat(roomId));\n    this.startingNewCall = true;\n    this.emit('calling/changed');\n    const {\n      data\n    } = await sdk.rest.post('/v1/video-conference.start', {\n      roomId,\n      title,\n      allowRinging: true\n    }).catch(e => {\n      var _e$xhr, _e$xhr$responseJSON;\n      debug && console.error(\"[VideoConf] Failed to start new call on room \".concat(roomId));\n      this.startingNewCall = false;\n      this.emit('calling/changed');\n      this.emit('start/error', {\n        error: (e === null || e === void 0 ? void 0 : (_e$xhr = e.xhr) === null || _e$xhr === void 0 ? void 0 : (_e$xhr$responseJSON = _e$xhr.responseJSON) === null || _e$xhr$responseJSON === void 0 ? void 0 : _e$xhr$responseJSON.error) || 'unknown-error'\n      });\n      return Promise.reject(e);\n    });\n    this.startingNewCall = false;\n    this.emit('calling/changed');\n    if (data.type !== 'direct') {\n      this.emit('calling/ended');\n    }\n    switch (data.type) {\n      case 'direct':\n        return this.callUser({\n          uid: data.calleeId,\n          rid: roomId,\n          callId: data.callId\n        });\n      case 'videoconference':\n        return this.joinCall(data.callId);\n      case 'livechat':\n        return this.joinCall(data.callId);\n    }\n  }\n  acceptIncomingCall(callId) {\n    const callData = this.incomingDirectCalls.get(callId);\n    if (!callData) {\n      throw new Error('Unable to find accepted call information.');\n    }\n    if (callData.acceptTimeout) {\n      debug && console.log(\"[VideoConf] We're already trying to accept call \".concat(callId, \".\"));\n      return;\n    }\n    debug && console.log(\"[VideoConf] Accepting incoming call \".concat(callId, \".\"));\n    if (callData.timeout) {\n      clearTimeout(callData.timeout);\n      this.setIncomingCallAttribute(callId, 'timeout', undefined);\n    }\n    // Mute this call Id so any lingering notifications don't trigger it again\n    this.dismissIncomingCall(callId);\n    this.setIncomingCallAttribute(callId, 'acceptTimeout', setTimeout(() => {\n      const updatedCallData = this.incomingDirectCalls.get(callId);\n      if (!(updatedCallData !== null && updatedCallData !== void 0 && updatedCallData.acceptTimeout)) {\n        return;\n      }\n      debug && console.log(\"[VideoConf] Attempt to accept call has timed out.\");\n      this.removeIncomingCall(callId);\n      this.emit('direct/failed', {\n        callId,\n        uid: callData.uid,\n        rid: callData.rid\n      });\n    }, ACCEPT_TIMEOUT));\n    this.emit('incoming/changed');\n    debug && console.log(\"[VideoConf] Notifying user \".concat(callData.uid, \" that we accept their call.\"));\n    this.userId && this.notifyUser(callData.uid, 'accepted', {\n      callId,\n      uid: this.userId,\n      rid: callData.rid\n    });\n  }\n  rejectIncomingCall(callId) {\n    this.dismissIncomingCall(callId);\n    const callData = this.incomingDirectCalls.get(callId);\n    if (!callData) {\n      return;\n    }\n    this.userId && this.notifyUser(callData.uid, 'rejected', {\n      callId,\n      uid: this.userId,\n      rid: callData.rid\n    });\n    this.loseIncomingCall(callId);\n  }\n  dismissedIncomingCalls() {\n    // Mute all calls that are currently ringing\n    if ([...this.incomingDirectCalls.keys()].some(callId => this.dismissedIncomingCallHelper(callId))) {\n      this.emit('ringing/changed');\n      this.emit('incoming/changed');\n    }\n  }\n  async loadCapabilities() {\n    const {\n      capabilities\n    } = await sdk.rest.get('/v1/video-conference.capabilities').catch(e => {\n      debug && console.error(\"[VideoConf] Failed to load video conference capabilities\");\n      return Promise.reject(e);\n    });\n    this._capabilities = capabilities || {};\n    this.emit('capabilities/changed');\n  }\n  setIncomingCallAttribute(callId, attributeName, value) {\n    const callData = this.incomingDirectCalls.get(callId);\n    if (!callData) {\n      debug && console.error(\"[VideoConf] Cannot change attribute \\\"\".concat(attributeName, \"\\\" of unknown call \\\"\").concat(callId, \"\\\".\"));\n      return;\n    }\n    const newData = _objectSpread({}, callData);\n    if (value === undefined) {\n      delete newData[attributeName];\n    } else {\n      newData[attributeName] = value;\n    }\n    debug && console.log(\"[VideoConf] Updating attribute \\\"\".concat(attributeName, \"\\\" of call \\\"\").concat(callId, \"\\\".\"));\n    this.incomingDirectCalls.set(callId, newData);\n  }\n  dismissedIncomingCallHelper(callId) {\n    // Muting will stop a callId from ringing, but it doesn't affect any part of the existing workflow\n    if (this.isCallDismissed(callId)) {\n      return false;\n    }\n    debug && console.log(\"[VideoConf] Dismissing call \".concat(callId));\n    this.dismissedCalls.add(callId);\n    // We don't need to hold on to the dismissed callIds forever because the server won't let anyone call us with it for very long\n    setTimeout(() => this.dismissedCalls.delete(callId), CALL_TIMEOUT * 20);\n    // Only change the state if this call is actually in our list\n    return this.incomingDirectCalls.has(callId);\n  }\n  dismissIncomingCall(callId) {\n    if (this.dismissedIncomingCallHelper(callId)) {\n      this.emit('ringing/changed');\n      this.emit('incoming/changed');\n      return true;\n    }\n    return false;\n  }\n  updateUser() {\n    const userId = Meteor.userId();\n    if (this.userId === userId) {\n      debug && console.log(\"[VideoConf] Logged user has not changed, so we're not changing the hooks.\");\n      return;\n    }\n    debug && console.log(\"[VideoConf] Logged user has changed.\");\n    if (this.userId) {\n      this.disconnect();\n    }\n    if (userId) {\n      this.connectUser(userId);\n    }\n  }\n  changePreference(key, value) {\n    this._preferences[key] = value;\n    this.emit('preference/changed', {\n      key,\n      value\n    });\n  }\n  setPreferences(prefs) {\n    for (const key in prefs) {\n      if (prefs.hasOwnProperty(key)) {\n        const prefKey = key;\n        this.changePreference(prefKey, prefs[prefKey]);\n      }\n    }\n  }\n  async joinCall(callId) {\n    debug && console.log(\"[VideoConf] Joining call \".concat(callId, \".\"));\n    if (this.incomingDirectCalls.has(callId)) {\n      const data = this.incomingDirectCalls.get(callId);\n      if (data !== null && data !== void 0 && data.acceptTimeout) {\n        debug && console.log('[VideoConf] Clearing acceptance timeout');\n        clearTimeout(data.acceptTimeout);\n      }\n      this.removeIncomingCall(callId);\n    }\n    const params = {\n      callId,\n      state: _objectSpread(_objectSpread({}, this._preferences.mic !== undefined ? {\n        mic: this._preferences.mic\n      } : {}), this._preferences.cam !== undefined ? {\n        cam: this._preferences.cam\n      } : {})\n    };\n    const {\n      url,\n      providerName\n    } = await sdk.rest.post('/v1/video-conference.join', params).catch(e => {\n      var _e$xhr2, _e$xhr2$responseJSON;\n      debug && console.error(\"[VideoConf] Failed to join call \".concat(callId));\n      this.emit('join/error', {\n        error: (e === null || e === void 0 ? void 0 : (_e$xhr2 = e.xhr) === null || _e$xhr2 === void 0 ? void 0 : (_e$xhr2$responseJSON = _e$xhr2.responseJSON) === null || _e$xhr2$responseJSON === void 0 ? void 0 : _e$xhr2$responseJSON.error) || 'unknown-error'\n      });\n      return Promise.reject(e);\n    });\n    if (!url) {\n      throw new Error('Failed to get video conference URL.');\n    }\n    debug && console.log(\"[VideoConf] Opening \".concat(url, \".\"));\n    this.emit('call/join', {\n      url,\n      callId,\n      providerName\n    });\n  }\n  abortCall() {\n    if (!this.currentCallData) {\n      return;\n    }\n    this.giveUp(this.currentCallData);\n  }\n  rejectIncomingCallsFromUser(userId) {\n    for (const [, {\n      callId,\n      uid\n    }] of this.incomingDirectCalls) {\n      if (userId === uid) {\n        debug && console.log(\"[VideoConf] Rejecting old incoming call from user \".concat(userId));\n        this.rejectIncomingCall(callId);\n      }\n    }\n  }\n  async callUser(_ref3) {\n    let {\n      uid,\n      rid,\n      callId\n    } = _ref3;\n    if (this.currentCallHandler || this.currentCallData) {\n      throw new Error('Video Conference State Error.');\n    }\n    let attempt = 1;\n    this.currentCallData = {\n      callId,\n      rid,\n      uid\n    };\n    this.currentCallHandler = setInterval(() => {\n      if (!this.currentCallHandler) {\n        debug && console.warn(\"[VideoConf] Ringing interval was not properly cleared.\");\n        return;\n      }\n      attempt++;\n      if (attempt > CALL_ATTEMPT_LIMIT) {\n        this.giveUp({\n          uid,\n          rid,\n          callId\n        });\n        return;\n      }\n      debug && console.log(\"[VideoConf] Ringing user \".concat(uid, \", attempt number \").concat(attempt, \".\"));\n      this.userId && this.notifyUser(uid, 'call', {\n        uid: this.userId,\n        rid,\n        callId\n      });\n    }, CALL_INTERVAL);\n    this.emit('calling/changed');\n    debug && console.log(\"[VideoConf] Ringing user \".concat(uid, \" for the first time.\"));\n    this.userId && this.notifyUser(uid, 'call', {\n      uid: this.userId,\n      rid,\n      callId\n    });\n  }\n  async giveUp(_ref4) {\n    var _this$currentCallData;\n    let {\n      uid,\n      rid,\n      callId\n    } = _ref4;\n    const joined = (_this$currentCallData = this.currentCallData) === null || _this$currentCallData === void 0 ? void 0 : _this$currentCallData.joined;\n    debug && console.log(\"[VideoConf] Stop ringing user \".concat(uid, \".\"));\n    if (this.currentCallHandler) {\n      clearInterval(this.currentCallHandler);\n      this.currentCallHandler = undefined;\n      this.currentCallData = undefined;\n      this.emit('calling/changed');\n    }\n    debug && console.log(\"[VideoConf] Notifying user \".concat(uid, \" that we are no longer calling.\"));\n    this.userId && this.notifyUser(uid, 'canceled', {\n      uid: this.userId,\n      rid,\n      callId\n    });\n    this.emit('direct/cancel', {\n      uid,\n      rid,\n      callId\n    });\n    this.emit('direct/stopped', {\n      uid,\n      rid,\n      callId\n    });\n    if (joined) {\n      return;\n    }\n    sdk.rest.post('/v1/video-conference.cancel', {\n      callId\n    });\n  }\n  disconnect() {\n    debug && console.log(\"[VideoConf] disconnecting user \".concat(this.userId));\n    for (const hook of this.hooks) {\n      hook();\n    }\n    this.hooks = [];\n    if (this.currentCallHandler) {\n      clearInterval(this.currentCallHandler);\n      this.currentCallHandler = undefined;\n    }\n    this.incomingDirectCalls.forEach(call => {\n      if (call.timeout) {\n        clearTimeout(call.timeout);\n      }\n      if (call.acceptTimeout) {\n        clearTimeout(call.acceptTimeout);\n      }\n    });\n    this.incomingDirectCalls.clear();\n    this.dismissedCalls.clear();\n    this.currentCallData = undefined;\n    this._preferences = {};\n    this.emit('incoming/changed');\n    this.emit('ringing/changed');\n    this.emit('calling/changed');\n  }\n  async onVideoConfNotification(_ref5) {\n    let {\n      action,\n      params\n    } = _ref5;\n    if (!action || typeof action !== 'string') {\n      debug && console.error('[VideoConf] Invalid action received.');\n      return;\n    }\n    if (!params || typeof params !== 'object' || !params.callId || !params.uid || !params.rid) {\n      debug && console.error('[VideoConf] Invalid params received.');\n      return;\n    }\n    switch (action) {\n      case 'call':\n        return this.onDirectCall(params);\n      case 'canceled':\n        return this.onDirectCallCanceled(params);\n      case 'accepted':\n        return this.onDirectCallAccepted(params);\n      case 'rejected':\n        return this.onDirectCallRejected(params);\n      case 'confirmed':\n        return this.onDirectCallConfirmed(params);\n      case 'join':\n        return this.onDirectCallJoined(params);\n      case 'end':\n        return this.onDirectCallEnded(params);\n    }\n  }\n  async notifyUser(uid, action, params) {\n    return sdk.publish('notify-user', [\"\".concat(uid, \"/video-conference\"), {\n      action,\n      params\n    }]);\n  }\n  async connectUser(userId) {\n    debug && console.log(\"[VideoConf] connecting user \".concat(userId));\n    this.userId = userId;\n    const {\n      stop,\n      ready\n    } = sdk.stream('notify-user', [\"\".concat(userId, \"/video-conference\")], data => this.onVideoConfNotification(data));\n    await ready();\n    this.hooks.push(stop);\n  }\n  abortIncomingCall(callId) {\n    var _this$incomingDirectC;\n    // If we just accepted this call, then ignore the timeout\n    if ((_this$incomingDirectC = this.incomingDirectCalls.get(callId)) !== null && _this$incomingDirectC !== void 0 && _this$incomingDirectC.acceptTimeout) {\n      return;\n    }\n    debug && console.log(\"[VideoConf] Canceling call \".concat(callId, \" due to ringing timeout.\"));\n    this.loseIncomingCall(callId);\n  }\n  loseIncomingCall(callId) {\n    const lostCall = this.incomingDirectCalls.get(callId);\n    if (!lostCall) {\n      debug && console.warn(\"[VideoConf] Unable to cancel \".concat(callId, \" because we have no information about it.\"));\n      return;\n    }\n    this.removeIncomingCall(callId);\n    debug && console.log(\"[VideoConf] Call \".concat(callId, \" from \").concat(lostCall.uid, \" was lost.\"));\n    this.emit('direct/lost', {\n      callId,\n      uid: lostCall.uid,\n      rid: lostCall.rid\n    });\n  }\n  removeIncomingCall(callId) {\n    debug && console.log(\"[VideoConf] Removing call with id \\\"\".concat(callId, \"\\\" from Incoming Calls list.\"));\n    if (!this.incomingDirectCalls.has(callId)) {\n      return;\n    }\n    const isRinging = this.isRinging();\n    const callData = this.incomingDirectCalls.get(callId);\n    if (callData !== null && callData !== void 0 && callData.timeout) {\n      clearTimeout(callData.timeout);\n    }\n    this.incomingDirectCalls.delete(callId);\n    this.emit('incoming/changed');\n    if (isRinging !== this.isRinging()) {\n      this.emit('ringing/changed');\n    }\n  }\n  createAbortTimeout(callId) {\n    return setTimeout(() => this.abortIncomingCall(callId), CALL_TIMEOUT);\n  }\n  startNewIncomingCall(_ref6) {\n    let {\n      callId,\n      uid,\n      rid\n    } = _ref6;\n    if (this.isCallDismissed(callId)) {\n      debug && console.log(\"[VideoConf] Ignoring dismissed call.\");\n      return;\n    }\n    // Reject any currently ringing call from the user before registering the new one.\n    this.rejectIncomingCallsFromUser(uid);\n    debug && console.log(\"[VideoConf] Storing this new call information.\");\n    this.incomingDirectCalls.set(callId, {\n      callId,\n      uid,\n      rid,\n      timeout: this.createAbortTimeout(callId)\n    });\n    this.emit('incoming/changed');\n    this.emit('ringing/changed');\n    this.emit('direct/ringing', {\n      callId,\n      uid,\n      rid\n    });\n  }\n  refreshExistingIncomingCall(_ref7) {\n    let {\n      callId,\n      uid,\n      rid\n    } = _ref7;\n    const existingData = this.incomingDirectCalls.get(callId);\n    if (!existingData) {\n      throw new Error('Video Conference Manager State Error');\n    }\n    debug && console.log(\"[VideoConf] Resetting call timeout.\");\n    if (existingData.timeout) {\n      clearTimeout(existingData.timeout);\n    }\n    existingData.timeout = this.createAbortTimeout(callId);\n    if (!this.isCallDismissed(callId)) {\n      this.emit('direct/ringing', {\n        callId,\n        uid,\n        rid\n      });\n    }\n  }\n  onDirectCall(_ref8) {\n    var _this$incomingDirectC2;\n    let {\n      callId,\n      uid,\n      rid\n    } = _ref8;\n    // If we already accepted this call, then don't ring again\n    if ((_this$incomingDirectC2 = this.incomingDirectCalls.get(callId)) !== null && _this$incomingDirectC2 !== void 0 && _this$incomingDirectC2.acceptTimeout) {\n      return;\n    }\n    debug && console.log(\"[VideoConf] User \".concat(uid, \" is ringing with call \").concat(callId, \".\"));\n    if (this.incomingDirectCalls.has(callId)) {\n      this.refreshExistingIncomingCall({\n        callId,\n        uid,\n        rid\n      });\n    } else {\n      this.startNewIncomingCall({\n        callId,\n        uid,\n        rid\n      });\n    }\n  }\n  onDirectCallCanceled(_ref9) {\n    let {\n      callId\n    } = _ref9;\n    debug && console.log(\"[VideoConf] Call \".concat(callId, \" was canceled by the remote user.\"));\n    // We had just accepted this call, but the remote user hang up before they got the notification, so cancel our acceptance\n    const callData = this.incomingDirectCalls.get(callId);\n    if (callData !== null && callData !== void 0 && callData.acceptTimeout) {\n      clearTimeout(callData.acceptTimeout);\n      this.setIncomingCallAttribute(callId, 'acceptTimeout', undefined);\n    }\n    this.loseIncomingCall(callId);\n  }\n  onDirectCallAccepted(params) {\n    var _this$currentCallData2;\n    let skipConfirmation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!params.callId || params.callId !== ((_this$currentCallData2 = this.currentCallData) === null || _this$currentCallData2 === void 0 ? void 0 : _this$currentCallData2.callId)) {\n      debug && console.log(\"[VideoConf] User \".concat(params.uid, \" has accepted a call \").concat(params.callId, \" from us, but we're not calling.\"));\n      return;\n    }\n    debug && console.log(\"[VideoConf] User \".concat(params.uid, \" has accepted our call \").concat(params.callId, \".\"));\n    // Stop ringing\n    if (this.currentCallHandler) {\n      clearInterval(this.currentCallHandler);\n      this.currentCallHandler = undefined;\n    }\n    const callData = this.currentCallData;\n    this.emit('direct/accepted', params);\n    this.emit('direct/stopped', params);\n    this.currentCallData = undefined;\n    this.emit('calling/changed');\n    if (!callData.joined) {\n      this.joinCall(params.callId);\n    }\n    if (skipConfirmation) {\n      return;\n    }\n    debug && console.log(\"[VideoConf] Notifying user \".concat(callData.uid, \" that they can join the call now.\"));\n    this.userId && this.notifyUser(callData.uid, 'confirmed', {\n      callId: callData.callId,\n      uid: this.userId,\n      rid: callData.rid\n    });\n  }\n  onDirectCallConfirmed(params) {\n    var _this$incomingDirectC3;\n    if (!params.callId || !((_this$incomingDirectC3 = this.incomingDirectCalls.get(params.callId)) !== null && _this$incomingDirectC3 !== void 0 && _this$incomingDirectC3.acceptTimeout)) {\n      debug && console.log(\"[VideoConf] User \".concat(params.uid, \" confirmed we can join \").concat(params.callId, \" but we aren't trying to join it.\"));\n      return;\n    }\n    this.joinCall(params.callId);\n  }\n  onDirectCallJoined(params) {\n    if (!params.callId) {\n      debug && console.log(\"[VideoConf] Invalid 'video-conference.join' event received: \".concat(params.callId, \", \").concat(params.uid, \".\"));\n      return;\n    }\n    if (params.uid === this.userId) {\n      var _this$currentCallData3;\n      if (((_this$currentCallData3 = this.currentCallData) === null || _this$currentCallData3 === void 0 ? void 0 : _this$currentCallData3.callId) === params.callId) {\n        debug && console.log(\"[VideoConf] We joined our own call (\".concat(this.userId, \") from somewhere else. Flagging the call appropriatelly.\"));\n        this.currentCallData.joined = true;\n        this.emit('calling/changed');\n        return;\n      }\n      if (this.incomingDirectCalls.has(params.callId)) {\n        debug && console.log(\"[VideoConf] We joined the call \".concat(params.callId, \" from somewhere else. Dismissing it.\"));\n        this.dismissIncomingCall(params.callId);\n        this.loseIncomingCall(params.callId);\n      }\n      return;\n    }\n    debug && console.log(\"[VideoConf] User \".concat(params.uid, \" has joined a call we started \").concat(params.callId, \".\"));\n    this.onDirectCallAccepted(params, true);\n  }\n  onDirectCallEnded(params) {\n    var _this$currentCallData4;\n    if (!params.callId) {\n      debug && console.log(\"[VideoConf] Invalid 'video-conference.end' event received: \".concat(params.callId, \", \").concat(params.uid, \".\"));\n      return;\n    }\n    const callData = this.incomingDirectCalls.get(params.callId);\n    if (callData) {\n      debug && console.log(\"[VideoConf] Incoming call ended by the server: \".concat(params.callId, \".\"));\n      if (callData.acceptTimeout) {\n        clearTimeout(callData.acceptTimeout);\n        this.setIncomingCallAttribute(params.callId, 'acceptTimeout', undefined);\n      }\n      this.loseIncomingCall(params.callId);\n      return;\n    }\n    if (((_this$currentCallData4 = this.currentCallData) === null || _this$currentCallData4 === void 0 ? void 0 : _this$currentCallData4.callId) !== params.callId) {\n      debug && console.log(\"[VideoConf] Server sent a call ended event for a call we're not aware of: \".concat(params.callId, \".\"));\n      return;\n    }\n    debug && console.log(\"[VideoConf] Outgoing call ended by the server: \".concat(params.callId, \".\"));\n    // Stop ringing\n    this.currentCallData = undefined;\n    if (this.currentCallHandler) {\n      clearInterval(this.currentCallHandler);\n      this.currentCallHandler = undefined;\n      this.emit('calling/changed');\n      this.emit('direct/stopped', params);\n    }\n  }\n  onDirectCallRejected(params) {\n    var _this$currentCallData5;\n    if (!params.callId || params.callId !== ((_this$currentCallData5 = this.currentCallData) === null || _this$currentCallData5 === void 0 ? void 0 : _this$currentCallData5.callId)) {\n      debug && console.log(\"[VideoConf] User \".concat(params.uid, \" has rejected a call \").concat(params.callId, \" from us, but we're not calling.\"));\n      return;\n    }\n    debug && console.log(\"[VideoConf] User \".concat(params.uid, \" has rejected our call \").concat(params.callId, \".\"));\n    // Stop ringing\n    if (this.currentCallHandler) {\n      clearInterval(this.currentCallHandler);\n      this.currentCallHandler = undefined;\n    }\n    const {\n      joined\n    } = this.currentCallData;\n    this.emit('direct/cancel', params);\n    this.currentCallData = undefined;\n    this.emit('direct/stopped', params);\n    this.emit('calling/changed');\n    if (!joined) {\n      sdk.rest.post('/v1/video-conference.cancel', {\n        callId: params.callId\n      });\n    }\n  }\n  isCallDismissed(callId) {\n    return this.dismissedCalls.has(callId);\n  }\n}();\nMeteor.startup(() => Tracker.autorun(() => VideoConfManager.updateUser()));","map":{"version":3,"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","export","VideoConfManager","Emitter","Meteor","Tracker","sdk","getConfig","time","debug","CALL_INTERVAL","CALL_ATTEMPT_LIMIT","CALL_TIMEOUT","ACCEPT_TIMEOUT","preferences","_preferences","capabilities","_capabilities","constructor","userId","currentCallHandler","currentCallData","startingNewCall","hooks","incomingDirectCalls","dismissedCalls","Map","Set","mic","cam","on","directCalls","getIncomingDirectCalls","isBusy","isCalling","isRinging","values","some","_ref","callId","isCallDismissed","joined","filter","call","acceptTimeout","map","_ref2","timeout","_","_t","_excluded","dismissed","startCall","roomId","title","Error","console","log","concat","emit","data","rest","post","allowRinging","catch","e","_e$xhr","_e$xhr$responseJSON","error","xhr","responseJSON","Promise","reject","type","callUser","uid","calleeId","rid","joinCall","acceptIncomingCall","callData","get","clearTimeout","setIncomingCallAttribute","undefined","dismissIncomingCall","setTimeout","updatedCallData","removeIncomingCall","notifyUser","rejectIncomingCall","loseIncomingCall","dismissedIncomingCalls","keys","dismissedIncomingCallHelper","loadCapabilities","attributeName","value","newData","set","add","delete","has","updateUser","disconnect","connectUser","changePreference","key","setPreferences","prefs","hasOwnProperty","prefKey","params","state","url","providerName","_e$xhr2","_e$xhr2$responseJSON","abortCall","giveUp","rejectIncomingCallsFromUser","_ref3","attempt","setInterval","warn","_ref4","_this$currentCallData","clearInterval","hook","forEach","clear","onVideoConfNotification","_ref5","action","onDirectCall","onDirectCallCanceled","onDirectCallAccepted","onDirectCallRejected","onDirectCallConfirmed","onDirectCallJoined","onDirectCallEnded","publish","stop","ready","stream","push","abortIncomingCall","_this$incomingDirectC","lostCall","createAbortTimeout","startNewIncomingCall","_ref6","refreshExistingIncomingCall","_ref7","existingData","_ref8","_this$incomingDirectC2","_ref9","_this$currentCallData2","skipConfirmation","arguments","length","_this$incomingDirectC3","_this$currentCallData3","_this$currentCallData4","_this$currentCallData5","startup","autorun"],"sources":["client/lib/VideoConfManager.ts"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { getConfig } from './utils/getConfig';\nimport { time } from 'console';\n\nconst debug = !!(getConfig('debug') || getConfig('debug-VideoConf'));\n\n// The interval between attempts to call the remote user\nconst CALL_INTERVAL = 3000;\n// How many attempts to call we're gonna make\nconst CALL_ATTEMPT_LIMIT = 10;\n// The amount of time we'll assume an incoming call is still valid without any updates from the remote user\nconst CALL_TIMEOUT = 10000;\n// How long are we gonna wait for a link after accepting an incoming call\nconst ACCEPT_TIMEOUT = 5000;\n\ntype DirectCallParams = {\n\tuid: IUser['_id'];\n\trid: IRoom['_id'];\n\tcallId: string;\n};\n\nexport type DirectCallData = DirectCallParams & {\n\tdismissed: boolean;\n};\n\ntype IncomingDirectCall = DirectCallParams & {\n\ttimeout: ReturnType<typeof setTimeout> | undefined;\n\tacceptTimeout?: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport type CallPreferences = {\n\tmic?: boolean;\n\tcam?: boolean;\n};\n\nexport type ProviderCapabilities = {\n\tmic?: boolean;\n\tcam?: boolean;\n\ttitle?: boolean;\n};\n\ntype CurrentCallParams = {\n\tcallId: string;\n\turl: string;\n\tproviderName?: string;\n};\n\ntype VideoConfEvents = {\n\t// We gave up on calling a remote user or they rejected our call\n\t'direct/cancel': DirectCallParams;\n\n\t// A remote user is calling us\n\t'direct/ringing': DirectCallParams;\n\n\t// An incoming call was lost, either by timeout or because the remote user canceled\n\t'direct/lost': DirectCallParams;\n\n\t// We tried to accept an incoming call but the process failed\n\t'direct/failed': DirectCallParams;\n\n\t// A remote user accepted our call\n\t'direct/accepted': DirectCallParams;\n\n\t// We stopped calling a remote user\n\t'direct/stopped': DirectCallParams;\n\n\t'preference/changed': { key: keyof CallPreferences; value: boolean };\n\n\t// The list of incoming calls has changed in some way\n\t'incoming/changed': void;\n\n\t// The list of ringing incoming calls may have changed\n\t'ringing/changed': void;\n\n\t// The value of `isCalling` may have changed\n\t'calling/changed': void;\n\n\t'calling/ended': void;\n\n\t// When join call\n\t'call/join': CurrentCallParams;\n\n\t'join/error': { error: string };\n\n\t'start/error': { error: string };\n\n\t'capabilities/changed': void;\n};\n\nexport const VideoConfManager = new (class VideoConfManager extends Emitter<VideoConfEvents> {\n\tprivate userId: string | undefined;\n\n\tprivate currentCallHandler: ReturnType<typeof setTimeout> | undefined;\n\n\tprivate currentCallData: (DirectCallParams & { joined?: boolean }) | undefined;\n\n\tprivate startingNewCall = false;\n\n\tprivate hooks: (() => void)[] = [];\n\n\tprivate incomingDirectCalls: Map<string, IncomingDirectCall>;\n\n\tprivate dismissedCalls: Set<string>;\n\n\tprivate _preferences: CallPreferences;\n\n\tprivate _capabilities: ProviderCapabilities;\n\n\tpublic get preferences(): CallPreferences {\n\t\treturn this._preferences;\n\t}\n\n\tpublic get capabilities(): ProviderCapabilities {\n\t\treturn this._capabilities;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.incomingDirectCalls = new Map<string, IncomingDirectCall>();\n\t\tthis.dismissedCalls = new Set<string>();\n\t\tthis._preferences = { mic: true, cam: false };\n\t\tthis._capabilities = {};\n\n\t\tthis.on('incoming/changed', () => {\n\t\t\ttime.directCalls = this.getIncomingDirectCalls();\n\t\t});\n\t}\n\n\tpublic isBusy(): boolean {\n\t\tif (this.startingNewCall) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isCalling();\n\t}\n\n\tpublic isRinging(): boolean {\n\t\treturn [...this.incomingDirectCalls.values()].some(({ callId }) => !this.isCallDismissed(callId));\n\t}\n\n\tpublic isCalling(): boolean {\n\t\tif (this.currentCallHandler || (this.currentCallData && !this.currentCallData.joined)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic getIncomingDirectCalls(): DirectCallData[] {\n\t\treturn (\n\t\t\t[...this.incomingDirectCalls.values()]\n\t\t\t\t// Filter out any calls that we're in the process of accepting, so they're already hidden from the UI\n\t\t\t\t.filter((call) => !call.acceptTimeout)\n\t\t\t\t.map(({ timeout: _, acceptTimeout: _t, ...call }) => ({ ...call, dismissed: this.isCallDismissed(call.callId) }))\n\t\t);\n\t}\n\n\tpublic async startCall(roomId: IRoom['_id'], title?: string): Promise<void> {\n\t\tif (!this.userId || this.isBusy()) {\n\t\t\tthrow new Error('Video manager is busy.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Starting new call on room ${roomId}`);\n\t\tthis.startingNewCall = true;\n\t\tthis.emit('calling/changed');\n\n\t\tconst { data } = await sdk.rest.post('/v1/video-conference.start', { roomId, title, allowRinging: true }).catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to start new call on room ${roomId}`);\n\t\t\tthis.startingNewCall = false;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('start/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis.startingNewCall = false;\n\t\tthis.emit('calling/changed');\n\n\t\tif (data.type !== 'direct') {\n\t\t\tthis.emit('calling/ended');\n\t\t}\n\n\t\tswitch (data.type) {\n\t\t\tcase 'direct':\n\t\t\t\treturn this.callUser({ uid: data.calleeId, rid: roomId, callId: data.callId });\n\t\t\tcase 'videoconference':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t\tcase 'livechat':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t}\n\t}\n\n\tpublic acceptIncomingCall(callId: string): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tthrow new Error('Unable to find accepted call information.');\n\t\t}\n\t\tif (callData.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] We're already trying to accept call ${callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Accepting incoming call ${callId}.`);\n\n\t\tif (callData.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'timeout', undefined);\n\t\t}\n\n\t\t// Mute this call Id so any lingering notifications don't trigger it again\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tthis.setIncomingCallAttribute(\n\t\t\tcallId,\n\t\t\t'acceptTimeout',\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst updatedCallData = this.incomingDirectCalls.get(callId);\n\t\t\t\tif (!updatedCallData?.acceptTimeout) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdebug && console.log(`[VideoConf] Attempt to accept call has timed out.`);\n\t\t\t\tthis.removeIncomingCall(callId);\n\n\t\t\t\tthis.emit('direct/failed', { callId, uid: callData.uid, rid: callData.rid });\n\t\t\t}, ACCEPT_TIMEOUT),\n\t\t);\n\t\tthis.emit('incoming/changed');\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that we accept their call.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'accepted', { callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tpublic rejectIncomingCall(callId: string): void {\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.userId && this.notifyUser(callData.uid, 'rejected', { callId, uid: this.userId, rid: callData.rid });\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tpublic dismissedIncomingCalls(): void {\n\t\t// Mute all calls that are currently ringing\n\t\tif ([...this.incomingDirectCalls.keys()].some((callId) => this.dismissedIncomingCallHelper(callId))) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t}\n\t}\n\n\tpublic async loadCapabilities(): Promise<void> {\n\t\tconst { capabilities } = await sdk.rest.get('/v1/video-conference.capabilities').catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to load video conference capabilities`);\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis._capabilities = capabilities || {};\n\t\tthis.emit('capabilities/changed');\n\t}\n\n\tprivate setIncomingCallAttribute<T extends keyof IncomingDirectCall>(\n\t\tcallId: string,\n\t\tattributeName: T,\n\t\tvalue: IncomingDirectCall[T] | undefined,\n\t): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tdebug && console.error(`[VideoConf] Cannot change attribute \"${attributeName}\" of unknown call \"${callId}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newData: IncomingDirectCall = {\n\t\t\t...callData,\n\t\t};\n\n\t\tif (value === undefined) {\n\t\t\tdelete newData[attributeName];\n\t\t} else {\n\t\t\tnewData[attributeName] = value;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Updating attribute \"${attributeName}\" of call \"${callId}\".`);\n\t\tthis.incomingDirectCalls.set(callId, newData);\n\t}\n\n\tprivate dismissedIncomingCallHelper(callId: string): boolean {\n\t\t// Muting will stop a callId from ringing, but it doesn't affect any part of the existing workflow\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Dismissing call ${callId}`);\n\t\tthis.dismissedCalls.add(callId);\n\t\t// We don't need to hold on to the dismissed callIds forever because the server won't let anyone call us with it for very long\n\t\tsetTimeout(() => this.dismissedCalls.delete(callId), CALL_TIMEOUT * 20);\n\t\t// Only change the state if this call is actually in our list\n\t\treturn this.incomingDirectCalls.has(callId);\n\t}\n\n\tpublic dismissIncomingCall(callId: string): boolean {\n\t\tif (this.dismissedIncomingCallHelper(callId)) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic updateUser(): void {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (this.userId === userId) {\n\t\t\tdebug && console.log(`[VideoConf] Logged user has not changed, so we're not changing the hooks.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Logged user has changed.`);\n\n\t\tif (this.userId) {\n\t\t\tthis.disconnect();\n\t\t}\n\n\t\tif (userId) {\n\t\t\tthis.connectUser(userId);\n\t\t}\n\t}\n\n\tpublic changePreference(key: keyof CallPreferences, value: boolean): void {\n\t\tthis._preferences[key] = value;\n\t\tthis.emit('preference/changed', { key, value });\n\t}\n\n\tpublic setPreferences(prefs: Partial<CallPreferences>): void {\n\t\tfor (const key in prefs) {\n\t\t\tif (prefs.hasOwnProperty(key)) {\n\t\t\t\tconst prefKey = key as keyof CallPreferences;\n\t\t\t\tthis.changePreference(prefKey, prefs[prefKey] as boolean);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async joinCall(callId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] Joining call ${callId}.`);\n\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tconst data = this.incomingDirectCalls.get(callId);\n\t\t\tif (data?.acceptTimeout) {\n\t\t\t\tdebug && console.log('[VideoConf] Clearing acceptance timeout');\n\t\t\t\tclearTimeout(data.acceptTimeout);\n\t\t\t}\n\t\t\tthis.removeIncomingCall(callId);\n\t\t}\n\n\t\tconst params = {\n\t\t\tcallId,\n\t\t\tstate: {\n\t\t\t\t...(this._preferences.mic !== undefined ? { mic: this._preferences.mic } : {}),\n\t\t\t\t...(this._preferences.cam !== undefined ? { cam: this._preferences.cam } : {}),\n\t\t\t},\n\t\t};\n\n\t\tconst { url, providerName } = await sdk.rest.post('/v1/video-conference.join', params).catch((e) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to join call ${callId}`);\n\t\t\tthis.emit('join/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tif (!url) {\n\t\t\tthrow new Error('Failed to get video conference URL.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Opening ${url}.`);\n\t\tthis.emit('call/join', { url, callId, providerName });\n\t}\n\n\tpublic abortCall(): void {\n\t\tif (!this.currentCallData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.giveUp(this.currentCallData);\n\t}\n\n\tprivate rejectIncomingCallsFromUser(userId: string): void {\n\t\tfor (const [, { callId, uid }] of this.incomingDirectCalls) {\n\t\t\tif (userId === uid) {\n\t\t\t\tdebug && console.log(`[VideoConf] Rejecting old incoming call from user ${userId}`);\n\t\t\t\tthis.rejectIncomingCall(callId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async callUser({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tif (this.currentCallHandler || this.currentCallData) {\n\t\t\tthrow new Error('Video Conference State Error.');\n\t\t}\n\n\t\tlet attempt = 1;\n\t\tthis.currentCallData = { callId, rid, uid };\n\t\tthis.currentCallHandler = setInterval(() => {\n\t\t\tif (!this.currentCallHandler) {\n\t\t\t\tdebug && console.warn(`[VideoConf] Ringing interval was not properly cleared.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattempt++;\n\n\t\t\tif (attempt > CALL_ATTEMPT_LIMIT) {\n\t\t\t\tthis.giveUp({ uid, rid, callId });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdebug && console.log(`[VideoConf] Ringing user ${uid}, attempt number ${attempt}.`);\n\t\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t\t}, CALL_INTERVAL);\n\t\tthis.emit('calling/changed');\n\n\t\tdebug && console.log(`[VideoConf] Ringing user ${uid} for the first time.`);\n\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t}\n\n\tprivate async giveUp({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tconst joined = this.currentCallData?.joined;\n\n\t\tdebug && console.log(`[VideoConf] Stop ringing user ${uid}.`);\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.currentCallData = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${uid} that we are no longer calling.`);\n\t\tthis.userId && this.notifyUser(uid, 'canceled', { uid: this.userId, rid, callId });\n\n\t\tthis.emit('direct/cancel', { uid, rid, callId });\n\t\tthis.emit('direct/stopped', { uid, rid, callId });\n\n\t\tif (joined) {\n\t\t\treturn;\n\t\t}\n\n\t\tsdk.rest.post('/v1/video-conference.cancel', { callId });\n\t}\n\n\tprivate disconnect(): void {\n\t\tdebug && console.log(`[VideoConf] disconnecting user ${this.userId}`);\n\t\tfor (const hook of this.hooks) {\n\t\t\thook();\n\t\t}\n\t\tthis.hooks = [];\n\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tthis.incomingDirectCalls.forEach((call) => {\n\t\t\tif (call.timeout) {\n\t\t\t\tclearTimeout(call.timeout);\n\t\t\t}\n\t\t\tif (call.acceptTimeout) {\n\t\t\t\tclearTimeout(call.acceptTimeout);\n\t\t\t}\n\t\t});\n\t\tthis.incomingDirectCalls.clear();\n\t\tthis.dismissedCalls.clear();\n\t\tthis.currentCallData = undefined;\n\t\tthis._preferences = {};\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('calling/changed');\n\t}\n\n\tprivate async onVideoConfNotification({ action, params }: { action: string; params: DirectCallParams }): Promise<void> {\n\t\tif (!action || typeof action !== 'string') {\n\t\t\tdebug && console.error('[VideoConf] Invalid action received.');\n\t\t\treturn;\n\t\t}\n\t\tif (!params || typeof params !== 'object' || !params.callId || !params.uid || !params.rid) {\n\t\t\tdebug && console.error('[VideoConf] Invalid params received.');\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (action) {\n\t\t\tcase 'call':\n\t\t\t\treturn this.onDirectCall(params);\n\t\t\tcase 'canceled':\n\t\t\t\treturn this.onDirectCallCanceled(params);\n\t\t\tcase 'accepted':\n\t\t\t\treturn this.onDirectCallAccepted(params);\n\t\t\tcase 'rejected':\n\t\t\t\treturn this.onDirectCallRejected(params);\n\t\t\tcase 'confirmed':\n\t\t\t\treturn this.onDirectCallConfirmed(params);\n\t\t\tcase 'join':\n\t\t\t\treturn this.onDirectCallJoined(params);\n\t\t\tcase 'end':\n\t\t\t\treturn this.onDirectCallEnded(params);\n\t\t}\n\t}\n\n\tprivate async notifyUser(uid: IUser['_id'], action: string, params: DirectCallParams): Promise<void> {\n\t\treturn sdk.publish('notify-user', [`${uid}/video-conference`, { action, params }]);\n\t}\n\n\tprivate async connectUser(userId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] connecting user ${userId}`);\n\t\tthis.userId = userId;\n\n\t\tconst { stop, ready } = sdk.stream('notify-user', [`${userId}/video-conference`], (data) => this.onVideoConfNotification(data));\n\n\t\tawait ready();\n\n\t\tthis.hooks.push(stop);\n\t}\n\n\tprivate abortIncomingCall(callId: string): void {\n\t\t// If we just accepted this call, then ignore the timeout\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Canceling call ${callId} due to ringing timeout.`);\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate loseIncomingCall(callId: string): void {\n\t\tconst lostCall = this.incomingDirectCalls.get(callId);\n\t\tif (!lostCall) {\n\t\t\tdebug && console.warn(`[VideoConf] Unable to cancel ${callId} because we have no information about it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeIncomingCall(callId);\n\n\t\tdebug && console.log(`[VideoConf] Call ${callId} from ${lostCall.uid} was lost.`);\n\t\tthis.emit('direct/lost', { callId, uid: lostCall.uid, rid: lostCall.rid });\n\t}\n\n\tprivate removeIncomingCall(callId: string): void {\n\t\tdebug && console.log(`[VideoConf] Removing call with id \"${callId}\" from Incoming Calls list.`);\n\t\tif (!this.incomingDirectCalls.has(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isRinging = this.isRinging();\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t}\n\n\t\tthis.incomingDirectCalls.delete(callId);\n\t\tthis.emit('incoming/changed');\n\n\t\tif (isRinging !== this.isRinging()) {\n\t\t\tthis.emit('ringing/changed');\n\t\t}\n\t}\n\n\tprivate createAbortTimeout(callId: string): ReturnType<typeof setTimeout> {\n\t\treturn setTimeout(() => this.abortIncomingCall(callId), CALL_TIMEOUT);\n\t}\n\n\tprivate startNewIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\tdebug && console.log(`[VideoConf] Ignoring dismissed call.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Reject any currently ringing call from the user before registering the new one.\n\t\tthis.rejectIncomingCallsFromUser(uid);\n\n\t\tdebug && console.log(`[VideoConf] Storing this new call information.`);\n\t\tthis.incomingDirectCalls.set(callId, {\n\t\t\tcallId,\n\t\t\tuid,\n\t\t\trid,\n\t\t\ttimeout: this.createAbortTimeout(callId),\n\t\t});\n\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t}\n\n\tprivate refreshExistingIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tconst existingData = this.incomingDirectCalls.get(callId);\n\t\tif (!existingData) {\n\t\t\tthrow new Error('Video Conference Manager State Error');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Resetting call timeout.`);\n\t\tif (existingData.timeout) {\n\t\t\tclearTimeout(existingData.timeout);\n\t\t}\n\t\texistingData.timeout = this.createAbortTimeout(callId);\n\n\t\tif (!this.isCallDismissed(callId)) {\n\t\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCall({ callId, uid, rid }: DirectCallParams): void {\n\t\t// If we already accepted this call, then don't ring again\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${uid} is ringing with call ${callId}.`);\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tthis.refreshExistingIncomingCall({ callId, uid, rid });\n\t\t} else {\n\t\t\tthis.startNewIncomingCall({ callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCallCanceled({ callId }: DirectCallParams): void {\n\t\tdebug && console.log(`[VideoConf] Call ${callId} was canceled by the remote user.`);\n\n\t\t// We had just accepted this call, but the remote user hang up before they got the notification, so cancel our acceptance\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.acceptTimeout) {\n\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'acceptTimeout', undefined);\n\t\t}\n\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate onDirectCallAccepted(params: DirectCallParams, skipConfirmation = false): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst callData = this.currentCallData;\n\n\t\tthis.emit('direct/accepted', params);\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('calling/changed');\n\n\t\tif (!callData.joined) {\n\t\t\tthis.joinCall(params.callId);\n\t\t}\n\n\t\tif (skipConfirmation) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that they can join the call now.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'confirmed', { callId: callData.callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tprivate onDirectCallConfirmed(params: DirectCallParams): void {\n\t\tif (!params.callId || !this.incomingDirectCalls.get(params.callId)?.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} confirmed we can join ${params.callId} but we aren't trying to join it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.joinCall(params.callId);\n\t}\n\n\tprivate onDirectCallJoined(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.join' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (params.uid === this.userId) {\n\t\t\tif (this.currentCallData?.callId === params.callId) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined our own call (${this.userId}) from somewhere else. Flagging the call appropriatelly.`);\n\t\t\t\tthis.currentCallData.joined = true;\n\t\t\t\tthis.emit('calling/changed');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.incomingDirectCalls.has(params.callId)) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined the call ${params.callId} from somewhere else. Dismissing it.`);\n\t\t\t\tthis.dismissIncomingCall(params.callId);\n\t\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has joined a call we started ${params.callId}.`);\n\t\tthis.onDirectCallAccepted(params, true);\n\t}\n\n\tprivate onDirectCallEnded(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.end' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst callData = this.incomingDirectCalls.get(params.callId);\n\t\tif (callData) {\n\t\t\tdebug && console.log(`[VideoConf] Incoming call ended by the server: ${params.callId}.`);\n\t\t\tif (callData.acceptTimeout) {\n\t\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\t\tthis.setIncomingCallAttribute(params.callId, 'acceptTimeout', undefined);\n\t\t\t}\n\n\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.currentCallData?.callId !== params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Server sent a call ended event for a call we're not aware of: ${params.callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Outgoing call ended by the server: ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tthis.currentCallData = undefined;\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('direct/stopped', params);\n\t\t}\n\t}\n\n\tprivate onDirectCallRejected(params: DirectCallParams): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst { joined } = this.currentCallData;\n\n\t\tthis.emit('direct/cancel', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.emit('calling/changed');\n\n\t\tif (!joined) {\n\t\t\tsdk.rest.post('/v1/video-conference.cancel', { callId: params.callId });\n\t\t}\n\t}\n\n\tprivate isCallDismissed(callId: string): boolean {\n\t\treturn this.dismissedCalls.has(callId);\n\t}\n})();\n\nMeteor.startup(() => Tracker.autorun(() => VideoConfManager.updateUser()));\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b56f19cdf6e3e014ebbb47ddce5a060c0dcf67e3"}
