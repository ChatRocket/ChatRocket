{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/PinnedMessagesTab.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/room/contextualBar/PinnedMessagesTab.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/PinnedMessagesTab.tsx","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/PinnedMessagesTab.tsx","sourceRoot":"","sources":["client/views/room/contextualBar/PinnedMessagesTab.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AACvE,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,uBAAuB,EAAE,MAAM,sCAAsC,CAAC;AAC/E,OAAO,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AACzE,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAClD,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAE9C,MAAM,iBAAiB,GAAG,GAAiB,EAAE;IAC5C,MAAM,iBAAiB,GAAG,WAAW,CAAC,KAAK,EAAE,4BAA4B,CAAC,CAAC;IAE3E,MAAM,IAAI,GAAG,OAAO,EAAE,CAAC;IAEvB,MAAM,yBAAyB,GAAG,QAAQ,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,iBAAiB,CAAU,EAAE,KAAK,IAAI,EAAE;QACtG,MAAM,QAAQ,GAAe,EAAE,CAAC;QAEhC,KACC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,iBAAiB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EACjF,MAAM,CAAC,KAAK,GAAG,CAAC;QAChB,4CAA4C;QAC5C,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,GAAG,MAAM,iBAAiB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC,EACrF,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC1D,CAAC;QAED,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAE3B,OAAO,CACN,CAAC,cAAc,CACd,QAAQ,CAAC,KAAK,CACd,KAAK,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAC5B,kBAAkB,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAC5C,OAAO,CAAC,QAAQ,CAChB,WAAW,CAAC,CAAC,yBAAyB,CAAC,EACtC,CACF,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { onClientMessageReceived } from '../../../lib/onClientMessageReceived';\nimport { mapMessageFromApi } from '../../../lib/utils/mapMessageFromApi';\nimport { useRoom } from '../contexts/RoomContext';\nimport MessageListTab from './MessageListTab';\n\nconst PinnedMessagesTab = (): ReactElement => {\n\tconst getPinnedMessages = useEndpoint('GET', '/v1/chat.getPinnedMessages');\n\n\tconst room = useRoom();\n\n\tconst pinnedMessagesQueryResult = useQuery(['rooms', room._id, 'pinned-messages'] as const, async () => {\n\t\tconst messages: IMessage[] = [];\n\n\t\tfor (\n\t\t\tlet offset = 0, result = await getPinnedMessages({ roomId: room._id, offset: 0 });\n\t\t\tresult.count > 0;\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\toffset += result.count, result = await getPinnedMessages({ roomId: room._id, offset })\n\t\t) {\n\t\t\tmessages.push(...result.messages.map(mapMessageFromApi));\n\t\t}\n\n\t\treturn Promise.all(messages.map(onClientMessageReceived));\n\t});\n\n\tconst t = useTranslation();\n\n\treturn (\n\t\t<MessageListTab\n\t\t\ticonName='pin'\n\t\t\ttitle={t('Pinned_Messages')}\n\t\t\temptyResultMessage={t('No_pinned_messages')}\n\t\t\tcontext='pinned'\n\t\t\tqueryResult={pinnedMessagesQueryResult}\n\t\t/>\n\t);\n};\n\nexport default PinnedMessagesTab;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/PinnedMessagesTab.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/contextualBar/PinnedMessagesTab.tsx","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/PinnedMessagesTab.tsx","sourceRoot":"","sources":["client/views/room/contextualBar/PinnedMessagesTab.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AACvE,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,uBAAuB,EAAE,MAAM,sCAAsC,CAAC;AAC/E,OAAO,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AACzE,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAClD,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAE9C,MAAM,iBAAiB,GAAG,GAAiB,EAAE;IAC5C,MAAM,iBAAiB,GAAG,WAAW,CAAC,KAAK,EAAE,4BAA4B,CAAC,CAAC;IAE3E,MAAM,IAAI,GAAG,OAAO,EAAE,CAAC;IAEvB,MAAM,yBAAyB,GAAG,QAAQ,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,iBAAiB,CAAU,EAAE,KAAK,IAAI,EAAE;QACtG,MAAM,QAAQ,GAAe,EAAE,CAAC;QAEhC,KACC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,MAAM,iBAAiB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EACjF,MAAM,CAAC,KAAK,GAAG,CAAC;QAChB,4CAA4C;QAC5C,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,GAAG,MAAM,iBAAiB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC,EACrF,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC1D,CAAC;QAED,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAE3B,OAAO,CACN,CAAC,cAAc,CACd,QAAQ,CAAC,KAAK,CACd,KAAK,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAC5B,kBAAkB,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAC5C,OAAO,CAAC,QAAQ,CAChB,WAAW,CAAC,CAAC,yBAAyB,CAAC,EACtC,CACF,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { onClientMessageReceived } from '../../../lib/onClientMessageReceived';\nimport { mapMessageFromApi } from '../../../lib/utils/mapMessageFromApi';\nimport { useRoom } from '../contexts/RoomContext';\nimport MessageListTab from './MessageListTab';\n\nconst PinnedMessagesTab = (): ReactElement => {\n\tconst getPinnedMessages = useEndpoint('GET', '/v1/chat.getPinnedMessages');\n\n\tconst room = useRoom();\n\n\tconst pinnedMessagesQueryResult = useQuery(['rooms', room._id, 'pinned-messages'] as const, async () => {\n\t\tconst messages: IMessage[] = [];\n\n\t\tfor (\n\t\t\tlet offset = 0, result = await getPinnedMessages({ roomId: room._id, offset: 0 });\n\t\t\tresult.count > 0;\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\toffset += result.count, result = await getPinnedMessages({ roomId: room._id, offset })\n\t\t) {\n\t\t\tmessages.push(...result.messages.map(mapMessageFromApi));\n\t\t}\n\n\t\treturn Promise.all(messages.map(onClientMessageReceived));\n\t});\n\n\tconst t = useTranslation();\n\n\treturn (\n\t\t<MessageListTab\n\t\t\ticonName='pin'\n\t\t\ttitle={t('Pinned_Messages')}\n\t\t\temptyResultMessage={t('No_pinned_messages')}\n\t\t\tcontext='pinned'\n\t\t\tqueryResult={pinnedMessagesQueryResult}\n\t\t/>\n\t);\n};\n\nexport default PinnedMessagesTab;\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _toConsumableArray;\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 1);\nvar useEndpoint, useTranslation;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  },\n  useTranslation: function (v) {\n    useTranslation = v;\n  }\n}, 0);\nvar useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery: function (v) {\n    useQuery = v;\n  }\n}, 1);\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 2);\nvar onClientMessageReceived;\nmodule.link(\"../../../lib/onClientMessageReceived\", {\n  onClientMessageReceived: function (v) {\n    onClientMessageReceived = v;\n  }\n}, 3);\nvar mapMessageFromApi;\nmodule.link(\"../../../lib/utils/mapMessageFromApi\", {\n  mapMessageFromApi: function (v) {\n    mapMessageFromApi = v;\n  }\n}, 4);\nvar useRoom;\nmodule.link(\"../contexts/RoomContext\", {\n  useRoom: function (v) {\n    useRoom = v;\n  }\n}, 5);\nvar MessageListTab;\nmodule.link(\"./MessageListTab\", {\n  \"default\": function (v) {\n    MessageListTab = v;\n  }\n}, 6);\nvar PinnedMessagesTab = function () {\n  var getPinnedMessages = useEndpoint('GET', '/v1/chat.getPinnedMessages');\n  var room = useRoom();\n  var pinnedMessagesQueryResult = useQuery(['rooms', room._id, 'pinned-messages'], function () {\n    function _callee() {\n      var messages, offset, result;\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              messages = [];\n              offset = 0;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(getPinnedMessages({\n                roomId: room._id,\n                offset: 0\n              }));\n            case 4:\n              result = _context.sent;\n            case 5:\n              if (!(result.count > 0)) {\n                _context.next = 13;\n                break;\n              }\n              messages.push.apply(messages, _toConsumableArray(result.messages.map(mapMessageFromApi)));\n            case 7:\n              offset += result.count;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(getPinnedMessages({\n                roomId: room._id,\n                offset: offset\n              }));\n            case 10:\n              result = _context.sent;\n              _context.next = 5;\n              break;\n            case 13:\n              return _context.abrupt(\"return\", Promise.all(messages.map(onClientMessageReceived)));\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return _callee$;\n      }(), null, null, null, Promise);\n    }\n    return _callee;\n  }());\n  var t = useTranslation();\n  return /*#__PURE__*/React.createElement(MessageListTab, {\n    iconName: \"pin\",\n    title: t('Pinned_Messages'),\n    emptyResultMessage: t('No_pinned_messages'),\n    context: \"pinned\",\n    queryResult: pinnedMessagesQueryResult\n  });\n};\nmodule.exportDefault(PinnedMessagesTab);","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_toConsumableArray","useEndpoint","useTranslation","useQuery","React","onClientMessageReceived","mapMessageFromApi","useRoom","MessageListTab","PinnedMessagesTab","getPinnedMessages","room","pinnedMessagesQueryResult","_id","_callee","messages","offset","result","async","_callee$","_context","prev","next","awrap","roomId","sent","count","push","apply","map","abrupt","Promise","all","stop","t","createElement","iconName","title","emptyResultMessage","context","queryResult","exportDefault"],"sources":["client/views/room/contextualBar/PinnedMessagesTab.tsx"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { onClientMessageReceived } from '../../../lib/onClientMessageReceived';\nimport { mapMessageFromApi } from '../../../lib/utils/mapMessageFromApi';\nimport { useRoom } from '../contexts/RoomContext';\nimport MessageListTab from './MessageListTab';\n\nconst PinnedMessagesTab = (): ReactElement => {\n\tconst getPinnedMessages = useEndpoint('GET', '/v1/chat.getPinnedMessages');\n\n\tconst room = useRoom();\n\n\tconst pinnedMessagesQueryResult = useQuery(['rooms', room._id, 'pinned-messages'] as const, async () => {\n\t\tconst messages: IMessage[] = [];\n\n\t\tfor (\n\t\t\tlet offset = 0, result = await getPinnedMessages({ roomId: room._id, offset: 0 });\n\t\t\tresult.count > 0;\n\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\toffset += result.count, result = await getPinnedMessages({ roomId: room._id, offset })\n\t\t) {\n\t\t\tmessages.push(...result.messages.map(mapMessageFromApi));\n\t\t}\n\n\t\treturn Promise.all(messages.map(onClientMessageReceived));\n\t});\n\n\tconst t = useTranslation();\n\n\treturn (\n\t\t<MessageListTab\n\t\t\ticonName='pin'\n\t\t\ttitle={t('Pinned_Messages')}\n\t\t\temptyResultMessage={t('No_pinned_messages')}\n\t\t\tcontext='pinned'\n\t\t\tqueryResult={pinnedMessagesQueryResult}\n\t\t/>\n\t);\n};\n\nexport default PinnedMessagesTab;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c3352e217fc8699d53fcbb0166761d0d983974ed"}
