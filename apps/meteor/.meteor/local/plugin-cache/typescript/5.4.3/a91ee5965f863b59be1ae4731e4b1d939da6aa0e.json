{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useFileUploadAction.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useFileUploadAction.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useFileUploadAction.ts","inputSourceMap":{"version":3,"file":"client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useFileUploadAction.ts","sourceRoot":"","sources":["client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useFileUploadAction.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AACtE,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,OAAO,EAAE,YAAY,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,OAAO,EAAE,MAAM,kCAAkC,CAAC;AAE3D,MAAM,cAAc,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAExD,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,QAAiB,EAAwB,EAAE;IAC9E,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,iBAAiB,GAAG,UAAU,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACjE,MAAM,YAAY,GAAG,YAAY,CAAC,cAAc,CAAC,CAAC;IAClD,MAAM,IAAI,GAAG,OAAO,EAAE,CAAC;IAEvB,SAAS,CAAC,GAAG,EAAE;QACd,MAAM,cAAc,GAAG,GAAG,EAAE;YAC3B,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,CAAC;gBAC5B,OAAO;YACR,CAAC;YAED,YAAY,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;QACjC,CAAC,CAAC;QAEF,MAAM,kBAAkB,GAAG,KAAK,IAAI,EAAE;YACrC,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,MAAM,CAAC,8CAA8C,CAAC,CAAC;YACrF,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,KAAK,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;gBACjF,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;oBACnC,KAAK,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;iBACxC,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC;YACb,CAAC,CAAC,CAAC;YACH,IAAI,EAAE,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;QACxD,CAAC,CAAC;QAEF,YAAY,CAAC,OAAO,EAAE,gBAAgB,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QACrE,OAAO,GAAG,EAAE,CAAC,YAAY,EAAE,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;IACvF,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;IAEzB,MAAM,YAAY,GAAG,GAAG,EAAE;QACzB,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO;QACN,EAAE,EAAE,aAAa;QACjB,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;QACzB,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,YAAY;QACrB,QAAQ,EAAE,CAAC,iBAAiB,IAAI,QAAQ;KACxC,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { GenericMenuItemProps } from '@rocket.chat/ui-client';\nimport { useTranslation, useSetting } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport { useFileInput } from '../../../../../../hooks/useFileInput';\nimport { useChat } from '../../../../contexts/ChatContext';\n\nconst fileInputProps = { type: 'file', multiple: true };\n\nexport const useFileUploadAction = (disabled: boolean): GenericMenuItemProps => {\n\tconst t = useTranslation();\n\tconst fileUploadEnabled = useSetting('FileUpload_Enabled', true);\n\tconst fileInputRef = useFileInput(fileInputProps);\n\tconst chat = useChat();\n\n\tuseEffect(() => {\n\t\tconst resetFileInput = () => {\n\t\t\tif (!fileInputRef?.current) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfileInputRef.current.value = '';\n\t\t};\n\n\t\tconst handleUploadChange = async () => {\n\t\t\tconst { getMimeType } = await import('../../../../../../../app/utils/lib/mimeTypes');\n\t\t\tconst filesToUpload = Array.from(fileInputRef?.current?.files ?? []).map((file) => {\n\t\t\t\tObject.defineProperty(file, 'type', {\n\t\t\t\t\tvalue: getMimeType(file.type, file.name),\n\t\t\t\t});\n\t\t\t\treturn file;\n\t\t\t});\n\t\t\tchat?.flows.uploadFiles(filesToUpload, resetFileInput);\n\t\t};\n\n\t\tfileInputRef.current?.addEventListener('change', handleUploadChange);\n\t\treturn () => fileInputRef?.current?.removeEventListener('change', handleUploadChange);\n\t}, [chat, fileInputRef]);\n\n\tconst handleUpload = () => {\n\t\tfileInputRef?.current?.click();\n\t};\n\n\treturn {\n\t\tid: 'file-upload',\n\t\tcontent: t('Upload_file'),\n\t\ticon: 'clip',\n\t\tonClick: handleUpload,\n\t\tdisabled: !fileUploadEnabled || disabled,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useFileUploadAction.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useFileUploadAction.ts","inputSourceMap":{"version":3,"file":"client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useFileUploadAction.ts","sourceRoot":"","sources":["client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useFileUploadAction.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AACtE,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAElC,OAAO,EAAE,YAAY,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,OAAO,EAAE,MAAM,kCAAkC,CAAC;AAE3D,MAAM,cAAc,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AAExD,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,QAAiB,EAAwB,EAAE;IAC9E,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,iBAAiB,GAAG,UAAU,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACjE,MAAM,YAAY,GAAG,YAAY,CAAC,cAAc,CAAC,CAAC;IAClD,MAAM,IAAI,GAAG,OAAO,EAAE,CAAC;IAEvB,SAAS,CAAC,GAAG,EAAE;QACd,MAAM,cAAc,GAAG,GAAG,EAAE;YAC3B,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,CAAC;gBAC5B,OAAO;YACR,CAAC;YAED,YAAY,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;QACjC,CAAC,CAAC;QAEF,MAAM,kBAAkB,GAAG,KAAK,IAAI,EAAE;YACrC,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,MAAM,CAAC,8CAA8C,CAAC,CAAC;YACrF,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,KAAK,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;gBACjF,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;oBACnC,KAAK,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;iBACxC,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC;YACb,CAAC,CAAC,CAAC;YACH,IAAI,EAAE,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;QACxD,CAAC,CAAC;QAEF,YAAY,CAAC,OAAO,EAAE,gBAAgB,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QACrE,OAAO,GAAG,EAAE,CAAC,YAAY,EAAE,OAAO,EAAE,mBAAmB,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;IACvF,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;IAEzB,MAAM,YAAY,GAAG,GAAG,EAAE;QACzB,YAAY,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO;QACN,EAAE,EAAE,aAAa;QACjB,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;QACzB,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,YAAY;QACrB,QAAQ,EAAE,CAAC,iBAAiB,IAAI,QAAQ;KACxC,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { GenericMenuItemProps } from '@rocket.chat/ui-client';\nimport { useTranslation, useSetting } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport { useFileInput } from '../../../../../../hooks/useFileInput';\nimport { useChat } from '../../../../contexts/ChatContext';\n\nconst fileInputProps = { type: 'file', multiple: true };\n\nexport const useFileUploadAction = (disabled: boolean): GenericMenuItemProps => {\n\tconst t = useTranslation();\n\tconst fileUploadEnabled = useSetting('FileUpload_Enabled', true);\n\tconst fileInputRef = useFileInput(fileInputProps);\n\tconst chat = useChat();\n\n\tuseEffect(() => {\n\t\tconst resetFileInput = () => {\n\t\t\tif (!fileInputRef?.current) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfileInputRef.current.value = '';\n\t\t};\n\n\t\tconst handleUploadChange = async () => {\n\t\t\tconst { getMimeType } = await import('../../../../../../../app/utils/lib/mimeTypes');\n\t\t\tconst filesToUpload = Array.from(fileInputRef?.current?.files ?? []).map((file) => {\n\t\t\t\tObject.defineProperty(file, 'type', {\n\t\t\t\t\tvalue: getMimeType(file.type, file.name),\n\t\t\t\t});\n\t\t\t\treturn file;\n\t\t\t});\n\t\t\tchat?.flows.uploadFiles(filesToUpload, resetFileInput);\n\t\t};\n\n\t\tfileInputRef.current?.addEventListener('change', handleUploadChange);\n\t\treturn () => fileInputRef?.current?.removeEventListener('change', handleUploadChange);\n\t}, [chat, fileInputRef]);\n\n\tconst handleUpload = () => {\n\t\tfileInputRef?.current?.click();\n\t};\n\n\treturn {\n\t\tid: 'file-upload',\n\t\tcontent: t('Upload_file'),\n\t\ticon: 'clip',\n\t\tonClick: handleUpload,\n\t\tdisabled: !fileUploadEnabled || disabled,\n\t};\n};\n"]}}},"code":"module.export({\n  useFileUploadAction: () => useFileUploadAction\n});\nlet useTranslation, useSetting;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useTranslation(v) {\n    useTranslation = v;\n  },\n  useSetting(v) {\n    useSetting = v;\n  }\n}, 0);\nlet useEffect;\nmodule.link(\"react\", {\n  useEffect(v) {\n    useEffect = v;\n  }\n}, 1);\nlet useFileInput;\nmodule.link(\"../../../../../../hooks/useFileInput\", {\n  useFileInput(v) {\n    useFileInput = v;\n  }\n}, 2);\nlet useChat;\nmodule.link(\"../../../../contexts/ChatContext\", {\n  useChat(v) {\n    useChat = v;\n  }\n}, 3);\nconst fileInputProps = {\n  type: 'file',\n  multiple: true\n};\nconst useFileUploadAction = disabled => {\n  const t = useTranslation();\n  const fileUploadEnabled = useSetting('FileUpload_Enabled', true);\n  const fileInputRef = useFileInput(fileInputProps);\n  const chat = useChat();\n  useEffect(() => {\n    var _fileInputRef$current3;\n    const resetFileInput = () => {\n      if (!(fileInputRef !== null && fileInputRef !== void 0 && fileInputRef.current)) {\n        return;\n      }\n      fileInputRef.current.value = '';\n    };\n    const handleUploadChange = async () => {\n      var _fileInputRef$current, _fileInputRef$current2;\n      const {\n        getMimeType\n      } = await module.dynamicImport('../../../../../../../app/utils/lib/mimeTypes');\n      const filesToUpload = Array.from((_fileInputRef$current = fileInputRef === null || fileInputRef === void 0 ? void 0 : (_fileInputRef$current2 = fileInputRef.current) === null || _fileInputRef$current2 === void 0 ? void 0 : _fileInputRef$current2.files) !== null && _fileInputRef$current !== void 0 ? _fileInputRef$current : []).map(file => {\n        Object.defineProperty(file, 'type', {\n          value: getMimeType(file.type, file.name)\n        });\n        return file;\n      });\n      chat === null || chat === void 0 ? void 0 : chat.flows.uploadFiles(filesToUpload, resetFileInput);\n    };\n    (_fileInputRef$current3 = fileInputRef.current) === null || _fileInputRef$current3 === void 0 ? void 0 : _fileInputRef$current3.addEventListener('change', handleUploadChange);\n    return () => {\n      var _fileInputRef$current4;\n      return fileInputRef === null || fileInputRef === void 0 ? void 0 : (_fileInputRef$current4 = fileInputRef.current) === null || _fileInputRef$current4 === void 0 ? void 0 : _fileInputRef$current4.removeEventListener('change', handleUploadChange);\n    };\n  }, [chat, fileInputRef]);\n  const handleUpload = () => {\n    var _fileInputRef$current5;\n    fileInputRef === null || fileInputRef === void 0 ? void 0 : (_fileInputRef$current5 = fileInputRef.current) === null || _fileInputRef$current5 === void 0 ? void 0 : _fileInputRef$current5.click();\n  };\n  return {\n    id: 'file-upload',\n    content: t('Upload_file'),\n    icon: 'clip',\n    onClick: handleUpload,\n    disabled: !fileUploadEnabled || disabled\n  };\n};","map":{"version":3,"names":["module","export","useFileUploadAction","useTranslation","useSetting","link","v","useEffect","useFileInput","useChat","fileInputProps","type","multiple","disabled","t","fileUploadEnabled","fileInputRef","chat","_fileInputRef$current3","resetFileInput","current","value","handleUploadChange","_fileInputRef$current","_fileInputRef$current2","getMimeType","dynamicImport","filesToUpload","Array","from","files","map","file","Object","defineProperty","name","flows","uploadFiles","addEventListener","_fileInputRef$current4","removeEventListener","handleUpload","_fileInputRef$current5","click","id","content","icon","onClick"],"sources":["client/views/room/composer/messageBox/MessageBoxActionsToolbar/hooks/useFileUploadAction.ts"],"sourcesContent":["import type { GenericMenuItemProps } from '@rocket.chat/ui-client';\nimport { useTranslation, useSetting } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport { useFileInput } from '../../../../../../hooks/useFileInput';\nimport { useChat } from '../../../../contexts/ChatContext';\n\nconst fileInputProps = { type: 'file', multiple: true };\n\nexport const useFileUploadAction = (disabled: boolean): GenericMenuItemProps => {\n\tconst t = useTranslation();\n\tconst fileUploadEnabled = useSetting('FileUpload_Enabled', true);\n\tconst fileInputRef = useFileInput(fileInputProps);\n\tconst chat = useChat();\n\n\tuseEffect(() => {\n\t\tconst resetFileInput = () => {\n\t\t\tif (!fileInputRef?.current) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfileInputRef.current.value = '';\n\t\t};\n\n\t\tconst handleUploadChange = async () => {\n\t\t\tconst { getMimeType } = await import('../../../../../../../app/utils/lib/mimeTypes');\n\t\t\tconst filesToUpload = Array.from(fileInputRef?.current?.files ?? []).map((file) => {\n\t\t\t\tObject.defineProperty(file, 'type', {\n\t\t\t\t\tvalue: getMimeType(file.type, file.name),\n\t\t\t\t});\n\t\t\t\treturn file;\n\t\t\t});\n\t\t\tchat?.flows.uploadFiles(filesToUpload, resetFileInput);\n\t\t};\n\n\t\tfileInputRef.current?.addEventListener('change', handleUploadChange);\n\t\treturn () => fileInputRef?.current?.removeEventListener('change', handleUploadChange);\n\t}, [chat, fileInputRef]);\n\n\tconst handleUpload = () => {\n\t\tfileInputRef?.current?.click();\n\t};\n\n\treturn {\n\t\tid: 'file-upload',\n\t\tcontent: t('Upload_file'),\n\t\ticon: 'clip',\n\t\tonClick: handleUpload,\n\t\tdisabled: !fileUploadEnabled || disabled,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a91ee5965f863b59be1ae4731e4b1d939da6aa0e"}
