{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/lib/inquiries.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/lib/inquiries.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/lib/inquiries.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/lib/inquiries.ts","sourceRoot":"","sources":["app/livechat/server/api/lib/inquiries.ts"],"names":[],"mappings":"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","sourcesContent":["import { LivechatInquiryStatus } from '@rocket.chat/core-typings';\nimport type { ILivechatInquiryRecord, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { LivechatDepartmentAgents, LivechatDepartment, LivechatInquiry } from '@rocket.chat/models';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\nimport type { Filter } from 'mongodb';\n\nimport { getOmniChatSortQuery } from '../../../lib/inquiries';\nimport { getInquirySortMechanismSetting } from '../../lib/settings';\n\nconst agentDepartments = async (userId: IUser['_id']): Promise<string[]> => {\n\tconst agentDepartments = (await LivechatDepartmentAgents.findByAgentId(userId, { projection: { departmentId: 1 } }).toArray()).map(\n\t\t({ departmentId }) => departmentId,\n\t);\n\treturn (await LivechatDepartment.findEnabledInIds(agentDepartments, { projection: { _id: 1 } }).toArray()).map(({ _id }) => _id);\n};\n\nconst applyDepartmentRestrictions = async (\n\tuserId: IUser['_id'],\n\tfilterDepartment?: string,\n): Promise<{ $in: string[] } | { $exists: false } | string> => {\n\tconst allowedDepartments = await agentDepartments(userId);\n\tif (allowedDepartments && Array.isArray(allowedDepartments) && allowedDepartments.length > 0) {\n\t\tif (!filterDepartment) {\n\t\t\treturn { $in: allowedDepartments };\n\t\t}\n\n\t\tif (!allowedDepartments.includes(filterDepartment)) {\n\t\t\tthrow new Error('error-not-authorized');\n\t\t}\n\t\treturn filterDepartment;\n\t}\n\n\treturn { $exists: false };\n};\n\nexport async function findInquiries({\n\tuserId,\n\tdepartment: filterDepartment,\n\tstatus,\n\tpagination: { offset, count, sort },\n}: {\n\tuserId: IUser['_id'];\n\tdepartment?: string;\n\tstatus?: LivechatInquiryStatus;\n\tpagination: { offset: number; count: number; sort: Record<string, number> };\n}): Promise<PaginatedResult<{ inquiries: Array<ILivechatInquiryRecord> }>> {\n\tconst department = await applyDepartmentRestrictions(userId, filterDepartment);\n\tconst defaultSort = getOmniChatSortQuery(getInquirySortMechanismSetting());\n\tconst options = {\n\t\tlimit: count,\n\t\tskip: offset,\n\t\tsort: { ...sort, ...defaultSort },\n\t};\n\n\tconst filter: Filter<ILivechatInquiryRecord> = {\n\t\t// V in Enum only works for numeric enums\n\t\t...(status && Object.values(LivechatInquiryStatus).includes(status) && { status }),\n\t\t$or: [\n\t\t\t{\n\t\t\t\t$and: [{ defaultAgent: { $exists: true } }, { 'defaultAgent.agentId': userId }],\n\t\t\t},\n\t\t\t{ ...(department && { department }) },\n\t\t\t// Add _always_ the \"public queue\" to returned list of inquiries, even if agent already has departments\n\t\t\t{ department: { $exists: false } },\n\t\t],\n\t};\n\n\tconst { cursor, totalCount } = LivechatInquiry.findPaginated(filter, options);\n\n\tconst [inquiries, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tinquiries,\n\t\tcount: inquiries.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findOneInquiryByRoomId({ roomId }: { roomId: IRoom['_id'] }): Promise<{ inquiry: ILivechatInquiryRecord | null }> {\n\treturn {\n\t\tinquiry: await LivechatInquiry.findOneByRoomId(roomId, {}),\n\t};\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/lib/inquiries.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/lib/inquiries.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/lib/inquiries.ts","sourceRoot":"","sources":["app/livechat/server/api/lib/inquiries.ts"],"names":[],"mappings":"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","sourcesContent":["import { LivechatInquiryStatus } from '@rocket.chat/core-typings';\nimport type { ILivechatInquiryRecord, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { LivechatDepartmentAgents, LivechatDepartment, LivechatInquiry } from '@rocket.chat/models';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\nimport type { Filter } from 'mongodb';\n\nimport { getOmniChatSortQuery } from '../../../lib/inquiries';\nimport { getInquirySortMechanismSetting } from '../../lib/settings';\n\nconst agentDepartments = async (userId: IUser['_id']): Promise<string[]> => {\n\tconst agentDepartments = (await LivechatDepartmentAgents.findByAgentId(userId, { projection: { departmentId: 1 } }).toArray()).map(\n\t\t({ departmentId }) => departmentId,\n\t);\n\treturn (await LivechatDepartment.findEnabledInIds(agentDepartments, { projection: { _id: 1 } }).toArray()).map(({ _id }) => _id);\n};\n\nconst applyDepartmentRestrictions = async (\n\tuserId: IUser['_id'],\n\tfilterDepartment?: string,\n): Promise<{ $in: string[] } | { $exists: false } | string> => {\n\tconst allowedDepartments = await agentDepartments(userId);\n\tif (allowedDepartments && Array.isArray(allowedDepartments) && allowedDepartments.length > 0) {\n\t\tif (!filterDepartment) {\n\t\t\treturn { $in: allowedDepartments };\n\t\t}\n\n\t\tif (!allowedDepartments.includes(filterDepartment)) {\n\t\t\tthrow new Error('error-not-authorized');\n\t\t}\n\t\treturn filterDepartment;\n\t}\n\n\treturn { $exists: false };\n};\n\nexport async function findInquiries({\n\tuserId,\n\tdepartment: filterDepartment,\n\tstatus,\n\tpagination: { offset, count, sort },\n}: {\n\tuserId: IUser['_id'];\n\tdepartment?: string;\n\tstatus?: LivechatInquiryStatus;\n\tpagination: { offset: number; count: number; sort: Record<string, number> };\n}): Promise<PaginatedResult<{ inquiries: Array<ILivechatInquiryRecord> }>> {\n\tconst department = await applyDepartmentRestrictions(userId, filterDepartment);\n\tconst defaultSort = getOmniChatSortQuery(getInquirySortMechanismSetting());\n\tconst options = {\n\t\tlimit: count,\n\t\tskip: offset,\n\t\tsort: { ...sort, ...defaultSort },\n\t};\n\n\tconst filter: Filter<ILivechatInquiryRecord> = {\n\t\t// V in Enum only works for numeric enums\n\t\t...(status && Object.values(LivechatInquiryStatus).includes(status) && { status }),\n\t\t$or: [\n\t\t\t{\n\t\t\t\t$and: [{ defaultAgent: { $exists: true } }, { 'defaultAgent.agentId': userId }],\n\t\t\t},\n\t\t\t{ ...(department && { department }) },\n\t\t\t// Add _always_ the \"public queue\" to returned list of inquiries, even if agent already has departments\n\t\t\t{ department: { $exists: false } },\n\t\t],\n\t};\n\n\tconst { cursor, totalCount } = LivechatInquiry.findPaginated(filter, options);\n\n\tconst [inquiries, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tinquiries,\n\t\tcount: inquiries.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findOneInquiryByRoomId({ roomId }: { roomId: IRoom['_id'] }): Promise<{ inquiry: ILivechatInquiryRecord | null }> {\n\treturn {\n\t\tinquiry: await LivechatInquiry.findOneByRoomId(roomId, {}),\n\t};\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      findInquiries: () => findInquiries,\n      findOneInquiryByRoomId: () => findOneInquiryByRoomId\n    });\n    let LivechatInquiryStatus;\n    module.link(\"@rocket.chat/core-typings\", {\n      LivechatInquiryStatus(v) {\n        LivechatInquiryStatus = v;\n      }\n    }, 0);\n    let LivechatDepartmentAgents, LivechatDepartment, LivechatInquiry;\n    module.link(\"@rocket.chat/models\", {\n      LivechatDepartmentAgents(v) {\n        LivechatDepartmentAgents = v;\n      },\n      LivechatDepartment(v) {\n        LivechatDepartment = v;\n      },\n      LivechatInquiry(v) {\n        LivechatInquiry = v;\n      }\n    }, 1);\n    let getOmniChatSortQuery;\n    module.link(\"../../../lib/inquiries\", {\n      getOmniChatSortQuery(v) {\n        getOmniChatSortQuery = v;\n      }\n    }, 2);\n    let getInquirySortMechanismSetting;\n    module.link(\"../../lib/settings\", {\n      getInquirySortMechanismSetting(v) {\n        getInquirySortMechanismSetting = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const agentDepartments = async userId => {\n      const agentDepartments = (await LivechatDepartmentAgents.findByAgentId(userId, {\n        projection: {\n          departmentId: 1\n        }\n      }).toArray()).map(_ref => {\n        let {\n          departmentId\n        } = _ref;\n        return departmentId;\n      });\n      return (await LivechatDepartment.findEnabledInIds(agentDepartments, {\n        projection: {\n          _id: 1\n        }\n      }).toArray()).map(_ref2 => {\n        let {\n          _id\n        } = _ref2;\n        return _id;\n      });\n    };\n    const applyDepartmentRestrictions = async (userId, filterDepartment) => {\n      const allowedDepartments = await agentDepartments(userId);\n      if (allowedDepartments && Array.isArray(allowedDepartments) && allowedDepartments.length > 0) {\n        if (!filterDepartment) {\n          return {\n            $in: allowedDepartments\n          };\n        }\n        if (!allowedDepartments.includes(filterDepartment)) {\n          throw new Error('error-not-authorized');\n        }\n        return filterDepartment;\n      }\n      return {\n        $exists: false\n      };\n    };\n    async function findInquiries(_ref3) {\n      let {\n        userId,\n        department: filterDepartment,\n        status,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref3;\n      const department = await applyDepartmentRestrictions(userId, filterDepartment);\n      const defaultSort = getOmniChatSortQuery(getInquirySortMechanismSetting());\n      const options = {\n        limit: count,\n        skip: offset,\n        sort: _objectSpread(_objectSpread({}, sort), defaultSort)\n      };\n      const filter = _objectSpread(_objectSpread({}, status && Object.values(LivechatInquiryStatus).includes(status) && {\n        status\n      }), {}, {\n        $or: [{\n          $and: [{\n            defaultAgent: {\n              $exists: true\n            }\n          }, {\n            'defaultAgent.agentId': userId\n          }]\n        }, _objectSpread({}, department && {\n          department\n        }),\n        // Add _always_ the \"public queue\" to returned list of inquiries, even if agent already has departments\n        {\n          department: {\n            $exists: false\n          }\n        }]\n      });\n      const {\n        cursor,\n        totalCount\n      } = LivechatInquiry.findPaginated(filter, options);\n      const [inquiries, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        inquiries,\n        count: inquiries.length,\n        offset,\n        total\n      };\n    }\n    async function findOneInquiryByRoomId(_ref4) {\n      let {\n        roomId\n      } = _ref4;\n      return {\n        inquiry: await LivechatInquiry.findOneByRoomId(roomId, {})\n      };\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","findInquiries","findOneInquiryByRoomId","LivechatInquiryStatus","LivechatDepartmentAgents","LivechatDepartment","LivechatInquiry","getOmniChatSortQuery","getInquirySortMechanismSetting","__reifyWaitForDeps__","agentDepartments","userId","findByAgentId","projection","departmentId","toArray","map","_ref","findEnabledInIds","_id","_ref2","applyDepartmentRestrictions","filterDepartment","allowedDepartments","Array","isArray","length","$in","includes","Error","$exists","_ref3","department","status","pagination","offset","count","sort","defaultSort","options","limit","skip","filter","Object","values","$or","$and","defaultAgent","cursor","totalCount","findPaginated","inquiries","total","Promise","all","_ref4","roomId","inquiry","findOneByRoomId","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/api/lib/inquiries.ts"],"sourcesContent":["import { LivechatInquiryStatus } from '@rocket.chat/core-typings';\nimport type { ILivechatInquiryRecord, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { LivechatDepartmentAgents, LivechatDepartment, LivechatInquiry } from '@rocket.chat/models';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\nimport type { Filter } from 'mongodb';\n\nimport { getOmniChatSortQuery } from '../../../lib/inquiries';\nimport { getInquirySortMechanismSetting } from '../../lib/settings';\n\nconst agentDepartments = async (userId: IUser['_id']): Promise<string[]> => {\n\tconst agentDepartments = (await LivechatDepartmentAgents.findByAgentId(userId, { projection: { departmentId: 1 } }).toArray()).map(\n\t\t({ departmentId }) => departmentId,\n\t);\n\treturn (await LivechatDepartment.findEnabledInIds(agentDepartments, { projection: { _id: 1 } }).toArray()).map(({ _id }) => _id);\n};\n\nconst applyDepartmentRestrictions = async (\n\tuserId: IUser['_id'],\n\tfilterDepartment?: string,\n): Promise<{ $in: string[] } | { $exists: false } | string> => {\n\tconst allowedDepartments = await agentDepartments(userId);\n\tif (allowedDepartments && Array.isArray(allowedDepartments) && allowedDepartments.length > 0) {\n\t\tif (!filterDepartment) {\n\t\t\treturn { $in: allowedDepartments };\n\t\t}\n\n\t\tif (!allowedDepartments.includes(filterDepartment)) {\n\t\t\tthrow new Error('error-not-authorized');\n\t\t}\n\t\treturn filterDepartment;\n\t}\n\n\treturn { $exists: false };\n};\n\nexport async function findInquiries({\n\tuserId,\n\tdepartment: filterDepartment,\n\tstatus,\n\tpagination: { offset, count, sort },\n}: {\n\tuserId: IUser['_id'];\n\tdepartment?: string;\n\tstatus?: LivechatInquiryStatus;\n\tpagination: { offset: number; count: number; sort: Record<string, number> };\n}): Promise<PaginatedResult<{ inquiries: Array<ILivechatInquiryRecord> }>> {\n\tconst department = await applyDepartmentRestrictions(userId, filterDepartment);\n\tconst defaultSort = getOmniChatSortQuery(getInquirySortMechanismSetting());\n\tconst options = {\n\t\tlimit: count,\n\t\tskip: offset,\n\t\tsort: { ...sort, ...defaultSort },\n\t};\n\n\tconst filter: Filter<ILivechatInquiryRecord> = {\n\t\t// V in Enum only works for numeric enums\n\t\t...(status && Object.values(LivechatInquiryStatus).includes(status) && { status }),\n\t\t$or: [\n\t\t\t{\n\t\t\t\t$and: [{ defaultAgent: { $exists: true } }, { 'defaultAgent.agentId': userId }],\n\t\t\t},\n\t\t\t{ ...(department && { department }) },\n\t\t\t// Add _always_ the \"public queue\" to returned list of inquiries, even if agent already has departments\n\t\t\t{ department: { $exists: false } },\n\t\t],\n\t};\n\n\tconst { cursor, totalCount } = LivechatInquiry.findPaginated(filter, options);\n\n\tconst [inquiries, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tinquiries,\n\t\tcount: inquiries.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findOneInquiryByRoomId({ roomId }: { roomId: IRoom['_id'] }): Promise<{ inquiry: ILivechatInquiryRecord | null }> {\n\treturn {\n\t\tinquiry: await LivechatInquiry.findOneByRoomId(roomId, {}),\n\t};\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c9be54b6c184aec0b57804616a210ce9c4f0b545"}
