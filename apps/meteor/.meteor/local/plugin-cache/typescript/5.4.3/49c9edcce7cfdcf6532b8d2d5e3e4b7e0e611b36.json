{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/directory/tabs/users/UsersTable/UsersTableRow.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/directory/tabs/users/UsersTable/UsersTableRow.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/directory/tabs/users/UsersTable/UsersTableRow.tsx","inputSourceMap":{"version":3,"file":"client/views/directory/tabs/users/UsersTable/UsersTableRow.tsx","sourceRoot":"","sources":["client/views/directory/tabs/users/UsersTable/UsersTableRow.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IUser, Serialized } from '@rocket.chat/core-typings';\nimport { Box, Flex } from '@rocket.chat/fuselage';\nimport { UserAvatar } from '@rocket.chat/ui-avatar';\nimport React from 'react';\n\nimport { GenericTableRow, GenericTableCell } from '../../../../../components/GenericTable';\nimport MarkdownText from '../../../../../components/MarkdownText';\nimport { useFormatDate } from '../../../../../hooks/useFormatDate';\n\ntype UsersTableRowProps = {\n\tuser: Serialized<IUser> & { domain?: string };\n\tonClick: (username: IUser['username']) => (e: React.KeyboardEvent | React.MouseEvent) => void;\n\tmediaQuery: boolean;\n\tfederation: boolean;\n\tcanViewFullOtherUserInfo: boolean;\n};\n\nconst UsersTableRow = ({\n\tuser: { createdAt, emails, domain, _id, username, name, bio, avatarETag, nickname },\n\tonClick,\n\tmediaQuery,\n\tfederation,\n\tcanViewFullOtherUserInfo,\n}: UsersTableRowProps) => {\n\tconst formatDate = useFormatDate();\n\n\treturn (\n\t\t<GenericTableRow key={_id} onKeyDown={onClick(username)} onClick={onClick(username)} tabIndex={0} role='link' action>\n\t\t\t<GenericTableCell>\n\t\t\t\t<Flex.Container>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Flex.Item>{username && <UserAvatar size='x40' title={username} username={username} etag={avatarETag} />}</Flex.Item>\n\t\t\t\t\t\t<Box withTruncatedText mi={8}>\n\t\t\t\t\t\t\t<Box display='flex'>\n\t\t\t\t\t\t\t\t<Box fontScale='p2m' withTruncatedText>\n\t\t\t\t\t\t\t\t\t{name || username}\n\t\t\t\t\t\t\t\t\t{nickname && ` (${nickname})`}\n\t\t\t\t\t\t\t\t</Box>{' '}\n\t\t\t\t\t\t\t\t<Box mi={4} />{' '}\n\t\t\t\t\t\t\t\t<Box fontScale='p2' color='hint' withTruncatedText>\n\t\t\t\t\t\t\t\t\t{username}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<MarkdownText variant='inline' fontScale='p2' color='hint' content={bio} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Flex.Container>\n\t\t\t</GenericTableCell>\n\t\t\t{mediaQuery && canViewFullOtherUserInfo && (\n\t\t\t\t<GenericTableCell withTruncatedText>{emails?.length && emails[0].address}</GenericTableCell>\n\t\t\t)}\n\t\t\t{federation && <GenericTableCell withTruncatedText>{domain}</GenericTableCell>}\n\t\t\t{mediaQuery && (\n\t\t\t\t<GenericTableCell fontScale='p2' color='hint' withTruncatedText>\n\t\t\t\t\t{formatDate(createdAt)}\n\t\t\t\t</GenericTableCell>\n\t\t\t)}\n\t\t</GenericTableRow>\n\t);\n};\n\nexport default UsersTableRow;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/directory/tabs/users/UsersTable/UsersTableRow.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/directory/tabs/users/UsersTable/UsersTableRow.tsx","inputSourceMap":{"version":3,"file":"client/views/directory/tabs/users/UsersTable/UsersTableRow.tsx","sourceRoot":"","sources":["client/views/directory/tabs/users/UsersTable/UsersTableRow.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IUser, Serialized } from '@rocket.chat/core-typings';\nimport { Box, Flex } from '@rocket.chat/fuselage';\nimport { UserAvatar } from '@rocket.chat/ui-avatar';\nimport React from 'react';\n\nimport { GenericTableRow, GenericTableCell } from '../../../../../components/GenericTable';\nimport MarkdownText from '../../../../../components/MarkdownText';\nimport { useFormatDate } from '../../../../../hooks/useFormatDate';\n\ntype UsersTableRowProps = {\n\tuser: Serialized<IUser> & { domain?: string };\n\tonClick: (username: IUser['username']) => (e: React.KeyboardEvent | React.MouseEvent) => void;\n\tmediaQuery: boolean;\n\tfederation: boolean;\n\tcanViewFullOtherUserInfo: boolean;\n};\n\nconst UsersTableRow = ({\n\tuser: { createdAt, emails, domain, _id, username, name, bio, avatarETag, nickname },\n\tonClick,\n\tmediaQuery,\n\tfederation,\n\tcanViewFullOtherUserInfo,\n}: UsersTableRowProps) => {\n\tconst formatDate = useFormatDate();\n\n\treturn (\n\t\t<GenericTableRow key={_id} onKeyDown={onClick(username)} onClick={onClick(username)} tabIndex={0} role='link' action>\n\t\t\t<GenericTableCell>\n\t\t\t\t<Flex.Container>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Flex.Item>{username && <UserAvatar size='x40' title={username} username={username} etag={avatarETag} />}</Flex.Item>\n\t\t\t\t\t\t<Box withTruncatedText mi={8}>\n\t\t\t\t\t\t\t<Box display='flex'>\n\t\t\t\t\t\t\t\t<Box fontScale='p2m' withTruncatedText>\n\t\t\t\t\t\t\t\t\t{name || username}\n\t\t\t\t\t\t\t\t\t{nickname && ` (${nickname})`}\n\t\t\t\t\t\t\t\t</Box>{' '}\n\t\t\t\t\t\t\t\t<Box mi={4} />{' '}\n\t\t\t\t\t\t\t\t<Box fontScale='p2' color='hint' withTruncatedText>\n\t\t\t\t\t\t\t\t\t{username}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<MarkdownText variant='inline' fontScale='p2' color='hint' content={bio} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Flex.Container>\n\t\t\t</GenericTableCell>\n\t\t\t{mediaQuery && canViewFullOtherUserInfo && (\n\t\t\t\t<GenericTableCell withTruncatedText>{emails?.length && emails[0].address}</GenericTableCell>\n\t\t\t)}\n\t\t\t{federation && <GenericTableCell withTruncatedText>{domain}</GenericTableCell>}\n\t\t\t{mediaQuery && (\n\t\t\t\t<GenericTableCell fontScale='p2' color='hint' withTruncatedText>\n\t\t\t\t\t{formatDate(createdAt)}\n\t\t\t\t</GenericTableCell>\n\t\t\t)}\n\t\t</GenericTableRow>\n\t);\n};\n\nexport default UsersTableRow;\n"]}}},"code":"var Box, Flex;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box: function (v) {\n    Box = v;\n  },\n  Flex: function (v) {\n    Flex = v;\n  }\n}, 0);\nvar UserAvatar;\nmodule.link(\"@rocket.chat/ui-avatar\", {\n  UserAvatar: function (v) {\n    UserAvatar = v;\n  }\n}, 1);\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 2);\nvar GenericTableRow, GenericTableCell;\nmodule.link(\"../../../../../components/GenericTable\", {\n  GenericTableRow: function (v) {\n    GenericTableRow = v;\n  },\n  GenericTableCell: function (v) {\n    GenericTableCell = v;\n  }\n}, 3);\nvar MarkdownText;\nmodule.link(\"../../../../../components/MarkdownText\", {\n  \"default\": function (v) {\n    MarkdownText = v;\n  }\n}, 4);\nvar useFormatDate;\nmodule.link(\"../../../../../hooks/useFormatDate\", {\n  useFormatDate: function (v) {\n    useFormatDate = v;\n  }\n}, 5);\nvar UsersTableRow = function (_ref) {\n  var _ref$user = _ref.user,\n    createdAt = _ref$user.createdAt,\n    emails = _ref$user.emails,\n    domain = _ref$user.domain,\n    _id = _ref$user._id,\n    username = _ref$user.username,\n    name = _ref$user.name,\n    bio = _ref$user.bio,\n    avatarETag = _ref$user.avatarETag,\n    nickname = _ref$user.nickname,\n    onClick = _ref.onClick,\n    mediaQuery = _ref.mediaQuery,\n    federation = _ref.federation,\n    canViewFullOtherUserInfo = _ref.canViewFullOtherUserInfo;\n  var formatDate = useFormatDate();\n  return /*#__PURE__*/React.createElement(GenericTableRow, {\n    key: _id,\n    onKeyDown: onClick(username),\n    onClick: onClick(username),\n    tabIndex: 0,\n    role: \"link\",\n    action: true\n  }, /*#__PURE__*/React.createElement(GenericTableCell, null, /*#__PURE__*/React.createElement(Flex.Container, null, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Flex.Item, null, username && /*#__PURE__*/React.createElement(UserAvatar, {\n    size: \"x40\",\n    title: username,\n    username: username,\n    etag: avatarETag\n  })), /*#__PURE__*/React.createElement(Box, {\n    withTruncatedText: true,\n    mi: 8\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    fontScale: \"p2m\",\n    withTruncatedText: true\n  }, name || username, nickname && \" (\" + nickname + \")\"), ' ', /*#__PURE__*/React.createElement(Box, {\n    mi: 4\n  }), ' ', /*#__PURE__*/React.createElement(Box, {\n    fontScale: \"p2\",\n    color: \"hint\",\n    withTruncatedText: true\n  }, username)), /*#__PURE__*/React.createElement(MarkdownText, {\n    variant: \"inline\",\n    fontScale: \"p2\",\n    color: \"hint\",\n    content: bio\n  }))))), mediaQuery && canViewFullOtherUserInfo && /*#__PURE__*/React.createElement(GenericTableCell, {\n    withTruncatedText: true\n  }, (emails === null || emails === void 0 ? void 0 : emails.length) && emails[0].address), federation && /*#__PURE__*/React.createElement(GenericTableCell, {\n    withTruncatedText: true\n  }, domain), mediaQuery && /*#__PURE__*/React.createElement(GenericTableCell, {\n    fontScale: \"p2\",\n    color: \"hint\",\n    withTruncatedText: true\n  }, formatDate(createdAt)));\n};\nmodule.exportDefault(UsersTableRow);","map":{"version":3,"names":["Box","Flex","module","link","v","UserAvatar","React","default","GenericTableRow","GenericTableCell","MarkdownText","useFormatDate","UsersTableRow","_ref","_ref$user","user","createdAt","emails","domain","_id","username","name","bio","avatarETag","nickname","onClick","mediaQuery","federation","canViewFullOtherUserInfo","formatDate","createElement","key","onKeyDown","tabIndex","role","action","Container","Item","size","title","etag","withTruncatedText","mi","display","fontScale","color","variant","content","length","address","exportDefault"],"sources":["client/views/directory/tabs/users/UsersTable/UsersTableRow.tsx"],"sourcesContent":["import type { IUser, Serialized } from '@rocket.chat/core-typings';\nimport { Box, Flex } from '@rocket.chat/fuselage';\nimport { UserAvatar } from '@rocket.chat/ui-avatar';\nimport React from 'react';\n\nimport { GenericTableRow, GenericTableCell } from '../../../../../components/GenericTable';\nimport MarkdownText from '../../../../../components/MarkdownText';\nimport { useFormatDate } from '../../../../../hooks/useFormatDate';\n\ntype UsersTableRowProps = {\n\tuser: Serialized<IUser> & { domain?: string };\n\tonClick: (username: IUser['username']) => (e: React.KeyboardEvent | React.MouseEvent) => void;\n\tmediaQuery: boolean;\n\tfederation: boolean;\n\tcanViewFullOtherUserInfo: boolean;\n};\n\nconst UsersTableRow = ({\n\tuser: { createdAt, emails, domain, _id, username, name, bio, avatarETag, nickname },\n\tonClick,\n\tmediaQuery,\n\tfederation,\n\tcanViewFullOtherUserInfo,\n}: UsersTableRowProps) => {\n\tconst formatDate = useFormatDate();\n\n\treturn (\n\t\t<GenericTableRow key={_id} onKeyDown={onClick(username)} onClick={onClick(username)} tabIndex={0} role='link' action>\n\t\t\t<GenericTableCell>\n\t\t\t\t<Flex.Container>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Flex.Item>{username && <UserAvatar size='x40' title={username} username={username} etag={avatarETag} />}</Flex.Item>\n\t\t\t\t\t\t<Box withTruncatedText mi={8}>\n\t\t\t\t\t\t\t<Box display='flex'>\n\t\t\t\t\t\t\t\t<Box fontScale='p2m' withTruncatedText>\n\t\t\t\t\t\t\t\t\t{name || username}\n\t\t\t\t\t\t\t\t\t{nickname && ` (${nickname})`}\n\t\t\t\t\t\t\t\t</Box>{' '}\n\t\t\t\t\t\t\t\t<Box mi={4} />{' '}\n\t\t\t\t\t\t\t\t<Box fontScale='p2' color='hint' withTruncatedText>\n\t\t\t\t\t\t\t\t\t{username}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<MarkdownText variant='inline' fontScale='p2' color='hint' content={bio} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Flex.Container>\n\t\t\t</GenericTableCell>\n\t\t\t{mediaQuery && canViewFullOtherUserInfo && (\n\t\t\t\t<GenericTableCell withTruncatedText>{emails?.length && emails[0].address}</GenericTableCell>\n\t\t\t)}\n\t\t\t{federation && <GenericTableCell withTruncatedText>{domain}</GenericTableCell>}\n\t\t\t{mediaQuery && (\n\t\t\t\t<GenericTableCell fontScale='p2' color='hint' withTruncatedText>\n\t\t\t\t\t{formatDate(createdAt)}\n\t\t\t\t</GenericTableCell>\n\t\t\t)}\n\t\t</GenericTableRow>\n\t);\n};\n\nexport default UsersTableRow;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"49c9edcce7cfdcf6532b8d2d5e3e4b7e0e611b36"}
