{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/classes/converters/ConverterCache.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/importer/server/classes/converters/ConverterCache.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/classes/converters/ConverterCache.ts","inputSourceMap":{"version":3,"file":"app/importer/server/classes/converters/ConverterCache.ts","sourceRoot":"","sources":["app/importer/server/classes/converters/ConverterCache.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IImportUser } from '@rocket.chat/core-typings';\nimport { Rooms, Users } from '@rocket.chat/models';\n\nexport type UserIdentification = {\n\t_id: string;\n\tusername: string | undefined;\n};\n\nexport type MentionedChannel = {\n\t_id: string;\n\tname: string;\n};\n\nexport class ConverterCache {\n\tprivate _userCache = new Map<string, UserIdentification>();\n\n\t// display name uses a different cache because it's only used on mentions so we don't need to load it every time we load an user\n\tprivate _userDisplayNameCache = new Map<string, string>();\n\n\tprivate _roomCache = new Map<string, string>();\n\n\tprivate _roomNameCache = new Map<string, string>();\n\n\taddUser(importId: string, _id: string, username: string | undefined): UserIdentification {\n\t\tconst cache = {\n\t\t\t_id,\n\t\t\tusername,\n\t\t};\n\n\t\tthis._userCache.set(importId, cache);\n\t\treturn cache;\n\t}\n\n\taddUserDisplayName(importId: string, name: string): string {\n\t\tthis._userDisplayNameCache.set(importId, name);\n\t\treturn name;\n\t}\n\n\taddRoom(importId: string, rid: string): string {\n\t\tthis._roomCache.set(importId, rid);\n\t\treturn rid;\n\t}\n\n\taddRoomName(importId: string, name: string): string {\n\t\tthis._roomNameCache.set(importId, name);\n\t\treturn name;\n\t}\n\n\taddUserData(userData: IImportUser): void {\n\t\tif (!userData._id) {\n\t\t\treturn;\n\t\t}\n\t\tif (!userData.importIds.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addUser(userData.importIds[0], userData._id, userData.username);\n\t}\n\n\tasync findImportedRoomId(importId: string): Promise<string | null> {\n\t\tif (this._roomCache.has(importId)) {\n\t\t\treturn this._roomCache.get(importId) as string;\n\t\t}\n\n\t\tconst options = {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t},\n\t\t};\n\n\t\tconst room = await Rooms.findOneByImportId(importId, options);\n\t\tif (room) {\n\t\t\treturn this.addRoom(importId, room._id);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync findImportedRoomName(importId: string): Promise<string | undefined> {\n\t\tif (this._roomNameCache.has(importId)) {\n\t\t\treturn this._roomNameCache.get(importId) as string;\n\t\t}\n\n\t\tconst options = {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tname: 1,\n\t\t\t},\n\t\t};\n\n\t\tconst room = await Rooms.findOneByImportId(importId, options);\n\t\tif (room) {\n\t\t\tif (!this._roomCache.has(importId)) {\n\t\t\t\tthis.addRoom(importId, room._id);\n\t\t\t}\n\t\t\tif (room?.name) {\n\t\t\t\treturn this.addRoomName(importId, room.name);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync findImportedUser(importId: string): Promise<UserIdentification | null> {\n\t\tif (importId === 'rocket.cat') {\n\t\t\treturn {\n\t\t\t\t_id: 'rocket.cat',\n\t\t\t\tusername: 'rocket.cat',\n\t\t\t};\n\t\t}\n\n\t\tconst options = {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tusername: 1,\n\t\t\t},\n\t\t};\n\n\t\tif (this._userCache.has(importId)) {\n\t\t\treturn this._userCache.get(importId) as UserIdentification;\n\t\t}\n\n\t\tconst user = await Users.findOneByImportId(importId, options);\n\t\tif (user) {\n\t\t\treturn this.addUser(importId, user._id, user.username);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync findImportedUserId(_id: string): Promise<string | undefined> {\n\t\tconst data = await this.findImportedUser(_id);\n\t\treturn data?._id;\n\t}\n\n\tasync findImportedUsername(_id: string): Promise<string | undefined> {\n\t\tconst data = await this.findImportedUser(_id);\n\t\treturn data?.username;\n\t}\n\n\tasync findImportedUserDisplayName(importId: string): Promise<string | undefined> {\n\t\tconst options = {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tname: 1,\n\t\t\t\tusername: 1,\n\t\t\t},\n\t\t};\n\n\t\tif (this._userDisplayNameCache.has(importId)) {\n\t\t\treturn this._userDisplayNameCache.get(importId);\n\t\t}\n\n\t\tconst user =\n\t\t\timportId === 'rocket.cat' ? await Users.findOneById('rocket.cat', options) : await Users.findOneByImportId(importId, options);\n\t\tif (user) {\n\t\t\tif (!this._userCache.has(importId)) {\n\t\t\t\tthis.addUser(importId, user._id, user.username);\n\t\t\t}\n\n\t\t\tif (!user.name) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn this.addUserDisplayName(importId, user.name);\n\t\t}\n\t}\n\n\tasync convertImportedIdsToUsernames(importedIds: Array<string>, idToRemove: string | undefined = undefined): Promise<Array<string>> {\n\t\treturn (\n\t\t\tawait Promise.all(\n\t\t\t\timportedIds.map(async (user) => {\n\t\t\t\t\tif (user === 'rocket.cat') {\n\t\t\t\t\t\treturn user;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._userCache.has(user)) {\n\t\t\t\t\t\tconst cache = this._userCache.get(user);\n\t\t\t\t\t\tif (cache) {\n\t\t\t\t\t\t\treturn cache.username;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst obj = await Users.findOneByImportId(user, { projection: { _id: 1, username: 1 } });\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tthis.addUser(user, obj._id, obj.username);\n\n\t\t\t\t\t\tif (idToRemove && obj._id === idToRemove) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn obj.username;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}),\n\t\t\t)\n\t\t).filter((user) => user) as string[];\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/classes/converters/ConverterCache.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/importer/server/classes/converters/ConverterCache.ts","inputSourceMap":{"version":3,"file":"app/importer/server/classes/converters/ConverterCache.ts","sourceRoot":"","sources":["app/importer/server/classes/converters/ConverterCache.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IImportUser } from '@rocket.chat/core-typings';\nimport { Rooms, Users } from '@rocket.chat/models';\n\nexport type UserIdentification = {\n\t_id: string;\n\tusername: string | undefined;\n};\n\nexport type MentionedChannel = {\n\t_id: string;\n\tname: string;\n};\n\nexport class ConverterCache {\n\tprivate _userCache = new Map<string, UserIdentification>();\n\n\t// display name uses a different cache because it's only used on mentions so we don't need to load it every time we load an user\n\tprivate _userDisplayNameCache = new Map<string, string>();\n\n\tprivate _roomCache = new Map<string, string>();\n\n\tprivate _roomNameCache = new Map<string, string>();\n\n\taddUser(importId: string, _id: string, username: string | undefined): UserIdentification {\n\t\tconst cache = {\n\t\t\t_id,\n\t\t\tusername,\n\t\t};\n\n\t\tthis._userCache.set(importId, cache);\n\t\treturn cache;\n\t}\n\n\taddUserDisplayName(importId: string, name: string): string {\n\t\tthis._userDisplayNameCache.set(importId, name);\n\t\treturn name;\n\t}\n\n\taddRoom(importId: string, rid: string): string {\n\t\tthis._roomCache.set(importId, rid);\n\t\treturn rid;\n\t}\n\n\taddRoomName(importId: string, name: string): string {\n\t\tthis._roomNameCache.set(importId, name);\n\t\treturn name;\n\t}\n\n\taddUserData(userData: IImportUser): void {\n\t\tif (!userData._id) {\n\t\t\treturn;\n\t\t}\n\t\tif (!userData.importIds.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addUser(userData.importIds[0], userData._id, userData.username);\n\t}\n\n\tasync findImportedRoomId(importId: string): Promise<string | null> {\n\t\tif (this._roomCache.has(importId)) {\n\t\t\treturn this._roomCache.get(importId) as string;\n\t\t}\n\n\t\tconst options = {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t},\n\t\t};\n\n\t\tconst room = await Rooms.findOneByImportId(importId, options);\n\t\tif (room) {\n\t\t\treturn this.addRoom(importId, room._id);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync findImportedRoomName(importId: string): Promise<string | undefined> {\n\t\tif (this._roomNameCache.has(importId)) {\n\t\t\treturn this._roomNameCache.get(importId) as string;\n\t\t}\n\n\t\tconst options = {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tname: 1,\n\t\t\t},\n\t\t};\n\n\t\tconst room = await Rooms.findOneByImportId(importId, options);\n\t\tif (room) {\n\t\t\tif (!this._roomCache.has(importId)) {\n\t\t\t\tthis.addRoom(importId, room._id);\n\t\t\t}\n\t\t\tif (room?.name) {\n\t\t\t\treturn this.addRoomName(importId, room.name);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync findImportedUser(importId: string): Promise<UserIdentification | null> {\n\t\tif (importId === 'rocket.cat') {\n\t\t\treturn {\n\t\t\t\t_id: 'rocket.cat',\n\t\t\t\tusername: 'rocket.cat',\n\t\t\t};\n\t\t}\n\n\t\tconst options = {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tusername: 1,\n\t\t\t},\n\t\t};\n\n\t\tif (this._userCache.has(importId)) {\n\t\t\treturn this._userCache.get(importId) as UserIdentification;\n\t\t}\n\n\t\tconst user = await Users.findOneByImportId(importId, options);\n\t\tif (user) {\n\t\t\treturn this.addUser(importId, user._id, user.username);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync findImportedUserId(_id: string): Promise<string | undefined> {\n\t\tconst data = await this.findImportedUser(_id);\n\t\treturn data?._id;\n\t}\n\n\tasync findImportedUsername(_id: string): Promise<string | undefined> {\n\t\tconst data = await this.findImportedUser(_id);\n\t\treturn data?.username;\n\t}\n\n\tasync findImportedUserDisplayName(importId: string): Promise<string | undefined> {\n\t\tconst options = {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tname: 1,\n\t\t\t\tusername: 1,\n\t\t\t},\n\t\t};\n\n\t\tif (this._userDisplayNameCache.has(importId)) {\n\t\t\treturn this._userDisplayNameCache.get(importId);\n\t\t}\n\n\t\tconst user =\n\t\t\timportId === 'rocket.cat' ? await Users.findOneById('rocket.cat', options) : await Users.findOneByImportId(importId, options);\n\t\tif (user) {\n\t\t\tif (!this._userCache.has(importId)) {\n\t\t\t\tthis.addUser(importId, user._id, user.username);\n\t\t\t}\n\n\t\t\tif (!user.name) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn this.addUserDisplayName(importId, user.name);\n\t\t}\n\t}\n\n\tasync convertImportedIdsToUsernames(importedIds: Array<string>, idToRemove: string | undefined = undefined): Promise<Array<string>> {\n\t\treturn (\n\t\t\tawait Promise.all(\n\t\t\t\timportedIds.map(async (user) => {\n\t\t\t\t\tif (user === 'rocket.cat') {\n\t\t\t\t\t\treturn user;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._userCache.has(user)) {\n\t\t\t\t\t\tconst cache = this._userCache.get(user);\n\t\t\t\t\t\tif (cache) {\n\t\t\t\t\t\t\treturn cache.username;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst obj = await Users.findOneByImportId(user, { projection: { _id: 1, username: 1 } });\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tthis.addUser(user, obj._id, obj.username);\n\n\t\t\t\t\t\tif (idToRemove && obj._id === idToRemove) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn obj.username;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}),\n\t\t\t)\n\t\t).filter((user) => user) as string[];\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      ConverterCache: () => ConverterCache\n    });\n    let Rooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class ConverterCache {\n      constructor() {\n        this._userCache = new Map();\n        // display name uses a different cache because it's only used on mentions so we don't need to load it every time we load an user\n        this._userDisplayNameCache = new Map();\n        this._roomCache = new Map();\n        this._roomNameCache = new Map();\n      }\n      addUser(importId, _id, username) {\n        const cache = {\n          _id,\n          username\n        };\n        this._userCache.set(importId, cache);\n        return cache;\n      }\n      addUserDisplayName(importId, name) {\n        this._userDisplayNameCache.set(importId, name);\n        return name;\n      }\n      addRoom(importId, rid) {\n        this._roomCache.set(importId, rid);\n        return rid;\n      }\n      addRoomName(importId, name) {\n        this._roomNameCache.set(importId, name);\n        return name;\n      }\n      addUserData(userData) {\n        if (!userData._id) {\n          return;\n        }\n        if (!userData.importIds.length) {\n          return;\n        }\n        this.addUser(userData.importIds[0], userData._id, userData.username);\n      }\n      async findImportedRoomId(importId) {\n        if (this._roomCache.has(importId)) {\n          return this._roomCache.get(importId);\n        }\n        const options = {\n          projection: {\n            _id: 1\n          }\n        };\n        const room = await Rooms.findOneByImportId(importId, options);\n        if (room) {\n          return this.addRoom(importId, room._id);\n        }\n        return null;\n      }\n      async findImportedRoomName(importId) {\n        if (this._roomNameCache.has(importId)) {\n          return this._roomNameCache.get(importId);\n        }\n        const options = {\n          projection: {\n            _id: 1,\n            name: 1\n          }\n        };\n        const room = await Rooms.findOneByImportId(importId, options);\n        if (room) {\n          if (!this._roomCache.has(importId)) {\n            this.addRoom(importId, room._id);\n          }\n          if (room !== null && room !== void 0 && room.name) {\n            return this.addRoomName(importId, room.name);\n          }\n        }\n      }\n      async findImportedUser(importId) {\n        if (importId === 'rocket.cat') {\n          return {\n            _id: 'rocket.cat',\n            username: 'rocket.cat'\n          };\n        }\n        const options = {\n          projection: {\n            _id: 1,\n            username: 1\n          }\n        };\n        if (this._userCache.has(importId)) {\n          return this._userCache.get(importId);\n        }\n        const user = await Users.findOneByImportId(importId, options);\n        if (user) {\n          return this.addUser(importId, user._id, user.username);\n        }\n        return null;\n      }\n      async findImportedUserId(_id) {\n        const data = await this.findImportedUser(_id);\n        return data === null || data === void 0 ? void 0 : data._id;\n      }\n      async findImportedUsername(_id) {\n        const data = await this.findImportedUser(_id);\n        return data === null || data === void 0 ? void 0 : data.username;\n      }\n      async findImportedUserDisplayName(importId) {\n        const options = {\n          projection: {\n            _id: 1,\n            name: 1,\n            username: 1\n          }\n        };\n        if (this._userDisplayNameCache.has(importId)) {\n          return this._userDisplayNameCache.get(importId);\n        }\n        const user = importId === 'rocket.cat' ? await Users.findOneById('rocket.cat', options) : await Users.findOneByImportId(importId, options);\n        if (user) {\n          if (!this._userCache.has(importId)) {\n            this.addUser(importId, user._id, user.username);\n          }\n          if (!user.name) {\n            return;\n          }\n          return this.addUserDisplayName(importId, user.name);\n        }\n      }\n      async convertImportedIdsToUsernames(importedIds) {\n        let idToRemove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n        return (await Promise.all(importedIds.map(async user => {\n          if (user === 'rocket.cat') {\n            return user;\n          }\n          if (this._userCache.has(user)) {\n            const cache = this._userCache.get(user);\n            if (cache) {\n              return cache.username;\n            }\n          }\n          const obj = await Users.findOneByImportId(user, {\n            projection: {\n              _id: 1,\n              username: 1\n            }\n          });\n          if (obj) {\n            this.addUser(user, obj._id, obj.username);\n            if (idToRemove && obj._id === idToRemove) {\n              return false;\n            }\n            return obj.username;\n          }\n          return false;\n        }))).filter(user => user);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","ConverterCache","Rooms","Users","link","v","__reifyWaitForDeps__","constructor","_userCache","Map","_userDisplayNameCache","_roomCache","_roomNameCache","addUser","importId","_id","username","cache","set","addUserDisplayName","name","addRoom","rid","addRoomName","addUserData","userData","importIds","length","findImportedRoomId","has","get","options","projection","room","findOneByImportId","findImportedRoomName","findImportedUser","user","findImportedUserId","data","findImportedUsername","findImportedUserDisplayName","findOneById","convertImportedIdsToUsernames","importedIds","idToRemove","arguments","undefined","Promise","all","map","obj","filter","__reify_async_result__","_reifyError","self","async"],"sources":["app/importer/server/classes/converters/ConverterCache.ts"],"sourcesContent":["import type { IImportUser } from '@rocket.chat/core-typings';\nimport { Rooms, Users } from '@rocket.chat/models';\n\nexport type UserIdentification = {\n\t_id: string;\n\tusername: string | undefined;\n};\n\nexport type MentionedChannel = {\n\t_id: string;\n\tname: string;\n};\n\nexport class ConverterCache {\n\tprivate _userCache = new Map<string, UserIdentification>();\n\n\t// display name uses a different cache because it's only used on mentions so we don't need to load it every time we load an user\n\tprivate _userDisplayNameCache = new Map<string, string>();\n\n\tprivate _roomCache = new Map<string, string>();\n\n\tprivate _roomNameCache = new Map<string, string>();\n\n\taddUser(importId: string, _id: string, username: string | undefined): UserIdentification {\n\t\tconst cache = {\n\t\t\t_id,\n\t\t\tusername,\n\t\t};\n\n\t\tthis._userCache.set(importId, cache);\n\t\treturn cache;\n\t}\n\n\taddUserDisplayName(importId: string, name: string): string {\n\t\tthis._userDisplayNameCache.set(importId, name);\n\t\treturn name;\n\t}\n\n\taddRoom(importId: string, rid: string): string {\n\t\tthis._roomCache.set(importId, rid);\n\t\treturn rid;\n\t}\n\n\taddRoomName(importId: string, name: string): string {\n\t\tthis._roomNameCache.set(importId, name);\n\t\treturn name;\n\t}\n\n\taddUserData(userData: IImportUser): void {\n\t\tif (!userData._id) {\n\t\t\treturn;\n\t\t}\n\t\tif (!userData.importIds.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addUser(userData.importIds[0], userData._id, userData.username);\n\t}\n\n\tasync findImportedRoomId(importId: string): Promise<string | null> {\n\t\tif (this._roomCache.has(importId)) {\n\t\t\treturn this._roomCache.get(importId) as string;\n\t\t}\n\n\t\tconst options = {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t},\n\t\t};\n\n\t\tconst room = await Rooms.findOneByImportId(importId, options);\n\t\tif (room) {\n\t\t\treturn this.addRoom(importId, room._id);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync findImportedRoomName(importId: string): Promise<string | undefined> {\n\t\tif (this._roomNameCache.has(importId)) {\n\t\t\treturn this._roomNameCache.get(importId) as string;\n\t\t}\n\n\t\tconst options = {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tname: 1,\n\t\t\t},\n\t\t};\n\n\t\tconst room = await Rooms.findOneByImportId(importId, options);\n\t\tif (room) {\n\t\t\tif (!this._roomCache.has(importId)) {\n\t\t\t\tthis.addRoom(importId, room._id);\n\t\t\t}\n\t\t\tif (room?.name) {\n\t\t\t\treturn this.addRoomName(importId, room.name);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync findImportedUser(importId: string): Promise<UserIdentification | null> {\n\t\tif (importId === 'rocket.cat') {\n\t\t\treturn {\n\t\t\t\t_id: 'rocket.cat',\n\t\t\t\tusername: 'rocket.cat',\n\t\t\t};\n\t\t}\n\n\t\tconst options = {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tusername: 1,\n\t\t\t},\n\t\t};\n\n\t\tif (this._userCache.has(importId)) {\n\t\t\treturn this._userCache.get(importId) as UserIdentification;\n\t\t}\n\n\t\tconst user = await Users.findOneByImportId(importId, options);\n\t\tif (user) {\n\t\t\treturn this.addUser(importId, user._id, user.username);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync findImportedUserId(_id: string): Promise<string | undefined> {\n\t\tconst data = await this.findImportedUser(_id);\n\t\treturn data?._id;\n\t}\n\n\tasync findImportedUsername(_id: string): Promise<string | undefined> {\n\t\tconst data = await this.findImportedUser(_id);\n\t\treturn data?.username;\n\t}\n\n\tasync findImportedUserDisplayName(importId: string): Promise<string | undefined> {\n\t\tconst options = {\n\t\t\tprojection: {\n\t\t\t\t_id: 1,\n\t\t\t\tname: 1,\n\t\t\t\tusername: 1,\n\t\t\t},\n\t\t};\n\n\t\tif (this._userDisplayNameCache.has(importId)) {\n\t\t\treturn this._userDisplayNameCache.get(importId);\n\t\t}\n\n\t\tconst user =\n\t\t\timportId === 'rocket.cat' ? await Users.findOneById('rocket.cat', options) : await Users.findOneByImportId(importId, options);\n\t\tif (user) {\n\t\t\tif (!this._userCache.has(importId)) {\n\t\t\t\tthis.addUser(importId, user._id, user.username);\n\t\t\t}\n\n\t\t\tif (!user.name) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn this.addUserDisplayName(importId, user.name);\n\t\t}\n\t}\n\n\tasync convertImportedIdsToUsernames(importedIds: Array<string>, idToRemove: string | undefined = undefined): Promise<Array<string>> {\n\t\treturn (\n\t\t\tawait Promise.all(\n\t\t\t\timportedIds.map(async (user) => {\n\t\t\t\t\tif (user === 'rocket.cat') {\n\t\t\t\t\t\treturn user;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._userCache.has(user)) {\n\t\t\t\t\t\tconst cache = this._userCache.get(user);\n\t\t\t\t\t\tif (cache) {\n\t\t\t\t\t\t\treturn cache.username;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst obj = await Users.findOneByImportId(user, { projection: { _id: 1, username: 1 } });\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tthis.addUser(user, obj._id, obj.username);\n\n\t\t\t\t\t\tif (idToRemove && obj._id === idToRemove) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn obj.username;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}),\n\t\t\t)\n\t\t).filter((user) => user) as string[];\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"cd1e9827daa2f7707065e6ab3bdb341b9970b761"}
