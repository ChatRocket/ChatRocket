{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/methods/samlLogout.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/meteor-accounts-saml/server/methods/samlLogout.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/methods/samlLogout.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/methods/samlLogout.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/methods/samlLogout.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAC7D,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAEzC;;GAEG;AACH,SAAS,6BAA6B,CAAC,QAAgB;IACtD,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,qBAAqB,EAAE;YACjE,MAAM,EAAE,+BAA+B;SACvC,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC;IAE7C,MAAM,YAAY,GAAG,UAAU,OAAgC;QAC9D,OAAO,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC;IACtC,CAAC,CAAC;IAEF,OAAO,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC;AASD,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,UAAU,CAAC,QAAgB;QAChC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,iEAAiE;QACjE,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC;QACxF,CAAC;QACD,MAAM,cAAc,GAAG,6BAA6B,CAAC,QAAQ,CAAC,CAAC;QAE/D,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,gBAAgB,EAAE,cAAc,EAAE,CAAC,CAAC;QACzD,0DAA0D;QAC1D,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,0BAA0B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YAC3B,OAAO;QACR,CAAC;QAED,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QAClD,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,mBAAmB,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;QAE3E,MAAM,KAAK,GAAG,IAAI,mBAAmB,CAAC,cAAc,CAAC,CAAC;QAEtD,IAAI,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;YAC5B,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,wCAAwC,EAAE,MAAM,EAAE,CAAC,CAAC;YACzE,OAAO;QACR,CAAC;QAED,MAAM,OAAO,GAAG,KAAK,CAAC,qBAAqB,CAAC;YAC3C,MAAM,EAAE,MAAM,IAAI,UAAU;YAC5B,YAAY,EAAE,UAAU;SACxB,CAAC,CAAC;QAEH,SAAS,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAEvB,2CAA2C;QAC3C,+FAA+F;QAE/F,MAAM,KAAK,CAAC,mBAAmB,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;QAEpD,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACnE,SAAS,CAAC,GAAG,CAAC,uBAAuB,MAAM,EAAE,CAAC,CAAC;QAE/C,OAAO,MAAM,CAAC;IACf,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport type { IServiceProviderOptions } from '../definition/IServiceProviderOptions';\nimport { SAMLServiceProvider } from '../lib/ServiceProvider';\nimport { SAMLUtils } from '../lib/Utils';\n\n/**\n * Fetch SAML provider configs for given 'provider'.\n */\nfunction getSamlServiceProviderOptions(provider: string): IServiceProviderOptions {\n\tif (!provider) {\n\t\tthrow new Meteor.Error('no-saml-provider', 'SAML internal error', {\n\t\t\tmethod: 'getSamlServiceProviderOptions',\n\t\t});\n\t}\n\n\tconst providers = SAMLUtils.serviceProviders;\n\n\tconst samlProvider = function (element: IServiceProviderOptions): boolean {\n\t\treturn element.provider === provider;\n\t};\n\n\treturn providers.filter(samlProvider)[0];\n}\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsamlLogout(provider: string): string | undefined;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync samlLogout(provider: string) {\n\t\tconst userId = Meteor.userId();\n\t\t// Make sure the user is logged in before we initiate SAML Logout\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'samlLogout' });\n\t\t}\n\t\tconst providerConfig = getSamlServiceProviderOptions(provider);\n\n\t\tSAMLUtils.log({ msg: 'Logout request', providerConfig });\n\t\t// This query should respect upcoming array of SAML logins\n\t\tconst user = await Users.getSAMLByIdAndSAMLProvider(userId, provider);\n\t\tif (!user?.services?.saml) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { nameID, idpSession } = user.services.saml;\n\t\tSAMLUtils.log({ msg: `NameID for user ${Meteor.userId()} found`, nameID });\n\n\t\tconst _saml = new SAMLServiceProvider(providerConfig);\n\n\t\tif (!nameID || !idpSession) {\n\t\t\tSAMLUtils.log({ msg: 'No NameID or idpSession found for user', userId });\n\t\t\treturn;\n\t\t}\n\n\t\tconst request = _saml.generateLogoutRequest({\n\t\t\tnameID: nameID || idpSession,\n\t\t\tsessionIndex: idpSession,\n\t\t});\n\n\t\tSAMLUtils.log('----Logout Request----');\n\t\tSAMLUtils.log(request);\n\n\t\t// request.request: actual XML SAML Request\n\t\t// request.id: comminucation id which will be mentioned in the ResponseTo field of SAMLResponse\n\n\t\tawait Users.setSamlInResponseTo(userId, request.id);\n\n\t\tconst result = await _saml.requestToUrl(request.request, 'logout');\n\t\tSAMLUtils.log(`SAML Logout Request ${result}`);\n\n\t\treturn result;\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/meteor-accounts-saml/server/methods/samlLogout.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/meteor-accounts-saml/server/methods/samlLogout.ts","inputSourceMap":{"version":3,"file":"app/meteor-accounts-saml/server/methods/samlLogout.ts","sourceRoot":"","sources":["app/meteor-accounts-saml/server/methods/samlLogout.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGvC,OAAO,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAC7D,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAEzC;;GAEG;AACH,SAAS,6BAA6B,CAAC,QAAgB;IACtD,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,kBAAkB,EAAE,qBAAqB,EAAE;YACjE,MAAM,EAAE,+BAA+B;SACvC,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,SAAS,GAAG,SAAS,CAAC,gBAAgB,CAAC;IAE7C,MAAM,YAAY,GAAG,UAAU,OAAgC;QAC9D,OAAO,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC;IACtC,CAAC,CAAC;IAEF,OAAO,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC;AASD,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,UAAU,CAAC,QAAgB;QAChC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,iEAAiE;QACjE,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC;QACxF,CAAC;QACD,MAAM,cAAc,GAAG,6BAA6B,CAAC,QAAQ,CAAC,CAAC;QAE/D,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,gBAAgB,EAAE,cAAc,EAAE,CAAC,CAAC;QACzD,0DAA0D;QAC1D,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,0BAA0B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;YAC3B,OAAO;QACR,CAAC;QAED,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QAClD,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,mBAAmB,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;QAE3E,MAAM,KAAK,GAAG,IAAI,mBAAmB,CAAC,cAAc,CAAC,CAAC;QAEtD,IAAI,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;YAC5B,SAAS,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,wCAAwC,EAAE,MAAM,EAAE,CAAC,CAAC;YACzE,OAAO;QACR,CAAC;QAED,MAAM,OAAO,GAAG,KAAK,CAAC,qBAAqB,CAAC;YAC3C,MAAM,EAAE,MAAM,IAAI,UAAU;YAC5B,YAAY,EAAE,UAAU;SACxB,CAAC,CAAC;QAEH,SAAS,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAEvB,2CAA2C;QAC3C,+FAA+F;QAE/F,MAAM,KAAK,CAAC,mBAAmB,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;QAEpD,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACnE,SAAS,CAAC,GAAG,CAAC,uBAAuB,MAAM,EAAE,CAAC,CAAC;QAE/C,OAAO,MAAM,CAAC;IACf,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport type { IServiceProviderOptions } from '../definition/IServiceProviderOptions';\nimport { SAMLServiceProvider } from '../lib/ServiceProvider';\nimport { SAMLUtils } from '../lib/Utils';\n\n/**\n * Fetch SAML provider configs for given 'provider'.\n */\nfunction getSamlServiceProviderOptions(provider: string): IServiceProviderOptions {\n\tif (!provider) {\n\t\tthrow new Meteor.Error('no-saml-provider', 'SAML internal error', {\n\t\t\tmethod: 'getSamlServiceProviderOptions',\n\t\t});\n\t}\n\n\tconst providers = SAMLUtils.serviceProviders;\n\n\tconst samlProvider = function (element: IServiceProviderOptions): boolean {\n\t\treturn element.provider === provider;\n\t};\n\n\treturn providers.filter(samlProvider)[0];\n}\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsamlLogout(provider: string): string | undefined;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync samlLogout(provider: string) {\n\t\tconst userId = Meteor.userId();\n\t\t// Make sure the user is logged in before we initiate SAML Logout\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'samlLogout' });\n\t\t}\n\t\tconst providerConfig = getSamlServiceProviderOptions(provider);\n\n\t\tSAMLUtils.log({ msg: 'Logout request', providerConfig });\n\t\t// This query should respect upcoming array of SAML logins\n\t\tconst user = await Users.getSAMLByIdAndSAMLProvider(userId, provider);\n\t\tif (!user?.services?.saml) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { nameID, idpSession } = user.services.saml;\n\t\tSAMLUtils.log({ msg: `NameID for user ${Meteor.userId()} found`, nameID });\n\n\t\tconst _saml = new SAMLServiceProvider(providerConfig);\n\n\t\tif (!nameID || !idpSession) {\n\t\t\tSAMLUtils.log({ msg: 'No NameID or idpSession found for user', userId });\n\t\t\treturn;\n\t\t}\n\n\t\tconst request = _saml.generateLogoutRequest({\n\t\t\tnameID: nameID || idpSession,\n\t\t\tsessionIndex: idpSession,\n\t\t});\n\n\t\tSAMLUtils.log('----Logout Request----');\n\t\tSAMLUtils.log(request);\n\n\t\t// request.request: actual XML SAML Request\n\t\t// request.id: comminucation id which will be mentioned in the ResponseTo field of SAMLResponse\n\n\t\tawait Users.setSamlInResponseTo(userId, request.id);\n\n\t\tconst result = await _saml.requestToUrl(request.request, 'logout');\n\t\tSAMLUtils.log(`SAML Logout Request ${result}`);\n\n\t\treturn result;\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let SAMLServiceProvider;\n    module.link(\"../lib/ServiceProvider\", {\n      SAMLServiceProvider(v) {\n        SAMLServiceProvider = v;\n      }\n    }, 2);\n    let SAMLUtils;\n    module.link(\"../lib/Utils\", {\n      SAMLUtils(v) {\n        SAMLUtils = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    /**\n     * Fetch SAML provider configs for given 'provider'.\n     */\n    function getSamlServiceProviderOptions(provider) {\n      if (!provider) {\n        throw new Meteor.Error('no-saml-provider', 'SAML internal error', {\n          method: 'getSamlServiceProviderOptions'\n        });\n      }\n      const providers = SAMLUtils.serviceProviders;\n      const samlProvider = function (element) {\n        return element.provider === provider;\n      };\n      return providers.filter(samlProvider)[0];\n    }\n    Meteor.methods({\n      async samlLogout(provider) {\n        var _user$services;\n        const userId = Meteor.userId();\n        // Make sure the user is logged in before we initiate SAML Logout\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'samlLogout'\n          });\n        }\n        const providerConfig = getSamlServiceProviderOptions(provider);\n        SAMLUtils.log({\n          msg: 'Logout request',\n          providerConfig\n        });\n        // This query should respect upcoming array of SAML logins\n        const user = await Users.getSAMLByIdAndSAMLProvider(userId, provider);\n        if (!(user !== null && user !== void 0 && (_user$services = user.services) !== null && _user$services !== void 0 && _user$services.saml)) {\n          return;\n        }\n        const {\n          nameID,\n          idpSession\n        } = user.services.saml;\n        SAMLUtils.log({\n          msg: \"NameID for user \".concat(Meteor.userId(), \" found\"),\n          nameID\n        });\n        const _saml = new SAMLServiceProvider(providerConfig);\n        if (!nameID || !idpSession) {\n          SAMLUtils.log({\n            msg: 'No NameID or idpSession found for user',\n            userId\n          });\n          return;\n        }\n        const request = _saml.generateLogoutRequest({\n          nameID: nameID || idpSession,\n          sessionIndex: idpSession\n        });\n        SAMLUtils.log('----Logout Request----');\n        SAMLUtils.log(request);\n        // request.request: actual XML SAML Request\n        // request.id: comminucation id which will be mentioned in the ResponseTo field of SAMLResponse\n        await Users.setSamlInResponseTo(userId, request.id);\n        const result = await _saml.requestToUrl(request.request, 'logout');\n        SAMLUtils.log(\"SAML Logout Request \".concat(result));\n        return result;\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Users","module","link","v","Meteor","SAMLServiceProvider","SAMLUtils","__reifyWaitForDeps__","getSamlServiceProviderOptions","provider","Error","method","providers","serviceProviders","samlProvider","element","filter","methods","samlLogout","_user$services","userId","providerConfig","log","msg","user","getSAMLByIdAndSAMLProvider","services","saml","nameID","idpSession","concat","_saml","request","generateLogoutRequest","sessionIndex","setSamlInResponseTo","id","result","requestToUrl","__reify_async_result__","_reifyError","self","async"],"sources":["app/meteor-accounts-saml/server/methods/samlLogout.ts"],"sourcesContent":["import type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport type { IServiceProviderOptions } from '../definition/IServiceProviderOptions';\nimport { SAMLServiceProvider } from '../lib/ServiceProvider';\nimport { SAMLUtils } from '../lib/Utils';\n\n/**\n * Fetch SAML provider configs for given 'provider'.\n */\nfunction getSamlServiceProviderOptions(provider: string): IServiceProviderOptions {\n\tif (!provider) {\n\t\tthrow new Meteor.Error('no-saml-provider', 'SAML internal error', {\n\t\t\tmethod: 'getSamlServiceProviderOptions',\n\t\t});\n\t}\n\n\tconst providers = SAMLUtils.serviceProviders;\n\n\tconst samlProvider = function (element: IServiceProviderOptions): boolean {\n\t\treturn element.provider === provider;\n\t};\n\n\treturn providers.filter(samlProvider)[0];\n}\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsamlLogout(provider: string): string | undefined;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync samlLogout(provider: string) {\n\t\tconst userId = Meteor.userId();\n\t\t// Make sure the user is logged in before we initiate SAML Logout\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'samlLogout' });\n\t\t}\n\t\tconst providerConfig = getSamlServiceProviderOptions(provider);\n\n\t\tSAMLUtils.log({ msg: 'Logout request', providerConfig });\n\t\t// This query should respect upcoming array of SAML logins\n\t\tconst user = await Users.getSAMLByIdAndSAMLProvider(userId, provider);\n\t\tif (!user?.services?.saml) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { nameID, idpSession } = user.services.saml;\n\t\tSAMLUtils.log({ msg: `NameID for user ${Meteor.userId()} found`, nameID });\n\n\t\tconst _saml = new SAMLServiceProvider(providerConfig);\n\n\t\tif (!nameID || !idpSession) {\n\t\t\tSAMLUtils.log({ msg: 'No NameID or idpSession found for user', userId });\n\t\t\treturn;\n\t\t}\n\n\t\tconst request = _saml.generateLogoutRequest({\n\t\t\tnameID: nameID || idpSession,\n\t\t\tsessionIndex: idpSession,\n\t\t});\n\n\t\tSAMLUtils.log('----Logout Request----');\n\t\tSAMLUtils.log(request);\n\n\t\t// request.request: actual XML SAML Request\n\t\t// request.id: comminucation id which will be mentioned in the ResponseTo field of SAMLResponse\n\n\t\tawait Users.setSamlInResponseTo(userId, request.id);\n\n\t\tconst result = await _saml.requestToUrl(request.request, 'logout');\n\t\tSAMLUtils.log(`SAML Logout Request ${result}`);\n\n\t\treturn result;\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"fc4a2ef5e4dd566db34ed61cc2f1db7802110af8"}
