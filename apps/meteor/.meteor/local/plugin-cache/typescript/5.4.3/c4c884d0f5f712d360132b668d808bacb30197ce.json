{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/sendMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/sendMessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/sendMessage.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/sendMessage.ts","sourceRoot":"","sources":["app/lib/server/functions/sendMessage.ts"],"names":[],"mappings":"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","sourcesContent":["import { Apps } from '@rocket.chat/apps';\nimport { api, Message } from '@rocket.chat/core-services';\nimport type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\n\nimport { isRelativeURL } from '../../../../lib/utils/isRelativeURL';\nimport { isURL } from '../../../../lib/utils/isURL';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { FileUpload } from '../../../file-upload/server';\nimport { settings } from '../../../settings/server';\nimport { afterSaveMessage } from '../lib/afterSaveMessage';\nimport { notifyOnRoomChangedById, notifyOnMessageChange } from '../lib/notifyListener';\nimport { validateCustomMessageFields } from '../lib/validateCustomMessageFields';\nimport { parseUrlsInMessage } from './parseUrlsInMessage';\n\n// TODO: most of the types here are wrong, but I don't want to change them now\n\n/**\n * IMPORTANT\n *\n * This validator prevents malicious href values\n * intending to run arbitrary js code in anchor tags.\n * You should use it whenever the value you're checking\n * is going to be rendered in the href attribute of a\n * link.\n */\nconst validFullURLParam = Match.Where((value) => {\n\tcheck(value, String);\n\n\tif (!isURL(value) && !value.startsWith(FileUpload.getPath())) {\n\t\tthrow new Error('Invalid href value provided');\n\t}\n\n\tif (/^javascript:/i.test(value)) {\n\t\tthrow new Error('Invalid href value provided');\n\t}\n\n\treturn true;\n});\n\nconst validPartialURLParam = Match.Where((value) => {\n\tcheck(value, String);\n\n\tif (!isRelativeURL(value) && !isURL(value) && !value.startsWith(FileUpload.getPath())) {\n\t\tthrow new Error('Invalid href value provided');\n\t}\n\n\tif (/^javascript:/i.test(value)) {\n\t\tthrow new Error('Invalid href value provided');\n\t}\n\n\treturn true;\n});\n\nconst objectMaybeIncluding = (types: any) =>\n\tMatch.Where((value: any) => {\n\t\tObject.keys(types).forEach((field) => {\n\t\t\tif (value[field] != null) {\n\t\t\t\ttry {\n\t\t\t\t\tcheck(value[field], types[field]);\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\terror.path = field;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn true;\n\t});\n\nconst validateAttachmentsFields = (attachmentField: any) => {\n\tcheck(\n\t\tattachmentField,\n\t\tobjectMaybeIncluding({\n\t\t\tshort: Boolean,\n\t\t\ttitle: String,\n\t\t\tvalue: Match.OneOf(String, Number, Boolean),\n\t\t}),\n\t);\n\n\tif (typeof attachmentField.value !== 'undefined') {\n\t\tattachmentField.value = String(attachmentField.value);\n\t}\n};\n\nconst validateAttachmentsActions = (attachmentActions: any) => {\n\tcheck(\n\t\tattachmentActions,\n\t\tobjectMaybeIncluding({\n\t\t\ttype: String,\n\t\t\ttext: String,\n\t\t\turl: validFullURLParam,\n\t\t\timage_url: validFullURLParam,\n\t\t\tis_webview: Boolean,\n\t\t\twebview_height_ratio: String,\n\t\t\tmsg: String,\n\t\t\tmsg_in_chat_window: Boolean,\n\t\t}),\n\t);\n};\n\nconst validateAttachment = (attachment: any) => {\n\tcheck(\n\t\tattachment,\n\t\tobjectMaybeIncluding({\n\t\t\tcolor: String,\n\t\t\ttext: String,\n\t\t\tts: Match.OneOf(String, Number),\n\t\t\tthumb_url: validFullURLParam,\n\t\t\tbutton_alignment: String,\n\t\t\tactions: [Match.Any],\n\t\t\tmessage_link: validFullURLParam,\n\t\t\tcollapsed: Boolean,\n\t\t\tauthor_name: String,\n\t\t\tauthor_link: validFullURLParam,\n\t\t\tauthor_icon: validFullURLParam,\n\t\t\ttitle: String,\n\t\t\ttitle_link: validFullURLParam,\n\t\t\ttitle_link_download: Boolean,\n\t\t\timage_dimensions: Object,\n\t\t\timage_url: validFullURLParam,\n\t\t\timage_preview: String,\n\t\t\timage_type: String,\n\t\t\timage_size: Number,\n\t\t\taudio_url: validFullURLParam,\n\t\t\taudio_type: String,\n\t\t\taudio_size: Number,\n\t\t\tvideo_url: validFullURLParam,\n\t\t\tvideo_type: String,\n\t\t\tvideo_size: Number,\n\t\t\tfields: [Match.Any],\n\t\t}),\n\t);\n\n\tif (attachment.fields?.length) {\n\t\tattachment.fields.map(validateAttachmentsFields);\n\t}\n\n\tif (attachment.actions?.length) {\n\t\tattachment.actions.map(validateAttachmentsActions);\n\t}\n};\n\nconst validateBodyAttachments = (attachments: any[]) => attachments.map(validateAttachment);\n\nexport const validateMessage = async (message: any, room: any, user: any) => {\n\tcheck(\n\t\tmessage,\n\t\tobjectMaybeIncluding({\n\t\t\t_id: String,\n\t\t\tmsg: String,\n\t\t\ttext: String,\n\t\t\talias: String,\n\t\t\temoji: String,\n\t\t\ttmid: String,\n\t\t\ttshow: Boolean,\n\t\t\tavatar: validPartialURLParam,\n\t\t\tattachments: [Match.Any],\n\t\t\tblocks: [Match.Any],\n\t\t}),\n\t);\n\n\tif (message.alias || message.avatar) {\n\t\tconst isLiveChatGuest = !message.avatar && user.token && user.token === room.v?.token;\n\n\t\tif (!isLiveChatGuest && !(await hasPermissionAsync(user._id, 'message-impersonate', room._id))) {\n\t\t\tthrow new Error('Not enough permission');\n\t\t}\n\t}\n\n\tif (Array.isArray(message.attachments) && message.attachments.length) {\n\t\tvalidateBodyAttachments(message.attachments);\n\t}\n\n\tif (message.customFields) {\n\t\tvalidateCustomMessageFields({\n\t\t\tcustomFields: message.customFields,\n\t\t\tmessageCustomFieldsEnabled: settings.get<boolean>('Message_CustomFields_Enabled'),\n\t\t\tmessageCustomFields: settings.get<string>('Message_CustomFields'),\n\t\t});\n\t}\n};\n\nexport function prepareMessageObject(\n\tmessage: Partial<IMessage>,\n\trid: IRoom['_id'],\n\tuser: { _id: string; username?: string; name?: string },\n): asserts message is IMessage {\n\tif (!message.ts) {\n\t\tmessage.ts = new Date();\n\t}\n\n\tif (message.tshow !== true) {\n\t\tdelete message.tshow;\n\t}\n\n\tconst { _id, username, name } = user;\n\tmessage.u = {\n\t\t_id,\n\t\tusername: username as string, // FIXME: this is wrong but I don't want to change it now\n\t\tname,\n\t};\n\tmessage.rid = rid;\n\n\tif (!Match.test(message.msg, String)) {\n\t\tmessage.msg = '';\n\t}\n\n\tif (message.ts == null) {\n\t\tmessage.ts = new Date();\n\t}\n}\n\n/**\n * Validates and sends the message object.\n */\nexport const sendMessage = async function (user: any, message: any, room: any, upsert = false, previewUrls?: string[]) {\n\tif (!user || !message || !room._id) {\n\t\treturn false;\n\t}\n\n\tawait validateMessage(message, room, user);\n\tprepareMessageObject(message, room._id, user);\n\n\tif (message.t === 'otr') {\n\t\tvoid api.broadcast('otrMessage', { roomId: message.rid, message, user, room });\n\t\treturn message;\n\t}\n\n\tif (settings.get('Message_Read_Receipt_Enabled')) {\n\t\tmessage.unread = true;\n\t}\n\n\t// For the Rocket.Chat Apps :)\n\tif (Apps.self?.isLoaded()) {\n\t\tconst listenerBridge = Apps.getBridges()?.getListenerBridge();\n\n\t\tconst prevent = await listenerBridge?.messageEvent('IPreMessageSentPrevent', message);\n\t\tif (prevent) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await listenerBridge?.messageEvent(\n\t\t\t'IPreMessageSentModify',\n\t\t\tawait listenerBridge?.messageEvent('IPreMessageSentExtend', message),\n\t\t);\n\n\t\tif (typeof result === 'object') {\n\t\t\tmessage = Object.assign(message, result);\n\n\t\t\t// Some app may have inserted malicious/invalid values in the message, let's check it again\n\t\t\tawait validateMessage(message, room, user);\n\t\t}\n\t}\n\n\tparseUrlsInMessage(message, previewUrls);\n\n\tmessage = await Message.beforeSave({ message, room, user });\n\n\tif (!message) {\n\t\treturn;\n\t}\n\n\tif (message._id && upsert) {\n\t\tconst { _id } = message;\n\t\tdelete message._id;\n\t\tawait Messages.updateOne(\n\t\t\t{\n\t\t\t\t_id,\n\t\t\t\t'u._id': message.u._id,\n\t\t\t},\n\t\t\t{ $set: message },\n\t\t\t{ upsert: true },\n\t\t);\n\t\tmessage._id = _id;\n\t} else {\n\t\tconst messageAlreadyExists = message._id && (await Messages.findOneById(message._id, { projection: { _id: 1 } }));\n\t\tif (messageAlreadyExists) {\n\t\t\treturn;\n\t\t}\n\t\tconst { insertedId } = await Messages.insertOne(message);\n\t\tmessage._id = insertedId;\n\t}\n\n\tif (Apps.self?.isLoaded()) {\n\t\t// This returns a promise, but it won't mutate anything about the message\n\t\t// so, we don't really care if it is successful or fails\n\t\tvoid Apps.getBridges()?.getListenerBridge().messageEvent('IPostMessageSent', message);\n\t}\n\n\t// TODO: is there an opportunity to send returned data to notifyOnMessageChange?\n\tawait afterSaveMessage(message, room);\n\n\tvoid notifyOnMessageChange({ id: message._id });\n\n\tvoid notifyOnRoomChangedById(message.rid);\n\n\treturn message;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/sendMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/sendMessage.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/sendMessage.ts","sourceRoot":"","sources":["app/lib/server/functions/sendMessage.ts"],"names":[],"mappings":"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","sourcesContent":["import { Apps } from '@rocket.chat/apps';\nimport { api, Message } from '@rocket.chat/core-services';\nimport type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\n\nimport { isRelativeURL } from '../../../../lib/utils/isRelativeURL';\nimport { isURL } from '../../../../lib/utils/isURL';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { FileUpload } from '../../../file-upload/server';\nimport { settings } from '../../../settings/server';\nimport { afterSaveMessage } from '../lib/afterSaveMessage';\nimport { notifyOnRoomChangedById, notifyOnMessageChange } from '../lib/notifyListener';\nimport { validateCustomMessageFields } from '../lib/validateCustomMessageFields';\nimport { parseUrlsInMessage } from './parseUrlsInMessage';\n\n// TODO: most of the types here are wrong, but I don't want to change them now\n\n/**\n * IMPORTANT\n *\n * This validator prevents malicious href values\n * intending to run arbitrary js code in anchor tags.\n * You should use it whenever the value you're checking\n * is going to be rendered in the href attribute of a\n * link.\n */\nconst validFullURLParam = Match.Where((value) => {\n\tcheck(value, String);\n\n\tif (!isURL(value) && !value.startsWith(FileUpload.getPath())) {\n\t\tthrow new Error('Invalid href value provided');\n\t}\n\n\tif (/^javascript:/i.test(value)) {\n\t\tthrow new Error('Invalid href value provided');\n\t}\n\n\treturn true;\n});\n\nconst validPartialURLParam = Match.Where((value) => {\n\tcheck(value, String);\n\n\tif (!isRelativeURL(value) && !isURL(value) && !value.startsWith(FileUpload.getPath())) {\n\t\tthrow new Error('Invalid href value provided');\n\t}\n\n\tif (/^javascript:/i.test(value)) {\n\t\tthrow new Error('Invalid href value provided');\n\t}\n\n\treturn true;\n});\n\nconst objectMaybeIncluding = (types: any) =>\n\tMatch.Where((value: any) => {\n\t\tObject.keys(types).forEach((field) => {\n\t\t\tif (value[field] != null) {\n\t\t\t\ttry {\n\t\t\t\t\tcheck(value[field], types[field]);\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\terror.path = field;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn true;\n\t});\n\nconst validateAttachmentsFields = (attachmentField: any) => {\n\tcheck(\n\t\tattachmentField,\n\t\tobjectMaybeIncluding({\n\t\t\tshort: Boolean,\n\t\t\ttitle: String,\n\t\t\tvalue: Match.OneOf(String, Number, Boolean),\n\t\t}),\n\t);\n\n\tif (typeof attachmentField.value !== 'undefined') {\n\t\tattachmentField.value = String(attachmentField.value);\n\t}\n};\n\nconst validateAttachmentsActions = (attachmentActions: any) => {\n\tcheck(\n\t\tattachmentActions,\n\t\tobjectMaybeIncluding({\n\t\t\ttype: String,\n\t\t\ttext: String,\n\t\t\turl: validFullURLParam,\n\t\t\timage_url: validFullURLParam,\n\t\t\tis_webview: Boolean,\n\t\t\twebview_height_ratio: String,\n\t\t\tmsg: String,\n\t\t\tmsg_in_chat_window: Boolean,\n\t\t}),\n\t);\n};\n\nconst validateAttachment = (attachment: any) => {\n\tcheck(\n\t\tattachment,\n\t\tobjectMaybeIncluding({\n\t\t\tcolor: String,\n\t\t\ttext: String,\n\t\t\tts: Match.OneOf(String, Number),\n\t\t\tthumb_url: validFullURLParam,\n\t\t\tbutton_alignment: String,\n\t\t\tactions: [Match.Any],\n\t\t\tmessage_link: validFullURLParam,\n\t\t\tcollapsed: Boolean,\n\t\t\tauthor_name: String,\n\t\t\tauthor_link: validFullURLParam,\n\t\t\tauthor_icon: validFullURLParam,\n\t\t\ttitle: String,\n\t\t\ttitle_link: validFullURLParam,\n\t\t\ttitle_link_download: Boolean,\n\t\t\timage_dimensions: Object,\n\t\t\timage_url: validFullURLParam,\n\t\t\timage_preview: String,\n\t\t\timage_type: String,\n\t\t\timage_size: Number,\n\t\t\taudio_url: validFullURLParam,\n\t\t\taudio_type: String,\n\t\t\taudio_size: Number,\n\t\t\tvideo_url: validFullURLParam,\n\t\t\tvideo_type: String,\n\t\t\tvideo_size: Number,\n\t\t\tfields: [Match.Any],\n\t\t}),\n\t);\n\n\tif (attachment.fields?.length) {\n\t\tattachment.fields.map(validateAttachmentsFields);\n\t}\n\n\tif (attachment.actions?.length) {\n\t\tattachment.actions.map(validateAttachmentsActions);\n\t}\n};\n\nconst validateBodyAttachments = (attachments: any[]) => attachments.map(validateAttachment);\n\nexport const validateMessage = async (message: any, room: any, user: any) => {\n\tcheck(\n\t\tmessage,\n\t\tobjectMaybeIncluding({\n\t\t\t_id: String,\n\t\t\tmsg: String,\n\t\t\ttext: String,\n\t\t\talias: String,\n\t\t\temoji: String,\n\t\t\ttmid: String,\n\t\t\ttshow: Boolean,\n\t\t\tavatar: validPartialURLParam,\n\t\t\tattachments: [Match.Any],\n\t\t\tblocks: [Match.Any],\n\t\t}),\n\t);\n\n\tif (message.alias || message.avatar) {\n\t\tconst isLiveChatGuest = !message.avatar && user.token && user.token === room.v?.token;\n\n\t\tif (!isLiveChatGuest && !(await hasPermissionAsync(user._id, 'message-impersonate', room._id))) {\n\t\t\tthrow new Error('Not enough permission');\n\t\t}\n\t}\n\n\tif (Array.isArray(message.attachments) && message.attachments.length) {\n\t\tvalidateBodyAttachments(message.attachments);\n\t}\n\n\tif (message.customFields) {\n\t\tvalidateCustomMessageFields({\n\t\t\tcustomFields: message.customFields,\n\t\t\tmessageCustomFieldsEnabled: settings.get<boolean>('Message_CustomFields_Enabled'),\n\t\t\tmessageCustomFields: settings.get<string>('Message_CustomFields'),\n\t\t});\n\t}\n};\n\nexport function prepareMessageObject(\n\tmessage: Partial<IMessage>,\n\trid: IRoom['_id'],\n\tuser: { _id: string; username?: string; name?: string },\n): asserts message is IMessage {\n\tif (!message.ts) {\n\t\tmessage.ts = new Date();\n\t}\n\n\tif (message.tshow !== true) {\n\t\tdelete message.tshow;\n\t}\n\n\tconst { _id, username, name } = user;\n\tmessage.u = {\n\t\t_id,\n\t\tusername: username as string, // FIXME: this is wrong but I don't want to change it now\n\t\tname,\n\t};\n\tmessage.rid = rid;\n\n\tif (!Match.test(message.msg, String)) {\n\t\tmessage.msg = '';\n\t}\n\n\tif (message.ts == null) {\n\t\tmessage.ts = new Date();\n\t}\n}\n\n/**\n * Validates and sends the message object.\n */\nexport const sendMessage = async function (user: any, message: any, room: any, upsert = false, previewUrls?: string[]) {\n\tif (!user || !message || !room._id) {\n\t\treturn false;\n\t}\n\n\tawait validateMessage(message, room, user);\n\tprepareMessageObject(message, room._id, user);\n\n\tif (message.t === 'otr') {\n\t\tvoid api.broadcast('otrMessage', { roomId: message.rid, message, user, room });\n\t\treturn message;\n\t}\n\n\tif (settings.get('Message_Read_Receipt_Enabled')) {\n\t\tmessage.unread = true;\n\t}\n\n\t// For the Rocket.Chat Apps :)\n\tif (Apps.self?.isLoaded()) {\n\t\tconst listenerBridge = Apps.getBridges()?.getListenerBridge();\n\n\t\tconst prevent = await listenerBridge?.messageEvent('IPreMessageSentPrevent', message);\n\t\tif (prevent) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await listenerBridge?.messageEvent(\n\t\t\t'IPreMessageSentModify',\n\t\t\tawait listenerBridge?.messageEvent('IPreMessageSentExtend', message),\n\t\t);\n\n\t\tif (typeof result === 'object') {\n\t\t\tmessage = Object.assign(message, result);\n\n\t\t\t// Some app may have inserted malicious/invalid values in the message, let's check it again\n\t\t\tawait validateMessage(message, room, user);\n\t\t}\n\t}\n\n\tparseUrlsInMessage(message, previewUrls);\n\n\tmessage = await Message.beforeSave({ message, room, user });\n\n\tif (!message) {\n\t\treturn;\n\t}\n\n\tif (message._id && upsert) {\n\t\tconst { _id } = message;\n\t\tdelete message._id;\n\t\tawait Messages.updateOne(\n\t\t\t{\n\t\t\t\t_id,\n\t\t\t\t'u._id': message.u._id,\n\t\t\t},\n\t\t\t{ $set: message },\n\t\t\t{ upsert: true },\n\t\t);\n\t\tmessage._id = _id;\n\t} else {\n\t\tconst messageAlreadyExists = message._id && (await Messages.findOneById(message._id, { projection: { _id: 1 } }));\n\t\tif (messageAlreadyExists) {\n\t\t\treturn;\n\t\t}\n\t\tconst { insertedId } = await Messages.insertOne(message);\n\t\tmessage._id = insertedId;\n\t}\n\n\tif (Apps.self?.isLoaded()) {\n\t\t// This returns a promise, but it won't mutate anything about the message\n\t\t// so, we don't really care if it is successful or fails\n\t\tvoid Apps.getBridges()?.getListenerBridge().messageEvent('IPostMessageSent', message);\n\t}\n\n\t// TODO: is there an opportunity to send returned data to notifyOnMessageChange?\n\tawait afterSaveMessage(message, room);\n\n\tvoid notifyOnMessageChange({ id: message._id });\n\n\tvoid notifyOnRoomChangedById(message.rid);\n\n\treturn message;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      validateMessage: () => validateMessage,\n      prepareMessageObject: () => prepareMessageObject,\n      sendMessage: () => sendMessage\n    });\n    let Apps;\n    module.link(\"@rocket.chat/apps\", {\n      Apps(v) {\n        Apps = v;\n      }\n    }, 0);\n    let api, Message;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      },\n      Message(v) {\n        Message = v;\n      }\n    }, 1);\n    let Messages;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      }\n    }, 2);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 3);\n    let isRelativeURL;\n    module.link(\"../../../../lib/utils/isRelativeURL\", {\n      isRelativeURL(v) {\n        isRelativeURL = v;\n      }\n    }, 4);\n    let isURL;\n    module.link(\"../../../../lib/utils/isURL\", {\n      isURL(v) {\n        isURL = v;\n      }\n    }, 5);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 6);\n    let FileUpload;\n    module.link(\"../../../file-upload/server\", {\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 7);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 8);\n    let afterSaveMessage;\n    module.link(\"../lib/afterSaveMessage\", {\n      afterSaveMessage(v) {\n        afterSaveMessage = v;\n      }\n    }, 9);\n    let notifyOnRoomChangedById, notifyOnMessageChange;\n    module.link(\"../lib/notifyListener\", {\n      notifyOnRoomChangedById(v) {\n        notifyOnRoomChangedById = v;\n      },\n      notifyOnMessageChange(v) {\n        notifyOnMessageChange = v;\n      }\n    }, 10);\n    let validateCustomMessageFields;\n    module.link(\"../lib/validateCustomMessageFields\", {\n      validateCustomMessageFields(v) {\n        validateCustomMessageFields = v;\n      }\n    }, 11);\n    let parseUrlsInMessage;\n    module.link(\"./parseUrlsInMessage\", {\n      parseUrlsInMessage(v) {\n        parseUrlsInMessage = v;\n      }\n    }, 12);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    // TODO: most of the types here are wrong, but I don't want to change them now\n    /**\n     * IMPORTANT\n     *\n     * This validator prevents malicious href values\n     * intending to run arbitrary js code in anchor tags.\n     * You should use it whenever the value you're checking\n     * is going to be rendered in the href attribute of a\n     * link.\n     */\n    const validFullURLParam = Match.Where(value => {\n      check(value, String);\n      if (!isURL(value) && !value.startsWith(FileUpload.getPath())) {\n        throw new Error('Invalid href value provided');\n      }\n      if (/^javascript:/i.test(value)) {\n        throw new Error('Invalid href value provided');\n      }\n      return true;\n    });\n    const validPartialURLParam = Match.Where(value => {\n      check(value, String);\n      if (!isRelativeURL(value) && !isURL(value) && !value.startsWith(FileUpload.getPath())) {\n        throw new Error('Invalid href value provided');\n      }\n      if (/^javascript:/i.test(value)) {\n        throw new Error('Invalid href value provided');\n      }\n      return true;\n    });\n    const objectMaybeIncluding = types => Match.Where(value => {\n      Object.keys(types).forEach(field => {\n        if (value[field] != null) {\n          try {\n            check(value[field], types[field]);\n          } catch (error) {\n            error.path = field;\n            throw error;\n          }\n        }\n      });\n      return true;\n    });\n    const validateAttachmentsFields = attachmentField => {\n      check(attachmentField, objectMaybeIncluding({\n        short: Boolean,\n        title: String,\n        value: Match.OneOf(String, Number, Boolean)\n      }));\n      if (typeof attachmentField.value !== 'undefined') {\n        attachmentField.value = String(attachmentField.value);\n      }\n    };\n    const validateAttachmentsActions = attachmentActions => {\n      check(attachmentActions, objectMaybeIncluding({\n        type: String,\n        text: String,\n        url: validFullURLParam,\n        image_url: validFullURLParam,\n        is_webview: Boolean,\n        webview_height_ratio: String,\n        msg: String,\n        msg_in_chat_window: Boolean\n      }));\n    };\n    const validateAttachment = attachment => {\n      var _attachment$fields, _attachment$actions;\n      check(attachment, objectMaybeIncluding({\n        color: String,\n        text: String,\n        ts: Match.OneOf(String, Number),\n        thumb_url: validFullURLParam,\n        button_alignment: String,\n        actions: [Match.Any],\n        message_link: validFullURLParam,\n        collapsed: Boolean,\n        author_name: String,\n        author_link: validFullURLParam,\n        author_icon: validFullURLParam,\n        title: String,\n        title_link: validFullURLParam,\n        title_link_download: Boolean,\n        image_dimensions: Object,\n        image_url: validFullURLParam,\n        image_preview: String,\n        image_type: String,\n        image_size: Number,\n        audio_url: validFullURLParam,\n        audio_type: String,\n        audio_size: Number,\n        video_url: validFullURLParam,\n        video_type: String,\n        video_size: Number,\n        fields: [Match.Any]\n      }));\n      if ((_attachment$fields = attachment.fields) !== null && _attachment$fields !== void 0 && _attachment$fields.length) {\n        attachment.fields.map(validateAttachmentsFields);\n      }\n      if ((_attachment$actions = attachment.actions) !== null && _attachment$actions !== void 0 && _attachment$actions.length) {\n        attachment.actions.map(validateAttachmentsActions);\n      }\n    };\n    const validateBodyAttachments = attachments => attachments.map(validateAttachment);\n    const validateMessage = async (message, room, user) => {\n      check(message, objectMaybeIncluding({\n        _id: String,\n        msg: String,\n        text: String,\n        alias: String,\n        emoji: String,\n        tmid: String,\n        tshow: Boolean,\n        avatar: validPartialURLParam,\n        attachments: [Match.Any],\n        blocks: [Match.Any]\n      }));\n      if (message.alias || message.avatar) {\n        var _room$v;\n        const isLiveChatGuest = !message.avatar && user.token && user.token === ((_room$v = room.v) === null || _room$v === void 0 ? void 0 : _room$v.token);\n        if (!isLiveChatGuest && !(await hasPermissionAsync(user._id, 'message-impersonate', room._id))) {\n          throw new Error('Not enough permission');\n        }\n      }\n      if (Array.isArray(message.attachments) && message.attachments.length) {\n        validateBodyAttachments(message.attachments);\n      }\n      if (message.customFields) {\n        validateCustomMessageFields({\n          customFields: message.customFields,\n          messageCustomFieldsEnabled: settings.get('Message_CustomFields_Enabled'),\n          messageCustomFields: settings.get('Message_CustomFields')\n        });\n      }\n    };\n    function prepareMessageObject(message, rid, user) {\n      if (!message.ts) {\n        message.ts = new Date();\n      }\n      if (message.tshow !== true) {\n        delete message.tshow;\n      }\n      const {\n        _id,\n        username,\n        name\n      } = user;\n      message.u = {\n        _id,\n        username: username,\n        // FIXME: this is wrong but I don't want to change it now\n        name\n      };\n      message.rid = rid;\n      if (!Match.test(message.msg, String)) {\n        message.msg = '';\n      }\n      if (message.ts == null) {\n        message.ts = new Date();\n      }\n    }\n    const sendMessage = async function (user, message, room) {\n      var _Apps$self, _Apps$self2;\n      let upsert = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      let previewUrls = arguments.length > 4 ? arguments[4] : undefined;\n      if (!user || !message || !room._id) {\n        return false;\n      }\n      await validateMessage(message, room, user);\n      prepareMessageObject(message, room._id, user);\n      if (message.t === 'otr') {\n        void api.broadcast('otrMessage', {\n          roomId: message.rid,\n          message,\n          user,\n          room\n        });\n        return message;\n      }\n      if (settings.get('Message_Read_Receipt_Enabled')) {\n        message.unread = true;\n      }\n      // For the Rocket.Chat Apps :)\n      if ((_Apps$self = Apps.self) !== null && _Apps$self !== void 0 && _Apps$self.isLoaded()) {\n        var _Apps$getBridges;\n        const listenerBridge = (_Apps$getBridges = Apps.getBridges()) === null || _Apps$getBridges === void 0 ? void 0 : _Apps$getBridges.getListenerBridge();\n        const prevent = await (listenerBridge === null || listenerBridge === void 0 ? void 0 : listenerBridge.messageEvent('IPreMessageSentPrevent', message));\n        if (prevent) {\n          return;\n        }\n        const result = await (listenerBridge === null || listenerBridge === void 0 ? void 0 : listenerBridge.messageEvent('IPreMessageSentModify', await (listenerBridge === null || listenerBridge === void 0 ? void 0 : listenerBridge.messageEvent('IPreMessageSentExtend', message))));\n        if (typeof result === 'object') {\n          message = Object.assign(message, result);\n          // Some app may have inserted malicious/invalid values in the message, let's check it again\n          await validateMessage(message, room, user);\n        }\n      }\n      parseUrlsInMessage(message, previewUrls);\n      message = await Message.beforeSave({\n        message,\n        room,\n        user\n      });\n      if (!message) {\n        return;\n      }\n      if (message._id && upsert) {\n        const {\n          _id\n        } = message;\n        delete message._id;\n        await Messages.updateOne({\n          _id,\n          'u._id': message.u._id\n        }, {\n          $set: message\n        }, {\n          upsert: true\n        });\n        message._id = _id;\n      } else {\n        const messageAlreadyExists = message._id && (await Messages.findOneById(message._id, {\n          projection: {\n            _id: 1\n          }\n        }));\n        if (messageAlreadyExists) {\n          return;\n        }\n        const {\n          insertedId\n        } = await Messages.insertOne(message);\n        message._id = insertedId;\n      }\n      if ((_Apps$self2 = Apps.self) !== null && _Apps$self2 !== void 0 && _Apps$self2.isLoaded()) {\n        var _Apps$getBridges2;\n        // This returns a promise, but it won't mutate anything about the message\n        // so, we don't really care if it is successful or fails\n        void ((_Apps$getBridges2 = Apps.getBridges()) === null || _Apps$getBridges2 === void 0 ? void 0 : _Apps$getBridges2.getListenerBridge().messageEvent('IPostMessageSent', message));\n      }\n      // TODO: is there an opportunity to send returned data to notifyOnMessageChange?\n      await afterSaveMessage(message, room);\n      void notifyOnMessageChange({\n        id: message._id\n      });\n      void notifyOnRoomChangedById(message.rid);\n      return message;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","validateMessage","prepareMessageObject","sendMessage","Apps","link","v","api","Message","Messages","Match","check","isRelativeURL","isURL","hasPermissionAsync","FileUpload","settings","afterSaveMessage","notifyOnRoomChangedById","notifyOnMessageChange","validateCustomMessageFields","parseUrlsInMessage","__reifyWaitForDeps__","validFullURLParam","Where","value","String","startsWith","getPath","Error","test","validPartialURLParam","objectMaybeIncluding","types","Object","keys","forEach","field","error","path","validateAttachmentsFields","attachmentField","short","Boolean","title","OneOf","Number","validateAttachmentsActions","attachmentActions","type","text","url","image_url","is_webview","webview_height_ratio","msg","msg_in_chat_window","validateAttachment","attachment","_attachment$fields","_attachment$actions","color","ts","thumb_url","button_alignment","actions","Any","message_link","collapsed","author_name","author_link","author_icon","title_link","title_link_download","image_dimensions","image_preview","image_type","image_size","audio_url","audio_type","audio_size","video_url","video_type","video_size","fields","length","map","validateBodyAttachments","attachments","message","room","user","_id","alias","emoji","tmid","tshow","avatar","blocks","_room$v","isLiveChatGuest","token","Array","isArray","customFields","messageCustomFieldsEnabled","get","messageCustomFields","rid","Date","username","name","u","_Apps$self","_Apps$self2","upsert","arguments","undefined","previewUrls","t","broadcast","roomId","unread","self","isLoaded","_Apps$getBridges","listenerBridge","getBridges","getListenerBridge","prevent","messageEvent","result","assign","beforeSave","updateOne","$set","messageAlreadyExists","findOneById","projection","insertedId","insertOne","_Apps$getBridges2","id","__reify_async_result__","_reifyError","async"],"sources":["app/lib/server/functions/sendMessage.ts"],"sourcesContent":["import { Apps } from '@rocket.chat/apps';\nimport { api, Message } from '@rocket.chat/core-services';\nimport type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\n\nimport { isRelativeURL } from '../../../../lib/utils/isRelativeURL';\nimport { isURL } from '../../../../lib/utils/isURL';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { FileUpload } from '../../../file-upload/server';\nimport { settings } from '../../../settings/server';\nimport { afterSaveMessage } from '../lib/afterSaveMessage';\nimport { notifyOnRoomChangedById, notifyOnMessageChange } from '../lib/notifyListener';\nimport { validateCustomMessageFields } from '../lib/validateCustomMessageFields';\nimport { parseUrlsInMessage } from './parseUrlsInMessage';\n\n// TODO: most of the types here are wrong, but I don't want to change them now\n\n/**\n * IMPORTANT\n *\n * This validator prevents malicious href values\n * intending to run arbitrary js code in anchor tags.\n * You should use it whenever the value you're checking\n * is going to be rendered in the href attribute of a\n * link.\n */\nconst validFullURLParam = Match.Where((value) => {\n\tcheck(value, String);\n\n\tif (!isURL(value) && !value.startsWith(FileUpload.getPath())) {\n\t\tthrow new Error('Invalid href value provided');\n\t}\n\n\tif (/^javascript:/i.test(value)) {\n\t\tthrow new Error('Invalid href value provided');\n\t}\n\n\treturn true;\n});\n\nconst validPartialURLParam = Match.Where((value) => {\n\tcheck(value, String);\n\n\tif (!isRelativeURL(value) && !isURL(value) && !value.startsWith(FileUpload.getPath())) {\n\t\tthrow new Error('Invalid href value provided');\n\t}\n\n\tif (/^javascript:/i.test(value)) {\n\t\tthrow new Error('Invalid href value provided');\n\t}\n\n\treturn true;\n});\n\nconst objectMaybeIncluding = (types: any) =>\n\tMatch.Where((value: any) => {\n\t\tObject.keys(types).forEach((field) => {\n\t\t\tif (value[field] != null) {\n\t\t\t\ttry {\n\t\t\t\t\tcheck(value[field], types[field]);\n\t\t\t\t} catch (error: any) {\n\t\t\t\t\terror.path = field;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn true;\n\t});\n\nconst validateAttachmentsFields = (attachmentField: any) => {\n\tcheck(\n\t\tattachmentField,\n\t\tobjectMaybeIncluding({\n\t\t\tshort: Boolean,\n\t\t\ttitle: String,\n\t\t\tvalue: Match.OneOf(String, Number, Boolean),\n\t\t}),\n\t);\n\n\tif (typeof attachmentField.value !== 'undefined') {\n\t\tattachmentField.value = String(attachmentField.value);\n\t}\n};\n\nconst validateAttachmentsActions = (attachmentActions: any) => {\n\tcheck(\n\t\tattachmentActions,\n\t\tobjectMaybeIncluding({\n\t\t\ttype: String,\n\t\t\ttext: String,\n\t\t\turl: validFullURLParam,\n\t\t\timage_url: validFullURLParam,\n\t\t\tis_webview: Boolean,\n\t\t\twebview_height_ratio: String,\n\t\t\tmsg: String,\n\t\t\tmsg_in_chat_window: Boolean,\n\t\t}),\n\t);\n};\n\nconst validateAttachment = (attachment: any) => {\n\tcheck(\n\t\tattachment,\n\t\tobjectMaybeIncluding({\n\t\t\tcolor: String,\n\t\t\ttext: String,\n\t\t\tts: Match.OneOf(String, Number),\n\t\t\tthumb_url: validFullURLParam,\n\t\t\tbutton_alignment: String,\n\t\t\tactions: [Match.Any],\n\t\t\tmessage_link: validFullURLParam,\n\t\t\tcollapsed: Boolean,\n\t\t\tauthor_name: String,\n\t\t\tauthor_link: validFullURLParam,\n\t\t\tauthor_icon: validFullURLParam,\n\t\t\ttitle: String,\n\t\t\ttitle_link: validFullURLParam,\n\t\t\ttitle_link_download: Boolean,\n\t\t\timage_dimensions: Object,\n\t\t\timage_url: validFullURLParam,\n\t\t\timage_preview: String,\n\t\t\timage_type: String,\n\t\t\timage_size: Number,\n\t\t\taudio_url: validFullURLParam,\n\t\t\taudio_type: String,\n\t\t\taudio_size: Number,\n\t\t\tvideo_url: validFullURLParam,\n\t\t\tvideo_type: String,\n\t\t\tvideo_size: Number,\n\t\t\tfields: [Match.Any],\n\t\t}),\n\t);\n\n\tif (attachment.fields?.length) {\n\t\tattachment.fields.map(validateAttachmentsFields);\n\t}\n\n\tif (attachment.actions?.length) {\n\t\tattachment.actions.map(validateAttachmentsActions);\n\t}\n};\n\nconst validateBodyAttachments = (attachments: any[]) => attachments.map(validateAttachment);\n\nexport const validateMessage = async (message: any, room: any, user: any) => {\n\tcheck(\n\t\tmessage,\n\t\tobjectMaybeIncluding({\n\t\t\t_id: String,\n\t\t\tmsg: String,\n\t\t\ttext: String,\n\t\t\talias: String,\n\t\t\temoji: String,\n\t\t\ttmid: String,\n\t\t\ttshow: Boolean,\n\t\t\tavatar: validPartialURLParam,\n\t\t\tattachments: [Match.Any],\n\t\t\tblocks: [Match.Any],\n\t\t}),\n\t);\n\n\tif (message.alias || message.avatar) {\n\t\tconst isLiveChatGuest = !message.avatar && user.token && user.token === room.v?.token;\n\n\t\tif (!isLiveChatGuest && !(await hasPermissionAsync(user._id, 'message-impersonate', room._id))) {\n\t\t\tthrow new Error('Not enough permission');\n\t\t}\n\t}\n\n\tif (Array.isArray(message.attachments) && message.attachments.length) {\n\t\tvalidateBodyAttachments(message.attachments);\n\t}\n\n\tif (message.customFields) {\n\t\tvalidateCustomMessageFields({\n\t\t\tcustomFields: message.customFields,\n\t\t\tmessageCustomFieldsEnabled: settings.get<boolean>('Message_CustomFields_Enabled'),\n\t\t\tmessageCustomFields: settings.get<string>('Message_CustomFields'),\n\t\t});\n\t}\n};\n\nexport function prepareMessageObject(\n\tmessage: Partial<IMessage>,\n\trid: IRoom['_id'],\n\tuser: { _id: string; username?: string; name?: string },\n): asserts message is IMessage {\n\tif (!message.ts) {\n\t\tmessage.ts = new Date();\n\t}\n\n\tif (message.tshow !== true) {\n\t\tdelete message.tshow;\n\t}\n\n\tconst { _id, username, name } = user;\n\tmessage.u = {\n\t\t_id,\n\t\tusername: username as string, // FIXME: this is wrong but I don't want to change it now\n\t\tname,\n\t};\n\tmessage.rid = rid;\n\n\tif (!Match.test(message.msg, String)) {\n\t\tmessage.msg = '';\n\t}\n\n\tif (message.ts == null) {\n\t\tmessage.ts = new Date();\n\t}\n}\n\n/**\n * Validates and sends the message object.\n */\nexport const sendMessage = async function (user: any, message: any, room: any, upsert = false, previewUrls?: string[]) {\n\tif (!user || !message || !room._id) {\n\t\treturn false;\n\t}\n\n\tawait validateMessage(message, room, user);\n\tprepareMessageObject(message, room._id, user);\n\n\tif (message.t === 'otr') {\n\t\tvoid api.broadcast('otrMessage', { roomId: message.rid, message, user, room });\n\t\treturn message;\n\t}\n\n\tif (settings.get('Message_Read_Receipt_Enabled')) {\n\t\tmessage.unread = true;\n\t}\n\n\t// For the Rocket.Chat Apps :)\n\tif (Apps.self?.isLoaded()) {\n\t\tconst listenerBridge = Apps.getBridges()?.getListenerBridge();\n\n\t\tconst prevent = await listenerBridge?.messageEvent('IPreMessageSentPrevent', message);\n\t\tif (prevent) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await listenerBridge?.messageEvent(\n\t\t\t'IPreMessageSentModify',\n\t\t\tawait listenerBridge?.messageEvent('IPreMessageSentExtend', message),\n\t\t);\n\n\t\tif (typeof result === 'object') {\n\t\t\tmessage = Object.assign(message, result);\n\n\t\t\t// Some app may have inserted malicious/invalid values in the message, let's check it again\n\t\t\tawait validateMessage(message, room, user);\n\t\t}\n\t}\n\n\tparseUrlsInMessage(message, previewUrls);\n\n\tmessage = await Message.beforeSave({ message, room, user });\n\n\tif (!message) {\n\t\treturn;\n\t}\n\n\tif (message._id && upsert) {\n\t\tconst { _id } = message;\n\t\tdelete message._id;\n\t\tawait Messages.updateOne(\n\t\t\t{\n\t\t\t\t_id,\n\t\t\t\t'u._id': message.u._id,\n\t\t\t},\n\t\t\t{ $set: message },\n\t\t\t{ upsert: true },\n\t\t);\n\t\tmessage._id = _id;\n\t} else {\n\t\tconst messageAlreadyExists = message._id && (await Messages.findOneById(message._id, { projection: { _id: 1 } }));\n\t\tif (messageAlreadyExists) {\n\t\t\treturn;\n\t\t}\n\t\tconst { insertedId } = await Messages.insertOne(message);\n\t\tmessage._id = insertedId;\n\t}\n\n\tif (Apps.self?.isLoaded()) {\n\t\t// This returns a promise, but it won't mutate anything about the message\n\t\t// so, we don't really care if it is successful or fails\n\t\tvoid Apps.getBridges()?.getListenerBridge().messageEvent('IPostMessageSent', message);\n\t}\n\n\t// TODO: is there an opportunity to send returned data to notifyOnMessageChange?\n\tawait afterSaveMessage(message, room);\n\n\tvoid notifyOnMessageChange({ id: message._id });\n\n\tvoid notifyOnRoomChangedById(message.rid);\n\n\treturn message;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c4c884d0f5f712d360132b668d808bacb30197ce"}
