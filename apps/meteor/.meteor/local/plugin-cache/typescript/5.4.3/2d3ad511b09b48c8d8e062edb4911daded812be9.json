{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/cas/createNewUser.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/cas/createNewUser.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/cas/createNewUser.ts","inputSourceMap":{"version":3,"file":"server/lib/cas/createNewUser.ts","sourceRoot":"","sources":["server/lib/cas/createNewUser.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACnD,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAC1C,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAEhD,OAAO,EAAE,UAAU,EAAE,MAAM,8CAA8C,CAAC;AAC1E,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAQlC,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,EAAE,QAAgB,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,mBAAmB,EAAkB,EAAkB,EAAE;IACxI,kBAAkB;IAClB,MAAM,OAAO,GAAG;QACf,QAAQ,EAAE,UAAU,CAAC,QAAQ,IAAI,QAAQ;QACzC,MAAM,EAAE,IAAI;QACZ,WAAW,EAAE,CAAC,MAAM,CAAC;QACrB,MAAM,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;aACxB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;aAChB,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YAClB,OAAO;YACP,QAAQ,EAAE,mBAAmB;SAC7B,CAAC,CAAC;QACJ,QAAQ,EAAE;YACT,GAAG,EAAE;gBACJ,WAAW,EAAE,QAAQ;gBACrB,OAAO,EAAE,UAAU;gBACnB,KAAK,EAAE,UAAU;aACjB;SACD;QACD,GAAG,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC;KAC3B,CAAC;IAEF,kBAAkB;IAClB,MAAM,CAAC,KAAK,CAAC,SAAS,QAAQ,mCAAmC,CAAC,CAAC;IACnE,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,aAAa,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAEzD,mBAAmB;IACnB,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC7C,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;IAC9E,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,yBAAyB,QAAQ,cAAc,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAExE,MAAM,CAAC,KAAK,CAAC,uCAAuC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;IACxE,IAAI,UAAU,CAAC,KAAK,EAAE,CAAC;QACtB,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9C,IAAI,KAAK,EAAE,MAAM,QAAQ,IAAI,SAAS,EAAE,CAAC;YACxC,IAAI,QAAQ,EAAE,CAAC;gBACd,IAAI,IAAI,GAAG,MAAM,KAAK,CAAC,oBAAoB,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;gBAC3D,IAAI,CAAC,IAAI,EAAE,CAAC;oBACX,IAAI,GAAG,MAAM,UAAU,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAC9C,CAAC;YACF,CAAC;QACF,CAAC;IACF,CAAC;IAED,OAAO,IAAI,CAAC;AACb,CAAC,CAAC","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { pick } from '@rocket.chat/tools';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport { createRoom } from '../../../app/lib/server/functions/createRoom';\nimport { logger } from './logger';\n\ntype CASUserOptions = {\n\tattributes: Record<string, string | undefined>;\n\tcasVersion: number;\n\tflagEmailAsVerified: boolean;\n};\n\nexport const createNewUser = async (username: string, { attributes, casVersion, flagEmailAsVerified }: CASUserOptions): Promise<IUser> => {\n\t// Define new user\n\tconst newUser = {\n\t\tusername: attributes.username || username,\n\t\tactive: true,\n\t\tglobalRoles: ['user'],\n\t\temails: [attributes.email]\n\t\t\t.filter((e) => e)\n\t\t\t.map((address) => ({\n\t\t\t\taddress,\n\t\t\t\tverified: flagEmailAsVerified,\n\t\t\t})),\n\t\tservices: {\n\t\t\tcas: {\n\t\t\t\texternal_id: username,\n\t\t\t\tversion: casVersion,\n\t\t\t\tattrs: attributes,\n\t\t\t},\n\t\t},\n\t\t...pick(attributes, 'name'),\n\t};\n\n\t// Create the user\n\tlogger.debug(`User \"${username}\" does not exist yet, creating it`);\n\tconst userId = await Accounts.insertUserDoc({}, newUser);\n\n\t// Fetch and use it\n\tconst user = await Users.findOneById(userId);\n\tif (!user) {\n\t\tthrow new Error('Unexpected error: Unable to find user after its creation.');\n\t}\n\n\tlogger.debug(`Created new user for '${username}' with id: ${user._id}`);\n\n\tlogger.debug(`Joining user to attribute channels: ${attributes.rooms}`);\n\tif (attributes.rooms) {\n\t\tconst roomNames = attributes.rooms.split(',');\n\t\tfor await (const roomName of roomNames) {\n\t\t\tif (roomName) {\n\t\t\t\tlet room = await Rooms.findOneByNameAndType(roomName, 'c');\n\t\t\t\tif (!room) {\n\t\t\t\t\troom = await createRoom('c', roomName, user);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn user;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/cas/createNewUser.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/cas/createNewUser.ts","inputSourceMap":{"version":3,"file":"server/lib/cas/createNewUser.ts","sourceRoot":"","sources":["server/lib/cas/createNewUser.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACnD,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAC1C,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAEhD,OAAO,EAAE,UAAU,EAAE,MAAM,8CAA8C,CAAC;AAC1E,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAQlC,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,EAAE,QAAgB,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,mBAAmB,EAAkB,EAAkB,EAAE;IACxI,kBAAkB;IAClB,MAAM,OAAO,GAAG;QACf,QAAQ,EAAE,UAAU,CAAC,QAAQ,IAAI,QAAQ;QACzC,MAAM,EAAE,IAAI;QACZ,WAAW,EAAE,CAAC,MAAM,CAAC;QACrB,MAAM,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;aACxB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;aAChB,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YAClB,OAAO;YACP,QAAQ,EAAE,mBAAmB;SAC7B,CAAC,CAAC;QACJ,QAAQ,EAAE;YACT,GAAG,EAAE;gBACJ,WAAW,EAAE,QAAQ;gBACrB,OAAO,EAAE,UAAU;gBACnB,KAAK,EAAE,UAAU;aACjB;SACD;QACD,GAAG,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC;KAC3B,CAAC;IAEF,kBAAkB;IAClB,MAAM,CAAC,KAAK,CAAC,SAAS,QAAQ,mCAAmC,CAAC,CAAC;IACnE,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,aAAa,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAEzD,mBAAmB;IACnB,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC7C,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;IAC9E,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,yBAAyB,QAAQ,cAAc,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAExE,MAAM,CAAC,KAAK,CAAC,uCAAuC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;IACxE,IAAI,UAAU,CAAC,KAAK,EAAE,CAAC;QACtB,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9C,IAAI,KAAK,EAAE,MAAM,QAAQ,IAAI,SAAS,EAAE,CAAC;YACxC,IAAI,QAAQ,EAAE,CAAC;gBACd,IAAI,IAAI,GAAG,MAAM,KAAK,CAAC,oBAAoB,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;gBAC3D,IAAI,CAAC,IAAI,EAAE,CAAC;oBACX,IAAI,GAAG,MAAM,UAAU,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAC9C,CAAC;YACF,CAAC;QACF,CAAC;IACF,CAAC;IAED,OAAO,IAAI,CAAC;AACb,CAAC,CAAC","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { pick } from '@rocket.chat/tools';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport { createRoom } from '../../../app/lib/server/functions/createRoom';\nimport { logger } from './logger';\n\ntype CASUserOptions = {\n\tattributes: Record<string, string | undefined>;\n\tcasVersion: number;\n\tflagEmailAsVerified: boolean;\n};\n\nexport const createNewUser = async (username: string, { attributes, casVersion, flagEmailAsVerified }: CASUserOptions): Promise<IUser> => {\n\t// Define new user\n\tconst newUser = {\n\t\tusername: attributes.username || username,\n\t\tactive: true,\n\t\tglobalRoles: ['user'],\n\t\temails: [attributes.email]\n\t\t\t.filter((e) => e)\n\t\t\t.map((address) => ({\n\t\t\t\taddress,\n\t\t\t\tverified: flagEmailAsVerified,\n\t\t\t})),\n\t\tservices: {\n\t\t\tcas: {\n\t\t\t\texternal_id: username,\n\t\t\t\tversion: casVersion,\n\t\t\t\tattrs: attributes,\n\t\t\t},\n\t\t},\n\t\t...pick(attributes, 'name'),\n\t};\n\n\t// Create the user\n\tlogger.debug(`User \"${username}\" does not exist yet, creating it`);\n\tconst userId = await Accounts.insertUserDoc({}, newUser);\n\n\t// Fetch and use it\n\tconst user = await Users.findOneById(userId);\n\tif (!user) {\n\t\tthrow new Error('Unexpected error: Unable to find user after its creation.');\n\t}\n\n\tlogger.debug(`Created new user for '${username}' with id: ${user._id}`);\n\n\tlogger.debug(`Joining user to attribute channels: ${attributes.rooms}`);\n\tif (attributes.rooms) {\n\t\tconst roomNames = attributes.rooms.split(',');\n\t\tfor await (const roomName of roomNames) {\n\t\t\tif (roomName) {\n\t\t\t\tlet room = await Rooms.findOneByNameAndType(roomName, 'c');\n\t\t\t\tif (!room) {\n\t\t\t\t\troom = await createRoom('c', roomName, user);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn user;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      createNewUser: () => createNewUser\n    });\n    let Rooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let pick;\n    module.link(\"@rocket.chat/tools\", {\n      pick(v) {\n        pick = v;\n      }\n    }, 1);\n    let Accounts;\n    module.link(\"meteor/accounts-base\", {\n      Accounts(v) {\n        Accounts = v;\n      }\n    }, 2);\n    let createRoom;\n    module.link(\"../../../app/lib/server/functions/createRoom\", {\n      createRoom(v) {\n        createRoom = v;\n      }\n    }, 3);\n    let logger;\n    module.link(\"./logger\", {\n      logger(v) {\n        logger = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const createNewUser = async (username, _ref) => {\n      let {\n        attributes,\n        casVersion,\n        flagEmailAsVerified\n      } = _ref;\n      // Define new user\n      const newUser = _objectSpread({\n        username: attributes.username || username,\n        active: true,\n        globalRoles: ['user'],\n        emails: [attributes.email].filter(e => e).map(address => ({\n          address,\n          verified: flagEmailAsVerified\n        })),\n        services: {\n          cas: {\n            external_id: username,\n            version: casVersion,\n            attrs: attributes\n          }\n        }\n      }, pick(attributes, 'name'));\n      // Create the user\n      logger.debug(\"User \\\"\".concat(username, \"\\\" does not exist yet, creating it\"));\n      const userId = await Accounts.insertUserDoc({}, newUser);\n      // Fetch and use it\n      const user = await Users.findOneById(userId);\n      if (!user) {\n        throw new Error('Unexpected error: Unable to find user after its creation.');\n      }\n      logger.debug(\"Created new user for '\".concat(username, \"' with id: \").concat(user._id));\n      logger.debug(\"Joining user to attribute channels: \".concat(attributes.rooms));\n      if (attributes.rooms) {\n        const roomNames = attributes.rooms.split(',');\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(roomNames), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const roomName = _step.value;\n            {\n              if (roomName) {\n                let room = await Rooms.findOneByNameAndType(roomName, 'c');\n                if (!room) {\n                  room = await createRoom('c', roomName, user);\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n      return user;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","createNewUser","Rooms","Users","pick","Accounts","createRoom","logger","__reifyWaitForDeps__","username","_ref","attributes","casVersion","flagEmailAsVerified","newUser","active","globalRoles","emails","email","filter","e","map","address","verified","services","cas","external_id","version","attrs","debug","concat","userId","insertUserDoc","user","findOneById","Error","_id","rooms","roomNames","split","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","roomName","value","room","findOneByNameAndType","err","return","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/cas/createNewUser.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { pick } from '@rocket.chat/tools';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport { createRoom } from '../../../app/lib/server/functions/createRoom';\nimport { logger } from './logger';\n\ntype CASUserOptions = {\n\tattributes: Record<string, string | undefined>;\n\tcasVersion: number;\n\tflagEmailAsVerified: boolean;\n};\n\nexport const createNewUser = async (username: string, { attributes, casVersion, flagEmailAsVerified }: CASUserOptions): Promise<IUser> => {\n\t// Define new user\n\tconst newUser = {\n\t\tusername: attributes.username || username,\n\t\tactive: true,\n\t\tglobalRoles: ['user'],\n\t\temails: [attributes.email]\n\t\t\t.filter((e) => e)\n\t\t\t.map((address) => ({\n\t\t\t\taddress,\n\t\t\t\tverified: flagEmailAsVerified,\n\t\t\t})),\n\t\tservices: {\n\t\t\tcas: {\n\t\t\t\texternal_id: username,\n\t\t\t\tversion: casVersion,\n\t\t\t\tattrs: attributes,\n\t\t\t},\n\t\t},\n\t\t...pick(attributes, 'name'),\n\t};\n\n\t// Create the user\n\tlogger.debug(`User \"${username}\" does not exist yet, creating it`);\n\tconst userId = await Accounts.insertUserDoc({}, newUser);\n\n\t// Fetch and use it\n\tconst user = await Users.findOneById(userId);\n\tif (!user) {\n\t\tthrow new Error('Unexpected error: Unable to find user after its creation.');\n\t}\n\n\tlogger.debug(`Created new user for '${username}' with id: ${user._id}`);\n\n\tlogger.debug(`Joining user to attribute channels: ${attributes.rooms}`);\n\tif (attributes.rooms) {\n\t\tconst roomNames = attributes.rooms.split(',');\n\t\tfor await (const roomName of roomNames) {\n\t\t\tif (roomName) {\n\t\t\t\tlet room = await Rooms.findOneByNameAndType(roomName, 'c');\n\t\t\t\tif (!room) {\n\t\t\t\t\troom = await createRoom('c', roomName, user);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn user;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2d3ad511b09b48c8d8e062edb4911daded812be9"}
