{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/hooks/saveLastMessageToInquiry.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/hooks/saveLastMessageToInquiry.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/hooks/saveLastMessageToInquiry.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/hooks/saveLastMessageToInquiry.ts","sourceRoot":"","sources":["app/livechat/server/hooks/saveLastMessageToInquiry.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAC5D,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEtD,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,8BAA8B,EAAE,MAAM,wCAAwC,CAAC;AACxF,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AAEvD,SAAS,CAAC,GAAG,CACZ,6BAA6B,EAC7B,KAAK,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC3B,IAAI,eAAe,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC;QAC3C,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,CAAC;QAC5C,yFAAyF;QACzF,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAE,CAAC;QACzC,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,MAAM,eAAe,GAAG,MAAM,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACxF,IAAI,eAAe,EAAE,CAAC;QACrB,KAAK,8BAA8B,CAAC,eAAe,EAAE,SAAS,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,EACD,SAAS,CAAC,QAAQ,CAAC,GAAG,EACtB,8BAA8B,CAC9B,CAAC","sourcesContent":["import { isEditedMessage } from '@rocket.chat/core-typings';\nimport { LivechatInquiry } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { notifyOnLivechatInquiryChanged } from '../../../lib/server/lib/notifyListener';\nimport { settings } from '../../../settings/server';\nimport { RoutingManager } from '../lib/RoutingManager';\n\ncallbacks.add(\n\t'afterOmnichannelSaveMessage',\n\tasync (message, { room }) => {\n\t\tif (isEditedMessage(message) || message.t) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!RoutingManager.getConfig()?.showQueue) {\n\t\t\t// since last message is only getting used on UI as preview message when queue is enabled\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!settings.get('Store_Last_Message')) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst livechatInquiry = await LivechatInquiry.setLastMessageByRoomId(room._id, message);\n\t\tif (livechatInquiry) {\n\t\t\tvoid notifyOnLivechatInquiryChanged(livechatInquiry, 'updated', { lastMessage: message });\n\t\t}\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'save-last-message-to-inquiry',\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/hooks/saveLastMessageToInquiry.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/hooks/saveLastMessageToInquiry.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/hooks/saveLastMessageToInquiry.ts","sourceRoot":"","sources":["app/livechat/server/hooks/saveLastMessageToInquiry.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAC5D,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEtD,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,8BAA8B,EAAE,MAAM,wCAAwC,CAAC;AACxF,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AAEvD,SAAS,CAAC,GAAG,CACZ,6BAA6B,EAC7B,KAAK,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC3B,IAAI,eAAe,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC;QAC3C,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,CAAC;QAC5C,yFAAyF;QACzF,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAE,CAAC;QACzC,OAAO,OAAO,CAAC;IAChB,CAAC;IAED,MAAM,eAAe,GAAG,MAAM,eAAe,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACxF,IAAI,eAAe,EAAE,CAAC;QACrB,KAAK,8BAA8B,CAAC,eAAe,EAAE,SAAS,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,EACD,SAAS,CAAC,QAAQ,CAAC,GAAG,EACtB,8BAA8B,CAC9B,CAAC","sourcesContent":["import { isEditedMessage } from '@rocket.chat/core-typings';\nimport { LivechatInquiry } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { notifyOnLivechatInquiryChanged } from '../../../lib/server/lib/notifyListener';\nimport { settings } from '../../../settings/server';\nimport { RoutingManager } from '../lib/RoutingManager';\n\ncallbacks.add(\n\t'afterOmnichannelSaveMessage',\n\tasync (message, { room }) => {\n\t\tif (isEditedMessage(message) || message.t) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!RoutingManager.getConfig()?.showQueue) {\n\t\t\t// since last message is only getting used on UI as preview message when queue is enabled\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!settings.get('Store_Last_Message')) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst livechatInquiry = await LivechatInquiry.setLastMessageByRoomId(room._id, message);\n\t\tif (livechatInquiry) {\n\t\t\tvoid notifyOnLivechatInquiryChanged(livechatInquiry, 'updated', { lastMessage: message });\n\t\t}\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'save-last-message-to-inquiry',\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let isEditedMessage;\n    module.link(\"@rocket.chat/core-typings\", {\n      isEditedMessage(v) {\n        isEditedMessage = v;\n      }\n    }, 0);\n    let LivechatInquiry;\n    module.link(\"@rocket.chat/models\", {\n      LivechatInquiry(v) {\n        LivechatInquiry = v;\n      }\n    }, 1);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 2);\n    let notifyOnLivechatInquiryChanged;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnLivechatInquiryChanged(v) {\n        notifyOnLivechatInquiryChanged = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    let RoutingManager;\n    module.link(\"../lib/RoutingManager\", {\n      RoutingManager(v) {\n        RoutingManager = v;\n      }\n    }, 5);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    callbacks.add('afterOmnichannelSaveMessage', async (message, _ref) => {\n      var _RoutingManager$getCo;\n      let {\n        room\n      } = _ref;\n      if (isEditedMessage(message) || message.t) {\n        return message;\n      }\n      if (!((_RoutingManager$getCo = RoutingManager.getConfig()) !== null && _RoutingManager$getCo !== void 0 && _RoutingManager$getCo.showQueue)) {\n        // since last message is only getting used on UI as preview message when queue is enabled\n        return message;\n      }\n      if (!settings.get('Store_Last_Message')) {\n        return message;\n      }\n      const livechatInquiry = await LivechatInquiry.setLastMessageByRoomId(room._id, message);\n      if (livechatInquiry) {\n        void notifyOnLivechatInquiryChanged(livechatInquiry, 'updated', {\n          lastMessage: message\n        });\n      }\n      return message;\n    }, callbacks.priority.LOW, 'save-last-message-to-inquiry');\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["isEditedMessage","module","link","v","LivechatInquiry","callbacks","notifyOnLivechatInquiryChanged","settings","RoutingManager","__reifyWaitForDeps__","add","message","_ref","_RoutingManager$getCo","room","t","getConfig","showQueue","get","livechatInquiry","setLastMessageByRoomId","_id","lastMessage","priority","LOW","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/hooks/saveLastMessageToInquiry.ts"],"sourcesContent":["import { isEditedMessage } from '@rocket.chat/core-typings';\nimport { LivechatInquiry } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { notifyOnLivechatInquiryChanged } from '../../../lib/server/lib/notifyListener';\nimport { settings } from '../../../settings/server';\nimport { RoutingManager } from '../lib/RoutingManager';\n\ncallbacks.add(\n\t'afterOmnichannelSaveMessage',\n\tasync (message, { room }) => {\n\t\tif (isEditedMessage(message) || message.t) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!RoutingManager.getConfig()?.showQueue) {\n\t\t\t// since last message is only getting used on UI as preview message when queue is enabled\n\t\t\treturn message;\n\t\t}\n\n\t\tif (!settings.get('Store_Last_Message')) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst livechatInquiry = await LivechatInquiry.setLastMessageByRoomId(room._id, message);\n\t\tif (livechatInquiry) {\n\t\t\tvoid notifyOnLivechatInquiryChanged(livechatInquiry, 'updated', { lastMessage: message });\n\t\t}\n\n\t\treturn message;\n\t},\n\tcallbacks.priority.LOW,\n\t'save-last-message-to-inquiry',\n);\n"],"mappings":";;;IAAA,IAAAA,eAAS;IAAAC,MAAiB,CAAAC,IAAA,CAAM,2BAA2B,EAAC;MAAAF,gBAAAG,CAAA;QAAAH,eAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,eAAA;IAAAH,MAAA,CAAAC,IAAA;MAAAE,gBAAAD,CAAA;QAAAC,eAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,SAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAG,UAAAF,CAAA;QAAAE,SAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,8BAAA;IAAAL,MAAA,CAAAC,IAAA;MAAAI,+BAAAH,CAAA;QAAAG,8BAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,QAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,SAAAJ,CAAA;QAAAI,QAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,cAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAM,eAAAL,CAAA;QAAAK,cAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,oBAAA,WAAAA,oBAAA;IAQ5DJ,SAAS,CAACK,GAAG,CACZ,6BAA6B,EAC7B,OAAOC,OAAO,EAAAC,IAAA,KAAc;MAAA,IAAAC,qBAAA;MAAA,IAAZ;QAAEC;MAAI,CAAE,GAAAF,IAAA;MACvB,IAAIZ,eAAe,CAACW,OAAO,CAAC,IAAIA,OAAO,CAACI,CAAC,EAAE;QAC1C,OAAOJ,OAAO;MACf;MAEA,IAAI,GAAAE,qBAAA,GAACL,cAAc,CAACQ,SAAS,EAAE,cAAAH,qBAAA,eAA1BA,qBAAA,CAA4BI,SAAS,GAAE;QAC3C;QACA,OAAON,OAAO;MACf;MAEA,IAAI,CAACJ,QAAQ,CAACW,GAAG,CAAC,oBAAoB,CAAC,EAAE;QACxC,OAAOP,OAAO;MACf;MAEA,MAAMQ,eAAe,GAAG,MAAMf,eAAe,CAACgB,sBAAsB,CAACN,IAAI,CAACO,GAAG,EAAEV,OAAO,CAAC;MACvF,IAAIQ,eAAe,EAAE;QACpB,KAAKb,8BAA8B,CAACa,eAAe,EAAE,SAAS,EAAE;UAAEG,WAAW,EAAEX;QAAO,CAAE,CAAC;MAC1F;MAEA,OAAOA,OAAO;IACf,CAAC,EACDN,SAAS,CAACkB,QAAQ,CAACC,GAAG,EACtB,8BAA8B,CAC9B;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"c7115b016099c844d5fde900331a805b1b7bcbfc"}
