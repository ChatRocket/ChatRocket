{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","sourceRoot":"","sources":["client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\nimport { useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQueryClient, useQuery } from '@tanstack/react-query';\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { withDebouncing } from '../../../../../../lib/utils/highOrderFunctions';\nimport type { FieldExpression, Query } from '../../../../../lib/minimongo';\nimport { createFilterFromQuery } from '../../../../../lib/minimongo';\nimport { onClientMessageReceived } from '../../../../../lib/onClientMessageReceived';\nimport { useRoom } from '../../../contexts/RoomContext';\nimport { useGetMessageByID } from './useGetMessageByID';\n\ntype RoomMessagesRidEvent = IMessage;\n\ntype NotifyRoomRidDeleteMessageBulkEvent = {\n\trid: IMessage['rid'];\n\texcludePinned: boolean;\n\tignoreDiscussion: boolean;\n\tts: FieldExpression<Date>;\n\tusers: string[];\n\tids?: string[]; // message ids have priority over ts\n\tshowDeletedStatus?: boolean;\n};\n\nconst createDeleteCriteria = (params: NotifyRoomRidDeleteMessageBulkEvent): ((message: IMessage) => boolean) => {\n\tconst query: Query<IMessage> = {};\n\n\tif (params.ids) {\n\t\tquery._id = { $in: params.ids };\n\t} else {\n\t\tquery.ts = params.ts;\n\t}\n\n\tif (params.excludePinned) {\n\t\tquery.pinned = { $ne: true };\n\t}\n\n\tif (params.ignoreDiscussion) {\n\t\tquery.drid = { $exists: false };\n\t}\n\tif (params.users?.length) {\n\t\tquery['u.username'] = { $in: params.users };\n\t}\n\n\treturn createFilterFromQuery<IMessage>(query);\n};\n\nconst useSubscribeToMessage = () => {\n\tconst subscribeToRoomMessages = useStream('room-messages');\n\tconst subscribeToNotifyRoom = useStream('notify-room');\n\n\treturn useCallback(\n\t\t(message: IMessage, { onMutate, onDelete }: { onMutate?: (message: IMessage) => void; onDelete?: () => void }) => {\n\t\t\tconst unsubscribeFromRoomMessages = subscribeToRoomMessages(message.rid, (event: RoomMessagesRidEvent) => {\n\t\t\t\tif (message._id === event._id) onMutate?.(event);\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessage = subscribeToNotifyRoom(`${message.rid}/deleteMessage`, (event) => {\n\t\t\t\tif (message._id === event._id) onDelete?.();\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(`${message.rid}/deleteMessageBulk`, (params) => {\n\t\t\t\tconst matchDeleteCriteria = createDeleteCriteria(params);\n\t\t\t\tif (matchDeleteCriteria(message)) onDelete?.();\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tunsubscribeFromRoomMessages();\n\t\t\t\tunsubscribeFromDeleteMessage();\n\t\t\t\tunsubscribeFromDeleteMessageBulk();\n\t\t\t};\n\t\t},\n\t\t[subscribeToNotifyRoom, subscribeToRoomMessages],\n\t);\n};\n\nexport const useThreadMainMessageQuery = (\n\ttmid: IMessage['_id'],\n\t{ onDelete }: { onDelete?: () => void } = {},\n): UseQueryResult<IThreadMainMessage, Error> => {\n\tconst room = useRoom();\n\n\tconst getMessage = useGetMessageByID();\n\tconst subscribeToMessage = useSubscribeToMessage();\n\n\tconst queryClient = useQueryClient();\n\tconst unsubscribeRef = useRef<(() => void) | undefined>();\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tunsubscribeRef.current?.();\n\t\t\tunsubscribeRef.current = undefined;\n\t\t};\n\t}, [tmid]);\n\n\treturn useQuery(['rooms', room._id, 'threads', tmid, 'main-message'] as const, async ({ queryKey }) => {\n\t\tconst mainMessage = await getMessage(tmid);\n\n\t\tif (!mainMessage) {\n\t\t\tthrow new Error('Invalid main message');\n\t\t}\n\n\t\tconst debouncedInvalidate = withDebouncing({ wait: 10000 })(() => {\n\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t});\n\n\t\tunsubscribeRef.current =\n\t\t\tunsubscribeRef.current ||\n\t\t\tsubscribeToMessage(mainMessage, {\n\t\t\t\tonMutate: async (message) => {\n\t\t\t\t\tconst msg = await onClientMessageReceived(message);\n\t\t\t\t\tqueryClient.setQueryData(queryKey, () => msg);\n\t\t\t\t\tdebouncedInvalidate();\n\t\t\t\t},\n\t\t\t\tonDelete: () => {\n\t\t\t\t\tonDelete?.();\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t\t\t},\n\t\t\t});\n\n\t\treturn mainMessage;\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","sourceRoot":"","sources":["client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\nimport { useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQueryClient, useQuery } from '@tanstack/react-query';\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { withDebouncing } from '../../../../../../lib/utils/highOrderFunctions';\nimport type { FieldExpression, Query } from '../../../../../lib/minimongo';\nimport { createFilterFromQuery } from '../../../../../lib/minimongo';\nimport { onClientMessageReceived } from '../../../../../lib/onClientMessageReceived';\nimport { useRoom } from '../../../contexts/RoomContext';\nimport { useGetMessageByID } from './useGetMessageByID';\n\ntype RoomMessagesRidEvent = IMessage;\n\ntype NotifyRoomRidDeleteMessageBulkEvent = {\n\trid: IMessage['rid'];\n\texcludePinned: boolean;\n\tignoreDiscussion: boolean;\n\tts: FieldExpression<Date>;\n\tusers: string[];\n\tids?: string[]; // message ids have priority over ts\n\tshowDeletedStatus?: boolean;\n};\n\nconst createDeleteCriteria = (params: NotifyRoomRidDeleteMessageBulkEvent): ((message: IMessage) => boolean) => {\n\tconst query: Query<IMessage> = {};\n\n\tif (params.ids) {\n\t\tquery._id = { $in: params.ids };\n\t} else {\n\t\tquery.ts = params.ts;\n\t}\n\n\tif (params.excludePinned) {\n\t\tquery.pinned = { $ne: true };\n\t}\n\n\tif (params.ignoreDiscussion) {\n\t\tquery.drid = { $exists: false };\n\t}\n\tif (params.users?.length) {\n\t\tquery['u.username'] = { $in: params.users };\n\t}\n\n\treturn createFilterFromQuery<IMessage>(query);\n};\n\nconst useSubscribeToMessage = () => {\n\tconst subscribeToRoomMessages = useStream('room-messages');\n\tconst subscribeToNotifyRoom = useStream('notify-room');\n\n\treturn useCallback(\n\t\t(message: IMessage, { onMutate, onDelete }: { onMutate?: (message: IMessage) => void; onDelete?: () => void }) => {\n\t\t\tconst unsubscribeFromRoomMessages = subscribeToRoomMessages(message.rid, (event: RoomMessagesRidEvent) => {\n\t\t\t\tif (message._id === event._id) onMutate?.(event);\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessage = subscribeToNotifyRoom(`${message.rid}/deleteMessage`, (event) => {\n\t\t\t\tif (message._id === event._id) onDelete?.();\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(`${message.rid}/deleteMessageBulk`, (params) => {\n\t\t\t\tconst matchDeleteCriteria = createDeleteCriteria(params);\n\t\t\t\tif (matchDeleteCriteria(message)) onDelete?.();\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tunsubscribeFromRoomMessages();\n\t\t\t\tunsubscribeFromDeleteMessage();\n\t\t\t\tunsubscribeFromDeleteMessageBulk();\n\t\t\t};\n\t\t},\n\t\t[subscribeToNotifyRoom, subscribeToRoomMessages],\n\t);\n};\n\nexport const useThreadMainMessageQuery = (\n\ttmid: IMessage['_id'],\n\t{ onDelete }: { onDelete?: () => void } = {},\n): UseQueryResult<IThreadMainMessage, Error> => {\n\tconst room = useRoom();\n\n\tconst getMessage = useGetMessageByID();\n\tconst subscribeToMessage = useSubscribeToMessage();\n\n\tconst queryClient = useQueryClient();\n\tconst unsubscribeRef = useRef<(() => void) | undefined>();\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tunsubscribeRef.current?.();\n\t\t\tunsubscribeRef.current = undefined;\n\t\t};\n\t}, [tmid]);\n\n\treturn useQuery(['rooms', room._id, 'threads', tmid, 'main-message'] as const, async ({ queryKey }) => {\n\t\tconst mainMessage = await getMessage(tmid);\n\n\t\tif (!mainMessage) {\n\t\t\tthrow new Error('Invalid main message');\n\t\t}\n\n\t\tconst debouncedInvalidate = withDebouncing({ wait: 10000 })(() => {\n\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t});\n\n\t\tunsubscribeRef.current =\n\t\t\tunsubscribeRef.current ||\n\t\t\tsubscribeToMessage(mainMessage, {\n\t\t\t\tonMutate: async (message) => {\n\t\t\t\t\tconst msg = await onClientMessageReceived(message);\n\t\t\t\t\tqueryClient.setQueryData(queryKey, () => msg);\n\t\t\t\t\tdebouncedInvalidate();\n\t\t\t\t},\n\t\t\t\tonDelete: () => {\n\t\t\t\t\tonDelete?.();\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t\t\t},\n\t\t\t});\n\n\t\treturn mainMessage;\n\t});\n};\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nmodule.export({\n  useThreadMainMessageQuery: function () {\n    return useThreadMainMessageQuery;\n  }\n});\nvar useStream;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useStream: function (v) {\n    useStream = v;\n  }\n}, 0);\nvar useQueryClient, useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQueryClient: function (v) {\n    useQueryClient = v;\n  },\n  useQuery: function (v) {\n    useQuery = v;\n  }\n}, 1);\nvar useCallback, useEffect, useRef;\nmodule.link(\"react\", {\n  useCallback: function (v) {\n    useCallback = v;\n  },\n  useEffect: function (v) {\n    useEffect = v;\n  },\n  useRef: function (v) {\n    useRef = v;\n  }\n}, 2);\nvar withDebouncing;\nmodule.link(\"../../../../../../lib/utils/highOrderFunctions\", {\n  withDebouncing: function (v) {\n    withDebouncing = v;\n  }\n}, 3);\nvar createFilterFromQuery;\nmodule.link(\"../../../../../lib/minimongo\", {\n  createFilterFromQuery: function (v) {\n    createFilterFromQuery = v;\n  }\n}, 4);\nvar onClientMessageReceived;\nmodule.link(\"../../../../../lib/onClientMessageReceived\", {\n  onClientMessageReceived: function (v) {\n    onClientMessageReceived = v;\n  }\n}, 5);\nvar useRoom;\nmodule.link(\"../../../contexts/RoomContext\", {\n  useRoom: function (v) {\n    useRoom = v;\n  }\n}, 6);\nvar useGetMessageByID;\nmodule.link(\"./useGetMessageByID\", {\n  useGetMessageByID: function (v) {\n    useGetMessageByID = v;\n  }\n}, 7);\nvar createDeleteCriteria = function (params) {\n  var _params$users;\n  var query = {};\n  if (params.ids) {\n    query._id = {\n      $in: params.ids\n    };\n  } else {\n    query.ts = params.ts;\n  }\n  if (params.excludePinned) {\n    query.pinned = {\n      $ne: true\n    };\n  }\n  if (params.ignoreDiscussion) {\n    query.drid = {\n      $exists: false\n    };\n  }\n  if ((_params$users = params.users) !== null && _params$users !== void 0 && _params$users.length) {\n    query['u.username'] = {\n      $in: params.users\n    };\n  }\n  return createFilterFromQuery(query);\n};\nvar useSubscribeToMessage = function () {\n  var subscribeToRoomMessages = useStream('room-messages');\n  var subscribeToNotifyRoom = useStream('notify-room');\n  return useCallback(function (message, _ref) {\n    var onMutate = _ref.onMutate,\n      onDelete = _ref.onDelete;\n    var unsubscribeFromRoomMessages = subscribeToRoomMessages(message.rid, function (event) {\n      if (message._id === event._id) onMutate === null || onMutate === void 0 ? void 0 : onMutate(event);\n    });\n    var unsubscribeFromDeleteMessage = subscribeToNotifyRoom(message.rid + \"/deleteMessage\", function (event) {\n      if (message._id === event._id) onDelete === null || onDelete === void 0 ? void 0 : onDelete();\n    });\n    var unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(message.rid + \"/deleteMessageBulk\", function (params) {\n      var matchDeleteCriteria = createDeleteCriteria(params);\n      if (matchDeleteCriteria(message)) onDelete === null || onDelete === void 0 ? void 0 : onDelete();\n    });\n    return function () {\n      unsubscribeFromRoomMessages();\n      unsubscribeFromDeleteMessage();\n      unsubscribeFromDeleteMessageBulk();\n    };\n  }, [subscribeToNotifyRoom, subscribeToRoomMessages]);\n};\nvar useThreadMainMessageQuery = function (tmid) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    onDelete = _ref2.onDelete;\n  var room = useRoom();\n  var getMessage = useGetMessageByID();\n  var subscribeToMessage = useSubscribeToMessage();\n  var queryClient = useQueryClient();\n  var unsubscribeRef = useRef();\n  useEffect(function () {\n    return function () {\n      var _unsubscribeRef$curre;\n      (_unsubscribeRef$curre = unsubscribeRef.current) === null || _unsubscribeRef$curre === void 0 ? void 0 : _unsubscribeRef$curre.call(unsubscribeRef);\n      unsubscribeRef.current = undefined;\n    };\n  }, [tmid]);\n  return useQuery(['rooms', room._id, 'threads', tmid, 'main-message'], function () {\n    function _callee2(_ref3) {\n      var queryKey, mainMessage, debouncedInvalidate;\n      return _regeneratorRuntime.async(function () {\n        function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              queryKey = _ref3.queryKey;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(getMessage(tmid));\n            case 3:\n              mainMessage = _context2.sent;\n              if (mainMessage) {\n                _context2.next = 6;\n                break;\n              }\n              throw new Error('Invalid main message');\n            case 6:\n              debouncedInvalidate = withDebouncing({\n                wait: 10000\n              })(function () {\n                queryClient.invalidateQueries(queryKey, {\n                  exact: true\n                });\n              });\n              unsubscribeRef.current = unsubscribeRef.current || subscribeToMessage(mainMessage, {\n                onMutate: function () {\n                  function _callee(message) {\n                    var msg;\n                    return _regeneratorRuntime.async(function () {\n                      function _callee$(_context) {\n                        while (1) switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return _regeneratorRuntime.awrap(onClientMessageReceived(message));\n                          case 2:\n                            msg = _context.sent;\n                            queryClient.setQueryData(queryKey, function () {\n                              return msg;\n                            });\n                            debouncedInvalidate();\n                          case 5:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                      return _callee$;\n                    }(), null, null, null, Promise);\n                  }\n                  return _callee;\n                }(),\n                onDelete: function () {\n                  onDelete === null || onDelete === void 0 ? void 0 : onDelete();\n                  queryClient.invalidateQueries(queryKey, {\n                    exact: true\n                  });\n                }\n              });\n              return _context2.abrupt(\"return\", mainMessage);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n        return _callee2$;\n      }(), null, null, null, Promise);\n    }\n    return _callee2;\n  }());\n};","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","export","useThreadMainMessageQuery","useStream","useQueryClient","useQuery","useCallback","useEffect","useRef","withDebouncing","createFilterFromQuery","onClientMessageReceived","useRoom","useGetMessageByID","createDeleteCriteria","params","_params$users","query","ids","_id","$in","ts","excludePinned","pinned","$ne","ignoreDiscussion","drid","$exists","users","length","useSubscribeToMessage","subscribeToRoomMessages","subscribeToNotifyRoom","message","_ref","onMutate","onDelete","unsubscribeFromRoomMessages","rid","event","unsubscribeFromDeleteMessage","unsubscribeFromDeleteMessageBulk","matchDeleteCriteria","tmid","_ref2","arguments","undefined","room","getMessage","subscribeToMessage","queryClient","unsubscribeRef","_unsubscribeRef$curre","current","call","_callee2","_ref3","queryKey","mainMessage","debouncedInvalidate","async","_callee2$","_context2","prev","next","awrap","sent","Error","wait","invalidateQueries","exact","_callee","msg","_callee$","_context","setQueryData","stop","Promise","abrupt"],"sources":["client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts"],"sourcesContent":["import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\nimport { useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQueryClient, useQuery } from '@tanstack/react-query';\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { withDebouncing } from '../../../../../../lib/utils/highOrderFunctions';\nimport type { FieldExpression, Query } from '../../../../../lib/minimongo';\nimport { createFilterFromQuery } from '../../../../../lib/minimongo';\nimport { onClientMessageReceived } from '../../../../../lib/onClientMessageReceived';\nimport { useRoom } from '../../../contexts/RoomContext';\nimport { useGetMessageByID } from './useGetMessageByID';\n\ntype RoomMessagesRidEvent = IMessage;\n\ntype NotifyRoomRidDeleteMessageBulkEvent = {\n\trid: IMessage['rid'];\n\texcludePinned: boolean;\n\tignoreDiscussion: boolean;\n\tts: FieldExpression<Date>;\n\tusers: string[];\n\tids?: string[]; // message ids have priority over ts\n\tshowDeletedStatus?: boolean;\n};\n\nconst createDeleteCriteria = (params: NotifyRoomRidDeleteMessageBulkEvent): ((message: IMessage) => boolean) => {\n\tconst query: Query<IMessage> = {};\n\n\tif (params.ids) {\n\t\tquery._id = { $in: params.ids };\n\t} else {\n\t\tquery.ts = params.ts;\n\t}\n\n\tif (params.excludePinned) {\n\t\tquery.pinned = { $ne: true };\n\t}\n\n\tif (params.ignoreDiscussion) {\n\t\tquery.drid = { $exists: false };\n\t}\n\tif (params.users?.length) {\n\t\tquery['u.username'] = { $in: params.users };\n\t}\n\n\treturn createFilterFromQuery<IMessage>(query);\n};\n\nconst useSubscribeToMessage = () => {\n\tconst subscribeToRoomMessages = useStream('room-messages');\n\tconst subscribeToNotifyRoom = useStream('notify-room');\n\n\treturn useCallback(\n\t\t(message: IMessage, { onMutate, onDelete }: { onMutate?: (message: IMessage) => void; onDelete?: () => void }) => {\n\t\t\tconst unsubscribeFromRoomMessages = subscribeToRoomMessages(message.rid, (event: RoomMessagesRidEvent) => {\n\t\t\t\tif (message._id === event._id) onMutate?.(event);\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessage = subscribeToNotifyRoom(`${message.rid}/deleteMessage`, (event) => {\n\t\t\t\tif (message._id === event._id) onDelete?.();\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(`${message.rid}/deleteMessageBulk`, (params) => {\n\t\t\t\tconst matchDeleteCriteria = createDeleteCriteria(params);\n\t\t\t\tif (matchDeleteCriteria(message)) onDelete?.();\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tunsubscribeFromRoomMessages();\n\t\t\t\tunsubscribeFromDeleteMessage();\n\t\t\t\tunsubscribeFromDeleteMessageBulk();\n\t\t\t};\n\t\t},\n\t\t[subscribeToNotifyRoom, subscribeToRoomMessages],\n\t);\n};\n\nexport const useThreadMainMessageQuery = (\n\ttmid: IMessage['_id'],\n\t{ onDelete }: { onDelete?: () => void } = {},\n): UseQueryResult<IThreadMainMessage, Error> => {\n\tconst room = useRoom();\n\n\tconst getMessage = useGetMessageByID();\n\tconst subscribeToMessage = useSubscribeToMessage();\n\n\tconst queryClient = useQueryClient();\n\tconst unsubscribeRef = useRef<(() => void) | undefined>();\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tunsubscribeRef.current?.();\n\t\t\tunsubscribeRef.current = undefined;\n\t\t};\n\t}, [tmid]);\n\n\treturn useQuery(['rooms', room._id, 'threads', tmid, 'main-message'] as const, async ({ queryKey }) => {\n\t\tconst mainMessage = await getMessage(tmid);\n\n\t\tif (!mainMessage) {\n\t\t\tthrow new Error('Invalid main message');\n\t\t}\n\n\t\tconst debouncedInvalidate = withDebouncing({ wait: 10000 })(() => {\n\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t});\n\n\t\tunsubscribeRef.current =\n\t\t\tunsubscribeRef.current ||\n\t\t\tsubscribeToMessage(mainMessage, {\n\t\t\t\tonMutate: async (message) => {\n\t\t\t\t\tconst msg = await onClientMessageReceived(message);\n\t\t\t\t\tqueryClient.setQueryData(queryKey, () => msg);\n\t\t\t\t\tdebouncedInvalidate();\n\t\t\t\t},\n\t\t\t\tonDelete: () => {\n\t\t\t\t\tonDelete?.();\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t\t\t},\n\t\t\t});\n\n\t\treturn mainMessage;\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"3128a0877d4f5057081ae431277cb3a6f2fc4b01"}
