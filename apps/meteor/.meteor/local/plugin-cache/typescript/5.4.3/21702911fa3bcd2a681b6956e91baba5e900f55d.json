{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/BaseRaw.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/BaseRaw.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/BaseRaw.ts","inputSourceMap":{"version":3,"file":"server/models/raw/BaseRaw.ts","sourceRoot":"","sources":["server/models/raw/BaseRaw.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IBaseModel, DefaultFields, ResultFields, FindPaginated, InsertionModel } from '@rocket.chat/model-typings';\nimport type { Updater } from '@rocket.chat/models';\nimport { getCollectionName, UpdaterImpl } from '@rocket.chat/models';\nimport { ObjectId } from 'mongodb';\nimport type {\n\tBulkWriteOptions,\n\tChangeStream,\n\tCollection,\n\tCollectionOptions,\n\tDb,\n\tFilter,\n\tFindOneAndUpdateOptions,\n\tIndexDescription,\n\tInsertOneOptions,\n\tModifyResult,\n\tOptionalUnlessRequiredId,\n\tUpdateFilter,\n\tWithId,\n\tUpdateOptions,\n\tDocument,\n\tFindOptions,\n\tFindCursor,\n\tUpdateResult,\n\tInsertManyResult,\n\tInsertOneResult,\n\tDeleteResult,\n\tDeleteOptions,\n\tFindOneAndDeleteOptions,\n} from 'mongodb';\n\nimport { setUpdatedAt } from './setUpdatedAt';\n\nconst warnFields =\n\tprocess.env.NODE_ENV !== 'production' || process.env.SHOW_WARNINGS === 'true'\n\t\t? (...rest: any): void => {\n\t\t\t\tconsole.warn(...rest, new Error().stack);\n\t\t  }\n\t\t: new Function();\n\ntype ModelOptions = {\n\tpreventSetUpdatedAt?: boolean;\n\tcollectionNameResolver?: (name: string) => string;\n\tcollection?: CollectionOptions;\n\t_updatedAtIndexOptions?: Omit<IndexDescription, 'key'>;\n};\n\nexport abstract class BaseRaw<\n\tT extends { _id: string },\n\tC extends DefaultFields<T> = undefined,\n\tTDeleted extends RocketChatRecordDeleted<T> = RocketChatRecordDeleted<T>,\n> implements IBaseModel<T, C, TDeleted>\n{\n\tpublic readonly defaultFields: C;\n\n\tpublic readonly col: Collection<T>;\n\n\tprivate preventSetUpdatedAt: boolean;\n\n\t/**\n\t * Collection name to store data.\n\t */\n\tprivate collectionName: string;\n\n\t/**\n\t * @param db MongoDB instance\n\t * @param name Name of the model without any prefix. Used by trash records to set the `__collection__` field.\n\t * @param trash Trash collection instance\n\t * @param options Model options\n\t */\n\tconstructor(private db: Db, protected name: string, protected trash?: Collection<TDeleted>, private options?: ModelOptions) {\n\t\tthis.collectionName = options?.collectionNameResolver ? options.collectionNameResolver(name) : getCollectionName(name);\n\n\t\tthis.col = this.db.collection(this.collectionName, options?.collection || {});\n\n\t\tvoid this.createIndexes().catch((e) => {\n\t\t\tconsole.warn(`Some indexes for collection '${this.collectionName}' could not be created:\\n\\t${e.message}`);\n\t\t});\n\n\t\tthis.preventSetUpdatedAt = options?.preventSetUpdatedAt ?? false;\n\t}\n\n\tprivate pendingIndexes: Promise<void> | undefined;\n\n\tpublic async createIndexes() {\n\t\tconst indexes = this.modelIndexes();\n\t\tif (this.options?._updatedAtIndexOptions) {\n\t\t\tindexes?.push({ ...this.options._updatedAtIndexOptions, key: { _updatedAt: 1 } });\n\t\t}\n\n\t\tif (indexes?.length) {\n\t\t\tif (this.pendingIndexes) {\n\t\t\t\tawait this.pendingIndexes;\n\t\t\t}\n\n\t\t\tthis.pendingIndexes = this.col.createIndexes(indexes) as unknown as Promise<void>;\n\n\t\t\tvoid this.pendingIndexes.finally(() => {\n\t\t\t\tthis.pendingIndexes = undefined;\n\t\t\t});\n\n\t\t\treturn this.pendingIndexes;\n\t\t}\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] | undefined {\n\t\treturn undefined;\n\t}\n\n\tgetCollectionName(): string {\n\t\treturn this.collectionName;\n\t}\n\n\tpublic getUpdater(): Updater<T> {\n\t\treturn new UpdaterImpl<T>();\n\t}\n\n\tpublic updateFromUpdater(query: Filter<T>, updater: Updater<T>): Promise<UpdateResult> {\n\t\tconst updateFilter = updater.getUpdateFilter();\n\t\treturn this.updateOne(query, updateFilter).catch((e) => {\n\t\t\tconsole.warn(e, updateFilter);\n\t\t\treturn Promise.reject(e);\n\t\t});\n\t}\n\n\tprivate doNotMixInclusionAndExclusionFields(options: FindOptions<T> = {}): FindOptions<T> {\n\t\tconst optionsDef = this.ensureDefaultFields(options);\n\t\tif (optionsDef?.projection === undefined) {\n\t\t\treturn optionsDef;\n\t\t}\n\n\t\tconst projection: Record<string, any> = optionsDef?.projection;\n\t\tconst keys = Object.keys(projection);\n\t\tconst removeKeys = keys.filter((key) => projection[key] === 0);\n\t\tif (keys.length > removeKeys.length) {\n\t\t\tremoveKeys.forEach((key) => delete projection[key]);\n\t\t}\n\n\t\treturn {\n\t\t\t...optionsDef,\n\t\t\tprojection,\n\t\t};\n\t}\n\n\tprivate ensureDefaultFields<P extends Document>(options: FindOptions<P>): FindOptions<P>;\n\n\tprivate ensureDefaultFields<P extends Document>(\n\t\toptions?: FindOptions<P> & { fields?: FindOptions<P>['projection'] },\n\t): FindOptions<P> | FindOptions<T> | undefined {\n\t\tif (options?.fields) {\n\t\t\twarnFields(\"Using 'fields' in models is deprecated.\", options);\n\t\t}\n\n\t\tif (this.defaultFields === undefined) {\n\t\t\treturn options;\n\t\t}\n\n\t\tconst { fields: deprecatedFields, projection, ...rest } = options || {};\n\n\t\tconst fields = { ...deprecatedFields, ...projection };\n\n\t\treturn {\n\t\t\tprojection: this.defaultFields,\n\t\t\t...(fields && Object.values(fields).length && { projection: fields }),\n\t\t\t...rest,\n\t\t};\n\t}\n\n\tpublic findOneAndUpdate(query: Filter<T>, update: UpdateFilter<T> | T, options?: FindOneAndUpdateOptions): Promise<ModifyResult<T>> {\n\t\tthis.setUpdatedAt(update);\n\t\treturn this.col.findOneAndUpdate(query, update, options || {});\n\t}\n\n\tasync findOneById(_id: T['_id'], options?: FindOptions<T>): Promise<T | null>;\n\n\tasync findOneById<P extends Document = T>(_id: T['_id'], options?: FindOptions<P>): Promise<P | null>;\n\n\tasync findOneById(_id: T['_id'], options?: any): Promise<T | null> {\n\t\tconst query: Filter<T> = { _id } as Filter<T>;\n\t\tif (options) {\n\t\t\treturn this.findOne(query, options);\n\t\t}\n\t\treturn this.findOne(query);\n\t}\n\n\tasync findOne(query?: Filter<T> | T['_id'], options?: undefined): Promise<T | null>;\n\n\tasync findOne<P extends Document = T>(query: Filter<T> | T['_id'], options?: FindOptions<P extends T ? T : P>): Promise<P | null>;\n\n\tasync findOne<P>(query: Filter<T> | T['_id'] = {}, options?: any): Promise<WithId<T> | WithId<P> | null> {\n\t\tconst q: Filter<T> = typeof query === 'string' ? ({ _id: query } as Filter<T>) : query;\n\t\tconst optionsDef = this.doNotMixInclusionAndExclusionFields(options);\n\t\tif (optionsDef) {\n\t\t\treturn this.col.findOne(q, optionsDef);\n\t\t}\n\t\treturn this.col.findOne(q);\n\t}\n\n\tfind(query?: Filter<T>): FindCursor<ResultFields<T, C>>;\n\n\tfind<P extends Document = T>(query: Filter<T>, options?: FindOptions<P extends T ? T : P>): FindCursor<P>;\n\n\tfind<P extends Document>(\n\t\tquery: Filter<T> = {},\n\t\toptions?: FindOptions<P extends T ? T : P>,\n\t): FindCursor<WithId<P>> | FindCursor<WithId<T>> {\n\t\tconst optionsDef = this.doNotMixInclusionAndExclusionFields(options);\n\t\treturn this.col.find(query, optionsDef);\n\t}\n\n\tfindPaginated<P extends Document = T>(query: Filter<T>, options?: FindOptions<P extends T ? T : P>): FindPaginated<FindCursor<WithId<P>>>;\n\n\tfindPaginated(query: Filter<T> = {}, options?: any): FindPaginated<FindCursor<WithId<T>>> {\n\t\tconst optionsDef = this.doNotMixInclusionAndExclusionFields(options);\n\n\t\tconst cursor = optionsDef ? this.col.find(query, optionsDef) : this.col.find(query);\n\t\tconst totalCount = this.col.countDocuments(query);\n\n\t\treturn {\n\t\t\tcursor,\n\t\t\ttotalCount,\n\t\t};\n\t}\n\n\t/**\n\t * @deprecated use {@link updateOne} or {@link updateAny} instead\n\t */\n\tupdate(\n\t\tfilter: Filter<T>,\n\t\tupdate: UpdateFilter<T> | Partial<T>,\n\t\toptions?: UpdateOptions & { multi?: true },\n\t): Promise<UpdateResult | Document> {\n\t\tconst operation = options?.multi ? 'updateMany' : 'updateOne';\n\n\t\treturn this[operation](filter, update, options);\n\t}\n\n\tupdateOne(filter: Filter<T>, update: UpdateFilter<T> | Partial<T>, options?: UpdateOptions): Promise<UpdateResult> {\n\t\tthis.setUpdatedAt(update);\n\t\tif (options) {\n\t\t\treturn this.col.updateOne(filter, update, options);\n\t\t}\n\t\treturn this.col.updateOne(filter, update);\n\t}\n\n\tupdateMany(filter: Filter<T>, update: UpdateFilter<T> | Partial<T>, options?: UpdateOptions): Promise<Document | UpdateResult> {\n\t\tthis.setUpdatedAt(update);\n\t\tif (options) {\n\t\t\treturn this.col.updateMany(filter, update, options);\n\t\t}\n\t\treturn this.col.updateMany(filter, update);\n\t}\n\n\tinsertMany(docs: InsertionModel<T>[], options?: BulkWriteOptions): Promise<InsertManyResult<T>> {\n\t\tdocs = docs.map((doc) => {\n\t\t\tif (!doc._id || typeof doc._id !== 'string') {\n\t\t\t\tconst oid = new ObjectId();\n\t\t\t\treturn { _id: oid.toHexString(), ...doc };\n\t\t\t}\n\t\t\tthis.setUpdatedAt(doc);\n\t\t\treturn doc;\n\t\t});\n\n\t\t// TODO reavaluate following type casting\n\t\treturn this.col.insertMany(docs as unknown as OptionalUnlessRequiredId<T>[], options || {});\n\t}\n\n\tinsertOne(doc: InsertionModel<T>, options?: InsertOneOptions): Promise<InsertOneResult<T>> {\n\t\tif (!doc._id || typeof doc._id !== 'string') {\n\t\t\tconst oid = new ObjectId();\n\t\t\tdoc = { _id: oid.toHexString(), ...doc };\n\t\t}\n\n\t\tthis.setUpdatedAt(doc);\n\n\t\t// TODO reavaluate following type casting\n\t\treturn this.col.insertOne(doc as unknown as OptionalUnlessRequiredId<T>, options || {});\n\t}\n\n\tremoveById(_id: T['_id']): Promise<DeleteResult> {\n\t\treturn this.deleteOne({ _id } as Filter<T>);\n\t}\n\n\tremoveByIds(ids: T['_id'][]): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ _id: { $in: ids } } as unknown as Filter<T>);\n\t}\n\n\tasync deleteOne(filter: Filter<T>, options?: DeleteOptions & { bypassDocumentValidation?: boolean }): Promise<DeleteResult> {\n\t\tif (!this.trash) {\n\t\t\tif (options) {\n\t\t\t\treturn this.col.deleteOne(filter, options);\n\t\t\t}\n\t\t\treturn this.col.deleteOne(filter);\n\t\t}\n\n\t\tconst doc = await this.findOne(filter);\n\n\t\tif (doc) {\n\t\t\tconst { _id, ...record } = doc;\n\n\t\t\tconst trash: TDeleted = {\n\t\t\t\t...record,\n\t\t\t\t_deletedAt: new Date(),\n\t\t\t\t__collection__: this.name,\n\t\t\t} as unknown as TDeleted;\n\n\t\t\t// since the operation is not atomic, we need to make sure that the record is not already deleted/inserted\n\t\t\tawait this.trash?.updateOne({ _id } as Filter<TDeleted>, { $set: trash } as UpdateFilter<TDeleted>, {\n\t\t\t\tupsert: true,\n\t\t\t});\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn this.col.deleteOne(filter, options);\n\t\t}\n\t\treturn this.col.deleteOne(filter);\n\t}\n\n\tasync findOneAndDelete(filter: Filter<T>, options?: FindOneAndDeleteOptions): Promise<ModifyResult<T>> {\n\t\tif (!this.trash) {\n\t\t\treturn this.col.findOneAndDelete(filter, options || {});\n\t\t}\n\n\t\tconst doc = await this.col.findOne(filter);\n\t\tif (!doc) {\n\t\t\treturn { ok: 1, value: null };\n\t\t}\n\n\t\tconst { _id, ...record } = doc;\n\t\tconst trash: TDeleted = {\n\t\t\t...record,\n\t\t\t_deletedAt: new Date(),\n\t\t\t__collection__: this.name,\n\t\t} as unknown as TDeleted;\n\n\t\tawait this.trash?.updateOne({ _id } as Filter<TDeleted>, { $set: trash } as UpdateFilter<TDeleted>, {\n\t\t\tupsert: true,\n\t\t});\n\n\t\ttry {\n\t\t\tawait this.col.deleteOne({ _id } as Filter<T>);\n\t\t} catch (e) {\n\t\t\tawait this.trash?.deleteOne({ _id } as Filter<TDeleted>);\n\t\t\tthrow e;\n\t\t}\n\n\t\treturn { ok: 1, value: doc };\n\t}\n\n\tasync deleteMany(filter: Filter<T>, options?: DeleteOptions & { onTrash?: (record: ResultFields<T, C>) => void }): Promise<DeleteResult> {\n\t\tif (!this.trash) {\n\t\t\tif (options) {\n\t\t\t\treturn this.col.deleteMany(filter, options);\n\t\t\t}\n\t\t\treturn this.col.deleteMany(filter);\n\t\t}\n\n\t\tconst cursor = this.find<ResultFields<T, C>>(filter, { session: options?.session });\n\n\t\tconst ids: T['_id'][] = [];\n\t\tfor await (const doc of cursor) {\n\t\t\tconst { _id, ...record } = doc as T;\n\n\t\t\tconst trash: TDeleted = {\n\t\t\t\t...record,\n\t\t\t\t_deletedAt: new Date(),\n\t\t\t\t__collection__: this.name,\n\t\t\t} as unknown as TDeleted;\n\n\t\t\tids.push(_id as T['_id']);\n\n\t\t\t// since the operation is not atomic, we need to make sure that the record is not already deleted/inserted\n\t\t\tawait this.trash?.updateOne({ _id } as Filter<TDeleted>, { $set: trash } as UpdateFilter<TDeleted>, {\n\t\t\t\tupsert: true,\n\t\t\t\tsession: options?.session,\n\t\t\t});\n\n\t\t\tvoid options?.onTrash?.(doc);\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn this.col.deleteMany({ _id: { $in: ids } } as unknown as Filter<T>, options);\n\t\t}\n\t\treturn this.col.deleteMany({ _id: { $in: ids } } as unknown as Filter<T>);\n\t}\n\n\t// Trash\n\ttrashFind<P extends TDeleted>(\n\t\tquery: Filter<TDeleted>,\n\t\toptions?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindCursor<WithId<TDeleted>> | undefined {\n\t\tif (!this.trash) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn this.trash.find(\n\t\t\t\t{\n\t\t\t\t\t__collection__: this.name,\n\t\t\t\t\t...query,\n\t\t\t\t},\n\t\t\t\toptions,\n\t\t\t);\n\t\t}\n\n\t\treturn this.trash.find({\n\t\t\t__collection__: this.name,\n\t\t\t...query,\n\t\t});\n\t}\n\n\ttrashFindOneById(_id: TDeleted['_id']): Promise<TDeleted | null>;\n\n\ttrashFindOneById<P extends Document>(_id: TDeleted['_id'], options: FindOptions<P extends TDeleted ? TDeleted : P>): Promise<P | null>;\n\n\tasync trashFindOneById<P extends TDeleted>(\n\t\t_id: TDeleted['_id'],\n\t\toptions?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): Promise<WithId<P | TDeleted> | null> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\t__collection__: this.name,\n\t\t} as Filter<P | TDeleted>;\n\n\t\tif (!this.trash) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn (this.trash as Collection<P | TDeleted>).findOne(query, options);\n\t\t}\n\t\treturn (this.trash as Collection<P | TDeleted>).findOne(query);\n\t}\n\n\tprivate setUpdatedAt(record: UpdateFilter<T> | InsertionModel<T>): void {\n\t\tif (this.preventSetUpdatedAt) {\n\t\t\treturn;\n\t\t}\n\t\tsetUpdatedAt(record);\n\t}\n\n\ttrashFindDeletedAfter(deletedAt: Date): FindCursor<WithId<TDeleted>>;\n\n\ttrashFindDeletedAfter<P extends Document = TDeleted>(\n\t\tdeletedAt: Date,\n\t\tquery?: Filter<TDeleted>,\n\t\toptions?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindCursor<WithId<TDeleted>> {\n\t\tconst q = {\n\t\t\t__collection__: this.name,\n\t\t\t_deletedAt: {\n\t\t\t\t$gt: deletedAt,\n\t\t\t},\n\t\t\t...query,\n\t\t} as Filter<TDeleted>;\n\n\t\tif (!this.trash) {\n\t\t\tthrow new Error('Trash is not enabled for this collection');\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn this.trash.find(q, options);\n\t\t}\n\t\treturn this.trash.find(q);\n\t}\n\n\ttrashFindPaginatedDeletedAfter<P extends Document = TDeleted>(\n\t\tdeletedAt: Date,\n\t\tquery?: Filter<TDeleted>,\n\t\toptions?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindPaginated<FindCursor<WithId<TDeleted>>> {\n\t\tconst q: Filter<TDeleted> = {\n\t\t\t__collection__: this.name,\n\t\t\t_deletedAt: {\n\t\t\t\t$gt: deletedAt,\n\t\t\t},\n\t\t\t...query,\n\t\t} as Filter<TDeleted>;\n\n\t\tif (!this.trash) {\n\t\t\tthrow new Error('Trash is not enabled for this collection');\n\t\t}\n\n\t\tconst cursor = options ? this.trash.find(q, options) : this.trash.find(q);\n\t\tconst totalCount = this.trash.countDocuments(q);\n\n\t\treturn {\n\t\t\tcursor,\n\t\t\ttotalCount,\n\t\t};\n\t}\n\n\twatch(pipeline?: object[]): ChangeStream<T> {\n\t\treturn this.col.watch(pipeline);\n\t}\n\n\tcountDocuments(query: Filter<T>): Promise<number> {\n\t\treturn this.col.countDocuments(query);\n\t}\n\n\testimatedDocumentCount(): Promise<number> {\n\t\treturn this.col.estimatedDocumentCount();\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/BaseRaw.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/BaseRaw.ts","inputSourceMap":{"version":3,"file":"server/models/raw/BaseRaw.ts","sourceRoot":"","sources":["server/models/raw/BaseRaw.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IBaseModel, DefaultFields, ResultFields, FindPaginated, InsertionModel } from '@rocket.chat/model-typings';\nimport type { Updater } from '@rocket.chat/models';\nimport { getCollectionName, UpdaterImpl } from '@rocket.chat/models';\nimport { ObjectId } from 'mongodb';\nimport type {\n\tBulkWriteOptions,\n\tChangeStream,\n\tCollection,\n\tCollectionOptions,\n\tDb,\n\tFilter,\n\tFindOneAndUpdateOptions,\n\tIndexDescription,\n\tInsertOneOptions,\n\tModifyResult,\n\tOptionalUnlessRequiredId,\n\tUpdateFilter,\n\tWithId,\n\tUpdateOptions,\n\tDocument,\n\tFindOptions,\n\tFindCursor,\n\tUpdateResult,\n\tInsertManyResult,\n\tInsertOneResult,\n\tDeleteResult,\n\tDeleteOptions,\n\tFindOneAndDeleteOptions,\n} from 'mongodb';\n\nimport { setUpdatedAt } from './setUpdatedAt';\n\nconst warnFields =\n\tprocess.env.NODE_ENV !== 'production' || process.env.SHOW_WARNINGS === 'true'\n\t\t? (...rest: any): void => {\n\t\t\t\tconsole.warn(...rest, new Error().stack);\n\t\t  }\n\t\t: new Function();\n\ntype ModelOptions = {\n\tpreventSetUpdatedAt?: boolean;\n\tcollectionNameResolver?: (name: string) => string;\n\tcollection?: CollectionOptions;\n\t_updatedAtIndexOptions?: Omit<IndexDescription, 'key'>;\n};\n\nexport abstract class BaseRaw<\n\tT extends { _id: string },\n\tC extends DefaultFields<T> = undefined,\n\tTDeleted extends RocketChatRecordDeleted<T> = RocketChatRecordDeleted<T>,\n> implements IBaseModel<T, C, TDeleted>\n{\n\tpublic readonly defaultFields: C;\n\n\tpublic readonly col: Collection<T>;\n\n\tprivate preventSetUpdatedAt: boolean;\n\n\t/**\n\t * Collection name to store data.\n\t */\n\tprivate collectionName: string;\n\n\t/**\n\t * @param db MongoDB instance\n\t * @param name Name of the model without any prefix. Used by trash records to set the `__collection__` field.\n\t * @param trash Trash collection instance\n\t * @param options Model options\n\t */\n\tconstructor(private db: Db, protected name: string, protected trash?: Collection<TDeleted>, private options?: ModelOptions) {\n\t\tthis.collectionName = options?.collectionNameResolver ? options.collectionNameResolver(name) : getCollectionName(name);\n\n\t\tthis.col = this.db.collection(this.collectionName, options?.collection || {});\n\n\t\tvoid this.createIndexes().catch((e) => {\n\t\t\tconsole.warn(`Some indexes for collection '${this.collectionName}' could not be created:\\n\\t${e.message}`);\n\t\t});\n\n\t\tthis.preventSetUpdatedAt = options?.preventSetUpdatedAt ?? false;\n\t}\n\n\tprivate pendingIndexes: Promise<void> | undefined;\n\n\tpublic async createIndexes() {\n\t\tconst indexes = this.modelIndexes();\n\t\tif (this.options?._updatedAtIndexOptions) {\n\t\t\tindexes?.push({ ...this.options._updatedAtIndexOptions, key: { _updatedAt: 1 } });\n\t\t}\n\n\t\tif (indexes?.length) {\n\t\t\tif (this.pendingIndexes) {\n\t\t\t\tawait this.pendingIndexes;\n\t\t\t}\n\n\t\t\tthis.pendingIndexes = this.col.createIndexes(indexes) as unknown as Promise<void>;\n\n\t\t\tvoid this.pendingIndexes.finally(() => {\n\t\t\t\tthis.pendingIndexes = undefined;\n\t\t\t});\n\n\t\t\treturn this.pendingIndexes;\n\t\t}\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] | undefined {\n\t\treturn undefined;\n\t}\n\n\tgetCollectionName(): string {\n\t\treturn this.collectionName;\n\t}\n\n\tpublic getUpdater(): Updater<T> {\n\t\treturn new UpdaterImpl<T>();\n\t}\n\n\tpublic updateFromUpdater(query: Filter<T>, updater: Updater<T>): Promise<UpdateResult> {\n\t\tconst updateFilter = updater.getUpdateFilter();\n\t\treturn this.updateOne(query, updateFilter).catch((e) => {\n\t\t\tconsole.warn(e, updateFilter);\n\t\t\treturn Promise.reject(e);\n\t\t});\n\t}\n\n\tprivate doNotMixInclusionAndExclusionFields(options: FindOptions<T> = {}): FindOptions<T> {\n\t\tconst optionsDef = this.ensureDefaultFields(options);\n\t\tif (optionsDef?.projection === undefined) {\n\t\t\treturn optionsDef;\n\t\t}\n\n\t\tconst projection: Record<string, any> = optionsDef?.projection;\n\t\tconst keys = Object.keys(projection);\n\t\tconst removeKeys = keys.filter((key) => projection[key] === 0);\n\t\tif (keys.length > removeKeys.length) {\n\t\t\tremoveKeys.forEach((key) => delete projection[key]);\n\t\t}\n\n\t\treturn {\n\t\t\t...optionsDef,\n\t\t\tprojection,\n\t\t};\n\t}\n\n\tprivate ensureDefaultFields<P extends Document>(options: FindOptions<P>): FindOptions<P>;\n\n\tprivate ensureDefaultFields<P extends Document>(\n\t\toptions?: FindOptions<P> & { fields?: FindOptions<P>['projection'] },\n\t): FindOptions<P> | FindOptions<T> | undefined {\n\t\tif (options?.fields) {\n\t\t\twarnFields(\"Using 'fields' in models is deprecated.\", options);\n\t\t}\n\n\t\tif (this.defaultFields === undefined) {\n\t\t\treturn options;\n\t\t}\n\n\t\tconst { fields: deprecatedFields, projection, ...rest } = options || {};\n\n\t\tconst fields = { ...deprecatedFields, ...projection };\n\n\t\treturn {\n\t\t\tprojection: this.defaultFields,\n\t\t\t...(fields && Object.values(fields).length && { projection: fields }),\n\t\t\t...rest,\n\t\t};\n\t}\n\n\tpublic findOneAndUpdate(query: Filter<T>, update: UpdateFilter<T> | T, options?: FindOneAndUpdateOptions): Promise<ModifyResult<T>> {\n\t\tthis.setUpdatedAt(update);\n\t\treturn this.col.findOneAndUpdate(query, update, options || {});\n\t}\n\n\tasync findOneById(_id: T['_id'], options?: FindOptions<T>): Promise<T | null>;\n\n\tasync findOneById<P extends Document = T>(_id: T['_id'], options?: FindOptions<P>): Promise<P | null>;\n\n\tasync findOneById(_id: T['_id'], options?: any): Promise<T | null> {\n\t\tconst query: Filter<T> = { _id } as Filter<T>;\n\t\tif (options) {\n\t\t\treturn this.findOne(query, options);\n\t\t}\n\t\treturn this.findOne(query);\n\t}\n\n\tasync findOne(query?: Filter<T> | T['_id'], options?: undefined): Promise<T | null>;\n\n\tasync findOne<P extends Document = T>(query: Filter<T> | T['_id'], options?: FindOptions<P extends T ? T : P>): Promise<P | null>;\n\n\tasync findOne<P>(query: Filter<T> | T['_id'] = {}, options?: any): Promise<WithId<T> | WithId<P> | null> {\n\t\tconst q: Filter<T> = typeof query === 'string' ? ({ _id: query } as Filter<T>) : query;\n\t\tconst optionsDef = this.doNotMixInclusionAndExclusionFields(options);\n\t\tif (optionsDef) {\n\t\t\treturn this.col.findOne(q, optionsDef);\n\t\t}\n\t\treturn this.col.findOne(q);\n\t}\n\n\tfind(query?: Filter<T>): FindCursor<ResultFields<T, C>>;\n\n\tfind<P extends Document = T>(query: Filter<T>, options?: FindOptions<P extends T ? T : P>): FindCursor<P>;\n\n\tfind<P extends Document>(\n\t\tquery: Filter<T> = {},\n\t\toptions?: FindOptions<P extends T ? T : P>,\n\t): FindCursor<WithId<P>> | FindCursor<WithId<T>> {\n\t\tconst optionsDef = this.doNotMixInclusionAndExclusionFields(options);\n\t\treturn this.col.find(query, optionsDef);\n\t}\n\n\tfindPaginated<P extends Document = T>(query: Filter<T>, options?: FindOptions<P extends T ? T : P>): FindPaginated<FindCursor<WithId<P>>>;\n\n\tfindPaginated(query: Filter<T> = {}, options?: any): FindPaginated<FindCursor<WithId<T>>> {\n\t\tconst optionsDef = this.doNotMixInclusionAndExclusionFields(options);\n\n\t\tconst cursor = optionsDef ? this.col.find(query, optionsDef) : this.col.find(query);\n\t\tconst totalCount = this.col.countDocuments(query);\n\n\t\treturn {\n\t\t\tcursor,\n\t\t\ttotalCount,\n\t\t};\n\t}\n\n\t/**\n\t * @deprecated use {@link updateOne} or {@link updateAny} instead\n\t */\n\tupdate(\n\t\tfilter: Filter<T>,\n\t\tupdate: UpdateFilter<T> | Partial<T>,\n\t\toptions?: UpdateOptions & { multi?: true },\n\t): Promise<UpdateResult | Document> {\n\t\tconst operation = options?.multi ? 'updateMany' : 'updateOne';\n\n\t\treturn this[operation](filter, update, options);\n\t}\n\n\tupdateOne(filter: Filter<T>, update: UpdateFilter<T> | Partial<T>, options?: UpdateOptions): Promise<UpdateResult> {\n\t\tthis.setUpdatedAt(update);\n\t\tif (options) {\n\t\t\treturn this.col.updateOne(filter, update, options);\n\t\t}\n\t\treturn this.col.updateOne(filter, update);\n\t}\n\n\tupdateMany(filter: Filter<T>, update: UpdateFilter<T> | Partial<T>, options?: UpdateOptions): Promise<Document | UpdateResult> {\n\t\tthis.setUpdatedAt(update);\n\t\tif (options) {\n\t\t\treturn this.col.updateMany(filter, update, options);\n\t\t}\n\t\treturn this.col.updateMany(filter, update);\n\t}\n\n\tinsertMany(docs: InsertionModel<T>[], options?: BulkWriteOptions): Promise<InsertManyResult<T>> {\n\t\tdocs = docs.map((doc) => {\n\t\t\tif (!doc._id || typeof doc._id !== 'string') {\n\t\t\t\tconst oid = new ObjectId();\n\t\t\t\treturn { _id: oid.toHexString(), ...doc };\n\t\t\t}\n\t\t\tthis.setUpdatedAt(doc);\n\t\t\treturn doc;\n\t\t});\n\n\t\t// TODO reavaluate following type casting\n\t\treturn this.col.insertMany(docs as unknown as OptionalUnlessRequiredId<T>[], options || {});\n\t}\n\n\tinsertOne(doc: InsertionModel<T>, options?: InsertOneOptions): Promise<InsertOneResult<T>> {\n\t\tif (!doc._id || typeof doc._id !== 'string') {\n\t\t\tconst oid = new ObjectId();\n\t\t\tdoc = { _id: oid.toHexString(), ...doc };\n\t\t}\n\n\t\tthis.setUpdatedAt(doc);\n\n\t\t// TODO reavaluate following type casting\n\t\treturn this.col.insertOne(doc as unknown as OptionalUnlessRequiredId<T>, options || {});\n\t}\n\n\tremoveById(_id: T['_id']): Promise<DeleteResult> {\n\t\treturn this.deleteOne({ _id } as Filter<T>);\n\t}\n\n\tremoveByIds(ids: T['_id'][]): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ _id: { $in: ids } } as unknown as Filter<T>);\n\t}\n\n\tasync deleteOne(filter: Filter<T>, options?: DeleteOptions & { bypassDocumentValidation?: boolean }): Promise<DeleteResult> {\n\t\tif (!this.trash) {\n\t\t\tif (options) {\n\t\t\t\treturn this.col.deleteOne(filter, options);\n\t\t\t}\n\t\t\treturn this.col.deleteOne(filter);\n\t\t}\n\n\t\tconst doc = await this.findOne(filter);\n\n\t\tif (doc) {\n\t\t\tconst { _id, ...record } = doc;\n\n\t\t\tconst trash: TDeleted = {\n\t\t\t\t...record,\n\t\t\t\t_deletedAt: new Date(),\n\t\t\t\t__collection__: this.name,\n\t\t\t} as unknown as TDeleted;\n\n\t\t\t// since the operation is not atomic, we need to make sure that the record is not already deleted/inserted\n\t\t\tawait this.trash?.updateOne({ _id } as Filter<TDeleted>, { $set: trash } as UpdateFilter<TDeleted>, {\n\t\t\t\tupsert: true,\n\t\t\t});\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn this.col.deleteOne(filter, options);\n\t\t}\n\t\treturn this.col.deleteOne(filter);\n\t}\n\n\tasync findOneAndDelete(filter: Filter<T>, options?: FindOneAndDeleteOptions): Promise<ModifyResult<T>> {\n\t\tif (!this.trash) {\n\t\t\treturn this.col.findOneAndDelete(filter, options || {});\n\t\t}\n\n\t\tconst doc = await this.col.findOne(filter);\n\t\tif (!doc) {\n\t\t\treturn { ok: 1, value: null };\n\t\t}\n\n\t\tconst { _id, ...record } = doc;\n\t\tconst trash: TDeleted = {\n\t\t\t...record,\n\t\t\t_deletedAt: new Date(),\n\t\t\t__collection__: this.name,\n\t\t} as unknown as TDeleted;\n\n\t\tawait this.trash?.updateOne({ _id } as Filter<TDeleted>, { $set: trash } as UpdateFilter<TDeleted>, {\n\t\t\tupsert: true,\n\t\t});\n\n\t\ttry {\n\t\t\tawait this.col.deleteOne({ _id } as Filter<T>);\n\t\t} catch (e) {\n\t\t\tawait this.trash?.deleteOne({ _id } as Filter<TDeleted>);\n\t\t\tthrow e;\n\t\t}\n\n\t\treturn { ok: 1, value: doc };\n\t}\n\n\tasync deleteMany(filter: Filter<T>, options?: DeleteOptions & { onTrash?: (record: ResultFields<T, C>) => void }): Promise<DeleteResult> {\n\t\tif (!this.trash) {\n\t\t\tif (options) {\n\t\t\t\treturn this.col.deleteMany(filter, options);\n\t\t\t}\n\t\t\treturn this.col.deleteMany(filter);\n\t\t}\n\n\t\tconst cursor = this.find<ResultFields<T, C>>(filter, { session: options?.session });\n\n\t\tconst ids: T['_id'][] = [];\n\t\tfor await (const doc of cursor) {\n\t\t\tconst { _id, ...record } = doc as T;\n\n\t\t\tconst trash: TDeleted = {\n\t\t\t\t...record,\n\t\t\t\t_deletedAt: new Date(),\n\t\t\t\t__collection__: this.name,\n\t\t\t} as unknown as TDeleted;\n\n\t\t\tids.push(_id as T['_id']);\n\n\t\t\t// since the operation is not atomic, we need to make sure that the record is not already deleted/inserted\n\t\t\tawait this.trash?.updateOne({ _id } as Filter<TDeleted>, { $set: trash } as UpdateFilter<TDeleted>, {\n\t\t\t\tupsert: true,\n\t\t\t\tsession: options?.session,\n\t\t\t});\n\n\t\t\tvoid options?.onTrash?.(doc);\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn this.col.deleteMany({ _id: { $in: ids } } as unknown as Filter<T>, options);\n\t\t}\n\t\treturn this.col.deleteMany({ _id: { $in: ids } } as unknown as Filter<T>);\n\t}\n\n\t// Trash\n\ttrashFind<P extends TDeleted>(\n\t\tquery: Filter<TDeleted>,\n\t\toptions?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindCursor<WithId<TDeleted>> | undefined {\n\t\tif (!this.trash) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn this.trash.find(\n\t\t\t\t{\n\t\t\t\t\t__collection__: this.name,\n\t\t\t\t\t...query,\n\t\t\t\t},\n\t\t\t\toptions,\n\t\t\t);\n\t\t}\n\n\t\treturn this.trash.find({\n\t\t\t__collection__: this.name,\n\t\t\t...query,\n\t\t});\n\t}\n\n\ttrashFindOneById(_id: TDeleted['_id']): Promise<TDeleted | null>;\n\n\ttrashFindOneById<P extends Document>(_id: TDeleted['_id'], options: FindOptions<P extends TDeleted ? TDeleted : P>): Promise<P | null>;\n\n\tasync trashFindOneById<P extends TDeleted>(\n\t\t_id: TDeleted['_id'],\n\t\toptions?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): Promise<WithId<P | TDeleted> | null> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\t__collection__: this.name,\n\t\t} as Filter<P | TDeleted>;\n\n\t\tif (!this.trash) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn (this.trash as Collection<P | TDeleted>).findOne(query, options);\n\t\t}\n\t\treturn (this.trash as Collection<P | TDeleted>).findOne(query);\n\t}\n\n\tprivate setUpdatedAt(record: UpdateFilter<T> | InsertionModel<T>): void {\n\t\tif (this.preventSetUpdatedAt) {\n\t\t\treturn;\n\t\t}\n\t\tsetUpdatedAt(record);\n\t}\n\n\ttrashFindDeletedAfter(deletedAt: Date): FindCursor<WithId<TDeleted>>;\n\n\ttrashFindDeletedAfter<P extends Document = TDeleted>(\n\t\tdeletedAt: Date,\n\t\tquery?: Filter<TDeleted>,\n\t\toptions?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindCursor<WithId<TDeleted>> {\n\t\tconst q = {\n\t\t\t__collection__: this.name,\n\t\t\t_deletedAt: {\n\t\t\t\t$gt: deletedAt,\n\t\t\t},\n\t\t\t...query,\n\t\t} as Filter<TDeleted>;\n\n\t\tif (!this.trash) {\n\t\t\tthrow new Error('Trash is not enabled for this collection');\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn this.trash.find(q, options);\n\t\t}\n\t\treturn this.trash.find(q);\n\t}\n\n\ttrashFindPaginatedDeletedAfter<P extends Document = TDeleted>(\n\t\tdeletedAt: Date,\n\t\tquery?: Filter<TDeleted>,\n\t\toptions?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindPaginated<FindCursor<WithId<TDeleted>>> {\n\t\tconst q: Filter<TDeleted> = {\n\t\t\t__collection__: this.name,\n\t\t\t_deletedAt: {\n\t\t\t\t$gt: deletedAt,\n\t\t\t},\n\t\t\t...query,\n\t\t} as Filter<TDeleted>;\n\n\t\tif (!this.trash) {\n\t\t\tthrow new Error('Trash is not enabled for this collection');\n\t\t}\n\n\t\tconst cursor = options ? this.trash.find(q, options) : this.trash.find(q);\n\t\tconst totalCount = this.trash.countDocuments(q);\n\n\t\treturn {\n\t\t\tcursor,\n\t\t\ttotalCount,\n\t\t};\n\t}\n\n\twatch(pipeline?: object[]): ChangeStream<T> {\n\t\treturn this.col.watch(pipeline);\n\t}\n\n\tcountDocuments(query: Filter<T>): Promise<number> {\n\t\treturn this.col.countDocuments(query);\n\t}\n\n\testimatedDocumentCount(): Promise<number> {\n\t\treturn this.col.estimatedDocumentCount();\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectWithoutProperties;\n    module.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n      default(v) {\n        _objectWithoutProperties = v;\n      }\n    }, 0);\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 1);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 2);\n    const _excluded = [\"fields\", \"projection\"],\n      _excluded2 = [\"_id\"],\n      _excluded3 = [\"_id\"],\n      _excluded4 = [\"_id\"];\n    module.export({\n      BaseRaw: () => BaseRaw\n    });\n    let getCollectionName, UpdaterImpl;\n    module.link(\"@rocket.chat/models\", {\n      getCollectionName(v) {\n        getCollectionName = v;\n      },\n      UpdaterImpl(v) {\n        UpdaterImpl = v;\n      }\n    }, 0);\n    let ObjectId;\n    module.link(\"mongodb\", {\n      ObjectId(v) {\n        ObjectId = v;\n      }\n    }, 1);\n    let setUpdatedAt;\n    module.link(\"./setUpdatedAt\", {\n      setUpdatedAt(v) {\n        setUpdatedAt = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const warnFields = process.env.NODE_ENV !== 'production' || process.env.SHOW_WARNINGS === 'true' ? function () {\n      for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n        rest[_key] = arguments[_key];\n      }\n      console.warn(...rest, new Error().stack);\n    } : new Function();\n    class BaseRaw {\n      /**\n       * @param db MongoDB instance\n       * @param name Name of the model without any prefix. Used by trash records to set the `__collection__` field.\n       * @param trash Trash collection instance\n       * @param options Model options\n       */\n      constructor(db, name, trash, options) {\n        var _options$preventSetUp;\n        this.db = void 0;\n        this.name = void 0;\n        this.trash = void 0;\n        this.options = void 0;\n        this.defaultFields = void 0;\n        this.col = void 0;\n        this.preventSetUpdatedAt = void 0;\n        /**\n         * Collection name to store data.\n         */\n        this.collectionName = void 0;\n        this.pendingIndexes = void 0;\n        this.db = db;\n        this.name = name;\n        this.trash = trash;\n        this.options = options;\n        this.collectionName = options !== null && options !== void 0 && options.collectionNameResolver ? options.collectionNameResolver(name) : getCollectionName(name);\n        this.col = this.db.collection(this.collectionName, (options === null || options === void 0 ? void 0 : options.collection) || {});\n        void this.createIndexes().catch(e => {\n          console.warn(\"Some indexes for collection '\".concat(this.collectionName, \"' could not be created:\\n\\t\").concat(e.message));\n        });\n        this.preventSetUpdatedAt = (_options$preventSetUp = options === null || options === void 0 ? void 0 : options.preventSetUpdatedAt) !== null && _options$preventSetUp !== void 0 ? _options$preventSetUp : false;\n      }\n      async createIndexes() {\n        var _this$options;\n        const indexes = this.modelIndexes();\n        if ((_this$options = this.options) !== null && _this$options !== void 0 && _this$options._updatedAtIndexOptions) {\n          indexes === null || indexes === void 0 ? void 0 : indexes.push(_objectSpread(_objectSpread({}, this.options._updatedAtIndexOptions), {}, {\n            key: {\n              _updatedAt: 1\n            }\n          }));\n        }\n        if (indexes !== null && indexes !== void 0 && indexes.length) {\n          if (this.pendingIndexes) {\n            await this.pendingIndexes;\n          }\n          this.pendingIndexes = this.col.createIndexes(indexes);\n          void this.pendingIndexes.finally(() => {\n            this.pendingIndexes = undefined;\n          });\n          return this.pendingIndexes;\n        }\n      }\n      modelIndexes() {\n        return undefined;\n      }\n      getCollectionName() {\n        return this.collectionName;\n      }\n      getUpdater() {\n        return new UpdaterImpl();\n      }\n      updateFromUpdater(query, updater) {\n        const updateFilter = updater.getUpdateFilter();\n        return this.updateOne(query, updateFilter).catch(e => {\n          console.warn(e, updateFilter);\n          return Promise.reject(e);\n        });\n      }\n      doNotMixInclusionAndExclusionFields() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const optionsDef = this.ensureDefaultFields(options);\n        if ((optionsDef === null || optionsDef === void 0 ? void 0 : optionsDef.projection) === undefined) {\n          return optionsDef;\n        }\n        const projection = optionsDef === null || optionsDef === void 0 ? void 0 : optionsDef.projection;\n        const keys = Object.keys(projection);\n        const removeKeys = keys.filter(key => projection[key] === 0);\n        if (keys.length > removeKeys.length) {\n          removeKeys.forEach(key => delete projection[key]);\n        }\n        return _objectSpread(_objectSpread({}, optionsDef), {}, {\n          projection\n        });\n      }\n      ensureDefaultFields(options) {\n        if (options !== null && options !== void 0 && options.fields) {\n          warnFields(\"Using 'fields' in models is deprecated.\", options);\n        }\n        if (this.defaultFields === undefined) {\n          return options;\n        }\n        const _ref = options || {},\n          {\n            fields: deprecatedFields,\n            projection\n          } = _ref,\n          rest = _objectWithoutProperties(_ref, _excluded);\n        const fields = _objectSpread(_objectSpread({}, deprecatedFields), projection);\n        return _objectSpread(_objectSpread({\n          projection: this.defaultFields\n        }, fields && Object.values(fields).length && {\n          projection: fields\n        }), rest);\n      }\n      findOneAndUpdate(query, update, options) {\n        this.setUpdatedAt(update);\n        return this.col.findOneAndUpdate(query, update, options || {});\n      }\n      async findOneById(_id, options) {\n        const query = {\n          _id\n        };\n        if (options) {\n          return this.findOne(query, options);\n        }\n        return this.findOne(query);\n      }\n      async findOne() {\n        let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let options = arguments.length > 1 ? arguments[1] : undefined;\n        const q = typeof query === 'string' ? {\n          _id: query\n        } : query;\n        const optionsDef = this.doNotMixInclusionAndExclusionFields(options);\n        if (optionsDef) {\n          return this.col.findOne(q, optionsDef);\n        }\n        return this.col.findOne(q);\n      }\n      find() {\n        let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let options = arguments.length > 1 ? arguments[1] : undefined;\n        const optionsDef = this.doNotMixInclusionAndExclusionFields(options);\n        return this.col.find(query, optionsDef);\n      }\n      findPaginated() {\n        let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let options = arguments.length > 1 ? arguments[1] : undefined;\n        const optionsDef = this.doNotMixInclusionAndExclusionFields(options);\n        const cursor = optionsDef ? this.col.find(query, optionsDef) : this.col.find(query);\n        const totalCount = this.col.countDocuments(query);\n        return {\n          cursor,\n          totalCount\n        };\n      }\n      /**\n       * @deprecated use {@link updateOne} or {@link updateAny} instead\n       */\n      update(filter, update, options) {\n        const operation = options !== null && options !== void 0 && options.multi ? 'updateMany' : 'updateOne';\n        return this[operation](filter, update, options);\n      }\n      updateOne(filter, update, options) {\n        this.setUpdatedAt(update);\n        if (options) {\n          return this.col.updateOne(filter, update, options);\n        }\n        return this.col.updateOne(filter, update);\n      }\n      updateMany(filter, update, options) {\n        this.setUpdatedAt(update);\n        if (options) {\n          return this.col.updateMany(filter, update, options);\n        }\n        return this.col.updateMany(filter, update);\n      }\n      insertMany(docs, options) {\n        docs = docs.map(doc => {\n          if (!doc._id || typeof doc._id !== 'string') {\n            const oid = new ObjectId();\n            return _objectSpread({\n              _id: oid.toHexString()\n            }, doc);\n          }\n          this.setUpdatedAt(doc);\n          return doc;\n        });\n        // TODO reavaluate following type casting\n        return this.col.insertMany(docs, options || {});\n      }\n      insertOne(doc, options) {\n        if (!doc._id || typeof doc._id !== 'string') {\n          const oid = new ObjectId();\n          doc = _objectSpread({\n            _id: oid.toHexString()\n          }, doc);\n        }\n        this.setUpdatedAt(doc);\n        // TODO reavaluate following type casting\n        return this.col.insertOne(doc, options || {});\n      }\n      removeById(_id) {\n        return this.deleteOne({\n          _id\n        });\n      }\n      removeByIds(ids) {\n        return this.deleteMany({\n          _id: {\n            $in: ids\n          }\n        });\n      }\n      async deleteOne(filter, options) {\n        if (!this.trash) {\n          if (options) {\n            return this.col.deleteOne(filter, options);\n          }\n          return this.col.deleteOne(filter);\n        }\n        const doc = await this.findOne(filter);\n        if (doc) {\n          var _this$trash;\n          const {\n              _id\n            } = doc,\n            record = _objectWithoutProperties(doc, _excluded2);\n          const trash = _objectSpread(_objectSpread({}, record), {}, {\n            _deletedAt: new Date(),\n            __collection__: this.name\n          });\n          // since the operation is not atomic, we need to make sure that the record is not already deleted/inserted\n          await ((_this$trash = this.trash) === null || _this$trash === void 0 ? void 0 : _this$trash.updateOne({\n            _id\n          }, {\n            $set: trash\n          }, {\n            upsert: true\n          }));\n        }\n        if (options) {\n          return this.col.deleteOne(filter, options);\n        }\n        return this.col.deleteOne(filter);\n      }\n      async findOneAndDelete(filter, options) {\n        var _this$trash2;\n        if (!this.trash) {\n          return this.col.findOneAndDelete(filter, options || {});\n        }\n        const doc = await this.col.findOne(filter);\n        if (!doc) {\n          return {\n            ok: 1,\n            value: null\n          };\n        }\n        const {\n            _id\n          } = doc,\n          record = _objectWithoutProperties(doc, _excluded3);\n        const trash = _objectSpread(_objectSpread({}, record), {}, {\n          _deletedAt: new Date(),\n          __collection__: this.name\n        });\n        await ((_this$trash2 = this.trash) === null || _this$trash2 === void 0 ? void 0 : _this$trash2.updateOne({\n          _id\n        }, {\n          $set: trash\n        }, {\n          upsert: true\n        }));\n        try {\n          await this.col.deleteOne({\n            _id\n          });\n        } catch (e) {\n          var _this$trash3;\n          await ((_this$trash3 = this.trash) === null || _this$trash3 === void 0 ? void 0 : _this$trash3.deleteOne({\n            _id\n          }));\n          throw e;\n        }\n        return {\n          ok: 1,\n          value: doc\n        };\n      }\n      async deleteMany(filter, options) {\n        if (!this.trash) {\n          if (options) {\n            return this.col.deleteMany(filter, options);\n          }\n          return this.col.deleteMany(filter);\n        }\n        const cursor = this.find(filter, {\n          session: options === null || options === void 0 ? void 0 : options.session\n        });\n        const ids = [];\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(cursor), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const doc = _step.value;\n            {\n              var _this$trash4, _options$onTrash;\n              const {\n                  _id\n                } = doc,\n                record = _objectWithoutProperties(doc, _excluded4);\n              const trash = _objectSpread(_objectSpread({}, record), {}, {\n                _deletedAt: new Date(),\n                __collection__: this.name\n              });\n              ids.push(_id);\n              // since the operation is not atomic, we need to make sure that the record is not already deleted/inserted\n              await ((_this$trash4 = this.trash) === null || _this$trash4 === void 0 ? void 0 : _this$trash4.updateOne({\n                _id\n              }, {\n                $set: trash\n              }, {\n                upsert: true,\n                session: options === null || options === void 0 ? void 0 : options.session\n              }));\n              void (options === null || options === void 0 ? void 0 : (_options$onTrash = options.onTrash) === null || _options$onTrash === void 0 ? void 0 : _options$onTrash.call(options, doc));\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        if (options) {\n          return this.col.deleteMany({\n            _id: {\n              $in: ids\n            }\n          }, options);\n        }\n        return this.col.deleteMany({\n          _id: {\n            $in: ids\n          }\n        });\n      }\n      // Trash\n      trashFind(query, options) {\n        if (!this.trash) {\n          return undefined;\n        }\n        if (options) {\n          return this.trash.find(_objectSpread({\n            __collection__: this.name\n          }, query), options);\n        }\n        return this.trash.find(_objectSpread({\n          __collection__: this.name\n        }, query));\n      }\n      async trashFindOneById(_id, options) {\n        const query = {\n          _id,\n          __collection__: this.name\n        };\n        if (!this.trash) {\n          return null;\n        }\n        if (options) {\n          return this.trash.findOne(query, options);\n        }\n        return this.trash.findOne(query);\n      }\n      setUpdatedAt(record) {\n        if (this.preventSetUpdatedAt) {\n          return;\n        }\n        setUpdatedAt(record);\n      }\n      trashFindDeletedAfter(deletedAt, query, options) {\n        const q = _objectSpread({\n          __collection__: this.name,\n          _deletedAt: {\n            $gt: deletedAt\n          }\n        }, query);\n        if (!this.trash) {\n          throw new Error('Trash is not enabled for this collection');\n        }\n        if (options) {\n          return this.trash.find(q, options);\n        }\n        return this.trash.find(q);\n      }\n      trashFindPaginatedDeletedAfter(deletedAt, query, options) {\n        const q = _objectSpread({\n          __collection__: this.name,\n          _deletedAt: {\n            $gt: deletedAt\n          }\n        }, query);\n        if (!this.trash) {\n          throw new Error('Trash is not enabled for this collection');\n        }\n        const cursor = options ? this.trash.find(q, options) : this.trash.find(q);\n        const totalCount = this.trash.countDocuments(q);\n        return {\n          cursor,\n          totalCount\n        };\n      }\n      watch(pipeline) {\n        return this.col.watch(pipeline);\n      }\n      countDocuments(query) {\n        return this.col.countDocuments(query);\n      }\n      estimatedDocumentCount() {\n        return this.col.estimatedDocumentCount();\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectWithoutProperties","module","link","default","v","_objectSpread","_asyncIterator","_excluded","_excluded2","_excluded3","_excluded4","export","BaseRaw","getCollectionName","UpdaterImpl","ObjectId","setUpdatedAt","__reifyWaitForDeps__","warnFields","process","env","NODE_ENV","SHOW_WARNINGS","_len","arguments","length","rest","Array","_key","console","warn","Error","stack","Function","constructor","db","name","trash","options","_options$preventSetUp","defaultFields","col","preventSetUpdatedAt","collectionName","pendingIndexes","collectionNameResolver","collection","createIndexes","catch","e","concat","message","_this$options","indexes","modelIndexes","_updatedAtIndexOptions","push","key","_updatedAt","finally","undefined","getUpdater","updateFromUpdater","query","updater","updateFilter","getUpdateFilter","updateOne","Promise","reject","doNotMixInclusionAndExclusionFields","optionsDef","ensureDefaultFields","projection","keys","Object","removeKeys","filter","forEach","fields","_ref","deprecatedFields","values","findOneAndUpdate","update","findOneById","_id","findOne","q","find","findPaginated","cursor","totalCount","countDocuments","operation","multi","updateMany","insertMany","docs","map","doc","oid","toHexString","insertOne","removeById","deleteOne","removeByIds","ids","deleteMany","$in","_this$trash","record","_deletedAt","Date","__collection__","$set","upsert","findOneAndDelete","_this$trash2","ok","value","_this$trash3","session","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","_this$trash4","_options$onTrash","onTrash","call","err","return","trashFind","trashFindOneById","trashFindDeletedAfter","deletedAt","$gt","trashFindPaginatedDeletedAfter","watch","pipeline","estimatedDocumentCount","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/BaseRaw.ts"],"sourcesContent":["import type { RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IBaseModel, DefaultFields, ResultFields, FindPaginated, InsertionModel } from '@rocket.chat/model-typings';\nimport type { Updater } from '@rocket.chat/models';\nimport { getCollectionName, UpdaterImpl } from '@rocket.chat/models';\nimport { ObjectId } from 'mongodb';\nimport type {\n\tBulkWriteOptions,\n\tChangeStream,\n\tCollection,\n\tCollectionOptions,\n\tDb,\n\tFilter,\n\tFindOneAndUpdateOptions,\n\tIndexDescription,\n\tInsertOneOptions,\n\tModifyResult,\n\tOptionalUnlessRequiredId,\n\tUpdateFilter,\n\tWithId,\n\tUpdateOptions,\n\tDocument,\n\tFindOptions,\n\tFindCursor,\n\tUpdateResult,\n\tInsertManyResult,\n\tInsertOneResult,\n\tDeleteResult,\n\tDeleteOptions,\n\tFindOneAndDeleteOptions,\n} from 'mongodb';\n\nimport { setUpdatedAt } from './setUpdatedAt';\n\nconst warnFields =\n\tprocess.env.NODE_ENV !== 'production' || process.env.SHOW_WARNINGS === 'true'\n\t\t? (...rest: any): void => {\n\t\t\t\tconsole.warn(...rest, new Error().stack);\n\t\t  }\n\t\t: new Function();\n\ntype ModelOptions = {\n\tpreventSetUpdatedAt?: boolean;\n\tcollectionNameResolver?: (name: string) => string;\n\tcollection?: CollectionOptions;\n\t_updatedAtIndexOptions?: Omit<IndexDescription, 'key'>;\n};\n\nexport abstract class BaseRaw<\n\tT extends { _id: string },\n\tC extends DefaultFields<T> = undefined,\n\tTDeleted extends RocketChatRecordDeleted<T> = RocketChatRecordDeleted<T>,\n> implements IBaseModel<T, C, TDeleted>\n{\n\tpublic readonly defaultFields: C;\n\n\tpublic readonly col: Collection<T>;\n\n\tprivate preventSetUpdatedAt: boolean;\n\n\t/**\n\t * Collection name to store data.\n\t */\n\tprivate collectionName: string;\n\n\t/**\n\t * @param db MongoDB instance\n\t * @param name Name of the model without any prefix. Used by trash records to set the `__collection__` field.\n\t * @param trash Trash collection instance\n\t * @param options Model options\n\t */\n\tconstructor(private db: Db, protected name: string, protected trash?: Collection<TDeleted>, private options?: ModelOptions) {\n\t\tthis.collectionName = options?.collectionNameResolver ? options.collectionNameResolver(name) : getCollectionName(name);\n\n\t\tthis.col = this.db.collection(this.collectionName, options?.collection || {});\n\n\t\tvoid this.createIndexes().catch((e) => {\n\t\t\tconsole.warn(`Some indexes for collection '${this.collectionName}' could not be created:\\n\\t${e.message}`);\n\t\t});\n\n\t\tthis.preventSetUpdatedAt = options?.preventSetUpdatedAt ?? false;\n\t}\n\n\tprivate pendingIndexes: Promise<void> | undefined;\n\n\tpublic async createIndexes() {\n\t\tconst indexes = this.modelIndexes();\n\t\tif (this.options?._updatedAtIndexOptions) {\n\t\t\tindexes?.push({ ...this.options._updatedAtIndexOptions, key: { _updatedAt: 1 } });\n\t\t}\n\n\t\tif (indexes?.length) {\n\t\t\tif (this.pendingIndexes) {\n\t\t\t\tawait this.pendingIndexes;\n\t\t\t}\n\n\t\t\tthis.pendingIndexes = this.col.createIndexes(indexes) as unknown as Promise<void>;\n\n\t\t\tvoid this.pendingIndexes.finally(() => {\n\t\t\t\tthis.pendingIndexes = undefined;\n\t\t\t});\n\n\t\t\treturn this.pendingIndexes;\n\t\t}\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] | undefined {\n\t\treturn undefined;\n\t}\n\n\tgetCollectionName(): string {\n\t\treturn this.collectionName;\n\t}\n\n\tpublic getUpdater(): Updater<T> {\n\t\treturn new UpdaterImpl<T>();\n\t}\n\n\tpublic updateFromUpdater(query: Filter<T>, updater: Updater<T>): Promise<UpdateResult> {\n\t\tconst updateFilter = updater.getUpdateFilter();\n\t\treturn this.updateOne(query, updateFilter).catch((e) => {\n\t\t\tconsole.warn(e, updateFilter);\n\t\t\treturn Promise.reject(e);\n\t\t});\n\t}\n\n\tprivate doNotMixInclusionAndExclusionFields(options: FindOptions<T> = {}): FindOptions<T> {\n\t\tconst optionsDef = this.ensureDefaultFields(options);\n\t\tif (optionsDef?.projection === undefined) {\n\t\t\treturn optionsDef;\n\t\t}\n\n\t\tconst projection: Record<string, any> = optionsDef?.projection;\n\t\tconst keys = Object.keys(projection);\n\t\tconst removeKeys = keys.filter((key) => projection[key] === 0);\n\t\tif (keys.length > removeKeys.length) {\n\t\t\tremoveKeys.forEach((key) => delete projection[key]);\n\t\t}\n\n\t\treturn {\n\t\t\t...optionsDef,\n\t\t\tprojection,\n\t\t};\n\t}\n\n\tprivate ensureDefaultFields<P extends Document>(options: FindOptions<P>): FindOptions<P>;\n\n\tprivate ensureDefaultFields<P extends Document>(\n\t\toptions?: FindOptions<P> & { fields?: FindOptions<P>['projection'] },\n\t): FindOptions<P> | FindOptions<T> | undefined {\n\t\tif (options?.fields) {\n\t\t\twarnFields(\"Using 'fields' in models is deprecated.\", options);\n\t\t}\n\n\t\tif (this.defaultFields === undefined) {\n\t\t\treturn options;\n\t\t}\n\n\t\tconst { fields: deprecatedFields, projection, ...rest } = options || {};\n\n\t\tconst fields = { ...deprecatedFields, ...projection };\n\n\t\treturn {\n\t\t\tprojection: this.defaultFields,\n\t\t\t...(fields && Object.values(fields).length && { projection: fields }),\n\t\t\t...rest,\n\t\t};\n\t}\n\n\tpublic findOneAndUpdate(query: Filter<T>, update: UpdateFilter<T> | T, options?: FindOneAndUpdateOptions): Promise<ModifyResult<T>> {\n\t\tthis.setUpdatedAt(update);\n\t\treturn this.col.findOneAndUpdate(query, update, options || {});\n\t}\n\n\tasync findOneById(_id: T['_id'], options?: FindOptions<T>): Promise<T | null>;\n\n\tasync findOneById<P extends Document = T>(_id: T['_id'], options?: FindOptions<P>): Promise<P | null>;\n\n\tasync findOneById(_id: T['_id'], options?: any): Promise<T | null> {\n\t\tconst query: Filter<T> = { _id } as Filter<T>;\n\t\tif (options) {\n\t\t\treturn this.findOne(query, options);\n\t\t}\n\t\treturn this.findOne(query);\n\t}\n\n\tasync findOne(query?: Filter<T> | T['_id'], options?: undefined): Promise<T | null>;\n\n\tasync findOne<P extends Document = T>(query: Filter<T> | T['_id'], options?: FindOptions<P extends T ? T : P>): Promise<P | null>;\n\n\tasync findOne<P>(query: Filter<T> | T['_id'] = {}, options?: any): Promise<WithId<T> | WithId<P> | null> {\n\t\tconst q: Filter<T> = typeof query === 'string' ? ({ _id: query } as Filter<T>) : query;\n\t\tconst optionsDef = this.doNotMixInclusionAndExclusionFields(options);\n\t\tif (optionsDef) {\n\t\t\treturn this.col.findOne(q, optionsDef);\n\t\t}\n\t\treturn this.col.findOne(q);\n\t}\n\n\tfind(query?: Filter<T>): FindCursor<ResultFields<T, C>>;\n\n\tfind<P extends Document = T>(query: Filter<T>, options?: FindOptions<P extends T ? T : P>): FindCursor<P>;\n\n\tfind<P extends Document>(\n\t\tquery: Filter<T> = {},\n\t\toptions?: FindOptions<P extends T ? T : P>,\n\t): FindCursor<WithId<P>> | FindCursor<WithId<T>> {\n\t\tconst optionsDef = this.doNotMixInclusionAndExclusionFields(options);\n\t\treturn this.col.find(query, optionsDef);\n\t}\n\n\tfindPaginated<P extends Document = T>(query: Filter<T>, options?: FindOptions<P extends T ? T : P>): FindPaginated<FindCursor<WithId<P>>>;\n\n\tfindPaginated(query: Filter<T> = {}, options?: any): FindPaginated<FindCursor<WithId<T>>> {\n\t\tconst optionsDef = this.doNotMixInclusionAndExclusionFields(options);\n\n\t\tconst cursor = optionsDef ? this.col.find(query, optionsDef) : this.col.find(query);\n\t\tconst totalCount = this.col.countDocuments(query);\n\n\t\treturn {\n\t\t\tcursor,\n\t\t\ttotalCount,\n\t\t};\n\t}\n\n\t/**\n\t * @deprecated use {@link updateOne} or {@link updateAny} instead\n\t */\n\tupdate(\n\t\tfilter: Filter<T>,\n\t\tupdate: UpdateFilter<T> | Partial<T>,\n\t\toptions?: UpdateOptions & { multi?: true },\n\t): Promise<UpdateResult | Document> {\n\t\tconst operation = options?.multi ? 'updateMany' : 'updateOne';\n\n\t\treturn this[operation](filter, update, options);\n\t}\n\n\tupdateOne(filter: Filter<T>, update: UpdateFilter<T> | Partial<T>, options?: UpdateOptions): Promise<UpdateResult> {\n\t\tthis.setUpdatedAt(update);\n\t\tif (options) {\n\t\t\treturn this.col.updateOne(filter, update, options);\n\t\t}\n\t\treturn this.col.updateOne(filter, update);\n\t}\n\n\tupdateMany(filter: Filter<T>, update: UpdateFilter<T> | Partial<T>, options?: UpdateOptions): Promise<Document | UpdateResult> {\n\t\tthis.setUpdatedAt(update);\n\t\tif (options) {\n\t\t\treturn this.col.updateMany(filter, update, options);\n\t\t}\n\t\treturn this.col.updateMany(filter, update);\n\t}\n\n\tinsertMany(docs: InsertionModel<T>[], options?: BulkWriteOptions): Promise<InsertManyResult<T>> {\n\t\tdocs = docs.map((doc) => {\n\t\t\tif (!doc._id || typeof doc._id !== 'string') {\n\t\t\t\tconst oid = new ObjectId();\n\t\t\t\treturn { _id: oid.toHexString(), ...doc };\n\t\t\t}\n\t\t\tthis.setUpdatedAt(doc);\n\t\t\treturn doc;\n\t\t});\n\n\t\t// TODO reavaluate following type casting\n\t\treturn this.col.insertMany(docs as unknown as OptionalUnlessRequiredId<T>[], options || {});\n\t}\n\n\tinsertOne(doc: InsertionModel<T>, options?: InsertOneOptions): Promise<InsertOneResult<T>> {\n\t\tif (!doc._id || typeof doc._id !== 'string') {\n\t\t\tconst oid = new ObjectId();\n\t\t\tdoc = { _id: oid.toHexString(), ...doc };\n\t\t}\n\n\t\tthis.setUpdatedAt(doc);\n\n\t\t// TODO reavaluate following type casting\n\t\treturn this.col.insertOne(doc as unknown as OptionalUnlessRequiredId<T>, options || {});\n\t}\n\n\tremoveById(_id: T['_id']): Promise<DeleteResult> {\n\t\treturn this.deleteOne({ _id } as Filter<T>);\n\t}\n\n\tremoveByIds(ids: T['_id'][]): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ _id: { $in: ids } } as unknown as Filter<T>);\n\t}\n\n\tasync deleteOne(filter: Filter<T>, options?: DeleteOptions & { bypassDocumentValidation?: boolean }): Promise<DeleteResult> {\n\t\tif (!this.trash) {\n\t\t\tif (options) {\n\t\t\t\treturn this.col.deleteOne(filter, options);\n\t\t\t}\n\t\t\treturn this.col.deleteOne(filter);\n\t\t}\n\n\t\tconst doc = await this.findOne(filter);\n\n\t\tif (doc) {\n\t\t\tconst { _id, ...record } = doc;\n\n\t\t\tconst trash: TDeleted = {\n\t\t\t\t...record,\n\t\t\t\t_deletedAt: new Date(),\n\t\t\t\t__collection__: this.name,\n\t\t\t} as unknown as TDeleted;\n\n\t\t\t// since the operation is not atomic, we need to make sure that the record is not already deleted/inserted\n\t\t\tawait this.trash?.updateOne({ _id } as Filter<TDeleted>, { $set: trash } as UpdateFilter<TDeleted>, {\n\t\t\t\tupsert: true,\n\t\t\t});\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn this.col.deleteOne(filter, options);\n\t\t}\n\t\treturn this.col.deleteOne(filter);\n\t}\n\n\tasync findOneAndDelete(filter: Filter<T>, options?: FindOneAndDeleteOptions): Promise<ModifyResult<T>> {\n\t\tif (!this.trash) {\n\t\t\treturn this.col.findOneAndDelete(filter, options || {});\n\t\t}\n\n\t\tconst doc = await this.col.findOne(filter);\n\t\tif (!doc) {\n\t\t\treturn { ok: 1, value: null };\n\t\t}\n\n\t\tconst { _id, ...record } = doc;\n\t\tconst trash: TDeleted = {\n\t\t\t...record,\n\t\t\t_deletedAt: new Date(),\n\t\t\t__collection__: this.name,\n\t\t} as unknown as TDeleted;\n\n\t\tawait this.trash?.updateOne({ _id } as Filter<TDeleted>, { $set: trash } as UpdateFilter<TDeleted>, {\n\t\t\tupsert: true,\n\t\t});\n\n\t\ttry {\n\t\t\tawait this.col.deleteOne({ _id } as Filter<T>);\n\t\t} catch (e) {\n\t\t\tawait this.trash?.deleteOne({ _id } as Filter<TDeleted>);\n\t\t\tthrow e;\n\t\t}\n\n\t\treturn { ok: 1, value: doc };\n\t}\n\n\tasync deleteMany(filter: Filter<T>, options?: DeleteOptions & { onTrash?: (record: ResultFields<T, C>) => void }): Promise<DeleteResult> {\n\t\tif (!this.trash) {\n\t\t\tif (options) {\n\t\t\t\treturn this.col.deleteMany(filter, options);\n\t\t\t}\n\t\t\treturn this.col.deleteMany(filter);\n\t\t}\n\n\t\tconst cursor = this.find<ResultFields<T, C>>(filter, { session: options?.session });\n\n\t\tconst ids: T['_id'][] = [];\n\t\tfor await (const doc of cursor) {\n\t\t\tconst { _id, ...record } = doc as T;\n\n\t\t\tconst trash: TDeleted = {\n\t\t\t\t...record,\n\t\t\t\t_deletedAt: new Date(),\n\t\t\t\t__collection__: this.name,\n\t\t\t} as unknown as TDeleted;\n\n\t\t\tids.push(_id as T['_id']);\n\n\t\t\t// since the operation is not atomic, we need to make sure that the record is not already deleted/inserted\n\t\t\tawait this.trash?.updateOne({ _id } as Filter<TDeleted>, { $set: trash } as UpdateFilter<TDeleted>, {\n\t\t\t\tupsert: true,\n\t\t\t\tsession: options?.session,\n\t\t\t});\n\n\t\t\tvoid options?.onTrash?.(doc);\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn this.col.deleteMany({ _id: { $in: ids } } as unknown as Filter<T>, options);\n\t\t}\n\t\treturn this.col.deleteMany({ _id: { $in: ids } } as unknown as Filter<T>);\n\t}\n\n\t// Trash\n\ttrashFind<P extends TDeleted>(\n\t\tquery: Filter<TDeleted>,\n\t\toptions?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindCursor<WithId<TDeleted>> | undefined {\n\t\tif (!this.trash) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn this.trash.find(\n\t\t\t\t{\n\t\t\t\t\t__collection__: this.name,\n\t\t\t\t\t...query,\n\t\t\t\t},\n\t\t\t\toptions,\n\t\t\t);\n\t\t}\n\n\t\treturn this.trash.find({\n\t\t\t__collection__: this.name,\n\t\t\t...query,\n\t\t});\n\t}\n\n\ttrashFindOneById(_id: TDeleted['_id']): Promise<TDeleted | null>;\n\n\ttrashFindOneById<P extends Document>(_id: TDeleted['_id'], options: FindOptions<P extends TDeleted ? TDeleted : P>): Promise<P | null>;\n\n\tasync trashFindOneById<P extends TDeleted>(\n\t\t_id: TDeleted['_id'],\n\t\toptions?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): Promise<WithId<P | TDeleted> | null> {\n\t\tconst query = {\n\t\t\t_id,\n\t\t\t__collection__: this.name,\n\t\t} as Filter<P | TDeleted>;\n\n\t\tif (!this.trash) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn (this.trash as Collection<P | TDeleted>).findOne(query, options);\n\t\t}\n\t\treturn (this.trash as Collection<P | TDeleted>).findOne(query);\n\t}\n\n\tprivate setUpdatedAt(record: UpdateFilter<T> | InsertionModel<T>): void {\n\t\tif (this.preventSetUpdatedAt) {\n\t\t\treturn;\n\t\t}\n\t\tsetUpdatedAt(record);\n\t}\n\n\ttrashFindDeletedAfter(deletedAt: Date): FindCursor<WithId<TDeleted>>;\n\n\ttrashFindDeletedAfter<P extends Document = TDeleted>(\n\t\tdeletedAt: Date,\n\t\tquery?: Filter<TDeleted>,\n\t\toptions?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindCursor<WithId<TDeleted>> {\n\t\tconst q = {\n\t\t\t__collection__: this.name,\n\t\t\t_deletedAt: {\n\t\t\t\t$gt: deletedAt,\n\t\t\t},\n\t\t\t...query,\n\t\t} as Filter<TDeleted>;\n\n\t\tif (!this.trash) {\n\t\t\tthrow new Error('Trash is not enabled for this collection');\n\t\t}\n\n\t\tif (options) {\n\t\t\treturn this.trash.find(q, options);\n\t\t}\n\t\treturn this.trash.find(q);\n\t}\n\n\ttrashFindPaginatedDeletedAfter<P extends Document = TDeleted>(\n\t\tdeletedAt: Date,\n\t\tquery?: Filter<TDeleted>,\n\t\toptions?: FindOptions<P extends TDeleted ? TDeleted : P>,\n\t): FindPaginated<FindCursor<WithId<TDeleted>>> {\n\t\tconst q: Filter<TDeleted> = {\n\t\t\t__collection__: this.name,\n\t\t\t_deletedAt: {\n\t\t\t\t$gt: deletedAt,\n\t\t\t},\n\t\t\t...query,\n\t\t} as Filter<TDeleted>;\n\n\t\tif (!this.trash) {\n\t\t\tthrow new Error('Trash is not enabled for this collection');\n\t\t}\n\n\t\tconst cursor = options ? this.trash.find(q, options) : this.trash.find(q);\n\t\tconst totalCount = this.trash.countDocuments(q);\n\n\t\treturn {\n\t\t\tcursor,\n\t\t\ttotalCount,\n\t\t};\n\t}\n\n\twatch(pipeline?: object[]): ChangeStream<T> {\n\t\treturn this.col.watch(pipeline);\n\t}\n\n\tcountDocuments(query: Filter<T>): Promise<number> {\n\t\treturn this.col.countDocuments(query);\n\t}\n\n\testimatedDocumentCount(): Promise<number> {\n\t\treturn this.col.estimatedDocumentCount();\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"21702911fa3bcd2a681b6956e91baba5e900f55d"}
