{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/statistics/server/lib/statistics.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/statistics/server/lib/statistics.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/statistics/server/lib/statistics.ts","inputSourceMap":{"version":3,"file":"app/statistics/server/lib/statistics.ts","sourceRoot":"","sources":["app/statistics/server/lib/statistics.ts"],"names":[],"mappings":"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","sourcesContent":["import { log } from 'console';\nimport os from 'os';\n\nimport { Analytics, Team, VideoConf, Presence } from '@rocket.chat/core-services';\nimport type { IRoom, IStats, ISetting } from '@rocket.chat/core-typings';\nimport { UserStatus } from '@rocket.chat/core-typings';\nimport {\n\tNotificationQueue,\n\tRooms,\n\tStatistics,\n\tSessions,\n\tIntegrations,\n\tInvites,\n\tUploads,\n\tLivechatDepartment,\n\tLivechatVisitors,\n\tEmailInbox,\n\tLivechatBusinessHours,\n\tMessages,\n\tRoles as RolesRaw,\n\tInstanceStatus,\n\tSettings,\n\tLivechatTrigger,\n\tLivechatCustomField,\n\tSubscriptions,\n\tUsers,\n\tLivechatRooms,\n} from '@rocket.chat/models';\nimport { MongoInternals } from 'meteor/mongo';\nimport moment from 'moment';\n\nimport { readSecondaryPreferred } from '../../../../server/database/readSecondaryPreferred';\nimport { isRunningMs } from '../../../../server/lib/isRunningMs';\nimport { getControl } from '../../../../server/lib/migrations';\nimport { getSettingsStatistics } from '../../../../server/lib/statistics/getSettingsStatistics';\nimport { getMatrixFederationStatistics } from '../../../../server/services/federation/infrastructure/rocket-chat/adapters/Statistics';\nimport { getStatistics as federationGetStatistics } from '../../../federation/server/functions/dashboard';\nimport { settings } from '../../../settings/server';\nimport { Info } from '../../../utils/rocketchat.info';\nimport { getMongoInfo } from '../../../utils/server/functions/getMongoInfo';\nimport { getAppsStatistics } from './getAppsStatistics';\nimport { getStatistics as getEnterpriseStatistics } from './getEEStatistics';\nimport { getImporterStatistics } from './getImporterStatistics';\nimport { getServicesStatistics } from './getServicesStatistics';\n\nconst getUserLanguages = async (totalUsers: number): Promise<{ [key: string]: number }> => {\n\tconst result = await Users.getUserLanguages();\n\n\tconst languages: { [key: string]: number } = {\n\t\tnone: totalUsers,\n\t};\n\n\tresult.forEach(({ _id, total }: { _id: string; total: number }) => {\n\t\tif (!_id) {\n\t\t\treturn;\n\t\t}\n\t\tlanguages[_id] = total;\n\t\tlanguages.none -= total;\n\t});\n\n\treturn languages;\n};\n\nconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\nexport const statistics = {\n\tget: async (): Promise<IStats> => {\n\t\tconst readPreference = readSecondaryPreferred(db);\n\n\t\tconst statistics = {} as IStats;\n\t\tconst statsPms = [];\n\n\t\t// Setup Wizard\n\t\tconst [organizationType, industry, size, country, language, serverType, registerServer] = await Promise.all([\n\t\t\tsettings.get<string>('Organization_Type'),\n\t\t\tsettings.get<string>('Industry'),\n\t\t\tsettings.get<string>('Size'),\n\t\t\tsettings.get<string>('Country'),\n\t\t\tsettings.get<string>('Language'),\n\t\t\tsettings.get<string>('Server_Type'),\n\t\t\tsettings.get<boolean>('Register_Server'),\n\t\t]);\n\n\t\tstatistics.wizard = {\n\t\t\torganizationType,\n\t\t\tindustry,\n\t\t\tsize,\n\t\t\tcountry,\n\t\t\tlanguage,\n\t\t\tserverType,\n\t\t\tregisterServer,\n\t\t};\n\n\t\t// Version\n\t\tconst uniqueID = await Settings.findOne<Pick<ISetting, 'createdAt'>>('uniqueID', { projection: { createdAt: 1 } });\n\t\tstatistics.uniqueId = settings.get('uniqueID');\n\t\tif (uniqueID) {\n\t\t\tstatistics.installedAt = uniqueID.createdAt.toISOString();\n\t\t}\n\n\t\tstatistics.deploymentFingerprintHash = settings.get('Deployment_FingerPrint_Hash');\n\t\tstatistics.deploymentFingerprintVerified = settings.get('Deployment_FingerPrint_Verified');\n\n\t\tif (Info) {\n\t\t\tstatistics.version = Info.version;\n\t\t\tstatistics.tag = Info.tag;\n\t\t\tstatistics.branch = Info.branch;\n\t\t}\n\n\t\t// User statistics\n\t\tstatistics.totalUsers = await Users.col.countDocuments({});\n\t\tstatistics.activeUsers = await Users.getActiveLocalUserCount();\n\t\tstatistics.activeGuests = await Users.getActiveLocalGuestCount();\n\t\tstatistics.nonActiveUsers = await Users.col.countDocuments({ active: false });\n\t\tstatistics.appUsers = await Users.col.countDocuments({ type: 'app' });\n\t\tstatistics.onlineUsers = await Users.col.countDocuments({ status: UserStatus.ONLINE });\n\t\tstatistics.awayUsers = await Users.col.countDocuments({ status: UserStatus.AWAY });\n\t\tstatistics.busyUsers = await Users.col.countDocuments({ status: UserStatus.BUSY });\n\t\tstatistics.totalConnectedUsers = statistics.onlineUsers + statistics.awayUsers;\n\t\tstatistics.offlineUsers = statistics.totalUsers - statistics.onlineUsers - statistics.awayUsers - statistics.busyUsers;\n\t\tstatsPms.push(\n\t\t\tgetUserLanguages(statistics.totalUsers).then((total) => {\n\t\t\t\tstatistics.userLanguages = total;\n\t\t\t}),\n\t\t);\n\n\t\t// Room statistics\n\t\tstatistics.totalRooms = await Rooms.col.countDocuments({});\n\t\tstatistics.totalChannels = await Rooms.countByType('c');\n\t\tstatistics.totalPrivateGroups = await Rooms.countByType('p');\n\t\tstatistics.totalDirect = await Rooms.countByType('d');\n\t\tstatistics.totalLivechat = await Rooms.countByType('l');\n\t\tstatistics.totalDiscussions = await Rooms.countDiscussions();\n\t\tstatistics.totalThreads = await Messages.countThreads();\n\n\t\t// livechat visitors\n\t\tstatistics.totalLivechatVisitors = await LivechatVisitors.estimatedDocumentCount();\n\n\t\t// livechat agents\n\t\tstatistics.totalLivechatAgents = await Users.countAgents();\n\t\tstatistics.totalLivechatManagers = await Users.countDocuments({ roles: 'livechat-manager' });\n\n\t\t// livechat enabled\n\t\tstatistics.livechatEnabled = settings.get('Livechat_enabled');\n\n\t\t// Count and types of omnichannel rooms\n\t\tstatsPms.push(\n\t\t\tRooms.allRoomSourcesCount()\n\t\t\t\t.toArray()\n\t\t\t\t.then((roomSources) => {\n\t\t\t\t\tstatistics.omnichannelSources = roomSources.map(({ _id: { id, alias, type }, count }) => ({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\talias,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t}));\n\t\t\t\t}),\n\t\t);\n\n\t\t// Number of livechat rooms with department\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.countLivechatRoomsWithDepartment().then((count) => {\n\t\t\t\tstatistics.totalLivechatRoomsWithDepartment = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Number of departments\n\t\tstatsPms.push(\n\t\t\tLivechatDepartment.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.departments = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Number of archived departments\n\t\tstatsPms.push(\n\t\t\tLivechatDepartment.countArchived().then((count) => {\n\t\t\t\tstatistics.archivedDepartments = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Workspace allows dpeartment removal\n\t\tstatistics.isDepartmentRemovalEnabled = settings.get('Omnichannel_enable_department_removal');\n\n\t\t// Number of triggers\n\t\tstatsPms.push(\n\t\t\tLivechatTrigger.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.totalTriggers = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Number of custom fields\n\t\tstatsPms.push((statistics.totalCustomFields = await LivechatCustomField.countDocuments({})));\n\n\t\t// Number of public custom fields\n\t\tstatsPms.push((statistics.totalLivechatPublicCustomFields = await LivechatCustomField.countDocuments({ public: true })));\n\n\t\t// Livechat Automatic forwarding feature enabled\n\t\tstatistics.livechatAutomaticForwardingUnansweredChats = settings.get<number>('Livechat_auto_transfer_chat_timeout') !== 0;\n\n\t\t// Type of routing algorithm used on omnichannel\n\t\tstatistics.routingAlgorithm = settings.get('Livechat_Routing_Method') || '';\n\n\t\t// is on-hold active\n\t\tstatistics.onHoldEnabled = settings.get('Livechat_allow_manual_on_hold');\n\n\t\t// Number of Email Inboxes\n\t\tstatsPms.push(\n\t\t\tEmailInbox.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.emailInboxes = count;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tLivechatBusinessHours.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.BusinessHours = {\n\t\t\t\t\t// Number of Business Hours\n\t\t\t\t\ttotal: count,\n\t\t\t\t\t// Business Hours strategy\n\t\t\t\t\tstrategy: settings.get('Livechat_enable_business_hours') || '',\n\t\t\t\t};\n\t\t\t}),\n\t\t);\n\n\t\t// Type of routing algorithm used on omnichannel\n\t\tstatistics.routingAlgorithm = settings.get('Livechat_Routing_Method');\n\n\t\t// is on-hold active\n\t\tstatistics.onHoldEnabled = settings.get('Livechat_allow_manual_on_hold');\n\n\t\t// Last-Chatted Agent Preferred (enabled/disabled)\n\t\tstatistics.lastChattedAgentPreferred = settings.get('Livechat_last_chatted_agent_routing');\n\n\t\t// Assign new conversations to the contact manager (enabled/disabled)\n\t\tstatistics.assignNewConversationsToContactManager = settings.get('Omnichannel_contact_manager_routing');\n\n\t\t// How to handle Visitor Abandonment setting\n\t\tstatistics.visitorAbandonment = settings.get('Livechat_abandoned_rooms_action');\n\n\t\t// Amount of chats placed on hold\n\t\tstatsPms.push(\n\t\t\tMessages.countRoomsWithMessageType('omnichannel_placed_chat_on_hold', { readPreference }).then((total) => {\n\t\t\t\tstatistics.chatsOnHold = total;\n\t\t\t}),\n\t\t);\n\n\t\t// VoIP Enabled\n\t\tstatistics.voipEnabled = settings.get('VoIP_Enabled');\n\n\t\t// Amount of VoIP Calls\n\t\tstatsPms.push(\n\t\t\tRooms.countByType('v').then((count) => {\n\t\t\t\tstatistics.voipCalls = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Amount of VoIP Extensions connected\n\t\tstatsPms.push(\n\t\t\tUsers.col.countDocuments({ extension: { $exists: true } }).then((count) => {\n\t\t\t\tstatistics.voipExtensions = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Amount of Calls that ended properly\n\t\tstatsPms.push(\n\t\t\tMessages.countByType('voip-call-wrapup', { readPreference }).then((count) => {\n\t\t\t\tstatistics.voipSuccessfulCalls = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Amount of Calls that ended with an error\n\t\tstatsPms.push(\n\t\t\tMessages.countByType('voip-call-ended-unexpectedly', { readPreference }).then((count) => {\n\t\t\t\tstatistics.voipErrorCalls = count;\n\t\t\t}),\n\t\t);\n\t\t// Amount of Calls that were put on hold\n\t\tstatsPms.push(\n\t\t\tMessages.countRoomsWithMessageType('voip-call-on-hold', { readPreference }).then((count) => {\n\t\t\t\tstatistics.voipOnHoldCalls = count;\n\t\t\t}),\n\t\t);\n\n\t\tconst defaultValue = { contactsCount: 0, conversationsCount: 0, sources: [] };\n\t\tconst billablePeriod = moment.utc().format('YYYY-MM');\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.getMACStatisticsForPeriod(billablePeriod).then(([result]) => {\n\t\t\t\tstatistics.omnichannelContactsBySource = result || defaultValue;\n\t\t\t}),\n\t\t);\n\n\t\tconst monthAgo = moment.utc().subtract(30, 'days').toDate();\n\t\tconst today = moment.utc().toDate();\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.getMACStatisticsBetweenDates(monthAgo, today).then(([result]) => {\n\t\t\t\tstatistics.uniqueContactsOfLastMonth = result || defaultValue;\n\t\t\t}),\n\t\t);\n\n\t\tconst weekAgo = moment.utc().subtract(7, 'days').toDate();\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.getMACStatisticsBetweenDates(weekAgo, today).then(([result]) => {\n\t\t\t\tstatistics.uniqueContactsOfLastWeek = result || defaultValue;\n\t\t\t}),\n\t\t);\n\n\t\tconst yesterday = moment.utc().subtract(1, 'days').toDate();\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.getMACStatisticsBetweenDates(yesterday, today).then(([result]) => {\n\t\t\t\tstatistics.uniqueContactsOfYesterday = result || defaultValue;\n\t\t\t}),\n\t\t);\n\n\t\t// Message statistics\n\t\tconst channels = await Rooms.findByType('c', { projection: { msgs: 1, prid: 1 } }).toArray();\n\t\tconst totalChannelDiscussionsMessages = await channels.reduce(function _countChannelDiscussionsMessages(num: number, room: IRoom) {\n\t\t\treturn num + (room.prid ? room.msgs : 0);\n\t\t}, 0);\n\t\tstatistics.totalChannelMessages =\n\t\t\t(await channels.reduce(function _countChannelMessages(num: number, room: IRoom) {\n\t\t\t\treturn num + room.msgs;\n\t\t\t}, 0)) - totalChannelDiscussionsMessages;\n\n\t\tconst privateGroups = await Rooms.findByType('p', { projection: { msgs: 1, prid: 1 } }).toArray();\n\t\tconst totalPrivateGroupsDiscussionsMessages = await privateGroups.reduce(function _countPrivateGroupsDiscussionsMessages(\n\t\t\tnum: number,\n\t\t\troom: IRoom,\n\t\t) {\n\t\t\treturn num + (room.prid ? room.msgs : 0);\n\t\t}, 0);\n\t\tstatistics.totalPrivateGroupMessages =\n\t\t\t(await privateGroups.reduce(function _countPrivateGroupMessages(num: number, room: IRoom) {\n\t\t\t\treturn num + room.msgs;\n\t\t\t}, 0)) - totalPrivateGroupsDiscussionsMessages;\n\n\t\tstatistics.totalDiscussionsMessages = totalPrivateGroupsDiscussionsMessages + totalChannelDiscussionsMessages;\n\n\t\tstatistics.totalDirectMessages = (await Rooms.findByType('d', { projection: { msgs: 1 } }).toArray()).reduce(\n\t\t\tfunction _countDirectMessages(num: number, room: IRoom) {\n\t\t\t\treturn num + room.msgs;\n\t\t\t},\n\t\t\t0,\n\t\t);\n\t\tstatistics.totalLivechatMessages = (await Rooms.findByType('l', { projection: { msgs: 1 } }).toArray()).reduce(\n\t\t\tfunction _countLivechatMessages(num: number, room: IRoom) {\n\t\t\t\treturn num + room.msgs;\n\t\t\t},\n\t\t\t0,\n\t\t);\n\t\tstatistics.totalMessages =\n\t\t\tstatistics.totalChannelMessages +\n\t\t\tstatistics.totalPrivateGroupMessages +\n\t\t\tstatistics.totalDiscussionsMessages +\n\t\t\tstatistics.totalDirectMessages +\n\t\t\tstatistics.totalLivechatMessages;\n\n\t\t// Federation statistics\n\t\tstatsPms.push(\n\t\t\tfederationGetStatistics().then((federationOverviewData) => {\n\t\t\t\tstatistics.federatedServers = federationOverviewData.numberOfServers;\n\t\t\t\tstatistics.federatedUsers = federationOverviewData.numberOfFederatedUsers;\n\t\t\t}),\n\t\t);\n\n\t\tstatistics.lastLogin = (await Users.getLastLogin())?.toString() || '';\n\t\tstatistics.lastMessageSentAt = await Messages.getLastTimestamp();\n\t\tstatistics.lastSeenSubscription = (await Subscriptions.getLastSeen())?.toString() || '';\n\n\t\tstatistics.os = {\n\t\t\ttype: os.type(),\n\t\t\tplatform: os.platform(),\n\t\t\tarch: os.arch(),\n\t\t\trelease: os.release(),\n\t\t\tuptime: os.uptime(),\n\t\t\tloadavg: os.loadavg(),\n\t\t\ttotalmem: os.totalmem(),\n\t\t\tfreemem: os.freemem(),\n\t\t\tcpus: os.cpus(),\n\t\t};\n\n\t\tstatistics.process = {\n\t\t\tnodeVersion: process.version,\n\t\t\tpid: process.pid,\n\t\t\tuptime: process.uptime(),\n\t\t};\n\n\t\tstatistics.deploy = {\n\t\t\tmethod: process.env.DEPLOY_METHOD || 'tar',\n\t\t\tplatform: process.env.DEPLOY_PLATFORM || 'selfinstall',\n\t\t};\n\n\t\tstatistics.readReceiptsEnabled = settings.get('Message_Read_Receipt_Enabled');\n\t\tstatistics.readReceiptsDetailed = settings.get('Message_Read_Receipt_Store_Users');\n\n\t\tstatistics.enterpriseReady = true;\n\t\tstatsPms.push(\n\t\t\tUploads.col.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.uploadsTotal = count;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tUploads.col\n\t\t\t\t.aggregate(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$group: { _id: 'total', total: { $sum: '$size' } },\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t{ readPreference },\n\t\t\t\t)\n\t\t\t\t.toArray()\n\t\t\t\t.then((agg) => {\n\t\t\t\t\tconst [result] = agg;\n\t\t\t\t\tstatistics.uploadsTotalSize = result ? (result as any).total : 0;\n\t\t\t\t}),\n\t\t);\n\n\t\tstatistics.migration = await getControl();\n\t\tstatsPms.push(\n\t\t\tInstanceStatus.col.countDocuments({ _updatedAt: { $gt: new Date(Date.now() - process.uptime() * 1000 - 2000) } }).then((count) => {\n\t\t\t\tstatistics.instanceCount = count;\n\t\t\t}),\n\t\t);\n\n\t\tconst { oplogEnabled, mongoVersion, mongoStorageEngine } = await getMongoInfo();\n\t\tstatistics.msEnabled = isRunningMs();\n\t\tstatistics.oplogEnabled = oplogEnabled;\n\t\tstatistics.mongoVersion = mongoVersion;\n\t\tstatistics.mongoStorageEngine = mongoStorageEngine || '';\n\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueUsersOfYesterday().then((result) => {\n\t\t\t\tstatistics.uniqueUsersOfYesterday = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueUsersOfLastWeek().then((result) => {\n\t\t\t\tstatistics.uniqueUsersOfLastWeek = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueUsersOfLastMonth().then((result) => {\n\t\t\t\tstatistics.uniqueUsersOfLastMonth = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueDevicesOfYesterday().then((result) => {\n\t\t\t\tstatistics.uniqueDevicesOfYesterday = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueDevicesOfLastWeek().then((result) => {\n\t\t\t\tstatistics.uniqueDevicesOfLastWeek = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueDevicesOfLastMonth().then((result) => {\n\t\t\t\tstatistics.uniqueDevicesOfLastMonth = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueOSOfYesterday().then((result) => {\n\t\t\t\tstatistics.uniqueOSOfYesterday = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueOSOfLastWeek().then((result) => {\n\t\t\t\tstatistics.uniqueOSOfLastWeek = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueOSOfLastMonth().then((result) => {\n\t\t\t\tstatistics.uniqueOSOfLastMonth = result;\n\t\t\t}),\n\t\t);\n\n\t\tstatistics.apps = await getAppsStatistics();\n\t\tstatistics.services = await getServicesStatistics();\n\t\tstatistics.importer = getImporterStatistics();\n\t\tstatistics.videoConf = await VideoConf.getStatistics();\n\n\t\t// If getSettingsStatistics() returns an error, save as empty object.\n\t\tstatsPms.push(\n\t\t\tgetSettingsStatistics().then((res) => {\n\t\t\t\tconst settingsStatisticsObject = res || {};\n\t\t\t\tstatistics.settings = settingsStatisticsObject;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tIntegrations.find(\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\t_id: 0,\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t\tenabled: 1,\n\t\t\t\t\t\tscriptEnabled: 1,\n\t\t\t\t\t},\n\t\t\t\t\treadPreference,\n\t\t\t\t},\n\t\t\t)\n\t\t\t\t.toArray()\n\t\t\t\t.then((found) => {\n\t\t\t\t\tconst integrations = found;\n\n\t\t\t\t\tstatistics.integrations = {\n\t\t\t\t\t\ttotalIntegrations: integrations.length,\n\t\t\t\t\t\ttotalIncoming: integrations.filter((integration) => integration.type === 'webhook-incoming').length,\n\t\t\t\t\t\ttotalIncomingActive: integrations.filter(\n\t\t\t\t\t\t\t(integration) => integration.enabled === true && integration.type === 'webhook-incoming',\n\t\t\t\t\t\t).length,\n\t\t\t\t\t\ttotalOutgoing: integrations.filter((integration) => integration.type === 'webhook-outgoing').length,\n\t\t\t\t\t\ttotalOutgoingActive: integrations.filter(\n\t\t\t\t\t\t\t(integration) => integration.enabled === true && integration.type === 'webhook-outgoing',\n\t\t\t\t\t\t).length,\n\t\t\t\t\t\ttotalWithScriptEnabled: integrations.filter((integration) => integration.scriptEnabled === true).length,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tNotificationQueue.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.pushQueue = count;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tgetEnterpriseStatistics().then((result) => {\n\t\t\t\tstatistics.enterprise = result;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tTeam.getStatistics().then((result) => {\n\t\t\t\tstatistics.teams = result;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(Analytics.resetSeatRequestCount());\n\n\t\t// TODO: Is that the best way to do this? maybe we should use a promise.all()\n\n\t\tstatistics.dashboardCount = settings.get('Engagement_Dashboard_Load_Count');\n\t\tstatistics.messageAuditApply = settings.get('Message_Auditing_Apply_Count');\n\t\tstatistics.messageAuditLoad = settings.get('Message_Auditing_Panel_Load_Count');\n\t\tstatistics.joinJitsiButton = settings.get('Jitsi_Click_To_Join_Count');\n\t\tstatistics.slashCommandsJitsi = settings.get('Jitsi_Start_SlashCommands_Count');\n\t\tstatistics.totalOTRRooms = await Rooms.countByCreatedOTR({ readPreference });\n\t\tstatistics.totalOTR = settings.get('OTR_Count');\n\t\tstatistics.totalBroadcastRooms = await Rooms.countByBroadcast({ readPreference });\n\t\tstatistics.totalTriggeredEmails = settings.get('Triggered_Emails_Count');\n\t\tstatistics.totalRoomsWithStarred = await Messages.countRoomsWithStarredMessages({ readPreference });\n\t\tstatistics.totalRoomsWithPinned = await Messages.countRoomsWithPinnedMessages({ readPreference });\n\t\tstatistics.totalUserTOTP = await Users.countActiveUsersTOTPEnable({ readPreference });\n\t\tstatistics.totalUserEmail2fa = await Users.countActiveUsersEmail2faEnable({ readPreference });\n\t\tstatistics.totalPinned = await Messages.countPinned({ readPreference });\n\t\tstatistics.totalStarred = await Messages.countStarred({ readPreference });\n\t\tstatistics.totalLinkInvitation = await Invites.estimatedDocumentCount();\n\t\tstatistics.totalLinkInvitationUses = await Invites.countUses();\n\t\tstatistics.totalEmailInvitation = settings.get('Invitation_Email_Count');\n\t\tstatistics.totalE2ERooms = await Rooms.countByE2E({ readPreference });\n\t\tstatistics.logoChange = Object.keys(settings.get('Assets_logo') || {}).includes('url');\n\t\tstatistics.showHomeButton = settings.get('Layout_Show_Home_Button');\n\t\tstatistics.totalEncryptedMessages = await Messages.countByType('e2e', { readPreference });\n\t\tstatistics.totalManuallyAddedUsers = settings.get('Manual_Entry_User_Count');\n\t\tstatistics.totalSubscriptionRoles = await RolesRaw.countByScope('Subscriptions', { readPreference });\n\t\tstatistics.totalUserRoles = await RolesRaw.countByScope('Users', { readPreference });\n\t\tstatistics.totalCustomRoles = await RolesRaw.countCustomRoles({ readPreference });\n\t\tstatistics.totalWebRTCCalls = settings.get('WebRTC_Calls_Count');\n\t\tstatistics.uncaughtExceptionsCount = settings.get('Uncaught_Exceptions_Count');\n\n\t\tconst defaultGateway = (await Settings.findOneById('Push_gateway', { projection: { packageValue: 1 } }))?.packageValue;\n\n\t\t// Push notification stats\n\t\t// one bit for each of the following:\n\t\tconst pushEnabled = settings.get('Push_enable') ? 1 : 0;\n\t\tconst pushGatewayEnabled = settings.get('Push_enable_gateway') ? 2 : 0;\n\t\tconst pushGatewayChanged = settings.get('Push_gateway') !== defaultGateway ? 4 : 0;\n\n\t\tstatistics.push = pushEnabled | pushGatewayEnabled | pushGatewayChanged;\n\t\tstatistics.pushSecured = settings.get<boolean>('Push_request_content_from_server');\n\n\t\tconst defaultHomeTitle = (await Settings.findOneById('Layout_Home_Title'))?.packageValue;\n\t\tstatistics.homeTitleChanged = settings.get('Layout_Home_Title') !== defaultHomeTitle;\n\n\t\tconst defaultHomeBody = (await Settings.findOneById('Layout_Home_Body'))?.packageValue;\n\t\tstatistics.homeBodyChanged = settings.get('Layout_Home_Body') !== defaultHomeBody;\n\n\t\tconst defaultCustomCSS = (await Settings.findOneById('theme-custom-css'))?.packageValue;\n\t\tstatistics.customCSSChanged = settings.get('theme-custom-css') !== defaultCustomCSS;\n\n\t\tconst defaultOnLogoutCustomScript = (await Settings.findOneById('Custom_Script_On_Logout'))?.packageValue;\n\t\tstatistics.onLogoutCustomScriptChanged = settings.get('Custom_Script_On_Logout') !== defaultOnLogoutCustomScript;\n\n\t\tconst defaultLoggedOutCustomScript = (await Settings.findOneById('Custom_Script_Logged_Out'))?.packageValue;\n\t\tstatistics.loggedOutCustomScriptChanged = settings.get('Custom_Script_Logged_Out') !== defaultLoggedOutCustomScript;\n\n\t\tconst defaultLoggedInCustomScript = (await Settings.findOneById('Custom_Script_Logged_In'))?.packageValue;\n\t\tstatistics.loggedInCustomScriptChanged = settings.get('Custom_Script_Logged_In') !== defaultLoggedInCustomScript;\n\n\t\ttry {\n\t\t\tstatistics.dailyPeakConnections = await Presence.getPeakConnections(true);\n\t\t} catch {\n\t\t\tstatistics.dailyPeakConnections = 0;\n\t\t}\n\n\t\tconst peak = await Statistics.findMonthlyPeakConnections();\n\t\tstatistics.maxMonthlyPeakConnections = Math.max(statistics.dailyPeakConnections, peak?.dailyPeakConnections || 0);\n\n\t\tstatistics.matrixFederation = await getMatrixFederationStatistics();\n\n\t\t// Omnichannel call stats\n\t\tstatistics.webRTCEnabled = settings.get('WebRTC_Enabled');\n\t\tstatistics.webRTCEnabledForOmnichannel = settings.get('Omnichannel_call_provider') === 'WebRTC';\n\t\tstatistics.omnichannelWebRTCCalls = await Rooms.findCountOfRoomsWithActiveCalls();\n\n\t\tawait Promise.all(statsPms).catch(log);\n\n\t\treturn statistics;\n\t},\n\tasync save(): Promise<IStats> {\n\t\tconst rcStatistics = await statistics.get();\n\t\trcStatistics.createdAt = new Date();\n\t\tconst { insertedId } = await Statistics.insertOne(rcStatistics);\n\t\trcStatistics._id = insertedId;\n\n\t\treturn rcStatistics;\n\t},\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/statistics/server/lib/statistics.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/statistics/server/lib/statistics.ts","inputSourceMap":{"version":3,"file":"app/statistics/server/lib/statistics.ts","sourceRoot":"","sources":["app/statistics/server/lib/statistics.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAE,MAAM,IAAI,CAAC;AAEpB,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAElF,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AACvD,OAAO,EACN,iBAAiB,EACjB,KAAK,EACL,UAAU,EACV,QAAQ,EACR,YAAY,EACZ,OAAO,EACP,OAAO,EACP,kBAAkB,EAClB,gBAAgB,EAChB,UAAU,EACV,qBAAqB,EACrB,QAAQ,EACR,KAAK,IAAI,QAAQ,EACjB,cAAc,EACd,QAAQ,EACR,eAAe,EACf,mBAAmB,EACnB,aAAa,EACb,KAAK,EACL,aAAa,GACb,MAAM,qBAAqB,CAAC;AAC7B,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAC9C,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,sBAAsB,EAAE,MAAM,oDAAoD,CAAC;AAC5F,OAAO,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAC;AACjE,OAAO,EAAE,UAAU,EAAE,MAAM,mCAAmC,CAAC;AAC/D,OAAO,EAAE,qBAAqB,EAAE,MAAM,yDAAyD,CAAC;AAChG,OAAO,EAAE,6BAA6B,EAAE,MAAM,uFAAuF,CAAC;AACtI,OAAO,EAAE,aAAa,IAAI,uBAAuB,EAAE,MAAM,gDAAgD,CAAC;AAC1G,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,IAAI,EAAE,MAAM,gCAAgC,CAAC;AACtD,OAAO,EAAE,YAAY,EAAE,MAAM,8CAA8C,CAAC;AAC5E,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AACxD,OAAO,EAAE,aAAa,IAAI,uBAAuB,EAAE,MAAM,mBAAmB,CAAC;AAC7E,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAChE,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAEhE,MAAM,gBAAgB,GAAG,KAAK,EAAE,UAAkB,EAAsC,EAAE;IACzF,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,gBAAgB,EAAE,CAAC;IAE9C,MAAM,SAAS,GAA8B;QAC5C,IAAI,EAAE,UAAU;KAChB,CAAC;IAEF,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAkC,EAAE,EAAE;QACjE,IAAI,CAAC,GAAG,EAAE,CAAC;YACV,OAAO;QACR,CAAC;QACD,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACvB,SAAS,CAAC,IAAI,IAAI,KAAK,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,OAAO,SAAS,CAAC;AAClB,CAAC,CAAC;AAEF,MAAM,EAAE,EAAE,EAAE,GAAG,cAAc,CAAC,6BAA6B,EAAE,CAAC,KAAK,CAAC;AAEpE,MAAM,CAAC,MAAM,UAAU,GAAG;IACzB,GAAG,EAAE,KAAK,IAAqB,EAAE;QAChC,MAAM,cAAc,GAAG,sBAAsB,CAAC,EAAE,CAAC,CAAC;QAElD,MAAM,UAAU,GAAG,EAAY,CAAC;QAChC,MAAM,QAAQ,GAAG,EAAE,CAAC;QAEpB,eAAe;QACf,MAAM,CAAC,gBAAgB,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,cAAc,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YAC3G,QAAQ,CAAC,GAAG,CAAS,mBAAmB,CAAC;YACzC,QAAQ,CAAC,GAAG,CAAS,UAAU,CAAC;YAChC,QAAQ,CAAC,GAAG,CAAS,MAAM,CAAC;YAC5B,QAAQ,CAAC,GAAG,CAAS,SAAS,CAAC;YAC/B,QAAQ,CAAC,GAAG,CAAS,UAAU,CAAC;YAChC,QAAQ,CAAC,GAAG,CAAS,aAAa,CAAC;YACnC,QAAQ,CAAC,GAAG,CAAU,iBAAiB,CAAC;SACxC,CAAC,CAAC;QAEH,UAAU,CAAC,MAAM,GAAG;YACnB,gBAAgB;YAChB,QAAQ;YACR,IAAI;YACJ,OAAO;YACP,QAAQ;YACR,UAAU;YACV,cAAc;SACd,CAAC;QAEF,UAAU;QACV,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,OAAO,CAA8B,UAAU,EAAE,EAAE,UAAU,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACnH,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,QAAQ,EAAE,CAAC;YACd,UAAU,CAAC,WAAW,GAAG,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC3D,CAAC;QAED,UAAU,CAAC,yBAAyB,GAAG,QAAQ,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QACnF,UAAU,CAAC,6BAA6B,GAAG,QAAQ,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAE3F,IAAI,IAAI,EAAE,CAAC;YACV,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAClC,UAAU,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YAC1B,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACjC,CAAC;QAED,kBAAkB;QAClB,UAAU,CAAC,UAAU,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAC3D,UAAU,CAAC,WAAW,GAAG,MAAM,KAAK,CAAC,uBAAuB,EAAE,CAAC;QAC/D,UAAU,CAAC,YAAY,GAAG,MAAM,KAAK,CAAC,wBAAwB,EAAE,CAAC;QACjE,UAAU,CAAC,cAAc,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAC9E,UAAU,CAAC,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;QACtE,UAAU,CAAC,WAAW,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;QACvF,UAAU,CAAC,SAAS,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QACnF,UAAU,CAAC,SAAS,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QACnF,UAAU,CAAC,mBAAmB,GAAG,UAAU,CAAC,WAAW,GAAG,UAAU,CAAC,SAAS,CAAC;QAC/E,UAAU,CAAC,YAAY,GAAG,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,WAAW,GAAG,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;QACvH,QAAQ,CAAC,IAAI,CACZ,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACtD,UAAU,CAAC,aAAa,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC,CACF,CAAC;QAEF,kBAAkB;QAClB,UAAU,CAAC,UAAU,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAC3D,UAAU,CAAC,aAAa,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACxD,UAAU,CAAC,kBAAkB,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC7D,UAAU,CAAC,WAAW,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACtD,UAAU,CAAC,aAAa,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACxD,UAAU,CAAC,gBAAgB,GAAG,MAAM,KAAK,CAAC,gBAAgB,EAAE,CAAC;QAC7D,UAAU,CAAC,YAAY,GAAG,MAAM,QAAQ,CAAC,YAAY,EAAE,CAAC;QAExD,oBAAoB;QACpB,UAAU,CAAC,qBAAqB,GAAG,MAAM,gBAAgB,CAAC,sBAAsB,EAAE,CAAC;QAEnF,kBAAkB;QAClB,UAAU,CAAC,mBAAmB,GAAG,MAAM,KAAK,CAAC,WAAW,EAAE,CAAC;QAC3D,UAAU,CAAC,qBAAqB,GAAG,MAAM,KAAK,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAE7F,mBAAmB;QACnB,UAAU,CAAC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAE9D,uCAAuC;QACvC,QAAQ,CAAC,IAAI,CACZ,KAAK,CAAC,mBAAmB,EAAE;aACzB,OAAO,EAAE;aACT,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;YACrB,UAAU,CAAC,kBAAkB,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;gBACzF,EAAE;gBACF,KAAK;gBACL,IAAI;gBACJ,KAAK;aACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;QAEF,2CAA2C;QAC3C,QAAQ,CAAC,IAAI,CACZ,aAAa,CAAC,gCAAgC,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAC/D,UAAU,CAAC,gCAAgC,GAAG,KAAK,CAAC;QACrD,CAAC,CAAC,CACF,CAAC;QAEF,wBAAwB;QACxB,QAAQ,CAAC,IAAI,CACZ,kBAAkB,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAC1D,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CACF,CAAC;QAEF,iCAAiC;QACjC,QAAQ,CAAC,IAAI,CACZ,kBAAkB,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACjD,UAAU,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACxC,CAAC,CAAC,CACF,CAAC;QAEF,sCAAsC;QACtC,UAAU,CAAC,0BAA0B,GAAG,QAAQ,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;QAE9F,qBAAqB;QACrB,QAAQ,CAAC,IAAI,CACZ,eAAe,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACvD,UAAU,CAAC,aAAa,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC,CACF,CAAC;QAEF,0BAA0B;QAC1B,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,iBAAiB,GAAG,MAAM,mBAAmB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAE7F,iCAAiC;QACjC,QAAQ,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,+BAA+B,GAAG,MAAM,mBAAmB,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QAEzH,gDAAgD;QAChD,UAAU,CAAC,0CAA0C,GAAG,QAAQ,CAAC,GAAG,CAAS,qCAAqC,CAAC,KAAK,CAAC,CAAC;QAE1H,gDAAgD;QAChD,UAAU,CAAC,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,yBAAyB,CAAC,IAAI,EAAE,CAAC;QAE5E,oBAAoB;QACpB,UAAU,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAEzE,0BAA0B;QAC1B,QAAQ,CAAC,IAAI,CACZ,UAAU,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAClD,UAAU,CAAC,YAAY,GAAG,KAAK,CAAC;QACjC,CAAC,CAAC,CACF,CAAC;QAEF,QAAQ,CAAC,IAAI,CACZ,qBAAqB,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAC7D,UAAU,CAAC,aAAa,GAAG;gBAC1B,2BAA2B;gBAC3B,KAAK,EAAE,KAAK;gBACZ,0BAA0B;gBAC1B,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,gCAAgC,CAAC,IAAI,EAAE;aAC9D,CAAC;QACH,CAAC,CAAC,CACF,CAAC;QAEF,gDAAgD;QAChD,UAAU,CAAC,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QAEtE,oBAAoB;QACpB,UAAU,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAEzE,kDAAkD;QAClD,UAAU,CAAC,yBAAyB,GAAG,QAAQ,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;QAE3F,qEAAqE;QACrE,UAAU,CAAC,sCAAsC,GAAG,QAAQ,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;QAExG,4CAA4C;QAC5C,UAAU,CAAC,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAEhF,iCAAiC;QACjC,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,yBAAyB,CAAC,iCAAiC,EAAE,EAAE,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACxG,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CACF,CAAC;QAEF,eAAe;QACf,UAAU,CAAC,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAEtD,uBAAuB;QACvB,QAAQ,CAAC,IAAI,CACZ,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACrC,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CACF,CAAC;QAEF,sCAAsC;QACtC,QAAQ,CAAC,IAAI,CACZ,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACzE,UAAU,CAAC,cAAc,GAAG,KAAK,CAAC;QACnC,CAAC,CAAC,CACF,CAAC;QAEF,sCAAsC;QACtC,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,WAAW,CAAC,kBAAkB,EAAE,EAAE,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAC3E,UAAU,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACxC,CAAC,CAAC,CACF,CAAC;QAEF,2CAA2C;QAC3C,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,WAAW,CAAC,8BAA8B,EAAE,EAAE,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACvF,UAAU,CAAC,cAAc,GAAG,KAAK,CAAC;QACnC,CAAC,CAAC,CACF,CAAC;QACF,wCAAwC;QACxC,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,yBAAyB,CAAC,mBAAmB,EAAE,EAAE,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAC1F,UAAU,CAAC,eAAe,GAAG,KAAK,CAAC;QACpC,CAAC,CAAC,CACF,CAAC;QAEF,MAAM,YAAY,GAAG,EAAE,aAAa,EAAE,CAAC,EAAE,kBAAkB,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QAC9E,MAAM,cAAc,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACtD,QAAQ,CAAC,IAAI,CACZ,aAAa,CAAC,yBAAyB,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE;YACzE,UAAU,CAAC,2BAA2B,GAAG,MAAM,IAAI,YAAY,CAAC;QACjE,CAAC,CAAC,CACF,CAAC;QAEF,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;QAC5D,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;QACpC,QAAQ,CAAC,IAAI,CACZ,aAAa,CAAC,4BAA4B,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE;YAC7E,UAAU,CAAC,yBAAyB,GAAG,MAAM,IAAI,YAAY,CAAC;QAC/D,CAAC,CAAC,CACF,CAAC;QAEF,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;QAC1D,QAAQ,CAAC,IAAI,CACZ,aAAa,CAAC,4BAA4B,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE;YAC5E,UAAU,CAAC,wBAAwB,GAAG,MAAM,IAAI,YAAY,CAAC;QAC9D,CAAC,CAAC,CACF,CAAC;QAEF,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;QAC5D,QAAQ,CAAC,IAAI,CACZ,aAAa,CAAC,4BAA4B,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE;YAC9E,UAAU,CAAC,yBAAyB,GAAG,MAAM,IAAI,YAAY,CAAC;QAC/D,CAAC,CAAC,CACF,CAAC;QAEF,qBAAqB;QACrB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QAC7F,MAAM,+BAA+B,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC,SAAS,gCAAgC,CAAC,GAAW,EAAE,IAAW;YAC/H,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,EAAE,CAAC,CAAC,CAAC;QACN,UAAU,CAAC,oBAAoB;YAC9B,CAAC,MAAM,QAAQ,CAAC,MAAM,CAAC,SAAS,qBAAqB,CAAC,GAAW,EAAE,IAAW;gBAC7E,OAAO,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;YACxB,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,+BAA+B,CAAC;QAE1C,MAAM,aAAa,GAAG,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QAClG,MAAM,qCAAqC,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC,SAAS,sCAAsC,CACvH,GAAW,EACX,IAAW;YAEX,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,EAAE,CAAC,CAAC,CAAC;QACN,UAAU,CAAC,yBAAyB;YACnC,CAAC,MAAM,aAAa,CAAC,MAAM,CAAC,SAAS,0BAA0B,CAAC,GAAW,EAAE,IAAW;gBACvF,OAAO,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;YACxB,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,qCAAqC,CAAC;QAEhD,UAAU,CAAC,wBAAwB,GAAG,qCAAqC,GAAG,+BAA+B,CAAC;QAE9G,UAAU,CAAC,mBAAmB,GAAG,CAAC,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAC3G,SAAS,oBAAoB,CAAC,GAAW,EAAE,IAAW;YACrD,OAAO,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC,EACD,CAAC,CACD,CAAC;QACF,UAAU,CAAC,qBAAqB,GAAG,CAAC,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAC7G,SAAS,sBAAsB,CAAC,GAAW,EAAE,IAAW;YACvD,OAAO,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC,EACD,CAAC,CACD,CAAC;QACF,UAAU,CAAC,aAAa;YACvB,UAAU,CAAC,oBAAoB;gBAC/B,UAAU,CAAC,yBAAyB;gBACpC,UAAU,CAAC,wBAAwB;gBACnC,UAAU,CAAC,mBAAmB;gBAC9B,UAAU,CAAC,qBAAqB,CAAC;QAElC,wBAAwB;QACxB,QAAQ,CAAC,IAAI,CACZ,uBAAuB,EAAE,CAAC,IAAI,CAAC,CAAC,sBAAsB,EAAE,EAAE;YACzD,UAAU,CAAC,gBAAgB,GAAG,sBAAsB,CAAC,eAAe,CAAC;YACrE,UAAU,CAAC,cAAc,GAAG,sBAAsB,CAAC,sBAAsB,CAAC;QAC3E,CAAC,CAAC,CACF,CAAC;QAEF,UAAU,CAAC,SAAS,GAAG,CAAC,MAAM,KAAK,CAAC,YAAY,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;QACtE,UAAU,CAAC,iBAAiB,GAAG,MAAM,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QACjE,UAAU,CAAC,oBAAoB,GAAG,CAAC,MAAM,aAAa,CAAC,WAAW,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;QAExF,UAAU,CAAC,EAAE,GAAG;YACf,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE;YACf,QAAQ,EAAE,EAAE,CAAC,QAAQ,EAAE;YACvB,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE;YACf,OAAO,EAAE,EAAE,CAAC,OAAO,EAAE;YACrB,MAAM,EAAE,EAAE,CAAC,MAAM,EAAE;YACnB,OAAO,EAAE,EAAE,CAAC,OAAO,EAAE;YACrB,QAAQ,EAAE,EAAE,CAAC,QAAQ,EAAE;YACvB,OAAO,EAAE,EAAE,CAAC,OAAO,EAAE;YACrB,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE;SACf,CAAC;QAEF,UAAU,CAAC,OAAO,GAAG;YACpB,WAAW,EAAE,OAAO,CAAC,OAAO;YAC5B,GAAG,EAAE,OAAO,CAAC,GAAG;YAChB,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE;SACxB,CAAC;QAEF,UAAU,CAAC,MAAM,GAAG;YACnB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,KAAK;YAC1C,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,aAAa;SACtD,CAAC;QAEF,UAAU,CAAC,mBAAmB,GAAG,QAAQ,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC9E,UAAU,CAAC,oBAAoB,GAAG,QAAQ,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAEnF,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC;QAClC,QAAQ,CAAC,IAAI,CACZ,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACnD,UAAU,CAAC,YAAY,GAAG,KAAK,CAAC;QACjC,CAAC,CAAC,CACF,CAAC;QACF,QAAQ,CAAC,IAAI,CACZ,OAAO,CAAC,GAAG;aACT,SAAS,CACT;YACC;gBACC,MAAM,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE;aAClD;SACD,EACD,EAAE,cAAc,EAAE,CAClB;aACA,OAAO,EAAE;aACT,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;YACrB,UAAU,CAAC,gBAAgB,GAAG,MAAM,CAAC,CAAC,CAAE,MAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,CAAC,CAAC,CACH,CAAC;QAEF,UAAU,CAAC,SAAS,GAAG,MAAM,UAAU,EAAE,CAAC;QAC1C,QAAQ,CAAC,IAAI,CACZ,cAAc,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAChI,UAAU,CAAC,aAAa,GAAG,KAAK,CAAC;QAClC,CAAC,CAAC,CACF,CAAC;QAEF,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,kBAAkB,EAAE,GAAG,MAAM,YAAY,EAAE,CAAC;QAChF,UAAU,CAAC,SAAS,GAAG,WAAW,EAAE,CAAC;QACrC,UAAU,CAAC,YAAY,GAAG,YAAY,CAAC;QACvC,UAAU,CAAC,YAAY,GAAG,YAAY,CAAC;QACvC,UAAU,CAAC,kBAAkB,GAAG,kBAAkB,IAAI,EAAE,CAAC;QAEzD,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,yBAAyB,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACpD,UAAU,CAAC,sBAAsB,GAAG,MAAM,CAAC;QAC5C,CAAC,CAAC,CACF,CAAC;QACF,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,wBAAwB,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACnD,UAAU,CAAC,qBAAqB,GAAG,MAAM,CAAC;QAC3C,CAAC,CAAC,CACF,CAAC;QACF,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,yBAAyB,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACpD,UAAU,CAAC,sBAAsB,GAAG,MAAM,CAAC;QAC5C,CAAC,CAAC,CACF,CAAC;QACF,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACtD,UAAU,CAAC,wBAAwB,GAAG,MAAM,CAAC;QAC9C,CAAC,CAAC,CACF,CAAC;QACF,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,0BAA0B,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACrD,UAAU,CAAC,uBAAuB,GAAG,MAAM,CAAC;QAC7C,CAAC,CAAC,CACF,CAAC;QACF,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACtD,UAAU,CAAC,wBAAwB,GAAG,MAAM,CAAC;QAC9C,CAAC,CAAC,CACF,CAAC;QACF,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjD,UAAU,CAAC,mBAAmB,GAAG,MAAM,CAAC;QACzC,CAAC,CAAC,CACF,CAAC;QACF,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAChD,UAAU,CAAC,kBAAkB,GAAG,MAAM,CAAC;QACxC,CAAC,CAAC,CACF,CAAC;QACF,QAAQ,CAAC,IAAI,CACZ,QAAQ,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjD,UAAU,CAAC,mBAAmB,GAAG,MAAM,CAAC;QACzC,CAAC,CAAC,CACF,CAAC;QAEF,UAAU,CAAC,IAAI,GAAG,MAAM,iBAAiB,EAAE,CAAC;QAC5C,UAAU,CAAC,QAAQ,GAAG,MAAM,qBAAqB,EAAE,CAAC;QACpD,UAAU,CAAC,QAAQ,GAAG,qBAAqB,EAAE,CAAC;QAC9C,UAAU,CAAC,SAAS,GAAG,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;QAEvD,qEAAqE;QACrE,QAAQ,CAAC,IAAI,CACZ,qBAAqB,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACpC,MAAM,wBAAwB,GAAG,GAAG,IAAI,EAAE,CAAC;YAC3C,UAAU,CAAC,QAAQ,GAAG,wBAAwB,CAAC;QAChD,CAAC,CAAC,CACF,CAAC;QAEF,QAAQ,CAAC,IAAI,CACZ,YAAY,CAAC,IAAI,CAChB,EAAE,EACF;YACC,UAAU,EAAE;gBACX,GAAG,EAAE,CAAC;gBACN,IAAI,EAAE,CAAC;gBACP,OAAO,EAAE,CAAC;gBACV,aAAa,EAAE,CAAC;aAChB;YACD,cAAc;SACd,CACD;aACC,OAAO,EAAE;aACT,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,MAAM,YAAY,GAAG,KAAK,CAAC;YAE3B,UAAU,CAAC,YAAY,GAAG;gBACzB,iBAAiB,EAAE,YAAY,CAAC,MAAM;gBACtC,aAAa,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,KAAK,kBAAkB,CAAC,CAAC,MAAM;gBACnG,mBAAmB,EAAE,YAAY,CAAC,MAAM,CACvC,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC,OAAO,KAAK,IAAI,IAAI,WAAW,CAAC,IAAI,KAAK,kBAAkB,CACxF,CAAC,MAAM;gBACR,aAAa,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,KAAK,kBAAkB,CAAC,CAAC,MAAM;gBACnG,mBAAmB,EAAE,YAAY,CAAC,MAAM,CACvC,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC,OAAO,KAAK,IAAI,IAAI,WAAW,CAAC,IAAI,KAAK,kBAAkB,CACxF,CAAC,MAAM;gBACR,sBAAsB,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,MAAM;aACvG,CAAC;QACH,CAAC,CAAC,CACH,CAAC;QAEF,QAAQ,CAAC,IAAI,CACZ,iBAAiB,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YACzD,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CACF,CAAC;QAEF,QAAQ,CAAC,IAAI,CACZ,uBAAuB,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACzC,UAAU,CAAC,UAAU,GAAG,MAAM,CAAC;QAChC,CAAC,CAAC,CACF,CAAC;QAEF,QAAQ,CAAC,IAAI,CACZ,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACpC,UAAU,CAAC,KAAK,GAAG,MAAM,CAAC;QAC3B,CAAC,CAAC,CACF,CAAC;QAEF,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC,CAAC;QAEjD,6EAA6E;QAE7E,UAAU,CAAC,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAC5E,UAAU,CAAC,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5E,UAAU,CAAC,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QAChF,UAAU,CAAC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACvE,UAAU,CAAC,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAChF,UAAU,CAAC,aAAa,GAAG,MAAM,KAAK,CAAC,iBAAiB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;QAC7E,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAChD,UAAU,CAAC,mBAAmB,GAAG,MAAM,KAAK,CAAC,gBAAgB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;QAClF,UAAU,CAAC,oBAAoB,GAAG,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACzE,UAAU,CAAC,qBAAqB,GAAG,MAAM,QAAQ,CAAC,6BAA6B,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;QACpG,UAAU,CAAC,oBAAoB,GAAG,MAAM,QAAQ,CAAC,4BAA4B,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;QAClG,UAAU,CAAC,aAAa,GAAG,MAAM,KAAK,CAAC,0BAA0B,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;QACtF,UAAU,CAAC,iBAAiB,GAAG,MAAM,KAAK,CAAC,8BAA8B,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;QAC9F,UAAU,CAAC,WAAW,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;QACxE,UAAU,CAAC,YAAY,GAAG,MAAM,QAAQ,CAAC,YAAY,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;QAC1E,UAAU,CAAC,mBAAmB,GAAG,MAAM,OAAO,CAAC,sBAAsB,EAAE,CAAC;QACxE,UAAU,CAAC,uBAAuB,GAAG,MAAM,OAAO,CAAC,SAAS,EAAE,CAAC;QAC/D,UAAU,CAAC,oBAAoB,GAAG,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACzE,UAAU,CAAC,aAAa,GAAG,MAAM,KAAK,CAAC,UAAU,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;QACtE,UAAU,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACvF,UAAU,CAAC,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACpE,UAAU,CAAC,sBAAsB,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE,cAAc,EAAE,CAAC,CAAC;QAC1F,UAAU,CAAC,uBAAuB,GAAG,QAAQ,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QAC7E,UAAU,CAAC,sBAAsB,GAAG,MAAM,QAAQ,CAAC,YAAY,CAAC,eAAe,EAAE,EAAE,cAAc,EAAE,CAAC,CAAC;QACrG,UAAU,CAAC,cAAc,GAAG,MAAM,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,cAAc,EAAE,CAAC,CAAC;QACrF,UAAU,CAAC,gBAAgB,GAAG,MAAM,QAAQ,CAAC,gBAAgB,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;QAClF,UAAU,CAAC,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACjE,UAAU,CAAC,uBAAuB,GAAG,QAAQ,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAE/E,MAAM,cAAc,GAAG,CAAC,MAAM,QAAQ,CAAC,WAAW,CAAC,cAAc,EAAE,EAAE,UAAU,EAAE,EAAE,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,YAAY,CAAC;QAEvH,0BAA0B;QAC1B,qCAAqC;QACrC,MAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD,MAAM,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvE,MAAM,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,KAAK,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnF,UAAU,CAAC,IAAI,GAAG,WAAW,GAAG,kBAAkB,GAAG,kBAAkB,CAAC;QACxE,UAAU,CAAC,WAAW,GAAG,QAAQ,CAAC,GAAG,CAAU,kCAAkC,CAAC,CAAC;QAEnF,MAAM,gBAAgB,GAAG,CAAC,MAAM,QAAQ,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,EAAE,YAAY,CAAC;QACzF,UAAU,CAAC,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,gBAAgB,CAAC;QAErF,MAAM,eAAe,GAAG,CAAC,MAAM,QAAQ,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,EAAE,YAAY,CAAC;QACvF,UAAU,CAAC,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,KAAK,eAAe,CAAC;QAElF,MAAM,gBAAgB,GAAG,CAAC,MAAM,QAAQ,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,EAAE,YAAY,CAAC;QACxF,UAAU,CAAC,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,KAAK,gBAAgB,CAAC;QAEpF,MAAM,2BAA2B,GAAG,CAAC,MAAM,QAAQ,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC,EAAE,YAAY,CAAC;QAC1G,UAAU,CAAC,2BAA2B,GAAG,QAAQ,CAAC,GAAG,CAAC,yBAAyB,CAAC,KAAK,2BAA2B,CAAC;QAEjH,MAAM,4BAA4B,GAAG,CAAC,MAAM,QAAQ,CAAC,WAAW,CAAC,0BAA0B,CAAC,CAAC,EAAE,YAAY,CAAC;QAC5G,UAAU,CAAC,4BAA4B,GAAG,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC,KAAK,4BAA4B,CAAC;QAEpH,MAAM,2BAA2B,GAAG,CAAC,MAAM,QAAQ,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC,EAAE,YAAY,CAAC;QAC1G,UAAU,CAAC,2BAA2B,GAAG,QAAQ,CAAC,GAAG,CAAC,yBAAyB,CAAC,KAAK,2BAA2B,CAAC;QAEjH,IAAI,CAAC;YACJ,UAAU,CAAC,oBAAoB,GAAG,MAAM,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC3E,CAAC;QAAC,MAAM,CAAC;YACR,UAAU,CAAC,oBAAoB,GAAG,CAAC,CAAC;QACrC,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,0BAA0B,EAAE,CAAC;QAC3D,UAAU,CAAC,yBAAyB,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,oBAAoB,EAAE,IAAI,EAAE,oBAAoB,IAAI,CAAC,CAAC,CAAC;QAElH,UAAU,CAAC,gBAAgB,GAAG,MAAM,6BAA6B,EAAE,CAAC;QAEpE,yBAAyB;QACzB,UAAU,CAAC,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC1D,UAAU,CAAC,2BAA2B,GAAG,QAAQ,CAAC,GAAG,CAAC,2BAA2B,CAAC,KAAK,QAAQ,CAAC;QAChG,UAAU,CAAC,sBAAsB,GAAG,MAAM,KAAK,CAAC,+BAA+B,EAAE,CAAC;QAElF,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEvC,OAAO,UAAU,CAAC;IACnB,CAAC;IACD,KAAK,CAAC,IAAI;QACT,MAAM,YAAY,GAAG,MAAM,UAAU,CAAC,GAAG,EAAE,CAAC;QAC5C,YAAY,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QACpC,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAChE,YAAY,CAAC,GAAG,GAAG,UAAU,CAAC;QAE9B,OAAO,YAAY,CAAC;IACrB,CAAC;CACD,CAAC","sourcesContent":["import { log } from 'console';\nimport os from 'os';\n\nimport { Analytics, Team, VideoConf, Presence } from '@rocket.chat/core-services';\nimport type { IRoom, IStats, ISetting } from '@rocket.chat/core-typings';\nimport { UserStatus } from '@rocket.chat/core-typings';\nimport {\n\tNotificationQueue,\n\tRooms,\n\tStatistics,\n\tSessions,\n\tIntegrations,\n\tInvites,\n\tUploads,\n\tLivechatDepartment,\n\tLivechatVisitors,\n\tEmailInbox,\n\tLivechatBusinessHours,\n\tMessages,\n\tRoles as RolesRaw,\n\tInstanceStatus,\n\tSettings,\n\tLivechatTrigger,\n\tLivechatCustomField,\n\tSubscriptions,\n\tUsers,\n\tLivechatRooms,\n} from '@rocket.chat/models';\nimport { MongoInternals } from 'meteor/mongo';\nimport moment from 'moment';\n\nimport { readSecondaryPreferred } from '../../../../server/database/readSecondaryPreferred';\nimport { isRunningMs } from '../../../../server/lib/isRunningMs';\nimport { getControl } from '../../../../server/lib/migrations';\nimport { getSettingsStatistics } from '../../../../server/lib/statistics/getSettingsStatistics';\nimport { getMatrixFederationStatistics } from '../../../../server/services/federation/infrastructure/rocket-chat/adapters/Statistics';\nimport { getStatistics as federationGetStatistics } from '../../../federation/server/functions/dashboard';\nimport { settings } from '../../../settings/server';\nimport { Info } from '../../../utils/rocketchat.info';\nimport { getMongoInfo } from '../../../utils/server/functions/getMongoInfo';\nimport { getAppsStatistics } from './getAppsStatistics';\nimport { getStatistics as getEnterpriseStatistics } from './getEEStatistics';\nimport { getImporterStatistics } from './getImporterStatistics';\nimport { getServicesStatistics } from './getServicesStatistics';\n\nconst getUserLanguages = async (totalUsers: number): Promise<{ [key: string]: number }> => {\n\tconst result = await Users.getUserLanguages();\n\n\tconst languages: { [key: string]: number } = {\n\t\tnone: totalUsers,\n\t};\n\n\tresult.forEach(({ _id, total }: { _id: string; total: number }) => {\n\t\tif (!_id) {\n\t\t\treturn;\n\t\t}\n\t\tlanguages[_id] = total;\n\t\tlanguages.none -= total;\n\t});\n\n\treturn languages;\n};\n\nconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\nexport const statistics = {\n\tget: async (): Promise<IStats> => {\n\t\tconst readPreference = readSecondaryPreferred(db);\n\n\t\tconst statistics = {} as IStats;\n\t\tconst statsPms = [];\n\n\t\t// Setup Wizard\n\t\tconst [organizationType, industry, size, country, language, serverType, registerServer] = await Promise.all([\n\t\t\tsettings.get<string>('Organization_Type'),\n\t\t\tsettings.get<string>('Industry'),\n\t\t\tsettings.get<string>('Size'),\n\t\t\tsettings.get<string>('Country'),\n\t\t\tsettings.get<string>('Language'),\n\t\t\tsettings.get<string>('Server_Type'),\n\t\t\tsettings.get<boolean>('Register_Server'),\n\t\t]);\n\n\t\tstatistics.wizard = {\n\t\t\torganizationType,\n\t\t\tindustry,\n\t\t\tsize,\n\t\t\tcountry,\n\t\t\tlanguage,\n\t\t\tserverType,\n\t\t\tregisterServer,\n\t\t};\n\n\t\t// Version\n\t\tconst uniqueID = await Settings.findOne<Pick<ISetting, 'createdAt'>>('uniqueID', { projection: { createdAt: 1 } });\n\t\tstatistics.uniqueId = settings.get('uniqueID');\n\t\tif (uniqueID) {\n\t\t\tstatistics.installedAt = uniqueID.createdAt.toISOString();\n\t\t}\n\n\t\tstatistics.deploymentFingerprintHash = settings.get('Deployment_FingerPrint_Hash');\n\t\tstatistics.deploymentFingerprintVerified = settings.get('Deployment_FingerPrint_Verified');\n\n\t\tif (Info) {\n\t\t\tstatistics.version = Info.version;\n\t\t\tstatistics.tag = Info.tag;\n\t\t\tstatistics.branch = Info.branch;\n\t\t}\n\n\t\t// User statistics\n\t\tstatistics.totalUsers = await Users.col.countDocuments({});\n\t\tstatistics.activeUsers = await Users.getActiveLocalUserCount();\n\t\tstatistics.activeGuests = await Users.getActiveLocalGuestCount();\n\t\tstatistics.nonActiveUsers = await Users.col.countDocuments({ active: false });\n\t\tstatistics.appUsers = await Users.col.countDocuments({ type: 'app' });\n\t\tstatistics.onlineUsers = await Users.col.countDocuments({ status: UserStatus.ONLINE });\n\t\tstatistics.awayUsers = await Users.col.countDocuments({ status: UserStatus.AWAY });\n\t\tstatistics.busyUsers = await Users.col.countDocuments({ status: UserStatus.BUSY });\n\t\tstatistics.totalConnectedUsers = statistics.onlineUsers + statistics.awayUsers;\n\t\tstatistics.offlineUsers = statistics.totalUsers - statistics.onlineUsers - statistics.awayUsers - statistics.busyUsers;\n\t\tstatsPms.push(\n\t\t\tgetUserLanguages(statistics.totalUsers).then((total) => {\n\t\t\t\tstatistics.userLanguages = total;\n\t\t\t}),\n\t\t);\n\n\t\t// Room statistics\n\t\tstatistics.totalRooms = await Rooms.col.countDocuments({});\n\t\tstatistics.totalChannels = await Rooms.countByType('c');\n\t\tstatistics.totalPrivateGroups = await Rooms.countByType('p');\n\t\tstatistics.totalDirect = await Rooms.countByType('d');\n\t\tstatistics.totalLivechat = await Rooms.countByType('l');\n\t\tstatistics.totalDiscussions = await Rooms.countDiscussions();\n\t\tstatistics.totalThreads = await Messages.countThreads();\n\n\t\t// livechat visitors\n\t\tstatistics.totalLivechatVisitors = await LivechatVisitors.estimatedDocumentCount();\n\n\t\t// livechat agents\n\t\tstatistics.totalLivechatAgents = await Users.countAgents();\n\t\tstatistics.totalLivechatManagers = await Users.countDocuments({ roles: 'livechat-manager' });\n\n\t\t// livechat enabled\n\t\tstatistics.livechatEnabled = settings.get('Livechat_enabled');\n\n\t\t// Count and types of omnichannel rooms\n\t\tstatsPms.push(\n\t\t\tRooms.allRoomSourcesCount()\n\t\t\t\t.toArray()\n\t\t\t\t.then((roomSources) => {\n\t\t\t\t\tstatistics.omnichannelSources = roomSources.map(({ _id: { id, alias, type }, count }) => ({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\talias,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t}));\n\t\t\t\t}),\n\t\t);\n\n\t\t// Number of livechat rooms with department\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.countLivechatRoomsWithDepartment().then((count) => {\n\t\t\t\tstatistics.totalLivechatRoomsWithDepartment = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Number of departments\n\t\tstatsPms.push(\n\t\t\tLivechatDepartment.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.departments = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Number of archived departments\n\t\tstatsPms.push(\n\t\t\tLivechatDepartment.countArchived().then((count) => {\n\t\t\t\tstatistics.archivedDepartments = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Workspace allows dpeartment removal\n\t\tstatistics.isDepartmentRemovalEnabled = settings.get('Omnichannel_enable_department_removal');\n\n\t\t// Number of triggers\n\t\tstatsPms.push(\n\t\t\tLivechatTrigger.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.totalTriggers = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Number of custom fields\n\t\tstatsPms.push((statistics.totalCustomFields = await LivechatCustomField.countDocuments({})));\n\n\t\t// Number of public custom fields\n\t\tstatsPms.push((statistics.totalLivechatPublicCustomFields = await LivechatCustomField.countDocuments({ public: true })));\n\n\t\t// Livechat Automatic forwarding feature enabled\n\t\tstatistics.livechatAutomaticForwardingUnansweredChats = settings.get<number>('Livechat_auto_transfer_chat_timeout') !== 0;\n\n\t\t// Type of routing algorithm used on omnichannel\n\t\tstatistics.routingAlgorithm = settings.get('Livechat_Routing_Method') || '';\n\n\t\t// is on-hold active\n\t\tstatistics.onHoldEnabled = settings.get('Livechat_allow_manual_on_hold');\n\n\t\t// Number of Email Inboxes\n\t\tstatsPms.push(\n\t\t\tEmailInbox.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.emailInboxes = count;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tLivechatBusinessHours.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.BusinessHours = {\n\t\t\t\t\t// Number of Business Hours\n\t\t\t\t\ttotal: count,\n\t\t\t\t\t// Business Hours strategy\n\t\t\t\t\tstrategy: settings.get('Livechat_enable_business_hours') || '',\n\t\t\t\t};\n\t\t\t}),\n\t\t);\n\n\t\t// Type of routing algorithm used on omnichannel\n\t\tstatistics.routingAlgorithm = settings.get('Livechat_Routing_Method');\n\n\t\t// is on-hold active\n\t\tstatistics.onHoldEnabled = settings.get('Livechat_allow_manual_on_hold');\n\n\t\t// Last-Chatted Agent Preferred (enabled/disabled)\n\t\tstatistics.lastChattedAgentPreferred = settings.get('Livechat_last_chatted_agent_routing');\n\n\t\t// Assign new conversations to the contact manager (enabled/disabled)\n\t\tstatistics.assignNewConversationsToContactManager = settings.get('Omnichannel_contact_manager_routing');\n\n\t\t// How to handle Visitor Abandonment setting\n\t\tstatistics.visitorAbandonment = settings.get('Livechat_abandoned_rooms_action');\n\n\t\t// Amount of chats placed on hold\n\t\tstatsPms.push(\n\t\t\tMessages.countRoomsWithMessageType('omnichannel_placed_chat_on_hold', { readPreference }).then((total) => {\n\t\t\t\tstatistics.chatsOnHold = total;\n\t\t\t}),\n\t\t);\n\n\t\t// VoIP Enabled\n\t\tstatistics.voipEnabled = settings.get('VoIP_Enabled');\n\n\t\t// Amount of VoIP Calls\n\t\tstatsPms.push(\n\t\t\tRooms.countByType('v').then((count) => {\n\t\t\t\tstatistics.voipCalls = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Amount of VoIP Extensions connected\n\t\tstatsPms.push(\n\t\t\tUsers.col.countDocuments({ extension: { $exists: true } }).then((count) => {\n\t\t\t\tstatistics.voipExtensions = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Amount of Calls that ended properly\n\t\tstatsPms.push(\n\t\t\tMessages.countByType('voip-call-wrapup', { readPreference }).then((count) => {\n\t\t\t\tstatistics.voipSuccessfulCalls = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Amount of Calls that ended with an error\n\t\tstatsPms.push(\n\t\t\tMessages.countByType('voip-call-ended-unexpectedly', { readPreference }).then((count) => {\n\t\t\t\tstatistics.voipErrorCalls = count;\n\t\t\t}),\n\t\t);\n\t\t// Amount of Calls that were put on hold\n\t\tstatsPms.push(\n\t\t\tMessages.countRoomsWithMessageType('voip-call-on-hold', { readPreference }).then((count) => {\n\t\t\t\tstatistics.voipOnHoldCalls = count;\n\t\t\t}),\n\t\t);\n\n\t\tconst defaultValue = { contactsCount: 0, conversationsCount: 0, sources: [] };\n\t\tconst billablePeriod = moment.utc().format('YYYY-MM');\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.getMACStatisticsForPeriod(billablePeriod).then(([result]) => {\n\t\t\t\tstatistics.omnichannelContactsBySource = result || defaultValue;\n\t\t\t}),\n\t\t);\n\n\t\tconst monthAgo = moment.utc().subtract(30, 'days').toDate();\n\t\tconst today = moment.utc().toDate();\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.getMACStatisticsBetweenDates(monthAgo, today).then(([result]) => {\n\t\t\t\tstatistics.uniqueContactsOfLastMonth = result || defaultValue;\n\t\t\t}),\n\t\t);\n\n\t\tconst weekAgo = moment.utc().subtract(7, 'days').toDate();\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.getMACStatisticsBetweenDates(weekAgo, today).then(([result]) => {\n\t\t\t\tstatistics.uniqueContactsOfLastWeek = result || defaultValue;\n\t\t\t}),\n\t\t);\n\n\t\tconst yesterday = moment.utc().subtract(1, 'days').toDate();\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.getMACStatisticsBetweenDates(yesterday, today).then(([result]) => {\n\t\t\t\tstatistics.uniqueContactsOfYesterday = result || defaultValue;\n\t\t\t}),\n\t\t);\n\n\t\t// Message statistics\n\t\tconst channels = await Rooms.findByType('c', { projection: { msgs: 1, prid: 1 } }).toArray();\n\t\tconst totalChannelDiscussionsMessages = await channels.reduce(function _countChannelDiscussionsMessages(num: number, room: IRoom) {\n\t\t\treturn num + (room.prid ? room.msgs : 0);\n\t\t}, 0);\n\t\tstatistics.totalChannelMessages =\n\t\t\t(await channels.reduce(function _countChannelMessages(num: number, room: IRoom) {\n\t\t\t\treturn num + room.msgs;\n\t\t\t}, 0)) - totalChannelDiscussionsMessages;\n\n\t\tconst privateGroups = await Rooms.findByType('p', { projection: { msgs: 1, prid: 1 } }).toArray();\n\t\tconst totalPrivateGroupsDiscussionsMessages = await privateGroups.reduce(function _countPrivateGroupsDiscussionsMessages(\n\t\t\tnum: number,\n\t\t\troom: IRoom,\n\t\t) {\n\t\t\treturn num + (room.prid ? room.msgs : 0);\n\t\t}, 0);\n\t\tstatistics.totalPrivateGroupMessages =\n\t\t\t(await privateGroups.reduce(function _countPrivateGroupMessages(num: number, room: IRoom) {\n\t\t\t\treturn num + room.msgs;\n\t\t\t}, 0)) - totalPrivateGroupsDiscussionsMessages;\n\n\t\tstatistics.totalDiscussionsMessages = totalPrivateGroupsDiscussionsMessages + totalChannelDiscussionsMessages;\n\n\t\tstatistics.totalDirectMessages = (await Rooms.findByType('d', { projection: { msgs: 1 } }).toArray()).reduce(\n\t\t\tfunction _countDirectMessages(num: number, room: IRoom) {\n\t\t\t\treturn num + room.msgs;\n\t\t\t},\n\t\t\t0,\n\t\t);\n\t\tstatistics.totalLivechatMessages = (await Rooms.findByType('l', { projection: { msgs: 1 } }).toArray()).reduce(\n\t\t\tfunction _countLivechatMessages(num: number, room: IRoom) {\n\t\t\t\treturn num + room.msgs;\n\t\t\t},\n\t\t\t0,\n\t\t);\n\t\tstatistics.totalMessages =\n\t\t\tstatistics.totalChannelMessages +\n\t\t\tstatistics.totalPrivateGroupMessages +\n\t\t\tstatistics.totalDiscussionsMessages +\n\t\t\tstatistics.totalDirectMessages +\n\t\t\tstatistics.totalLivechatMessages;\n\n\t\t// Federation statistics\n\t\tstatsPms.push(\n\t\t\tfederationGetStatistics().then((federationOverviewData) => {\n\t\t\t\tstatistics.federatedServers = federationOverviewData.numberOfServers;\n\t\t\t\tstatistics.federatedUsers = federationOverviewData.numberOfFederatedUsers;\n\t\t\t}),\n\t\t);\n\n\t\tstatistics.lastLogin = (await Users.getLastLogin())?.toString() || '';\n\t\tstatistics.lastMessageSentAt = await Messages.getLastTimestamp();\n\t\tstatistics.lastSeenSubscription = (await Subscriptions.getLastSeen())?.toString() || '';\n\n\t\tstatistics.os = {\n\t\t\ttype: os.type(),\n\t\t\tplatform: os.platform(),\n\t\t\tarch: os.arch(),\n\t\t\trelease: os.release(),\n\t\t\tuptime: os.uptime(),\n\t\t\tloadavg: os.loadavg(),\n\t\t\ttotalmem: os.totalmem(),\n\t\t\tfreemem: os.freemem(),\n\t\t\tcpus: os.cpus(),\n\t\t};\n\n\t\tstatistics.process = {\n\t\t\tnodeVersion: process.version,\n\t\t\tpid: process.pid,\n\t\t\tuptime: process.uptime(),\n\t\t};\n\n\t\tstatistics.deploy = {\n\t\t\tmethod: process.env.DEPLOY_METHOD || 'tar',\n\t\t\tplatform: process.env.DEPLOY_PLATFORM || 'selfinstall',\n\t\t};\n\n\t\tstatistics.readReceiptsEnabled = settings.get('Message_Read_Receipt_Enabled');\n\t\tstatistics.readReceiptsDetailed = settings.get('Message_Read_Receipt_Store_Users');\n\n\t\tstatistics.enterpriseReady = true;\n\t\tstatsPms.push(\n\t\t\tUploads.col.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.uploadsTotal = count;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tUploads.col\n\t\t\t\t.aggregate(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$group: { _id: 'total', total: { $sum: '$size' } },\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t{ readPreference },\n\t\t\t\t)\n\t\t\t\t.toArray()\n\t\t\t\t.then((agg) => {\n\t\t\t\t\tconst [result] = agg;\n\t\t\t\t\tstatistics.uploadsTotalSize = result ? (result as any).total : 0;\n\t\t\t\t}),\n\t\t);\n\n\t\tstatistics.migration = await getControl();\n\t\tstatsPms.push(\n\t\t\tInstanceStatus.col.countDocuments({ _updatedAt: { $gt: new Date(Date.now() - process.uptime() * 1000 - 2000) } }).then((count) => {\n\t\t\t\tstatistics.instanceCount = count;\n\t\t\t}),\n\t\t);\n\n\t\tconst { oplogEnabled, mongoVersion, mongoStorageEngine } = await getMongoInfo();\n\t\tstatistics.msEnabled = isRunningMs();\n\t\tstatistics.oplogEnabled = oplogEnabled;\n\t\tstatistics.mongoVersion = mongoVersion;\n\t\tstatistics.mongoStorageEngine = mongoStorageEngine || '';\n\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueUsersOfYesterday().then((result) => {\n\t\t\t\tstatistics.uniqueUsersOfYesterday = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueUsersOfLastWeek().then((result) => {\n\t\t\t\tstatistics.uniqueUsersOfLastWeek = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueUsersOfLastMonth().then((result) => {\n\t\t\t\tstatistics.uniqueUsersOfLastMonth = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueDevicesOfYesterday().then((result) => {\n\t\t\t\tstatistics.uniqueDevicesOfYesterday = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueDevicesOfLastWeek().then((result) => {\n\t\t\t\tstatistics.uniqueDevicesOfLastWeek = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueDevicesOfLastMonth().then((result) => {\n\t\t\t\tstatistics.uniqueDevicesOfLastMonth = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueOSOfYesterday().then((result) => {\n\t\t\t\tstatistics.uniqueOSOfYesterday = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueOSOfLastWeek().then((result) => {\n\t\t\t\tstatistics.uniqueOSOfLastWeek = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueOSOfLastMonth().then((result) => {\n\t\t\t\tstatistics.uniqueOSOfLastMonth = result;\n\t\t\t}),\n\t\t);\n\n\t\tstatistics.apps = await getAppsStatistics();\n\t\tstatistics.services = await getServicesStatistics();\n\t\tstatistics.importer = getImporterStatistics();\n\t\tstatistics.videoConf = await VideoConf.getStatistics();\n\n\t\t// If getSettingsStatistics() returns an error, save as empty object.\n\t\tstatsPms.push(\n\t\t\tgetSettingsStatistics().then((res) => {\n\t\t\t\tconst settingsStatisticsObject = res || {};\n\t\t\t\tstatistics.settings = settingsStatisticsObject;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tIntegrations.find(\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\t_id: 0,\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t\tenabled: 1,\n\t\t\t\t\t\tscriptEnabled: 1,\n\t\t\t\t\t},\n\t\t\t\t\treadPreference,\n\t\t\t\t},\n\t\t\t)\n\t\t\t\t.toArray()\n\t\t\t\t.then((found) => {\n\t\t\t\t\tconst integrations = found;\n\n\t\t\t\t\tstatistics.integrations = {\n\t\t\t\t\t\ttotalIntegrations: integrations.length,\n\t\t\t\t\t\ttotalIncoming: integrations.filter((integration) => integration.type === 'webhook-incoming').length,\n\t\t\t\t\t\ttotalIncomingActive: integrations.filter(\n\t\t\t\t\t\t\t(integration) => integration.enabled === true && integration.type === 'webhook-incoming',\n\t\t\t\t\t\t).length,\n\t\t\t\t\t\ttotalOutgoing: integrations.filter((integration) => integration.type === 'webhook-outgoing').length,\n\t\t\t\t\t\ttotalOutgoingActive: integrations.filter(\n\t\t\t\t\t\t\t(integration) => integration.enabled === true && integration.type === 'webhook-outgoing',\n\t\t\t\t\t\t).length,\n\t\t\t\t\t\ttotalWithScriptEnabled: integrations.filter((integration) => integration.scriptEnabled === true).length,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tNotificationQueue.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.pushQueue = count;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tgetEnterpriseStatistics().then((result) => {\n\t\t\t\tstatistics.enterprise = result;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tTeam.getStatistics().then((result) => {\n\t\t\t\tstatistics.teams = result;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(Analytics.resetSeatRequestCount());\n\n\t\t// TODO: Is that the best way to do this? maybe we should use a promise.all()\n\n\t\tstatistics.dashboardCount = settings.get('Engagement_Dashboard_Load_Count');\n\t\tstatistics.messageAuditApply = settings.get('Message_Auditing_Apply_Count');\n\t\tstatistics.messageAuditLoad = settings.get('Message_Auditing_Panel_Load_Count');\n\t\tstatistics.joinJitsiButton = settings.get('Jitsi_Click_To_Join_Count');\n\t\tstatistics.slashCommandsJitsi = settings.get('Jitsi_Start_SlashCommands_Count');\n\t\tstatistics.totalOTRRooms = await Rooms.countByCreatedOTR({ readPreference });\n\t\tstatistics.totalOTR = settings.get('OTR_Count');\n\t\tstatistics.totalBroadcastRooms = await Rooms.countByBroadcast({ readPreference });\n\t\tstatistics.totalTriggeredEmails = settings.get('Triggered_Emails_Count');\n\t\tstatistics.totalRoomsWithStarred = await Messages.countRoomsWithStarredMessages({ readPreference });\n\t\tstatistics.totalRoomsWithPinned = await Messages.countRoomsWithPinnedMessages({ readPreference });\n\t\tstatistics.totalUserTOTP = await Users.countActiveUsersTOTPEnable({ readPreference });\n\t\tstatistics.totalUserEmail2fa = await Users.countActiveUsersEmail2faEnable({ readPreference });\n\t\tstatistics.totalPinned = await Messages.countPinned({ readPreference });\n\t\tstatistics.totalStarred = await Messages.countStarred({ readPreference });\n\t\tstatistics.totalLinkInvitation = await Invites.estimatedDocumentCount();\n\t\tstatistics.totalLinkInvitationUses = await Invites.countUses();\n\t\tstatistics.totalEmailInvitation = settings.get('Invitation_Email_Count');\n\t\tstatistics.totalE2ERooms = await Rooms.countByE2E({ readPreference });\n\t\tstatistics.logoChange = Object.keys(settings.get('Assets_logo') || {}).includes('url');\n\t\tstatistics.showHomeButton = settings.get('Layout_Show_Home_Button');\n\t\tstatistics.totalEncryptedMessages = await Messages.countByType('e2e', { readPreference });\n\t\tstatistics.totalManuallyAddedUsers = settings.get('Manual_Entry_User_Count');\n\t\tstatistics.totalSubscriptionRoles = await RolesRaw.countByScope('Subscriptions', { readPreference });\n\t\tstatistics.totalUserRoles = await RolesRaw.countByScope('Users', { readPreference });\n\t\tstatistics.totalCustomRoles = await RolesRaw.countCustomRoles({ readPreference });\n\t\tstatistics.totalWebRTCCalls = settings.get('WebRTC_Calls_Count');\n\t\tstatistics.uncaughtExceptionsCount = settings.get('Uncaught_Exceptions_Count');\n\n\t\tconst defaultGateway = (await Settings.findOneById('Push_gateway', { projection: { packageValue: 1 } }))?.packageValue;\n\n\t\t// Push notification stats\n\t\t// one bit for each of the following:\n\t\tconst pushEnabled = settings.get('Push_enable') ? 1 : 0;\n\t\tconst pushGatewayEnabled = settings.get('Push_enable_gateway') ? 2 : 0;\n\t\tconst pushGatewayChanged = settings.get('Push_gateway') !== defaultGateway ? 4 : 0;\n\n\t\tstatistics.push = pushEnabled | pushGatewayEnabled | pushGatewayChanged;\n\t\tstatistics.pushSecured = settings.get<boolean>('Push_request_content_from_server');\n\n\t\tconst defaultHomeTitle = (await Settings.findOneById('Layout_Home_Title'))?.packageValue;\n\t\tstatistics.homeTitleChanged = settings.get('Layout_Home_Title') !== defaultHomeTitle;\n\n\t\tconst defaultHomeBody = (await Settings.findOneById('Layout_Home_Body'))?.packageValue;\n\t\tstatistics.homeBodyChanged = settings.get('Layout_Home_Body') !== defaultHomeBody;\n\n\t\tconst defaultCustomCSS = (await Settings.findOneById('theme-custom-css'))?.packageValue;\n\t\tstatistics.customCSSChanged = settings.get('theme-custom-css') !== defaultCustomCSS;\n\n\t\tconst defaultOnLogoutCustomScript = (await Settings.findOneById('Custom_Script_On_Logout'))?.packageValue;\n\t\tstatistics.onLogoutCustomScriptChanged = settings.get('Custom_Script_On_Logout') !== defaultOnLogoutCustomScript;\n\n\t\tconst defaultLoggedOutCustomScript = (await Settings.findOneById('Custom_Script_Logged_Out'))?.packageValue;\n\t\tstatistics.loggedOutCustomScriptChanged = settings.get('Custom_Script_Logged_Out') !== defaultLoggedOutCustomScript;\n\n\t\tconst defaultLoggedInCustomScript = (await Settings.findOneById('Custom_Script_Logged_In'))?.packageValue;\n\t\tstatistics.loggedInCustomScriptChanged = settings.get('Custom_Script_Logged_In') !== defaultLoggedInCustomScript;\n\n\t\ttry {\n\t\t\tstatistics.dailyPeakConnections = await Presence.getPeakConnections(true);\n\t\t} catch {\n\t\t\tstatistics.dailyPeakConnections = 0;\n\t\t}\n\n\t\tconst peak = await Statistics.findMonthlyPeakConnections();\n\t\tstatistics.maxMonthlyPeakConnections = Math.max(statistics.dailyPeakConnections, peak?.dailyPeakConnections || 0);\n\n\t\tstatistics.matrixFederation = await getMatrixFederationStatistics();\n\n\t\t// Omnichannel call stats\n\t\tstatistics.webRTCEnabled = settings.get('WebRTC_Enabled');\n\t\tstatistics.webRTCEnabledForOmnichannel = settings.get('Omnichannel_call_provider') === 'WebRTC';\n\t\tstatistics.omnichannelWebRTCCalls = await Rooms.findCountOfRoomsWithActiveCalls();\n\n\t\tawait Promise.all(statsPms).catch(log);\n\n\t\treturn statistics;\n\t},\n\tasync save(): Promise<IStats> {\n\t\tconst rcStatistics = await statistics.get();\n\t\trcStatistics.createdAt = new Date();\n\t\tconst { insertedId } = await Statistics.insertOne(rcStatistics);\n\t\trcStatistics._id = insertedId;\n\n\t\treturn rcStatistics;\n\t},\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      statistics: () => statistics\n    });\n    let log;\n    module.link(\"console\", {\n      log(v) {\n        log = v;\n      }\n    }, 0);\n    let os;\n    module.link(\"os\", {\n      default(v) {\n        os = v;\n      }\n    }, 1);\n    let Analytics, Team, VideoConf, Presence;\n    module.link(\"@rocket.chat/core-services\", {\n      Analytics(v) {\n        Analytics = v;\n      },\n      Team(v) {\n        Team = v;\n      },\n      VideoConf(v) {\n        VideoConf = v;\n      },\n      Presence(v) {\n        Presence = v;\n      }\n    }, 2);\n    let UserStatus;\n    module.link(\"@rocket.chat/core-typings\", {\n      UserStatus(v) {\n        UserStatus = v;\n      }\n    }, 3);\n    let NotificationQueue, Rooms, Statistics, Sessions, Integrations, Invites, Uploads, LivechatDepartment, LivechatVisitors, EmailInbox, LivechatBusinessHours, Messages, RolesRaw, InstanceStatus, Settings, LivechatTrigger, LivechatCustomField, Subscriptions, Users, LivechatRooms;\n    module.link(\"@rocket.chat/models\", {\n      NotificationQueue(v) {\n        NotificationQueue = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      },\n      Statistics(v) {\n        Statistics = v;\n      },\n      Sessions(v) {\n        Sessions = v;\n      },\n      Integrations(v) {\n        Integrations = v;\n      },\n      Invites(v) {\n        Invites = v;\n      },\n      Uploads(v) {\n        Uploads = v;\n      },\n      LivechatDepartment(v) {\n        LivechatDepartment = v;\n      },\n      LivechatVisitors(v) {\n        LivechatVisitors = v;\n      },\n      EmailInbox(v) {\n        EmailInbox = v;\n      },\n      LivechatBusinessHours(v) {\n        LivechatBusinessHours = v;\n      },\n      Messages(v) {\n        Messages = v;\n      },\n      Roles(v) {\n        RolesRaw = v;\n      },\n      InstanceStatus(v) {\n        InstanceStatus = v;\n      },\n      Settings(v) {\n        Settings = v;\n      },\n      LivechatTrigger(v) {\n        LivechatTrigger = v;\n      },\n      LivechatCustomField(v) {\n        LivechatCustomField = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      }\n    }, 4);\n    let MongoInternals;\n    module.link(\"meteor/mongo\", {\n      MongoInternals(v) {\n        MongoInternals = v;\n      }\n    }, 5);\n    let moment;\n    module.link(\"moment\", {\n      default(v) {\n        moment = v;\n      }\n    }, 6);\n    let readSecondaryPreferred;\n    module.link(\"../../../../server/database/readSecondaryPreferred\", {\n      readSecondaryPreferred(v) {\n        readSecondaryPreferred = v;\n      }\n    }, 7);\n    let isRunningMs;\n    module.link(\"../../../../server/lib/isRunningMs\", {\n      isRunningMs(v) {\n        isRunningMs = v;\n      }\n    }, 8);\n    let getControl;\n    module.link(\"../../../../server/lib/migrations\", {\n      getControl(v) {\n        getControl = v;\n      }\n    }, 9);\n    let getSettingsStatistics;\n    module.link(\"../../../../server/lib/statistics/getSettingsStatistics\", {\n      getSettingsStatistics(v) {\n        getSettingsStatistics = v;\n      }\n    }, 10);\n    let getMatrixFederationStatistics;\n    module.link(\"../../../../server/services/federation/infrastructure/rocket-chat/adapters/Statistics\", {\n      getMatrixFederationStatistics(v) {\n        getMatrixFederationStatistics = v;\n      }\n    }, 11);\n    let federationGetStatistics;\n    module.link(\"../../../federation/server/functions/dashboard\", {\n      getStatistics(v) {\n        federationGetStatistics = v;\n      }\n    }, 12);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 13);\n    let Info;\n    module.link(\"../../../utils/rocketchat.info\", {\n      Info(v) {\n        Info = v;\n      }\n    }, 14);\n    let getMongoInfo;\n    module.link(\"../../../utils/server/functions/getMongoInfo\", {\n      getMongoInfo(v) {\n        getMongoInfo = v;\n      }\n    }, 15);\n    let getAppsStatistics;\n    module.link(\"./getAppsStatistics\", {\n      getAppsStatistics(v) {\n        getAppsStatistics = v;\n      }\n    }, 16);\n    let getEnterpriseStatistics;\n    module.link(\"./getEEStatistics\", {\n      getStatistics(v) {\n        getEnterpriseStatistics = v;\n      }\n    }, 17);\n    let getImporterStatistics;\n    module.link(\"./getImporterStatistics\", {\n      getImporterStatistics(v) {\n        getImporterStatistics = v;\n      }\n    }, 18);\n    let getServicesStatistics;\n    module.link(\"./getServicesStatistics\", {\n      getServicesStatistics(v) {\n        getServicesStatistics = v;\n      }\n    }, 19);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const getUserLanguages = async totalUsers => {\n      const result = await Users.getUserLanguages();\n      const languages = {\n        none: totalUsers\n      };\n      result.forEach(_ref => {\n        let {\n          _id,\n          total\n        } = _ref;\n        if (!_id) {\n          return;\n        }\n        languages[_id] = total;\n        languages.none -= total;\n      });\n      return languages;\n    };\n    const {\n      db\n    } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n    const statistics = {\n      get: async () => {\n        var _await$Users$getLastL, _await$Subscriptions$, _await$Settings$findO, _await$Settings$findO2, _await$Settings$findO3, _await$Settings$findO4, _await$Settings$findO5, _await$Settings$findO6, _await$Settings$findO7;\n        const readPreference = readSecondaryPreferred(db);\n        const statistics = {};\n        const statsPms = [];\n        // Setup Wizard\n        const [organizationType, industry, size, country, language, serverType, registerServer] = await Promise.all([settings.get('Organization_Type'), settings.get('Industry'), settings.get('Size'), settings.get('Country'), settings.get('Language'), settings.get('Server_Type'), settings.get('Register_Server')]);\n        statistics.wizard = {\n          organizationType,\n          industry,\n          size,\n          country,\n          language,\n          serverType,\n          registerServer\n        };\n        // Version\n        const uniqueID = await Settings.findOne('uniqueID', {\n          projection: {\n            createdAt: 1\n          }\n        });\n        statistics.uniqueId = settings.get('uniqueID');\n        if (uniqueID) {\n          statistics.installedAt = uniqueID.createdAt.toISOString();\n        }\n        statistics.deploymentFingerprintHash = settings.get('Deployment_FingerPrint_Hash');\n        statistics.deploymentFingerprintVerified = settings.get('Deployment_FingerPrint_Verified');\n        if (Info) {\n          statistics.version = Info.version;\n          statistics.tag = Info.tag;\n          statistics.branch = Info.branch;\n        }\n        // User statistics\n        statistics.totalUsers = await Users.col.countDocuments({});\n        statistics.activeUsers = await Users.getActiveLocalUserCount();\n        statistics.activeGuests = await Users.getActiveLocalGuestCount();\n        statistics.nonActiveUsers = await Users.col.countDocuments({\n          active: false\n        });\n        statistics.appUsers = await Users.col.countDocuments({\n          type: 'app'\n        });\n        statistics.onlineUsers = await Users.col.countDocuments({\n          status: UserStatus.ONLINE\n        });\n        statistics.awayUsers = await Users.col.countDocuments({\n          status: UserStatus.AWAY\n        });\n        statistics.busyUsers = await Users.col.countDocuments({\n          status: UserStatus.BUSY\n        });\n        statistics.totalConnectedUsers = statistics.onlineUsers + statistics.awayUsers;\n        statistics.offlineUsers = statistics.totalUsers - statistics.onlineUsers - statistics.awayUsers - statistics.busyUsers;\n        statsPms.push(getUserLanguages(statistics.totalUsers).then(total => {\n          statistics.userLanguages = total;\n        }));\n        // Room statistics\n        statistics.totalRooms = await Rooms.col.countDocuments({});\n        statistics.totalChannels = await Rooms.countByType('c');\n        statistics.totalPrivateGroups = await Rooms.countByType('p');\n        statistics.totalDirect = await Rooms.countByType('d');\n        statistics.totalLivechat = await Rooms.countByType('l');\n        statistics.totalDiscussions = await Rooms.countDiscussions();\n        statistics.totalThreads = await Messages.countThreads();\n        // livechat visitors\n        statistics.totalLivechatVisitors = await LivechatVisitors.estimatedDocumentCount();\n        // livechat agents\n        statistics.totalLivechatAgents = await Users.countAgents();\n        statistics.totalLivechatManagers = await Users.countDocuments({\n          roles: 'livechat-manager'\n        });\n        // livechat enabled\n        statistics.livechatEnabled = settings.get('Livechat_enabled');\n        // Count and types of omnichannel rooms\n        statsPms.push(Rooms.allRoomSourcesCount().toArray().then(roomSources => {\n          statistics.omnichannelSources = roomSources.map(_ref2 => {\n            let {\n              _id: {\n                id,\n                alias,\n                type\n              },\n              count\n            } = _ref2;\n            return {\n              id,\n              alias,\n              type,\n              count\n            };\n          });\n        }));\n        // Number of livechat rooms with department\n        statsPms.push(LivechatRooms.countLivechatRoomsWithDepartment().then(count => {\n          statistics.totalLivechatRoomsWithDepartment = count;\n        }));\n        // Number of departments\n        statsPms.push(LivechatDepartment.estimatedDocumentCount().then(count => {\n          statistics.departments = count;\n        }));\n        // Number of archived departments\n        statsPms.push(LivechatDepartment.countArchived().then(count => {\n          statistics.archivedDepartments = count;\n        }));\n        // Workspace allows dpeartment removal\n        statistics.isDepartmentRemovalEnabled = settings.get('Omnichannel_enable_department_removal');\n        // Number of triggers\n        statsPms.push(LivechatTrigger.estimatedDocumentCount().then(count => {\n          statistics.totalTriggers = count;\n        }));\n        // Number of custom fields\n        statsPms.push(statistics.totalCustomFields = await LivechatCustomField.countDocuments({}));\n        // Number of public custom fields\n        statsPms.push(statistics.totalLivechatPublicCustomFields = await LivechatCustomField.countDocuments({\n          public: true\n        }));\n        // Livechat Automatic forwarding feature enabled\n        statistics.livechatAutomaticForwardingUnansweredChats = settings.get('Livechat_auto_transfer_chat_timeout') !== 0;\n        // Type of routing algorithm used on omnichannel\n        statistics.routingAlgorithm = settings.get('Livechat_Routing_Method') || '';\n        // is on-hold active\n        statistics.onHoldEnabled = settings.get('Livechat_allow_manual_on_hold');\n        // Number of Email Inboxes\n        statsPms.push(EmailInbox.estimatedDocumentCount().then(count => {\n          statistics.emailInboxes = count;\n        }));\n        statsPms.push(LivechatBusinessHours.estimatedDocumentCount().then(count => {\n          statistics.BusinessHours = {\n            // Number of Business Hours\n            total: count,\n            // Business Hours strategy\n            strategy: settings.get('Livechat_enable_business_hours') || ''\n          };\n        }));\n        // Type of routing algorithm used on omnichannel\n        statistics.routingAlgorithm = settings.get('Livechat_Routing_Method');\n        // is on-hold active\n        statistics.onHoldEnabled = settings.get('Livechat_allow_manual_on_hold');\n        // Last-Chatted Agent Preferred (enabled/disabled)\n        statistics.lastChattedAgentPreferred = settings.get('Livechat_last_chatted_agent_routing');\n        // Assign new conversations to the contact manager (enabled/disabled)\n        statistics.assignNewConversationsToContactManager = settings.get('Omnichannel_contact_manager_routing');\n        // How to handle Visitor Abandonment setting\n        statistics.visitorAbandonment = settings.get('Livechat_abandoned_rooms_action');\n        // Amount of chats placed on hold\n        statsPms.push(Messages.countRoomsWithMessageType('omnichannel_placed_chat_on_hold', {\n          readPreference\n        }).then(total => {\n          statistics.chatsOnHold = total;\n        }));\n        // VoIP Enabled\n        statistics.voipEnabled = settings.get('VoIP_Enabled');\n        // Amount of VoIP Calls\n        statsPms.push(Rooms.countByType('v').then(count => {\n          statistics.voipCalls = count;\n        }));\n        // Amount of VoIP Extensions connected\n        statsPms.push(Users.col.countDocuments({\n          extension: {\n            $exists: true\n          }\n        }).then(count => {\n          statistics.voipExtensions = count;\n        }));\n        // Amount of Calls that ended properly\n        statsPms.push(Messages.countByType('voip-call-wrapup', {\n          readPreference\n        }).then(count => {\n          statistics.voipSuccessfulCalls = count;\n        }));\n        // Amount of Calls that ended with an error\n        statsPms.push(Messages.countByType('voip-call-ended-unexpectedly', {\n          readPreference\n        }).then(count => {\n          statistics.voipErrorCalls = count;\n        }));\n        // Amount of Calls that were put on hold\n        statsPms.push(Messages.countRoomsWithMessageType('voip-call-on-hold', {\n          readPreference\n        }).then(count => {\n          statistics.voipOnHoldCalls = count;\n        }));\n        const defaultValue = {\n          contactsCount: 0,\n          conversationsCount: 0,\n          sources: []\n        };\n        const billablePeriod = moment.utc().format('YYYY-MM');\n        statsPms.push(LivechatRooms.getMACStatisticsForPeriod(billablePeriod).then(_ref3 => {\n          let [result] = _ref3;\n          statistics.omnichannelContactsBySource = result || defaultValue;\n        }));\n        const monthAgo = moment.utc().subtract(30, 'days').toDate();\n        const today = moment.utc().toDate();\n        statsPms.push(LivechatRooms.getMACStatisticsBetweenDates(monthAgo, today).then(_ref4 => {\n          let [result] = _ref4;\n          statistics.uniqueContactsOfLastMonth = result || defaultValue;\n        }));\n        const weekAgo = moment.utc().subtract(7, 'days').toDate();\n        statsPms.push(LivechatRooms.getMACStatisticsBetweenDates(weekAgo, today).then(_ref5 => {\n          let [result] = _ref5;\n          statistics.uniqueContactsOfLastWeek = result || defaultValue;\n        }));\n        const yesterday = moment.utc().subtract(1, 'days').toDate();\n        statsPms.push(LivechatRooms.getMACStatisticsBetweenDates(yesterday, today).then(_ref6 => {\n          let [result] = _ref6;\n          statistics.uniqueContactsOfYesterday = result || defaultValue;\n        }));\n        // Message statistics\n        const channels = await Rooms.findByType('c', {\n          projection: {\n            msgs: 1,\n            prid: 1\n          }\n        }).toArray();\n        const totalChannelDiscussionsMessages = await channels.reduce(function _countChannelDiscussionsMessages(num, room) {\n          return num + (room.prid ? room.msgs : 0);\n        }, 0);\n        statistics.totalChannelMessages = (await channels.reduce(function _countChannelMessages(num, room) {\n          return num + room.msgs;\n        }, 0)) - totalChannelDiscussionsMessages;\n        const privateGroups = await Rooms.findByType('p', {\n          projection: {\n            msgs: 1,\n            prid: 1\n          }\n        }).toArray();\n        const totalPrivateGroupsDiscussionsMessages = await privateGroups.reduce(function _countPrivateGroupsDiscussionsMessages(num, room) {\n          return num + (room.prid ? room.msgs : 0);\n        }, 0);\n        statistics.totalPrivateGroupMessages = (await privateGroups.reduce(function _countPrivateGroupMessages(num, room) {\n          return num + room.msgs;\n        }, 0)) - totalPrivateGroupsDiscussionsMessages;\n        statistics.totalDiscussionsMessages = totalPrivateGroupsDiscussionsMessages + totalChannelDiscussionsMessages;\n        statistics.totalDirectMessages = (await Rooms.findByType('d', {\n          projection: {\n            msgs: 1\n          }\n        }).toArray()).reduce(function _countDirectMessages(num, room) {\n          return num + room.msgs;\n        }, 0);\n        statistics.totalLivechatMessages = (await Rooms.findByType('l', {\n          projection: {\n            msgs: 1\n          }\n        }).toArray()).reduce(function _countLivechatMessages(num, room) {\n          return num + room.msgs;\n        }, 0);\n        statistics.totalMessages = statistics.totalChannelMessages + statistics.totalPrivateGroupMessages + statistics.totalDiscussionsMessages + statistics.totalDirectMessages + statistics.totalLivechatMessages;\n        // Federation statistics\n        statsPms.push(federationGetStatistics().then(federationOverviewData => {\n          statistics.federatedServers = federationOverviewData.numberOfServers;\n          statistics.federatedUsers = federationOverviewData.numberOfFederatedUsers;\n        }));\n        statistics.lastLogin = ((_await$Users$getLastL = await Users.getLastLogin()) === null || _await$Users$getLastL === void 0 ? void 0 : _await$Users$getLastL.toString()) || '';\n        statistics.lastMessageSentAt = await Messages.getLastTimestamp();\n        statistics.lastSeenSubscription = ((_await$Subscriptions$ = await Subscriptions.getLastSeen()) === null || _await$Subscriptions$ === void 0 ? void 0 : _await$Subscriptions$.toString()) || '';\n        statistics.os = {\n          type: os.type(),\n          platform: os.platform(),\n          arch: os.arch(),\n          release: os.release(),\n          uptime: os.uptime(),\n          loadavg: os.loadavg(),\n          totalmem: os.totalmem(),\n          freemem: os.freemem(),\n          cpus: os.cpus()\n        };\n        statistics.process = {\n          nodeVersion: process.version,\n          pid: process.pid,\n          uptime: process.uptime()\n        };\n        statistics.deploy = {\n          method: process.env.DEPLOY_METHOD || 'tar',\n          platform: process.env.DEPLOY_PLATFORM || 'selfinstall'\n        };\n        statistics.readReceiptsEnabled = settings.get('Message_Read_Receipt_Enabled');\n        statistics.readReceiptsDetailed = settings.get('Message_Read_Receipt_Store_Users');\n        statistics.enterpriseReady = true;\n        statsPms.push(Uploads.col.estimatedDocumentCount().then(count => {\n          statistics.uploadsTotal = count;\n        }));\n        statsPms.push(Uploads.col.aggregate([{\n          $group: {\n            _id: 'total',\n            total: {\n              $sum: '$size'\n            }\n          }\n        }], {\n          readPreference\n        }).toArray().then(agg => {\n          const [result] = agg;\n          statistics.uploadsTotalSize = result ? result.total : 0;\n        }));\n        statistics.migration = await getControl();\n        statsPms.push(InstanceStatus.col.countDocuments({\n          _updatedAt: {\n            $gt: new Date(Date.now() - process.uptime() * 1000 - 2000)\n          }\n        }).then(count => {\n          statistics.instanceCount = count;\n        }));\n        const {\n          oplogEnabled,\n          mongoVersion,\n          mongoStorageEngine\n        } = await getMongoInfo();\n        statistics.msEnabled = isRunningMs();\n        statistics.oplogEnabled = oplogEnabled;\n        statistics.mongoVersion = mongoVersion;\n        statistics.mongoStorageEngine = mongoStorageEngine || '';\n        statsPms.push(Sessions.getUniqueUsersOfYesterday().then(result => {\n          statistics.uniqueUsersOfYesterday = result;\n        }));\n        statsPms.push(Sessions.getUniqueUsersOfLastWeek().then(result => {\n          statistics.uniqueUsersOfLastWeek = result;\n        }));\n        statsPms.push(Sessions.getUniqueUsersOfLastMonth().then(result => {\n          statistics.uniqueUsersOfLastMonth = result;\n        }));\n        statsPms.push(Sessions.getUniqueDevicesOfYesterday().then(result => {\n          statistics.uniqueDevicesOfYesterday = result;\n        }));\n        statsPms.push(Sessions.getUniqueDevicesOfLastWeek().then(result => {\n          statistics.uniqueDevicesOfLastWeek = result;\n        }));\n        statsPms.push(Sessions.getUniqueDevicesOfLastMonth().then(result => {\n          statistics.uniqueDevicesOfLastMonth = result;\n        }));\n        statsPms.push(Sessions.getUniqueOSOfYesterday().then(result => {\n          statistics.uniqueOSOfYesterday = result;\n        }));\n        statsPms.push(Sessions.getUniqueOSOfLastWeek().then(result => {\n          statistics.uniqueOSOfLastWeek = result;\n        }));\n        statsPms.push(Sessions.getUniqueOSOfLastMonth().then(result => {\n          statistics.uniqueOSOfLastMonth = result;\n        }));\n        statistics.apps = await getAppsStatistics();\n        statistics.services = await getServicesStatistics();\n        statistics.importer = getImporterStatistics();\n        statistics.videoConf = await VideoConf.getStatistics();\n        // If getSettingsStatistics() returns an error, save as empty object.\n        statsPms.push(getSettingsStatistics().then(res => {\n          const settingsStatisticsObject = res || {};\n          statistics.settings = settingsStatisticsObject;\n        }));\n        statsPms.push(Integrations.find({}, {\n          projection: {\n            _id: 0,\n            type: 1,\n            enabled: 1,\n            scriptEnabled: 1\n          },\n          readPreference\n        }).toArray().then(found => {\n          const integrations = found;\n          statistics.integrations = {\n            totalIntegrations: integrations.length,\n            totalIncoming: integrations.filter(integration => integration.type === 'webhook-incoming').length,\n            totalIncomingActive: integrations.filter(integration => integration.enabled === true && integration.type === 'webhook-incoming').length,\n            totalOutgoing: integrations.filter(integration => integration.type === 'webhook-outgoing').length,\n            totalOutgoingActive: integrations.filter(integration => integration.enabled === true && integration.type === 'webhook-outgoing').length,\n            totalWithScriptEnabled: integrations.filter(integration => integration.scriptEnabled === true).length\n          };\n        }));\n        statsPms.push(NotificationQueue.estimatedDocumentCount().then(count => {\n          statistics.pushQueue = count;\n        }));\n        statsPms.push(getEnterpriseStatistics().then(result => {\n          statistics.enterprise = result;\n        }));\n        statsPms.push(Team.getStatistics().then(result => {\n          statistics.teams = result;\n        }));\n        statsPms.push(Analytics.resetSeatRequestCount());\n        // TODO: Is that the best way to do this? maybe we should use a promise.all()\n        statistics.dashboardCount = settings.get('Engagement_Dashboard_Load_Count');\n        statistics.messageAuditApply = settings.get('Message_Auditing_Apply_Count');\n        statistics.messageAuditLoad = settings.get('Message_Auditing_Panel_Load_Count');\n        statistics.joinJitsiButton = settings.get('Jitsi_Click_To_Join_Count');\n        statistics.slashCommandsJitsi = settings.get('Jitsi_Start_SlashCommands_Count');\n        statistics.totalOTRRooms = await Rooms.countByCreatedOTR({\n          readPreference\n        });\n        statistics.totalOTR = settings.get('OTR_Count');\n        statistics.totalBroadcastRooms = await Rooms.countByBroadcast({\n          readPreference\n        });\n        statistics.totalTriggeredEmails = settings.get('Triggered_Emails_Count');\n        statistics.totalRoomsWithStarred = await Messages.countRoomsWithStarredMessages({\n          readPreference\n        });\n        statistics.totalRoomsWithPinned = await Messages.countRoomsWithPinnedMessages({\n          readPreference\n        });\n        statistics.totalUserTOTP = await Users.countActiveUsersTOTPEnable({\n          readPreference\n        });\n        statistics.totalUserEmail2fa = await Users.countActiveUsersEmail2faEnable({\n          readPreference\n        });\n        statistics.totalPinned = await Messages.countPinned({\n          readPreference\n        });\n        statistics.totalStarred = await Messages.countStarred({\n          readPreference\n        });\n        statistics.totalLinkInvitation = await Invites.estimatedDocumentCount();\n        statistics.totalLinkInvitationUses = await Invites.countUses();\n        statistics.totalEmailInvitation = settings.get('Invitation_Email_Count');\n        statistics.totalE2ERooms = await Rooms.countByE2E({\n          readPreference\n        });\n        statistics.logoChange = Object.keys(settings.get('Assets_logo') || {}).includes('url');\n        statistics.showHomeButton = settings.get('Layout_Show_Home_Button');\n        statistics.totalEncryptedMessages = await Messages.countByType('e2e', {\n          readPreference\n        });\n        statistics.totalManuallyAddedUsers = settings.get('Manual_Entry_User_Count');\n        statistics.totalSubscriptionRoles = await RolesRaw.countByScope('Subscriptions', {\n          readPreference\n        });\n        statistics.totalUserRoles = await RolesRaw.countByScope('Users', {\n          readPreference\n        });\n        statistics.totalCustomRoles = await RolesRaw.countCustomRoles({\n          readPreference\n        });\n        statistics.totalWebRTCCalls = settings.get('WebRTC_Calls_Count');\n        statistics.uncaughtExceptionsCount = settings.get('Uncaught_Exceptions_Count');\n        const defaultGateway = (_await$Settings$findO = await Settings.findOneById('Push_gateway', {\n          projection: {\n            packageValue: 1\n          }\n        })) === null || _await$Settings$findO === void 0 ? void 0 : _await$Settings$findO.packageValue;\n        // Push notification stats\n        // one bit for each of the following:\n        const pushEnabled = settings.get('Push_enable') ? 1 : 0;\n        const pushGatewayEnabled = settings.get('Push_enable_gateway') ? 2 : 0;\n        const pushGatewayChanged = settings.get('Push_gateway') !== defaultGateway ? 4 : 0;\n        statistics.push = pushEnabled | pushGatewayEnabled | pushGatewayChanged;\n        statistics.pushSecured = settings.get('Push_request_content_from_server');\n        const defaultHomeTitle = (_await$Settings$findO2 = await Settings.findOneById('Layout_Home_Title')) === null || _await$Settings$findO2 === void 0 ? void 0 : _await$Settings$findO2.packageValue;\n        statistics.homeTitleChanged = settings.get('Layout_Home_Title') !== defaultHomeTitle;\n        const defaultHomeBody = (_await$Settings$findO3 = await Settings.findOneById('Layout_Home_Body')) === null || _await$Settings$findO3 === void 0 ? void 0 : _await$Settings$findO3.packageValue;\n        statistics.homeBodyChanged = settings.get('Layout_Home_Body') !== defaultHomeBody;\n        const defaultCustomCSS = (_await$Settings$findO4 = await Settings.findOneById('theme-custom-css')) === null || _await$Settings$findO4 === void 0 ? void 0 : _await$Settings$findO4.packageValue;\n        statistics.customCSSChanged = settings.get('theme-custom-css') !== defaultCustomCSS;\n        const defaultOnLogoutCustomScript = (_await$Settings$findO5 = await Settings.findOneById('Custom_Script_On_Logout')) === null || _await$Settings$findO5 === void 0 ? void 0 : _await$Settings$findO5.packageValue;\n        statistics.onLogoutCustomScriptChanged = settings.get('Custom_Script_On_Logout') !== defaultOnLogoutCustomScript;\n        const defaultLoggedOutCustomScript = (_await$Settings$findO6 = await Settings.findOneById('Custom_Script_Logged_Out')) === null || _await$Settings$findO6 === void 0 ? void 0 : _await$Settings$findO6.packageValue;\n        statistics.loggedOutCustomScriptChanged = settings.get('Custom_Script_Logged_Out') !== defaultLoggedOutCustomScript;\n        const defaultLoggedInCustomScript = (_await$Settings$findO7 = await Settings.findOneById('Custom_Script_Logged_In')) === null || _await$Settings$findO7 === void 0 ? void 0 : _await$Settings$findO7.packageValue;\n        statistics.loggedInCustomScriptChanged = settings.get('Custom_Script_Logged_In') !== defaultLoggedInCustomScript;\n        try {\n          statistics.dailyPeakConnections = await Presence.getPeakConnections(true);\n        } catch (_unused) {\n          statistics.dailyPeakConnections = 0;\n        }\n        const peak = await Statistics.findMonthlyPeakConnections();\n        statistics.maxMonthlyPeakConnections = Math.max(statistics.dailyPeakConnections, (peak === null || peak === void 0 ? void 0 : peak.dailyPeakConnections) || 0);\n        statistics.matrixFederation = await getMatrixFederationStatistics();\n        // Omnichannel call stats\n        statistics.webRTCEnabled = settings.get('WebRTC_Enabled');\n        statistics.webRTCEnabledForOmnichannel = settings.get('Omnichannel_call_provider') === 'WebRTC';\n        statistics.omnichannelWebRTCCalls = await Rooms.findCountOfRoomsWithActiveCalls();\n        await Promise.all(statsPms).catch(log);\n        return statistics;\n      },\n      async save() {\n        const rcStatistics = await statistics.get();\n        rcStatistics.createdAt = new Date();\n        const {\n          insertedId\n        } = await Statistics.insertOne(rcStatistics);\n        rcStatistics._id = insertedId;\n        return rcStatistics;\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","statistics","log","link","v","os","default","Analytics","Team","VideoConf","Presence","UserStatus","NotificationQueue","Rooms","Statistics","Sessions","Integrations","Invites","Uploads","LivechatDepartment","LivechatVisitors","EmailInbox","LivechatBusinessHours","Messages","RolesRaw","InstanceStatus","Settings","LivechatTrigger","LivechatCustomField","Subscriptions","Users","LivechatRooms","Roles","MongoInternals","moment","readSecondaryPreferred","isRunningMs","getControl","getSettingsStatistics","getMatrixFederationStatistics","federationGetStatistics","getStatistics","settings","Info","getMongoInfo","getAppsStatistics","getEnterpriseStatistics","getImporterStatistics","getServicesStatistics","__reifyWaitForDeps__","getUserLanguages","totalUsers","result","languages","none","forEach","_ref","_id","total","db","defaultRemoteCollectionDriver","mongo","get","_await$Users$getLastL","_await$Subscriptions$","_await$Settings$findO","_await$Settings$findO2","_await$Settings$findO3","_await$Settings$findO4","_await$Settings$findO5","_await$Settings$findO6","_await$Settings$findO7","readPreference","statsPms","organizationType","industry","size","country","language","serverType","registerServer","Promise","all","wizard","uniqueID","findOne","projection","createdAt","uniqueId","installedAt","toISOString","deploymentFingerprintHash","deploymentFingerprintVerified","version","tag","branch","col","countDocuments","activeUsers","getActiveLocalUserCount","activeGuests","getActiveLocalGuestCount","nonActiveUsers","active","appUsers","type","onlineUsers","status","ONLINE","awayUsers","AWAY","busyUsers","BUSY","totalConnectedUsers","offlineUsers","push","then","userLanguages","totalRooms","totalChannels","countByType","totalPrivateGroups","totalDirect","totalLivechat","totalDiscussions","countDiscussions","totalThreads","countThreads","totalLivechatVisitors","estimatedDocumentCount","totalLivechatAgents","countAgents","totalLivechatManagers","roles","livechatEnabled","allRoomSourcesCount","toArray","roomSources","omnichannelSources","map","_ref2","id","alias","count","countLivechatRoomsWithDepartment","totalLivechatRoomsWithDepartment","departments","countArchived","archivedDepartments","isDepartmentRemovalEnabled","totalTriggers","totalCustomFields","totalLivechatPublicCustomFields","public","livechatAutomaticForwardingUnansweredChats","routingAlgorithm","onHoldEnabled","emailInboxes","BusinessHours","strategy","lastChattedAgentPreferred","assignNewConversationsToContactManager","visitorAbandonment","countRoomsWithMessageType","chatsOnHold","voipEnabled","voipCalls","extension","$exists","voipExtensions","voipSuccessfulCalls","voipErrorCalls","voipOnHoldCalls","defaultValue","contactsCount","conversationsCount","sources","billablePeriod","utc","format","getMACStatisticsForPeriod","_ref3","omnichannelContactsBySource","monthAgo","subtract","toDate","today","getMACStatisticsBetweenDates","_ref4","uniqueContactsOfLastMonth","weekAgo","_ref5","uniqueContactsOfLastWeek","yesterday","_ref6","uniqueContactsOfYesterday","channels","findByType","msgs","prid","totalChannelDiscussionsMessages","reduce","_countChannelDiscussionsMessages","num","room","totalChannelMessages","_countChannelMessages","privateGroups","totalPrivateGroupsDiscussionsMessages","_countPrivateGroupsDiscussionsMessages","totalPrivateGroupMessages","_countPrivateGroupMessages","totalDiscussionsMessages","totalDirectMessages","_countDirectMessages","totalLivechatMessages","_countLivechatMessages","totalMessages","federationOverviewData","federatedServers","numberOfServers","federatedUsers","numberOfFederatedUsers","lastLogin","getLastLogin","toString","lastMessageSentAt","getLastTimestamp","lastSeenSubscription","getLastSeen","platform","arch","release","uptime","loadavg","totalmem","freemem","cpus","process","nodeVersion","pid","deploy","method","env","DEPLOY_METHOD","DEPLOY_PLATFORM","readReceiptsEnabled","readReceiptsDetailed","enterpriseReady","uploadsTotal","aggregate","$group","$sum","agg","uploadsTotalSize","migration","_updatedAt","$gt","Date","now","instanceCount","oplogEnabled","mongoVersion","mongoStorageEngine","msEnabled","getUniqueUsersOfYesterday","uniqueUsersOfYesterday","getUniqueUsersOfLastWeek","uniqueUsersOfLastWeek","getUniqueUsersOfLastMonth","uniqueUsersOfLastMonth","getUniqueDevicesOfYesterday","uniqueDevicesOfYesterday","getUniqueDevicesOfLastWeek","uniqueDevicesOfLastWeek","getUniqueDevicesOfLastMonth","uniqueDevicesOfLastMonth","getUniqueOSOfYesterday","uniqueOSOfYesterday","getUniqueOSOfLastWeek","uniqueOSOfLastWeek","getUniqueOSOfLastMonth","uniqueOSOfLastMonth","apps","services","importer","videoConf","res","settingsStatisticsObject","find","enabled","scriptEnabled","found","integrations","totalIntegrations","length","totalIncoming","filter","integration","totalIncomingActive","totalOutgoing","totalOutgoingActive","totalWithScriptEnabled","pushQueue","enterprise","teams","resetSeatRequestCount","dashboardCount","messageAuditApply","messageAuditLoad","joinJitsiButton","slashCommandsJitsi","totalOTRRooms","countByCreatedOTR","totalOTR","totalBroadcastRooms","countByBroadcast","totalTriggeredEmails","totalRoomsWithStarred","countRoomsWithStarredMessages","totalRoomsWithPinned","countRoomsWithPinnedMessages","totalUserTOTP","countActiveUsersTOTPEnable","totalUserEmail2fa","countActiveUsersEmail2faEnable","totalPinned","countPinned","totalStarred","countStarred","totalLinkInvitation","totalLinkInvitationUses","countUses","totalEmailInvitation","totalE2ERooms","countByE2E","logoChange","Object","keys","includes","showHomeButton","totalEncryptedMessages","totalManuallyAddedUsers","totalSubscriptionRoles","countByScope","totalUserRoles","totalCustomRoles","countCustomRoles","totalWebRTCCalls","uncaughtExceptionsCount","defaultGateway","findOneById","packageValue","pushEnabled","pushGatewayEnabled","pushGatewayChanged","pushSecured","defaultHomeTitle","homeTitleChanged","defaultHomeBody","homeBodyChanged","defaultCustomCSS","customCSSChanged","defaultOnLogoutCustomScript","onLogoutCustomScriptChanged","defaultLoggedOutCustomScript","loggedOutCustomScriptChanged","defaultLoggedInCustomScript","loggedInCustomScriptChanged","dailyPeakConnections","getPeakConnections","_unused","peak","findMonthlyPeakConnections","maxMonthlyPeakConnections","Math","max","matrixFederation","webRTCEnabled","webRTCEnabledForOmnichannel","omnichannelWebRTCCalls","findCountOfRoomsWithActiveCalls","catch","save","rcStatistics","insertedId","insertOne","__reify_async_result__","_reifyError","self","async"],"sources":["app/statistics/server/lib/statistics.ts"],"sourcesContent":["import { log } from 'console';\nimport os from 'os';\n\nimport { Analytics, Team, VideoConf, Presence } from '@rocket.chat/core-services';\nimport type { IRoom, IStats, ISetting } from '@rocket.chat/core-typings';\nimport { UserStatus } from '@rocket.chat/core-typings';\nimport {\n\tNotificationQueue,\n\tRooms,\n\tStatistics,\n\tSessions,\n\tIntegrations,\n\tInvites,\n\tUploads,\n\tLivechatDepartment,\n\tLivechatVisitors,\n\tEmailInbox,\n\tLivechatBusinessHours,\n\tMessages,\n\tRoles as RolesRaw,\n\tInstanceStatus,\n\tSettings,\n\tLivechatTrigger,\n\tLivechatCustomField,\n\tSubscriptions,\n\tUsers,\n\tLivechatRooms,\n} from '@rocket.chat/models';\nimport { MongoInternals } from 'meteor/mongo';\nimport moment from 'moment';\n\nimport { readSecondaryPreferred } from '../../../../server/database/readSecondaryPreferred';\nimport { isRunningMs } from '../../../../server/lib/isRunningMs';\nimport { getControl } from '../../../../server/lib/migrations';\nimport { getSettingsStatistics } from '../../../../server/lib/statistics/getSettingsStatistics';\nimport { getMatrixFederationStatistics } from '../../../../server/services/federation/infrastructure/rocket-chat/adapters/Statistics';\nimport { getStatistics as federationGetStatistics } from '../../../federation/server/functions/dashboard';\nimport { settings } from '../../../settings/server';\nimport { Info } from '../../../utils/rocketchat.info';\nimport { getMongoInfo } from '../../../utils/server/functions/getMongoInfo';\nimport { getAppsStatistics } from './getAppsStatistics';\nimport { getStatistics as getEnterpriseStatistics } from './getEEStatistics';\nimport { getImporterStatistics } from './getImporterStatistics';\nimport { getServicesStatistics } from './getServicesStatistics';\n\nconst getUserLanguages = async (totalUsers: number): Promise<{ [key: string]: number }> => {\n\tconst result = await Users.getUserLanguages();\n\n\tconst languages: { [key: string]: number } = {\n\t\tnone: totalUsers,\n\t};\n\n\tresult.forEach(({ _id, total }: { _id: string; total: number }) => {\n\t\tif (!_id) {\n\t\t\treturn;\n\t\t}\n\t\tlanguages[_id] = total;\n\t\tlanguages.none -= total;\n\t});\n\n\treturn languages;\n};\n\nconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\nexport const statistics = {\n\tget: async (): Promise<IStats> => {\n\t\tconst readPreference = readSecondaryPreferred(db);\n\n\t\tconst statistics = {} as IStats;\n\t\tconst statsPms = [];\n\n\t\t// Setup Wizard\n\t\tconst [organizationType, industry, size, country, language, serverType, registerServer] = await Promise.all([\n\t\t\tsettings.get<string>('Organization_Type'),\n\t\t\tsettings.get<string>('Industry'),\n\t\t\tsettings.get<string>('Size'),\n\t\t\tsettings.get<string>('Country'),\n\t\t\tsettings.get<string>('Language'),\n\t\t\tsettings.get<string>('Server_Type'),\n\t\t\tsettings.get<boolean>('Register_Server'),\n\t\t]);\n\n\t\tstatistics.wizard = {\n\t\t\torganizationType,\n\t\t\tindustry,\n\t\t\tsize,\n\t\t\tcountry,\n\t\t\tlanguage,\n\t\t\tserverType,\n\t\t\tregisterServer,\n\t\t};\n\n\t\t// Version\n\t\tconst uniqueID = await Settings.findOne<Pick<ISetting, 'createdAt'>>('uniqueID', { projection: { createdAt: 1 } });\n\t\tstatistics.uniqueId = settings.get('uniqueID');\n\t\tif (uniqueID) {\n\t\t\tstatistics.installedAt = uniqueID.createdAt.toISOString();\n\t\t}\n\n\t\tstatistics.deploymentFingerprintHash = settings.get('Deployment_FingerPrint_Hash');\n\t\tstatistics.deploymentFingerprintVerified = settings.get('Deployment_FingerPrint_Verified');\n\n\t\tif (Info) {\n\t\t\tstatistics.version = Info.version;\n\t\t\tstatistics.tag = Info.tag;\n\t\t\tstatistics.branch = Info.branch;\n\t\t}\n\n\t\t// User statistics\n\t\tstatistics.totalUsers = await Users.col.countDocuments({});\n\t\tstatistics.activeUsers = await Users.getActiveLocalUserCount();\n\t\tstatistics.activeGuests = await Users.getActiveLocalGuestCount();\n\t\tstatistics.nonActiveUsers = await Users.col.countDocuments({ active: false });\n\t\tstatistics.appUsers = await Users.col.countDocuments({ type: 'app' });\n\t\tstatistics.onlineUsers = await Users.col.countDocuments({ status: UserStatus.ONLINE });\n\t\tstatistics.awayUsers = await Users.col.countDocuments({ status: UserStatus.AWAY });\n\t\tstatistics.busyUsers = await Users.col.countDocuments({ status: UserStatus.BUSY });\n\t\tstatistics.totalConnectedUsers = statistics.onlineUsers + statistics.awayUsers;\n\t\tstatistics.offlineUsers = statistics.totalUsers - statistics.onlineUsers - statistics.awayUsers - statistics.busyUsers;\n\t\tstatsPms.push(\n\t\t\tgetUserLanguages(statistics.totalUsers).then((total) => {\n\t\t\t\tstatistics.userLanguages = total;\n\t\t\t}),\n\t\t);\n\n\t\t// Room statistics\n\t\tstatistics.totalRooms = await Rooms.col.countDocuments({});\n\t\tstatistics.totalChannels = await Rooms.countByType('c');\n\t\tstatistics.totalPrivateGroups = await Rooms.countByType('p');\n\t\tstatistics.totalDirect = await Rooms.countByType('d');\n\t\tstatistics.totalLivechat = await Rooms.countByType('l');\n\t\tstatistics.totalDiscussions = await Rooms.countDiscussions();\n\t\tstatistics.totalThreads = await Messages.countThreads();\n\n\t\t// livechat visitors\n\t\tstatistics.totalLivechatVisitors = await LivechatVisitors.estimatedDocumentCount();\n\n\t\t// livechat agents\n\t\tstatistics.totalLivechatAgents = await Users.countAgents();\n\t\tstatistics.totalLivechatManagers = await Users.countDocuments({ roles: 'livechat-manager' });\n\n\t\t// livechat enabled\n\t\tstatistics.livechatEnabled = settings.get('Livechat_enabled');\n\n\t\t// Count and types of omnichannel rooms\n\t\tstatsPms.push(\n\t\t\tRooms.allRoomSourcesCount()\n\t\t\t\t.toArray()\n\t\t\t\t.then((roomSources) => {\n\t\t\t\t\tstatistics.omnichannelSources = roomSources.map(({ _id: { id, alias, type }, count }) => ({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\talias,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t}));\n\t\t\t\t}),\n\t\t);\n\n\t\t// Number of livechat rooms with department\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.countLivechatRoomsWithDepartment().then((count) => {\n\t\t\t\tstatistics.totalLivechatRoomsWithDepartment = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Number of departments\n\t\tstatsPms.push(\n\t\t\tLivechatDepartment.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.departments = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Number of archived departments\n\t\tstatsPms.push(\n\t\t\tLivechatDepartment.countArchived().then((count) => {\n\t\t\t\tstatistics.archivedDepartments = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Workspace allows dpeartment removal\n\t\tstatistics.isDepartmentRemovalEnabled = settings.get('Omnichannel_enable_department_removal');\n\n\t\t// Number of triggers\n\t\tstatsPms.push(\n\t\t\tLivechatTrigger.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.totalTriggers = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Number of custom fields\n\t\tstatsPms.push((statistics.totalCustomFields = await LivechatCustomField.countDocuments({})));\n\n\t\t// Number of public custom fields\n\t\tstatsPms.push((statistics.totalLivechatPublicCustomFields = await LivechatCustomField.countDocuments({ public: true })));\n\n\t\t// Livechat Automatic forwarding feature enabled\n\t\tstatistics.livechatAutomaticForwardingUnansweredChats = settings.get<number>('Livechat_auto_transfer_chat_timeout') !== 0;\n\n\t\t// Type of routing algorithm used on omnichannel\n\t\tstatistics.routingAlgorithm = settings.get('Livechat_Routing_Method') || '';\n\n\t\t// is on-hold active\n\t\tstatistics.onHoldEnabled = settings.get('Livechat_allow_manual_on_hold');\n\n\t\t// Number of Email Inboxes\n\t\tstatsPms.push(\n\t\t\tEmailInbox.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.emailInboxes = count;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tLivechatBusinessHours.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.BusinessHours = {\n\t\t\t\t\t// Number of Business Hours\n\t\t\t\t\ttotal: count,\n\t\t\t\t\t// Business Hours strategy\n\t\t\t\t\tstrategy: settings.get('Livechat_enable_business_hours') || '',\n\t\t\t\t};\n\t\t\t}),\n\t\t);\n\n\t\t// Type of routing algorithm used on omnichannel\n\t\tstatistics.routingAlgorithm = settings.get('Livechat_Routing_Method');\n\n\t\t// is on-hold active\n\t\tstatistics.onHoldEnabled = settings.get('Livechat_allow_manual_on_hold');\n\n\t\t// Last-Chatted Agent Preferred (enabled/disabled)\n\t\tstatistics.lastChattedAgentPreferred = settings.get('Livechat_last_chatted_agent_routing');\n\n\t\t// Assign new conversations to the contact manager (enabled/disabled)\n\t\tstatistics.assignNewConversationsToContactManager = settings.get('Omnichannel_contact_manager_routing');\n\n\t\t// How to handle Visitor Abandonment setting\n\t\tstatistics.visitorAbandonment = settings.get('Livechat_abandoned_rooms_action');\n\n\t\t// Amount of chats placed on hold\n\t\tstatsPms.push(\n\t\t\tMessages.countRoomsWithMessageType('omnichannel_placed_chat_on_hold', { readPreference }).then((total) => {\n\t\t\t\tstatistics.chatsOnHold = total;\n\t\t\t}),\n\t\t);\n\n\t\t// VoIP Enabled\n\t\tstatistics.voipEnabled = settings.get('VoIP_Enabled');\n\n\t\t// Amount of VoIP Calls\n\t\tstatsPms.push(\n\t\t\tRooms.countByType('v').then((count) => {\n\t\t\t\tstatistics.voipCalls = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Amount of VoIP Extensions connected\n\t\tstatsPms.push(\n\t\t\tUsers.col.countDocuments({ extension: { $exists: true } }).then((count) => {\n\t\t\t\tstatistics.voipExtensions = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Amount of Calls that ended properly\n\t\tstatsPms.push(\n\t\t\tMessages.countByType('voip-call-wrapup', { readPreference }).then((count) => {\n\t\t\t\tstatistics.voipSuccessfulCalls = count;\n\t\t\t}),\n\t\t);\n\n\t\t// Amount of Calls that ended with an error\n\t\tstatsPms.push(\n\t\t\tMessages.countByType('voip-call-ended-unexpectedly', { readPreference }).then((count) => {\n\t\t\t\tstatistics.voipErrorCalls = count;\n\t\t\t}),\n\t\t);\n\t\t// Amount of Calls that were put on hold\n\t\tstatsPms.push(\n\t\t\tMessages.countRoomsWithMessageType('voip-call-on-hold', { readPreference }).then((count) => {\n\t\t\t\tstatistics.voipOnHoldCalls = count;\n\t\t\t}),\n\t\t);\n\n\t\tconst defaultValue = { contactsCount: 0, conversationsCount: 0, sources: [] };\n\t\tconst billablePeriod = moment.utc().format('YYYY-MM');\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.getMACStatisticsForPeriod(billablePeriod).then(([result]) => {\n\t\t\t\tstatistics.omnichannelContactsBySource = result || defaultValue;\n\t\t\t}),\n\t\t);\n\n\t\tconst monthAgo = moment.utc().subtract(30, 'days').toDate();\n\t\tconst today = moment.utc().toDate();\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.getMACStatisticsBetweenDates(monthAgo, today).then(([result]) => {\n\t\t\t\tstatistics.uniqueContactsOfLastMonth = result || defaultValue;\n\t\t\t}),\n\t\t);\n\n\t\tconst weekAgo = moment.utc().subtract(7, 'days').toDate();\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.getMACStatisticsBetweenDates(weekAgo, today).then(([result]) => {\n\t\t\t\tstatistics.uniqueContactsOfLastWeek = result || defaultValue;\n\t\t\t}),\n\t\t);\n\n\t\tconst yesterday = moment.utc().subtract(1, 'days').toDate();\n\t\tstatsPms.push(\n\t\t\tLivechatRooms.getMACStatisticsBetweenDates(yesterday, today).then(([result]) => {\n\t\t\t\tstatistics.uniqueContactsOfYesterday = result || defaultValue;\n\t\t\t}),\n\t\t);\n\n\t\t// Message statistics\n\t\tconst channels = await Rooms.findByType('c', { projection: { msgs: 1, prid: 1 } }).toArray();\n\t\tconst totalChannelDiscussionsMessages = await channels.reduce(function _countChannelDiscussionsMessages(num: number, room: IRoom) {\n\t\t\treturn num + (room.prid ? room.msgs : 0);\n\t\t}, 0);\n\t\tstatistics.totalChannelMessages =\n\t\t\t(await channels.reduce(function _countChannelMessages(num: number, room: IRoom) {\n\t\t\t\treturn num + room.msgs;\n\t\t\t}, 0)) - totalChannelDiscussionsMessages;\n\n\t\tconst privateGroups = await Rooms.findByType('p', { projection: { msgs: 1, prid: 1 } }).toArray();\n\t\tconst totalPrivateGroupsDiscussionsMessages = await privateGroups.reduce(function _countPrivateGroupsDiscussionsMessages(\n\t\t\tnum: number,\n\t\t\troom: IRoom,\n\t\t) {\n\t\t\treturn num + (room.prid ? room.msgs : 0);\n\t\t}, 0);\n\t\tstatistics.totalPrivateGroupMessages =\n\t\t\t(await privateGroups.reduce(function _countPrivateGroupMessages(num: number, room: IRoom) {\n\t\t\t\treturn num + room.msgs;\n\t\t\t}, 0)) - totalPrivateGroupsDiscussionsMessages;\n\n\t\tstatistics.totalDiscussionsMessages = totalPrivateGroupsDiscussionsMessages + totalChannelDiscussionsMessages;\n\n\t\tstatistics.totalDirectMessages = (await Rooms.findByType('d', { projection: { msgs: 1 } }).toArray()).reduce(\n\t\t\tfunction _countDirectMessages(num: number, room: IRoom) {\n\t\t\t\treturn num + room.msgs;\n\t\t\t},\n\t\t\t0,\n\t\t);\n\t\tstatistics.totalLivechatMessages = (await Rooms.findByType('l', { projection: { msgs: 1 } }).toArray()).reduce(\n\t\t\tfunction _countLivechatMessages(num: number, room: IRoom) {\n\t\t\t\treturn num + room.msgs;\n\t\t\t},\n\t\t\t0,\n\t\t);\n\t\tstatistics.totalMessages =\n\t\t\tstatistics.totalChannelMessages +\n\t\t\tstatistics.totalPrivateGroupMessages +\n\t\t\tstatistics.totalDiscussionsMessages +\n\t\t\tstatistics.totalDirectMessages +\n\t\t\tstatistics.totalLivechatMessages;\n\n\t\t// Federation statistics\n\t\tstatsPms.push(\n\t\t\tfederationGetStatistics().then((federationOverviewData) => {\n\t\t\t\tstatistics.federatedServers = federationOverviewData.numberOfServers;\n\t\t\t\tstatistics.federatedUsers = federationOverviewData.numberOfFederatedUsers;\n\t\t\t}),\n\t\t);\n\n\t\tstatistics.lastLogin = (await Users.getLastLogin())?.toString() || '';\n\t\tstatistics.lastMessageSentAt = await Messages.getLastTimestamp();\n\t\tstatistics.lastSeenSubscription = (await Subscriptions.getLastSeen())?.toString() || '';\n\n\t\tstatistics.os = {\n\t\t\ttype: os.type(),\n\t\t\tplatform: os.platform(),\n\t\t\tarch: os.arch(),\n\t\t\trelease: os.release(),\n\t\t\tuptime: os.uptime(),\n\t\t\tloadavg: os.loadavg(),\n\t\t\ttotalmem: os.totalmem(),\n\t\t\tfreemem: os.freemem(),\n\t\t\tcpus: os.cpus(),\n\t\t};\n\n\t\tstatistics.process = {\n\t\t\tnodeVersion: process.version,\n\t\t\tpid: process.pid,\n\t\t\tuptime: process.uptime(),\n\t\t};\n\n\t\tstatistics.deploy = {\n\t\t\tmethod: process.env.DEPLOY_METHOD || 'tar',\n\t\t\tplatform: process.env.DEPLOY_PLATFORM || 'selfinstall',\n\t\t};\n\n\t\tstatistics.readReceiptsEnabled = settings.get('Message_Read_Receipt_Enabled');\n\t\tstatistics.readReceiptsDetailed = settings.get('Message_Read_Receipt_Store_Users');\n\n\t\tstatistics.enterpriseReady = true;\n\t\tstatsPms.push(\n\t\t\tUploads.col.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.uploadsTotal = count;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tUploads.col\n\t\t\t\t.aggregate(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$group: { _id: 'total', total: { $sum: '$size' } },\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t{ readPreference },\n\t\t\t\t)\n\t\t\t\t.toArray()\n\t\t\t\t.then((agg) => {\n\t\t\t\t\tconst [result] = agg;\n\t\t\t\t\tstatistics.uploadsTotalSize = result ? (result as any).total : 0;\n\t\t\t\t}),\n\t\t);\n\n\t\tstatistics.migration = await getControl();\n\t\tstatsPms.push(\n\t\t\tInstanceStatus.col.countDocuments({ _updatedAt: { $gt: new Date(Date.now() - process.uptime() * 1000 - 2000) } }).then((count) => {\n\t\t\t\tstatistics.instanceCount = count;\n\t\t\t}),\n\t\t);\n\n\t\tconst { oplogEnabled, mongoVersion, mongoStorageEngine } = await getMongoInfo();\n\t\tstatistics.msEnabled = isRunningMs();\n\t\tstatistics.oplogEnabled = oplogEnabled;\n\t\tstatistics.mongoVersion = mongoVersion;\n\t\tstatistics.mongoStorageEngine = mongoStorageEngine || '';\n\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueUsersOfYesterday().then((result) => {\n\t\t\t\tstatistics.uniqueUsersOfYesterday = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueUsersOfLastWeek().then((result) => {\n\t\t\t\tstatistics.uniqueUsersOfLastWeek = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueUsersOfLastMonth().then((result) => {\n\t\t\t\tstatistics.uniqueUsersOfLastMonth = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueDevicesOfYesterday().then((result) => {\n\t\t\t\tstatistics.uniqueDevicesOfYesterday = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueDevicesOfLastWeek().then((result) => {\n\t\t\t\tstatistics.uniqueDevicesOfLastWeek = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueDevicesOfLastMonth().then((result) => {\n\t\t\t\tstatistics.uniqueDevicesOfLastMonth = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueOSOfYesterday().then((result) => {\n\t\t\t\tstatistics.uniqueOSOfYesterday = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueOSOfLastWeek().then((result) => {\n\t\t\t\tstatistics.uniqueOSOfLastWeek = result;\n\t\t\t}),\n\t\t);\n\t\tstatsPms.push(\n\t\t\tSessions.getUniqueOSOfLastMonth().then((result) => {\n\t\t\t\tstatistics.uniqueOSOfLastMonth = result;\n\t\t\t}),\n\t\t);\n\n\t\tstatistics.apps = await getAppsStatistics();\n\t\tstatistics.services = await getServicesStatistics();\n\t\tstatistics.importer = getImporterStatistics();\n\t\tstatistics.videoConf = await VideoConf.getStatistics();\n\n\t\t// If getSettingsStatistics() returns an error, save as empty object.\n\t\tstatsPms.push(\n\t\t\tgetSettingsStatistics().then((res) => {\n\t\t\t\tconst settingsStatisticsObject = res || {};\n\t\t\t\tstatistics.settings = settingsStatisticsObject;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tIntegrations.find(\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\t_id: 0,\n\t\t\t\t\t\ttype: 1,\n\t\t\t\t\t\tenabled: 1,\n\t\t\t\t\t\tscriptEnabled: 1,\n\t\t\t\t\t},\n\t\t\t\t\treadPreference,\n\t\t\t\t},\n\t\t\t)\n\t\t\t\t.toArray()\n\t\t\t\t.then((found) => {\n\t\t\t\t\tconst integrations = found;\n\n\t\t\t\t\tstatistics.integrations = {\n\t\t\t\t\t\ttotalIntegrations: integrations.length,\n\t\t\t\t\t\ttotalIncoming: integrations.filter((integration) => integration.type === 'webhook-incoming').length,\n\t\t\t\t\t\ttotalIncomingActive: integrations.filter(\n\t\t\t\t\t\t\t(integration) => integration.enabled === true && integration.type === 'webhook-incoming',\n\t\t\t\t\t\t).length,\n\t\t\t\t\t\ttotalOutgoing: integrations.filter((integration) => integration.type === 'webhook-outgoing').length,\n\t\t\t\t\t\ttotalOutgoingActive: integrations.filter(\n\t\t\t\t\t\t\t(integration) => integration.enabled === true && integration.type === 'webhook-outgoing',\n\t\t\t\t\t\t).length,\n\t\t\t\t\t\ttotalWithScriptEnabled: integrations.filter((integration) => integration.scriptEnabled === true).length,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tNotificationQueue.estimatedDocumentCount().then((count) => {\n\t\t\t\tstatistics.pushQueue = count;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tgetEnterpriseStatistics().then((result) => {\n\t\t\t\tstatistics.enterprise = result;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(\n\t\t\tTeam.getStatistics().then((result) => {\n\t\t\t\tstatistics.teams = result;\n\t\t\t}),\n\t\t);\n\n\t\tstatsPms.push(Analytics.resetSeatRequestCount());\n\n\t\t// TODO: Is that the best way to do this? maybe we should use a promise.all()\n\n\t\tstatistics.dashboardCount = settings.get('Engagement_Dashboard_Load_Count');\n\t\tstatistics.messageAuditApply = settings.get('Message_Auditing_Apply_Count');\n\t\tstatistics.messageAuditLoad = settings.get('Message_Auditing_Panel_Load_Count');\n\t\tstatistics.joinJitsiButton = settings.get('Jitsi_Click_To_Join_Count');\n\t\tstatistics.slashCommandsJitsi = settings.get('Jitsi_Start_SlashCommands_Count');\n\t\tstatistics.totalOTRRooms = await Rooms.countByCreatedOTR({ readPreference });\n\t\tstatistics.totalOTR = settings.get('OTR_Count');\n\t\tstatistics.totalBroadcastRooms = await Rooms.countByBroadcast({ readPreference });\n\t\tstatistics.totalTriggeredEmails = settings.get('Triggered_Emails_Count');\n\t\tstatistics.totalRoomsWithStarred = await Messages.countRoomsWithStarredMessages({ readPreference });\n\t\tstatistics.totalRoomsWithPinned = await Messages.countRoomsWithPinnedMessages({ readPreference });\n\t\tstatistics.totalUserTOTP = await Users.countActiveUsersTOTPEnable({ readPreference });\n\t\tstatistics.totalUserEmail2fa = await Users.countActiveUsersEmail2faEnable({ readPreference });\n\t\tstatistics.totalPinned = await Messages.countPinned({ readPreference });\n\t\tstatistics.totalStarred = await Messages.countStarred({ readPreference });\n\t\tstatistics.totalLinkInvitation = await Invites.estimatedDocumentCount();\n\t\tstatistics.totalLinkInvitationUses = await Invites.countUses();\n\t\tstatistics.totalEmailInvitation = settings.get('Invitation_Email_Count');\n\t\tstatistics.totalE2ERooms = await Rooms.countByE2E({ readPreference });\n\t\tstatistics.logoChange = Object.keys(settings.get('Assets_logo') || {}).includes('url');\n\t\tstatistics.showHomeButton = settings.get('Layout_Show_Home_Button');\n\t\tstatistics.totalEncryptedMessages = await Messages.countByType('e2e', { readPreference });\n\t\tstatistics.totalManuallyAddedUsers = settings.get('Manual_Entry_User_Count');\n\t\tstatistics.totalSubscriptionRoles = await RolesRaw.countByScope('Subscriptions', { readPreference });\n\t\tstatistics.totalUserRoles = await RolesRaw.countByScope('Users', { readPreference });\n\t\tstatistics.totalCustomRoles = await RolesRaw.countCustomRoles({ readPreference });\n\t\tstatistics.totalWebRTCCalls = settings.get('WebRTC_Calls_Count');\n\t\tstatistics.uncaughtExceptionsCount = settings.get('Uncaught_Exceptions_Count');\n\n\t\tconst defaultGateway = (await Settings.findOneById('Push_gateway', { projection: { packageValue: 1 } }))?.packageValue;\n\n\t\t// Push notification stats\n\t\t// one bit for each of the following:\n\t\tconst pushEnabled = settings.get('Push_enable') ? 1 : 0;\n\t\tconst pushGatewayEnabled = settings.get('Push_enable_gateway') ? 2 : 0;\n\t\tconst pushGatewayChanged = settings.get('Push_gateway') !== defaultGateway ? 4 : 0;\n\n\t\tstatistics.push = pushEnabled | pushGatewayEnabled | pushGatewayChanged;\n\t\tstatistics.pushSecured = settings.get<boolean>('Push_request_content_from_server');\n\n\t\tconst defaultHomeTitle = (await Settings.findOneById('Layout_Home_Title'))?.packageValue;\n\t\tstatistics.homeTitleChanged = settings.get('Layout_Home_Title') !== defaultHomeTitle;\n\n\t\tconst defaultHomeBody = (await Settings.findOneById('Layout_Home_Body'))?.packageValue;\n\t\tstatistics.homeBodyChanged = settings.get('Layout_Home_Body') !== defaultHomeBody;\n\n\t\tconst defaultCustomCSS = (await Settings.findOneById('theme-custom-css'))?.packageValue;\n\t\tstatistics.customCSSChanged = settings.get('theme-custom-css') !== defaultCustomCSS;\n\n\t\tconst defaultOnLogoutCustomScript = (await Settings.findOneById('Custom_Script_On_Logout'))?.packageValue;\n\t\tstatistics.onLogoutCustomScriptChanged = settings.get('Custom_Script_On_Logout') !== defaultOnLogoutCustomScript;\n\n\t\tconst defaultLoggedOutCustomScript = (await Settings.findOneById('Custom_Script_Logged_Out'))?.packageValue;\n\t\tstatistics.loggedOutCustomScriptChanged = settings.get('Custom_Script_Logged_Out') !== defaultLoggedOutCustomScript;\n\n\t\tconst defaultLoggedInCustomScript = (await Settings.findOneById('Custom_Script_Logged_In'))?.packageValue;\n\t\tstatistics.loggedInCustomScriptChanged = settings.get('Custom_Script_Logged_In') !== defaultLoggedInCustomScript;\n\n\t\ttry {\n\t\t\tstatistics.dailyPeakConnections = await Presence.getPeakConnections(true);\n\t\t} catch {\n\t\t\tstatistics.dailyPeakConnections = 0;\n\t\t}\n\n\t\tconst peak = await Statistics.findMonthlyPeakConnections();\n\t\tstatistics.maxMonthlyPeakConnections = Math.max(statistics.dailyPeakConnections, peak?.dailyPeakConnections || 0);\n\n\t\tstatistics.matrixFederation = await getMatrixFederationStatistics();\n\n\t\t// Omnichannel call stats\n\t\tstatistics.webRTCEnabled = settings.get('WebRTC_Enabled');\n\t\tstatistics.webRTCEnabledForOmnichannel = settings.get('Omnichannel_call_provider') === 'WebRTC';\n\t\tstatistics.omnichannelWebRTCCalls = await Rooms.findCountOfRoomsWithActiveCalls();\n\n\t\tawait Promise.all(statsPms).catch(log);\n\n\t\treturn statistics;\n\t},\n\tasync save(): Promise<IStats> {\n\t\tconst rcStatistics = await statistics.get();\n\t\trcStatistics.createdAt = new Date();\n\t\tconst { insertedId } = await Statistics.insertOne(rcStatistics);\n\t\trcStatistics._id = insertedId;\n\n\t\treturn rcStatistics;\n\t},\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b1903d124f2d6395b383f35cc55e5d3a39905092"}
