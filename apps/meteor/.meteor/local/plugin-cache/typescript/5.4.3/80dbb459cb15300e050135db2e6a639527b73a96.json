{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/server/methods/requestSubscriptionKeys.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/e2e/server/methods/requestSubscriptionKeys.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/server/methods/requestSubscriptionKeys.ts","inputSourceMap":{"version":3,"file":"app/e2e/server/methods/requestSubscriptionKeys.ts","sourceRoot":"","sources":["app/e2e/server/methods/requestSubscriptionKeys.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AAEjD,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC3D,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AASvC,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,6BAA6B;QAClC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC5D,MAAM,EAAE,yBAAyB;aACjC,CAAC,CAAC;QACJ,CAAC;QAED,gFAAgF;QAChF,MAAM,aAAa,GAAG,MAAM,aAAa,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;QACnF,MAAM,OAAO,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAEtE,oFAAoF;QACpF,MAAM,KAAK,GAAG;YACb,QAAQ,EAAE;gBACT,OAAO,EAAE,IAAI;aACb;YACD,GAAG,EAAE;gBACJ,GAAG,EAAE,OAAO;aACZ;SACD,CAAC;QAEF,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YAC5B,KAAK,GAAG,CAAC,SAAS,CAAC,uBAAuB,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACb,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Subscriptions, Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'e2e.requestSubscriptionKeys'(): boolean;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'e2e.requestSubscriptionKeys'() {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'requestSubscriptionKeys',\n\t\t\t});\n\t\t}\n\n\t\t// Get all encrypted rooms that the user is subscribed to and has no E2E key yet\n\t\tconst subscriptions = await Subscriptions.findByUserIdWithoutE2E(userId).toArray();\n\t\tconst roomIds = subscriptions.map((subscription) => subscription.rid);\n\n\t\t// For all subscriptions without E2E key, get the rooms that have encryption enabled\n\t\tconst query = {\n\t\t\te2eKeyId: {\n\t\t\t\t$exists: true,\n\t\t\t},\n\t\t\t_id: {\n\t\t\t\t$in: roomIds,\n\t\t\t},\n\t\t};\n\n\t\tconst rooms = Rooms.find(query);\n\t\tawait rooms.forEach((room) => {\n\t\t\tvoid api.broadcast('notify.e2e.keyRequest', room._id, room.e2eKeyId);\n\t\t});\n\n\t\treturn true;\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/server/methods/requestSubscriptionKeys.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/e2e/server/methods/requestSubscriptionKeys.ts","inputSourceMap":{"version":3,"file":"app/e2e/server/methods/requestSubscriptionKeys.ts","sourceRoot":"","sources":["app/e2e/server/methods/requestSubscriptionKeys.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AAEjD,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC3D,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AASvC,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,6BAA6B;QAClC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC5D,MAAM,EAAE,yBAAyB;aACjC,CAAC,CAAC;QACJ,CAAC;QAED,gFAAgF;QAChF,MAAM,aAAa,GAAG,MAAM,aAAa,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;QACnF,MAAM,OAAO,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAEtE,oFAAoF;QACpF,MAAM,KAAK,GAAG;YACb,QAAQ,EAAE;gBACT,OAAO,EAAE,IAAI;aACb;YACD,GAAG,EAAE;gBACJ,GAAG,EAAE,OAAO;aACZ;SACD,CAAC;QAEF,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YAC5B,KAAK,GAAG,CAAC,SAAS,CAAC,uBAAuB,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACb,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Subscriptions, Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'e2e.requestSubscriptionKeys'(): boolean;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'e2e.requestSubscriptionKeys'() {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'requestSubscriptionKeys',\n\t\t\t});\n\t\t}\n\n\t\t// Get all encrypted rooms that the user is subscribed to and has no E2E key yet\n\t\tconst subscriptions = await Subscriptions.findByUserIdWithoutE2E(userId).toArray();\n\t\tconst roomIds = subscriptions.map((subscription) => subscription.rid);\n\n\t\t// For all subscriptions without E2E key, get the rooms that have encryption enabled\n\t\tconst query = {\n\t\t\te2eKeyId: {\n\t\t\t\t$exists: true,\n\t\t\t},\n\t\t\t_id: {\n\t\t\t\t$in: roomIds,\n\t\t\t},\n\t\t};\n\n\t\tconst rooms = Rooms.find(query);\n\t\tawait rooms.forEach((room) => {\n\t\t\tvoid api.broadcast('notify.e2e.keyRequest', room._id, room.e2eKeyId);\n\t\t});\n\n\t\treturn true;\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let Subscriptions, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async 'e2e.requestSubscriptionKeys'() {\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'requestSubscriptionKeys'\n          });\n        }\n        // Get all encrypted rooms that the user is subscribed to and has no E2E key yet\n        const subscriptions = await Subscriptions.findByUserIdWithoutE2E(userId).toArray();\n        const roomIds = subscriptions.map(subscription => subscription.rid);\n        // For all subscriptions without E2E key, get the rooms that have encryption enabled\n        const query = {\n          e2eKeyId: {\n            $exists: true\n          },\n          _id: {\n            $in: roomIds\n          }\n        };\n        const rooms = Rooms.find(query);\n        await rooms.forEach(room => {\n          void api.broadcast('notify.e2e.keyRequest', room._id, room.e2eKeyId);\n        });\n        return true;\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["api","module","link","v","Subscriptions","Rooms","Meteor","__reifyWaitForDeps__","methods","e2e.requestSubscriptionKeys","userId","Error","method","subscriptions","findByUserIdWithoutE2E","toArray","roomIds","map","subscription","rid","query","e2eKeyId","$exists","_id","$in","rooms","find","forEach","room","broadcast","__reify_async_result__","_reifyError","self","async"],"sources":["app/e2e/server/methods/requestSubscriptionKeys.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Subscriptions, Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'e2e.requestSubscriptionKeys'(): boolean;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync 'e2e.requestSubscriptionKeys'() {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'requestSubscriptionKeys',\n\t\t\t});\n\t\t}\n\n\t\t// Get all encrypted rooms that the user is subscribed to and has no E2E key yet\n\t\tconst subscriptions = await Subscriptions.findByUserIdWithoutE2E(userId).toArray();\n\t\tconst roomIds = subscriptions.map((subscription) => subscription.rid);\n\n\t\t// For all subscriptions without E2E key, get the rooms that have encryption enabled\n\t\tconst query = {\n\t\t\te2eKeyId: {\n\t\t\t\t$exists: true,\n\t\t\t},\n\t\t\t_id: {\n\t\t\t\t$in: roomIds,\n\t\t\t},\n\t\t};\n\n\t\tconst rooms = Rooms.find(query);\n\t\tawait rooms.forEach((room) => {\n\t\t\tvoid api.broadcast('notify.e2e.keyRequest', room._id, room.e2eKeyId);\n\t\t});\n\n\t\treturn true;\n\t},\n});\n"],"mappings":";;;IAAA,IAAAA,GAAO;IAAAC,MAAO,CAAAC,IAAA,CAAM,4BAA4B,EAAC;MAAAF,IAAAG,CAAA;QAAAH,GAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,aAAA,EAAAC,KAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAE,cAAAD,CAAA;QAAAC,aAAA,GAAAD,CAAA;MAAA;MAAAE,MAAAF,CAAA;QAAAE,KAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,MAAA;IAAAL,MAAA,CAAAC,IAAA;MAAAI,OAAAH,CAAA;QAAAG,MAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,oBAAA,WAAAA,oBAAA;IAYjDD,MAAM,CAACE,OAAO,CAAgB;MAC7B,MAAM,6BAA6BC,CAAA;QAClC,MAAMC,MAAM,GAAGJ,MAAM,CAACI,MAAM,EAAE;QAC9B,IAAI,CAACA,MAAM,EAAE;UACZ,MAAM,IAAIJ,MAAM,CAACK,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAC5DC,MAAM,EAAE;WACR,CAAC;QACH;QAEA;QACA,MAAMC,aAAa,GAAG,MAAMT,aAAa,CAACU,sBAAsB,CAACJ,MAAM,CAAC,CAACK,OAAO,EAAE;QAClF,MAAMC,OAAO,GAAGH,aAAa,CAACI,GAAG,CAAEC,YAAY,IAAKA,YAAY,CAACC,GAAG,CAAC;QAErE;QACA,MAAMC,KAAK,GAAG;UACbC,QAAQ,EAAE;YACTC,OAAO,EAAE;WACT;UACDC,GAAG,EAAE;YACJC,GAAG,EAAER;;SAEN;QAED,MAAMS,KAAK,GAAGpB,KAAK,CAACqB,IAAI,CAACN,KAAK,CAAC;QAC/B,MAAMK,KAAK,CAACE,OAAO,CAAEC,IAAI,IAAI;UAC5B,KAAK5B,GAAG,CAAC6B,SAAS,CAAC,uBAAuB,EAAED,IAAI,CAACL,GAAG,EAAEK,IAAI,CAACP,QAAQ,CAAC;QACrE,CAAC,CAAC;QAEF,OAAO,IAAI;MACZ;KACA,CAAC;IAACS,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"80dbb459cb15300e050135db2e6a639527b73a96"}
