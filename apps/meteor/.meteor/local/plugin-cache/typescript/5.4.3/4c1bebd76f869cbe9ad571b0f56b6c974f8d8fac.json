{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/bot-helpers/server/index.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/bot-helpers/server/index.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/bot-helpers/server/index.ts","inputSourceMap":{"version":3,"file":"app/bot-helpers/server/index.ts","sourceRoot":"","sources":["app/bot-helpers/server/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { UserStatus } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter, FindCursor } from 'mongodb';\n\nimport { removeUserFromRoomMethod } from '../../../server/methods/removeUserFromRoom';\nimport { hasRoleAsync } from '../../authorization/server/functions/hasRole';\nimport { addUsersToRoomMethod } from '../../lib/server/methods/addUsersToRoom';\nimport { settings } from '../../settings/server';\n\n/**\n * BotHelpers helps bots\n * \"private\" properties use meteor collection cursors, so they stay reactive\n * \"public\" properties use getters to fetch and filter collections as array\n */\nclass BotHelpers {\n\tprivate queries: {\n\t\tonline: Filter<IUser>;\n\t\tusers: Filter<IUser>;\n\t};\n\n\tprivate userFields: Record<string, 1>;\n\n\tprivate _allUsers: FindCursor<IUser>;\n\n\tprivate _onlineUsers: FindCursor<IUser>;\n\n\tconstructor() {\n\t\tthis.queries = {\n\t\t\tonline: { status: { $ne: UserStatus.OFFLINE } },\n\t\t\tusers: { roles: { $not: { $all: ['bot'] } } },\n\t\t};\n\t}\n\n\t// setup collection cursors with array of fields from setting\n\tsetupCursors(fieldsSetting: string | string[]) {\n\t\tthis.userFields = {};\n\t\tif (typeof fieldsSetting === 'string') {\n\t\t\tfieldsSetting = fieldsSetting.split(',');\n\t\t}\n\t\tfieldsSetting.forEach((n) => {\n\t\t\tthis.userFields[n.trim()] = 1;\n\t\t});\n\t\tthis._allUsers = Users.find(this.queries.users, { projection: this.userFields });\n\t\tthis._onlineUsers = Users.find({ $and: [this.queries.users, this.queries.online] }, { projection: this.userFields });\n\t}\n\n\t// request methods or props as arguments to Meteor.call\n\tasync request(prop: keyof this, ...params: unknown[]): Promise<any> {\n\t\tconst p = this[prop];\n\n\t\tif (typeof p === 'undefined') {\n\t\t\treturn null;\n\t\t}\n\t\tif (typeof p === 'function') {\n\t\t\treturn p(...params);\n\t\t}\n\n\t\treturn p;\n\t}\n\n\tasync addUserToRole(userName: string, roleId: string): Promise<void> {\n\t\tawait Meteor.callAsync('authorization:addUserToRole', roleId, userName);\n\t}\n\n\tasync removeUserFromRole(userName: string, roleId: string): Promise<void> {\n\t\tawait Meteor.callAsync('authorization:removeUserFromRole', roleId, userName);\n\t}\n\n\tasync addUserToRoom(userName: string, room: string): Promise<void> {\n\t\tconst foundRoom = await Rooms.findOneByIdOrName(room);\n\n\t\tif (!foundRoom) {\n\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'addUserToRoom' });\n\t\t}\n\t\tawait addUsersToRoomMethod(userId, {\n\t\t\trid: foundRoom._id,\n\t\t\tusers: [userName],\n\t\t});\n\t}\n\n\tasync removeUserFromRoom(userName: string, room: string) {\n\t\tconst foundRoom = await Rooms.findOneByIdOrName(room);\n\n\t\tif (!foundRoom) {\n\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user');\n\t\t}\n\t\tawait removeUserFromRoomMethod(userId, { rid: foundRoom._id, username: userName });\n\t}\n\n\t// generic error whenever property access insufficient to fill request\n\trequestError() {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Bot request not allowed', {\n\t\t\tmethod: 'botRequest',\n\t\t\taction: 'bot_request',\n\t\t});\n\t}\n\n\t// \"public\" properties accessed by getters\n\t// allUsers / onlineUsers return whichever properties are enabled by settings\n\tget allUsers() {\n\t\tif (!Object.keys(this.userFields).length) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._allUsers.toArray();\n\t}\n\n\tget onlineUsers() {\n\t\tif (!Object.keys(this.userFields).length) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._onlineUsers.toArray();\n\t}\n\n\tget allUsernames() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('username')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._allUsers.toArray()).map((user) => user.username);\n\t\t})();\n\t}\n\n\tget onlineUsernames() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('username')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._onlineUsers.toArray()).map((user) => user.username);\n\t\t})();\n\t}\n\n\tget allNames() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('name')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._allUsers.toArray()).map((user) => user.name);\n\t\t})();\n\t}\n\n\tget onlineNames() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('name')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._onlineUsers.toArray()).map((user) => user.name);\n\t\t})();\n\t}\n\n\tget allIDs() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._allUsers.toArray()).map((user) => ({ id: user._id, name: user.username }));\n\t\t})();\n\t}\n\n\tget onlineIDs() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._onlineUsers.toArray()).map((user) => ({ id: user._id, name: user.username }));\n\t\t})();\n\t}\n}\n\n// add class to meteor methods\nconst botHelpers = new BotHelpers();\n\n// init cursors with fields setting and update on setting change\nsettings.watch<string>('BotHelpers_userFields', (value) => {\n\tbotHelpers.setupCursors(value);\n});\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tbotRequest: (prop: keyof BotHelpers, ...params: unknown[]) => Promise<unknown>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync botRequest(...args) {\n\t\tconst userID = Meteor.userId();\n\t\tif (userID && (await hasRoleAsync(userID, 'bot'))) {\n\t\t\treturn botHelpers.request(...args);\n\t\t}\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'botRequest' });\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/bot-helpers/server/index.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/bot-helpers/server/index.ts","inputSourceMap":{"version":3,"file":"app/bot-helpers/server/index.ts","sourceRoot":"","sources":["app/bot-helpers/server/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { UserStatus } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter, FindCursor } from 'mongodb';\n\nimport { removeUserFromRoomMethod } from '../../../server/methods/removeUserFromRoom';\nimport { hasRoleAsync } from '../../authorization/server/functions/hasRole';\nimport { addUsersToRoomMethod } from '../../lib/server/methods/addUsersToRoom';\nimport { settings } from '../../settings/server';\n\n/**\n * BotHelpers helps bots\n * \"private\" properties use meteor collection cursors, so they stay reactive\n * \"public\" properties use getters to fetch and filter collections as array\n */\nclass BotHelpers {\n\tprivate queries: {\n\t\tonline: Filter<IUser>;\n\t\tusers: Filter<IUser>;\n\t};\n\n\tprivate userFields: Record<string, 1>;\n\n\tprivate _allUsers: FindCursor<IUser>;\n\n\tprivate _onlineUsers: FindCursor<IUser>;\n\n\tconstructor() {\n\t\tthis.queries = {\n\t\t\tonline: { status: { $ne: UserStatus.OFFLINE } },\n\t\t\tusers: { roles: { $not: { $all: ['bot'] } } },\n\t\t};\n\t}\n\n\t// setup collection cursors with array of fields from setting\n\tsetupCursors(fieldsSetting: string | string[]) {\n\t\tthis.userFields = {};\n\t\tif (typeof fieldsSetting === 'string') {\n\t\t\tfieldsSetting = fieldsSetting.split(',');\n\t\t}\n\t\tfieldsSetting.forEach((n) => {\n\t\t\tthis.userFields[n.trim()] = 1;\n\t\t});\n\t\tthis._allUsers = Users.find(this.queries.users, { projection: this.userFields });\n\t\tthis._onlineUsers = Users.find({ $and: [this.queries.users, this.queries.online] }, { projection: this.userFields });\n\t}\n\n\t// request methods or props as arguments to Meteor.call\n\tasync request(prop: keyof this, ...params: unknown[]): Promise<any> {\n\t\tconst p = this[prop];\n\n\t\tif (typeof p === 'undefined') {\n\t\t\treturn null;\n\t\t}\n\t\tif (typeof p === 'function') {\n\t\t\treturn p(...params);\n\t\t}\n\n\t\treturn p;\n\t}\n\n\tasync addUserToRole(userName: string, roleId: string): Promise<void> {\n\t\tawait Meteor.callAsync('authorization:addUserToRole', roleId, userName);\n\t}\n\n\tasync removeUserFromRole(userName: string, roleId: string): Promise<void> {\n\t\tawait Meteor.callAsync('authorization:removeUserFromRole', roleId, userName);\n\t}\n\n\tasync addUserToRoom(userName: string, room: string): Promise<void> {\n\t\tconst foundRoom = await Rooms.findOneByIdOrName(room);\n\n\t\tif (!foundRoom) {\n\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'addUserToRoom' });\n\t\t}\n\t\tawait addUsersToRoomMethod(userId, {\n\t\t\trid: foundRoom._id,\n\t\t\tusers: [userName],\n\t\t});\n\t}\n\n\tasync removeUserFromRoom(userName: string, room: string) {\n\t\tconst foundRoom = await Rooms.findOneByIdOrName(room);\n\n\t\tif (!foundRoom) {\n\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user');\n\t\t}\n\t\tawait removeUserFromRoomMethod(userId, { rid: foundRoom._id, username: userName });\n\t}\n\n\t// generic error whenever property access insufficient to fill request\n\trequestError() {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Bot request not allowed', {\n\t\t\tmethod: 'botRequest',\n\t\t\taction: 'bot_request',\n\t\t});\n\t}\n\n\t// \"public\" properties accessed by getters\n\t// allUsers / onlineUsers return whichever properties are enabled by settings\n\tget allUsers() {\n\t\tif (!Object.keys(this.userFields).length) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._allUsers.toArray();\n\t}\n\n\tget onlineUsers() {\n\t\tif (!Object.keys(this.userFields).length) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._onlineUsers.toArray();\n\t}\n\n\tget allUsernames() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('username')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._allUsers.toArray()).map((user) => user.username);\n\t\t})();\n\t}\n\n\tget onlineUsernames() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('username')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._onlineUsers.toArray()).map((user) => user.username);\n\t\t})();\n\t}\n\n\tget allNames() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('name')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._allUsers.toArray()).map((user) => user.name);\n\t\t})();\n\t}\n\n\tget onlineNames() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('name')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._onlineUsers.toArray()).map((user) => user.name);\n\t\t})();\n\t}\n\n\tget allIDs() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._allUsers.toArray()).map((user) => ({ id: user._id, name: user.username }));\n\t\t})();\n\t}\n\n\tget onlineIDs() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._onlineUsers.toArray()).map((user) => ({ id: user._id, name: user.username }));\n\t\t})();\n\t}\n}\n\n// add class to meteor methods\nconst botHelpers = new BotHelpers();\n\n// init cursors with fields setting and update on setting change\nsettings.watch<string>('BotHelpers_userFields', (value) => {\n\tbotHelpers.setupCursors(value);\n});\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tbotRequest: (prop: keyof BotHelpers, ...params: unknown[]) => Promise<unknown>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync botRequest(...args) {\n\t\tconst userID = Meteor.userId();\n\t\tif (userID && (await hasRoleAsync(userID, 'bot'))) {\n\t\t\treturn botHelpers.request(...args);\n\t\t}\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'botRequest' });\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let UserStatus;\n    module.link(\"@rocket.chat/core-typings\", {\n      UserStatus(v) {\n        UserStatus = v;\n      }\n    }, 0);\n    let Rooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let removeUserFromRoomMethod;\n    module.link(\"../../../server/methods/removeUserFromRoom\", {\n      removeUserFromRoomMethod(v) {\n        removeUserFromRoomMethod = v;\n      }\n    }, 3);\n    let hasRoleAsync;\n    module.link(\"../../authorization/server/functions/hasRole\", {\n      hasRoleAsync(v) {\n        hasRoleAsync = v;\n      }\n    }, 4);\n    let addUsersToRoomMethod;\n    module.link(\"../../lib/server/methods/addUsersToRoom\", {\n      addUsersToRoomMethod(v) {\n        addUsersToRoomMethod = v;\n      }\n    }, 5);\n    let settings;\n    module.link(\"../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    /**\n     * BotHelpers helps bots\n     * \"private\" properties use meteor collection cursors, so they stay reactive\n     * \"public\" properties use getters to fetch and filter collections as array\n     */\n    class BotHelpers {\n      constructor() {\n        this.queries = void 0;\n        this.userFields = void 0;\n        this._allUsers = void 0;\n        this._onlineUsers = void 0;\n        this.queries = {\n          online: {\n            status: {\n              $ne: UserStatus.OFFLINE\n            }\n          },\n          users: {\n            roles: {\n              $not: {\n                $all: ['bot']\n              }\n            }\n          }\n        };\n      }\n      // setup collection cursors with array of fields from setting\n      setupCursors(fieldsSetting) {\n        this.userFields = {};\n        if (typeof fieldsSetting === 'string') {\n          fieldsSetting = fieldsSetting.split(',');\n        }\n        fieldsSetting.forEach(n => {\n          this.userFields[n.trim()] = 1;\n        });\n        this._allUsers = Users.find(this.queries.users, {\n          projection: this.userFields\n        });\n        this._onlineUsers = Users.find({\n          $and: [this.queries.users, this.queries.online]\n        }, {\n          projection: this.userFields\n        });\n      }\n      // request methods or props as arguments to Meteor.call\n      async request(prop) {\n        const p = this[prop];\n        if (typeof p === 'undefined') {\n          return null;\n        }\n        if (typeof p === 'function') {\n          for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            params[_key - 1] = arguments[_key];\n          }\n          return p(...params);\n        }\n        return p;\n      }\n      async addUserToRole(userName, roleId) {\n        await Meteor.callAsync('authorization:addUserToRole', roleId, userName);\n      }\n      async removeUserFromRole(userName, roleId) {\n        await Meteor.callAsync('authorization:removeUserFromRole', roleId, userName);\n      }\n      async addUserToRoom(userName, room) {\n        const foundRoom = await Rooms.findOneByIdOrName(room);\n        if (!foundRoom) {\n          throw new Meteor.Error('invalid-channel');\n        }\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'addUserToRoom'\n          });\n        }\n        await addUsersToRoomMethod(userId, {\n          rid: foundRoom._id,\n          users: [userName]\n        });\n      }\n      async removeUserFromRoom(userName, room) {\n        const foundRoom = await Rooms.findOneByIdOrName(room);\n        if (!foundRoom) {\n          throw new Meteor.Error('invalid-channel');\n        }\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user');\n        }\n        await removeUserFromRoomMethod(userId, {\n          rid: foundRoom._id,\n          username: userName\n        });\n      }\n      // generic error whenever property access insufficient to fill request\n      requestError() {\n        throw new Meteor.Error('error-not-allowed', 'Bot request not allowed', {\n          method: 'botRequest',\n          action: 'bot_request'\n        });\n      }\n      // \"public\" properties accessed by getters\n      // allUsers / onlineUsers return whichever properties are enabled by settings\n      get allUsers() {\n        if (!Object.keys(this.userFields).length) {\n          this.requestError();\n          return false;\n        }\n        return this._allUsers.toArray();\n      }\n      get onlineUsers() {\n        if (!Object.keys(this.userFields).length) {\n          this.requestError();\n          return false;\n        }\n        return this._onlineUsers.toArray();\n      }\n      get allUsernames() {\n        return (async () => {\n          if (!this.userFields.hasOwnProperty('username')) {\n            this.requestError();\n            return false;\n          }\n          return (await this._allUsers.toArray()).map(user => user.username);\n        })();\n      }\n      get onlineUsernames() {\n        return (async () => {\n          if (!this.userFields.hasOwnProperty('username')) {\n            this.requestError();\n            return false;\n          }\n          return (await this._onlineUsers.toArray()).map(user => user.username);\n        })();\n      }\n      get allNames() {\n        return (async () => {\n          if (!this.userFields.hasOwnProperty('name')) {\n            this.requestError();\n            return false;\n          }\n          return (await this._allUsers.toArray()).map(user => user.name);\n        })();\n      }\n      get onlineNames() {\n        return (async () => {\n          if (!this.userFields.hasOwnProperty('name')) {\n            this.requestError();\n            return false;\n          }\n          return (await this._onlineUsers.toArray()).map(user => user.name);\n        })();\n      }\n      get allIDs() {\n        return (async () => {\n          if (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n            this.requestError();\n            return false;\n          }\n          return (await this._allUsers.toArray()).map(user => ({\n            id: user._id,\n            name: user.username\n          }));\n        })();\n      }\n      get onlineIDs() {\n        return (async () => {\n          if (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n            this.requestError();\n            return false;\n          }\n          return (await this._onlineUsers.toArray()).map(user => ({\n            id: user._id,\n            name: user.username\n          }));\n        })();\n      }\n    }\n    // add class to meteor methods\n    const botHelpers = new BotHelpers();\n    // init cursors with fields setting and update on setting change\n    settings.watch('BotHelpers_userFields', value => {\n      botHelpers.setupCursors(value);\n    });\n    Meteor.methods({\n      async botRequest() {\n        const userID = Meteor.userId();\n        if (userID && (await hasRoleAsync(userID, 'bot'))) {\n          return botHelpers.request(...arguments);\n        }\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'botRequest'\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["UserStatus","module","link","v","Rooms","Users","Meteor","removeUserFromRoomMethod","hasRoleAsync","addUsersToRoomMethod","settings","__reifyWaitForDeps__","BotHelpers","constructor","queries","userFields","_allUsers","_onlineUsers","online","status","$ne","OFFLINE","users","roles","$not","$all","setupCursors","fieldsSetting","split","forEach","n","trim","find","projection","$and","request","prop","p","_len","arguments","length","params","Array","_key","addUserToRole","userName","roleId","callAsync","removeUserFromRole","addUserToRoom","room","foundRoom","findOneByIdOrName","Error","userId","method","rid","_id","removeUserFromRoom","username","requestError","action","allUsers","Object","keys","toArray","onlineUsers","allUsernames","hasOwnProperty","map","user","onlineUsernames","allNames","name","onlineNames","allIDs","id","onlineIDs","botHelpers","watch","value","methods","botRequest","userID","__reify_async_result__","_reifyError","self","async"],"sources":["app/bot-helpers/server/index.ts"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { UserStatus } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter, FindCursor } from 'mongodb';\n\nimport { removeUserFromRoomMethod } from '../../../server/methods/removeUserFromRoom';\nimport { hasRoleAsync } from '../../authorization/server/functions/hasRole';\nimport { addUsersToRoomMethod } from '../../lib/server/methods/addUsersToRoom';\nimport { settings } from '../../settings/server';\n\n/**\n * BotHelpers helps bots\n * \"private\" properties use meteor collection cursors, so they stay reactive\n * \"public\" properties use getters to fetch and filter collections as array\n */\nclass BotHelpers {\n\tprivate queries: {\n\t\tonline: Filter<IUser>;\n\t\tusers: Filter<IUser>;\n\t};\n\n\tprivate userFields: Record<string, 1>;\n\n\tprivate _allUsers: FindCursor<IUser>;\n\n\tprivate _onlineUsers: FindCursor<IUser>;\n\n\tconstructor() {\n\t\tthis.queries = {\n\t\t\tonline: { status: { $ne: UserStatus.OFFLINE } },\n\t\t\tusers: { roles: { $not: { $all: ['bot'] } } },\n\t\t};\n\t}\n\n\t// setup collection cursors with array of fields from setting\n\tsetupCursors(fieldsSetting: string | string[]) {\n\t\tthis.userFields = {};\n\t\tif (typeof fieldsSetting === 'string') {\n\t\t\tfieldsSetting = fieldsSetting.split(',');\n\t\t}\n\t\tfieldsSetting.forEach((n) => {\n\t\t\tthis.userFields[n.trim()] = 1;\n\t\t});\n\t\tthis._allUsers = Users.find(this.queries.users, { projection: this.userFields });\n\t\tthis._onlineUsers = Users.find({ $and: [this.queries.users, this.queries.online] }, { projection: this.userFields });\n\t}\n\n\t// request methods or props as arguments to Meteor.call\n\tasync request(prop: keyof this, ...params: unknown[]): Promise<any> {\n\t\tconst p = this[prop];\n\n\t\tif (typeof p === 'undefined') {\n\t\t\treturn null;\n\t\t}\n\t\tif (typeof p === 'function') {\n\t\t\treturn p(...params);\n\t\t}\n\n\t\treturn p;\n\t}\n\n\tasync addUserToRole(userName: string, roleId: string): Promise<void> {\n\t\tawait Meteor.callAsync('authorization:addUserToRole', roleId, userName);\n\t}\n\n\tasync removeUserFromRole(userName: string, roleId: string): Promise<void> {\n\t\tawait Meteor.callAsync('authorization:removeUserFromRole', roleId, userName);\n\t}\n\n\tasync addUserToRoom(userName: string, room: string): Promise<void> {\n\t\tconst foundRoom = await Rooms.findOneByIdOrName(room);\n\n\t\tif (!foundRoom) {\n\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'addUserToRoom' });\n\t\t}\n\t\tawait addUsersToRoomMethod(userId, {\n\t\t\trid: foundRoom._id,\n\t\t\tusers: [userName],\n\t\t});\n\t}\n\n\tasync removeUserFromRoom(userName: string, room: string) {\n\t\tconst foundRoom = await Rooms.findOneByIdOrName(room);\n\n\t\tif (!foundRoom) {\n\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user');\n\t\t}\n\t\tawait removeUserFromRoomMethod(userId, { rid: foundRoom._id, username: userName });\n\t}\n\n\t// generic error whenever property access insufficient to fill request\n\trequestError() {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Bot request not allowed', {\n\t\t\tmethod: 'botRequest',\n\t\t\taction: 'bot_request',\n\t\t});\n\t}\n\n\t// \"public\" properties accessed by getters\n\t// allUsers / onlineUsers return whichever properties are enabled by settings\n\tget allUsers() {\n\t\tif (!Object.keys(this.userFields).length) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._allUsers.toArray();\n\t}\n\n\tget onlineUsers() {\n\t\tif (!Object.keys(this.userFields).length) {\n\t\t\tthis.requestError();\n\t\t\treturn false;\n\t\t}\n\t\treturn this._onlineUsers.toArray();\n\t}\n\n\tget allUsernames() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('username')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._allUsers.toArray()).map((user) => user.username);\n\t\t})();\n\t}\n\n\tget onlineUsernames() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('username')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._onlineUsers.toArray()).map((user) => user.username);\n\t\t})();\n\t}\n\n\tget allNames() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('name')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._allUsers.toArray()).map((user) => user.name);\n\t\t})();\n\t}\n\n\tget onlineNames() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('name')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._onlineUsers.toArray()).map((user) => user.name);\n\t\t})();\n\t}\n\n\tget allIDs() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._allUsers.toArray()).map((user) => ({ id: user._id, name: user.username }));\n\t\t})();\n\t}\n\n\tget onlineIDs() {\n\t\treturn (async () => {\n\t\t\tif (!this.userFields.hasOwnProperty('_id') || !this.userFields.hasOwnProperty('username')) {\n\t\t\t\tthis.requestError();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn (await this._onlineUsers.toArray()).map((user) => ({ id: user._id, name: user.username }));\n\t\t})();\n\t}\n}\n\n// add class to meteor methods\nconst botHelpers = new BotHelpers();\n\n// init cursors with fields setting and update on setting change\nsettings.watch<string>('BotHelpers_userFields', (value) => {\n\tbotHelpers.setupCursors(value);\n});\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tbotRequest: (prop: keyof BotHelpers, ...params: unknown[]) => Promise<unknown>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync botRequest(...args) {\n\t\tconst userID = Meteor.userId();\n\t\tif (userID && (await hasRoleAsync(userID, 'bot'))) {\n\t\t\treturn botHelpers.request(...args);\n\t\t}\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'botRequest' });\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"4c1bebd76f869cbe9ad571b0f56b6c974f8d8fac"}
