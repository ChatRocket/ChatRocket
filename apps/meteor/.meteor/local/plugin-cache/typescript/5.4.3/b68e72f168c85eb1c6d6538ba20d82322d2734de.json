{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/dataExport/processDataDownloads.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/dataExport/processDataDownloads.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/dataExport/processDataDownloads.ts","inputSourceMap":{"version":3,"file":"server/lib/dataExport/processDataDownloads.ts","sourceRoot":"","sources":["server/lib/dataExport/processDataDownloads.ts"],"names":[],"mappings":"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","sourcesContent":["import { createWriteStream } from 'fs';\nimport { access, mkdir, rm, writeFile } from 'fs/promises';\n\nimport type { IExportOperation, IUser, RoomType } from '@rocket.chat/core-typings';\nimport { Avatars, ExportOperations, UserDataFiles, Subscriptions } from '@rocket.chat/models';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { settings } from '../../../app/settings/server';\nimport { getURL } from '../../../app/utils/server/getURL';\nimport { joinPath } from '../fileUtils';\nimport { i18n } from '../i18n';\nimport { copyFileUpload } from './copyFileUpload';\nimport { exportRoomMessagesToFile } from './exportRoomMessagesToFile';\nimport { getPath } from './getPath';\nimport { getRoomData } from './getRoomData';\nimport { makeZipFile } from './makeZipFile';\nimport { sendEmail } from './sendEmail';\nimport { uploadZipFile } from './uploadZipFile';\n\nconst loadUserSubscriptions = async (_exportOperation: IExportOperation, fileType: 'json' | 'html', userId: IUser['_id']) => {\n\tconst roomList: (\n\t\t| {\n\t\t\t\troomId: string;\n\t\t\t\troomName: string;\n\t\t\t\tuserId: string | undefined;\n\t\t\t\texportedCount: number;\n\t\t\t\tstatus: string;\n\t\t\t\ttype: RoomType;\n\t\t\t\ttargetFile: string;\n\t\t  }\n\t\t| Record<string, never>\n\t)[] = [];\n\n\tconst cursor = Subscriptions.findByUserId(userId);\n\tfor await (const subscription of cursor) {\n\t\tconst roomData = await getRoomData(subscription.rid, userId);\n\t\troomData.targetFile = `${(fileType === 'json' && roomData.roomName) || subscription.rid}.${fileType}`;\n\n\t\troomList.push(roomData);\n\t}\n\n\treturn roomList;\n};\n\nconst generateUserFile = async (exportOperation: IExportOperation, userData?: IUser) => {\n\tif (!userData) {\n\t\treturn;\n\t}\n\n\tawait mkdir(exportOperation.exportPath, { recursive: true });\n\n\tconst { username, name, statusText, emails, roles, services } = userData;\n\n\tconst dataToSave = {\n\t\tusername,\n\t\tname,\n\t\tstatusText,\n\t\temails: emails?.map(({ address }) => address),\n\t\troles,\n\t\tservices: services ? Object.keys(services) : undefined,\n\t};\n\n\tconst fileName = joinPath(exportOperation.exportPath, exportOperation.fullExport ? 'user.json' : 'user.html');\n\n\tif (exportOperation.fullExport) {\n\t\tawait writeFile(fileName, JSON.stringify(dataToSave), { encoding: 'utf8' });\n\n\t\texportOperation.generatedUserFile = true;\n\t\treturn;\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst stream = createWriteStream(fileName, { encoding: 'utf8' });\n\n\t\tstream.on('finish', resolve);\n\t\tstream.on('error', reject);\n\n\t\tstream.write('<!DOCTYPE html>\\n');\n\t\tstream.write('<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n');\n\t\tfor (const [key, value] of Object.entries(dataToSave)) {\n\t\t\tstream.write(`<p><strong>${key}</strong>:`);\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tstream.write(value);\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\tstream.write('<br/>');\n\n\t\t\t\tfor (const item of value) {\n\t\t\t\t\tstream.write(`${item}<br/>`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstream.write('</p>\\n');\n\t\t}\n\n\t\tstream.end();\n\t});\n};\n\nconst generateUserAvatarFile = async (exportOperation: IExportOperation, userData?: IUser) => {\n\tif (!userData?.username) {\n\t\treturn;\n\t}\n\n\tawait mkdir(exportOperation.exportPath, { recursive: true });\n\n\tconst file = await Avatars.findOneByName(userData.username);\n\tif (!file) {\n\t\treturn;\n\t}\n\n\tconst filePath = joinPath(exportOperation.exportPath, 'avatar');\n\tif (await FileUpload.copy?.(file, filePath)) {\n\t\texportOperation.generatedAvatar = true;\n\t}\n};\n\nconst generateChannelsFile = async (type: 'json' | 'html', exportPath: string, exportOperation: IExportOperation) => {\n\tif (type !== 'json') {\n\t\treturn;\n\t}\n\n\tawait mkdir(exportOperation.exportPath, { recursive: true });\n\n\tconst fileName = joinPath(exportPath, 'channels.json');\n\tawait writeFile(\n\t\tfileName,\n\t\texportOperation.roomList\n\t\t\t?.map((roomData) =>\n\t\t\t\tJSON.stringify({\n\t\t\t\t\troomId: roomData.roomId,\n\t\t\t\t\troomName: roomData.roomName,\n\t\t\t\t\ttype: roomData.type,\n\t\t\t\t}),\n\t\t\t)\n\t\t\t?.join('\\n') ?? '',\n\t);\n};\n\nconst isExportComplete = (exportOperation: IExportOperation) => {\n\tconst incomplete = exportOperation.roomList?.some((exportOpRoomData) => exportOpRoomData.status !== 'completed') ?? false;\n\n\treturn !incomplete;\n};\n\nconst continueExportOperation = async function (exportOperation: IExportOperation): Promise<void> {\n\tif (exportOperation.status === 'completed') {\n\t\treturn;\n\t}\n\n\tconst exportType = exportOperation.fullExport ? 'json' : 'html';\n\n\tif (!exportOperation.roomList) {\n\t\texportOperation.roomList = await loadUserSubscriptions(exportOperation, exportType, exportOperation.userId);\n\n\t\tif (exportOperation.fullExport) {\n\t\t\texportOperation.status = 'exporting-rooms';\n\t\t} else {\n\t\t\texportOperation.status = 'exporting';\n\t\t}\n\t}\n\n\ttry {\n\t\tif (!exportOperation.generatedUserFile) {\n\t\t\tawait generateUserFile(exportOperation, exportOperation.userData);\n\t\t}\n\n\t\tif (!exportOperation.generatedAvatar) {\n\t\t\tawait generateUserAvatarFile(exportOperation, exportOperation.userData);\n\t\t}\n\n\t\tif (exportOperation.status === 'exporting-rooms') {\n\t\t\tawait generateChannelsFile(exportType, exportOperation.exportPath, exportOperation);\n\n\t\t\texportOperation.status = 'exporting';\n\t\t}\n\n\t\t// Run every room on every request, to avoid missing new messages on the rooms that finished first.\n\t\tif (exportOperation.status === 'exporting') {\n\t\t\tconst { fileList } = await exportRoomMessagesToFile(\n\t\t\t\texportOperation.exportPath,\n\t\t\t\texportOperation.assetsPath,\n\t\t\t\texportType,\n\t\t\t\texportOperation.roomList,\n\t\t\t\texportOperation.userData,\n\t\t\t\t{},\n\t\t\t\texportOperation.userNameTable,\n\t\t\t);\n\t\t\tif (!exportOperation.fileList) {\n\t\t\t\texportOperation.fileList = [];\n\t\t\t}\n\t\t\texportOperation.fileList.push(...fileList);\n\n\t\t\tif (isExportComplete(exportOperation)) {\n\t\t\t\texportOperation.status = 'downloading';\n\t\t\t}\n\t\t}\n\n\t\tconst generatedFileName = uuidv4();\n\t\tconst zipFolder = settings.get<string>('UserData_FileSystemZipPath')?.trim() || '/tmp/zipFiles';\n\n\t\tif (exportOperation.status === 'downloading') {\n\t\t\tfor await (const attachmentData of exportOperation.fileList) {\n\t\t\t\tawait copyFileUpload(attachmentData, exportOperation.assetsPath);\n\t\t\t}\n\n\t\t\tconst targetFile = joinPath(zipFolder, `${generatedFileName}.zip`);\n\t\t\tawait rm(targetFile, { force: true });\n\n\t\t\texportOperation.status = 'compressing';\n\t\t}\n\n\t\tif (exportOperation.status === 'compressing') {\n\t\t\tawait mkdir(zipFolder, { recursive: true });\n\n\t\t\texportOperation.generatedFile = joinPath(zipFolder, `${generatedFileName}.zip`);\n\t\t\ttry {\n\t\t\t\tawait access(exportOperation.generatedFile);\n\t\t\t} catch (error) {\n\t\t\t\tawait makeZipFile(exportOperation.exportPath, exportOperation.generatedFile);\n\t\t\t}\n\n\t\t\texportOperation.status = 'uploading';\n\t\t}\n\n\t\tif (exportOperation.status === 'uploading') {\n\t\t\tif (!exportOperation.generatedFile) {\n\t\t\t\tthrow new Error('No generated file');\n\t\t\t}\n\n\t\t\tconst { _id: fileId } = await uploadZipFile(exportOperation.generatedFile, exportOperation.userId, exportType);\n\t\t\texportOperation.fileId = fileId;\n\n\t\t\texportOperation.status = 'completed';\n\t\t\tawait ExportOperations.updateOperation(exportOperation);\n\t\t}\n\n\t\tawait ExportOperations.updateOperation(exportOperation);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n};\n\nexport async function processDataDownloads(): Promise<void> {\n\tconst operation = await ExportOperations.findOnePending();\n\tif (!operation) {\n\t\treturn;\n\t}\n\n\tif (operation.status === 'completed') {\n\t\treturn;\n\t}\n\n\tif (operation.status !== 'pending') {\n\t\t// If the operation has started but was not updated in over a day, then skip it\n\t\tif (operation._updatedAt && moment().diff(moment(operation._updatedAt), 'days') > 1) {\n\t\t\toperation.status = 'skipped';\n\t\t\tawait ExportOperations.updateOperation(operation);\n\t\t\treturn processDataDownloads();\n\t\t}\n\t}\n\n\tawait continueExportOperation(operation);\n\tawait ExportOperations.updateOperation(operation);\n\n\tif (operation.status === 'completed') {\n\t\tconst file = operation.fileId\n\t\t\t? await UserDataFiles.findOneById(operation.fileId)\n\t\t\t: await UserDataFiles.findLastFileByUser(operation.userId);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subject = i18n.t('UserDataDownload_EmailSubject');\n\t\tconst body = i18n.t('UserDataDownload_EmailBody', {\n\t\t\tdownload_link: getURL(getPath(file._id), { cdn: false, full: true }),\n\t\t});\n\n\t\tawait sendEmail(operation.userData, subject, body);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/dataExport/processDataDownloads.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/dataExport/processDataDownloads.ts","inputSourceMap":{"version":3,"file":"server/lib/dataExport/processDataDownloads.ts","sourceRoot":"","sources":["server/lib/dataExport/processDataDownloads.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,IAAI,CAAC;AACvC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAG3D,OAAO,EAAE,OAAO,EAAE,gBAAgB,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAC9F,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,EAAE,IAAI,MAAM,EAAE,MAAM,MAAM,CAAC;AAEpC,OAAO,EAAE,UAAU,EAAE,MAAM,iCAAiC,CAAC;AAC7D,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAE,MAAM,EAAE,MAAM,kCAAkC,CAAC;AAC1D,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,OAAO,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AAC/B,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACtE,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD,MAAM,qBAAqB,GAAG,KAAK,EAAE,gBAAkC,EAAE,QAAyB,EAAE,MAAoB,EAAE,EAAE;IAC3H,MAAM,QAAQ,GAWR,EAAE,CAAC;IAET,MAAM,MAAM,GAAG,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAClD,IAAI,KAAK,EAAE,MAAM,YAAY,IAAI,MAAM,EAAE,CAAC;QACzC,MAAM,QAAQ,GAAG,MAAM,WAAW,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAC7D,QAAQ,CAAC,UAAU,GAAG,GAAG,CAAC,QAAQ,KAAK,MAAM,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,YAAY,CAAC,GAAG,IAAI,QAAQ,EAAE,CAAC;QAEtG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzB,CAAC;IAED,OAAO,QAAQ,CAAC;AACjB,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAG,KAAK,EAAE,eAAiC,EAAE,QAAgB,EAAE,EAAE;IACtF,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,OAAO;IACR,CAAC;IAED,MAAM,KAAK,CAAC,eAAe,CAAC,UAAU,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAE7D,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAC;IAEzE,MAAM,UAAU,GAAG;QAClB,QAAQ;QACR,IAAI;QACJ,UAAU;QACV,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC;QAC7C,KAAK;QACL,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;KACtD,CAAC;IAEF,MAAM,QAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC,UAAU,EAAE,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;IAE9G,IAAI,eAAe,CAAC,UAAU,EAAE,CAAC;QAChC,MAAM,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;QAE5E,eAAe,CAAC,iBAAiB,GAAG,IAAI,CAAC;QACzC,OAAO;IACR,CAAC;IAED,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACtC,MAAM,MAAM,GAAG,iBAAiB,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;QAEjE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC7B,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAE3B,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC,uEAAuE,CAAC,CAAC;QACtF,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;YACvD,MAAM,CAAC,KAAK,CAAC,cAAc,GAAG,YAAY,CAAC,CAAC;YAC5C,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;gBAC/B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC;iBAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;gBACjC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAEtB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;oBAC1B,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC;gBAC9B,CAAC;YACF,CAAC;YAED,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC;QAED,MAAM,CAAC,GAAG,EAAE,CAAC;IACd,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,sBAAsB,GAAG,KAAK,EAAE,eAAiC,EAAE,QAAgB,EAAE,EAAE;IAC5F,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC;QACzB,OAAO;IACR,CAAC;IAED,MAAM,KAAK,CAAC,eAAe,CAAC,UAAU,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAE7D,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC5D,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,OAAO;IACR,CAAC;IAED,MAAM,QAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAChE,IAAI,MAAM,UAAU,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC;QAC7C,eAAe,CAAC,eAAe,GAAG,IAAI,CAAC;IACxC,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,oBAAoB,GAAG,KAAK,EAAE,IAAqB,EAAE,UAAkB,EAAE,eAAiC,EAAE,EAAE;IACnH,IAAI,IAAI,KAAK,MAAM,EAAE,CAAC;QACrB,OAAO;IACR,CAAC;IAED,MAAM,KAAK,CAAC,eAAe,CAAC,UAAU,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAE7D,MAAM,QAAQ,GAAG,QAAQ,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;IACvD,MAAM,SAAS,CACd,QAAQ,EACR,eAAe,CAAC,QAAQ;QACvB,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE,CAClB,IAAI,CAAC,SAAS,CAAC;QACd,MAAM,EAAE,QAAQ,CAAC,MAAM;QACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;QAC3B,IAAI,EAAE,QAAQ,CAAC,IAAI;KACnB,CAAC,CACF;QACD,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CACnB,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAG,CAAC,eAAiC,EAAE,EAAE;IAC9D,MAAM,UAAU,GAAG,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,gBAAgB,EAAE,EAAE,CAAC,gBAAgB,CAAC,MAAM,KAAK,WAAW,CAAC,IAAI,KAAK,CAAC;IAE1H,OAAO,CAAC,UAAU,CAAC;AACpB,CAAC,CAAC;AAEF,MAAM,uBAAuB,GAAG,KAAK,WAAW,eAAiC;IAChF,IAAI,eAAe,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;QAC5C,OAAO;IACR,CAAC;IAED,MAAM,UAAU,GAAG,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;IAEhE,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;QAC/B,eAAe,CAAC,QAAQ,GAAG,MAAM,qBAAqB,CAAC,eAAe,EAAE,UAAU,EAAE,eAAe,CAAC,MAAM,CAAC,CAAC;QAE5G,IAAI,eAAe,CAAC,UAAU,EAAE,CAAC;YAChC,eAAe,CAAC,MAAM,GAAG,iBAAiB,CAAC;QAC5C,CAAC;aAAM,CAAC;YACP,eAAe,CAAC,MAAM,GAAG,WAAW,CAAC;QACtC,CAAC;IACF,CAAC;IAED,IAAI,CAAC;QACJ,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC;YACxC,MAAM,gBAAgB,CAAC,eAAe,EAAE,eAAe,CAAC,QAAQ,CAAC,CAAC;QACnE,CAAC;QAED,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;YACtC,MAAM,sBAAsB,CAAC,eAAe,EAAE,eAAe,CAAC,QAAQ,CAAC,CAAC;QACzE,CAAC;QAED,IAAI,eAAe,CAAC,MAAM,KAAK,iBAAiB,EAAE,CAAC;YAClD,MAAM,oBAAoB,CAAC,UAAU,EAAE,eAAe,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;YAEpF,eAAe,CAAC,MAAM,GAAG,WAAW,CAAC;QACtC,CAAC;QAED,mGAAmG;QACnG,IAAI,eAAe,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;YAC5C,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,wBAAwB,CAClD,eAAe,CAAC,UAAU,EAC1B,eAAe,CAAC,UAAU,EAC1B,UAAU,EACV,eAAe,CAAC,QAAQ,EACxB,eAAe,CAAC,QAAQ,EACxB,EAAE,EACF,eAAe,CAAC,aAAa,CAC7B,CAAC;YACF,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;gBAC/B,eAAe,CAAC,QAAQ,GAAG,EAAE,CAAC;YAC/B,CAAC;YACD,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;YAE3C,IAAI,gBAAgB,CAAC,eAAe,CAAC,EAAE,CAAC;gBACvC,eAAe,CAAC,MAAM,GAAG,aAAa,CAAC;YACxC,CAAC;QACF,CAAC;QAED,MAAM,iBAAiB,GAAG,MAAM,EAAE,CAAC;QACnC,MAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAS,4BAA4B,CAAC,EAAE,IAAI,EAAE,IAAI,eAAe,CAAC;QAEhG,IAAI,eAAe,CAAC,MAAM,KAAK,aAAa,EAAE,CAAC;YAC9C,IAAI,KAAK,EAAE,MAAM,cAAc,IAAI,eAAe,CAAC,QAAQ,EAAE,CAAC;gBAC7D,MAAM,cAAc,CAAC,cAAc,EAAE,eAAe,CAAC,UAAU,CAAC,CAAC;YAClE,CAAC;YAED,MAAM,UAAU,GAAG,QAAQ,CAAC,SAAS,EAAE,GAAG,iBAAiB,MAAM,CAAC,CAAC;YACnE,MAAM,EAAE,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YAEtC,eAAe,CAAC,MAAM,GAAG,aAAa,CAAC;QACxC,CAAC;QAED,IAAI,eAAe,CAAC,MAAM,KAAK,aAAa,EAAE,CAAC;YAC9C,MAAM,KAAK,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;YAE5C,eAAe,CAAC,aAAa,GAAG,QAAQ,CAAC,SAAS,EAAE,GAAG,iBAAiB,MAAM,CAAC,CAAC;YAChF,IAAI,CAAC;gBACJ,MAAM,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;YAC7C,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBAChB,MAAM,WAAW,CAAC,eAAe,CAAC,UAAU,EAAE,eAAe,CAAC,aAAa,CAAC,CAAC;YAC9E,CAAC;YAED,eAAe,CAAC,MAAM,GAAG,WAAW,CAAC;QACtC,CAAC;QAED,IAAI,eAAe,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;YAC5C,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;gBACpC,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACtC,CAAC;YAED,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,MAAM,aAAa,CAAC,eAAe,CAAC,aAAa,EAAE,eAAe,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;YAC/G,eAAe,CAAC,MAAM,GAAG,MAAM,CAAC;YAEhC,eAAe,CAAC,MAAM,GAAG,WAAW,CAAC;YACrC,MAAM,gBAAgB,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;QACzD,CAAC;QAED,MAAM,gBAAgB,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;IACzD,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACZ,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,KAAK,UAAU,oBAAoB;IACzC,MAAM,SAAS,GAAG,MAAM,gBAAgB,CAAC,cAAc,EAAE,CAAC;IAC1D,IAAI,CAAC,SAAS,EAAE,CAAC;QAChB,OAAO;IACR,CAAC;IAED,IAAI,SAAS,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;QACtC,OAAO;IACR,CAAC;IAED,IAAI,SAAS,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;QACpC,+EAA+E;QAC/E,IAAI,SAAS,CAAC,UAAU,IAAI,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;YACrF,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC;YAC7B,MAAM,gBAAgB,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;YAClD,OAAO,oBAAoB,EAAE,CAAC;QAC/B,CAAC;IACF,CAAC;IAED,MAAM,uBAAuB,CAAC,SAAS,CAAC,CAAC;IACzC,MAAM,gBAAgB,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAElD,IAAI,SAAS,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;QACtC,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM;YAC5B,CAAC,CAAC,MAAM,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC;YACnD,CAAC,CAAC,MAAM,aAAa,CAAC,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QAED,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,+BAA+B,CAAC,CAAC;QACxD,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,4BAA4B,EAAE;YACjD,aAAa,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;SACpE,CAAC,CAAC;QAEH,MAAM,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;AACF,CAAC","sourcesContent":["import { createWriteStream } from 'fs';\nimport { access, mkdir, rm, writeFile } from 'fs/promises';\n\nimport type { IExportOperation, IUser, RoomType } from '@rocket.chat/core-typings';\nimport { Avatars, ExportOperations, UserDataFiles, Subscriptions } from '@rocket.chat/models';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { settings } from '../../../app/settings/server';\nimport { getURL } from '../../../app/utils/server/getURL';\nimport { joinPath } from '../fileUtils';\nimport { i18n } from '../i18n';\nimport { copyFileUpload } from './copyFileUpload';\nimport { exportRoomMessagesToFile } from './exportRoomMessagesToFile';\nimport { getPath } from './getPath';\nimport { getRoomData } from './getRoomData';\nimport { makeZipFile } from './makeZipFile';\nimport { sendEmail } from './sendEmail';\nimport { uploadZipFile } from './uploadZipFile';\n\nconst loadUserSubscriptions = async (_exportOperation: IExportOperation, fileType: 'json' | 'html', userId: IUser['_id']) => {\n\tconst roomList: (\n\t\t| {\n\t\t\t\troomId: string;\n\t\t\t\troomName: string;\n\t\t\t\tuserId: string | undefined;\n\t\t\t\texportedCount: number;\n\t\t\t\tstatus: string;\n\t\t\t\ttype: RoomType;\n\t\t\t\ttargetFile: string;\n\t\t  }\n\t\t| Record<string, never>\n\t)[] = [];\n\n\tconst cursor = Subscriptions.findByUserId(userId);\n\tfor await (const subscription of cursor) {\n\t\tconst roomData = await getRoomData(subscription.rid, userId);\n\t\troomData.targetFile = `${(fileType === 'json' && roomData.roomName) || subscription.rid}.${fileType}`;\n\n\t\troomList.push(roomData);\n\t}\n\n\treturn roomList;\n};\n\nconst generateUserFile = async (exportOperation: IExportOperation, userData?: IUser) => {\n\tif (!userData) {\n\t\treturn;\n\t}\n\n\tawait mkdir(exportOperation.exportPath, { recursive: true });\n\n\tconst { username, name, statusText, emails, roles, services } = userData;\n\n\tconst dataToSave = {\n\t\tusername,\n\t\tname,\n\t\tstatusText,\n\t\temails: emails?.map(({ address }) => address),\n\t\troles,\n\t\tservices: services ? Object.keys(services) : undefined,\n\t};\n\n\tconst fileName = joinPath(exportOperation.exportPath, exportOperation.fullExport ? 'user.json' : 'user.html');\n\n\tif (exportOperation.fullExport) {\n\t\tawait writeFile(fileName, JSON.stringify(dataToSave), { encoding: 'utf8' });\n\n\t\texportOperation.generatedUserFile = true;\n\t\treturn;\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst stream = createWriteStream(fileName, { encoding: 'utf8' });\n\n\t\tstream.on('finish', resolve);\n\t\tstream.on('error', reject);\n\n\t\tstream.write('<!DOCTYPE html>\\n');\n\t\tstream.write('<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n');\n\t\tfor (const [key, value] of Object.entries(dataToSave)) {\n\t\t\tstream.write(`<p><strong>${key}</strong>:`);\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tstream.write(value);\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\tstream.write('<br/>');\n\n\t\t\t\tfor (const item of value) {\n\t\t\t\t\tstream.write(`${item}<br/>`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstream.write('</p>\\n');\n\t\t}\n\n\t\tstream.end();\n\t});\n};\n\nconst generateUserAvatarFile = async (exportOperation: IExportOperation, userData?: IUser) => {\n\tif (!userData?.username) {\n\t\treturn;\n\t}\n\n\tawait mkdir(exportOperation.exportPath, { recursive: true });\n\n\tconst file = await Avatars.findOneByName(userData.username);\n\tif (!file) {\n\t\treturn;\n\t}\n\n\tconst filePath = joinPath(exportOperation.exportPath, 'avatar');\n\tif (await FileUpload.copy?.(file, filePath)) {\n\t\texportOperation.generatedAvatar = true;\n\t}\n};\n\nconst generateChannelsFile = async (type: 'json' | 'html', exportPath: string, exportOperation: IExportOperation) => {\n\tif (type !== 'json') {\n\t\treturn;\n\t}\n\n\tawait mkdir(exportOperation.exportPath, { recursive: true });\n\n\tconst fileName = joinPath(exportPath, 'channels.json');\n\tawait writeFile(\n\t\tfileName,\n\t\texportOperation.roomList\n\t\t\t?.map((roomData) =>\n\t\t\t\tJSON.stringify({\n\t\t\t\t\troomId: roomData.roomId,\n\t\t\t\t\troomName: roomData.roomName,\n\t\t\t\t\ttype: roomData.type,\n\t\t\t\t}),\n\t\t\t)\n\t\t\t?.join('\\n') ?? '',\n\t);\n};\n\nconst isExportComplete = (exportOperation: IExportOperation) => {\n\tconst incomplete = exportOperation.roomList?.some((exportOpRoomData) => exportOpRoomData.status !== 'completed') ?? false;\n\n\treturn !incomplete;\n};\n\nconst continueExportOperation = async function (exportOperation: IExportOperation): Promise<void> {\n\tif (exportOperation.status === 'completed') {\n\t\treturn;\n\t}\n\n\tconst exportType = exportOperation.fullExport ? 'json' : 'html';\n\n\tif (!exportOperation.roomList) {\n\t\texportOperation.roomList = await loadUserSubscriptions(exportOperation, exportType, exportOperation.userId);\n\n\t\tif (exportOperation.fullExport) {\n\t\t\texportOperation.status = 'exporting-rooms';\n\t\t} else {\n\t\t\texportOperation.status = 'exporting';\n\t\t}\n\t}\n\n\ttry {\n\t\tif (!exportOperation.generatedUserFile) {\n\t\t\tawait generateUserFile(exportOperation, exportOperation.userData);\n\t\t}\n\n\t\tif (!exportOperation.generatedAvatar) {\n\t\t\tawait generateUserAvatarFile(exportOperation, exportOperation.userData);\n\t\t}\n\n\t\tif (exportOperation.status === 'exporting-rooms') {\n\t\t\tawait generateChannelsFile(exportType, exportOperation.exportPath, exportOperation);\n\n\t\t\texportOperation.status = 'exporting';\n\t\t}\n\n\t\t// Run every room on every request, to avoid missing new messages on the rooms that finished first.\n\t\tif (exportOperation.status === 'exporting') {\n\t\t\tconst { fileList } = await exportRoomMessagesToFile(\n\t\t\t\texportOperation.exportPath,\n\t\t\t\texportOperation.assetsPath,\n\t\t\t\texportType,\n\t\t\t\texportOperation.roomList,\n\t\t\t\texportOperation.userData,\n\t\t\t\t{},\n\t\t\t\texportOperation.userNameTable,\n\t\t\t);\n\t\t\tif (!exportOperation.fileList) {\n\t\t\t\texportOperation.fileList = [];\n\t\t\t}\n\t\t\texportOperation.fileList.push(...fileList);\n\n\t\t\tif (isExportComplete(exportOperation)) {\n\t\t\t\texportOperation.status = 'downloading';\n\t\t\t}\n\t\t}\n\n\t\tconst generatedFileName = uuidv4();\n\t\tconst zipFolder = settings.get<string>('UserData_FileSystemZipPath')?.trim() || '/tmp/zipFiles';\n\n\t\tif (exportOperation.status === 'downloading') {\n\t\t\tfor await (const attachmentData of exportOperation.fileList) {\n\t\t\t\tawait copyFileUpload(attachmentData, exportOperation.assetsPath);\n\t\t\t}\n\n\t\t\tconst targetFile = joinPath(zipFolder, `${generatedFileName}.zip`);\n\t\t\tawait rm(targetFile, { force: true });\n\n\t\t\texportOperation.status = 'compressing';\n\t\t}\n\n\t\tif (exportOperation.status === 'compressing') {\n\t\t\tawait mkdir(zipFolder, { recursive: true });\n\n\t\t\texportOperation.generatedFile = joinPath(zipFolder, `${generatedFileName}.zip`);\n\t\t\ttry {\n\t\t\t\tawait access(exportOperation.generatedFile);\n\t\t\t} catch (error) {\n\t\t\t\tawait makeZipFile(exportOperation.exportPath, exportOperation.generatedFile);\n\t\t\t}\n\n\t\t\texportOperation.status = 'uploading';\n\t\t}\n\n\t\tif (exportOperation.status === 'uploading') {\n\t\t\tif (!exportOperation.generatedFile) {\n\t\t\t\tthrow new Error('No generated file');\n\t\t\t}\n\n\t\t\tconst { _id: fileId } = await uploadZipFile(exportOperation.generatedFile, exportOperation.userId, exportType);\n\t\t\texportOperation.fileId = fileId;\n\n\t\t\texportOperation.status = 'completed';\n\t\t\tawait ExportOperations.updateOperation(exportOperation);\n\t\t}\n\n\t\tawait ExportOperations.updateOperation(exportOperation);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n};\n\nexport async function processDataDownloads(): Promise<void> {\n\tconst operation = await ExportOperations.findOnePending();\n\tif (!operation) {\n\t\treturn;\n\t}\n\n\tif (operation.status === 'completed') {\n\t\treturn;\n\t}\n\n\tif (operation.status !== 'pending') {\n\t\t// If the operation has started but was not updated in over a day, then skip it\n\t\tif (operation._updatedAt && moment().diff(moment(operation._updatedAt), 'days') > 1) {\n\t\t\toperation.status = 'skipped';\n\t\t\tawait ExportOperations.updateOperation(operation);\n\t\t\treturn processDataDownloads();\n\t\t}\n\t}\n\n\tawait continueExportOperation(operation);\n\tawait ExportOperations.updateOperation(operation);\n\n\tif (operation.status === 'completed') {\n\t\tconst file = operation.fileId\n\t\t\t? await UserDataFiles.findOneById(operation.fileId)\n\t\t\t: await UserDataFiles.findLastFileByUser(operation.userId);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subject = i18n.t('UserDataDownload_EmailSubject');\n\t\tconst body = i18n.t('UserDataDownload_EmailBody', {\n\t\t\tdownload_link: getURL(getPath(file._id), { cdn: false, full: true }),\n\t\t});\n\n\t\tawait sendEmail(operation.userData, subject, body);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      processDataDownloads: () => processDataDownloads\n    });\n    let createWriteStream;\n    module.link(\"fs\", {\n      createWriteStream(v) {\n        createWriteStream = v;\n      }\n    }, 0);\n    let access, mkdir, rm, writeFile;\n    module.link(\"fs/promises\", {\n      access(v) {\n        access = v;\n      },\n      mkdir(v) {\n        mkdir = v;\n      },\n      rm(v) {\n        rm = v;\n      },\n      writeFile(v) {\n        writeFile = v;\n      }\n    }, 1);\n    let Avatars, ExportOperations, UserDataFiles, Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      Avatars(v) {\n        Avatars = v;\n      },\n      ExportOperations(v) {\n        ExportOperations = v;\n      },\n      UserDataFiles(v) {\n        UserDataFiles = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 2);\n    let moment;\n    module.link(\"moment\", {\n      default(v) {\n        moment = v;\n      }\n    }, 3);\n    let uuidv4;\n    module.link(\"uuid\", {\n      v4(v) {\n        uuidv4 = v;\n      }\n    }, 4);\n    let FileUpload;\n    module.link(\"../../../app/file-upload/server\", {\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 5);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 6);\n    let getURL;\n    module.link(\"../../../app/utils/server/getURL\", {\n      getURL(v) {\n        getURL = v;\n      }\n    }, 7);\n    let joinPath;\n    module.link(\"../fileUtils\", {\n      joinPath(v) {\n        joinPath = v;\n      }\n    }, 8);\n    let i18n;\n    module.link(\"../i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 9);\n    let copyFileUpload;\n    module.link(\"./copyFileUpload\", {\n      copyFileUpload(v) {\n        copyFileUpload = v;\n      }\n    }, 10);\n    let exportRoomMessagesToFile;\n    module.link(\"./exportRoomMessagesToFile\", {\n      exportRoomMessagesToFile(v) {\n        exportRoomMessagesToFile = v;\n      }\n    }, 11);\n    let getPath;\n    module.link(\"./getPath\", {\n      getPath(v) {\n        getPath = v;\n      }\n    }, 12);\n    let getRoomData;\n    module.link(\"./getRoomData\", {\n      getRoomData(v) {\n        getRoomData = v;\n      }\n    }, 13);\n    let makeZipFile;\n    module.link(\"./makeZipFile\", {\n      makeZipFile(v) {\n        makeZipFile = v;\n      }\n    }, 14);\n    let sendEmail;\n    module.link(\"./sendEmail\", {\n      sendEmail(v) {\n        sendEmail = v;\n      }\n    }, 15);\n    let uploadZipFile;\n    module.link(\"./uploadZipFile\", {\n      uploadZipFile(v) {\n        uploadZipFile = v;\n      }\n    }, 16);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const loadUserSubscriptions = async (_exportOperation, fileType, userId) => {\n      const roomList = [];\n      const cursor = Subscriptions.findByUserId(userId);\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(cursor), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const subscription = _step.value;\n          {\n            const roomData = await getRoomData(subscription.rid, userId);\n            roomData.targetFile = \"\".concat(fileType === 'json' && roomData.roomName || subscription.rid, \".\").concat(fileType);\n            roomList.push(roomData);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      return roomList;\n    };\n    const generateUserFile = async (exportOperation, userData) => {\n      if (!userData) {\n        return;\n      }\n      await mkdir(exportOperation.exportPath, {\n        recursive: true\n      });\n      const {\n        username,\n        name,\n        statusText,\n        emails,\n        roles,\n        services\n      } = userData;\n      const dataToSave = {\n        username,\n        name,\n        statusText,\n        emails: emails === null || emails === void 0 ? void 0 : emails.map(_ref => {\n          let {\n            address\n          } = _ref;\n          return address;\n        }),\n        roles,\n        services: services ? Object.keys(services) : undefined\n      };\n      const fileName = joinPath(exportOperation.exportPath, exportOperation.fullExport ? 'user.json' : 'user.html');\n      if (exportOperation.fullExport) {\n        await writeFile(fileName, JSON.stringify(dataToSave), {\n          encoding: 'utf8'\n        });\n        exportOperation.generatedUserFile = true;\n        return;\n      }\n      return new Promise((resolve, reject) => {\n        const stream = createWriteStream(fileName, {\n          encoding: 'utf8'\n        });\n        stream.on('finish', resolve);\n        stream.on('error', reject);\n        stream.write('<!DOCTYPE html>\\n');\n        stream.write('<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n');\n        for (const [key, value] of Object.entries(dataToSave)) {\n          stream.write(\"<p><strong>\".concat(key, \"</strong>:\"));\n          if (typeof value === 'string') {\n            stream.write(value);\n          } else if (Array.isArray(value)) {\n            stream.write('<br/>');\n            for (const item of value) {\n              stream.write(\"\".concat(item, \"<br/>\"));\n            }\n          }\n          stream.write('</p>\\n');\n        }\n        stream.end();\n      });\n    };\n    const generateUserAvatarFile = async (exportOperation, userData) => {\n      var _FileUpload$copy, _FileUpload;\n      if (!(userData !== null && userData !== void 0 && userData.username)) {\n        return;\n      }\n      await mkdir(exportOperation.exportPath, {\n        recursive: true\n      });\n      const file = await Avatars.findOneByName(userData.username);\n      if (!file) {\n        return;\n      }\n      const filePath = joinPath(exportOperation.exportPath, 'avatar');\n      if (await ((_FileUpload$copy = (_FileUpload = FileUpload).copy) === null || _FileUpload$copy === void 0 ? void 0 : _FileUpload$copy.call(_FileUpload, file, filePath))) {\n        exportOperation.generatedAvatar = true;\n      }\n    };\n    const generateChannelsFile = async (type, exportPath, exportOperation) => {\n      var _exportOperation$room, _exportOperation$room2, _exportOperation$room3;\n      if (type !== 'json') {\n        return;\n      }\n      await mkdir(exportOperation.exportPath, {\n        recursive: true\n      });\n      const fileName = joinPath(exportPath, 'channels.json');\n      await writeFile(fileName, (_exportOperation$room = (_exportOperation$room2 = exportOperation.roomList) === null || _exportOperation$room2 === void 0 ? void 0 : (_exportOperation$room3 = _exportOperation$room2.map(roomData => JSON.stringify({\n        roomId: roomData.roomId,\n        roomName: roomData.roomName,\n        type: roomData.type\n      }))) === null || _exportOperation$room3 === void 0 ? void 0 : _exportOperation$room3.join('\\n')) !== null && _exportOperation$room !== void 0 ? _exportOperation$room : '');\n    };\n    const isExportComplete = exportOperation => {\n      var _exportOperation$room4, _exportOperation$room5;\n      const incomplete = (_exportOperation$room4 = (_exportOperation$room5 = exportOperation.roomList) === null || _exportOperation$room5 === void 0 ? void 0 : _exportOperation$room5.some(exportOpRoomData => exportOpRoomData.status !== 'completed')) !== null && _exportOperation$room4 !== void 0 ? _exportOperation$room4 : false;\n      return !incomplete;\n    };\n    const continueExportOperation = async function (exportOperation) {\n      if (exportOperation.status === 'completed') {\n        return;\n      }\n      const exportType = exportOperation.fullExport ? 'json' : 'html';\n      if (!exportOperation.roomList) {\n        exportOperation.roomList = await loadUserSubscriptions(exportOperation, exportType, exportOperation.userId);\n        if (exportOperation.fullExport) {\n          exportOperation.status = 'exporting-rooms';\n        } else {\n          exportOperation.status = 'exporting';\n        }\n      }\n      try {\n        var _settings$get;\n        if (!exportOperation.generatedUserFile) {\n          await generateUserFile(exportOperation, exportOperation.userData);\n        }\n        if (!exportOperation.generatedAvatar) {\n          await generateUserAvatarFile(exportOperation, exportOperation.userData);\n        }\n        if (exportOperation.status === 'exporting-rooms') {\n          await generateChannelsFile(exportType, exportOperation.exportPath, exportOperation);\n          exportOperation.status = 'exporting';\n        }\n        // Run every room on every request, to avoid missing new messages on the rooms that finished first.\n        if (exportOperation.status === 'exporting') {\n          const {\n            fileList\n          } = await exportRoomMessagesToFile(exportOperation.exportPath, exportOperation.assetsPath, exportType, exportOperation.roomList, exportOperation.userData, {}, exportOperation.userNameTable);\n          if (!exportOperation.fileList) {\n            exportOperation.fileList = [];\n          }\n          exportOperation.fileList.push(...fileList);\n          if (isExportComplete(exportOperation)) {\n            exportOperation.status = 'downloading';\n          }\n        }\n        const generatedFileName = uuidv4();\n        const zipFolder = ((_settings$get = settings.get('UserData_FileSystemZipPath')) === null || _settings$get === void 0 ? void 0 : _settings$get.trim()) || '/tmp/zipFiles';\n        if (exportOperation.status === 'downloading') {\n          var _iteratorAbruptCompletion2 = false;\n          var _didIteratorError2 = false;\n          var _iteratorError2;\n          try {\n            for (var _iterator2 = _asyncIterator(exportOperation.fileList), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n              const attachmentData = _step2.value;\n              {\n                await copyFileUpload(attachmentData, exportOperation.assetsPath);\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n                await _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n          const targetFile = joinPath(zipFolder, \"\".concat(generatedFileName, \".zip\"));\n          await rm(targetFile, {\n            force: true\n          });\n          exportOperation.status = 'compressing';\n        }\n        if (exportOperation.status === 'compressing') {\n          await mkdir(zipFolder, {\n            recursive: true\n          });\n          exportOperation.generatedFile = joinPath(zipFolder, \"\".concat(generatedFileName, \".zip\"));\n          try {\n            await access(exportOperation.generatedFile);\n          } catch (error) {\n            await makeZipFile(exportOperation.exportPath, exportOperation.generatedFile);\n          }\n          exportOperation.status = 'uploading';\n        }\n        if (exportOperation.status === 'uploading') {\n          if (!exportOperation.generatedFile) {\n            throw new Error('No generated file');\n          }\n          const {\n            _id: fileId\n          } = await uploadZipFile(exportOperation.generatedFile, exportOperation.userId, exportType);\n          exportOperation.fileId = fileId;\n          exportOperation.status = 'completed';\n          await ExportOperations.updateOperation(exportOperation);\n        }\n        await ExportOperations.updateOperation(exportOperation);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    async function processDataDownloads() {\n      const operation = await ExportOperations.findOnePending();\n      if (!operation) {\n        return;\n      }\n      if (operation.status === 'completed') {\n        return;\n      }\n      if (operation.status !== 'pending') {\n        // If the operation has started but was not updated in over a day, then skip it\n        if (operation._updatedAt && moment().diff(moment(operation._updatedAt), 'days') > 1) {\n          operation.status = 'skipped';\n          await ExportOperations.updateOperation(operation);\n          return processDataDownloads();\n        }\n      }\n      await continueExportOperation(operation);\n      await ExportOperations.updateOperation(operation);\n      if (operation.status === 'completed') {\n        const file = operation.fileId ? await UserDataFiles.findOneById(operation.fileId) : await UserDataFiles.findLastFileByUser(operation.userId);\n        if (!file) {\n          return;\n        }\n        const subject = i18n.t('UserDataDownload_EmailSubject');\n        const body = i18n.t('UserDataDownload_EmailBody', {\n          download_link: getURL(getPath(file._id), {\n            cdn: false,\n            full: true\n          })\n        });\n        await sendEmail(operation.userData, subject, body);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","processDataDownloads","createWriteStream","access","mkdir","rm","writeFile","Avatars","ExportOperations","UserDataFiles","Subscriptions","moment","uuidv4","v4","FileUpload","settings","getURL","joinPath","i18n","copyFileUpload","exportRoomMessagesToFile","getPath","getRoomData","makeZipFile","sendEmail","uploadZipFile","__reifyWaitForDeps__","loadUserSubscriptions","_exportOperation","fileType","userId","roomList","cursor","findByUserId","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","subscription","value","roomData","rid","targetFile","concat","roomName","push","err","return","generateUserFile","exportOperation","userData","exportPath","recursive","username","name","statusText","emails","roles","services","dataToSave","map","_ref","address","Object","keys","undefined","fileName","fullExport","JSON","stringify","encoding","generatedUserFile","Promise","resolve","reject","stream","on","write","key","entries","Array","isArray","item","end","generateUserAvatarFile","_FileUpload$copy","_FileUpload","file","findOneByName","filePath","copy","call","generatedAvatar","generateChannelsFile","type","_exportOperation$room","_exportOperation$room2","_exportOperation$room3","roomId","join","isExportComplete","_exportOperation$room4","_exportOperation$room5","incomplete","some","exportOpRoomData","status","continueExportOperation","exportType","_settings$get","fileList","assetsPath","userNameTable","generatedFileName","zipFolder","get","trim","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","attachmentData","force","generatedFile","error","Error","_id","fileId","updateOperation","e","console","operation","findOnePending","_updatedAt","diff","findOneById","findLastFileByUser","subject","t","body","download_link","cdn","full","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/dataExport/processDataDownloads.ts"],"sourcesContent":["import { createWriteStream } from 'fs';\nimport { access, mkdir, rm, writeFile } from 'fs/promises';\n\nimport type { IExportOperation, IUser, RoomType } from '@rocket.chat/core-typings';\nimport { Avatars, ExportOperations, UserDataFiles, Subscriptions } from '@rocket.chat/models';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { settings } from '../../../app/settings/server';\nimport { getURL } from '../../../app/utils/server/getURL';\nimport { joinPath } from '../fileUtils';\nimport { i18n } from '../i18n';\nimport { copyFileUpload } from './copyFileUpload';\nimport { exportRoomMessagesToFile } from './exportRoomMessagesToFile';\nimport { getPath } from './getPath';\nimport { getRoomData } from './getRoomData';\nimport { makeZipFile } from './makeZipFile';\nimport { sendEmail } from './sendEmail';\nimport { uploadZipFile } from './uploadZipFile';\n\nconst loadUserSubscriptions = async (_exportOperation: IExportOperation, fileType: 'json' | 'html', userId: IUser['_id']) => {\n\tconst roomList: (\n\t\t| {\n\t\t\t\troomId: string;\n\t\t\t\troomName: string;\n\t\t\t\tuserId: string | undefined;\n\t\t\t\texportedCount: number;\n\t\t\t\tstatus: string;\n\t\t\t\ttype: RoomType;\n\t\t\t\ttargetFile: string;\n\t\t  }\n\t\t| Record<string, never>\n\t)[] = [];\n\n\tconst cursor = Subscriptions.findByUserId(userId);\n\tfor await (const subscription of cursor) {\n\t\tconst roomData = await getRoomData(subscription.rid, userId);\n\t\troomData.targetFile = `${(fileType === 'json' && roomData.roomName) || subscription.rid}.${fileType}`;\n\n\t\troomList.push(roomData);\n\t}\n\n\treturn roomList;\n};\n\nconst generateUserFile = async (exportOperation: IExportOperation, userData?: IUser) => {\n\tif (!userData) {\n\t\treturn;\n\t}\n\n\tawait mkdir(exportOperation.exportPath, { recursive: true });\n\n\tconst { username, name, statusText, emails, roles, services } = userData;\n\n\tconst dataToSave = {\n\t\tusername,\n\t\tname,\n\t\tstatusText,\n\t\temails: emails?.map(({ address }) => address),\n\t\troles,\n\t\tservices: services ? Object.keys(services) : undefined,\n\t};\n\n\tconst fileName = joinPath(exportOperation.exportPath, exportOperation.fullExport ? 'user.json' : 'user.html');\n\n\tif (exportOperation.fullExport) {\n\t\tawait writeFile(fileName, JSON.stringify(dataToSave), { encoding: 'utf8' });\n\n\t\texportOperation.generatedUserFile = true;\n\t\treturn;\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst stream = createWriteStream(fileName, { encoding: 'utf8' });\n\n\t\tstream.on('finish', resolve);\n\t\tstream.on('error', reject);\n\n\t\tstream.write('<!DOCTYPE html>\\n');\n\t\tstream.write('<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n');\n\t\tfor (const [key, value] of Object.entries(dataToSave)) {\n\t\t\tstream.write(`<p><strong>${key}</strong>:`);\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tstream.write(value);\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\tstream.write('<br/>');\n\n\t\t\t\tfor (const item of value) {\n\t\t\t\t\tstream.write(`${item}<br/>`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstream.write('</p>\\n');\n\t\t}\n\n\t\tstream.end();\n\t});\n};\n\nconst generateUserAvatarFile = async (exportOperation: IExportOperation, userData?: IUser) => {\n\tif (!userData?.username) {\n\t\treturn;\n\t}\n\n\tawait mkdir(exportOperation.exportPath, { recursive: true });\n\n\tconst file = await Avatars.findOneByName(userData.username);\n\tif (!file) {\n\t\treturn;\n\t}\n\n\tconst filePath = joinPath(exportOperation.exportPath, 'avatar');\n\tif (await FileUpload.copy?.(file, filePath)) {\n\t\texportOperation.generatedAvatar = true;\n\t}\n};\n\nconst generateChannelsFile = async (type: 'json' | 'html', exportPath: string, exportOperation: IExportOperation) => {\n\tif (type !== 'json') {\n\t\treturn;\n\t}\n\n\tawait mkdir(exportOperation.exportPath, { recursive: true });\n\n\tconst fileName = joinPath(exportPath, 'channels.json');\n\tawait writeFile(\n\t\tfileName,\n\t\texportOperation.roomList\n\t\t\t?.map((roomData) =>\n\t\t\t\tJSON.stringify({\n\t\t\t\t\troomId: roomData.roomId,\n\t\t\t\t\troomName: roomData.roomName,\n\t\t\t\t\ttype: roomData.type,\n\t\t\t\t}),\n\t\t\t)\n\t\t\t?.join('\\n') ?? '',\n\t);\n};\n\nconst isExportComplete = (exportOperation: IExportOperation) => {\n\tconst incomplete = exportOperation.roomList?.some((exportOpRoomData) => exportOpRoomData.status !== 'completed') ?? false;\n\n\treturn !incomplete;\n};\n\nconst continueExportOperation = async function (exportOperation: IExportOperation): Promise<void> {\n\tif (exportOperation.status === 'completed') {\n\t\treturn;\n\t}\n\n\tconst exportType = exportOperation.fullExport ? 'json' : 'html';\n\n\tif (!exportOperation.roomList) {\n\t\texportOperation.roomList = await loadUserSubscriptions(exportOperation, exportType, exportOperation.userId);\n\n\t\tif (exportOperation.fullExport) {\n\t\t\texportOperation.status = 'exporting-rooms';\n\t\t} else {\n\t\t\texportOperation.status = 'exporting';\n\t\t}\n\t}\n\n\ttry {\n\t\tif (!exportOperation.generatedUserFile) {\n\t\t\tawait generateUserFile(exportOperation, exportOperation.userData);\n\t\t}\n\n\t\tif (!exportOperation.generatedAvatar) {\n\t\t\tawait generateUserAvatarFile(exportOperation, exportOperation.userData);\n\t\t}\n\n\t\tif (exportOperation.status === 'exporting-rooms') {\n\t\t\tawait generateChannelsFile(exportType, exportOperation.exportPath, exportOperation);\n\n\t\t\texportOperation.status = 'exporting';\n\t\t}\n\n\t\t// Run every room on every request, to avoid missing new messages on the rooms that finished first.\n\t\tif (exportOperation.status === 'exporting') {\n\t\t\tconst { fileList } = await exportRoomMessagesToFile(\n\t\t\t\texportOperation.exportPath,\n\t\t\t\texportOperation.assetsPath,\n\t\t\t\texportType,\n\t\t\t\texportOperation.roomList,\n\t\t\t\texportOperation.userData,\n\t\t\t\t{},\n\t\t\t\texportOperation.userNameTable,\n\t\t\t);\n\t\t\tif (!exportOperation.fileList) {\n\t\t\t\texportOperation.fileList = [];\n\t\t\t}\n\t\t\texportOperation.fileList.push(...fileList);\n\n\t\t\tif (isExportComplete(exportOperation)) {\n\t\t\t\texportOperation.status = 'downloading';\n\t\t\t}\n\t\t}\n\n\t\tconst generatedFileName = uuidv4();\n\t\tconst zipFolder = settings.get<string>('UserData_FileSystemZipPath')?.trim() || '/tmp/zipFiles';\n\n\t\tif (exportOperation.status === 'downloading') {\n\t\t\tfor await (const attachmentData of exportOperation.fileList) {\n\t\t\t\tawait copyFileUpload(attachmentData, exportOperation.assetsPath);\n\t\t\t}\n\n\t\t\tconst targetFile = joinPath(zipFolder, `${generatedFileName}.zip`);\n\t\t\tawait rm(targetFile, { force: true });\n\n\t\t\texportOperation.status = 'compressing';\n\t\t}\n\n\t\tif (exportOperation.status === 'compressing') {\n\t\t\tawait mkdir(zipFolder, { recursive: true });\n\n\t\t\texportOperation.generatedFile = joinPath(zipFolder, `${generatedFileName}.zip`);\n\t\t\ttry {\n\t\t\t\tawait access(exportOperation.generatedFile);\n\t\t\t} catch (error) {\n\t\t\t\tawait makeZipFile(exportOperation.exportPath, exportOperation.generatedFile);\n\t\t\t}\n\n\t\t\texportOperation.status = 'uploading';\n\t\t}\n\n\t\tif (exportOperation.status === 'uploading') {\n\t\t\tif (!exportOperation.generatedFile) {\n\t\t\t\tthrow new Error('No generated file');\n\t\t\t}\n\n\t\t\tconst { _id: fileId } = await uploadZipFile(exportOperation.generatedFile, exportOperation.userId, exportType);\n\t\t\texportOperation.fileId = fileId;\n\n\t\t\texportOperation.status = 'completed';\n\t\t\tawait ExportOperations.updateOperation(exportOperation);\n\t\t}\n\n\t\tawait ExportOperations.updateOperation(exportOperation);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n};\n\nexport async function processDataDownloads(): Promise<void> {\n\tconst operation = await ExportOperations.findOnePending();\n\tif (!operation) {\n\t\treturn;\n\t}\n\n\tif (operation.status === 'completed') {\n\t\treturn;\n\t}\n\n\tif (operation.status !== 'pending') {\n\t\t// If the operation has started but was not updated in over a day, then skip it\n\t\tif (operation._updatedAt && moment().diff(moment(operation._updatedAt), 'days') > 1) {\n\t\t\toperation.status = 'skipped';\n\t\t\tawait ExportOperations.updateOperation(operation);\n\t\t\treturn processDataDownloads();\n\t\t}\n\t}\n\n\tawait continueExportOperation(operation);\n\tawait ExportOperations.updateOperation(operation);\n\n\tif (operation.status === 'completed') {\n\t\tconst file = operation.fileId\n\t\t\t? await UserDataFiles.findOneById(operation.fileId)\n\t\t\t: await UserDataFiles.findLastFileByUser(operation.userId);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subject = i18n.t('UserDataDownload_EmailSubject');\n\t\tconst body = i18n.t('UserDataDownload_EmailBody', {\n\t\t\tdownload_link: getURL(getPath(file._id), { cdn: false, full: true }),\n\t\t});\n\n\t\tawait sendEmail(operation.userData, subject, body);\n\t}\n}\n"],"mappings":";;;IAAA,IAAAA,cAAS;IAAAC,MAAA,CAAiBC,IAAE,uCAAW;MAAAC,QAAAC,CAAA;QAAAJ,cAAA,GAAAI,CAAA;MAAA;IAAA;IAAvCH,MAAA,CAAOI,MAAE;MAAAC,oBAAyB,EAAAA,CAAA,KAAKA;IAAA;IAAA,IAAAC,iBAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,kBAAAH,CAAA;QAAAG,iBAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,MAAA,EAAAC,KAAA,EAAAC,EAAA,EAAAC,SAAA;IAAAV,MAAA,CAAAC,IAAA;MAAAM,OAAAJ,CAAA;QAAAI,MAAA,GAAAJ,CAAA;MAAA;MAAAK,MAAAL,CAAA;QAAAK,KAAA,GAAAL,CAAA;MAAA;MAAAM,GAAAN,CAAA;QAAAM,EAAA,GAAAN,CAAA;MAAA;MAAAO,UAAAP,CAAA;QAAAO,SAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,OAAA,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,aAAA;IAAAd,MAAA,CAAAC,IAAA;MAAAU,QAAAR,CAAA;QAAAQ,OAAA,GAAAR,CAAA;MAAA;MAAAS,iBAAAT,CAAA;QAAAS,gBAAA,GAAAT,CAAA;MAAA;MAAAU,cAAAV,CAAA;QAAAU,aAAA,GAAAV,CAAA;MAAA;MAAAW,cAAAX,CAAA;QAAAW,aAAA,GAAAX,CAAA;MAAA;IAAA;IAAA,IAAAY,MAAA;IAAAf,MAAA,CAAAC,IAAA;MAAAC,QAAAC,CAAA;QAAAY,MAAA,GAAAZ,CAAA;MAAA;IAAA;IAAA,IAAAa,MAAA;IAAAhB,MAAA,CAAAC,IAAA;MAAAgB,GAAAd,CAAA;QAAAa,MAAA,GAAAb,CAAA;MAAA;IAAA;IAAA,IAAAe,UAAA;IAAAlB,MAAA,CAAAC,IAAA;MAAAiB,WAAAf,CAAA;QAAAe,UAAA,GAAAf,CAAA;MAAA;IAAA;IAAA,IAAAgB,QAAA;IAAAnB,MAAA,CAAAC,IAAA;MAAAkB,SAAAhB,CAAA;QAAAgB,QAAA,GAAAhB,CAAA;MAAA;IAAA;IAAA,IAAAiB,MAAA;IAAApB,MAAA,CAAAC,IAAA;MAAAmB,OAAAjB,CAAA;QAAAiB,MAAA,GAAAjB,CAAA;MAAA;IAAA;IAAA,IAAAkB,QAAA;IAAArB,MAAA,CAAAC,IAAA;MAAAoB,SAAAlB,CAAA;QAAAkB,QAAA,GAAAlB,CAAA;MAAA;IAAA;IAAA,IAAAmB,IAAA;IAAAtB,MAAA,CAAAC,IAAA;MAAAqB,KAAAnB,CAAA;QAAAmB,IAAA,GAAAnB,CAAA;MAAA;IAAA;IAAA,IAAAoB,cAAA;IAAAvB,MAAA,CAAAC,IAAA;MAAAsB,eAAApB,CAAA;QAAAoB,cAAA,GAAApB,CAAA;MAAA;IAAA;IAAA,IAAAqB,wBAAA;IAAAxB,MAAA,CAAAC,IAAA;MAAAuB,yBAAArB,CAAA;QAAAqB,wBAAA,GAAArB,CAAA;MAAA;IAAA;IAAA,IAAAsB,OAAA;IAAAzB,MAAA,CAAAC,IAAA;MAAAwB,QAAAtB,CAAA;QAAAsB,OAAA,GAAAtB,CAAA;MAAA;IAAA;IAAA,IAAAuB,WAAA;IAAA1B,MAAA,CAAAC,IAAA;MAAAyB,YAAAvB,CAAA;QAAAuB,WAAA,GAAAvB,CAAA;MAAA;IAAA;IAAA,IAAAwB,WAAA;IAAA3B,MAAA,CAAAC,IAAA;MAAA0B,YAAAxB,CAAA;QAAAwB,WAAA,GAAAxB,CAAA;MAAA;IAAA;IAAA,IAAAyB,SAAA;IAAA5B,MAAA,CAAAC,IAAA;MAAA2B,UAAAzB,CAAA;QAAAyB,SAAA,GAAAzB,CAAA;MAAA;IAAA;IAAA,IAAA0B,aAAA;IAAA7B,MAAA,CAAAC,IAAA;MAAA4B,cAAA1B,CAAA;QAAA0B,aAAA,GAAA1B,CAAA;MAAA;IAAA;IAAA,IAAA2B,oBAAA,WAAAA,oBAAA;IAqBvC,MAAMC,qBAAqB,GAAG,MAAAA,CAAOC,gBAAkC,EAAEC,QAAyB,EAAEC,MAAoB,KAAI;MAC3H,MAAMC,QAAQ,GAWR,EAAE;MAER,MAAMC,MAAM,GAAGtB,aAAa,CAACuB,YAAY,CAACH,MAAM,CAAC;MAAC,IAAAI,yBAAA;MAAA,IAAAC,iBAAA;MAAA,IAAAC,cAAA;MAAA;QAClD,SAAAC,SAAA,GAAA1C,cAAA,CAAiCqC,MAAM,GAAAM,KAAA,EAAAJ,yBAAA,KAAAI,KAAA,SAAAD,SAAA,CAAAE,IAAA,IAAAC,IAAA,EAAAN,yBAAA,UAAE;UAAA,MAAxBO,YAAY,GAAAH,KAAA,CAAAI,KAAA;UAAA;YAC5B,MAAMC,QAAQ,GAAG,MAAMrB,WAAW,CAACmB,YAAY,CAACG,GAAG,EAAEd,MAAM,CAAC;YAC5Da,QAAQ,CAACE,UAAU,MAAAC,MAAA,CAAOjB,QAAQ,KAAK,MAAM,IAAIc,QAAQ,CAACI,QAAQ,IAAKN,YAAY,CAACG,GAAG,OAAAE,MAAA,CAAIjB,QAAQ,CAAE;YAErGE,QAAQ,CAACiB,IAAI,CAACL,QAAQ,CAAC;UAAC;QACzB;MAAC,SAAAM,GAAA;QAAAd,iBAAA;QAAAC,cAAA,GAAAa,GAAA;MAAA;QAAA;UAAA,IAAAf,yBAAA,IAAAG,SAAA,CAAAa,MAAA;YAAA,MAAAb,SAAA,CAAAa,MAAA;UAAA;QAAA;UAAA,IAAAf,iBAAA;YAAA,MAAAC,cAAA;UAAA;QAAA;MAAA;MAED,OAAOL,QAAQ;IAChB,CAAC;IAED,MAAMoB,gBAAgB,GAAG,MAAAA,CAAOC,eAAiC,EAAEC,QAAgB,KAAI;MACtF,IAAI,CAACA,QAAQ,EAAE;QACd;MACD;MAEA,MAAMjD,KAAK,CAACgD,eAAe,CAACE,UAAU,EAAE;QAAEC,SAAS,EAAE;MAAI,CAAE,CAAC;MAE5D,MAAM;QAAEC,QAAQ;QAAEC,IAAI;QAAEC,UAAU;QAAEC,MAAM;QAAEC,KAAK;QAAEC;MAAQ,CAAE,GAAGR,QAAQ;MAExE,MAAMS,UAAU,GAAG;QAClBN,QAAQ;QACRC,IAAI;QACJC,UAAU;QACVC,MAAM,EAAEA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,GAAG,CAACC,IAAA;UAAA,IAAC;YAAEC;UAAO,CAAE,GAAAD,IAAA;UAAA,OAAKC,OAAO;QAAA,EAAC;QAC7CL,KAAK;QACLC,QAAQ,EAAEA,QAAQ,GAAGK,MAAM,CAACC,IAAI,CAACN,QAAQ,CAAC,GAAGO;OAC7C;MAED,MAAMC,QAAQ,GAAGpD,QAAQ,CAACmC,eAAe,CAACE,UAAU,EAAEF,eAAe,CAACkB,UAAU,GAAG,WAAW,GAAG,WAAW,CAAC;MAE7G,IAAIlB,eAAe,CAACkB,UAAU,EAAE;QAC/B,MAAMhE,SAAS,CAAC+D,QAAQ,EAAEE,IAAI,CAACC,SAAS,CAACV,UAAU,CAAC,EAAE;UAAEW,QAAQ,EAAE;QAAM,CAAE,CAAC;QAE3ErB,eAAe,CAACsB,iBAAiB,GAAG,IAAI;QACxC;MACD;MAEA,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;QACtC,MAAMC,MAAM,GAAG5E,iBAAiB,CAACmE,QAAQ,EAAE;UAAEI,QAAQ,EAAE;QAAM,CAAE,CAAC;QAEhEK,MAAM,CAACC,EAAE,CAAC,QAAQ,EAAEH,OAAO,CAAC;QAC5BE,MAAM,CAACC,EAAE,CAAC,OAAO,EAAEF,MAAM,CAAC;QAE1BC,MAAM,CAACE,KAAK,CAAC,mBAAmB,CAAC;QACjCF,MAAM,CAACE,KAAK,CAAC,uEAAuE,CAAC;QACrF,KAAK,MAAM,CAACC,GAAG,EAAEvC,KAAK,CAAC,IAAIwB,MAAM,CAACgB,OAAO,CAACpB,UAAU,CAAC,EAAE;UACtDgB,MAAM,CAACE,KAAK,eAAAlC,MAAA,CAAemC,GAAG,eAAY,CAAC;UAC3C,IAAI,OAAOvC,KAAK,KAAK,QAAQ,EAAE;YAC9BoC,MAAM,CAACE,KAAK,CAACtC,KAAK,CAAC;UACpB,CAAC,MAAM,IAAIyC,KAAK,CAACC,OAAO,CAAC1C,KAAK,CAAC,EAAE;YAChCoC,MAAM,CAACE,KAAK,CAAC,OAAO,CAAC;YAErB,KAAK,MAAMK,IAAI,IAAI3C,KAAK,EAAE;cACzBoC,MAAM,CAACE,KAAK,IAAAlC,MAAA,CAAIuC,IAAI,UAAO,CAAC;YAC7B;UACD;UAEAP,MAAM,CAACE,KAAK,CAAC,QAAQ,CAAC;QACvB;QAEAF,MAAM,CAACQ,GAAG,EAAE;MACb,CAAC,CAAC;IACH,CAAC;IAED,MAAMC,sBAAsB,GAAG,MAAAA,CAAOnC,eAAiC,EAAEC,QAAgB,KAAI;MAAA,IAAAmC,gBAAA,EAAAC,WAAA;MAC5F,IAAI,EAACpC,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEG,QAAQ,GAAE;QACxB;MACD;MAEA,MAAMpD,KAAK,CAACgD,eAAe,CAACE,UAAU,EAAE;QAAEC,SAAS,EAAE;MAAI,CAAE,CAAC;MAE5D,MAAMmC,IAAI,GAAG,MAAMnF,OAAO,CAACoF,aAAa,CAACtC,QAAQ,CAACG,QAAQ,CAAC;MAC3D,IAAI,CAACkC,IAAI,EAAE;QACV;MACD;MAEA,MAAME,QAAQ,GAAG3E,QAAQ,CAACmC,eAAe,CAACE,UAAU,EAAE,QAAQ,CAAC;MAC/D,IAAI,QAAAkC,gBAAA,GAAM,CAAAC,WAAA,GAAA3E,UAAU,EAAC+E,IAAI,cAAAL,gBAAA,uBAAfA,gBAAA,CAAAM,IAAA,CAAAL,WAAA,EAAkBC,IAAI,EAAEE,QAAQ,CAAC,GAAE;QAC5CxC,eAAe,CAAC2C,eAAe,GAAG,IAAI;MACvC;IACD,CAAC;IAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,IAAqB,EAAE3C,UAAkB,EAAEF,eAAiC,KAAI;MAAA,IAAA8C,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;MACnH,IAAIH,IAAI,KAAK,MAAM,EAAE;QACpB;MACD;MAEA,MAAM7F,KAAK,CAACgD,eAAe,CAACE,UAAU,EAAE;QAAEC,SAAS,EAAE;MAAI,CAAE,CAAC;MAE5D,MAAMc,QAAQ,GAAGpD,QAAQ,CAACqC,UAAU,EAAE,eAAe,CAAC;MACtD,MAAMhD,SAAS,CACd+D,QAAQ,GAAA6B,qBAAA,IAAAC,sBAAA,GACR/C,eAAe,CAACrB,QAAQ,cAAAoE,sBAAA,wBAAAC,sBAAA,GAAxBD,sBAAA,CACGpC,GAAG,CAAEpB,QAAQ,IACd4B,IAAI,CAACC,SAAS,CAAC;QACd6B,MAAM,EAAE1D,QAAQ,CAAC0D,MAAM;QACvBtD,QAAQ,EAAEJ,QAAQ,CAACI,QAAQ;QAC3BkD,IAAI,EAAEtD,QAAQ,CAACsD;OACf,CAAC,CACF,cAAAG,sBAAA,uBAPFA,sBAAA,CAQGE,IAAI,CAAC,IAAI,CAAC,cAAAJ,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CACnB;IACF,CAAC;IAED,MAAMK,gBAAgB,GAAInD,eAAiC,IAAI;MAAA,IAAAoD,sBAAA,EAAAC,sBAAA;MAC9D,MAAMC,UAAU,IAAAF,sBAAA,IAAAC,sBAAA,GAAGrD,eAAe,CAACrB,QAAQ,cAAA0E,sBAAA,uBAAxBA,sBAAA,CAA0BE,IAAI,CAAEC,gBAAgB,IAAKA,gBAAgB,CAACC,MAAM,KAAK,WAAW,CAAC,cAAAL,sBAAA,cAAAA,sBAAA,GAAI,KAAK;MAEzH,OAAO,CAACE,UAAU;IACnB,CAAC;IAED,MAAMI,uBAAuB,GAAG,eAAAA,CAAgB1D,eAAiC;MAChF,IAAIA,eAAe,CAACyD,MAAM,KAAK,WAAW,EAAE;QAC3C;MACD;MAEA,MAAME,UAAU,GAAG3D,eAAe,CAACkB,UAAU,GAAG,MAAM,GAAG,MAAM;MAE/D,IAAI,CAAClB,eAAe,CAACrB,QAAQ,EAAE;QAC9BqB,eAAe,CAACrB,QAAQ,GAAG,MAAMJ,qBAAqB,CAACyB,eAAe,EAAE2D,UAAU,EAAE3D,eAAe,CAACtB,MAAM,CAAC;QAE3G,IAAIsB,eAAe,CAACkB,UAAU,EAAE;UAC/BlB,eAAe,CAACyD,MAAM,GAAG,iBAAiB;QAC3C,CAAC,MAAM;UACNzD,eAAe,CAACyD,MAAM,GAAG,WAAW;QACrC;MACD;MAEA,IAAI;QAAA,IAAAG,aAAA;QACH,IAAI,CAAC5D,eAAe,CAACsB,iBAAiB,EAAE;UACvC,MAAMvB,gBAAgB,CAACC,eAAe,EAAEA,eAAe,CAACC,QAAQ,CAAC;QAClE;QAEA,IAAI,CAACD,eAAe,CAAC2C,eAAe,EAAE;UACrC,MAAMR,sBAAsB,CAACnC,eAAe,EAAEA,eAAe,CAACC,QAAQ,CAAC;QACxE;QAEA,IAAID,eAAe,CAACyD,MAAM,KAAK,iBAAiB,EAAE;UACjD,MAAMb,oBAAoB,CAACe,UAAU,EAAE3D,eAAe,CAACE,UAAU,EAAEF,eAAe,CAAC;UAEnFA,eAAe,CAACyD,MAAM,GAAG,WAAW;QACrC;QAEA;QACA,IAAIzD,eAAe,CAACyD,MAAM,KAAK,WAAW,EAAE;UAC3C,MAAM;YAAEI;UAAQ,CAAE,GAAG,MAAM7F,wBAAwB,CAClDgC,eAAe,CAACE,UAAU,EAC1BF,eAAe,CAAC8D,UAAU,EAC1BH,UAAU,EACV3D,eAAe,CAACrB,QAAQ,EACxBqB,eAAe,CAACC,QAAQ,EACxB,EAAE,EACFD,eAAe,CAAC+D,aAAa,CAC7B;UACD,IAAI,CAAC/D,eAAe,CAAC6D,QAAQ,EAAE;YAC9B7D,eAAe,CAAC6D,QAAQ,GAAG,EAAE;UAC9B;UACA7D,eAAe,CAAC6D,QAAQ,CAACjE,IAAI,CAAC,GAAGiE,QAAQ,CAAC;UAE1C,IAAIV,gBAAgB,CAACnD,eAAe,CAAC,EAAE;YACtCA,eAAe,CAACyD,MAAM,GAAG,aAAa;UACvC;QACD;QAEA,MAAMO,iBAAiB,GAAGxG,MAAM,EAAE;QAClC,MAAMyG,SAAS,GAAG,EAAAL,aAAA,GAAAjG,QAAQ,CAACuG,GAAG,CAAS,4BAA4B,CAAC,cAAAN,aAAA,uBAAlDA,aAAA,CAAoDO,IAAI,EAAE,KAAI,eAAe;QAE/F,IAAInE,eAAe,CAACyD,MAAM,KAAK,aAAa,EAAE;UAAA,IAAAW,0BAAA;UAAA,IAAAC,kBAAA;UAAA,IAAAC,eAAA;UAAA;YAC7C,SAAAC,UAAA,GAAAhI,cAAA,CAAmCyD,eAAe,CAAC6D,QAAQ,GAAAW,MAAA,EAAAJ,0BAAA,KAAAI,MAAA,SAAAD,UAAA,CAAApF,IAAA,IAAAC,IAAA,EAAAgF,0BAAA,UAAE;cAAA,MAA5CK,cAAc,GAAAD,MAAA,CAAAlF,KAAA;cAAA;gBAC9B,MAAMvB,cAAc,CAAC0G,cAAc,EAAEzE,eAAe,CAAC8D,UAAU,CAAC;cAAC;YAClE;UAAC,SAAAjE,GAAA;YAAAwE,kBAAA;YAAAC,eAAA,GAAAzE,GAAA;UAAA;YAAA;cAAA,IAAAuE,0BAAA,IAAAG,UAAA,CAAAzE,MAAA;gBAAA,MAAAyE,UAAA,CAAAzE,MAAA;cAAA;YAAA;cAAA,IAAAuE,kBAAA;gBAAA,MAAAC,eAAA;cAAA;YAAA;UAAA;UAED,MAAM7E,UAAU,GAAG5B,QAAQ,CAACoG,SAAS,KAAAvE,MAAA,CAAKsE,iBAAiB,SAAM,CAAC;UAClE,MAAM/G,EAAE,CAACwC,UAAU,EAAE;YAAEiF,KAAK,EAAE;UAAI,CAAE,CAAC;UAErC1E,eAAe,CAACyD,MAAM,GAAG,aAAa;QACvC;QAEA,IAAIzD,eAAe,CAACyD,MAAM,KAAK,aAAa,EAAE;UAC7C,MAAMzG,KAAK,CAACiH,SAAS,EAAE;YAAE9D,SAAS,EAAE;UAAI,CAAE,CAAC;UAE3CH,eAAe,CAAC2E,aAAa,GAAG9G,QAAQ,CAACoG,SAAS,KAAAvE,MAAA,CAAKsE,iBAAiB,SAAM,CAAC;UAC/E,IAAI;YACH,MAAMjH,MAAM,CAACiD,eAAe,CAAC2E,aAAa,CAAC;UAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;YACf,MAAMzG,WAAW,CAAC6B,eAAe,CAACE,UAAU,EAAEF,eAAe,CAAC2E,aAAa,CAAC;UAC7E;UAEA3E,eAAe,CAACyD,MAAM,GAAG,WAAW;QACrC;QAEA,IAAIzD,eAAe,CAACyD,MAAM,KAAK,WAAW,EAAE;UAC3C,IAAI,CAACzD,eAAe,CAAC2E,aAAa,EAAE;YACnC,MAAM,IAAIE,KAAK,CAAC,mBAAmB,CAAC;UACrC;UAEA,MAAM;YAAEC,GAAG,EAAEC;UAAM,CAAE,GAAG,MAAM1G,aAAa,CAAC2B,eAAe,CAAC2E,aAAa,EAAE3E,eAAe,CAACtB,MAAM,EAAEiF,UAAU,CAAC;UAC9G3D,eAAe,CAAC+E,MAAM,GAAGA,MAAM;UAE/B/E,eAAe,CAACyD,MAAM,GAAG,WAAW;UACpC,MAAMrG,gBAAgB,CAAC4H,eAAe,CAAChF,eAAe,CAAC;QACxD;QAEA,MAAM5C,gBAAgB,CAAC4H,eAAe,CAAChF,eAAe,CAAC;MACxD,CAAC,CAAC,OAAOiF,CAAC,EAAE;QACXC,OAAO,CAACN,KAAK,CAACK,CAAC,CAAC;MACjB;IACD,CAAC;IAEM,eAAepI,oBAAoBA,CAAA;MACzC,MAAMsI,SAAS,GAAG,MAAM/H,gBAAgB,CAACgI,cAAc,EAAE;MACzD,IAAI,CAACD,SAAS,EAAE;QACf;MACD;MAEA,IAAIA,SAAS,CAAC1B,MAAM,KAAK,WAAW,EAAE;QACrC;MACD;MAEA,IAAI0B,SAAS,CAAC1B,MAAM,KAAK,SAAS,EAAE;QACnC;QACA,IAAI0B,SAAS,CAACE,UAAU,IAAI9H,MAAM,EAAE,CAAC+H,IAAI,CAAC/H,MAAM,CAAC4H,SAAS,CAACE,UAAU,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE;UACpFF,SAAS,CAAC1B,MAAM,GAAG,SAAS;UAC5B,MAAMrG,gBAAgB,CAAC4H,eAAe,CAACG,SAAS,CAAC;UACjD,OAAOtI,oBAAoB,EAAE;QAC9B;MACD;MAEA,MAAM6G,uBAAuB,CAACyB,SAAS,CAAC;MACxC,MAAM/H,gBAAgB,CAAC4H,eAAe,CAACG,SAAS,CAAC;MAEjD,IAAIA,SAAS,CAAC1B,MAAM,KAAK,WAAW,EAAE;QACrC,MAAMnB,IAAI,GAAG6C,SAAS,CAACJ,MAAM,GAC1B,MAAM1H,aAAa,CAACkI,WAAW,CAACJ,SAAS,CAACJ,MAAM,CAAC,GACjD,MAAM1H,aAAa,CAACmI,kBAAkB,CAACL,SAAS,CAACzG,MAAM,CAAC;QAC3D,IAAI,CAAC4D,IAAI,EAAE;UACV;QACD;QAEA,MAAMmD,OAAO,GAAG3H,IAAI,CAAC4H,CAAC,CAAC,+BAA+B,CAAC;QACvD,MAAMC,IAAI,GAAG7H,IAAI,CAAC4H,CAAC,CAAC,4BAA4B,EAAE;UACjDE,aAAa,EAAEhI,MAAM,CAACK,OAAO,CAACqE,IAAI,CAACwC,GAAG,CAAC,EAAE;YAAEe,GAAG,EAAE,KAAK;YAAEC,IAAI,EAAE;UAAI,CAAE;SACnE,CAAC;QAEF,MAAM1H,SAAS,CAAC+G,SAAS,CAAClF,QAAQ,EAAEwF,OAAO,EAAEE,IAAI,CAAC;MACnD;IACD;IAACI,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b68e72f168c85eb1c6d6538ba20d82322d2734de"}
