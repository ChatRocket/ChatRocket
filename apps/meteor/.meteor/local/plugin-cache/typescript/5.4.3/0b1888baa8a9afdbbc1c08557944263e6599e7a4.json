{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/hooks/useRoomList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/sidebarv2/hooks/useRoomList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/hooks/useRoomList.ts","inputSourceMap":{"version":3,"file":"client/sidebarv2/hooks/useRoomList.ts","sourceRoot":"","sources":["client/sidebarv2/hooks/useRoomList.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\nimport { useQueryOptions } from './useQueryOptions';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: ILivechatInquiryRecord[] = [];\n\nconst order = [\n\t'Incoming_Calls',\n\t'Incoming_Livechats',\n\t'Open_Livechats',\n\t'On_Hold_Chats',\n\t'Unread',\n\t'Favorites',\n\t'Teams',\n\t'Discussions',\n\t'Channels',\n\t'Direct_Messages',\n\t'Conversations',\n] as const;\n\nexport const useRoomList = ({\n\tcollapsedGroups,\n}: {\n\tcollapsedGroups?: string[];\n}): {\n\troomList: Array<ISubscription & IRoom>;\n\tgroupsCount: number[];\n\tgroupsList: TranslationKey[];\n} => {\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tconst incomingCalls = useVideoConfIncomingCalls();\n\n\tconst queue = inquiries.enabled ? inquiries.queue : emptyQueue;\n\n\tconst { groupsCount, groupsList, roomList } = useDebouncedValue(\n\t\tuseMemo(() => {\n\t\t\tconst isCollapsed = (groupTitle: string) => collapsedGroups?.includes(groupTitle);\n\n\t\t\tconst incomingCall = new Set();\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (incomingCalls.find((call) => call.rid === room.rid)) {\n\t\t\t\t\treturn incomingCall.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread)) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tchannels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tdirect.add(room);\n\t\t\t\t}\n\n\t\t\t\tconversation.add(room);\n\t\t\t});\n\n\t\t\tconst groups = new Map<string, Set<any>>();\n\t\t\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\n\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', new Set(queue));\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\n\t\t\tconst { groupsCount, groupsList, roomList } = sidebarOrder.reduce(\n\t\t\t\t(acc, key) => {\n\t\t\t\t\tconst value = groups.get(key);\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.groupsList.push(key as TranslationKey);\n\t\t\t\t\tif (isCollapsed(key)) {\n\t\t\t\t\t\tacc.groupsCount.push(0);\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.groupsCount.push(value.size);\n\t\t\t\t\tacc.roomList.push(...value);\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tgroupsCount: [],\n\t\t\t\t\tgroupsList: [],\n\t\t\t\t\troomList: [],\n\t\t\t\t} as {\n\t\t\t\t\tgroupsCount: number[];\n\t\t\t\t\tgroupsList: TranslationKey[];\n\t\t\t\t\troomList: Array<ISubscription & IRoom>;\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn { groupsCount, groupsList, roomList };\n\t\t}, [\n\t\t\trooms,\n\t\t\tshowOmnichannel,\n\t\t\tinquiries.enabled,\n\t\t\tqueue,\n\t\t\tsidebarShowUnread,\n\t\t\tfavoritesEnabled,\n\t\t\tsidebarGroupByType,\n\t\t\tisDiscussionEnabled,\n\t\t\tsidebarOrder,\n\t\t\tcollapsedGroups,\n\t\t\tincomingCalls,\n\t\t]),\n\t\t50,\n\t);\n\n\treturn {\n\t\troomList,\n\t\tgroupsCount,\n\t\tgroupsList,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/hooks/useRoomList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/sidebarv2/hooks/useRoomList.ts","inputSourceMap":{"version":3,"file":"client/sidebarv2/hooks/useRoomList.ts","sourceRoot":"","sources":["client/sidebarv2/hooks/useRoomList.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\nimport { useQueryOptions } from './useQueryOptions';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: ILivechatInquiryRecord[] = [];\n\nconst order = [\n\t'Incoming_Calls',\n\t'Incoming_Livechats',\n\t'Open_Livechats',\n\t'On_Hold_Chats',\n\t'Unread',\n\t'Favorites',\n\t'Teams',\n\t'Discussions',\n\t'Channels',\n\t'Direct_Messages',\n\t'Conversations',\n] as const;\n\nexport const useRoomList = ({\n\tcollapsedGroups,\n}: {\n\tcollapsedGroups?: string[];\n}): {\n\troomList: Array<ISubscription & IRoom>;\n\tgroupsCount: number[];\n\tgroupsList: TranslationKey[];\n} => {\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tconst incomingCalls = useVideoConfIncomingCalls();\n\n\tconst queue = inquiries.enabled ? inquiries.queue : emptyQueue;\n\n\tconst { groupsCount, groupsList, roomList } = useDebouncedValue(\n\t\tuseMemo(() => {\n\t\t\tconst isCollapsed = (groupTitle: string) => collapsedGroups?.includes(groupTitle);\n\n\t\t\tconst incomingCall = new Set();\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (incomingCalls.find((call) => call.rid === room.rid)) {\n\t\t\t\t\treturn incomingCall.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread)) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tchannels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tdirect.add(room);\n\t\t\t\t}\n\n\t\t\t\tconversation.add(room);\n\t\t\t});\n\n\t\t\tconst groups = new Map<string, Set<any>>();\n\t\t\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\n\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', new Set(queue));\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\n\t\t\tconst { groupsCount, groupsList, roomList } = sidebarOrder.reduce(\n\t\t\t\t(acc, key) => {\n\t\t\t\t\tconst value = groups.get(key);\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.groupsList.push(key as TranslationKey);\n\t\t\t\t\tif (isCollapsed(key)) {\n\t\t\t\t\t\tacc.groupsCount.push(0);\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.groupsCount.push(value.size);\n\t\t\t\t\tacc.roomList.push(...value);\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tgroupsCount: [],\n\t\t\t\t\tgroupsList: [],\n\t\t\t\t\troomList: [],\n\t\t\t\t} as {\n\t\t\t\t\tgroupsCount: number[];\n\t\t\t\t\tgroupsList: TranslationKey[];\n\t\t\t\t\troomList: Array<ISubscription & IRoom>;\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn { groupsCount, groupsList, roomList };\n\t\t}, [\n\t\t\trooms,\n\t\t\tshowOmnichannel,\n\t\t\tinquiries.enabled,\n\t\t\tqueue,\n\t\t\tsidebarShowUnread,\n\t\t\tfavoritesEnabled,\n\t\t\tsidebarGroupByType,\n\t\t\tisDiscussionEnabled,\n\t\t\tsidebarOrder,\n\t\t\tcollapsedGroups,\n\t\t\tincomingCalls,\n\t\t]),\n\t\t50,\n\t);\n\n\treturn {\n\t\troomList,\n\t\tgroupsCount,\n\t\tgroupsList,\n\t};\n};\n"]}}},"code":"module.export({\n  useRoomList: () => useRoomList\n});\nlet useDebouncedValue;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useDebouncedValue(v) {\n    useDebouncedValue = v;\n  }\n}, 0);\nlet useUserPreference, useUserSubscriptions, useSetting;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useUserPreference(v) {\n    useUserPreference = v;\n  },\n  useUserSubscriptions(v) {\n    useUserSubscriptions = v;\n  },\n  useSetting(v) {\n    useSetting = v;\n  }\n}, 1);\nlet useMemo;\nmodule.link(\"react\", {\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 2);\nlet useVideoConfIncomingCalls;\nmodule.link(\"../../contexts/VideoConfContext\", {\n  useVideoConfIncomingCalls(v) {\n    useVideoConfIncomingCalls = v;\n  }\n}, 3);\nlet useOmnichannelEnabled;\nmodule.link(\"../../hooks/omnichannel/useOmnichannelEnabled\", {\n  useOmnichannelEnabled(v) {\n    useOmnichannelEnabled = v;\n  }\n}, 4);\nlet useQueuedInquiries;\nmodule.link(\"../../hooks/omnichannel/useQueuedInquiries\", {\n  useQueuedInquiries(v) {\n    useQueuedInquiries = v;\n  }\n}, 5);\nlet useQueryOptions;\nmodule.link(\"./useQueryOptions\", {\n  useQueryOptions(v) {\n    useQueryOptions = v;\n  }\n}, 6);\nconst query = {\n  open: {\n    $ne: false\n  }\n};\nconst emptyQueue = [];\nconst order = ['Incoming_Calls', 'Incoming_Livechats', 'Open_Livechats', 'On_Hold_Chats', 'Unread', 'Favorites', 'Teams', 'Discussions', 'Channels', 'Direct_Messages', 'Conversations'];\nconst useRoomList = _ref => {\n  var _useUserPreference;\n  let {\n    collapsedGroups\n  } = _ref;\n  const showOmnichannel = useOmnichannelEnabled();\n  const sidebarGroupByType = useUserPreference('sidebarGroupByType');\n  const favoritesEnabled = useUserPreference('sidebarShowFavorites');\n  const sidebarOrder = (_useUserPreference = useUserPreference('sidebarSectionsOrder')) !== null && _useUserPreference !== void 0 ? _useUserPreference : order;\n  const isDiscussionEnabled = useSetting('Discussion_enabled');\n  const sidebarShowUnread = useUserPreference('sidebarShowUnread');\n  const options = useQueryOptions();\n  const rooms = useUserSubscriptions(query, options);\n  const inquiries = useQueuedInquiries();\n  const incomingCalls = useVideoConfIncomingCalls();\n  const queue = inquiries.enabled ? inquiries.queue : emptyQueue;\n  const {\n    groupsCount,\n    groupsList,\n    roomList\n  } = useDebouncedValue(useMemo(() => {\n    const isCollapsed = groupTitle => collapsedGroups === null || collapsedGroups === void 0 ? void 0 : collapsedGroups.includes(groupTitle);\n    const incomingCall = new Set();\n    const favorite = new Set();\n    const team = new Set();\n    const omnichannel = new Set();\n    const unread = new Set();\n    const channels = new Set();\n    const direct = new Set();\n    const discussion = new Set();\n    const conversation = new Set();\n    const onHold = new Set();\n    rooms.forEach(room => {\n      if (room.archived) {\n        return;\n      }\n      if (incomingCalls.find(call => call.rid === room.rid)) {\n        return incomingCall.add(room);\n      }\n      if (sidebarShowUnread && (room.alert || room.unread)) {\n        return unread.add(room);\n      }\n      if (favoritesEnabled && room.f) {\n        return favorite.add(room);\n      }\n      if (sidebarGroupByType && room.teamMain) {\n        return team.add(room);\n      }\n      if (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n        return discussion.add(room);\n      }\n      if (room.t === 'c' || room.t === 'p') {\n        channels.add(room);\n      }\n      if (room.t === 'l' && room.onHold) {\n        return showOmnichannel && onHold.add(room);\n      }\n      if (room.t === 'l') {\n        return showOmnichannel && omnichannel.add(room);\n      }\n      if (room.t === 'd') {\n        direct.add(room);\n      }\n      conversation.add(room);\n    });\n    const groups = new Map();\n    incomingCall.size && groups.set('Incoming_Calls', incomingCall);\n    showOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', new Set(queue));\n    showOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n    showOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n    sidebarShowUnread && unread.size && groups.set('Unread', unread);\n    favoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n    sidebarGroupByType && team.size && groups.set('Teams', team);\n    sidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n    sidebarGroupByType && channels.size && groups.set('Channels', channels);\n    sidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n    !sidebarGroupByType && groups.set('Conversations', conversation);\n    const {\n      groupsCount,\n      groupsList,\n      roomList\n    } = sidebarOrder.reduce((acc, key) => {\n      const value = groups.get(key);\n      if (!value) {\n        return acc;\n      }\n      acc.groupsList.push(key);\n      if (isCollapsed(key)) {\n        acc.groupsCount.push(0);\n        return acc;\n      }\n      acc.groupsCount.push(value.size);\n      acc.roomList.push(...value);\n      return acc;\n    }, {\n      groupsCount: [],\n      groupsList: [],\n      roomList: []\n    });\n    return {\n      groupsCount,\n      groupsList,\n      roomList\n    };\n  }, [rooms, showOmnichannel, inquiries.enabled, queue, sidebarShowUnread, favoritesEnabled, sidebarGroupByType, isDiscussionEnabled, sidebarOrder, collapsedGroups, incomingCalls]), 50);\n  return {\n    roomList,\n    groupsCount,\n    groupsList\n  };\n};","map":{"version":3,"names":["module","export","useRoomList","useDebouncedValue","link","v","useUserPreference","useUserSubscriptions","useSetting","useMemo","useVideoConfIncomingCalls","useOmnichannelEnabled","useQueuedInquiries","useQueryOptions","query","open","$ne","emptyQueue","order","_ref","_useUserPreference","collapsedGroups","showOmnichannel","sidebarGroupByType","favoritesEnabled","sidebarOrder","isDiscussionEnabled","sidebarShowUnread","options","rooms","inquiries","incomingCalls","queue","enabled","groupsCount","groupsList","roomList","isCollapsed","groupTitle","includes","incomingCall","Set","favorite","team","omnichannel","unread","channels","direct","discussion","conversation","onHold","forEach","room","archived","find","call","rid","add","alert","f","teamMain","prid","t","groups","Map","size","set","length","reduce","acc","key","value","get","push"],"sources":["client/sidebarv2/hooks/useRoomList.ts"],"sourcesContent":["import type { ILivechatInquiryRecord, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useUserPreference, useUserSubscriptions, useSetting } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport { useVideoConfIncomingCalls } from '../../contexts/VideoConfContext';\nimport { useOmnichannelEnabled } from '../../hooks/omnichannel/useOmnichannelEnabled';\nimport { useQueuedInquiries } from '../../hooks/omnichannel/useQueuedInquiries';\nimport { useQueryOptions } from './useQueryOptions';\n\nconst query = { open: { $ne: false } };\n\nconst emptyQueue: ILivechatInquiryRecord[] = [];\n\nconst order = [\n\t'Incoming_Calls',\n\t'Incoming_Livechats',\n\t'Open_Livechats',\n\t'On_Hold_Chats',\n\t'Unread',\n\t'Favorites',\n\t'Teams',\n\t'Discussions',\n\t'Channels',\n\t'Direct_Messages',\n\t'Conversations',\n] as const;\n\nexport const useRoomList = ({\n\tcollapsedGroups,\n}: {\n\tcollapsedGroups?: string[];\n}): {\n\troomList: Array<ISubscription & IRoom>;\n\tgroupsCount: number[];\n\tgroupsList: TranslationKey[];\n} => {\n\tconst showOmnichannel = useOmnichannelEnabled();\n\tconst sidebarGroupByType = useUserPreference('sidebarGroupByType');\n\tconst favoritesEnabled = useUserPreference('sidebarShowFavorites');\n\tconst sidebarOrder = useUserPreference<typeof order>('sidebarSectionsOrder') ?? order;\n\tconst isDiscussionEnabled = useSetting('Discussion_enabled');\n\tconst sidebarShowUnread = useUserPreference('sidebarShowUnread');\n\n\tconst options = useQueryOptions();\n\n\tconst rooms = useUserSubscriptions(query, options);\n\n\tconst inquiries = useQueuedInquiries();\n\n\tconst incomingCalls = useVideoConfIncomingCalls();\n\n\tconst queue = inquiries.enabled ? inquiries.queue : emptyQueue;\n\n\tconst { groupsCount, groupsList, roomList } = useDebouncedValue(\n\t\tuseMemo(() => {\n\t\t\tconst isCollapsed = (groupTitle: string) => collapsedGroups?.includes(groupTitle);\n\n\t\t\tconst incomingCall = new Set();\n\t\t\tconst favorite = new Set();\n\t\t\tconst team = new Set();\n\t\t\tconst omnichannel = new Set();\n\t\t\tconst unread = new Set();\n\t\t\tconst channels = new Set();\n\t\t\tconst direct = new Set();\n\t\t\tconst discussion = new Set();\n\t\t\tconst conversation = new Set();\n\t\t\tconst onHold = new Set();\n\n\t\t\trooms.forEach((room) => {\n\t\t\t\tif (room.archived) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (incomingCalls.find((call) => call.rid === room.rid)) {\n\t\t\t\t\treturn incomingCall.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarShowUnread && (room.alert || room.unread)) {\n\t\t\t\t\treturn unread.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (favoritesEnabled && room.f) {\n\t\t\t\t\treturn favorite.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && room.teamMain) {\n\t\t\t\t\treturn team.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (sidebarGroupByType && isDiscussionEnabled && room.prid) {\n\t\t\t\t\treturn discussion.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'c' || room.t === 'p') {\n\t\t\t\t\tchannels.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l' && room.onHold) {\n\t\t\t\t\treturn showOmnichannel && onHold.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'l') {\n\t\t\t\t\treturn showOmnichannel && omnichannel.add(room);\n\t\t\t\t}\n\n\t\t\t\tif (room.t === 'd') {\n\t\t\t\t\tdirect.add(room);\n\t\t\t\t}\n\n\t\t\t\tconversation.add(room);\n\t\t\t});\n\n\t\t\tconst groups = new Map<string, Set<any>>();\n\t\t\tincomingCall.size && groups.set('Incoming_Calls', incomingCall);\n\n\t\t\tshowOmnichannel && inquiries.enabled && queue.length && groups.set('Incoming_Livechats', new Set(queue));\n\t\t\tshowOmnichannel && omnichannel.size && groups.set('Open_Livechats', omnichannel);\n\t\t\tshowOmnichannel && onHold.size && groups.set('On_Hold_Chats', onHold);\n\n\t\t\tsidebarShowUnread && unread.size && groups.set('Unread', unread);\n\n\t\t\tfavoritesEnabled && favorite.size && groups.set('Favorites', favorite);\n\n\t\t\tsidebarGroupByType && team.size && groups.set('Teams', team);\n\n\t\t\tsidebarGroupByType && isDiscussionEnabled && discussion.size && groups.set('Discussions', discussion);\n\n\t\t\tsidebarGroupByType && channels.size && groups.set('Channels', channels);\n\n\t\t\tsidebarGroupByType && direct.size && groups.set('Direct_Messages', direct);\n\n\t\t\t!sidebarGroupByType && groups.set('Conversations', conversation);\n\n\t\t\tconst { groupsCount, groupsList, roomList } = sidebarOrder.reduce(\n\t\t\t\t(acc, key) => {\n\t\t\t\t\tconst value = groups.get(key);\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.groupsList.push(key as TranslationKey);\n\t\t\t\t\tif (isCollapsed(key)) {\n\t\t\t\t\t\tacc.groupsCount.push(0);\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.groupsCount.push(value.size);\n\t\t\t\t\tacc.roomList.push(...value);\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tgroupsCount: [],\n\t\t\t\t\tgroupsList: [],\n\t\t\t\t\troomList: [],\n\t\t\t\t} as {\n\t\t\t\t\tgroupsCount: number[];\n\t\t\t\t\tgroupsList: TranslationKey[];\n\t\t\t\t\troomList: Array<ISubscription & IRoom>;\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn { groupsCount, groupsList, roomList };\n\t\t}, [\n\t\t\trooms,\n\t\t\tshowOmnichannel,\n\t\t\tinquiries.enabled,\n\t\t\tqueue,\n\t\t\tsidebarShowUnread,\n\t\t\tfavoritesEnabled,\n\t\t\tsidebarGroupByType,\n\t\t\tisDiscussionEnabled,\n\t\t\tsidebarOrder,\n\t\t\tcollapsedGroups,\n\t\t\tincomingCalls,\n\t\t]),\n\t\t50,\n\t);\n\n\treturn {\n\t\troomList,\n\t\tgroupsCount,\n\t\tgroupsList,\n\t};\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0b1888baa8a9afdbbc1c08557944263e6599e7a4"}
