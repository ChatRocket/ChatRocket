{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/ufs/ufs-gridfs.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/ufs/ufs-gridfs.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/ufs/ufs-gridfs.ts","inputSourceMap":{"version":3,"file":"server/ufs/ufs-gridfs.ts","sourceRoot":"","sources":["server/ufs/ufs-gridfs.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUpload } from '@rocket.chat/core-typings';\nimport { MongoInternals } from 'meteor/mongo';\nimport type { ObjectId } from 'mongodb';\nimport { GridFSBucket } from 'mongodb';\n\nimport { UploadFS } from './ufs';\nimport type { StoreOptions } from './ufs-store';\n\ntype GridFSStoreOptions = StoreOptions & {\n\tchunkSize: number;\n\tcollectionName: string;\n};\n\nexport class GridFSStore extends UploadFS.Store {\n\tprotected chunkSize: number;\n\n\tprotected collectionName: string;\n\n\tconstructor(options: GridFSStoreOptions) {\n\t\t// Default options\n\t\toptions = Object.assign(\n\t\t\t{\n\t\t\t\tchunkSize: 1024 * 255,\n\t\t\t\tcollectionName: 'uploadfs',\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\t// Check options\n\t\tif (typeof options.chunkSize !== 'number') {\n\t\t\tthrow new TypeError('GridFSStore: chunkSize is not a number');\n\t\t}\n\t\tif (typeof options.collectionName !== 'string') {\n\t\t\tthrow new TypeError('GridFSStore: collectionName is not a string');\n\t\t}\n\n\t\tsuper(options);\n\n\t\tthis.chunkSize = options.chunkSize;\n\t\tthis.collectionName = options.collectionName;\n\n\t\t// const mongo = MongoInternals.NpmModule;\n\t\tconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\t\tconst mongoStore = new GridFSBucket(db, {\n\t\t\tbucketName: options.collectionName,\n\t\t\tchunkSizeBytes: this.chunkSize,\n\t\t});\n\n\t\tthis.delete = async function (fileId) {\n\t\t\tconst collectionName = `${options.collectionName}.files`;\n\t\t\tconst file = await db.collection(collectionName).findOne({ _id: fileId });\n\n\t\t\tif (file) {\n\t\t\t\tawait mongoStore.delete(fileId as unknown as ObjectId);\n\t\t\t}\n\t\t};\n\n\t\tthis.getReadStream = async function (fileId: string, _file: IUpload, options?: { end?: number }) {\n\t\t\toptions = Object.assign({}, options);\n\t\t\t// https://mongodb.github.io/node-mongodb-native/4.4/interfaces/GridFSBucketReadStreamOptionsWithRevision.html#end\n\t\t\t// according to the mongodb doc, the end is 0-based offset in bytes to stop streaming before -<< BEFORE\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Range\n\t\t\t// <range-end> an integer in the given unit indicating the end position (zero-indexed & inclusive) of the requested range. -<< inclusive\n\t\t\t// so before there always one byte miss, then browser will send a start=end request, with case fail to get the DB's last byte\n\t\t\t// this will leads to audio's duration Infinite and keep waiting...\n\t\t\tif (options?.end) {\n\t\t\t\toptions.end += 1;\n\t\t\t}\n\t\t\treturn mongoStore.openDownloadStream(fileId as unknown as ObjectId, options);\n\t\t};\n\n\t\tthis.getWriteStream = async function (fileId: string, file: IUpload, _options?: any) {\n\t\t\tconst writeStream = mongoStore.openUploadStreamWithId(fileId as unknown as ObjectId, fileId, {\n\t\t\t\tchunkSizeBytes: this.chunkSize,\n\t\t\t\tcontentType: file.type,\n\t\t\t});\n\t\t\tlet finished = false;\n\t\t\twriteStream.on('finish', () => {\n\t\t\t\tfinished = true;\n\t\t\t});\n\t\t\twriteStream.on('close', () => {\n\t\t\t\tif (!finished) {\n\t\t\t\t\twriteStream.emit('finish');\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn writeStream;\n\t\t};\n\t}\n}\n\n// Add store to UFS namespace\nUploadFS.store.GridFS = GridFSStore;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/ufs/ufs-gridfs.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/ufs/ufs-gridfs.ts","inputSourceMap":{"version":3,"file":"server/ufs/ufs-gridfs.ts","sourceRoot":"","sources":["server/ufs/ufs-gridfs.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUpload } from '@rocket.chat/core-typings';\nimport { MongoInternals } from 'meteor/mongo';\nimport type { ObjectId } from 'mongodb';\nimport { GridFSBucket } from 'mongodb';\n\nimport { UploadFS } from './ufs';\nimport type { StoreOptions } from './ufs-store';\n\ntype GridFSStoreOptions = StoreOptions & {\n\tchunkSize: number;\n\tcollectionName: string;\n};\n\nexport class GridFSStore extends UploadFS.Store {\n\tprotected chunkSize: number;\n\n\tprotected collectionName: string;\n\n\tconstructor(options: GridFSStoreOptions) {\n\t\t// Default options\n\t\toptions = Object.assign(\n\t\t\t{\n\t\t\t\tchunkSize: 1024 * 255,\n\t\t\t\tcollectionName: 'uploadfs',\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\t// Check options\n\t\tif (typeof options.chunkSize !== 'number') {\n\t\t\tthrow new TypeError('GridFSStore: chunkSize is not a number');\n\t\t}\n\t\tif (typeof options.collectionName !== 'string') {\n\t\t\tthrow new TypeError('GridFSStore: collectionName is not a string');\n\t\t}\n\n\t\tsuper(options);\n\n\t\tthis.chunkSize = options.chunkSize;\n\t\tthis.collectionName = options.collectionName;\n\n\t\t// const mongo = MongoInternals.NpmModule;\n\t\tconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\t\tconst mongoStore = new GridFSBucket(db, {\n\t\t\tbucketName: options.collectionName,\n\t\t\tchunkSizeBytes: this.chunkSize,\n\t\t});\n\n\t\tthis.delete = async function (fileId) {\n\t\t\tconst collectionName = `${options.collectionName}.files`;\n\t\t\tconst file = await db.collection(collectionName).findOne({ _id: fileId });\n\n\t\t\tif (file) {\n\t\t\t\tawait mongoStore.delete(fileId as unknown as ObjectId);\n\t\t\t}\n\t\t};\n\n\t\tthis.getReadStream = async function (fileId: string, _file: IUpload, options?: { end?: number }) {\n\t\t\toptions = Object.assign({}, options);\n\t\t\t// https://mongodb.github.io/node-mongodb-native/4.4/interfaces/GridFSBucketReadStreamOptionsWithRevision.html#end\n\t\t\t// according to the mongodb doc, the end is 0-based offset in bytes to stop streaming before -<< BEFORE\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Range\n\t\t\t// <range-end> an integer in the given unit indicating the end position (zero-indexed & inclusive) of the requested range. -<< inclusive\n\t\t\t// so before there always one byte miss, then browser will send a start=end request, with case fail to get the DB's last byte\n\t\t\t// this will leads to audio's duration Infinite and keep waiting...\n\t\t\tif (options?.end) {\n\t\t\t\toptions.end += 1;\n\t\t\t}\n\t\t\treturn mongoStore.openDownloadStream(fileId as unknown as ObjectId, options);\n\t\t};\n\n\t\tthis.getWriteStream = async function (fileId: string, file: IUpload, _options?: any) {\n\t\t\tconst writeStream = mongoStore.openUploadStreamWithId(fileId as unknown as ObjectId, fileId, {\n\t\t\t\tchunkSizeBytes: this.chunkSize,\n\t\t\t\tcontentType: file.type,\n\t\t\t});\n\t\t\tlet finished = false;\n\t\t\twriteStream.on('finish', () => {\n\t\t\t\tfinished = true;\n\t\t\t});\n\t\t\twriteStream.on('close', () => {\n\t\t\t\tif (!finished) {\n\t\t\t\t\twriteStream.emit('finish');\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn writeStream;\n\t\t};\n\t}\n}\n\n// Add store to UFS namespace\nUploadFS.store.GridFS = GridFSStore;\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      GridFSStore: () => GridFSStore\n    });\n    let MongoInternals;\n    module.link(\"meteor/mongo\", {\n      MongoInternals(v) {\n        MongoInternals = v;\n      }\n    }, 0);\n    let GridFSBucket;\n    module.link(\"mongodb\", {\n      GridFSBucket(v) {\n        GridFSBucket = v;\n      }\n    }, 1);\n    let UploadFS;\n    module.link(\"./ufs\", {\n      UploadFS(v) {\n        UploadFS = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class GridFSStore extends UploadFS.Store {\n      constructor(options) {\n        // Default options\n        options = Object.assign({\n          chunkSize: 1024 * 255,\n          collectionName: 'uploadfs'\n        }, options);\n        // Check options\n        if (typeof options.chunkSize !== 'number') {\n          throw new TypeError('GridFSStore: chunkSize is not a number');\n        }\n        if (typeof options.collectionName !== 'string') {\n          throw new TypeError('GridFSStore: collectionName is not a string');\n        }\n        super(options);\n        this.chunkSize = void 0;\n        this.collectionName = void 0;\n        this.chunkSize = options.chunkSize;\n        this.collectionName = options.collectionName;\n        // const mongo = MongoInternals.NpmModule;\n        const {\n          db\n        } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n        const mongoStore = new GridFSBucket(db, {\n          bucketName: options.collectionName,\n          chunkSizeBytes: this.chunkSize\n        });\n        this.delete = async function (fileId) {\n          const collectionName = \"\".concat(options.collectionName, \".files\");\n          const file = await db.collection(collectionName).findOne({\n            _id: fileId\n          });\n          if (file) {\n            await mongoStore.delete(fileId);\n          }\n        };\n        this.getReadStream = async function (fileId, _file, options) {\n          var _options2;\n          options = Object.assign({}, options);\n          // https://mongodb.github.io/node-mongodb-native/4.4/interfaces/GridFSBucketReadStreamOptionsWithRevision.html#end\n          // according to the mongodb doc, the end is 0-based offset in bytes to stop streaming before -<< BEFORE\n          // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Range\n          // <range-end> an integer in the given unit indicating the end position (zero-indexed & inclusive) of the requested range. -<< inclusive\n          // so before there always one byte miss, then browser will send a start=end request, with case fail to get the DB's last byte\n          // this will leads to audio's duration Infinite and keep waiting...\n          if ((_options2 = options) !== null && _options2 !== void 0 && _options2.end) {\n            options.end += 1;\n          }\n          return mongoStore.openDownloadStream(fileId, options);\n        };\n        this.getWriteStream = async function (fileId, file, _options) {\n          const writeStream = mongoStore.openUploadStreamWithId(fileId, fileId, {\n            chunkSizeBytes: this.chunkSize,\n            contentType: file.type\n          });\n          let finished = false;\n          writeStream.on('finish', () => {\n            finished = true;\n          });\n          writeStream.on('close', () => {\n            if (!finished) {\n              writeStream.emit('finish');\n            }\n          });\n          return writeStream;\n        };\n      }\n    }\n    // Add store to UFS namespace\n    UploadFS.store.GridFS = GridFSStore;\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","GridFSStore","MongoInternals","link","v","GridFSBucket","UploadFS","__reifyWaitForDeps__","Store","constructor","options","Object","assign","chunkSize","collectionName","TypeError","db","defaultRemoteCollectionDriver","mongo","mongoStore","bucketName","chunkSizeBytes","delete","fileId","concat","file","collection","findOne","_id","getReadStream","_file","_options2","end","openDownloadStream","getWriteStream","_options","writeStream","openUploadStreamWithId","contentType","type","finished","on","emit","store","GridFS","__reify_async_result__","_reifyError","self","async"],"sources":["server/ufs/ufs-gridfs.ts"],"sourcesContent":["import type { IUpload } from '@rocket.chat/core-typings';\nimport { MongoInternals } from 'meteor/mongo';\nimport type { ObjectId } from 'mongodb';\nimport { GridFSBucket } from 'mongodb';\n\nimport { UploadFS } from './ufs';\nimport type { StoreOptions } from './ufs-store';\n\ntype GridFSStoreOptions = StoreOptions & {\n\tchunkSize: number;\n\tcollectionName: string;\n};\n\nexport class GridFSStore extends UploadFS.Store {\n\tprotected chunkSize: number;\n\n\tprotected collectionName: string;\n\n\tconstructor(options: GridFSStoreOptions) {\n\t\t// Default options\n\t\toptions = Object.assign(\n\t\t\t{\n\t\t\t\tchunkSize: 1024 * 255,\n\t\t\t\tcollectionName: 'uploadfs',\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\n\t\t// Check options\n\t\tif (typeof options.chunkSize !== 'number') {\n\t\t\tthrow new TypeError('GridFSStore: chunkSize is not a number');\n\t\t}\n\t\tif (typeof options.collectionName !== 'string') {\n\t\t\tthrow new TypeError('GridFSStore: collectionName is not a string');\n\t\t}\n\n\t\tsuper(options);\n\n\t\tthis.chunkSize = options.chunkSize;\n\t\tthis.collectionName = options.collectionName;\n\n\t\t// const mongo = MongoInternals.NpmModule;\n\t\tconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\t\tconst mongoStore = new GridFSBucket(db, {\n\t\t\tbucketName: options.collectionName,\n\t\t\tchunkSizeBytes: this.chunkSize,\n\t\t});\n\n\t\tthis.delete = async function (fileId) {\n\t\t\tconst collectionName = `${options.collectionName}.files`;\n\t\t\tconst file = await db.collection(collectionName).findOne({ _id: fileId });\n\n\t\t\tif (file) {\n\t\t\t\tawait mongoStore.delete(fileId as unknown as ObjectId);\n\t\t\t}\n\t\t};\n\n\t\tthis.getReadStream = async function (fileId: string, _file: IUpload, options?: { end?: number }) {\n\t\t\toptions = Object.assign({}, options);\n\t\t\t// https://mongodb.github.io/node-mongodb-native/4.4/interfaces/GridFSBucketReadStreamOptionsWithRevision.html#end\n\t\t\t// according to the mongodb doc, the end is 0-based offset in bytes to stop streaming before -<< BEFORE\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Range\n\t\t\t// <range-end> an integer in the given unit indicating the end position (zero-indexed & inclusive) of the requested range. -<< inclusive\n\t\t\t// so before there always one byte miss, then browser will send a start=end request, with case fail to get the DB's last byte\n\t\t\t// this will leads to audio's duration Infinite and keep waiting...\n\t\t\tif (options?.end) {\n\t\t\t\toptions.end += 1;\n\t\t\t}\n\t\t\treturn mongoStore.openDownloadStream(fileId as unknown as ObjectId, options);\n\t\t};\n\n\t\tthis.getWriteStream = async function (fileId: string, file: IUpload, _options?: any) {\n\t\t\tconst writeStream = mongoStore.openUploadStreamWithId(fileId as unknown as ObjectId, fileId, {\n\t\t\t\tchunkSizeBytes: this.chunkSize,\n\t\t\t\tcontentType: file.type,\n\t\t\t});\n\t\t\tlet finished = false;\n\t\t\twriteStream.on('finish', () => {\n\t\t\t\tfinished = true;\n\t\t\t});\n\t\t\twriteStream.on('close', () => {\n\t\t\t\tif (!finished) {\n\t\t\t\t\twriteStream.emit('finish');\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn writeStream;\n\t\t};\n\t}\n}\n\n// Add store to UFS namespace\nUploadFS.store.GridFS = GridFSStore;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7addf6daf7e38a96d8596173457512032974a866"}
