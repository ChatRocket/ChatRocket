{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/converters/threads.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/converters/threads.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/converters/threads.ts","inputSourceMap":{"version":3,"file":"app/apps/server/converters/threads.ts","sourceRoot":"","sources":["app/apps/server/converters/threads.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAppRoomsConverter, IAppThreadsConverter, IAppUsersConverter, IAppsMessage, IAppsUser } from '@rocket.chat/apps';\nimport type { IMessage as AppsEngineMessage, IMessageAttachment } from '@rocket.chat/apps-engine/definition/messages';\nimport type { IRoom } from '@rocket.chat/apps-engine/definition/rooms';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { isEditedMessage, type IMessage } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\n\nimport { cachedFunction } from './cachedFunction';\nimport { transformMappedData } from './transformMappedData';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ninterface Orchestrator {\n\trooms: () => {\n\t\tconvertById: IAppRoomsConverter['convertById'];\n\t};\n\tusers: () => {\n\t\tconvertById: IAppUsersConverter['convertById'];\n\t\tconvertToApp: IAppUsersConverter['convertToApp'];\n\t};\n}\n\nexport class AppThreadsConverter implements IAppThreadsConverter {\n\tconstructor(\n\t\tprivate readonly orch: {\n\t\t\tgetConverters: () => {\n\t\t\t\tget: <O extends keyof Orchestrator>(key: O) => ReturnType<Orchestrator[O]>;\n\t\t\t};\n\t\t},\n\t) {\n\t\tthis.orch = orch;\n\t}\n\n\tasync convertById(threadId: string) {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: threadId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttmid: threadId,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\tconst mainMessage = await Messages.findOneById(threadId);\n\n\t\tif (!mainMessage) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst replies = await Messages.find(query).toArray();\n\n\t\tconst room = (await this.orch.getConverters().get('rooms').convertById(mainMessage.rid)) as IRoom | undefined;\n\n\t\tif (!room) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst convertToApp = cachedFunction(this.orch.getConverters().get('users').convertToApp.bind(this.orch.getConverters().get('users')));\n\n\t\tconst convertUserById = cachedFunction(this.orch.getConverters().get('users').convertById.bind(this.orch.getConverters().get('users')));\n\n\t\treturn Promise.all([mainMessage, ...replies].map((msg) => this.convertMessage(msg, room, convertUserById, convertToApp)));\n\t}\n\n\tasync convertMessage(\n\t\tmsgObj: IMessage,\n\t\troom: IRoom,\n\t\tconvertUserById: ReturnType<Orchestrator['users']>['convertById'],\n\t\tconvertToApp: ReturnType<Orchestrator['users']>['convertToApp'],\n\t): Promise<AppsEngineMessage> {\n\t\tconst map = {\n\t\t\tid: '_id',\n\t\t\tthreadId: 'tmid',\n\t\t\treactions: 'reactions',\n\t\t\tparseUrls: 'parseUrls',\n\t\t\ttext: 'msg',\n\t\t\tcreatedAt: 'ts',\n\t\t\tupdatedAt: '_updatedAt',\n\t\t\teditedAt: 'editedAt',\n\t\t\temoji: 'emoji',\n\t\t\tavatarUrl: 'avatar',\n\t\t\talias: 'alias',\n\t\t\tfile: 'file',\n\t\t\tcustomFields: 'customFields',\n\t\t\tgroupable: 'groupable',\n\t\t\ttoken: 'token',\n\t\t\tblocks: 'blocks',\n\t\t\troom: () => room,\n\t\t\teditor: async (message: IMessage) => {\n\t\t\t\tif (!isEditedMessage(message)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst { editedBy } = message;\n\n\t\t\t\treturn convertUserById(editedBy._id);\n\t\t\t},\n\t\t\tattachments: async (message: IMessage): Promise<IAppsMessage['attachments']> => {\n\t\t\t\tif (!message.attachments) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst result = await this._convertAttachmentsToApp(message.attachments);\n\t\t\t\tdelete message.attachments;\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tsender: async (message: IMessage): Promise<IAppsUser> => {\n\t\t\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\t\t\tif (!message.u?._id) {\n\t\t\t\t\treturn undefined as unknown as IAppsUser;\n\t\t\t\t}\n\n\t\t\t\tlet user: IAppsUser | undefined = await convertUserById(message.u._id);\n\n\t\t\t\t// When the sender of the message is a Guest (livechat) and not a user\n\t\t\t\tif (!user) {\n\t\t\t\t\tuser = await convertToApp(message.u as unknown as IUser);\n\t\t\t\t}\n\n\t\t\t\treturn user as IAppsUser;\n\t\t\t},\n\t\t} as const;\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst msgData = {\n\t\t\t...msgObj,\n\t\t\treactions: msgObj.reactions as unknown as AppsEngineMessage['reactions'],\n\t\t} as IMessage & { reactions?: AppsEngineMessage['reactions'] };\n\n\t\treturn transformMappedData(msgData, map);\n\t}\n\n\tasync _convertAttachmentsToApp(attachments: NonNullable<IMessage['attachments']>): Promise<NonNullable<IAppsMessage['attachments']>> {\n\t\tconst map = {\n\t\t\tcollapsed: 'collapsed',\n\t\t\tcolor: 'color',\n\t\t\ttext: 'text',\n\t\t\ttimestampLink: 'message_link',\n\t\t\tthumbnailUrl: 'thumb_url',\n\t\t\timageDimensions: 'image_dimensions',\n\t\t\timagePreview: 'image_preview',\n\t\t\timageUrl: 'image_url',\n\t\t\timageType: 'image_type',\n\t\t\timageSize: 'image_size',\n\t\t\taudioUrl: 'audio_url',\n\t\t\taudioType: 'audio_type',\n\t\t\taudioSize: 'audio_size',\n\t\t\tvideoUrl: 'video_url',\n\t\t\tvideoType: 'video_type',\n\t\t\tvideoSize: 'video_size',\n\t\t\tfields: 'fields',\n\t\t\tactionButtonsAlignment: 'button_alignment',\n\t\t\tactions: 'actions',\n\t\t\ttype: 'type',\n\t\t\tdescription: 'description',\n\t\t\tauthor: (attachment: NonNullable<IMessage['attachments']>[number]): IMessageAttachment['author'] => {\n\t\t\t\tif (!('author_name' in attachment)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { author_name: name, author_link: link, author_icon: icon } = attachment;\n\n\t\t\t\tdelete attachment.author_name;\n\t\t\t\tdelete attachment.author_link;\n\t\t\t\tdelete attachment.author_icon;\n\n\t\t\t\treturn { name, link, icon };\n\t\t\t},\n\t\t\ttitle: (attachment: NonNullable<IMessage['attachments']>[number]) => {\n\t\t\t\tconst { title: value, title_link: link, title_link_download: displayDownloadLink } = attachment;\n\n\t\t\t\tdelete attachment.title;\n\t\t\t\tdelete attachment.title_link;\n\t\t\t\tdelete attachment.title_link_download;\n\n\t\t\t\treturn { value, link, displayDownloadLink };\n\t\t\t},\n\t\t\ttimestamp: (attachment: NonNullable<IMessage['attachments']>[number]) => {\n\t\t\t\tconst result = attachment.ts ? new Date(attachment.ts) : undefined;\n\t\t\t\tdelete attachment.ts;\n\t\t\t\treturn result;\n\t\t\t},\n\t\t} as const;\n\n\t\treturn Promise.all(attachments.map(async (attachment) => transformMappedData(attachment, map)));\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/converters/threads.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/converters/threads.ts","inputSourceMap":{"version":3,"file":"app/apps/server/converters/threads.ts","sourceRoot":"","sources":["app/apps/server/converters/threads.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,eAAe,EAAiB,MAAM,2BAA2B,CAAC;AAC3E,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAE/C,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAa5D,MAAM,OAAO,mBAAmB;IAEb;IADlB,YACkB,IAIhB;QAJgB,SAAI,GAAJ,IAAI,CAIpB;QAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,QAAgB;QACjC,MAAM,KAAK,GAAG;YACb,GAAG,EAAE;gBACJ;oBACC,GAAG,EAAE,QAAQ;iBACb;gBACD;oBACC,IAAI,EAAE,QAAQ;iBACd;aACD;SACD,CAAC;QAEF,MAAM,WAAW,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAEzD,IAAI,CAAC,WAAW,EAAE,CAAC;YAClB,OAAO,EAAE,CAAC;QACX,CAAC;QAED,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;QAErD,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAsB,CAAC;QAE9G,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO,EAAE,CAAC;QACX,CAAC;QAED,MAAM,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAEtI,MAAM,eAAe,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAExI,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;IAC3H,CAAC;IAED,KAAK,CAAC,cAAc,CACnB,MAAgB,EAChB,IAAW,EACX,eAAiE,EACjE,YAA+D;QAE/D,MAAM,GAAG,GAAG;YACX,EAAE,EAAE,KAAK;YACT,QAAQ,EAAE,MAAM;YAChB,SAAS,EAAE,WAAW;YACtB,SAAS,EAAE,WAAW;YACtB,IAAI,EAAE,KAAK;YACX,SAAS,EAAE,IAAI;YACf,SAAS,EAAE,YAAY;YACvB,QAAQ,EAAE,UAAU;YACpB,KAAK,EAAE,OAAO;YACd,SAAS,EAAE,QAAQ;YACnB,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,MAAM;YACZ,YAAY,EAAE,cAAc;YAC5B,SAAS,EAAE,WAAW;YACtB,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,QAAQ;YAChB,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI;YAChB,MAAM,EAAE,KAAK,EAAE,OAAiB,EAAE,EAAE;gBACnC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC;oBAC/B,OAAO,SAAS,CAAC;gBAClB,CAAC;gBAED,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC;gBAE7B,OAAO,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACtC,CAAC;YACD,WAAW,EAAE,KAAK,EAAE,OAAiB,EAAwC,EAAE;gBAC9E,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;oBAC1B,OAAO,SAAS,CAAC;gBAClB,CAAC;gBACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBACxE,OAAO,OAAO,CAAC,WAAW,CAAC;gBAC3B,OAAO,MAAM,CAAC;YACf,CAAC;YACD,MAAM,EAAE,KAAK,EAAE,OAAiB,EAAsB,EAAE;gBACvD,kIAAkI;gBAClI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC;oBACrB,OAAO,SAAiC,CAAC;gBAC1C,CAAC;gBAED,IAAI,IAAI,GAA0B,MAAM,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAEvE,sEAAsE;gBACtE,IAAI,CAAC,IAAI,EAAE,CAAC;oBACX,IAAI,GAAG,MAAM,YAAY,CAAC,OAAO,CAAC,CAAqB,CAAC,CAAC;gBAC1D,CAAC;gBAED,OAAO,IAAiB,CAAC;YAC1B,CAAC;SACQ,CAAC;QAEX,kIAAkI;QAClI,MAAM,OAAO,GAAG;YACf,GAAG,MAAM;YACT,SAAS,EAAE,MAAM,CAAC,SAAsD;SACX,CAAC;QAE/D,OAAO,mBAAmB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,wBAAwB,CAAC,WAAiD;QAC/E,MAAM,GAAG,GAAG;YACX,SAAS,EAAE,WAAW;YACtB,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,MAAM;YACZ,aAAa,EAAE,cAAc;YAC7B,YAAY,EAAE,WAAW;YACzB,eAAe,EAAE,kBAAkB;YACnC,YAAY,EAAE,eAAe;YAC7B,QAAQ,EAAE,WAAW;YACrB,SAAS,EAAE,YAAY;YACvB,SAAS,EAAE,YAAY;YACvB,QAAQ,EAAE,WAAW;YACrB,SAAS,EAAE,YAAY;YACvB,SAAS,EAAE,YAAY;YACvB,QAAQ,EAAE,WAAW;YACrB,SAAS,EAAE,YAAY;YACvB,SAAS,EAAE,YAAY;YACvB,MAAM,EAAE,QAAQ;YAChB,sBAAsB,EAAE,kBAAkB;YAC1C,OAAO,EAAE,SAAS;YAClB,IAAI,EAAE,MAAM;YACZ,WAAW,EAAE,aAAa;YAC1B,MAAM,EAAE,CAAC,UAAwD,EAAgC,EAAE;gBAClG,IAAI,CAAC,CAAC,aAAa,IAAI,UAAU,CAAC,EAAE,CAAC;oBACpC,OAAO;gBACR,CAAC;gBAED,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,UAAU,CAAC;gBAE/E,OAAO,UAAU,CAAC,WAAW,CAAC;gBAC9B,OAAO,UAAU,CAAC,WAAW,CAAC;gBAC9B,OAAO,UAAU,CAAC,WAAW,CAAC;gBAE9B,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;YAC7B,CAAC;YACD,KAAK,EAAE,CAAC,UAAwD,EAAE,EAAE;gBACnE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,GAAG,UAAU,CAAC;gBAEhG,OAAO,UAAU,CAAC,KAAK,CAAC;gBACxB,OAAO,UAAU,CAAC,UAAU,CAAC;gBAC7B,OAAO,UAAU,CAAC,mBAAmB,CAAC;gBAEtC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC;YAC7C,CAAC;YACD,SAAS,EAAE,CAAC,UAAwD,EAAE,EAAE;gBACvE,MAAM,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBACnE,OAAO,UAAU,CAAC,EAAE,CAAC;gBACrB,OAAO,MAAM,CAAC;YACf,CAAC;SACQ,CAAC;QAEX,OAAO,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,EAAE,EAAE,CAAC,mBAAmB,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACjG,CAAC;CACD","sourcesContent":["import type { IAppRoomsConverter, IAppThreadsConverter, IAppUsersConverter, IAppsMessage, IAppsUser } from '@rocket.chat/apps';\nimport type { IMessage as AppsEngineMessage, IMessageAttachment } from '@rocket.chat/apps-engine/definition/messages';\nimport type { IRoom } from '@rocket.chat/apps-engine/definition/rooms';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { isEditedMessage, type IMessage } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\n\nimport { cachedFunction } from './cachedFunction';\nimport { transformMappedData } from './transformMappedData';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ninterface Orchestrator {\n\trooms: () => {\n\t\tconvertById: IAppRoomsConverter['convertById'];\n\t};\n\tusers: () => {\n\t\tconvertById: IAppUsersConverter['convertById'];\n\t\tconvertToApp: IAppUsersConverter['convertToApp'];\n\t};\n}\n\nexport class AppThreadsConverter implements IAppThreadsConverter {\n\tconstructor(\n\t\tprivate readonly orch: {\n\t\t\tgetConverters: () => {\n\t\t\t\tget: <O extends keyof Orchestrator>(key: O) => ReturnType<Orchestrator[O]>;\n\t\t\t};\n\t\t},\n\t) {\n\t\tthis.orch = orch;\n\t}\n\n\tasync convertById(threadId: string) {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: threadId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttmid: threadId,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\tconst mainMessage = await Messages.findOneById(threadId);\n\n\t\tif (!mainMessage) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst replies = await Messages.find(query).toArray();\n\n\t\tconst room = (await this.orch.getConverters().get('rooms').convertById(mainMessage.rid)) as IRoom | undefined;\n\n\t\tif (!room) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst convertToApp = cachedFunction(this.orch.getConverters().get('users').convertToApp.bind(this.orch.getConverters().get('users')));\n\n\t\tconst convertUserById = cachedFunction(this.orch.getConverters().get('users').convertById.bind(this.orch.getConverters().get('users')));\n\n\t\treturn Promise.all([mainMessage, ...replies].map((msg) => this.convertMessage(msg, room, convertUserById, convertToApp)));\n\t}\n\n\tasync convertMessage(\n\t\tmsgObj: IMessage,\n\t\troom: IRoom,\n\t\tconvertUserById: ReturnType<Orchestrator['users']>['convertById'],\n\t\tconvertToApp: ReturnType<Orchestrator['users']>['convertToApp'],\n\t): Promise<AppsEngineMessage> {\n\t\tconst map = {\n\t\t\tid: '_id',\n\t\t\tthreadId: 'tmid',\n\t\t\treactions: 'reactions',\n\t\t\tparseUrls: 'parseUrls',\n\t\t\ttext: 'msg',\n\t\t\tcreatedAt: 'ts',\n\t\t\tupdatedAt: '_updatedAt',\n\t\t\teditedAt: 'editedAt',\n\t\t\temoji: 'emoji',\n\t\t\tavatarUrl: 'avatar',\n\t\t\talias: 'alias',\n\t\t\tfile: 'file',\n\t\t\tcustomFields: 'customFields',\n\t\t\tgroupable: 'groupable',\n\t\t\ttoken: 'token',\n\t\t\tblocks: 'blocks',\n\t\t\troom: () => room,\n\t\t\teditor: async (message: IMessage) => {\n\t\t\t\tif (!isEditedMessage(message)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst { editedBy } = message;\n\n\t\t\t\treturn convertUserById(editedBy._id);\n\t\t\t},\n\t\t\tattachments: async (message: IMessage): Promise<IAppsMessage['attachments']> => {\n\t\t\t\tif (!message.attachments) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst result = await this._convertAttachmentsToApp(message.attachments);\n\t\t\t\tdelete message.attachments;\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tsender: async (message: IMessage): Promise<IAppsUser> => {\n\t\t\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\t\t\tif (!message.u?._id) {\n\t\t\t\t\treturn undefined as unknown as IAppsUser;\n\t\t\t\t}\n\n\t\t\t\tlet user: IAppsUser | undefined = await convertUserById(message.u._id);\n\n\t\t\t\t// When the sender of the message is a Guest (livechat) and not a user\n\t\t\t\tif (!user) {\n\t\t\t\t\tuser = await convertToApp(message.u as unknown as IUser);\n\t\t\t\t}\n\n\t\t\t\treturn user as IAppsUser;\n\t\t\t},\n\t\t} as const;\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst msgData = {\n\t\t\t...msgObj,\n\t\t\treactions: msgObj.reactions as unknown as AppsEngineMessage['reactions'],\n\t\t} as IMessage & { reactions?: AppsEngineMessage['reactions'] };\n\n\t\treturn transformMappedData(msgData, map);\n\t}\n\n\tasync _convertAttachmentsToApp(attachments: NonNullable<IMessage['attachments']>): Promise<NonNullable<IAppsMessage['attachments']>> {\n\t\tconst map = {\n\t\t\tcollapsed: 'collapsed',\n\t\t\tcolor: 'color',\n\t\t\ttext: 'text',\n\t\t\ttimestampLink: 'message_link',\n\t\t\tthumbnailUrl: 'thumb_url',\n\t\t\timageDimensions: 'image_dimensions',\n\t\t\timagePreview: 'image_preview',\n\t\t\timageUrl: 'image_url',\n\t\t\timageType: 'image_type',\n\t\t\timageSize: 'image_size',\n\t\t\taudioUrl: 'audio_url',\n\t\t\taudioType: 'audio_type',\n\t\t\taudioSize: 'audio_size',\n\t\t\tvideoUrl: 'video_url',\n\t\t\tvideoType: 'video_type',\n\t\t\tvideoSize: 'video_size',\n\t\t\tfields: 'fields',\n\t\t\tactionButtonsAlignment: 'button_alignment',\n\t\t\tactions: 'actions',\n\t\t\ttype: 'type',\n\t\t\tdescription: 'description',\n\t\t\tauthor: (attachment: NonNullable<IMessage['attachments']>[number]): IMessageAttachment['author'] => {\n\t\t\t\tif (!('author_name' in attachment)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { author_name: name, author_link: link, author_icon: icon } = attachment;\n\n\t\t\t\tdelete attachment.author_name;\n\t\t\t\tdelete attachment.author_link;\n\t\t\t\tdelete attachment.author_icon;\n\n\t\t\t\treturn { name, link, icon };\n\t\t\t},\n\t\t\ttitle: (attachment: NonNullable<IMessage['attachments']>[number]) => {\n\t\t\t\tconst { title: value, title_link: link, title_link_download: displayDownloadLink } = attachment;\n\n\t\t\t\tdelete attachment.title;\n\t\t\t\tdelete attachment.title_link;\n\t\t\t\tdelete attachment.title_link_download;\n\n\t\t\t\treturn { value, link, displayDownloadLink };\n\t\t\t},\n\t\t\ttimestamp: (attachment: NonNullable<IMessage['attachments']>[number]) => {\n\t\t\t\tconst result = attachment.ts ? new Date(attachment.ts) : undefined;\n\t\t\t\tdelete attachment.ts;\n\t\t\t\treturn result;\n\t\t\t},\n\t\t} as const;\n\n\t\treturn Promise.all(attachments.map(async (attachment) => transformMappedData(attachment, map)));\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      AppThreadsConverter: () => AppThreadsConverter\n    });\n    let isEditedMessage;\n    module.link(\"@rocket.chat/core-typings\", {\n      isEditedMessage(v) {\n        isEditedMessage = v;\n      }\n    }, 0);\n    let Messages;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      }\n    }, 1);\n    let cachedFunction;\n    module.link(\"./cachedFunction\", {\n      cachedFunction(v) {\n        cachedFunction = v;\n      }\n    }, 2);\n    let transformMappedData;\n    module.link(\"./transformMappedData\", {\n      transformMappedData(v) {\n        transformMappedData = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AppThreadsConverter {\n      constructor(orch) {\n        this.orch = void 0;\n        this.orch = orch;\n        this.orch = orch;\n      }\n      async convertById(threadId) {\n        const query = {\n          $or: [{\n            _id: threadId\n          }, {\n            tmid: threadId\n          }]\n        };\n        const mainMessage = await Messages.findOneById(threadId);\n        if (!mainMessage) {\n          return [];\n        }\n        const replies = await Messages.find(query).toArray();\n        const room = await this.orch.getConverters().get('rooms').convertById(mainMessage.rid);\n        if (!room) {\n          return [];\n        }\n        const convertToApp = cachedFunction(this.orch.getConverters().get('users').convertToApp.bind(this.orch.getConverters().get('users')));\n        const convertUserById = cachedFunction(this.orch.getConverters().get('users').convertById.bind(this.orch.getConverters().get('users')));\n        return Promise.all([mainMessage, ...replies].map(msg => this.convertMessage(msg, room, convertUserById, convertToApp)));\n      }\n      async convertMessage(msgObj, room, convertUserById, convertToApp) {\n        const map = {\n          id: '_id',\n          threadId: 'tmid',\n          reactions: 'reactions',\n          parseUrls: 'parseUrls',\n          text: 'msg',\n          createdAt: 'ts',\n          updatedAt: '_updatedAt',\n          editedAt: 'editedAt',\n          emoji: 'emoji',\n          avatarUrl: 'avatar',\n          alias: 'alias',\n          file: 'file',\n          customFields: 'customFields',\n          groupable: 'groupable',\n          token: 'token',\n          blocks: 'blocks',\n          room: () => room,\n          editor: async message => {\n            if (!isEditedMessage(message)) {\n              return undefined;\n            }\n            const {\n              editedBy\n            } = message;\n            return convertUserById(editedBy._id);\n          },\n          attachments: async message => {\n            if (!message.attachments) {\n              return undefined;\n            }\n            const result = await this._convertAttachmentsToApp(message.attachments);\n            delete message.attachments;\n            return result;\n          },\n          sender: async message => {\n            var _message$u;\n            // #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n            if (!((_message$u = message.u) !== null && _message$u !== void 0 && _message$u._id)) {\n              return undefined;\n            }\n            let user = await convertUserById(message.u._id);\n            // When the sender of the message is a Guest (livechat) and not a user\n            if (!user) {\n              user = await convertToApp(message.u);\n            }\n            return user;\n          }\n        };\n        // #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n        const msgData = _objectSpread(_objectSpread({}, msgObj), {}, {\n          reactions: msgObj.reactions\n        });\n        return transformMappedData(msgData, map);\n      }\n      async _convertAttachmentsToApp(attachments) {\n        const map = {\n          collapsed: 'collapsed',\n          color: 'color',\n          text: 'text',\n          timestampLink: 'message_link',\n          thumbnailUrl: 'thumb_url',\n          imageDimensions: 'image_dimensions',\n          imagePreview: 'image_preview',\n          imageUrl: 'image_url',\n          imageType: 'image_type',\n          imageSize: 'image_size',\n          audioUrl: 'audio_url',\n          audioType: 'audio_type',\n          audioSize: 'audio_size',\n          videoUrl: 'video_url',\n          videoType: 'video_type',\n          videoSize: 'video_size',\n          fields: 'fields',\n          actionButtonsAlignment: 'button_alignment',\n          actions: 'actions',\n          type: 'type',\n          description: 'description',\n          author: attachment => {\n            if (!('author_name' in attachment)) {\n              return;\n            }\n            const {\n              author_name: name,\n              author_link: link,\n              author_icon: icon\n            } = attachment;\n            delete attachment.author_name;\n            delete attachment.author_link;\n            delete attachment.author_icon;\n            return {\n              name,\n              link,\n              icon\n            };\n          },\n          title: attachment => {\n            const {\n              title: value,\n              title_link: link,\n              title_link_download: displayDownloadLink\n            } = attachment;\n            delete attachment.title;\n            delete attachment.title_link;\n            delete attachment.title_link_download;\n            return {\n              value,\n              link,\n              displayDownloadLink\n            };\n          },\n          timestamp: attachment => {\n            const result = attachment.ts ? new Date(attachment.ts) : undefined;\n            delete attachment.ts;\n            return result;\n          }\n        };\n        return Promise.all(attachments.map(async attachment => transformMappedData(attachment, map)));\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","AppThreadsConverter","isEditedMessage","Messages","cachedFunction","transformMappedData","__reifyWaitForDeps__","constructor","orch","convertById","threadId","query","$or","_id","tmid","mainMessage","findOneById","replies","find","toArray","room","getConverters","get","rid","convertToApp","bind","convertUserById","Promise","all","map","msg","convertMessage","msgObj","id","reactions","parseUrls","text","createdAt","updatedAt","editedAt","emoji","avatarUrl","alias","file","customFields","groupable","token","blocks","editor","message","undefined","editedBy","attachments","result","_convertAttachmentsToApp","sender","_message$u","u","user","msgData","collapsed","color","timestampLink","thumbnailUrl","imageDimensions","imagePreview","imageUrl","imageType","imageSize","audioUrl","audioType","audioSize","videoUrl","videoType","videoSize","fields","actionButtonsAlignment","actions","type","description","author","attachment","author_name","name","author_link","author_icon","icon","title","value","title_link","title_link_download","displayDownloadLink","timestamp","ts","Date","__reify_async_result__","_reifyError","self","async"],"sources":["app/apps/server/converters/threads.ts"],"sourcesContent":["import type { IAppRoomsConverter, IAppThreadsConverter, IAppUsersConverter, IAppsMessage, IAppsUser } from '@rocket.chat/apps';\nimport type { IMessage as AppsEngineMessage, IMessageAttachment } from '@rocket.chat/apps-engine/definition/messages';\nimport type { IRoom } from '@rocket.chat/apps-engine/definition/rooms';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport { isEditedMessage, type IMessage } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\n\nimport { cachedFunction } from './cachedFunction';\nimport { transformMappedData } from './transformMappedData';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ninterface Orchestrator {\n\trooms: () => {\n\t\tconvertById: IAppRoomsConverter['convertById'];\n\t};\n\tusers: () => {\n\t\tconvertById: IAppUsersConverter['convertById'];\n\t\tconvertToApp: IAppUsersConverter['convertToApp'];\n\t};\n}\n\nexport class AppThreadsConverter implements IAppThreadsConverter {\n\tconstructor(\n\t\tprivate readonly orch: {\n\t\t\tgetConverters: () => {\n\t\t\t\tget: <O extends keyof Orchestrator>(key: O) => ReturnType<Orchestrator[O]>;\n\t\t\t};\n\t\t},\n\t) {\n\t\tthis.orch = orch;\n\t}\n\n\tasync convertById(threadId: string) {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: threadId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttmid: threadId,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\tconst mainMessage = await Messages.findOneById(threadId);\n\n\t\tif (!mainMessage) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst replies = await Messages.find(query).toArray();\n\n\t\tconst room = (await this.orch.getConverters().get('rooms').convertById(mainMessage.rid)) as IRoom | undefined;\n\n\t\tif (!room) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst convertToApp = cachedFunction(this.orch.getConverters().get('users').convertToApp.bind(this.orch.getConverters().get('users')));\n\n\t\tconst convertUserById = cachedFunction(this.orch.getConverters().get('users').convertById.bind(this.orch.getConverters().get('users')));\n\n\t\treturn Promise.all([mainMessage, ...replies].map((msg) => this.convertMessage(msg, room, convertUserById, convertToApp)));\n\t}\n\n\tasync convertMessage(\n\t\tmsgObj: IMessage,\n\t\troom: IRoom,\n\t\tconvertUserById: ReturnType<Orchestrator['users']>['convertById'],\n\t\tconvertToApp: ReturnType<Orchestrator['users']>['convertToApp'],\n\t): Promise<AppsEngineMessage> {\n\t\tconst map = {\n\t\t\tid: '_id',\n\t\t\tthreadId: 'tmid',\n\t\t\treactions: 'reactions',\n\t\t\tparseUrls: 'parseUrls',\n\t\t\ttext: 'msg',\n\t\t\tcreatedAt: 'ts',\n\t\t\tupdatedAt: '_updatedAt',\n\t\t\teditedAt: 'editedAt',\n\t\t\temoji: 'emoji',\n\t\t\tavatarUrl: 'avatar',\n\t\t\talias: 'alias',\n\t\t\tfile: 'file',\n\t\t\tcustomFields: 'customFields',\n\t\t\tgroupable: 'groupable',\n\t\t\ttoken: 'token',\n\t\t\tblocks: 'blocks',\n\t\t\troom: () => room,\n\t\t\teditor: async (message: IMessage) => {\n\t\t\t\tif (!isEditedMessage(message)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst { editedBy } = message;\n\n\t\t\t\treturn convertUserById(editedBy._id);\n\t\t\t},\n\t\t\tattachments: async (message: IMessage): Promise<IAppsMessage['attachments']> => {\n\t\t\t\tif (!message.attachments) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst result = await this._convertAttachmentsToApp(message.attachments);\n\t\t\t\tdelete message.attachments;\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tsender: async (message: IMessage): Promise<IAppsUser> => {\n\t\t\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\t\t\tif (!message.u?._id) {\n\t\t\t\t\treturn undefined as unknown as IAppsUser;\n\t\t\t\t}\n\n\t\t\t\tlet user: IAppsUser | undefined = await convertUserById(message.u._id);\n\n\t\t\t\t// When the sender of the message is a Guest (livechat) and not a user\n\t\t\t\tif (!user) {\n\t\t\t\t\tuser = await convertToApp(message.u as unknown as IUser);\n\t\t\t\t}\n\n\t\t\t\treturn user as IAppsUser;\n\t\t\t},\n\t\t} as const;\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst msgData = {\n\t\t\t...msgObj,\n\t\t\treactions: msgObj.reactions as unknown as AppsEngineMessage['reactions'],\n\t\t} as IMessage & { reactions?: AppsEngineMessage['reactions'] };\n\n\t\treturn transformMappedData(msgData, map);\n\t}\n\n\tasync _convertAttachmentsToApp(attachments: NonNullable<IMessage['attachments']>): Promise<NonNullable<IAppsMessage['attachments']>> {\n\t\tconst map = {\n\t\t\tcollapsed: 'collapsed',\n\t\t\tcolor: 'color',\n\t\t\ttext: 'text',\n\t\t\ttimestampLink: 'message_link',\n\t\t\tthumbnailUrl: 'thumb_url',\n\t\t\timageDimensions: 'image_dimensions',\n\t\t\timagePreview: 'image_preview',\n\t\t\timageUrl: 'image_url',\n\t\t\timageType: 'image_type',\n\t\t\timageSize: 'image_size',\n\t\t\taudioUrl: 'audio_url',\n\t\t\taudioType: 'audio_type',\n\t\t\taudioSize: 'audio_size',\n\t\t\tvideoUrl: 'video_url',\n\t\t\tvideoType: 'video_type',\n\t\t\tvideoSize: 'video_size',\n\t\t\tfields: 'fields',\n\t\t\tactionButtonsAlignment: 'button_alignment',\n\t\t\tactions: 'actions',\n\t\t\ttype: 'type',\n\t\t\tdescription: 'description',\n\t\t\tauthor: (attachment: NonNullable<IMessage['attachments']>[number]): IMessageAttachment['author'] => {\n\t\t\t\tif (!('author_name' in attachment)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { author_name: name, author_link: link, author_icon: icon } = attachment;\n\n\t\t\t\tdelete attachment.author_name;\n\t\t\t\tdelete attachment.author_link;\n\t\t\t\tdelete attachment.author_icon;\n\n\t\t\t\treturn { name, link, icon };\n\t\t\t},\n\t\t\ttitle: (attachment: NonNullable<IMessage['attachments']>[number]) => {\n\t\t\t\tconst { title: value, title_link: link, title_link_download: displayDownloadLink } = attachment;\n\n\t\t\t\tdelete attachment.title;\n\t\t\t\tdelete attachment.title_link;\n\t\t\t\tdelete attachment.title_link_download;\n\n\t\t\t\treturn { value, link, displayDownloadLink };\n\t\t\t},\n\t\t\ttimestamp: (attachment: NonNullable<IMessage['attachments']>[number]) => {\n\t\t\t\tconst result = attachment.ts ? new Date(attachment.ts) : undefined;\n\t\t\t\tdelete attachment.ts;\n\t\t\t\treturn result;\n\t\t\t},\n\t\t} as const;\n\n\t\treturn Promise.all(attachments.map(async (attachment) => transformMappedData(attachment, map)));\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a82248b49403bfb24156474104ad05c43aca3b2d"}
