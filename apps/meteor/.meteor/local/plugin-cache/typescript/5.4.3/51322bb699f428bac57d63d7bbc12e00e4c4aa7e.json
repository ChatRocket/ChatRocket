{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/loadMissedMessages.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/startup/loadMissedMessages.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/loadMissedMessages.ts","inputSourceMap":{"version":3,"file":"client/startup/loadMissedMessages.ts","sourceRoot":"","sources":["client/startup/loadMissedMessages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AACxE,OAAO,EAAE,iBAAiB,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAC7E,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAC;AAE3E,MAAM,kBAAkB,GAAG,KAAK,WAAW,GAAiB;IAC3D,MAAM,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IAEnI,IAAI,CAAC,WAAW,EAAE,CAAC;QAClB,OAAO;IACR,CAAC;IAED,IAAI,CAAC;QACJ,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,oBAAoB,EAAE,GAAG,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;QACtF,IAAI,MAAM,EAAE,CAAC;YACZ,MAAM,YAAY,GAAG,gBAAgB,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YACvD,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1F,CAAC;IACF,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QAChB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,IAAI,mBAAmB,GAAG,IAAI,CAAC;IAC/B,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE;QACpB,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QAEjD,IAAI,SAAS,KAAK,IAAI,IAAI,mBAAmB,KAAK,KAAK,IAAI,iBAAiB,CAAC,WAAW,EAAE,CAAC;YAC1F,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC1D,MAAM,KAAK,GAAG,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACjD,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC;oBACf,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC/B,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QACD,mBAAmB,GAAG,SAAS,CAAC;IACjC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { ChatMessage, ChatSubscription } from '../../app/models/client';\nimport { LegacyRoomManager, upsertMessage } from '../../app/ui-utils/client';\nimport { callWithErrorHandling } from '../lib/utils/callWithErrorHandling';\n\nconst loadMissedMessages = async function (rid: IRoom['_id']): Promise<void> {\n\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true }, temp: { $exists: false } }, { sort: { ts: -1 }, limit: 1 });\n\n\tif (!lastMessage) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst result = await callWithErrorHandling('loadMissedMessages', rid, lastMessage.ts);\n\t\tif (result) {\n\t\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\t\tawait Promise.all(Array.from(result).map((msg) => upsertMessage({ msg, subscription })));\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n\nMeteor.startup(() => {\n\tlet connectionWasOnline = true;\n\tTracker.autorun(() => {\n\t\tconst { connected } = Meteor.connection.status();\n\n\t\tif (connected === true && connectionWasOnline === false && LegacyRoomManager.openedRooms) {\n\t\t\tObject.keys(LegacyRoomManager.openedRooms).forEach((key) => {\n\t\t\t\tconst value = LegacyRoomManager.openedRooms[key];\n\t\t\t\tif (value.rid) {\n\t\t\t\t\tloadMissedMessages(value.rid);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tconnectionWasOnline = connected;\n\t});\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/startup/loadMissedMessages.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/startup/loadMissedMessages.ts","inputSourceMap":{"version":3,"file":"client/startup/loadMissedMessages.ts","sourceRoot":"","sources":["client/startup/loadMissedMessages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAEzC,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AACxE,OAAO,EAAE,iBAAiB,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAC7E,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAC;AAE3E,MAAM,kBAAkB,GAAG,KAAK,WAAW,GAAiB;IAC3D,MAAM,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IAEnI,IAAI,CAAC,WAAW,EAAE,CAAC;QAClB,OAAO;IACR,CAAC;IAED,IAAI,CAAC;QACJ,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,oBAAoB,EAAE,GAAG,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC;QACtF,IAAI,MAAM,EAAE,CAAC;YACZ,MAAM,YAAY,GAAG,gBAAgB,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YACvD,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1F,CAAC;IACF,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QAChB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;IACnB,IAAI,mBAAmB,GAAG,IAAI,CAAC;IAC/B,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE;QACpB,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QAEjD,IAAI,SAAS,KAAK,IAAI,IAAI,mBAAmB,KAAK,KAAK,IAAI,iBAAiB,CAAC,WAAW,EAAE,CAAC;YAC1F,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC1D,MAAM,KAAK,GAAG,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACjD,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC;oBACf,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC/B,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QACD,mBAAmB,GAAG,SAAS,CAAC;IACjC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { ChatMessage, ChatSubscription } from '../../app/models/client';\nimport { LegacyRoomManager, upsertMessage } from '../../app/ui-utils/client';\nimport { callWithErrorHandling } from '../lib/utils/callWithErrorHandling';\n\nconst loadMissedMessages = async function (rid: IRoom['_id']): Promise<void> {\n\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true }, temp: { $exists: false } }, { sort: { ts: -1 }, limit: 1 });\n\n\tif (!lastMessage) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst result = await callWithErrorHandling('loadMissedMessages', rid, lastMessage.ts);\n\t\tif (result) {\n\t\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\t\tawait Promise.all(Array.from(result).map((msg) => upsertMessage({ msg, subscription })));\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n\nMeteor.startup(() => {\n\tlet connectionWasOnline = true;\n\tTracker.autorun(() => {\n\t\tconst { connected } = Meteor.connection.status();\n\n\t\tif (connected === true && connectionWasOnline === false && LegacyRoomManager.openedRooms) {\n\t\t\tObject.keys(LegacyRoomManager.openedRooms).forEach((key) => {\n\t\t\t\tconst value = LegacyRoomManager.openedRooms[key];\n\t\t\t\tif (value.rid) {\n\t\t\t\t\tloadMissedMessages(value.rid);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tconnectionWasOnline = connected;\n\t});\n});\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 1);\nvar ChatMessage, ChatSubscription;\nmodule.link(\"../../app/models/client\", {\n  ChatMessage: function (v) {\n    ChatMessage = v;\n  },\n  ChatSubscription: function (v) {\n    ChatSubscription = v;\n  }\n}, 2);\nvar LegacyRoomManager, upsertMessage;\nmodule.link(\"../../app/ui-utils/client\", {\n  LegacyRoomManager: function (v) {\n    LegacyRoomManager = v;\n  },\n  upsertMessage: function (v) {\n    upsertMessage = v;\n  }\n}, 3);\nvar callWithErrorHandling;\nmodule.link(\"../lib/utils/callWithErrorHandling\", {\n  callWithErrorHandling: function (v) {\n    callWithErrorHandling = v;\n  }\n}, 4);\nvar loadMissedMessages = function () {\n  function _callee(rid) {\n    var lastMessage, result, subscription;\n    return _regeneratorRuntime.async(function () {\n      function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            lastMessage = ChatMessage.findOne({\n              rid: rid,\n              _hidden: {\n                $ne: true\n              },\n              temp: {\n                $exists: false\n              }\n            }, {\n              sort: {\n                ts: -1\n              },\n              limit: 1\n            });\n            if (lastMessage) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 3:\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(callWithErrorHandling('loadMissedMessages', rid, lastMessage.ts));\n          case 6:\n            result = _context.sent;\n            if (!result) {\n              _context.next = 11;\n              break;\n            }\n            subscription = ChatSubscription.findOne({\n              rid: rid\n            });\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(Promise.all(Array.from(result).map(function (msg) {\n              return upsertMessage({\n                msg: msg,\n                subscription: subscription\n              });\n            })));\n          case 11:\n            _context.next = 16;\n            break;\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](3);\n            console.error(_context.t0);\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n      return _callee$;\n    }(), null, null, [[3, 13]], Promise);\n  }\n  return _callee;\n}();\nMeteor.startup(function () {\n  var connectionWasOnline = true;\n  Tracker.autorun(function () {\n    var _Meteor$connection$st = Meteor.connection.status(),\n      connected = _Meteor$connection$st.connected;\n    if (connected === true && connectionWasOnline === false && LegacyRoomManager.openedRooms) {\n      Object.keys(LegacyRoomManager.openedRooms).forEach(function (key) {\n        var value = LegacyRoomManager.openedRooms[key];\n        if (value.rid) {\n          loadMissedMessages(value.rid);\n        }\n      });\n    }\n    connectionWasOnline = connected;\n  });\n});","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","Meteor","Tracker","ChatMessage","ChatSubscription","LegacyRoomManager","upsertMessage","callWithErrorHandling","loadMissedMessages","_callee","rid","lastMessage","result","subscription","async","_callee$","_context","prev","next","findOne","_hidden","$ne","temp","$exists","sort","ts","limit","abrupt","awrap","sent","Promise","all","Array","from","map","msg","t0","console","error","stop","startup","connectionWasOnline","autorun","_Meteor$connection$st","connection","status","connected","openedRooms","Object","keys","forEach","key","value"],"sources":["client/startup/loadMissedMessages.ts"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { ChatMessage, ChatSubscription } from '../../app/models/client';\nimport { LegacyRoomManager, upsertMessage } from '../../app/ui-utils/client';\nimport { callWithErrorHandling } from '../lib/utils/callWithErrorHandling';\n\nconst loadMissedMessages = async function (rid: IRoom['_id']): Promise<void> {\n\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true }, temp: { $exists: false } }, { sort: { ts: -1 }, limit: 1 });\n\n\tif (!lastMessage) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst result = await callWithErrorHandling('loadMissedMessages', rid, lastMessage.ts);\n\t\tif (result) {\n\t\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\t\tawait Promise.all(Array.from(result).map((msg) => upsertMessage({ msg, subscription })));\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n\nMeteor.startup(() => {\n\tlet connectionWasOnline = true;\n\tTracker.autorun(() => {\n\t\tconst { connected } = Meteor.connection.status();\n\n\t\tif (connected === true && connectionWasOnline === false && LegacyRoomManager.openedRooms) {\n\t\t\tObject.keys(LegacyRoomManager.openedRooms).forEach((key) => {\n\t\t\t\tconst value = LegacyRoomManager.openedRooms[key];\n\t\t\t\tif (value.rid) {\n\t\t\t\t\tloadMissedMessages(value.rid);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tconnectionWasOnline = connected;\n\t});\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"51322bb699f428bac57d63d7bbc12e00e4c4aa7e"}
