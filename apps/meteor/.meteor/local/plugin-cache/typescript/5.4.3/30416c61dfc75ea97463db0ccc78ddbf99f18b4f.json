{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/room/message/sender/MessageServiceSender.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/application/room/message/sender/MessageServiceSender.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/room/message/sender/MessageServiceSender.ts","inputSourceMap":{"version":3,"file":"server/services/federation/application/room/message/sender/MessageServiceSender.ts","sourceRoot":"","sources":["server/services/federation/application/room/message/sender/MessageServiceSender.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { isMessageFromMatrixFederation } from '@rocket.chat/core-typings';\n\nimport { Federation } from '../../../../Federation';\nimport { FederatedUser } from '../../../../domain/FederatedUser';\nimport type { IFederationBridge } from '../../../../domain/IFederationBridge';\nimport type { RocketChatMessageAdapter } from '../../../../infrastructure/rocket-chat/adapters/Message';\nimport type { RocketChatRoomAdapter } from '../../../../infrastructure/rocket-chat/adapters/Room';\nimport type { RocketChatSettingsAdapter } from '../../../../infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from '../../../../infrastructure/rocket-chat/adapters/User';\n\nexport class FederationMessageServiceSender {\n\tconstructor(\n\t\tprotected internalRoomAdapter: RocketChatRoomAdapter,\n\t\tprotected internalUserAdapter: RocketChatUserAdapter,\n\t\tprotected internalSettingsAdapter: RocketChatSettingsAdapter,\n\t\tprotected internalMessageAdapter: RocketChatMessageAdapter,\n\t\tprotected bridge: IFederationBridge,\n\t) {}\n\n\tpublic async sendExternalMessageReaction(internalMessage: IMessage, internalUser: IUser, reaction: string): Promise<void> {\n\t\tif (!internalMessage || !internalUser || !internalUser._id || !internalMessage.rid) {\n\t\t\treturn;\n\t\t}\n\t\tconst federatedSender = await this.internalUserAdapter.getFederatedUserByInternalId(internalUser._id);\n\t\tif (!federatedSender) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst federatedRoom = await this.internalRoomAdapter.getFederatedRoomByInternalId(internalMessage.rid);\n\t\tif (!federatedRoom) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isMessageFromMatrixFederation(internalMessage)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isUserFromTheSameHomeServer = FederatedUser.isOriginalFromTheProxyServer(\n\t\t\tthis.bridge.extractHomeserverOrigin(federatedSender.getExternalId()),\n\t\t\tthis.internalSettingsAdapter.getHomeServerDomain(),\n\t\t);\n\t\tif (!isUserFromTheSameHomeServer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst eventId = await this.bridge.sendMessageReaction(\n\t\t\tfederatedRoom.getExternalId(),\n\t\t\tfederatedSender.getExternalId(),\n\t\t\tinternalMessage.federation?.eventId as string,\n\t\t\treaction,\n\t\t);\n\t\tfederatedSender.getUsername() &&\n\t\t\t(await this.internalMessageAdapter.setExternalFederationEventOnMessageReaction(\n\t\t\t\tfederatedSender.getUsername() as string,\n\t\t\t\tinternalMessage,\n\t\t\t\treaction,\n\t\t\t\teventId,\n\t\t\t));\n\t}\n\n\tpublic async sendExternalMessageUnReaction(internalMessage: IMessage, internalUser: IUser, reaction: string): Promise<void> {\n\t\tif (!internalMessage || !internalUser || !internalUser._id || !internalMessage.rid) {\n\t\t\treturn;\n\t\t}\n\t\tconst federatedSender = await this.internalUserAdapter.getFederatedUserByInternalId(internalUser._id);\n\t\tif (!federatedSender) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst federatedRoom = await this.internalRoomAdapter.getFederatedRoomByInternalId(internalMessage.rid);\n\t\tif (!federatedRoom) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isMessageFromMatrixFederation(internalMessage)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isUserFromTheSameHomeServer = FederatedUser.isOriginalFromTheProxyServer(\n\t\t\tthis.bridge.extractHomeserverOrigin(federatedSender.getExternalId()),\n\t\t\tthis.internalSettingsAdapter.getHomeServerDomain(),\n\t\t);\n\t\tif (!isUserFromTheSameHomeServer) {\n\t\t\treturn;\n\t\t}\n\t\t// TODO: leaked business logic, move this to the domain layer\n\t\tconst externalEventId = Object.keys(internalMessage.reactions?.[reaction].federationReactionEventIds || {}).find(\n\t\t\t(key) => internalMessage.reactions?.[reaction].federationReactionEventIds?.[key] === internalUser.username,\n\t\t);\n\t\tif (!externalEventId) {\n\t\t\treturn;\n\t\t}\n\t\tconst normalizedEventId = Federation.unescapeExternalFederationEventId(externalEventId);\n\t\tawait this.bridge.redactEvent(federatedRoom.getExternalId(), federatedSender.getExternalId(), normalizedEventId);\n\t\tawait this.internalMessageAdapter.unsetExternalFederationEventOnMessageReaction(externalEventId, internalMessage, reaction);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/application/room/message/sender/MessageServiceSender.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/application/room/message/sender/MessageServiceSender.ts","inputSourceMap":{"version":3,"file":"server/services/federation/application/room/message/sender/MessageServiceSender.ts","sourceRoot":"","sources":["server/services/federation/application/room/message/sender/MessageServiceSender.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { isMessageFromMatrixFederation } from '@rocket.chat/core-typings';\n\nimport { Federation } from '../../../../Federation';\nimport { FederatedUser } from '../../../../domain/FederatedUser';\nimport type { IFederationBridge } from '../../../../domain/IFederationBridge';\nimport type { RocketChatMessageAdapter } from '../../../../infrastructure/rocket-chat/adapters/Message';\nimport type { RocketChatRoomAdapter } from '../../../../infrastructure/rocket-chat/adapters/Room';\nimport type { RocketChatSettingsAdapter } from '../../../../infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from '../../../../infrastructure/rocket-chat/adapters/User';\n\nexport class FederationMessageServiceSender {\n\tconstructor(\n\t\tprotected internalRoomAdapter: RocketChatRoomAdapter,\n\t\tprotected internalUserAdapter: RocketChatUserAdapter,\n\t\tprotected internalSettingsAdapter: RocketChatSettingsAdapter,\n\t\tprotected internalMessageAdapter: RocketChatMessageAdapter,\n\t\tprotected bridge: IFederationBridge,\n\t) {}\n\n\tpublic async sendExternalMessageReaction(internalMessage: IMessage, internalUser: IUser, reaction: string): Promise<void> {\n\t\tif (!internalMessage || !internalUser || !internalUser._id || !internalMessage.rid) {\n\t\t\treturn;\n\t\t}\n\t\tconst federatedSender = await this.internalUserAdapter.getFederatedUserByInternalId(internalUser._id);\n\t\tif (!federatedSender) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst federatedRoom = await this.internalRoomAdapter.getFederatedRoomByInternalId(internalMessage.rid);\n\t\tif (!federatedRoom) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isMessageFromMatrixFederation(internalMessage)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isUserFromTheSameHomeServer = FederatedUser.isOriginalFromTheProxyServer(\n\t\t\tthis.bridge.extractHomeserverOrigin(federatedSender.getExternalId()),\n\t\t\tthis.internalSettingsAdapter.getHomeServerDomain(),\n\t\t);\n\t\tif (!isUserFromTheSameHomeServer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst eventId = await this.bridge.sendMessageReaction(\n\t\t\tfederatedRoom.getExternalId(),\n\t\t\tfederatedSender.getExternalId(),\n\t\t\tinternalMessage.federation?.eventId as string,\n\t\t\treaction,\n\t\t);\n\t\tfederatedSender.getUsername() &&\n\t\t\t(await this.internalMessageAdapter.setExternalFederationEventOnMessageReaction(\n\t\t\t\tfederatedSender.getUsername() as string,\n\t\t\t\tinternalMessage,\n\t\t\t\treaction,\n\t\t\t\teventId,\n\t\t\t));\n\t}\n\n\tpublic async sendExternalMessageUnReaction(internalMessage: IMessage, internalUser: IUser, reaction: string): Promise<void> {\n\t\tif (!internalMessage || !internalUser || !internalUser._id || !internalMessage.rid) {\n\t\t\treturn;\n\t\t}\n\t\tconst federatedSender = await this.internalUserAdapter.getFederatedUserByInternalId(internalUser._id);\n\t\tif (!federatedSender) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst federatedRoom = await this.internalRoomAdapter.getFederatedRoomByInternalId(internalMessage.rid);\n\t\tif (!federatedRoom) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isMessageFromMatrixFederation(internalMessage)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isUserFromTheSameHomeServer = FederatedUser.isOriginalFromTheProxyServer(\n\t\t\tthis.bridge.extractHomeserverOrigin(federatedSender.getExternalId()),\n\t\t\tthis.internalSettingsAdapter.getHomeServerDomain(),\n\t\t);\n\t\tif (!isUserFromTheSameHomeServer) {\n\t\t\treturn;\n\t\t}\n\t\t// TODO: leaked business logic, move this to the domain layer\n\t\tconst externalEventId = Object.keys(internalMessage.reactions?.[reaction].federationReactionEventIds || {}).find(\n\t\t\t(key) => internalMessage.reactions?.[reaction].federationReactionEventIds?.[key] === internalUser.username,\n\t\t);\n\t\tif (!externalEventId) {\n\t\t\treturn;\n\t\t}\n\t\tconst normalizedEventId = Federation.unescapeExternalFederationEventId(externalEventId);\n\t\tawait this.bridge.redactEvent(federatedRoom.getExternalId(), federatedSender.getExternalId(), normalizedEventId);\n\t\tawait this.internalMessageAdapter.unsetExternalFederationEventOnMessageReaction(externalEventId, internalMessage, reaction);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      FederationMessageServiceSender: () => FederationMessageServiceSender\n    });\n    let isMessageFromMatrixFederation;\n    module.link(\"@rocket.chat/core-typings\", {\n      isMessageFromMatrixFederation(v) {\n        isMessageFromMatrixFederation = v;\n      }\n    }, 0);\n    let Federation;\n    module.link(\"../../../../Federation\", {\n      Federation(v) {\n        Federation = v;\n      }\n    }, 1);\n    let FederatedUser;\n    module.link(\"../../../../domain/FederatedUser\", {\n      FederatedUser(v) {\n        FederatedUser = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class FederationMessageServiceSender {\n      constructor(internalRoomAdapter, internalUserAdapter, internalSettingsAdapter, internalMessageAdapter, bridge) {\n        this.internalRoomAdapter = void 0;\n        this.internalUserAdapter = void 0;\n        this.internalSettingsAdapter = void 0;\n        this.internalMessageAdapter = void 0;\n        this.bridge = void 0;\n        this.internalRoomAdapter = internalRoomAdapter;\n        this.internalUserAdapter = internalUserAdapter;\n        this.internalSettingsAdapter = internalSettingsAdapter;\n        this.internalMessageAdapter = internalMessageAdapter;\n        this.bridge = bridge;\n      }\n      async sendExternalMessageReaction(internalMessage, internalUser, reaction) {\n        var _internalMessage$fede;\n        if (!internalMessage || !internalUser || !internalUser._id || !internalMessage.rid) {\n          return;\n        }\n        const federatedSender = await this.internalUserAdapter.getFederatedUserByInternalId(internalUser._id);\n        if (!federatedSender) {\n          return;\n        }\n        const federatedRoom = await this.internalRoomAdapter.getFederatedRoomByInternalId(internalMessage.rid);\n        if (!federatedRoom) {\n          return;\n        }\n        if (!isMessageFromMatrixFederation(internalMessage)) {\n          return;\n        }\n        const isUserFromTheSameHomeServer = FederatedUser.isOriginalFromTheProxyServer(this.bridge.extractHomeserverOrigin(federatedSender.getExternalId()), this.internalSettingsAdapter.getHomeServerDomain());\n        if (!isUserFromTheSameHomeServer) {\n          return;\n        }\n        const eventId = await this.bridge.sendMessageReaction(federatedRoom.getExternalId(), federatedSender.getExternalId(), (_internalMessage$fede = internalMessage.federation) === null || _internalMessage$fede === void 0 ? void 0 : _internalMessage$fede.eventId, reaction);\n        federatedSender.getUsername() && (await this.internalMessageAdapter.setExternalFederationEventOnMessageReaction(federatedSender.getUsername(), internalMessage, reaction, eventId));\n      }\n      async sendExternalMessageUnReaction(internalMessage, internalUser, reaction) {\n        var _internalMessage$reac;\n        if (!internalMessage || !internalUser || !internalUser._id || !internalMessage.rid) {\n          return;\n        }\n        const federatedSender = await this.internalUserAdapter.getFederatedUserByInternalId(internalUser._id);\n        if (!federatedSender) {\n          return;\n        }\n        const federatedRoom = await this.internalRoomAdapter.getFederatedRoomByInternalId(internalMessage.rid);\n        if (!federatedRoom) {\n          return;\n        }\n        if (!isMessageFromMatrixFederation(internalMessage)) {\n          return;\n        }\n        const isUserFromTheSameHomeServer = FederatedUser.isOriginalFromTheProxyServer(this.bridge.extractHomeserverOrigin(federatedSender.getExternalId()), this.internalSettingsAdapter.getHomeServerDomain());\n        if (!isUserFromTheSameHomeServer) {\n          return;\n        }\n        // TODO: leaked business logic, move this to the domain layer\n        const externalEventId = Object.keys(((_internalMessage$reac = internalMessage.reactions) === null || _internalMessage$reac === void 0 ? void 0 : _internalMessage$reac[reaction].federationReactionEventIds) || {}).find(key => {\n          var _internalMessage$reac2, _internalMessage$reac3;\n          return ((_internalMessage$reac2 = internalMessage.reactions) === null || _internalMessage$reac2 === void 0 ? void 0 : (_internalMessage$reac3 = _internalMessage$reac2[reaction].federationReactionEventIds) === null || _internalMessage$reac3 === void 0 ? void 0 : _internalMessage$reac3[key]) === internalUser.username;\n        });\n        if (!externalEventId) {\n          return;\n        }\n        const normalizedEventId = Federation.unescapeExternalFederationEventId(externalEventId);\n        await this.bridge.redactEvent(federatedRoom.getExternalId(), federatedSender.getExternalId(), normalizedEventId);\n        await this.internalMessageAdapter.unsetExternalFederationEventOnMessageReaction(externalEventId, internalMessage, reaction);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","FederationMessageServiceSender","isMessageFromMatrixFederation","link","v","Federation","FederatedUser","__reifyWaitForDeps__","constructor","internalRoomAdapter","internalUserAdapter","internalSettingsAdapter","internalMessageAdapter","bridge","sendExternalMessageReaction","internalMessage","internalUser","reaction","_internalMessage$fede","_id","rid","federatedSender","getFederatedUserByInternalId","federatedRoom","getFederatedRoomByInternalId","isUserFromTheSameHomeServer","isOriginalFromTheProxyServer","extractHomeserverOrigin","getExternalId","getHomeServerDomain","eventId","sendMessageReaction","federation","getUsername","setExternalFederationEventOnMessageReaction","sendExternalMessageUnReaction","_internalMessage$reac","externalEventId","Object","keys","reactions","federationReactionEventIds","find","key","_internalMessage$reac2","_internalMessage$reac3","username","normalizedEventId","unescapeExternalFederationEventId","redactEvent","unsetExternalFederationEventOnMessageReaction","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/federation/application/room/message/sender/MessageServiceSender.ts"],"sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { isMessageFromMatrixFederation } from '@rocket.chat/core-typings';\n\nimport { Federation } from '../../../../Federation';\nimport { FederatedUser } from '../../../../domain/FederatedUser';\nimport type { IFederationBridge } from '../../../../domain/IFederationBridge';\nimport type { RocketChatMessageAdapter } from '../../../../infrastructure/rocket-chat/adapters/Message';\nimport type { RocketChatRoomAdapter } from '../../../../infrastructure/rocket-chat/adapters/Room';\nimport type { RocketChatSettingsAdapter } from '../../../../infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from '../../../../infrastructure/rocket-chat/adapters/User';\n\nexport class FederationMessageServiceSender {\n\tconstructor(\n\t\tprotected internalRoomAdapter: RocketChatRoomAdapter,\n\t\tprotected internalUserAdapter: RocketChatUserAdapter,\n\t\tprotected internalSettingsAdapter: RocketChatSettingsAdapter,\n\t\tprotected internalMessageAdapter: RocketChatMessageAdapter,\n\t\tprotected bridge: IFederationBridge,\n\t) {}\n\n\tpublic async sendExternalMessageReaction(internalMessage: IMessage, internalUser: IUser, reaction: string): Promise<void> {\n\t\tif (!internalMessage || !internalUser || !internalUser._id || !internalMessage.rid) {\n\t\t\treturn;\n\t\t}\n\t\tconst federatedSender = await this.internalUserAdapter.getFederatedUserByInternalId(internalUser._id);\n\t\tif (!federatedSender) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst federatedRoom = await this.internalRoomAdapter.getFederatedRoomByInternalId(internalMessage.rid);\n\t\tif (!federatedRoom) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isMessageFromMatrixFederation(internalMessage)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isUserFromTheSameHomeServer = FederatedUser.isOriginalFromTheProxyServer(\n\t\t\tthis.bridge.extractHomeserverOrigin(federatedSender.getExternalId()),\n\t\t\tthis.internalSettingsAdapter.getHomeServerDomain(),\n\t\t);\n\t\tif (!isUserFromTheSameHomeServer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst eventId = await this.bridge.sendMessageReaction(\n\t\t\tfederatedRoom.getExternalId(),\n\t\t\tfederatedSender.getExternalId(),\n\t\t\tinternalMessage.federation?.eventId as string,\n\t\t\treaction,\n\t\t);\n\t\tfederatedSender.getUsername() &&\n\t\t\t(await this.internalMessageAdapter.setExternalFederationEventOnMessageReaction(\n\t\t\t\tfederatedSender.getUsername() as string,\n\t\t\t\tinternalMessage,\n\t\t\t\treaction,\n\t\t\t\teventId,\n\t\t\t));\n\t}\n\n\tpublic async sendExternalMessageUnReaction(internalMessage: IMessage, internalUser: IUser, reaction: string): Promise<void> {\n\t\tif (!internalMessage || !internalUser || !internalUser._id || !internalMessage.rid) {\n\t\t\treturn;\n\t\t}\n\t\tconst federatedSender = await this.internalUserAdapter.getFederatedUserByInternalId(internalUser._id);\n\t\tif (!federatedSender) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst federatedRoom = await this.internalRoomAdapter.getFederatedRoomByInternalId(internalMessage.rid);\n\t\tif (!federatedRoom) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isMessageFromMatrixFederation(internalMessage)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isUserFromTheSameHomeServer = FederatedUser.isOriginalFromTheProxyServer(\n\t\t\tthis.bridge.extractHomeserverOrigin(federatedSender.getExternalId()),\n\t\t\tthis.internalSettingsAdapter.getHomeServerDomain(),\n\t\t);\n\t\tif (!isUserFromTheSameHomeServer) {\n\t\t\treturn;\n\t\t}\n\t\t// TODO: leaked business logic, move this to the domain layer\n\t\tconst externalEventId = Object.keys(internalMessage.reactions?.[reaction].federationReactionEventIds || {}).find(\n\t\t\t(key) => internalMessage.reactions?.[reaction].federationReactionEventIds?.[key] === internalUser.username,\n\t\t);\n\t\tif (!externalEventId) {\n\t\t\treturn;\n\t\t}\n\t\tconst normalizedEventId = Federation.unescapeExternalFederationEventId(externalEventId);\n\t\tawait this.bridge.redactEvent(federatedRoom.getExternalId(), federatedSender.getExternalId(), normalizedEventId);\n\t\tawait this.internalMessageAdapter.unsetExternalFederationEventOnMessageReaction(externalEventId, internalMessage, reaction);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"30416c61dfc75ea97463db0ccc78ddbf99f18b4f"}
