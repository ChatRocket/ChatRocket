{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/methods/downloadPublicImportFile.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/importer/server/methods/downloadPublicImportFile.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/methods/downloadPublicImportFile.ts","inputSourceMap":{"version":3,"file":"app/importer/server/methods/downloadPublicImportFile.ts","sourceRoot":"","sources":["app/importer/server/methods/downloadPublicImportFile.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport http from 'http';\nimport https from 'https';\n\nimport { Import } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Importers } from '..';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { ProgressStep } from '../../lib/ImporterProgressStep';\nimport { RocketChatImportFileInstance } from '../startup/store';\n\nfunction downloadHttpFile(fileUrl: string, writeStream: fs.WriteStream): void {\n\tconst protocol = fileUrl.startsWith('https') ? https : http;\n\tprotocol.get(fileUrl, (response) => {\n\t\tresponse.pipe(writeStream);\n\t});\n}\n\nfunction copyLocalFile(filePath: fs.PathLike, writeStream: fs.WriteStream): void {\n\tconst readStream = fs.createReadStream(filePath);\n\treadStream.pipe(writeStream);\n}\n\nexport const executeDownloadPublicImportFile = async (userId: IUser['_id'], fileUrl: string, importerKey: string): Promise<void> => {\n\tconst importer = Importers.get(importerKey);\n\tconst isUrl = fileUrl.startsWith('http');\n\tif (!importer) {\n\t\tthrow new Meteor.Error(\n\t\t\t'error-importer-not-defined',\n\t\t\t`The importer (${importerKey}) has no import class defined.`,\n\t\t\t'downloadImportFile',\n\t\t);\n\t}\n\t// Check if it's a valid url or path before creating a new import record\n\tif (!isUrl && !fs.existsSync(fileUrl)) {\n\t\tthrow new Meteor.Error('error-import-file-missing', fileUrl, 'downloadPublicImportFile');\n\t}\n\n\tconst operation = await Import.newOperation(userId, importer.name, importer.key);\n\tconst instance = new importer.importer(importer, operation); // eslint-disable-line new-cap\n\n\tconst oldFileName = fileUrl.substring(fileUrl.lastIndexOf('/') + 1).split('?')[0];\n\tconst date = new Date();\n\tconst dateStr = `${date.getUTCFullYear()}${date.getUTCMonth()}${date.getUTCDate()}${date.getUTCHours()}${date.getUTCMinutes()}${date.getUTCSeconds()}`;\n\tconst newFileName = `${dateStr}_${userId}_${oldFileName}`;\n\n\t// Store the file name on the imports collection\n\tawait instance.startFileUpload(newFileName);\n\tawait instance.updateProgress(ProgressStep.DOWNLOADING_FILE);\n\n\tconst writeStream = RocketChatImportFileInstance.createWriteStream(newFileName);\n\n\twriteStream.on('error', () => {\n\t\tvoid instance.updateProgress(ProgressStep.ERROR);\n\t});\n\n\twriteStream.on('end', () => {\n\t\tvoid instance.updateProgress(ProgressStep.FILE_LOADED);\n\t});\n\n\tif (isUrl) {\n\t\tdownloadHttpFile(fileUrl, writeStream);\n\t} else {\n\t\t// If the url is actually a folder path on the current machine, skip moving it to the file store\n\t\tif (fs.statSync(fileUrl).isDirectory()) {\n\t\t\tawait instance.updateRecord({ file: fileUrl });\n\t\t\tawait instance.updateProgress(ProgressStep.FILE_LOADED);\n\t\t\treturn;\n\t\t}\n\n\t\tcopyLocalFile(fileUrl, writeStream);\n\t}\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tdownloadPublicImportFile(fileUrl: string, importerKey: string): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync downloadPublicImportFile(fileUrl: string, importerKey: string) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', 'downloadPublicImportFile');\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'run-import'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', 'downloadPublicImportFile');\n\t\t}\n\n\t\tawait executeDownloadPublicImportFile(userId, fileUrl, importerKey);\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer/server/methods/downloadPublicImportFile.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/importer/server/methods/downloadPublicImportFile.ts","inputSourceMap":{"version":3,"file":"app/importer/server/methods/downloadPublicImportFile.ts","sourceRoot":"","sources":["app/importer/server/methods/downloadPublicImportFile.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport http from 'http';\nimport https from 'https';\n\nimport { Import } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Importers } from '..';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { ProgressStep } from '../../lib/ImporterProgressStep';\nimport { RocketChatImportFileInstance } from '../startup/store';\n\nfunction downloadHttpFile(fileUrl: string, writeStream: fs.WriteStream): void {\n\tconst protocol = fileUrl.startsWith('https') ? https : http;\n\tprotocol.get(fileUrl, (response) => {\n\t\tresponse.pipe(writeStream);\n\t});\n}\n\nfunction copyLocalFile(filePath: fs.PathLike, writeStream: fs.WriteStream): void {\n\tconst readStream = fs.createReadStream(filePath);\n\treadStream.pipe(writeStream);\n}\n\nexport const executeDownloadPublicImportFile = async (userId: IUser['_id'], fileUrl: string, importerKey: string): Promise<void> => {\n\tconst importer = Importers.get(importerKey);\n\tconst isUrl = fileUrl.startsWith('http');\n\tif (!importer) {\n\t\tthrow new Meteor.Error(\n\t\t\t'error-importer-not-defined',\n\t\t\t`The importer (${importerKey}) has no import class defined.`,\n\t\t\t'downloadImportFile',\n\t\t);\n\t}\n\t// Check if it's a valid url or path before creating a new import record\n\tif (!isUrl && !fs.existsSync(fileUrl)) {\n\t\tthrow new Meteor.Error('error-import-file-missing', fileUrl, 'downloadPublicImportFile');\n\t}\n\n\tconst operation = await Import.newOperation(userId, importer.name, importer.key);\n\tconst instance = new importer.importer(importer, operation); // eslint-disable-line new-cap\n\n\tconst oldFileName = fileUrl.substring(fileUrl.lastIndexOf('/') + 1).split('?')[0];\n\tconst date = new Date();\n\tconst dateStr = `${date.getUTCFullYear()}${date.getUTCMonth()}${date.getUTCDate()}${date.getUTCHours()}${date.getUTCMinutes()}${date.getUTCSeconds()}`;\n\tconst newFileName = `${dateStr}_${userId}_${oldFileName}`;\n\n\t// Store the file name on the imports collection\n\tawait instance.startFileUpload(newFileName);\n\tawait instance.updateProgress(ProgressStep.DOWNLOADING_FILE);\n\n\tconst writeStream = RocketChatImportFileInstance.createWriteStream(newFileName);\n\n\twriteStream.on('error', () => {\n\t\tvoid instance.updateProgress(ProgressStep.ERROR);\n\t});\n\n\twriteStream.on('end', () => {\n\t\tvoid instance.updateProgress(ProgressStep.FILE_LOADED);\n\t});\n\n\tif (isUrl) {\n\t\tdownloadHttpFile(fileUrl, writeStream);\n\t} else {\n\t\t// If the url is actually a folder path on the current machine, skip moving it to the file store\n\t\tif (fs.statSync(fileUrl).isDirectory()) {\n\t\t\tawait instance.updateRecord({ file: fileUrl });\n\t\t\tawait instance.updateProgress(ProgressStep.FILE_LOADED);\n\t\t\treturn;\n\t\t}\n\n\t\tcopyLocalFile(fileUrl, writeStream);\n\t}\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tdownloadPublicImportFile(fileUrl: string, importerKey: string): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync downloadPublicImportFile(fileUrl: string, importerKey: string) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', 'downloadPublicImportFile');\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'run-import'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', 'downloadPublicImportFile');\n\t\t}\n\n\t\tawait executeDownloadPublicImportFile(userId, fileUrl, importerKey);\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      executeDownloadPublicImportFile: () => executeDownloadPublicImportFile\n    });\n    let fs;\n    module.link(\"fs\", {\n      default(v) {\n        fs = v;\n      }\n    }, 0);\n    let http;\n    module.link(\"http\", {\n      default(v) {\n        http = v;\n      }\n    }, 1);\n    let https;\n    module.link(\"https\", {\n      default(v) {\n        https = v;\n      }\n    }, 2);\n    let Import;\n    module.link(\"@rocket.chat/core-services\", {\n      Import(v) {\n        Import = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let Importers;\n    module.link(\"..\", {\n      Importers(v) {\n        Importers = v;\n      }\n    }, 5);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 6);\n    let ProgressStep;\n    module.link(\"../../lib/ImporterProgressStep\", {\n      ProgressStep(v) {\n        ProgressStep = v;\n      }\n    }, 7);\n    let RocketChatImportFileInstance;\n    module.link(\"../startup/store\", {\n      RocketChatImportFileInstance(v) {\n        RocketChatImportFileInstance = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    function downloadHttpFile(fileUrl, writeStream) {\n      const protocol = fileUrl.startsWith('https') ? https : http;\n      protocol.get(fileUrl, response => {\n        response.pipe(writeStream);\n      });\n    }\n    function copyLocalFile(filePath, writeStream) {\n      const readStream = fs.createReadStream(filePath);\n      readStream.pipe(writeStream);\n    }\n    const executeDownloadPublicImportFile = async (userId, fileUrl, importerKey) => {\n      const importer = Importers.get(importerKey);\n      const isUrl = fileUrl.startsWith('http');\n      if (!importer) {\n        throw new Meteor.Error('error-importer-not-defined', \"The importer (\".concat(importerKey, \") has no import class defined.\"), 'downloadImportFile');\n      }\n      // Check if it's a valid url or path before creating a new import record\n      if (!isUrl && !fs.existsSync(fileUrl)) {\n        throw new Meteor.Error('error-import-file-missing', fileUrl, 'downloadPublicImportFile');\n      }\n      const operation = await Import.newOperation(userId, importer.name, importer.key);\n      const instance = new importer.importer(importer, operation); // eslint-disable-line new-cap\n      const oldFileName = fileUrl.substring(fileUrl.lastIndexOf('/') + 1).split('?')[0];\n      const date = new Date();\n      const dateStr = \"\".concat(date.getUTCFullYear()).concat(date.getUTCMonth()).concat(date.getUTCDate()).concat(date.getUTCHours()).concat(date.getUTCMinutes()).concat(date.getUTCSeconds());\n      const newFileName = \"\".concat(dateStr, \"_\").concat(userId, \"_\").concat(oldFileName);\n      // Store the file name on the imports collection\n      await instance.startFileUpload(newFileName);\n      await instance.updateProgress(ProgressStep.DOWNLOADING_FILE);\n      const writeStream = RocketChatImportFileInstance.createWriteStream(newFileName);\n      writeStream.on('error', () => {\n        void instance.updateProgress(ProgressStep.ERROR);\n      });\n      writeStream.on('end', () => {\n        void instance.updateProgress(ProgressStep.FILE_LOADED);\n      });\n      if (isUrl) {\n        downloadHttpFile(fileUrl, writeStream);\n      } else {\n        // If the url is actually a folder path on the current machine, skip moving it to the file store\n        if (fs.statSync(fileUrl).isDirectory()) {\n          await instance.updateRecord({\n            file: fileUrl\n          });\n          await instance.updateProgress(ProgressStep.FILE_LOADED);\n          return;\n        }\n        copyLocalFile(fileUrl, writeStream);\n      }\n    };\n    Meteor.methods({\n      async downloadPublicImportFile(fileUrl, importerKey) {\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', 'downloadPublicImportFile');\n        }\n        if (!(await hasPermissionAsync(userId, 'run-import'))) {\n          throw new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', 'downloadPublicImportFile');\n        }\n        await executeDownloadPublicImportFile(userId, fileUrl, importerKey);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","executeDownloadPublicImportFile","fs","link","default","v","http","https","Import","Meteor","Importers","hasPermissionAsync","ProgressStep","RocketChatImportFileInstance","__reifyWaitForDeps__","downloadHttpFile","fileUrl","writeStream","protocol","startsWith","get","response","pipe","copyLocalFile","filePath","readStream","createReadStream","userId","importerKey","importer","isUrl","Error","concat","existsSync","operation","newOperation","name","key","instance","oldFileName","substring","lastIndexOf","split","date","Date","dateStr","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","newFileName","startFileUpload","updateProgress","DOWNLOADING_FILE","createWriteStream","on","ERROR","FILE_LOADED","statSync","isDirectory","updateRecord","file","methods","downloadPublicImportFile","__reify_async_result__","_reifyError","self","async"],"sources":["app/importer/server/methods/downloadPublicImportFile.ts"],"sourcesContent":["import fs from 'fs';\nimport http from 'http';\nimport https from 'https';\n\nimport { Import } from '@rocket.chat/core-services';\nimport type { IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Importers } from '..';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { ProgressStep } from '../../lib/ImporterProgressStep';\nimport { RocketChatImportFileInstance } from '../startup/store';\n\nfunction downloadHttpFile(fileUrl: string, writeStream: fs.WriteStream): void {\n\tconst protocol = fileUrl.startsWith('https') ? https : http;\n\tprotocol.get(fileUrl, (response) => {\n\t\tresponse.pipe(writeStream);\n\t});\n}\n\nfunction copyLocalFile(filePath: fs.PathLike, writeStream: fs.WriteStream): void {\n\tconst readStream = fs.createReadStream(filePath);\n\treadStream.pipe(writeStream);\n}\n\nexport const executeDownloadPublicImportFile = async (userId: IUser['_id'], fileUrl: string, importerKey: string): Promise<void> => {\n\tconst importer = Importers.get(importerKey);\n\tconst isUrl = fileUrl.startsWith('http');\n\tif (!importer) {\n\t\tthrow new Meteor.Error(\n\t\t\t'error-importer-not-defined',\n\t\t\t`The importer (${importerKey}) has no import class defined.`,\n\t\t\t'downloadImportFile',\n\t\t);\n\t}\n\t// Check if it's a valid url or path before creating a new import record\n\tif (!isUrl && !fs.existsSync(fileUrl)) {\n\t\tthrow new Meteor.Error('error-import-file-missing', fileUrl, 'downloadPublicImportFile');\n\t}\n\n\tconst operation = await Import.newOperation(userId, importer.name, importer.key);\n\tconst instance = new importer.importer(importer, operation); // eslint-disable-line new-cap\n\n\tconst oldFileName = fileUrl.substring(fileUrl.lastIndexOf('/') + 1).split('?')[0];\n\tconst date = new Date();\n\tconst dateStr = `${date.getUTCFullYear()}${date.getUTCMonth()}${date.getUTCDate()}${date.getUTCHours()}${date.getUTCMinutes()}${date.getUTCSeconds()}`;\n\tconst newFileName = `${dateStr}_${userId}_${oldFileName}`;\n\n\t// Store the file name on the imports collection\n\tawait instance.startFileUpload(newFileName);\n\tawait instance.updateProgress(ProgressStep.DOWNLOADING_FILE);\n\n\tconst writeStream = RocketChatImportFileInstance.createWriteStream(newFileName);\n\n\twriteStream.on('error', () => {\n\t\tvoid instance.updateProgress(ProgressStep.ERROR);\n\t});\n\n\twriteStream.on('end', () => {\n\t\tvoid instance.updateProgress(ProgressStep.FILE_LOADED);\n\t});\n\n\tif (isUrl) {\n\t\tdownloadHttpFile(fileUrl, writeStream);\n\t} else {\n\t\t// If the url is actually a folder path on the current machine, skip moving it to the file store\n\t\tif (fs.statSync(fileUrl).isDirectory()) {\n\t\t\tawait instance.updateRecord({ file: fileUrl });\n\t\t\tawait instance.updateProgress(ProgressStep.FILE_LOADED);\n\t\t\treturn;\n\t\t}\n\n\t\tcopyLocalFile(fileUrl, writeStream);\n\t}\n};\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tdownloadPublicImportFile(fileUrl: string, importerKey: string): void;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync downloadPublicImportFile(fileUrl: string, importerKey: string) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', 'downloadPublicImportFile');\n\t\t}\n\n\t\tif (!(await hasPermissionAsync(userId, 'run-import'))) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Importing is not allowed', 'downloadPublicImportFile');\n\t\t}\n\n\t\tawait executeDownloadPublicImportFile(userId, fileUrl, importerKey);\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"adbefc764efcd1b2d025063b61d409fbb7b2c588"}
