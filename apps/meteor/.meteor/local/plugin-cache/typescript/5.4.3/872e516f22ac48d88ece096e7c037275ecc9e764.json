{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/canAccessRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/methods/canAccessRoom.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/canAccessRoom.ts","inputSourceMap":{"version":3,"file":"server/methods/canAccessRoom.ts","sourceRoot":"","sources":["server/methods/canAccessRoom.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACnD,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AASrD,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;IAC5F,OAAO,CAAC,IAAI,CAAC,0EAA0E,CAAC,CAAC;IACzF,MAAM,CAAC,OAAO,CAAgB;QAC7B,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,EAAE,SAAS;YACzC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YACnB,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAEnC,IAAI,IAAI,CAAC;YAET,IAAI,MAAM,EAAE,CAAC;gBACZ,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE;oBACtC,UAAU,EAAE;wBACX,QAAQ,EAAE,CAAC;qBACX;iBACD,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC;oBACrB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;wBAC5D,MAAM,EAAE,eAAe;qBACvB,CAAC,CAAC;gBACJ,CAAC;YACF,CAAC;YAED,IAAI,CAAC,GAAG,EAAE,CAAC;gBACV,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;oBAC5D,MAAM,EAAE,eAAe;iBACvB,CAAC,CAAC;YACJ,CAAC;YAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAE1C,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;oBAC5D,MAAM,EAAE,eAAe;iBACvB,CAAC,CAAC;YACJ,CAAC;YAED,IAAI,MAAM,kBAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC;gBACrD,IAAI,IAAI,EAAE,CAAC;oBACV,OAAO,EAAE,GAAG,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC7C,CAAC;gBACD,OAAO,IAAI,CAAC;YACb,CAAC;YAED,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,GAAG,CAAC,6BAA6B,CAAC,KAAK,KAAK,EAAE,CAAC;gBACtE,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;oBAC5D,MAAM,EAAE,eAAe;iBACvB,CAAC,CAAC;YACJ,CAAC;YAED,OAAO,KAAK,CAAC;QACd,CAAC;KACD,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomAsync } from '../../app/authorization/server';\nimport { settings } from '../../app/settings/server';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tcanAccessRoom(rid: IRoom['_id'], userId: IUser['_id'], extraData?: Record<string, unknown>): (IRoom & { username?: string }) | boolean;\n\t}\n}\n\nif (['yes', 'true'].includes(String(process.env.ALLOW_CANACCESSROOM_METHOD).toLowerCase())) {\n\tconsole.warn('Method canAccessRoom is deprecated and will be removed after version 5.0');\n\tMeteor.methods<ServerMethods>({\n\t\tasync canAccessRoom(rid, userId, extraData) {\n\t\t\tcheck(rid, String);\n\t\t\tcheck(userId, Match.Maybe(String));\n\n\t\t\tlet user;\n\n\t\t\tif (userId) {\n\t\t\t\tuser = await Users.findOneById(userId, {\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\tusername: 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tif (!user?.username) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t\t\tmethod: 'canAccessRoom',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!rid) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tmethod: 'canAccessRoom',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst room = await Rooms.findOneById(rid);\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tmethod: 'canAccessRoom',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (await canAccessRoomAsync(room, user, extraData)) {\n\t\t\t\tif (user) {\n\t\t\t\t\treturn { ...room, username: user.username };\n\t\t\t\t}\n\t\t\t\treturn room;\n\t\t\t}\n\n\t\t\tif (!userId && settings.get('Accounts_AllowAnonymousRead') === false) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t\tmethod: 'canAccessRoom',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t});\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/methods/canAccessRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/canAccessRoom.ts","inputSourceMap":{"version":3,"file":"server/methods/canAccessRoom.ts","sourceRoot":"","sources":["server/methods/canAccessRoom.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACnD,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,gCAAgC,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AASrD,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;IAC5F,OAAO,CAAC,IAAI,CAAC,0EAA0E,CAAC,CAAC;IACzF,MAAM,CAAC,OAAO,CAAgB;QAC7B,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,EAAE,SAAS;YACzC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YACnB,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAEnC,IAAI,IAAI,CAAC;YAET,IAAI,MAAM,EAAE,CAAC;gBACZ,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE;oBACtC,UAAU,EAAE;wBACX,QAAQ,EAAE,CAAC;qBACX;iBACD,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC;oBACrB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;wBAC5D,MAAM,EAAE,eAAe;qBACvB,CAAC,CAAC;gBACJ,CAAC;YACF,CAAC;YAED,IAAI,CAAC,GAAG,EAAE,CAAC;gBACV,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;oBAC5D,MAAM,EAAE,eAAe;iBACvB,CAAC,CAAC;YACJ,CAAC;YAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAE1C,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;oBAC5D,MAAM,EAAE,eAAe;iBACvB,CAAC,CAAC;YACJ,CAAC;YAED,IAAI,MAAM,kBAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC;gBACrD,IAAI,IAAI,EAAE,CAAC;oBACV,OAAO,EAAE,GAAG,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC7C,CAAC;gBACD,OAAO,IAAI,CAAC;YACb,CAAC;YAED,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,GAAG,CAAC,6BAA6B,CAAC,KAAK,KAAK,EAAE,CAAC;gBACtE,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;oBAC5D,MAAM,EAAE,eAAe;iBACvB,CAAC,CAAC;YACJ,CAAC;YAED,OAAO,KAAK,CAAC;QACd,CAAC;KACD,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomAsync } from '../../app/authorization/server';\nimport { settings } from '../../app/settings/server';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tcanAccessRoom(rid: IRoom['_id'], userId: IUser['_id'], extraData?: Record<string, unknown>): (IRoom & { username?: string }) | boolean;\n\t}\n}\n\nif (['yes', 'true'].includes(String(process.env.ALLOW_CANACCESSROOM_METHOD).toLowerCase())) {\n\tconsole.warn('Method canAccessRoom is deprecated and will be removed after version 5.0');\n\tMeteor.methods<ServerMethods>({\n\t\tasync canAccessRoom(rid, userId, extraData) {\n\t\t\tcheck(rid, String);\n\t\t\tcheck(userId, Match.Maybe(String));\n\n\t\t\tlet user;\n\n\t\t\tif (userId) {\n\t\t\t\tuser = await Users.findOneById(userId, {\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\tusername: 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tif (!user?.username) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t\t\tmethod: 'canAccessRoom',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!rid) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tmethod: 'canAccessRoom',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst room = await Rooms.findOneById(rid);\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tmethod: 'canAccessRoom',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (await canAccessRoomAsync(room, user, extraData)) {\n\t\t\t\tif (user) {\n\t\t\t\t\treturn { ...room, username: user.username };\n\t\t\t\t}\n\t\t\t\treturn room;\n\t\t\t}\n\n\t\t\tif (!userId && settings.get('Accounts_AllowAnonymousRead') === false) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t\tmethod: 'canAccessRoom',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t});\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let Rooms, Users;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let canAccessRoomAsync;\n    module.link(\"../../app/authorization/server\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 3);\n    let settings;\n    module.link(\"../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    if (['yes', 'true'].includes(String(process.env.ALLOW_CANACCESSROOM_METHOD).toLowerCase())) {\n      console.warn('Method canAccessRoom is deprecated and will be removed after version 5.0');\n      Meteor.methods({\n        async canAccessRoom(rid, userId, extraData) {\n          check(rid, String);\n          check(userId, Match.Maybe(String));\n          let user;\n          if (userId) {\n            var _user;\n            user = await Users.findOneById(userId, {\n              projection: {\n                username: 1\n              }\n            });\n            if (!((_user = user) !== null && _user !== void 0 && _user.username)) {\n              throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n                method: 'canAccessRoom'\n              });\n            }\n          }\n          if (!rid) {\n            throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n              method: 'canAccessRoom'\n            });\n          }\n          const room = await Rooms.findOneById(rid);\n          if (!room) {\n            throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n              method: 'canAccessRoom'\n            });\n          }\n          if (await canAccessRoomAsync(room, user, extraData)) {\n            if (user) {\n              return _objectSpread(_objectSpread({}, room), {}, {\n                username: user.username\n              });\n            }\n            return room;\n          }\n          if (!userId && settings.get('Accounts_AllowAnonymousRead') === false) {\n            throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n              method: 'canAccessRoom'\n            });\n          }\n          return false;\n        }\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","Rooms","Users","Match","check","Meteor","canAccessRoomAsync","settings","__reifyWaitForDeps__","includes","String","process","env","ALLOW_CANACCESSROOM_METHOD","toLowerCase","console","warn","methods","canAccessRoom","rid","userId","extraData","Maybe","user","_user","findOneById","projection","username","Error","method","room","get","__reify_async_result__","_reifyError","self","async"],"sources":["server/methods/canAccessRoom.ts"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms, Users } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { canAccessRoomAsync } from '../../app/authorization/server';\nimport { settings } from '../../app/settings/server';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tcanAccessRoom(rid: IRoom['_id'], userId: IUser['_id'], extraData?: Record<string, unknown>): (IRoom & { username?: string }) | boolean;\n\t}\n}\n\nif (['yes', 'true'].includes(String(process.env.ALLOW_CANACCESSROOM_METHOD).toLowerCase())) {\n\tconsole.warn('Method canAccessRoom is deprecated and will be removed after version 5.0');\n\tMeteor.methods<ServerMethods>({\n\t\tasync canAccessRoom(rid, userId, extraData) {\n\t\t\tcheck(rid, String);\n\t\t\tcheck(userId, Match.Maybe(String));\n\n\t\t\tlet user;\n\n\t\t\tif (userId) {\n\t\t\t\tuser = await Users.findOneById(userId, {\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\tusername: 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tif (!user?.username) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t\t\tmethod: 'canAccessRoom',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!rid) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tmethod: 'canAccessRoom',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst room = await Rooms.findOneById(rid);\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\t\tmethod: 'canAccessRoom',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (await canAccessRoomAsync(room, user, extraData)) {\n\t\t\t\tif (user) {\n\t\t\t\t\treturn { ...room, username: user.username };\n\t\t\t\t}\n\t\t\t\treturn room;\n\t\t\t}\n\n\t\t\tif (!userId && settings.get('Accounts_AllowAnonymousRead') === false) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t\tmethod: 'canAccessRoom',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\t});\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"872e516f22ac48d88ece096e7c037275ecc9e764"}
