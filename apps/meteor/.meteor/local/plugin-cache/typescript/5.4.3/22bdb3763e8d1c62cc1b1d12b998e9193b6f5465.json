{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/emailInbox/EmailInboxForm.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/admin/emailInbox/EmailInboxForm.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/emailInbox/EmailInboxForm.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/emailInbox/EmailInboxForm.tsx","sourceRoot":"","sources":["client/views/admin/emailInbox/EmailInboxForm.tsx"],"names":[],"mappings":"AACA,OAAO,EACN,SAAS,EACT,MAAM,EACN,WAAW,EACX,SAAS,EACT,aAAa,EACb,KAAK,EACL,YAAY,EACZ,UAAU,EACV,GAAG,EACH,OAAO,EACP,WAAW,EACX,aAAa,EACb,UAAU,EACV,QAAQ,EACR,UAAU,EACV,SAAS,GACT,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAE,kBAAkB,EAAE,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAC9E,OAAO,EAAE,WAAW,EAAE,uBAAuB,EAAE,QAAQ,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAEvH,OAAO,KAAK,EAAE,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAEtD,OAAO,EAAE,aAAa,EAAE,MAAM,gCAAgC,CAAC;AAC/D,OAAO,sBAAsB,MAAM,4CAA4C,CAAC;AAChF,OAAO,YAAY,MAAM,kCAAkC,CAAC;AAC5D,OAAO,EAAE,+BAA+B,EAAE,MAAM,0BAA0B,CAAC;AAE3E,MAAM,cAAc,GAAG,CAAC,EAAE,SAAS,EAAsC,EAAgB,EAAE;IAC1F,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;IAC3B,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAC/B,MAAM,MAAM,GAAG,QAAQ,CAAC,qBAAqB,CAAC,CAAC;IAE/C,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAEhE,MAAM,cAAc,GAAG,WAAW,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;IAC9D,MAAM,iBAAiB,GAAG,WAAW,CAAC,QAAQ,EAAE,sBAAsB,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC;IACvG,MAAM,wBAAwB,GAAG,WAAW,CAAC,KAAK,EAAE,wBAAwB,CAAC,CAAC;IAE9E,MAAM,EACL,OAAO,EACP,YAAY,EACZ,SAAS,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,GAC9B,GAAG,OAAO,CAAC;QACX,aAAa,EAAE;YACd,MAAM,EAAE,SAAS,EAAE,MAAM,IAAI,IAAI;YACjC,IAAI,EAAE,SAAS,EAAE,IAAI;YACrB,KAAK,EAAE,SAAS,EAAE,KAAK;YACvB,WAAW,EAAE,SAAS,EAAE,WAAW;YACnC,UAAU,EAAE,SAAS,EAAE,UAAU;YACjC,UAAU,EAAE,SAAS,EAAE,UAAU,IAAI,EAAE;YACvC,OAAO;YACP,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM;YAClC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,IAAI,IAAI,GAAG;YACrC,YAAY,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ;YACtC,YAAY,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ;YACtC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,IAAI,KAAK;YAC3C,OAAO;YACP,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM;YAClC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,IAAI,IAAI,GAAG;YACrC,YAAY,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ;YACtC,YAAY,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ;YACtC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,IAAI,KAAK;YAC3C,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,IAAI,EAAE;SAC7C;QACD,IAAI,EAAE,KAAK;KACX,CAAC,CAAC;IAEH,MAAM,YAAY,GAAG,kBAAkB,CAAC,GAAG,EAAE;QAC5C,MAAM,WAAW,GAAG,KAAK,IAAmB,EAAE;YAC7C,IAAI,CAAC;gBACJ,MAAM,iBAAiB,EAAE,CAAC;gBAC1B,oBAAoB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,8BAA8B,CAAC,EAAE,CAAC,CAAC;gBACtF,UAAU,EAAE,CAAC;YACd,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBAChB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;YACzD,CAAC;oBAAS,CAAC;gBACV,QAAQ,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC;QACF,CAAC,CAAC;QAEF,QAAQ,CACP,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAS,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CACrH;IAAA,CAAC,CAAC,CAAC,6CAA6C,CAAC,CAClD;GAAA,EAAE,YAAY,CAAC,CACf,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,MAAM,UAAU,GAAG,kBAAkB,CACpC,KAAK,EAAE,EACN,MAAM,EACN,IAAI,EACJ,KAAK,EACL,WAAW,EACX,UAAU,EACV,UAAU,EACV,UAAU,EACV,QAAQ,EACR,YAAY,EACZ,YAAY,EACZ,UAAU,EACV,UAAU,EACV,QAAQ,EACR,YAAY,EACZ,YAAY,EACZ,UAAU,EACV,WAAW,GACX,EAAE,EAAE;QACJ,MAAM,IAAI,GAAG;YACZ,MAAM,EAAE,UAAU;YAClB,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC;YACxB,QAAQ,EAAE,YAAY;YACtB,QAAQ,EAAE,YAAY;YACtB,MAAM,EAAE,UAAU;SAClB,CAAC;QAEF,MAAM,IAAI,GAAG;YACZ,MAAM,EAAE,UAAU;YAClB,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC;YACxB,QAAQ,EAAE,YAAY;YACtB,QAAQ,EAAE,YAAY;YACtB,MAAM,EAAE,UAAU;YAClB,UAAU,EAAE,QAAQ,CAAC,WAAW,CAAC;SACjC,CAAC;QAEF,MAAM,OAAO,GAAG;YACf,GAAG,CAAC,SAAS,EAAE,GAAG,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;YAC9C,MAAM;YACN,IAAI;YACJ,KAAK;YACL,WAAW;YACX,UAAU;YACV,GAAG,CAAC,UAAU,IAAI,EAAE,UAAU,EAAE,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACjG,IAAI;YACJ,IAAI;SACJ,CAAC;QAEF,IAAI,CAAC;YACJ,MAAM,cAAc,CAAC,OAAO,CAAC,CAAC;YAC9B,oBAAoB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC;YACpF,UAAU,EAAE,CAAC;QACd,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACzD,CAAC;IACF,CAAC,CACD,CAAC;IAEF,MAAM,gBAAgB,GAAG,kBAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;QAC3D,IAAI,CAAC,KAAK,EAAE,CAAC;YACZ,OAAO;QACR,CAAC;QAED,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;YAC3B,OAAO,CAAC,CAAC,6BAA6B,CAAC,CAAC;QACzC,CAAC;QAED,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,wBAAwB,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAEjE,IAAI,CAAC,UAAU,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,UAAU,CAAC,GAAG,KAAK,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC;YAC1E,OAAO;QACR,CAAC;QAED,OAAO,CAAC,CAAC,sBAAsB,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,WAAW,EAAE,CAAC;IAClC,MAAM,SAAS,GAAG,WAAW,EAAE,CAAC;IAChC,MAAM,UAAU,GAAG,WAAW,EAAE,CAAC;IACjC,MAAM,gBAAgB,GAAG,WAAW,EAAE,CAAC;IACvC,MAAM,eAAe,GAAG,WAAW,EAAE,CAAC;IACtC,MAAM,eAAe,GAAG,WAAW,EAAE,CAAC;IAEtC,MAAM,eAAe,GAAG,WAAW,EAAE,CAAC;IACtC,MAAM,aAAa,GAAG,WAAW,EAAE,CAAC;IACpC,MAAM,iBAAiB,GAAG,WAAW,EAAE,CAAC;IACxC,MAAM,iBAAiB,GAAG,WAAW,EAAE,CAAC;IACxC,MAAM,eAAe,GAAG,WAAW,EAAE,CAAC;IAEtC,MAAM,eAAe,GAAG,WAAW,EAAE,CAAC;IACtC,MAAM,aAAa,GAAG,WAAW,EAAE,CAAC;IACpC,MAAM,iBAAiB,GAAG,WAAW,EAAE,CAAC;IACxC,MAAM,iBAAiB,GAAG,WAAW,EAAE,CAAC;IACxC,MAAM,gBAAgB,GAAG,WAAW,EAAE,CAAC;IACvC,MAAM,eAAe,GAAG,WAAW,EAAE,CAAC;IAEtC,OAAO,CACN,CAAC,+BAA+B,CAC/B;GAAA,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAC/C;IAAA,CAAC,SAAS,CACT;KAAA,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CACtD;MAAA,CAAC,UAAU,CACV;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,UAAU,CAC3D;SAAA,CAAC,UAAU,CACV,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,IAAI,CAAC,QAAQ,CACb,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,EAAgB,EAAE,CAAC,CAC9D,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAG,CAC/E,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACX;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CACvC;SAAA,CAAC,CAAC,CAAC,MAAM,CAAC,CACX;QAAA,EAAE,UAAU,CACZ;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,MAAM,CACX,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAC/D,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACtB,CAAC,SAAS,CACT,EAAE,CAAC,CAAC,SAAS,CAAC,CACd,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAC5B,aAAa,CAAC,CAAC,IAAI,CAAC,CACpB,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CACnC,gBAAgB,CAAC,CAAC,GAAG,SAAS,QAAQ,CAAC,EACtC,CACF,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,MAAM,CAAC,IAAI,IAAI,CACf,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,SAAS,QAAQ,CAAC,CAC1D;UAAA,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CACtB;SAAA,EAAE,UAAU,CAAC,CACb,CACF;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,QAAQ,CACxC;SAAA,CAAC,CAAC,CAAC,OAAO,CAAC,CACZ;QAAA,EAAE,UAAU,CACZ;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,OAAO,CACZ,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC;YACN,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;YACpD,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC;SAC5C,CAAC,CACF,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACtB,CAAC,SAAS,CACT,IAAI,KAAK,CAAC,CACV,EAAE,CAAC,CAAC,UAAU,CAAC,CACf,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAC7B,aAAa,CAAC,CAAC,IAAI,CAAC,CACpB,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CACpC,gBAAgB,CAAC,CAAC,GAAG,UAAU,QAAQ,CAAC,EACvC,CACF,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,MAAM,CAAC,KAAK,IAAI,CAChB,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,UAAU,QAAQ,CAAC,CAC3D;UAAA,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CACvB;SAAA,EAAE,UAAU,CAAC,CACb,CACF;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,UAAU,CACrE;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,aAAa,CAClB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAG,CAAC,EAErF;QAAA,EAAE,QAAQ,CACX;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,UAAU,CACpE;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,YAAY,CACjB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,gBAAgB,CAAC,CAAC,GAAG,eAAe,OAAO,CAAC,EAAG,CAAC,EAEpH;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,eAAe,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,EAAE,SAAS,CAChF;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,UAAU,CACnE;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,IAAI,CAAC,YAAY,CACjB,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CACzD,CAAC,sBAAsB,CACtB,EAAE,CAAC,CAAC,eAAe,CAAC,CACpB,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,MAAM,CAAC,CAAC,MAAM,CAAC,CACf,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,gBAAgB,CAAC,CAAC,GAAG,eAAe,OAAO,CAAC,EAC3C,CACF,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,eAAe,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,mDAAmD,CAAC,CAAC,EAAE,SAAS,CAC9G;OAAA,EAAE,KAAK,CACR;MAAA,EAAE,UAAU,CACb;KAAA,EAAE,SAAS,CAAC,IAAI,CAChB;KAAA,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAC1F;MAAA,CAAC,UAAU,CACV;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,CAAC,QAAQ,CAC7C;SAAA,CAAC,CAAC,CAAC,QAAQ,CAAC,CACb;QAAA,EAAE,UAAU,CACZ;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,YAAY,CACjB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CACjE,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACtB,CAAC,SAAS,CACT,EAAE,CAAC,CAAC,eAAe,CAAC,CACpB,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,CAClC,aAAa,CAAC,CAAC,IAAI,CAAC,CACpB,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CACpC,gBAAgB,CAAC,CAAC,GAAG,eAAe,QAAQ,CAAC,EAC5C,CACF,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,MAAM,CAAC,UAAU,IAAI,CACrB,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,eAAe,QAAQ,CAAC,CAChE;UAAA,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAC5B;SAAA,EAAE,UAAU,CAAC,CACb,CACF;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAC3C;SAAA,CAAC,CAAC,CAAC,MAAM,CAAC,CACX;QAAA,EAAE,UAAU,CACZ;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,UAAU,CACf,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAC/D,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACtB,CAAC,WAAW,CACX,EAAE,CAAC,CAAC,aAAa,CAAC,CAClB,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAChC,aAAa,CAAC,CAAC,IAAI,CAAC,CACpB,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CACpC,gBAAgB,CAAC,CAAC,GAAG,aAAa,QAAQ,CAAC,EAC1C,CACF,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,MAAM,CAAC,QAAQ,IAAI,CACnB,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,aAAa,QAAQ,CAAC,CAC9D;UAAA,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAC1B;SAAA,EAAE,UAAU,CAAC,CACb,CACF;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAC/C;SAAA,CAAC,CAAC,CAAC,UAAU,CAAC,CACf;QAAA,EAAE,UAAU,CACZ;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,cAAc,CACnB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,CACnE,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACtB,CAAC,SAAS,CACT,EAAE,CAAC,CAAC,iBAAiB,CAAC,CACtB,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CACpC,gBAAgB,CAAC,CAAC,GAAG,iBAAiB,QAAQ,CAAC,CAC/C,aAAa,CAAC,CAAC,IAAI,CAAC,CACpB,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EACnC,CACF,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,MAAM,CAAC,YAAY,IAAI,CACvB,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,QAAQ,CAAC,CAClE;UAAA,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAC9B;SAAA,EAAE,UAAU,CAAC,CACb,CACF;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAC/C;SAAA,CAAC,CAAC,CAAC,UAAU,CAAC,CACf;QAAA,EAAE,UAAU,CACZ;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,cAAc,CACnB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,CACnE,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACtB,CAAC,aAAa,CACb,EAAE,CAAC,CAAC,iBAAiB,CAAC,CACtB,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CACpC,gBAAgB,CAAC,CAAC,GAAG,iBAAiB,QAAQ,CAAC,CAC/C,aAAa,CAAC,CAAC,IAAI,CAAC,CACpB,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EACnC,CACF,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,MAAM,CAAC,YAAY,IAAI,CACvB,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,QAAQ,CAAC,CAClE;UAAA,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAC9B;SAAA,EAAE,UAAU,CAAC,CACb,CACF;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,EAAE,UAAU,CACxE;SAAA,CAAC,UAAU,CACV,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,IAAI,CAAC,YAAY,CACjB,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,EAAG,CAAC,EAE/G;QAAA,EAAE,QAAQ,CACX;OAAA,EAAE,KAAK,CACR;MAAA,EAAE,UAAU,CACb;KAAA,EAAE,SAAS,CAAC,IAAI,CAChB;KAAA,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAC1F;MAAA,CAAC,UAAU,CACV;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,CAAC,QAAQ,CAC7C;SAAA,CAAC,CAAC,CAAC,QAAQ,CAAC,CACb;QAAA,EAAE,UAAU,CACZ;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,YAAY,CACjB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CACjE,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACtB,CAAC,SAAS,CACT,EAAE,CAAC,CAAC,eAAe,CAAC,CACpB,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,CAClC,gBAAgB,CAAC,CAAC,GAAG,eAAe,QAAQ,CAAC,CAC7C,aAAa,CAAC,CAAC,IAAI,CAAC,CACpB,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EACnC,CACF,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,MAAM,CAAC,UAAU,IAAI,CACrB,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,eAAe,QAAQ,CAAC,CAChE;UAAA,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAC5B;SAAA,EAAE,UAAU,CAAC,CACb,CACF;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAC3C;SAAA,CAAC,CAAC,CAAC,MAAM,CAAC,CACX;QAAA,EAAE,UAAU,CACZ;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,UAAU,CACf,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAC/D,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACtB,CAAC,WAAW,CACX,EAAE,CAAC,CAAC,aAAa,CAAC,CAClB,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAChC,gBAAgB,CAAC,CAAC,GAAG,aAAa,QAAQ,CAAC,CAC3C,aAAa,CAAC,CAAC,IAAI,CAAC,CACpB,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EACnC,CACF,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,MAAM,CAAC,QAAQ,IAAI,CACnB,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,aAAa,QAAQ,CAAC,CAC9D;UAAA,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAC1B;SAAA,EAAE,UAAU,CAAC,CACb,CACF;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAC/C;SAAA,CAAC,CAAC,CAAC,UAAU,CAAC,CACf;QAAA,EAAE,UAAU,CACZ;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,cAAc,CACnB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,CACnE,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACtB,CAAC,SAAS,CACT,EAAE,CAAC,CAAC,iBAAiB,CAAC,CACtB,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CACpC,gBAAgB,CAAC,CAAC,GAAG,iBAAiB,QAAQ,CAAC,CAC/C,aAAa,CAAC,CAAC,IAAI,CAAC,CACpB,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EACnC,CACF,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,MAAM,CAAC,YAAY,IAAI,CACvB,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,QAAQ,CAAC,CAClE;UAAA,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAC9B;SAAA,EAAE,UAAU,CAAC,CACb,CACF;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAC/C;SAAA,CAAC,CAAC,CAAC,UAAU,CAAC,CACf;QAAA,EAAE,UAAU,CACZ;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,cAAc,CACnB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,CACnE,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACtB,CAAC,aAAa,CACb,EAAE,CAAC,CAAC,iBAAiB,CAAC,CACtB,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,CACpC,gBAAgB,CAAC,CAAC,GAAG,iBAAiB,QAAQ,CAAC,CAC/C,aAAa,CAAC,CAAC,IAAI,CAAC,CACpB,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EACnC,CACF,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,MAAM,CAAC,YAAY,IAAI,CACvB,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,iBAAiB,QAAQ,CAAC,CAClE;UAAA,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAC9B;SAAA,EAAE,UAAU,CAAC,CACb,CACF;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAC9C;SAAA,CAAC,CAAC,CAAC,WAAW,CAAC,CAChB;QAAA,EAAE,UAAU,CACZ;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CACV,IAAI,CAAC,aAAa,CAClB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,CACpE,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CACtB,CAAC,WAAW,CACX,EAAE,CAAC,CAAC,gBAAgB,CAAC,CACrB,IAAI,KAAK,CAAC,CACV,KAAK,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,CACnC,gBAAgB,CAAC,CAAC,GAAG,gBAAgB,QAAQ,CAAC,CAC9C,aAAa,CAAC,CAAC,IAAI,CAAC,CACpB,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EACnC,CACF,CAAC,EAEJ;QAAA,EAAE,QAAQ,CACV;QAAA,CAAC,MAAM,CAAC,WAAW,IAAI,CACtB,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,gBAAgB,QAAQ,CAAC,CACjE;UAAA,CAAC,MAAM,CAAC,WAAW,EAAE,OAAO,CAC7B;SAAA,EAAE,UAAU,CAAC,CACb,CACF;OAAA,EAAE,KAAK,CACP;OAAA,CAAC,KAAK,CACL;QAAA,CAAC,QAAQ,CACR;SAAA,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,EAAE,UAAU,CACxE;SAAA,CAAC,UAAU,CACV,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,IAAI,CAAC,YAAY,CACjB,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,EAAG,CAAC,EAE/G;QAAA,EAAE,QAAQ,CACX;OAAA,EAAE,KAAK,CACR;MAAA,EAAE,UAAU,CACb;KAAA,EAAE,SAAS,CAAC,IAAI,CAChB;KAAA,CAAC,KAAK,CACL;MAAA,CAAC,QAAQ,CACR;OAAA,CAAC,WAAW,CAAC,OAAO,CACnB;QAAA,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAClD;QAAA,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CACrE;SAAA,CAAC,CAAC,CAAC,MAAM,CAAC,CACX;QAAA,EAAE,MAAM,CACT;OAAA,EAAE,WAAW,CACd;MAAA,EAAE,QAAQ,CACV;MAAA,CAAC,QAAQ,CACR;OAAA,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CACvB;QAAA,CAAC,WAAW,CAAC,OAAO,CACnB;SAAA,CAAC,SAAS,EAAE,GAAG,IAAI,CAClB,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CACpC;WAAA,CAAC,CAAC,CAAC,QAAQ,CAAC,CACb;UAAA,EAAE,MAAM,CAAC,CACT,CACF;QAAA,EAAE,WAAW,CACd;OAAA,EAAE,OAAO,CACV;MAAA,EAAE,QAAQ,CACX;KAAA,EAAE,KAAK,CACR;IAAA,EAAE,SAAS,CACZ;GAAA,EAAE,GAAG,CACN;EAAA,EAAE,+BAA+B,CAAC,CAClC,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import type { IEmailInboxPayload } from '@rocket.chat/core-typings';\nimport {\n\tAccordion,\n\tButton,\n\tButtonGroup,\n\tTextInput,\n\tTextAreaInput,\n\tField,\n\tToggleSwitch,\n\tFieldGroup,\n\tBox,\n\tMargins,\n\tNumberInput,\n\tPasswordInput,\n\tFieldLabel,\n\tFieldRow,\n\tFieldError,\n\tFieldHint,\n} from '@rocket.chat/fuselage';\nimport { useMutableCallback, useUniqueId } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useRoute, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useCallback } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport AutoCompleteDepartment from '../../../components/AutoCompleteDepartment';\nimport GenericModal from '../../../components/GenericModal';\nimport { PageScrollableContentWithShadow } from '../../../components/Page';\n\nconst EmailInboxForm = ({ inboxData }: { inboxData?: IEmailInboxPayload }): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst setModal = useSetModal();\n\tconst router = useRoute('admin-email-inboxes');\n\n\tconst handleBack = useCallback(() => router.push({}), [router]);\n\n\tconst saveEmailInbox = useEndpoint('POST', '/v1/email-inbox');\n\tconst deleteInboxAction = useEndpoint('DELETE', '/v1/email-inbox/:_id', { _id: inboxData?._id ?? '' });\n\tconst emailAlreadyExistsAction = useEndpoint('GET', '/v1/email-inbox.search');\n\n\tconst {\n\t\tcontrol,\n\t\thandleSubmit,\n\t\tformState: { errors, isDirty },\n\t} = useForm({\n\t\tdefaultValues: {\n\t\t\tactive: inboxData?.active ?? true,\n\t\t\tname: inboxData?.name,\n\t\t\temail: inboxData?.email,\n\t\t\tdescription: inboxData?.description,\n\t\t\tsenderInfo: inboxData?.senderInfo,\n\t\t\tdepartment: inboxData?.department || '',\n\t\t\t// SMTP\n\t\t\tsmtpServer: inboxData?.smtp.server,\n\t\t\tsmtpPort: inboxData?.smtp.port ?? 587,\n\t\t\tsmtpUsername: inboxData?.smtp.username,\n\t\t\tsmtpPassword: inboxData?.smtp.password,\n\t\t\tsmtpSecure: inboxData?.smtp.secure ?? false,\n\t\t\t// IMAP\n\t\t\timapServer: inboxData?.imap.server,\n\t\t\timapPort: inboxData?.imap.port ?? 993,\n\t\t\timapUsername: inboxData?.imap.username,\n\t\t\timapPassword: inboxData?.imap.password,\n\t\t\timapSecure: inboxData?.imap.secure ?? false,\n\t\t\timapRetries: inboxData?.imap.maxRetries ?? 10,\n\t\t},\n\t\tmode: 'all',\n\t});\n\n\tconst handleDelete = useMutableCallback(() => {\n\t\tconst deleteInbox = async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait deleteInboxAction();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_removed') });\n\t\t\t\thandleBack();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetModal(null);\n\t\t\t}\n\t\t};\n\n\t\tsetModal(\n\t\t\t<GenericModal variant='danger' onConfirm={deleteInbox} onCancel={(): void => setModal(null)} confirmText={t('Delete')}>\n\t\t\t\t{t('You_will_not_be_able_to_recover_email_inbox')}\n\t\t\t</GenericModal>,\n\t\t);\n\t});\n\n\tconst handleSave = useMutableCallback(\n\t\tasync ({\n\t\t\tactive,\n\t\t\tname,\n\t\t\temail,\n\t\t\tdescription,\n\t\t\tsenderInfo,\n\t\t\tdepartment,\n\t\t\tsmtpServer,\n\t\t\tsmtpPort,\n\t\t\tsmtpUsername,\n\t\t\tsmtpPassword,\n\t\t\tsmtpSecure,\n\t\t\timapServer,\n\t\t\timapPort,\n\t\t\timapUsername,\n\t\t\timapPassword,\n\t\t\timapSecure,\n\t\t\timapRetries,\n\t\t}) => {\n\t\t\tconst smtp = {\n\t\t\t\tserver: smtpServer,\n\t\t\t\tport: parseInt(smtpPort),\n\t\t\t\tusername: smtpUsername,\n\t\t\t\tpassword: smtpPassword,\n\t\t\t\tsecure: smtpSecure,\n\t\t\t};\n\n\t\t\tconst imap = {\n\t\t\t\tserver: imapServer,\n\t\t\t\tport: parseInt(imapPort),\n\t\t\t\tusername: imapUsername,\n\t\t\t\tpassword: imapPassword,\n\t\t\t\tsecure: imapSecure,\n\t\t\t\tmaxRetries: parseInt(imapRetries),\n\t\t\t};\n\n\t\t\tconst payload = {\n\t\t\t\t...(inboxData?._id && { _id: inboxData?._id }),\n\t\t\t\tactive,\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tdescription,\n\t\t\t\tsenderInfo,\n\t\t\t\t...(department && { department: typeof department === 'string' ? department : department.value }),\n\t\t\t\tsmtp,\n\t\t\t\timap,\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tawait saveEmailInbox(payload);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_added') });\n\t\t\t\thandleBack();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t);\n\n\tconst checkEmailExists = useMutableCallback(async (email) => {\n\t\tif (!email) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!validateEmail(email)) {\n\t\t\treturn t('error-invalid-email-address');\n\t\t}\n\n\t\tconst { emailInbox } = await emailAlreadyExistsAction({ email });\n\n\t\tif (!emailInbox || (inboxData?._id && emailInbox._id === inboxData?._id)) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn t('Email_already_exists');\n\t});\n\n\tconst activeField = useUniqueId();\n\tconst nameField = useUniqueId();\n\tconst emailField = useUniqueId();\n\tconst descriptionField = useUniqueId();\n\tconst senderInfoField = useUniqueId();\n\tconst departmentField = useUniqueId();\n\n\tconst smtpServerField = useUniqueId();\n\tconst smtpPortField = useUniqueId();\n\tconst smtpUsernameField = useUniqueId();\n\tconst smtpPasswordField = useUniqueId();\n\tconst smtpSecureField = useUniqueId();\n\n\tconst imapServerField = useUniqueId();\n\tconst imapPortField = useUniqueId();\n\tconst imapUsernameField = useUniqueId();\n\tconst imapPasswordField = useUniqueId();\n\tconst imapRetriesField = useUniqueId();\n\tconst imapSecureField = useUniqueId();\n\n\treturn (\n\t\t<PageScrollableContentWithShadow>\n\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t<Accordion>\n\t\t\t\t\t<Accordion.Item defaultExpanded title={t('Inbox_Info')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={activeField}>{t('Active')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='active'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { onChange, value, ref } }): ReactElement => (\n\t\t\t\t\t\t\t\t\t\t\t<ToggleSwitch id={activeField} ref={ref} checked={value} onChange={onChange} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={nameField} required>\n\t\t\t\t\t\t\t\t\t{t('Name')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Name') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={nameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.name?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${nameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.name && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${nameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.name?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={emailField} required>\n\t\t\t\t\t\t\t\t\t{t('Email')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\t\t\trequired: t('Required_field', { field: t('Email') }),\n\t\t\t\t\t\t\t\t\t\t\tvalidate: (value) => checkEmailExists(value),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\tid={emailField}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.email?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${emailField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.email && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${emailField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.email?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={descriptionField}>{t('Description')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => <TextAreaInput id={descriptionField} {...field} rows={4} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={senderInfoField}>{t('Sender_Info')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='senderInfo'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => <TextInput id={senderInfoField} {...field} aria-describedby={`${senderInfoField}-hint`} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t<FieldHint id={`${senderInfoField}-hint`}>{t('Will_Appear_In_From')}</FieldHint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={departmentField}>{t('Department')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='department'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { onChange, onBlur, name, value } }) => (\n\t\t\t\t\t\t\t\t\t\t\t<AutoCompleteDepartment\n\t\t\t\t\t\t\t\t\t\t\t\tid={departmentField}\n\t\t\t\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${departmentField}-hint`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t<FieldHint id={`${departmentField}-hint`}>{t('Only_Members_Selected_Department_Can_View_Channel')}</FieldHint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Outgoing_Mail_SMTP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpServerField} required>\n\t\t\t\t\t\t\t\t\t{t('Server')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpServer'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Server') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpServerField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpServer?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpServerField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpServer && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpServerField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpServer?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpPortField} required>\n\t\t\t\t\t\t\t\t\t{t('Port')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpPort'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Port') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpPortField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpPort?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpPortField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpPort && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpPortField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpPort?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpUsernameField} required>\n\t\t\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpUsername'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Username') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpUsernameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpUsername?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpUsernameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpUsername && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpUsernameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpUsername?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpPasswordField} required>\n\t\t\t\t\t\t\t\t\t{t('Password')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpPassword'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Password') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpPasswordField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpPassword?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpPasswordField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpPassword && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpPasswordField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpPassword?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='smtpSecure'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { value, ...field } }) => <ToggleSwitch id={smtpSecureField} {...field} checked={value} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Incoming_Mail_IMAP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapServerField} required>\n\t\t\t\t\t\t\t\t\t{t('Server')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapServer'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Server') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapServerField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapServer?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapServerField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapServer && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapServerField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapServer?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapPortField} required>\n\t\t\t\t\t\t\t\t\t{t('Port')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapPort'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Port') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapPortField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapPort?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapPortField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapPort && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapPortField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapPort?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapUsernameField} required>\n\t\t\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapUsername'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Username') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapUsernameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapUsername?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapUsernameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapUsername && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapUsernameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapUsername?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapPasswordField} required>\n\t\t\t\t\t\t\t\t\t{t('Password')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapPassword'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Password') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapPasswordField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapPassword?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapPasswordField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapPassword && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapPasswordField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapPassword?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapRetriesField} required>\n\t\t\t\t\t\t\t\t\t{t('Max_Retry')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapRetries'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Max_Retry') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapRetriesField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapRetries?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapRetriesField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapRetries && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapRetriesField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapRetries?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='imapSecure'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { value, ...field } }) => <ToggleSwitch id={imapSecureField} {...field} checked={value} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t\t\t\t<Button onClick={handleBack}>{t('Cancel')}</Button>\n\t\t\t\t\t\t\t\t<Button disabled={!isDirty} primary onClick={handleSubmit(handleSave)}>\n\t\t\t\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Margins blockStart={16}>\n\t\t\t\t\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t\t\t\t\t{inboxData?._id && (\n\t\t\t\t\t\t\t\t\t\t<Button danger onClick={handleDelete}>\n\t\t\t\t\t\t\t\t\t\t\t{t('Delete')}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t</Margins>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t</Field>\n\t\t\t\t</Accordion>\n\t\t\t</Box>\n\t\t</PageScrollableContentWithShadow>\n\t);\n};\n\nexport default EmailInboxForm;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/admin/emailInbox/EmailInboxForm.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/admin/emailInbox/EmailInboxForm.tsx","inputSourceMap":{"version":3,"file":"client/views/admin/emailInbox/EmailInboxForm.tsx","sourceRoot":"","sources":["client/views/admin/emailInbox/EmailInboxForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import type { IEmailInboxPayload } from '@rocket.chat/core-typings';\nimport {\n\tAccordion,\n\tButton,\n\tButtonGroup,\n\tTextInput,\n\tTextAreaInput,\n\tField,\n\tToggleSwitch,\n\tFieldGroup,\n\tBox,\n\tMargins,\n\tNumberInput,\n\tPasswordInput,\n\tFieldLabel,\n\tFieldRow,\n\tFieldError,\n\tFieldHint,\n} from '@rocket.chat/fuselage';\nimport { useMutableCallback, useUniqueId } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useRoute, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useCallback } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport AutoCompleteDepartment from '../../../components/AutoCompleteDepartment';\nimport GenericModal from '../../../components/GenericModal';\nimport { PageScrollableContentWithShadow } from '../../../components/Page';\n\nconst EmailInboxForm = ({ inboxData }: { inboxData?: IEmailInboxPayload }): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst setModal = useSetModal();\n\tconst router = useRoute('admin-email-inboxes');\n\n\tconst handleBack = useCallback(() => router.push({}), [router]);\n\n\tconst saveEmailInbox = useEndpoint('POST', '/v1/email-inbox');\n\tconst deleteInboxAction = useEndpoint('DELETE', '/v1/email-inbox/:_id', { _id: inboxData?._id ?? '' });\n\tconst emailAlreadyExistsAction = useEndpoint('GET', '/v1/email-inbox.search');\n\n\tconst {\n\t\tcontrol,\n\t\thandleSubmit,\n\t\tformState: { errors, isDirty },\n\t} = useForm({\n\t\tdefaultValues: {\n\t\t\tactive: inboxData?.active ?? true,\n\t\t\tname: inboxData?.name,\n\t\t\temail: inboxData?.email,\n\t\t\tdescription: inboxData?.description,\n\t\t\tsenderInfo: inboxData?.senderInfo,\n\t\t\tdepartment: inboxData?.department || '',\n\t\t\t// SMTP\n\t\t\tsmtpServer: inboxData?.smtp.server,\n\t\t\tsmtpPort: inboxData?.smtp.port ?? 587,\n\t\t\tsmtpUsername: inboxData?.smtp.username,\n\t\t\tsmtpPassword: inboxData?.smtp.password,\n\t\t\tsmtpSecure: inboxData?.smtp.secure ?? false,\n\t\t\t// IMAP\n\t\t\timapServer: inboxData?.imap.server,\n\t\t\timapPort: inboxData?.imap.port ?? 993,\n\t\t\timapUsername: inboxData?.imap.username,\n\t\t\timapPassword: inboxData?.imap.password,\n\t\t\timapSecure: inboxData?.imap.secure ?? false,\n\t\t\timapRetries: inboxData?.imap.maxRetries ?? 10,\n\t\t},\n\t\tmode: 'all',\n\t});\n\n\tconst handleDelete = useMutableCallback(() => {\n\t\tconst deleteInbox = async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait deleteInboxAction();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_removed') });\n\t\t\t\thandleBack();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetModal(null);\n\t\t\t}\n\t\t};\n\n\t\tsetModal(\n\t\t\t<GenericModal variant='danger' onConfirm={deleteInbox} onCancel={(): void => setModal(null)} confirmText={t('Delete')}>\n\t\t\t\t{t('You_will_not_be_able_to_recover_email_inbox')}\n\t\t\t</GenericModal>,\n\t\t);\n\t});\n\n\tconst handleSave = useMutableCallback(\n\t\tasync ({\n\t\t\tactive,\n\t\t\tname,\n\t\t\temail,\n\t\t\tdescription,\n\t\t\tsenderInfo,\n\t\t\tdepartment,\n\t\t\tsmtpServer,\n\t\t\tsmtpPort,\n\t\t\tsmtpUsername,\n\t\t\tsmtpPassword,\n\t\t\tsmtpSecure,\n\t\t\timapServer,\n\t\t\timapPort,\n\t\t\timapUsername,\n\t\t\timapPassword,\n\t\t\timapSecure,\n\t\t\timapRetries,\n\t\t}) => {\n\t\t\tconst smtp = {\n\t\t\t\tserver: smtpServer,\n\t\t\t\tport: parseInt(smtpPort),\n\t\t\t\tusername: smtpUsername,\n\t\t\t\tpassword: smtpPassword,\n\t\t\t\tsecure: smtpSecure,\n\t\t\t};\n\n\t\t\tconst imap = {\n\t\t\t\tserver: imapServer,\n\t\t\t\tport: parseInt(imapPort),\n\t\t\t\tusername: imapUsername,\n\t\t\t\tpassword: imapPassword,\n\t\t\t\tsecure: imapSecure,\n\t\t\t\tmaxRetries: parseInt(imapRetries),\n\t\t\t};\n\n\t\t\tconst payload = {\n\t\t\t\t...(inboxData?._id && { _id: inboxData?._id }),\n\t\t\t\tactive,\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tdescription,\n\t\t\t\tsenderInfo,\n\t\t\t\t...(department && { department: typeof department === 'string' ? department : department.value }),\n\t\t\t\tsmtp,\n\t\t\t\timap,\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tawait saveEmailInbox(payload);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_added') });\n\t\t\t\thandleBack();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t);\n\n\tconst checkEmailExists = useMutableCallback(async (email) => {\n\t\tif (!email) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!validateEmail(email)) {\n\t\t\treturn t('error-invalid-email-address');\n\t\t}\n\n\t\tconst { emailInbox } = await emailAlreadyExistsAction({ email });\n\n\t\tif (!emailInbox || (inboxData?._id && emailInbox._id === inboxData?._id)) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn t('Email_already_exists');\n\t});\n\n\tconst activeField = useUniqueId();\n\tconst nameField = useUniqueId();\n\tconst emailField = useUniqueId();\n\tconst descriptionField = useUniqueId();\n\tconst senderInfoField = useUniqueId();\n\tconst departmentField = useUniqueId();\n\n\tconst smtpServerField = useUniqueId();\n\tconst smtpPortField = useUniqueId();\n\tconst smtpUsernameField = useUniqueId();\n\tconst smtpPasswordField = useUniqueId();\n\tconst smtpSecureField = useUniqueId();\n\n\tconst imapServerField = useUniqueId();\n\tconst imapPortField = useUniqueId();\n\tconst imapUsernameField = useUniqueId();\n\tconst imapPasswordField = useUniqueId();\n\tconst imapRetriesField = useUniqueId();\n\tconst imapSecureField = useUniqueId();\n\n\treturn (\n\t\t<PageScrollableContentWithShadow>\n\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t<Accordion>\n\t\t\t\t\t<Accordion.Item defaultExpanded title={t('Inbox_Info')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={activeField}>{t('Active')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='active'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { onChange, value, ref } }): ReactElement => (\n\t\t\t\t\t\t\t\t\t\t\t<ToggleSwitch id={activeField} ref={ref} checked={value} onChange={onChange} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={nameField} required>\n\t\t\t\t\t\t\t\t\t{t('Name')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Name') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={nameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.name?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${nameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.name && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${nameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.name?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={emailField} required>\n\t\t\t\t\t\t\t\t\t{t('Email')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\t\t\trequired: t('Required_field', { field: t('Email') }),\n\t\t\t\t\t\t\t\t\t\t\tvalidate: (value) => checkEmailExists(value),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\tid={emailField}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.email?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${emailField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.email && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${emailField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.email?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={descriptionField}>{t('Description')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => <TextAreaInput id={descriptionField} {...field} rows={4} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={senderInfoField}>{t('Sender_Info')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='senderInfo'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => <TextInput id={senderInfoField} {...field} aria-describedby={`${senderInfoField}-hint`} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t<FieldHint id={`${senderInfoField}-hint`}>{t('Will_Appear_In_From')}</FieldHint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={departmentField}>{t('Department')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='department'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { onChange, onBlur, name, value } }) => (\n\t\t\t\t\t\t\t\t\t\t\t<AutoCompleteDepartment\n\t\t\t\t\t\t\t\t\t\t\t\tid={departmentField}\n\t\t\t\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${departmentField}-hint`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t<FieldHint id={`${departmentField}-hint`}>{t('Only_Members_Selected_Department_Can_View_Channel')}</FieldHint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Outgoing_Mail_SMTP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpServerField} required>\n\t\t\t\t\t\t\t\t\t{t('Server')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpServer'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Server') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpServerField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpServer?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpServerField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpServer && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpServerField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpServer?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpPortField} required>\n\t\t\t\t\t\t\t\t\t{t('Port')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpPort'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Port') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpPortField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpPort?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpPortField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpPort && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpPortField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpPort?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpUsernameField} required>\n\t\t\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpUsername'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Username') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpUsernameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpUsername?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpUsernameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpUsername && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpUsernameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpUsername?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpPasswordField} required>\n\t\t\t\t\t\t\t\t\t{t('Password')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpPassword'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Password') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpPasswordField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpPassword?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpPasswordField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpPassword && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpPasswordField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpPassword?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='smtpSecure'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { value, ...field } }) => <ToggleSwitch id={smtpSecureField} {...field} checked={value} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Incoming_Mail_IMAP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapServerField} required>\n\t\t\t\t\t\t\t\t\t{t('Server')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapServer'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Server') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapServerField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapServer?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapServerField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapServer && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapServerField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapServer?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapPortField} required>\n\t\t\t\t\t\t\t\t\t{t('Port')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapPort'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Port') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapPortField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapPort?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapPortField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapPort && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapPortField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapPort?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapUsernameField} required>\n\t\t\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapUsername'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Username') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapUsernameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapUsername?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapUsernameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapUsername && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapUsernameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapUsername?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapPasswordField} required>\n\t\t\t\t\t\t\t\t\t{t('Password')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapPassword'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Password') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapPasswordField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapPassword?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapPasswordField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapPassword && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapPasswordField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapPassword?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapRetriesField} required>\n\t\t\t\t\t\t\t\t\t{t('Max_Retry')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapRetries'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Max_Retry') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapRetriesField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapRetries?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapRetriesField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapRetries && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapRetriesField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapRetries?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='imapSecure'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { value, ...field } }) => <ToggleSwitch id={imapSecureField} {...field} checked={value} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t\t\t\t<Button onClick={handleBack}>{t('Cancel')}</Button>\n\t\t\t\t\t\t\t\t<Button disabled={!isDirty} primary onClick={handleSubmit(handleSave)}>\n\t\t\t\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Margins blockStart={16}>\n\t\t\t\t\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t\t\t\t\t{inboxData?._id && (\n\t\t\t\t\t\t\t\t\t\t<Button danger onClick={handleDelete}>\n\t\t\t\t\t\t\t\t\t\t\t{t('Delete')}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t</Margins>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t</Field>\n\t\t\t\t</Accordion>\n\t\t\t</Box>\n\t\t</PageScrollableContentWithShadow>\n\t);\n};\n\nexport default EmailInboxForm;\n"]}}},"code":"const _excluded = [\"value\"],\n  _excluded2 = [\"value\"];\nlet _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n}, 0);\nlet _extends;\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n}, 1);\nlet _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 2);\nlet Accordion, Button, ButtonGroup, TextInput, TextAreaInput, Field, ToggleSwitch, FieldGroup, Box, Margins, NumberInput, PasswordInput, FieldLabel, FieldRow, FieldError, FieldHint;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Accordion(v) {\n    Accordion = v;\n  },\n  Button(v) {\n    Button = v;\n  },\n  ButtonGroup(v) {\n    ButtonGroup = v;\n  },\n  TextInput(v) {\n    TextInput = v;\n  },\n  TextAreaInput(v) {\n    TextAreaInput = v;\n  },\n  Field(v) {\n    Field = v;\n  },\n  ToggleSwitch(v) {\n    ToggleSwitch = v;\n  },\n  FieldGroup(v) {\n    FieldGroup = v;\n  },\n  Box(v) {\n    Box = v;\n  },\n  Margins(v) {\n    Margins = v;\n  },\n  NumberInput(v) {\n    NumberInput = v;\n  },\n  PasswordInput(v) {\n    PasswordInput = v;\n  },\n  FieldLabel(v) {\n    FieldLabel = v;\n  },\n  FieldRow(v) {\n    FieldRow = v;\n  },\n  FieldError(v) {\n    FieldError = v;\n  },\n  FieldHint(v) {\n    FieldHint = v;\n  }\n}, 0);\nlet useMutableCallback, useUniqueId;\nmodule.link(\"@rocket.chat/fuselage-hooks\", {\n  useMutableCallback(v) {\n    useMutableCallback = v;\n  },\n  useUniqueId(v) {\n    useUniqueId = v;\n  }\n}, 1);\nlet useSetModal, useToastMessageDispatch, useRoute, useEndpoint, useTranslation;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useSetModal(v) {\n    useSetModal = v;\n  },\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  },\n  useRoute(v) {\n    useRoute = v;\n  },\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 2);\nlet React, useCallback;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useCallback(v) {\n    useCallback = v;\n  }\n}, 3);\nlet useForm, Controller;\nmodule.link(\"react-hook-form\", {\n  useForm(v) {\n    useForm = v;\n  },\n  Controller(v) {\n    Controller = v;\n  }\n}, 4);\nlet validateEmail;\nmodule.link(\"../../../../lib/emailValidator\", {\n  validateEmail(v) {\n    validateEmail = v;\n  }\n}, 5);\nlet AutoCompleteDepartment;\nmodule.link(\"../../../components/AutoCompleteDepartment\", {\n  default(v) {\n    AutoCompleteDepartment = v;\n  }\n}, 6);\nlet GenericModal;\nmodule.link(\"../../../components/GenericModal\", {\n  default(v) {\n    GenericModal = v;\n  }\n}, 7);\nlet PageScrollableContentWithShadow;\nmodule.link(\"../../../components/Page\", {\n  PageScrollableContentWithShadow(v) {\n    PageScrollableContentWithShadow = v;\n  }\n}, 8);\nconst EmailInboxForm = _ref => {\n  var _inboxData$_id, _inboxData$active, _inboxData$smtp$port, _inboxData$smtp$secur, _inboxData$imap$port, _inboxData$imap$secur, _inboxData$imap$maxRe, _errors$name2, _errors$email2, _errors$smtpServer2, _errors$smtpPort2, _errors$smtpUsername2, _errors$smtpPassword2, _errors$imapServer2, _errors$imapPort2, _errors$imapUsername2, _errors$imapPassword2, _errors$imapRetries2;\n  let {\n    inboxData\n  } = _ref;\n  const t = useTranslation();\n  const dispatchToastMessage = useToastMessageDispatch();\n  const setModal = useSetModal();\n  const router = useRoute('admin-email-inboxes');\n  const handleBack = useCallback(() => router.push({}), [router]);\n  const saveEmailInbox = useEndpoint('POST', '/v1/email-inbox');\n  const deleteInboxAction = useEndpoint('DELETE', '/v1/email-inbox/:_id', {\n    _id: (_inboxData$_id = inboxData === null || inboxData === void 0 ? void 0 : inboxData._id) !== null && _inboxData$_id !== void 0 ? _inboxData$_id : ''\n  });\n  const emailAlreadyExistsAction = useEndpoint('GET', '/v1/email-inbox.search');\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors,\n      isDirty\n    }\n  } = useForm({\n    defaultValues: {\n      active: (_inboxData$active = inboxData === null || inboxData === void 0 ? void 0 : inboxData.active) !== null && _inboxData$active !== void 0 ? _inboxData$active : true,\n      name: inboxData === null || inboxData === void 0 ? void 0 : inboxData.name,\n      email: inboxData === null || inboxData === void 0 ? void 0 : inboxData.email,\n      description: inboxData === null || inboxData === void 0 ? void 0 : inboxData.description,\n      senderInfo: inboxData === null || inboxData === void 0 ? void 0 : inboxData.senderInfo,\n      department: (inboxData === null || inboxData === void 0 ? void 0 : inboxData.department) || '',\n      // SMTP\n      smtpServer: inboxData === null || inboxData === void 0 ? void 0 : inboxData.smtp.server,\n      smtpPort: (_inboxData$smtp$port = inboxData === null || inboxData === void 0 ? void 0 : inboxData.smtp.port) !== null && _inboxData$smtp$port !== void 0 ? _inboxData$smtp$port : 587,\n      smtpUsername: inboxData === null || inboxData === void 0 ? void 0 : inboxData.smtp.username,\n      smtpPassword: inboxData === null || inboxData === void 0 ? void 0 : inboxData.smtp.password,\n      smtpSecure: (_inboxData$smtp$secur = inboxData === null || inboxData === void 0 ? void 0 : inboxData.smtp.secure) !== null && _inboxData$smtp$secur !== void 0 ? _inboxData$smtp$secur : false,\n      // IMAP\n      imapServer: inboxData === null || inboxData === void 0 ? void 0 : inboxData.imap.server,\n      imapPort: (_inboxData$imap$port = inboxData === null || inboxData === void 0 ? void 0 : inboxData.imap.port) !== null && _inboxData$imap$port !== void 0 ? _inboxData$imap$port : 993,\n      imapUsername: inboxData === null || inboxData === void 0 ? void 0 : inboxData.imap.username,\n      imapPassword: inboxData === null || inboxData === void 0 ? void 0 : inboxData.imap.password,\n      imapSecure: (_inboxData$imap$secur = inboxData === null || inboxData === void 0 ? void 0 : inboxData.imap.secure) !== null && _inboxData$imap$secur !== void 0 ? _inboxData$imap$secur : false,\n      imapRetries: (_inboxData$imap$maxRe = inboxData === null || inboxData === void 0 ? void 0 : inboxData.imap.maxRetries) !== null && _inboxData$imap$maxRe !== void 0 ? _inboxData$imap$maxRe : 10\n    },\n    mode: 'all'\n  });\n  const handleDelete = useMutableCallback(() => {\n    const deleteInbox = async () => {\n      try {\n        await deleteInboxAction();\n        dispatchToastMessage({\n          type: 'success',\n          message: t('Email_Inbox_has_been_removed')\n        });\n        handleBack();\n      } catch (error) {\n        dispatchToastMessage({\n          type: 'error',\n          message: error\n        });\n      } finally {\n        setModal(null);\n      }\n    };\n    setModal( /*#__PURE__*/React.createElement(GenericModal, {\n      variant: \"danger\",\n      onConfirm: deleteInbox,\n      onCancel: () => setModal(null),\n      confirmText: t('Delete')\n    }, t('You_will_not_be_able_to_recover_email_inbox')));\n  });\n  const handleSave = useMutableCallback(async _ref2 => {\n    let {\n      active,\n      name,\n      email,\n      description,\n      senderInfo,\n      department,\n      smtpServer,\n      smtpPort,\n      smtpUsername,\n      smtpPassword,\n      smtpSecure,\n      imapServer,\n      imapPort,\n      imapUsername,\n      imapPassword,\n      imapSecure,\n      imapRetries\n    } = _ref2;\n    const smtp = {\n      server: smtpServer,\n      port: parseInt(smtpPort),\n      username: smtpUsername,\n      password: smtpPassword,\n      secure: smtpSecure\n    };\n    const imap = {\n      server: imapServer,\n      port: parseInt(imapPort),\n      username: imapUsername,\n      password: imapPassword,\n      secure: imapSecure,\n      maxRetries: parseInt(imapRetries)\n    };\n    const payload = _objectSpread(_objectSpread(_objectSpread({}, (inboxData === null || inboxData === void 0 ? void 0 : inboxData._id) && {\n      _id: inboxData === null || inboxData === void 0 ? void 0 : inboxData._id\n    }), {}, {\n      active,\n      name,\n      email,\n      description,\n      senderInfo\n    }, department && {\n      department: typeof department === 'string' ? department : department.value\n    }), {}, {\n      smtp,\n      imap\n    });\n    try {\n      await saveEmailInbox(payload);\n      dispatchToastMessage({\n        type: 'success',\n        message: t('Email_Inbox_has_been_added')\n      });\n      handleBack();\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n    }\n  });\n  const checkEmailExists = useMutableCallback(async email => {\n    if (!email) {\n      return;\n    }\n    if (!validateEmail(email)) {\n      return t('error-invalid-email-address');\n    }\n    const {\n      emailInbox\n    } = await emailAlreadyExistsAction({\n      email\n    });\n    if (!emailInbox || inboxData !== null && inboxData !== void 0 && inboxData._id && emailInbox._id === (inboxData === null || inboxData === void 0 ? void 0 : inboxData._id)) {\n      return;\n    }\n    return t('Email_already_exists');\n  });\n  const activeField = useUniqueId();\n  const nameField = useUniqueId();\n  const emailField = useUniqueId();\n  const descriptionField = useUniqueId();\n  const senderInfoField = useUniqueId();\n  const departmentField = useUniqueId();\n  const smtpServerField = useUniqueId();\n  const smtpPortField = useUniqueId();\n  const smtpUsernameField = useUniqueId();\n  const smtpPasswordField = useUniqueId();\n  const smtpSecureField = useUniqueId();\n  const imapServerField = useUniqueId();\n  const imapPortField = useUniqueId();\n  const imapUsernameField = useUniqueId();\n  const imapPasswordField = useUniqueId();\n  const imapRetriesField = useUniqueId();\n  const imapSecureField = useUniqueId();\n  return /*#__PURE__*/React.createElement(PageScrollableContentWithShadow, null, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"x600\",\n    w: \"full\",\n    alignSelf: \"center\"\n  }, /*#__PURE__*/React.createElement(Accordion, null, /*#__PURE__*/React.createElement(Accordion.Item, {\n    defaultExpanded: true,\n    title: t('Inbox_Info')\n  }, /*#__PURE__*/React.createElement(FieldGroup, null, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: activeField\n  }, t('Active')), /*#__PURE__*/React.createElement(Controller, {\n    control: control,\n    name: \"active\",\n    render: _ref3 => {\n      let {\n        field: {\n          onChange,\n          value,\n          ref\n        }\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(ToggleSwitch, {\n        id: activeField,\n        ref: ref,\n        checked: value,\n        onChange: onChange\n      });\n    }\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: nameField,\n    required: true\n  }, t('Name')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"name\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Name')\n      })\n    },\n    render: _ref4 => {\n      var _errors$name;\n      let {\n        field\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({\n        id: nameField\n      }, field, {\n        error: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message,\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.name),\n        \"aria-describedby\": \"\".concat(nameField, \"-error\")\n      }));\n    }\n  })), errors.name && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: \"\".concat(nameField, \"-error\")\n  }, (_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: emailField,\n    required: true\n  }, t('Email')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"email\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Email')\n      }),\n      validate: value => checkEmailExists(value)\n    },\n    render: _ref5 => {\n      var _errors$email;\n      let {\n        field\n      } = _ref5;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({}, field, {\n        id: emailField,\n        error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email),\n        \"aria-describedby\": \"\".concat(emailField, \"-error\")\n      }));\n    }\n  })), errors.email && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: \"\".concat(emailField, \"-error\")\n  }, (_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: descriptionField\n  }, t('Description')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"description\",\n    control: control,\n    render: _ref6 => {\n      let {\n        field\n      } = _ref6;\n      return /*#__PURE__*/React.createElement(TextAreaInput, _extends({\n        id: descriptionField\n      }, field, {\n        rows: 4\n      }));\n    }\n  }))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: senderInfoField\n  }, t('Sender_Info')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"senderInfo\",\n    control: control,\n    render: _ref7 => {\n      let {\n        field\n      } = _ref7;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({\n        id: senderInfoField\n      }, field, {\n        \"aria-describedby\": \"\".concat(senderInfoField, \"-hint\")\n      }));\n    }\n  })), /*#__PURE__*/React.createElement(FieldHint, {\n    id: \"\".concat(senderInfoField, \"-hint\")\n  }, t('Will_Appear_In_From'))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: departmentField\n  }, t('Department')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    control: control,\n    name: \"department\",\n    render: _ref8 => {\n      let {\n        field: {\n          onChange,\n          onBlur,\n          name,\n          value\n        }\n      } = _ref8;\n      return /*#__PURE__*/React.createElement(AutoCompleteDepartment, {\n        id: departmentField,\n        name: name,\n        onBlur: onBlur,\n        value: value,\n        onChange: onChange,\n        \"aria-describedby\": \"\".concat(departmentField, \"-hint\")\n      });\n    }\n  })), /*#__PURE__*/React.createElement(FieldHint, {\n    id: \"\".concat(departmentField, \"-hint\")\n  }, t('Only_Members_Selected_Department_Can_View_Channel'))))), /*#__PURE__*/React.createElement(Accordion.Item, {\n    defaultExpanded: !(inboxData !== null && inboxData !== void 0 && inboxData._id),\n    title: t('Configure_Outgoing_Mail_SMTP')\n  }, /*#__PURE__*/React.createElement(FieldGroup, null, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: smtpServerField,\n    required: true\n  }, t('Server')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"smtpServer\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Server')\n      })\n    },\n    render: _ref9 => {\n      var _errors$smtpServer;\n      let {\n        field\n      } = _ref9;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({\n        id: smtpServerField\n      }, field, {\n        error: (_errors$smtpServer = errors.smtpServer) === null || _errors$smtpServer === void 0 ? void 0 : _errors$smtpServer.message,\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email),\n        \"aria-describedby\": \"\".concat(smtpServerField, \"-error\")\n      }));\n    }\n  })), errors.smtpServer && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: \"\".concat(smtpServerField, \"-error\")\n  }, (_errors$smtpServer2 = errors.smtpServer) === null || _errors$smtpServer2 === void 0 ? void 0 : _errors$smtpServer2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: smtpPortField,\n    required: true\n  }, t('Port')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"smtpPort\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Port')\n      })\n    },\n    render: _ref10 => {\n      var _errors$smtpPort;\n      let {\n        field\n      } = _ref10;\n      return /*#__PURE__*/React.createElement(NumberInput, _extends({\n        id: smtpPortField\n      }, field, {\n        error: (_errors$smtpPort = errors.smtpPort) === null || _errors$smtpPort === void 0 ? void 0 : _errors$smtpPort.message,\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email),\n        \"aria-describedby\": \"\".concat(smtpPortField, \"-error\")\n      }));\n    }\n  })), errors.smtpPort && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: \"\".concat(smtpPortField, \"-error\")\n  }, (_errors$smtpPort2 = errors.smtpPort) === null || _errors$smtpPort2 === void 0 ? void 0 : _errors$smtpPort2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: smtpUsernameField,\n    required: true\n  }, t('Username')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"smtpUsername\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Username')\n      })\n    },\n    render: _ref11 => {\n      var _errors$smtpUsername;\n      let {\n        field\n      } = _ref11;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({\n        id: smtpUsernameField\n      }, field, {\n        error: (_errors$smtpUsername = errors.smtpUsername) === null || _errors$smtpUsername === void 0 ? void 0 : _errors$smtpUsername.message,\n        \"aria-describedby\": \"\".concat(smtpUsernameField, \"-error\"),\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.smtpUsername && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: \"\".concat(smtpUsernameField, \"-error\")\n  }, (_errors$smtpUsername2 = errors.smtpUsername) === null || _errors$smtpUsername2 === void 0 ? void 0 : _errors$smtpUsername2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: smtpPasswordField,\n    required: true\n  }, t('Password')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"smtpPassword\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Password')\n      })\n    },\n    render: _ref12 => {\n      var _errors$smtpPassword;\n      let {\n        field\n      } = _ref12;\n      return /*#__PURE__*/React.createElement(PasswordInput, _extends({\n        id: smtpPasswordField\n      }, field, {\n        error: (_errors$smtpPassword = errors.smtpPassword) === null || _errors$smtpPassword === void 0 ? void 0 : _errors$smtpPassword.message,\n        \"aria-describedby\": \"\".concat(smtpPasswordField, \"-error\"),\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.smtpPassword && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: \"\".concat(smtpPasswordField, \"-error\")\n  }, (_errors$smtpPassword2 = errors.smtpPassword) === null || _errors$smtpPassword2 === void 0 ? void 0 : _errors$smtpPassword2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: smtpSecureField\n  }, t('Connect_SSL_TLS')), /*#__PURE__*/React.createElement(Controller, {\n    control: control,\n    name: \"smtpSecure\",\n    render: _ref13 => {\n      let {\n          field: {\n            value\n          }\n        } = _ref13,\n        field = _objectWithoutProperties(_ref13.field, _excluded);\n      return /*#__PURE__*/React.createElement(ToggleSwitch, _extends({\n        id: smtpSecureField\n      }, field, {\n        checked: value\n      }));\n    }\n  }))))), /*#__PURE__*/React.createElement(Accordion.Item, {\n    defaultExpanded: !(inboxData !== null && inboxData !== void 0 && inboxData._id),\n    title: t('Configure_Incoming_Mail_IMAP')\n  }, /*#__PURE__*/React.createElement(FieldGroup, null, /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: imapServerField,\n    required: true\n  }, t('Server')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"imapServer\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Server')\n      })\n    },\n    render: _ref14 => {\n      var _errors$imapServer;\n      let {\n        field\n      } = _ref14;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({\n        id: imapServerField\n      }, field, {\n        error: (_errors$imapServer = errors.imapServer) === null || _errors$imapServer === void 0 ? void 0 : _errors$imapServer.message,\n        \"aria-describedby\": \"\".concat(imapServerField, \"-error\"),\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.imapServer && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: \"\".concat(imapServerField, \"-error\")\n  }, (_errors$imapServer2 = errors.imapServer) === null || _errors$imapServer2 === void 0 ? void 0 : _errors$imapServer2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: imapPortField,\n    required: true\n  }, t('Port')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"imapPort\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Port')\n      })\n    },\n    render: _ref15 => {\n      var _errors$imapPort;\n      let {\n        field\n      } = _ref15;\n      return /*#__PURE__*/React.createElement(NumberInput, _extends({\n        id: imapPortField\n      }, field, {\n        error: (_errors$imapPort = errors.imapPort) === null || _errors$imapPort === void 0 ? void 0 : _errors$imapPort.message,\n        \"aria-describedby\": \"\".concat(imapPortField, \"-error\"),\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.imapPort && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: \"\".concat(imapPortField, \"-error\")\n  }, (_errors$imapPort2 = errors.imapPort) === null || _errors$imapPort2 === void 0 ? void 0 : _errors$imapPort2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: imapUsernameField,\n    required: true\n  }, t('Username')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"imapUsername\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Username')\n      })\n    },\n    render: _ref16 => {\n      var _errors$imapUsername;\n      let {\n        field\n      } = _ref16;\n      return /*#__PURE__*/React.createElement(TextInput, _extends({\n        id: imapUsernameField\n      }, field, {\n        error: (_errors$imapUsername = errors.imapUsername) === null || _errors$imapUsername === void 0 ? void 0 : _errors$imapUsername.message,\n        \"aria-describedby\": \"\".concat(imapUsernameField, \"-error\"),\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.imapUsername && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: \"\".concat(imapUsernameField, \"-error\")\n  }, (_errors$imapUsername2 = errors.imapUsername) === null || _errors$imapUsername2 === void 0 ? void 0 : _errors$imapUsername2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: imapPasswordField,\n    required: true\n  }, t('Password')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"imapPassword\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Password')\n      })\n    },\n    render: _ref17 => {\n      var _errors$imapPassword;\n      let {\n        field\n      } = _ref17;\n      return /*#__PURE__*/React.createElement(PasswordInput, _extends({\n        id: imapPasswordField\n      }, field, {\n        error: (_errors$imapPassword = errors.imapPassword) === null || _errors$imapPassword === void 0 ? void 0 : _errors$imapPassword.message,\n        \"aria-describedby\": \"\".concat(imapPasswordField, \"-error\"),\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.imapPassword && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: \"\".concat(imapPasswordField, \"-error\")\n  }, (_errors$imapPassword2 = errors.imapPassword) === null || _errors$imapPassword2 === void 0 ? void 0 : _errors$imapPassword2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: imapRetriesField,\n    required: true\n  }, t('Max_Retry')), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Controller, {\n    name: \"imapRetries\",\n    control: control,\n    rules: {\n      required: t('Required_field', {\n        field: t('Max_Retry')\n      })\n    },\n    render: _ref18 => {\n      var _errors$imapRetries;\n      let {\n        field\n      } = _ref18;\n      return /*#__PURE__*/React.createElement(NumberInput, _extends({\n        id: imapRetriesField\n      }, field, {\n        error: (_errors$imapRetries = errors.imapRetries) === null || _errors$imapRetries === void 0 ? void 0 : _errors$imapRetries.message,\n        \"aria-describedby\": \"\".concat(imapRetriesField, \"-error\"),\n        \"aria-required\": true,\n        \"aria-invalid\": Boolean(errors.email)\n      }));\n    }\n  })), errors.imapRetries && /*#__PURE__*/React.createElement(FieldError, {\n    \"aria-live\": \"assertive\",\n    id: \"\".concat(imapRetriesField, \"-error\")\n  }, (_errors$imapRetries2 = errors.imapRetries) === null || _errors$imapRetries2 === void 0 ? void 0 : _errors$imapRetries2.message)), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(FieldLabel, {\n    htmlFor: imapSecureField\n  }, t('Connect_SSL_TLS')), /*#__PURE__*/React.createElement(Controller, {\n    control: control,\n    name: \"imapSecure\",\n    render: _ref19 => {\n      let {\n          field: {\n            value\n          }\n        } = _ref19,\n        field = _objectWithoutProperties(_ref19.field, _excluded2);\n      return /*#__PURE__*/React.createElement(ToggleSwitch, _extends({\n        id: imapSecureField\n      }, field, {\n        checked: value\n      }));\n    }\n  }))))), /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(ButtonGroup, {\n    stretch: true\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBack\n  }, t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n    disabled: !isDirty,\n    primary: true,\n    onClick: handleSubmit(handleSave)\n  }, t('Save')))), /*#__PURE__*/React.createElement(FieldRow, null, /*#__PURE__*/React.createElement(Margins, {\n    blockStart: 16\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    stretch: true\n  }, (inboxData === null || inboxData === void 0 ? void 0 : inboxData._id) && /*#__PURE__*/React.createElement(Button, {\n    danger: true,\n    onClick: handleDelete\n  }, t('Delete')))))))));\n};\nmodule.exportDefault(EmailInboxForm);","map":{"version":3,"names":["_objectWithoutProperties","module","link","default","v","_extends","_objectSpread","Accordion","Button","ButtonGroup","TextInput","TextAreaInput","Field","ToggleSwitch","FieldGroup","Box","Margins","NumberInput","PasswordInput","FieldLabel","FieldRow","FieldError","FieldHint","useMutableCallback","useUniqueId","useSetModal","useToastMessageDispatch","useRoute","useEndpoint","useTranslation","React","useCallback","useForm","Controller","validateEmail","AutoCompleteDepartment","GenericModal","PageScrollableContentWithShadow","EmailInboxForm","_ref","_inboxData$_id","_inboxData$active","_inboxData$smtp$port","_inboxData$smtp$secur","_inboxData$imap$port","_inboxData$imap$secur","_inboxData$imap$maxRe","_errors$name2","_errors$email2","_errors$smtpServer2","_errors$smtpPort2","_errors$smtpUsername2","_errors$smtpPassword2","_errors$imapServer2","_errors$imapPort2","_errors$imapUsername2","_errors$imapPassword2","_errors$imapRetries2","inboxData","t","dispatchToastMessage","setModal","router","handleBack","push","saveEmailInbox","deleteInboxAction","_id","emailAlreadyExistsAction","control","handleSubmit","formState","errors","isDirty","defaultValues","active","name","email","description","senderInfo","department","smtpServer","smtp","server","smtpPort","port","smtpUsername","username","smtpPassword","password","smtpSecure","secure","imapServer","imap","imapPort","imapUsername","imapPassword","imapSecure","imapRetries","maxRetries","mode","handleDelete","deleteInbox","type","message","error","createElement","variant","onConfirm","onCancel","confirmText","handleSave","_ref2","parseInt","payload","value","checkEmailExists","emailInbox","activeField","nameField","emailField","descriptionField","senderInfoField","departmentField","smtpServerField","smtpPortField","smtpUsernameField","smtpPasswordField","smtpSecureField","imapServerField","imapPortField","imapUsernameField","imapPasswordField","imapRetriesField","imapSecureField","maxWidth","w","alignSelf","Item","defaultExpanded","title","htmlFor","render","_ref3","field","onChange","ref","id","checked","required","rules","_ref4","_errors$name","Boolean","concat","validate","_ref5","_errors$email","_ref6","rows","_ref7","_ref8","onBlur","_ref9","_errors$smtpServer","_ref10","_errors$smtpPort","_ref11","_errors$smtpUsername","_ref12","_errors$smtpPassword","_ref13","_excluded","_ref14","_errors$imapServer","_ref15","_errors$imapPort","_ref16","_errors$imapUsername","_ref17","_errors$imapPassword","_ref18","_errors$imapRetries","_ref19","_excluded2","stretch","onClick","disabled","primary","blockStart","danger","exportDefault"],"sources":["client/views/admin/emailInbox/EmailInboxForm.tsx"],"sourcesContent":["import type { IEmailInboxPayload } from '@rocket.chat/core-typings';\nimport {\n\tAccordion,\n\tButton,\n\tButtonGroup,\n\tTextInput,\n\tTextAreaInput,\n\tField,\n\tToggleSwitch,\n\tFieldGroup,\n\tBox,\n\tMargins,\n\tNumberInput,\n\tPasswordInput,\n\tFieldLabel,\n\tFieldRow,\n\tFieldError,\n\tFieldHint,\n} from '@rocket.chat/fuselage';\nimport { useMutableCallback, useUniqueId } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useRoute, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useCallback } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport AutoCompleteDepartment from '../../../components/AutoCompleteDepartment';\nimport GenericModal from '../../../components/GenericModal';\nimport { PageScrollableContentWithShadow } from '../../../components/Page';\n\nconst EmailInboxForm = ({ inboxData }: { inboxData?: IEmailInboxPayload }): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst setModal = useSetModal();\n\tconst router = useRoute('admin-email-inboxes');\n\n\tconst handleBack = useCallback(() => router.push({}), [router]);\n\n\tconst saveEmailInbox = useEndpoint('POST', '/v1/email-inbox');\n\tconst deleteInboxAction = useEndpoint('DELETE', '/v1/email-inbox/:_id', { _id: inboxData?._id ?? '' });\n\tconst emailAlreadyExistsAction = useEndpoint('GET', '/v1/email-inbox.search');\n\n\tconst {\n\t\tcontrol,\n\t\thandleSubmit,\n\t\tformState: { errors, isDirty },\n\t} = useForm({\n\t\tdefaultValues: {\n\t\t\tactive: inboxData?.active ?? true,\n\t\t\tname: inboxData?.name,\n\t\t\temail: inboxData?.email,\n\t\t\tdescription: inboxData?.description,\n\t\t\tsenderInfo: inboxData?.senderInfo,\n\t\t\tdepartment: inboxData?.department || '',\n\t\t\t// SMTP\n\t\t\tsmtpServer: inboxData?.smtp.server,\n\t\t\tsmtpPort: inboxData?.smtp.port ?? 587,\n\t\t\tsmtpUsername: inboxData?.smtp.username,\n\t\t\tsmtpPassword: inboxData?.smtp.password,\n\t\t\tsmtpSecure: inboxData?.smtp.secure ?? false,\n\t\t\t// IMAP\n\t\t\timapServer: inboxData?.imap.server,\n\t\t\timapPort: inboxData?.imap.port ?? 993,\n\t\t\timapUsername: inboxData?.imap.username,\n\t\t\timapPassword: inboxData?.imap.password,\n\t\t\timapSecure: inboxData?.imap.secure ?? false,\n\t\t\timapRetries: inboxData?.imap.maxRetries ?? 10,\n\t\t},\n\t\tmode: 'all',\n\t});\n\n\tconst handleDelete = useMutableCallback(() => {\n\t\tconst deleteInbox = async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait deleteInboxAction();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_removed') });\n\t\t\t\thandleBack();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetModal(null);\n\t\t\t}\n\t\t};\n\n\t\tsetModal(\n\t\t\t<GenericModal variant='danger' onConfirm={deleteInbox} onCancel={(): void => setModal(null)} confirmText={t('Delete')}>\n\t\t\t\t{t('You_will_not_be_able_to_recover_email_inbox')}\n\t\t\t</GenericModal>,\n\t\t);\n\t});\n\n\tconst handleSave = useMutableCallback(\n\t\tasync ({\n\t\t\tactive,\n\t\t\tname,\n\t\t\temail,\n\t\t\tdescription,\n\t\t\tsenderInfo,\n\t\t\tdepartment,\n\t\t\tsmtpServer,\n\t\t\tsmtpPort,\n\t\t\tsmtpUsername,\n\t\t\tsmtpPassword,\n\t\t\tsmtpSecure,\n\t\t\timapServer,\n\t\t\timapPort,\n\t\t\timapUsername,\n\t\t\timapPassword,\n\t\t\timapSecure,\n\t\t\timapRetries,\n\t\t}) => {\n\t\t\tconst smtp = {\n\t\t\t\tserver: smtpServer,\n\t\t\t\tport: parseInt(smtpPort),\n\t\t\t\tusername: smtpUsername,\n\t\t\t\tpassword: smtpPassword,\n\t\t\t\tsecure: smtpSecure,\n\t\t\t};\n\n\t\t\tconst imap = {\n\t\t\t\tserver: imapServer,\n\t\t\t\tport: parseInt(imapPort),\n\t\t\t\tusername: imapUsername,\n\t\t\t\tpassword: imapPassword,\n\t\t\t\tsecure: imapSecure,\n\t\t\t\tmaxRetries: parseInt(imapRetries),\n\t\t\t};\n\n\t\t\tconst payload = {\n\t\t\t\t...(inboxData?._id && { _id: inboxData?._id }),\n\t\t\t\tactive,\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tdescription,\n\t\t\t\tsenderInfo,\n\t\t\t\t...(department && { department: typeof department === 'string' ? department : department.value }),\n\t\t\t\tsmtp,\n\t\t\t\timap,\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tawait saveEmailInbox(payload);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Email_Inbox_has_been_added') });\n\t\t\t\thandleBack();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t);\n\n\tconst checkEmailExists = useMutableCallback(async (email) => {\n\t\tif (!email) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!validateEmail(email)) {\n\t\t\treturn t('error-invalid-email-address');\n\t\t}\n\n\t\tconst { emailInbox } = await emailAlreadyExistsAction({ email });\n\n\t\tif (!emailInbox || (inboxData?._id && emailInbox._id === inboxData?._id)) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn t('Email_already_exists');\n\t});\n\n\tconst activeField = useUniqueId();\n\tconst nameField = useUniqueId();\n\tconst emailField = useUniqueId();\n\tconst descriptionField = useUniqueId();\n\tconst senderInfoField = useUniqueId();\n\tconst departmentField = useUniqueId();\n\n\tconst smtpServerField = useUniqueId();\n\tconst smtpPortField = useUniqueId();\n\tconst smtpUsernameField = useUniqueId();\n\tconst smtpPasswordField = useUniqueId();\n\tconst smtpSecureField = useUniqueId();\n\n\tconst imapServerField = useUniqueId();\n\tconst imapPortField = useUniqueId();\n\tconst imapUsernameField = useUniqueId();\n\tconst imapPasswordField = useUniqueId();\n\tconst imapRetriesField = useUniqueId();\n\tconst imapSecureField = useUniqueId();\n\n\treturn (\n\t\t<PageScrollableContentWithShadow>\n\t\t\t<Box maxWidth='x600' w='full' alignSelf='center'>\n\t\t\t\t<Accordion>\n\t\t\t\t\t<Accordion.Item defaultExpanded title={t('Inbox_Info')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={activeField}>{t('Active')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='active'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { onChange, value, ref } }): ReactElement => (\n\t\t\t\t\t\t\t\t\t\t\t<ToggleSwitch id={activeField} ref={ref} checked={value} onChange={onChange} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={nameField} required>\n\t\t\t\t\t\t\t\t\t{t('Name')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Name') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={nameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.name?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${nameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.name && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${nameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.name?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={emailField} required>\n\t\t\t\t\t\t\t\t\t{t('Email')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\t\t\trequired: t('Required_field', { field: t('Email') }),\n\t\t\t\t\t\t\t\t\t\t\tvalidate: (value) => checkEmailExists(value),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\tid={emailField}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.email?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${emailField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.email && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${emailField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.email?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={descriptionField}>{t('Description')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => <TextAreaInput id={descriptionField} {...field} rows={4} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={senderInfoField}>{t('Sender_Info')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='senderInfo'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => <TextInput id={senderInfoField} {...field} aria-describedby={`${senderInfoField}-hint`} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t<FieldHint id={`${senderInfoField}-hint`}>{t('Will_Appear_In_From')}</FieldHint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={departmentField}>{t('Department')}</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='department'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { onChange, onBlur, name, value } }) => (\n\t\t\t\t\t\t\t\t\t\t\t<AutoCompleteDepartment\n\t\t\t\t\t\t\t\t\t\t\t\tid={departmentField}\n\t\t\t\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${departmentField}-hint`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t<FieldHint id={`${departmentField}-hint`}>{t('Only_Members_Selected_Department_Can_View_Channel')}</FieldHint>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Outgoing_Mail_SMTP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpServerField} required>\n\t\t\t\t\t\t\t\t\t{t('Server')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpServer'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Server') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpServerField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpServer?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpServerField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpServer && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpServerField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpServer?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpPortField} required>\n\t\t\t\t\t\t\t\t\t{t('Port')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpPort'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Port') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpPortField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpPort?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpPortField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpPort && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpPortField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpPort?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpUsernameField} required>\n\t\t\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpUsername'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Username') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpUsernameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpUsername?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpUsernameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpUsername && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpUsernameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpUsername?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpPasswordField} required>\n\t\t\t\t\t\t\t\t\t{t('Password')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='smtpPassword'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Password') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={smtpPasswordField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.smtpPassword?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${smtpPasswordField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.smtpPassword && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${smtpPasswordField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.smtpPassword?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={smtpSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='smtpSecure'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { value, ...field } }) => <ToggleSwitch id={smtpSecureField} {...field} checked={value} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Accordion.Item defaultExpanded={!inboxData?._id} title={t('Configure_Incoming_Mail_IMAP')}>\n\t\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapServerField} required>\n\t\t\t\t\t\t\t\t\t{t('Server')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapServer'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Server') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapServerField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapServer?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapServerField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapServer && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapServerField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapServer?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapPortField} required>\n\t\t\t\t\t\t\t\t\t{t('Port')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapPort'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Port') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapPortField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapPort?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapPortField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapPort && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapPortField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapPort?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapUsernameField} required>\n\t\t\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapUsername'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Username') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapUsernameField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapUsername?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapUsernameField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapUsername && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapUsernameField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapUsername?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapPasswordField} required>\n\t\t\t\t\t\t\t\t\t{t('Password')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapPassword'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Password') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapPasswordField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapPassword?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapPasswordField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapPassword && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapPasswordField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapPassword?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapRetriesField} required>\n\t\t\t\t\t\t\t\t\t{t('Max_Retry')}\n\t\t\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tname='imapRetries'\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\trules={{ required: t('Required_field', { field: t('Max_Retry') }) }}\n\t\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\t\t\t\tid={imapRetriesField}\n\t\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\t\terror={errors.imapRetries?.message}\n\t\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${imapRetriesField}-error`}\n\t\t\t\t\t\t\t\t\t\t\t\taria-required={true}\n\t\t\t\t\t\t\t\t\t\t\t\taria-invalid={Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t\t{errors.imapRetries && (\n\t\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${imapRetriesField}-error`}>\n\t\t\t\t\t\t\t\t\t\t{errors.imapRetries?.message}\n\t\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t\t<FieldLabel htmlFor={imapSecureField}>{t('Connect_SSL_TLS')}</FieldLabel>\n\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\tname='imapSecure'\n\t\t\t\t\t\t\t\t\t\trender={({ field: { value, ...field } }) => <ToggleSwitch id={imapSecureField} {...field} checked={value} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t</FieldGroup>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t\t\t\t<Button onClick={handleBack}>{t('Cancel')}</Button>\n\t\t\t\t\t\t\t\t<Button disabled={!isDirty} primary onClick={handleSubmit(handleSave)}>\n\t\t\t\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Margins blockStart={16}>\n\t\t\t\t\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t\t\t\t\t{inboxData?._id && (\n\t\t\t\t\t\t\t\t\t\t<Button danger onClick={handleDelete}>\n\t\t\t\t\t\t\t\t\t\t\t{t('Delete')}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t</Margins>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t</Field>\n\t\t\t\t</Accordion>\n\t\t\t</Box>\n\t\t</PageScrollableContentWithShadow>\n\t);\n};\n\nexport default EmailInboxForm;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"22bdb3763e8d1c62cc1b1d12b998e9193b6f5465"}
