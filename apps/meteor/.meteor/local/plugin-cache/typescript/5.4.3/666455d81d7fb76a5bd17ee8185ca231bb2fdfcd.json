{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/integrations.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/integrations.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/integrations.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/integrations.ts","sourceRoot":"","sources":["app/api/server/v1/integrations.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IIntegration, INewIncomingIntegration, INewOutgoingIntegration } from '@rocket.chat/core-typings';\nimport { Integrations, IntegrationHistory } from '@rocket.chat/models';\nimport {\n\tisIntegrationsCreateProps,\n\tisIntegrationsHistoryProps,\n\tisIntegrationsRemoveProps,\n\tisIntegrationsGetProps,\n\tisIntegrationsUpdateProps,\n\tisIntegrationsListProps,\n} from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter } from 'mongodb';\n\nimport {\n\tmountIntegrationHistoryQueryBasedOnPermissions,\n\tmountIntegrationQueryBasedOnPermissions,\n} from '../../../integrations/server/lib/mountQueriesBasedOnPermission';\nimport { addIncomingIntegration } from '../../../integrations/server/methods/incoming/addIncomingIntegration';\nimport { deleteIncomingIntegration } from '../../../integrations/server/methods/incoming/deleteIncomingIntegration';\nimport { addOutgoingIntegration } from '../../../integrations/server/methods/outgoing/addOutgoingIntegration';\nimport { deleteOutgoingIntegration } from '../../../integrations/server/methods/outgoing/deleteOutgoingIntegration';\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\nimport { findOneIntegration } from '../lib/integrations';\n\nAPI.v1.addRoute(\n\t'integrations.create',\n\t{ authRequired: true, validateParams: isIntegrationsCreateProps },\n\t{\n\t\tasync post() {\n\t\t\tswitch (this.bodyParams.type) {\n\t\t\t\tcase 'webhook-outgoing':\n\t\t\t\t\treturn API.v1.success({ integration: await addOutgoingIntegration(this.userId, this.bodyParams as INewOutgoingIntegration) });\n\t\t\t\tcase 'webhook-incoming':\n\t\t\t\t\treturn API.v1.success({ integration: await addIncomingIntegration(this.userId, this.bodyParams as INewIncomingIntegration) });\n\t\t\t}\n\n\t\t\treturn API.v1.failure('Invalid integration type.');\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.history',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isIntegrationsHistoryProps,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['manage-outgoing-integrations', 'manage-own-outgoing-integrations'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { userId, queryParams } = this;\n\n\t\t\tif (!queryParams.id || queryParams.id.trim() === '') {\n\t\t\t\treturn API.v1.failure('Invalid integration id.');\n\t\t\t}\n\n\t\t\tconst { id } = queryParams;\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields: projection, query } = await this.parseJsonQuery();\n\t\t\tconst ourQuery = Object.assign(await mountIntegrationHistoryQueryBasedOnPermissions(userId, id), query);\n\n\t\t\tconst { cursor, totalCount } = IntegrationHistory.findPaginated(ourQuery, {\n\t\t\t\tsort: sort || { _updatedAt: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tprojection,\n\t\t\t});\n\n\t\t\tconst [history, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\thistory,\n\t\t\t\toffset,\n\t\t\t\titems: history.length,\n\t\t\t\tcount: history.length,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.list',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isIntegrationsListProps,\n\t\tpermissionsRequired: {\n\t\t\tGET: {\n\t\t\t\tpermissions: [\n\t\t\t\t\t'manage-outgoing-integrations',\n\t\t\t\t\t'manage-own-outgoing-integrations',\n\t\t\t\t\t'manage-incoming-integrations',\n\t\t\t\t\t'manage-own-incoming-integrations',\n\t\t\t\t],\n\t\t\t\toperation: 'hasAny',\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields, query } = await this.parseJsonQuery();\n\t\t\tconst { name, type } = this.queryParams;\n\n\t\t\tconst filter = {\n\t\t\t\t...query,\n\t\t\t\t...(name ? { name: { $regex: escapeRegExp(name as string), $options: 'i' } } : {}),\n\t\t\t\t...(type ? { type } : {}),\n\t\t\t};\n\n\t\t\tconst ourQuery = Object.assign(await mountIntegrationQueryBasedOnPermissions(this.userId), filter) as Filter<IIntegration>;\n\n\t\t\tconst { cursor, totalCount } = Integrations.findPaginated(ourQuery, {\n\t\t\t\tsort: sort || { ts: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tprojection: fields,\n\t\t\t});\n\n\t\t\tconst [integrations, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tintegrations,\n\t\t\t\toffset,\n\t\t\t\titems: integrations.length,\n\t\t\t\tcount: integrations.length,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.remove',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isIntegrationsRemoveProps,\n\t\tpermissionsRequired: {\n\t\t\tPOST: {\n\t\t\t\tpermissions: [\n\t\t\t\t\t'manage-outgoing-integrations',\n\t\t\t\t\t'manage-own-outgoing-integrations',\n\t\t\t\t\t'manage-incoming-integrations',\n\t\t\t\t\t'manage-own-incoming-integrations',\n\t\t\t\t],\n\t\t\t\toperation: 'hasAny',\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\n\t\t\tlet integration: IIntegration | null = null;\n\t\t\tswitch (bodyParams.type) {\n\t\t\t\tcase 'webhook-outgoing':\n\t\t\t\t\tif (!bodyParams.target_url && !bodyParams.integrationId) {\n\t\t\t\t\t\treturn API.v1.failure('An integrationId or target_url needs to be provided.');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bodyParams.target_url) {\n\t\t\t\t\t\tintegration = await Integrations.findOne({ urls: bodyParams.target_url });\n\t\t\t\t\t} else if (bodyParams.integrationId) {\n\t\t\t\t\t\tintegration = await Integrations.findOne({ _id: bodyParams.integrationId });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!integration) {\n\t\t\t\t\t\treturn API.v1.failure('No integration found.');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst outgoingId = integration._id;\n\n\t\t\t\t\tawait deleteOutgoingIntegration(outgoingId, this.userId);\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tintegration,\n\t\t\t\t\t});\n\t\t\t\tcase 'webhook-incoming':\n\t\t\t\t\tcheck(\n\t\t\t\t\t\tbodyParams,\n\t\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\t\tintegrationId: String,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\tintegration = await Integrations.findOne({ _id: bodyParams.integrationId });\n\n\t\t\t\t\tif (!integration) {\n\t\t\t\t\t\treturn API.v1.failure('No integration found.');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst incomingId = integration._id;\n\t\t\t\t\tawait deleteIncomingIntegration(incomingId, this.userId);\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tintegration,\n\t\t\t\t\t});\n\t\t\t\tdefault:\n\t\t\t\t\treturn API.v1.failure('Invalid integration type.');\n\t\t\t}\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.get',\n\t{ authRequired: true, validateParams: isIntegrationsGetProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { integrationId, createdBy } = this.queryParams;\n\t\t\tif (!integrationId) {\n\t\t\t\treturn API.v1.failure('The query parameter \"integrationId\" is required.');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tintegration: await findOneIntegration({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\tintegrationId,\n\t\t\t\t\tcreatedBy,\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.update',\n\t{ authRequired: true, validateParams: isIntegrationsUpdateProps },\n\t{\n\t\tasync put() {\n\t\t\tconst { bodyParams } = this;\n\n\t\t\tlet integration;\n\t\t\tswitch (bodyParams.type) {\n\t\t\t\tcase 'webhook-outgoing':\n\t\t\t\t\tif (bodyParams.target_url) {\n\t\t\t\t\t\tintegration = await Integrations.findOne({ urls: bodyParams.target_url });\n\t\t\t\t\t} else if (bodyParams.integrationId) {\n\t\t\t\t\t\tintegration = await Integrations.findOne({ _id: bodyParams.integrationId });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!integration) {\n\t\t\t\t\t\treturn API.v1.failure('No integration found.');\n\t\t\t\t\t}\n\n\t\t\t\t\tawait Meteor.callAsync('updateOutgoingIntegration', integration._id, bodyParams);\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tintegration: await Integrations.findOne({ _id: integration._id }),\n\t\t\t\t\t});\n\t\t\t\tcase 'webhook-incoming':\n\t\t\t\t\tintegration = await Integrations.findOne({ _id: bodyParams.integrationId });\n\n\t\t\t\t\tif (!integration) {\n\t\t\t\t\t\treturn API.v1.failure('No integration found.');\n\t\t\t\t\t}\n\n\t\t\t\t\tawait Meteor.callAsync('updateIncomingIntegration', integration._id, bodyParams);\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tintegration: await Integrations.findOne({ _id: integration._id }),\n\t\t\t\t\t});\n\t\t\t\tdefault:\n\t\t\t\t\treturn API.v1.failure('Invalid integration type.');\n\t\t\t}\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/integrations.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/integrations.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/integrations.ts","sourceRoot":"","sources":["app/api/server/v1/integrations.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IIntegration, INewIncomingIntegration, INewOutgoingIntegration } from '@rocket.chat/core-typings';\nimport { Integrations, IntegrationHistory } from '@rocket.chat/models';\nimport {\n\tisIntegrationsCreateProps,\n\tisIntegrationsHistoryProps,\n\tisIntegrationsRemoveProps,\n\tisIntegrationsGetProps,\n\tisIntegrationsUpdateProps,\n\tisIntegrationsListProps,\n} from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter } from 'mongodb';\n\nimport {\n\tmountIntegrationHistoryQueryBasedOnPermissions,\n\tmountIntegrationQueryBasedOnPermissions,\n} from '../../../integrations/server/lib/mountQueriesBasedOnPermission';\nimport { addIncomingIntegration } from '../../../integrations/server/methods/incoming/addIncomingIntegration';\nimport { deleteIncomingIntegration } from '../../../integrations/server/methods/incoming/deleteIncomingIntegration';\nimport { addOutgoingIntegration } from '../../../integrations/server/methods/outgoing/addOutgoingIntegration';\nimport { deleteOutgoingIntegration } from '../../../integrations/server/methods/outgoing/deleteOutgoingIntegration';\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\nimport { findOneIntegration } from '../lib/integrations';\n\nAPI.v1.addRoute(\n\t'integrations.create',\n\t{ authRequired: true, validateParams: isIntegrationsCreateProps },\n\t{\n\t\tasync post() {\n\t\t\tswitch (this.bodyParams.type) {\n\t\t\t\tcase 'webhook-outgoing':\n\t\t\t\t\treturn API.v1.success({ integration: await addOutgoingIntegration(this.userId, this.bodyParams as INewOutgoingIntegration) });\n\t\t\t\tcase 'webhook-incoming':\n\t\t\t\t\treturn API.v1.success({ integration: await addIncomingIntegration(this.userId, this.bodyParams as INewIncomingIntegration) });\n\t\t\t}\n\n\t\t\treturn API.v1.failure('Invalid integration type.');\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.history',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isIntegrationsHistoryProps,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['manage-outgoing-integrations', 'manage-own-outgoing-integrations'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { userId, queryParams } = this;\n\n\t\t\tif (!queryParams.id || queryParams.id.trim() === '') {\n\t\t\t\treturn API.v1.failure('Invalid integration id.');\n\t\t\t}\n\n\t\t\tconst { id } = queryParams;\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields: projection, query } = await this.parseJsonQuery();\n\t\t\tconst ourQuery = Object.assign(await mountIntegrationHistoryQueryBasedOnPermissions(userId, id), query);\n\n\t\t\tconst { cursor, totalCount } = IntegrationHistory.findPaginated(ourQuery, {\n\t\t\t\tsort: sort || { _updatedAt: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tprojection,\n\t\t\t});\n\n\t\t\tconst [history, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\thistory,\n\t\t\t\toffset,\n\t\t\t\titems: history.length,\n\t\t\t\tcount: history.length,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.list',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isIntegrationsListProps,\n\t\tpermissionsRequired: {\n\t\t\tGET: {\n\t\t\t\tpermissions: [\n\t\t\t\t\t'manage-outgoing-integrations',\n\t\t\t\t\t'manage-own-outgoing-integrations',\n\t\t\t\t\t'manage-incoming-integrations',\n\t\t\t\t\t'manage-own-incoming-integrations',\n\t\t\t\t],\n\t\t\t\toperation: 'hasAny',\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields, query } = await this.parseJsonQuery();\n\t\t\tconst { name, type } = this.queryParams;\n\n\t\t\tconst filter = {\n\t\t\t\t...query,\n\t\t\t\t...(name ? { name: { $regex: escapeRegExp(name as string), $options: 'i' } } : {}),\n\t\t\t\t...(type ? { type } : {}),\n\t\t\t};\n\n\t\t\tconst ourQuery = Object.assign(await mountIntegrationQueryBasedOnPermissions(this.userId), filter) as Filter<IIntegration>;\n\n\t\t\tconst { cursor, totalCount } = Integrations.findPaginated(ourQuery, {\n\t\t\t\tsort: sort || { ts: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tprojection: fields,\n\t\t\t});\n\n\t\t\tconst [integrations, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tintegrations,\n\t\t\t\toffset,\n\t\t\t\titems: integrations.length,\n\t\t\t\tcount: integrations.length,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.remove',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isIntegrationsRemoveProps,\n\t\tpermissionsRequired: {\n\t\t\tPOST: {\n\t\t\t\tpermissions: [\n\t\t\t\t\t'manage-outgoing-integrations',\n\t\t\t\t\t'manage-own-outgoing-integrations',\n\t\t\t\t\t'manage-incoming-integrations',\n\t\t\t\t\t'manage-own-incoming-integrations',\n\t\t\t\t],\n\t\t\t\toperation: 'hasAny',\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\n\t\t\tlet integration: IIntegration | null = null;\n\t\t\tswitch (bodyParams.type) {\n\t\t\t\tcase 'webhook-outgoing':\n\t\t\t\t\tif (!bodyParams.target_url && !bodyParams.integrationId) {\n\t\t\t\t\t\treturn API.v1.failure('An integrationId or target_url needs to be provided.');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bodyParams.target_url) {\n\t\t\t\t\t\tintegration = await Integrations.findOne({ urls: bodyParams.target_url });\n\t\t\t\t\t} else if (bodyParams.integrationId) {\n\t\t\t\t\t\tintegration = await Integrations.findOne({ _id: bodyParams.integrationId });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!integration) {\n\t\t\t\t\t\treturn API.v1.failure('No integration found.');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst outgoingId = integration._id;\n\n\t\t\t\t\tawait deleteOutgoingIntegration(outgoingId, this.userId);\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tintegration,\n\t\t\t\t\t});\n\t\t\t\tcase 'webhook-incoming':\n\t\t\t\t\tcheck(\n\t\t\t\t\t\tbodyParams,\n\t\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\t\tintegrationId: String,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\tintegration = await Integrations.findOne({ _id: bodyParams.integrationId });\n\n\t\t\t\t\tif (!integration) {\n\t\t\t\t\t\treturn API.v1.failure('No integration found.');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst incomingId = integration._id;\n\t\t\t\t\tawait deleteIncomingIntegration(incomingId, this.userId);\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tintegration,\n\t\t\t\t\t});\n\t\t\t\tdefault:\n\t\t\t\t\treturn API.v1.failure('Invalid integration type.');\n\t\t\t}\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.get',\n\t{ authRequired: true, validateParams: isIntegrationsGetProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { integrationId, createdBy } = this.queryParams;\n\t\t\tif (!integrationId) {\n\t\t\t\treturn API.v1.failure('The query parameter \"integrationId\" is required.');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tintegration: await findOneIntegration({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\tintegrationId,\n\t\t\t\t\tcreatedBy,\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.update',\n\t{ authRequired: true, validateParams: isIntegrationsUpdateProps },\n\t{\n\t\tasync put() {\n\t\t\tconst { bodyParams } = this;\n\n\t\t\tlet integration;\n\t\t\tswitch (bodyParams.type) {\n\t\t\t\tcase 'webhook-outgoing':\n\t\t\t\t\tif (bodyParams.target_url) {\n\t\t\t\t\t\tintegration = await Integrations.findOne({ urls: bodyParams.target_url });\n\t\t\t\t\t} else if (bodyParams.integrationId) {\n\t\t\t\t\t\tintegration = await Integrations.findOne({ _id: bodyParams.integrationId });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!integration) {\n\t\t\t\t\t\treturn API.v1.failure('No integration found.');\n\t\t\t\t\t}\n\n\t\t\t\t\tawait Meteor.callAsync('updateOutgoingIntegration', integration._id, bodyParams);\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tintegration: await Integrations.findOne({ _id: integration._id }),\n\t\t\t\t\t});\n\t\t\t\tcase 'webhook-incoming':\n\t\t\t\t\tintegration = await Integrations.findOne({ _id: bodyParams.integrationId });\n\n\t\t\t\t\tif (!integration) {\n\t\t\t\t\t\treturn API.v1.failure('No integration found.');\n\t\t\t\t\t}\n\n\t\t\t\t\tawait Meteor.callAsync('updateIncomingIntegration', integration._id, bodyParams);\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tintegration: await Integrations.findOne({ _id: integration._id }),\n\t\t\t\t\t});\n\t\t\t\tdefault:\n\t\t\t\t\treturn API.v1.failure('Invalid integration type.');\n\t\t\t}\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let Integrations, IntegrationHistory;\n    module.link(\"@rocket.chat/models\", {\n      Integrations(v) {\n        Integrations = v;\n      },\n      IntegrationHistory(v) {\n        IntegrationHistory = v;\n      }\n    }, 0);\n    let isIntegrationsCreateProps, isIntegrationsHistoryProps, isIntegrationsRemoveProps, isIntegrationsGetProps, isIntegrationsUpdateProps, isIntegrationsListProps;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isIntegrationsCreateProps(v) {\n        isIntegrationsCreateProps = v;\n      },\n      isIntegrationsHistoryProps(v) {\n        isIntegrationsHistoryProps = v;\n      },\n      isIntegrationsRemoveProps(v) {\n        isIntegrationsRemoveProps = v;\n      },\n      isIntegrationsGetProps(v) {\n        isIntegrationsGetProps = v;\n      },\n      isIntegrationsUpdateProps(v) {\n        isIntegrationsUpdateProps = v;\n      },\n      isIntegrationsListProps(v) {\n        isIntegrationsListProps = v;\n      }\n    }, 1);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 2);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let mountIntegrationHistoryQueryBasedOnPermissions, mountIntegrationQueryBasedOnPermissions;\n    module.link(\"../../../integrations/server/lib/mountQueriesBasedOnPermission\", {\n      mountIntegrationHistoryQueryBasedOnPermissions(v) {\n        mountIntegrationHistoryQueryBasedOnPermissions = v;\n      },\n      mountIntegrationQueryBasedOnPermissions(v) {\n        mountIntegrationQueryBasedOnPermissions = v;\n      }\n    }, 5);\n    let addIncomingIntegration;\n    module.link(\"../../../integrations/server/methods/incoming/addIncomingIntegration\", {\n      addIncomingIntegration(v) {\n        addIncomingIntegration = v;\n      }\n    }, 6);\n    let deleteIncomingIntegration;\n    module.link(\"../../../integrations/server/methods/incoming/deleteIncomingIntegration\", {\n      deleteIncomingIntegration(v) {\n        deleteIncomingIntegration = v;\n      }\n    }, 7);\n    let addOutgoingIntegration;\n    module.link(\"../../../integrations/server/methods/outgoing/addOutgoingIntegration\", {\n      addOutgoingIntegration(v) {\n        addOutgoingIntegration = v;\n      }\n    }, 8);\n    let deleteOutgoingIntegration;\n    module.link(\"../../../integrations/server/methods/outgoing/deleteOutgoingIntegration\", {\n      deleteOutgoingIntegration(v) {\n        deleteOutgoingIntegration = v;\n      }\n    }, 9);\n    let API;\n    module.link(\"../api\", {\n      API(v) {\n        API = v;\n      }\n    }, 10);\n    let getPaginationItems;\n    module.link(\"../helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 11);\n    let findOneIntegration;\n    module.link(\"../lib/integrations\", {\n      findOneIntegration(v) {\n        findOneIntegration = v;\n      }\n    }, 12);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('integrations.create', {\n      authRequired: true,\n      validateParams: isIntegrationsCreateProps\n    }, {\n      async post() {\n        switch (this.bodyParams.type) {\n          case 'webhook-outgoing':\n            return API.v1.success({\n              integration: await addOutgoingIntegration(this.userId, this.bodyParams)\n            });\n          case 'webhook-incoming':\n            return API.v1.success({\n              integration: await addIncomingIntegration(this.userId, this.bodyParams)\n            });\n        }\n        return API.v1.failure('Invalid integration type.');\n      }\n    });\n    API.v1.addRoute('integrations.history', {\n      authRequired: true,\n      validateParams: isIntegrationsHistoryProps,\n      permissionsRequired: {\n        GET: {\n          permissions: ['manage-outgoing-integrations', 'manage-own-outgoing-integrations'],\n          operation: 'hasAny'\n        }\n      }\n    }, {\n      async get() {\n        const {\n          userId,\n          queryParams\n        } = this;\n        if (!queryParams.id || queryParams.id.trim() === '') {\n          return API.v1.failure('Invalid integration id.');\n        }\n        const {\n          id\n        } = queryParams;\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort,\n          fields: projection,\n          query\n        } = await this.parseJsonQuery();\n        const ourQuery = Object.assign(await mountIntegrationHistoryQueryBasedOnPermissions(userId, id), query);\n        const {\n          cursor,\n          totalCount\n        } = IntegrationHistory.findPaginated(ourQuery, {\n          sort: sort || {\n            _updatedAt: -1\n          },\n          skip: offset,\n          limit: count,\n          projection\n        });\n        const [history, total] = await Promise.all([cursor.toArray(), totalCount]);\n        return API.v1.success({\n          history,\n          offset,\n          items: history.length,\n          count: history.length,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('integrations.list', {\n      authRequired: true,\n      validateParams: isIntegrationsListProps,\n      permissionsRequired: {\n        GET: {\n          permissions: ['manage-outgoing-integrations', 'manage-own-outgoing-integrations', 'manage-incoming-integrations', 'manage-own-incoming-integrations'],\n          operation: 'hasAny'\n        }\n      }\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort,\n          fields,\n          query\n        } = await this.parseJsonQuery();\n        const {\n          name,\n          type\n        } = this.queryParams;\n        const filter = _objectSpread(_objectSpread(_objectSpread({}, query), name ? {\n          name: {\n            $regex: escapeRegExp(name),\n            $options: 'i'\n          }\n        } : {}), type ? {\n          type\n        } : {});\n        const ourQuery = Object.assign(await mountIntegrationQueryBasedOnPermissions(this.userId), filter);\n        const {\n          cursor,\n          totalCount\n        } = Integrations.findPaginated(ourQuery, {\n          sort: sort || {\n            ts: -1\n          },\n          skip: offset,\n          limit: count,\n          projection: fields\n        });\n        const [integrations, total] = await Promise.all([cursor.toArray(), totalCount]);\n        return API.v1.success({\n          integrations,\n          offset,\n          items: integrations.length,\n          count: integrations.length,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('integrations.remove', {\n      authRequired: true,\n      validateParams: isIntegrationsRemoveProps,\n      permissionsRequired: {\n        POST: {\n          permissions: ['manage-outgoing-integrations', 'manage-own-outgoing-integrations', 'manage-incoming-integrations', 'manage-own-incoming-integrations'],\n          operation: 'hasAny'\n        }\n      }\n    }, {\n      async post() {\n        const {\n          bodyParams\n        } = this;\n        let integration = null;\n        switch (bodyParams.type) {\n          case 'webhook-outgoing':\n            if (!bodyParams.target_url && !bodyParams.integrationId) {\n              return API.v1.failure('An integrationId or target_url needs to be provided.');\n            }\n            if (bodyParams.target_url) {\n              integration = await Integrations.findOne({\n                urls: bodyParams.target_url\n              });\n            } else if (bodyParams.integrationId) {\n              integration = await Integrations.findOne({\n                _id: bodyParams.integrationId\n              });\n            }\n            if (!integration) {\n              return API.v1.failure('No integration found.');\n            }\n            const outgoingId = integration._id;\n            await deleteOutgoingIntegration(outgoingId, this.userId);\n            return API.v1.success({\n              integration\n            });\n          case 'webhook-incoming':\n            check(bodyParams, Match.ObjectIncluding({\n              integrationId: String\n            }));\n            integration = await Integrations.findOne({\n              _id: bodyParams.integrationId\n            });\n            if (!integration) {\n              return API.v1.failure('No integration found.');\n            }\n            const incomingId = integration._id;\n            await deleteIncomingIntegration(incomingId, this.userId);\n            return API.v1.success({\n              integration\n            });\n          default:\n            return API.v1.failure('Invalid integration type.');\n        }\n      }\n    });\n    API.v1.addRoute('integrations.get', {\n      authRequired: true,\n      validateParams: isIntegrationsGetProps\n    }, {\n      async get() {\n        const {\n          integrationId,\n          createdBy\n        } = this.queryParams;\n        if (!integrationId) {\n          return API.v1.failure('The query parameter \"integrationId\" is required.');\n        }\n        return API.v1.success({\n          integration: await findOneIntegration({\n            userId: this.userId,\n            integrationId,\n            createdBy\n          })\n        });\n      }\n    });\n    API.v1.addRoute('integrations.update', {\n      authRequired: true,\n      validateParams: isIntegrationsUpdateProps\n    }, {\n      async put() {\n        const {\n          bodyParams\n        } = this;\n        let integration;\n        switch (bodyParams.type) {\n          case 'webhook-outgoing':\n            if (bodyParams.target_url) {\n              integration = await Integrations.findOne({\n                urls: bodyParams.target_url\n              });\n            } else if (bodyParams.integrationId) {\n              integration = await Integrations.findOne({\n                _id: bodyParams.integrationId\n              });\n            }\n            if (!integration) {\n              return API.v1.failure('No integration found.');\n            }\n            await Meteor.callAsync('updateOutgoingIntegration', integration._id, bodyParams);\n            return API.v1.success({\n              integration: await Integrations.findOne({\n                _id: integration._id\n              })\n            });\n          case 'webhook-incoming':\n            integration = await Integrations.findOne({\n              _id: bodyParams.integrationId\n            });\n            if (!integration) {\n              return API.v1.failure('No integration found.');\n            }\n            await Meteor.callAsync('updateIncomingIntegration', integration._id, bodyParams);\n            return API.v1.success({\n              integration: await Integrations.findOne({\n                _id: integration._id\n              })\n            });\n          default:\n            return API.v1.failure('Invalid integration type.');\n        }\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","Integrations","IntegrationHistory","isIntegrationsCreateProps","isIntegrationsHistoryProps","isIntegrationsRemoveProps","isIntegrationsGetProps","isIntegrationsUpdateProps","isIntegrationsListProps","escapeRegExp","Match","check","Meteor","mountIntegrationHistoryQueryBasedOnPermissions","mountIntegrationQueryBasedOnPermissions","addIncomingIntegration","deleteIncomingIntegration","addOutgoingIntegration","deleteOutgoingIntegration","API","getPaginationItems","findOneIntegration","__reifyWaitForDeps__","v1","addRoute","authRequired","validateParams","post","bodyParams","type","success","integration","userId","failure","permissionsRequired","GET","permissions","operation","get","queryParams","id","trim","offset","count","sort","fields","projection","query","parseJsonQuery","ourQuery","Object","assign","cursor","totalCount","findPaginated","_updatedAt","skip","limit","history","total","Promise","all","toArray","items","length","name","filter","$regex","$options","ts","integrations","POST","target_url","integrationId","findOne","urls","_id","outgoingId","ObjectIncluding","String","incomingId","createdBy","put","callAsync","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/v1/integrations.ts"],"sourcesContent":["import type { IIntegration, INewIncomingIntegration, INewOutgoingIntegration } from '@rocket.chat/core-typings';\nimport { Integrations, IntegrationHistory } from '@rocket.chat/models';\nimport {\n\tisIntegrationsCreateProps,\n\tisIntegrationsHistoryProps,\n\tisIntegrationsRemoveProps,\n\tisIntegrationsGetProps,\n\tisIntegrationsUpdateProps,\n\tisIntegrationsListProps,\n} from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport type { Filter } from 'mongodb';\n\nimport {\n\tmountIntegrationHistoryQueryBasedOnPermissions,\n\tmountIntegrationQueryBasedOnPermissions,\n} from '../../../integrations/server/lib/mountQueriesBasedOnPermission';\nimport { addIncomingIntegration } from '../../../integrations/server/methods/incoming/addIncomingIntegration';\nimport { deleteIncomingIntegration } from '../../../integrations/server/methods/incoming/deleteIncomingIntegration';\nimport { addOutgoingIntegration } from '../../../integrations/server/methods/outgoing/addOutgoingIntegration';\nimport { deleteOutgoingIntegration } from '../../../integrations/server/methods/outgoing/deleteOutgoingIntegration';\nimport { API } from '../api';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\nimport { findOneIntegration } from '../lib/integrations';\n\nAPI.v1.addRoute(\n\t'integrations.create',\n\t{ authRequired: true, validateParams: isIntegrationsCreateProps },\n\t{\n\t\tasync post() {\n\t\t\tswitch (this.bodyParams.type) {\n\t\t\t\tcase 'webhook-outgoing':\n\t\t\t\t\treturn API.v1.success({ integration: await addOutgoingIntegration(this.userId, this.bodyParams as INewOutgoingIntegration) });\n\t\t\t\tcase 'webhook-incoming':\n\t\t\t\t\treturn API.v1.success({ integration: await addIncomingIntegration(this.userId, this.bodyParams as INewIncomingIntegration) });\n\t\t\t}\n\n\t\t\treturn API.v1.failure('Invalid integration type.');\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.history',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isIntegrationsHistoryProps,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['manage-outgoing-integrations', 'manage-own-outgoing-integrations'], operation: 'hasAny' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { userId, queryParams } = this;\n\n\t\t\tif (!queryParams.id || queryParams.id.trim() === '') {\n\t\t\t\treturn API.v1.failure('Invalid integration id.');\n\t\t\t}\n\n\t\t\tconst { id } = queryParams;\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields: projection, query } = await this.parseJsonQuery();\n\t\t\tconst ourQuery = Object.assign(await mountIntegrationHistoryQueryBasedOnPermissions(userId, id), query);\n\n\t\t\tconst { cursor, totalCount } = IntegrationHistory.findPaginated(ourQuery, {\n\t\t\t\tsort: sort || { _updatedAt: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tprojection,\n\t\t\t});\n\n\t\t\tconst [history, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\thistory,\n\t\t\t\toffset,\n\t\t\t\titems: history.length,\n\t\t\t\tcount: history.length,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.list',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isIntegrationsListProps,\n\t\tpermissionsRequired: {\n\t\t\tGET: {\n\t\t\t\tpermissions: [\n\t\t\t\t\t'manage-outgoing-integrations',\n\t\t\t\t\t'manage-own-outgoing-integrations',\n\t\t\t\t\t'manage-incoming-integrations',\n\t\t\t\t\t'manage-own-incoming-integrations',\n\t\t\t\t],\n\t\t\t\toperation: 'hasAny',\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields, query } = await this.parseJsonQuery();\n\t\t\tconst { name, type } = this.queryParams;\n\n\t\t\tconst filter = {\n\t\t\t\t...query,\n\t\t\t\t...(name ? { name: { $regex: escapeRegExp(name as string), $options: 'i' } } : {}),\n\t\t\t\t...(type ? { type } : {}),\n\t\t\t};\n\n\t\t\tconst ourQuery = Object.assign(await mountIntegrationQueryBasedOnPermissions(this.userId), filter) as Filter<IIntegration>;\n\n\t\t\tconst { cursor, totalCount } = Integrations.findPaginated(ourQuery, {\n\t\t\t\tsort: sort || { ts: -1 },\n\t\t\t\tskip: offset,\n\t\t\t\tlimit: count,\n\t\t\t\tprojection: fields,\n\t\t\t});\n\n\t\t\tconst [integrations, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tintegrations,\n\t\t\t\toffset,\n\t\t\t\titems: integrations.length,\n\t\t\t\tcount: integrations.length,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.remove',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isIntegrationsRemoveProps,\n\t\tpermissionsRequired: {\n\t\t\tPOST: {\n\t\t\t\tpermissions: [\n\t\t\t\t\t'manage-outgoing-integrations',\n\t\t\t\t\t'manage-own-outgoing-integrations',\n\t\t\t\t\t'manage-incoming-integrations',\n\t\t\t\t\t'manage-own-incoming-integrations',\n\t\t\t\t],\n\t\t\t\toperation: 'hasAny',\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { bodyParams } = this;\n\n\t\t\tlet integration: IIntegration | null = null;\n\t\t\tswitch (bodyParams.type) {\n\t\t\t\tcase 'webhook-outgoing':\n\t\t\t\t\tif (!bodyParams.target_url && !bodyParams.integrationId) {\n\t\t\t\t\t\treturn API.v1.failure('An integrationId or target_url needs to be provided.');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bodyParams.target_url) {\n\t\t\t\t\t\tintegration = await Integrations.findOne({ urls: bodyParams.target_url });\n\t\t\t\t\t} else if (bodyParams.integrationId) {\n\t\t\t\t\t\tintegration = await Integrations.findOne({ _id: bodyParams.integrationId });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!integration) {\n\t\t\t\t\t\treturn API.v1.failure('No integration found.');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst outgoingId = integration._id;\n\n\t\t\t\t\tawait deleteOutgoingIntegration(outgoingId, this.userId);\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tintegration,\n\t\t\t\t\t});\n\t\t\t\tcase 'webhook-incoming':\n\t\t\t\t\tcheck(\n\t\t\t\t\t\tbodyParams,\n\t\t\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\t\t\tintegrationId: String,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\tintegration = await Integrations.findOne({ _id: bodyParams.integrationId });\n\n\t\t\t\t\tif (!integration) {\n\t\t\t\t\t\treturn API.v1.failure('No integration found.');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst incomingId = integration._id;\n\t\t\t\t\tawait deleteIncomingIntegration(incomingId, this.userId);\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tintegration,\n\t\t\t\t\t});\n\t\t\t\tdefault:\n\t\t\t\t\treturn API.v1.failure('Invalid integration type.');\n\t\t\t}\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.get',\n\t{ authRequired: true, validateParams: isIntegrationsGetProps },\n\t{\n\t\tasync get() {\n\t\t\tconst { integrationId, createdBy } = this.queryParams;\n\t\t\tif (!integrationId) {\n\t\t\t\treturn API.v1.failure('The query parameter \"integrationId\" is required.');\n\t\t\t}\n\n\t\t\treturn API.v1.success({\n\t\t\t\tintegration: await findOneIntegration({\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t\tintegrationId,\n\t\t\t\t\tcreatedBy,\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'integrations.update',\n\t{ authRequired: true, validateParams: isIntegrationsUpdateProps },\n\t{\n\t\tasync put() {\n\t\t\tconst { bodyParams } = this;\n\n\t\t\tlet integration;\n\t\t\tswitch (bodyParams.type) {\n\t\t\t\tcase 'webhook-outgoing':\n\t\t\t\t\tif (bodyParams.target_url) {\n\t\t\t\t\t\tintegration = await Integrations.findOne({ urls: bodyParams.target_url });\n\t\t\t\t\t} else if (bodyParams.integrationId) {\n\t\t\t\t\t\tintegration = await Integrations.findOne({ _id: bodyParams.integrationId });\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!integration) {\n\t\t\t\t\t\treturn API.v1.failure('No integration found.');\n\t\t\t\t\t}\n\n\t\t\t\t\tawait Meteor.callAsync('updateOutgoingIntegration', integration._id, bodyParams);\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tintegration: await Integrations.findOne({ _id: integration._id }),\n\t\t\t\t\t});\n\t\t\t\tcase 'webhook-incoming':\n\t\t\t\t\tintegration = await Integrations.findOne({ _id: bodyParams.integrationId });\n\n\t\t\t\t\tif (!integration) {\n\t\t\t\t\t\treturn API.v1.failure('No integration found.');\n\t\t\t\t\t}\n\n\t\t\t\t\tawait Meteor.callAsync('updateIncomingIntegration', integration._id, bodyParams);\n\n\t\t\t\t\treturn API.v1.success({\n\t\t\t\t\t\tintegration: await Integrations.findOne({ _id: integration._id }),\n\t\t\t\t\t});\n\t\t\t\tdefault:\n\t\t\t\t\treturn API.v1.failure('Invalid integration type.');\n\t\t\t}\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"666455d81d7fb76a5bd17ee8185ca231bb2fdfcd"}
