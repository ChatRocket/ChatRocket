{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/users.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/apps/server/bridges/users.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/users.ts","inputSourceMap":{"version":3,"file":"app/apps/server/bridges/users.ts","sourceRoot":"","sources":["app/apps/server/bridges/users.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAppServerOrchestrator } from '@rocket.chat/apps';\nimport type { IUserCreationOptions, IUser, UserType } from '@rocket.chat/apps-engine/definition/users';\nimport { UserBridge } from '@rocket.chat/apps-engine/server/bridges/UserBridge';\nimport { Presence } from '@rocket.chat/core-services';\nimport type { UserStatus } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\n\nimport { checkUsernameAvailability } from '../../../lib/server/functions/checkUsernameAvailability';\nimport { deleteUser } from '../../../lib/server/functions/deleteUser';\nimport { getUserCreatedByApp } from '../../../lib/server/functions/getUserCreatedByApp';\nimport { setUserActiveStatus } from '../../../lib/server/functions/setUserActiveStatus';\nimport { setUserAvatar } from '../../../lib/server/functions/setUserAvatar';\nimport { notifyOnUserChange, notifyOnUserChangeById } from '../../../lib/server/lib/notifyListener';\n\nexport class AppUserBridge extends UserBridge {\n\tconstructor(private readonly orch: IAppServerOrchestrator) {\n\t\tsuper();\n\t}\n\n\tprotected async getById(userId: string, appId: string): Promise<IUser> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the userId: \"${userId}\"`);\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst promise: Promise<IUser | undefined> = this.orch.getConverters()?.get('users').convertById(userId);\n\t\treturn promise as Promise<IUser>;\n\t}\n\n\tprotected async getByUsername(username: string, appId: string): Promise<IUser> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the username: \"${username}\"`);\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst promise: Promise<IUser | undefined> = this.orch.getConverters()?.get('users').convertByUsername(username);\n\t\treturn promise as Promise<IUser>;\n\t}\n\n\tprotected async getAppUser(appId?: string): Promise<IUser | undefined> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting its assigned user`);\n\n\t\tif (!appId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = await Users.findOneByAppId(appId, {});\n\n\t\treturn this.orch.getConverters()?.get('users').convertToApp(user);\n\t}\n\n\t/**\n\t * Deletes all bot or app users created by the App.\n\t * @param appId the App's ID.\n\t * @param type the type of the user to be deleted.\n\t * @returns true if any user was deleted, false otherwise.\n\t */\n\tprotected async deleteUsersCreatedByApp(appId: string, type: UserType.APP | UserType.BOT): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is deleting all bot users`);\n\n\t\tconst appUsers = await getUserCreatedByApp(appId, type);\n\t\tif (appUsers.length) {\n\t\t\tthis.orch.debugLog(`The App ${appId} is deleting ${appUsers.length} users`);\n\t\t\tawait Promise.all(appUsers.map((appUser) => deleteUser(appUser._id)));\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected async create(userDescriptor: Partial<IUser>, appId: string, options?: IUserCreationOptions): Promise<string> {\n\t\tthis.orch.debugLog(`The App ${appId} is requesting to create a new user.`);\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst user = this.orch\n\t\t\t.getConverters()\n\t\t\t?.get('users')\n\t\t\t.convertToRocketChat(userDescriptor as IUser);\n\n\t\tif (!user._id) {\n\t\t\tuser._id = Random.id();\n\t\t}\n\n\t\tif (!user.createdAt) {\n\t\t\tuser.createdAt = new Date();\n\t\t}\n\n\t\tswitch (user.type) {\n\t\t\tcase 'bot':\n\t\t\tcase 'app':\n\t\t\t\tif (!(await checkUsernameAvailability(user.username as string))) {\n\t\t\t\t\tthrow new Error(`The username \"${user.username}\" is already being used. Rename or remove the user using it to install this App`);\n\t\t\t\t}\n\n\t\t\t\tawait Users.insertOne(user);\n\n\t\t\t\tif (options?.avatarUrl) {\n\t\t\t\t\tawait setUserAvatar(user, options.avatarUrl, '', 'local');\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Creating normal users is currently not supported');\n\t\t}\n\n\t\tvoid notifyOnUserChangeById({ clientAction: 'inserted', id: user._id });\n\n\t\treturn user._id;\n\t}\n\n\tprotected async remove(user: IUser & { id: string }, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App's user is being removed: ${appId}`);\n\n\t\t// It's actually not a problem if there is no App user to delete - just means we don't need to do anything more.\n\t\tif (!user) {\n\t\t\treturn true;\n\t\t}\n\n\t\ttry {\n\t\t\tawait deleteUser(user.id);\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Errors occurred while deleting an app user: ${err}`);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected async update(user: IUser & { id: string }, fields: Partial<IUser>, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is updating a user`);\n\n\t\tif (!user) {\n\t\t\tthrow new Error('User not provided');\n\t\t}\n\n\t\tif (!Object.keys(fields).length) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst { status } = fields;\n\t\tdelete fields.status;\n\n\t\tif (status) {\n\t\t\tawait Presence.setStatus(user.id, status as UserStatus, fields.statusText);\n\t\t}\n\n\t\tawait Users.updateOne({ _id: user.id }, { $set: fields as any });\n\n\t\tvoid notifyOnUserChange({ clientAction: 'updated', id: user.id, diff: fields });\n\n\t\treturn true;\n\t}\n\n\tprotected async deactivate(userId: IUser['id'], confirmRelinquish: boolean, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is deactivating a user.`);\n\n\t\tif (!userId) {\n\t\t\tthrow new Error('Invalid user id');\n\t\t}\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst convertedUser: IUser | undefined = await this.orch.getConverters()?.get('users').convertById(userId);\n\t\tconst { id: uid } = convertedUser as IUser;\n\n\t\tawait setUserActiveStatus(uid, false, confirmRelinquish);\n\n\t\treturn true;\n\t}\n\n\tprotected async getActiveUserCount(): Promise<number> {\n\t\treturn Users.getActiveLocalUserCount();\n\t}\n\n\tprotected async getUserUnreadMessageCount(uid: string): Promise<number> {\n\t\treturn Subscriptions.getBadgeCount(uid);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/apps/server/bridges/users.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/apps/server/bridges/users.ts","inputSourceMap":{"version":3,"file":"app/apps/server/bridges/users.ts","sourceRoot":"","sources":["app/apps/server/bridges/users.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IAppServerOrchestrator } from '@rocket.chat/apps';\nimport type { IUserCreationOptions, IUser, UserType } from '@rocket.chat/apps-engine/definition/users';\nimport { UserBridge } from '@rocket.chat/apps-engine/server/bridges/UserBridge';\nimport { Presence } from '@rocket.chat/core-services';\nimport type { UserStatus } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\n\nimport { checkUsernameAvailability } from '../../../lib/server/functions/checkUsernameAvailability';\nimport { deleteUser } from '../../../lib/server/functions/deleteUser';\nimport { getUserCreatedByApp } from '../../../lib/server/functions/getUserCreatedByApp';\nimport { setUserActiveStatus } from '../../../lib/server/functions/setUserActiveStatus';\nimport { setUserAvatar } from '../../../lib/server/functions/setUserAvatar';\nimport { notifyOnUserChange, notifyOnUserChangeById } from '../../../lib/server/lib/notifyListener';\n\nexport class AppUserBridge extends UserBridge {\n\tconstructor(private readonly orch: IAppServerOrchestrator) {\n\t\tsuper();\n\t}\n\n\tprotected async getById(userId: string, appId: string): Promise<IUser> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the userId: \"${userId}\"`);\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst promise: Promise<IUser | undefined> = this.orch.getConverters()?.get('users').convertById(userId);\n\t\treturn promise as Promise<IUser>;\n\t}\n\n\tprotected async getByUsername(username: string, appId: string): Promise<IUser> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the username: \"${username}\"`);\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst promise: Promise<IUser | undefined> = this.orch.getConverters()?.get('users').convertByUsername(username);\n\t\treturn promise as Promise<IUser>;\n\t}\n\n\tprotected async getAppUser(appId?: string): Promise<IUser | undefined> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting its assigned user`);\n\n\t\tif (!appId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = await Users.findOneByAppId(appId, {});\n\n\t\treturn this.orch.getConverters()?.get('users').convertToApp(user);\n\t}\n\n\t/**\n\t * Deletes all bot or app users created by the App.\n\t * @param appId the App's ID.\n\t * @param type the type of the user to be deleted.\n\t * @returns true if any user was deleted, false otherwise.\n\t */\n\tprotected async deleteUsersCreatedByApp(appId: string, type: UserType.APP | UserType.BOT): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is deleting all bot users`);\n\n\t\tconst appUsers = await getUserCreatedByApp(appId, type);\n\t\tif (appUsers.length) {\n\t\t\tthis.orch.debugLog(`The App ${appId} is deleting ${appUsers.length} users`);\n\t\t\tawait Promise.all(appUsers.map((appUser) => deleteUser(appUser._id)));\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected async create(userDescriptor: Partial<IUser>, appId: string, options?: IUserCreationOptions): Promise<string> {\n\t\tthis.orch.debugLog(`The App ${appId} is requesting to create a new user.`);\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst user = this.orch\n\t\t\t.getConverters()\n\t\t\t?.get('users')\n\t\t\t.convertToRocketChat(userDescriptor as IUser);\n\n\t\tif (!user._id) {\n\t\t\tuser._id = Random.id();\n\t\t}\n\n\t\tif (!user.createdAt) {\n\t\t\tuser.createdAt = new Date();\n\t\t}\n\n\t\tswitch (user.type) {\n\t\t\tcase 'bot':\n\t\t\tcase 'app':\n\t\t\t\tif (!(await checkUsernameAvailability(user.username as string))) {\n\t\t\t\t\tthrow new Error(`The username \"${user.username}\" is already being used. Rename or remove the user using it to install this App`);\n\t\t\t\t}\n\n\t\t\t\tawait Users.insertOne(user);\n\n\t\t\t\tif (options?.avatarUrl) {\n\t\t\t\t\tawait setUserAvatar(user, options.avatarUrl, '', 'local');\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Creating normal users is currently not supported');\n\t\t}\n\n\t\tvoid notifyOnUserChangeById({ clientAction: 'inserted', id: user._id });\n\n\t\treturn user._id;\n\t}\n\n\tprotected async remove(user: IUser & { id: string }, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App's user is being removed: ${appId}`);\n\n\t\t// It's actually not a problem if there is no App user to delete - just means we don't need to do anything more.\n\t\tif (!user) {\n\t\t\treturn true;\n\t\t}\n\n\t\ttry {\n\t\t\tawait deleteUser(user.id);\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Errors occurred while deleting an app user: ${err}`);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected async update(user: IUser & { id: string }, fields: Partial<IUser>, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is updating a user`);\n\n\t\tif (!user) {\n\t\t\tthrow new Error('User not provided');\n\t\t}\n\n\t\tif (!Object.keys(fields).length) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst { status } = fields;\n\t\tdelete fields.status;\n\n\t\tif (status) {\n\t\t\tawait Presence.setStatus(user.id, status as UserStatus, fields.statusText);\n\t\t}\n\n\t\tawait Users.updateOne({ _id: user.id }, { $set: fields as any });\n\n\t\tvoid notifyOnUserChange({ clientAction: 'updated', id: user.id, diff: fields });\n\n\t\treturn true;\n\t}\n\n\tprotected async deactivate(userId: IUser['id'], confirmRelinquish: boolean, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is deactivating a user.`);\n\n\t\tif (!userId) {\n\t\t\tthrow new Error('Invalid user id');\n\t\t}\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst convertedUser: IUser | undefined = await this.orch.getConverters()?.get('users').convertById(userId);\n\t\tconst { id: uid } = convertedUser as IUser;\n\n\t\tawait setUserActiveStatus(uid, false, confirmRelinquish);\n\n\t\treturn true;\n\t}\n\n\tprotected async getActiveUserCount(): Promise<number> {\n\t\treturn Users.getActiveLocalUserCount();\n\t}\n\n\tprotected async getUserUnreadMessageCount(uid: string): Promise<number> {\n\t\treturn Subscriptions.getBadgeCount(uid);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      AppUserBridge: () => AppUserBridge\n    });\n    let UserBridge;\n    module.link(\"@rocket.chat/apps-engine/server/bridges/UserBridge\", {\n      UserBridge(v) {\n        UserBridge = v;\n      }\n    }, 0);\n    let Presence;\n    module.link(\"@rocket.chat/core-services\", {\n      Presence(v) {\n        Presence = v;\n      }\n    }, 1);\n    let Subscriptions, Users;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 2);\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 3);\n    let checkUsernameAvailability;\n    module.link(\"../../../lib/server/functions/checkUsernameAvailability\", {\n      checkUsernameAvailability(v) {\n        checkUsernameAvailability = v;\n      }\n    }, 4);\n    let deleteUser;\n    module.link(\"../../../lib/server/functions/deleteUser\", {\n      deleteUser(v) {\n        deleteUser = v;\n      }\n    }, 5);\n    let getUserCreatedByApp;\n    module.link(\"../../../lib/server/functions/getUserCreatedByApp\", {\n      getUserCreatedByApp(v) {\n        getUserCreatedByApp = v;\n      }\n    }, 6);\n    let setUserActiveStatus;\n    module.link(\"../../../lib/server/functions/setUserActiveStatus\", {\n      setUserActiveStatus(v) {\n        setUserActiveStatus = v;\n      }\n    }, 7);\n    let setUserAvatar;\n    module.link(\"../../../lib/server/functions/setUserAvatar\", {\n      setUserAvatar(v) {\n        setUserAvatar = v;\n      }\n    }, 8);\n    let notifyOnUserChange, notifyOnUserChangeById;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnUserChange(v) {\n        notifyOnUserChange = v;\n      },\n      notifyOnUserChangeById(v) {\n        notifyOnUserChangeById = v;\n      }\n    }, 9);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class AppUserBridge extends UserBridge {\n      constructor(orch) {\n        super();\n        this.orch = void 0;\n        this.orch = orch;\n      }\n      async getById(userId, appId) {\n        var _this$orch$getConvert;\n        this.orch.debugLog(\"The App \".concat(appId, \" is getting the userId: \\\"\").concat(userId, \"\\\"\"));\n        // #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n        const promise = (_this$orch$getConvert = this.orch.getConverters()) === null || _this$orch$getConvert === void 0 ? void 0 : _this$orch$getConvert.get('users').convertById(userId);\n        return promise;\n      }\n      async getByUsername(username, appId) {\n        var _this$orch$getConvert2;\n        this.orch.debugLog(\"The App \".concat(appId, \" is getting the username: \\\"\").concat(username, \"\\\"\"));\n        // #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n        const promise = (_this$orch$getConvert2 = this.orch.getConverters()) === null || _this$orch$getConvert2 === void 0 ? void 0 : _this$orch$getConvert2.get('users').convertByUsername(username);\n        return promise;\n      }\n      async getAppUser(appId) {\n        var _this$orch$getConvert3;\n        this.orch.debugLog(\"The App \".concat(appId, \" is getting its assigned user\"));\n        if (!appId) {\n          return;\n        }\n        const user = await Users.findOneByAppId(appId, {});\n        return (_this$orch$getConvert3 = this.orch.getConverters()) === null || _this$orch$getConvert3 === void 0 ? void 0 : _this$orch$getConvert3.get('users').convertToApp(user);\n      }\n      /**\n       * Deletes all bot or app users created by the App.\n       * @param appId the App's ID.\n       * @param type the type of the user to be deleted.\n       * @returns true if any user was deleted, false otherwise.\n       */\n      async deleteUsersCreatedByApp(appId, type) {\n        this.orch.debugLog(\"The App \".concat(appId, \" is deleting all bot users\"));\n        const appUsers = await getUserCreatedByApp(appId, type);\n        if (appUsers.length) {\n          this.orch.debugLog(\"The App \".concat(appId, \" is deleting \").concat(appUsers.length, \" users\"));\n          await Promise.all(appUsers.map(appUser => deleteUser(appUser._id)));\n          return true;\n        }\n        return false;\n      }\n      async create(userDescriptor, appId, options) {\n        var _this$orch$getConvert4;\n        this.orch.debugLog(\"The App \".concat(appId, \" is requesting to create a new user.\"));\n        // #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n        const user = (_this$orch$getConvert4 = this.orch.getConverters()) === null || _this$orch$getConvert4 === void 0 ? void 0 : _this$orch$getConvert4.get('users').convertToRocketChat(userDescriptor);\n        if (!user._id) {\n          user._id = Random.id();\n        }\n        if (!user.createdAt) {\n          user.createdAt = new Date();\n        }\n        switch (user.type) {\n          case 'bot':\n          case 'app':\n            if (!(await checkUsernameAvailability(user.username))) {\n              throw new Error(\"The username \\\"\".concat(user.username, \"\\\" is already being used. Rename or remove the user using it to install this App\"));\n            }\n            await Users.insertOne(user);\n            if (options !== null && options !== void 0 && options.avatarUrl) {\n              await setUserAvatar(user, options.avatarUrl, '', 'local');\n            }\n            break;\n          default:\n            throw new Error('Creating normal users is currently not supported');\n        }\n        void notifyOnUserChangeById({\n          clientAction: 'inserted',\n          id: user._id\n        });\n        return user._id;\n      }\n      async remove(user, appId) {\n        this.orch.debugLog(\"The App's user is being removed: \".concat(appId));\n        // It's actually not a problem if there is no App user to delete - just means we don't need to do anything more.\n        if (!user) {\n          return true;\n        }\n        try {\n          await deleteUser(user.id);\n        } catch (err) {\n          throw new Error(\"Errors occurred while deleting an app user: \".concat(err));\n        }\n        return true;\n      }\n      async update(user, fields, appId) {\n        this.orch.debugLog(\"The App \".concat(appId, \" is updating a user\"));\n        if (!user) {\n          throw new Error('User not provided');\n        }\n        if (!Object.keys(fields).length) {\n          return true;\n        }\n        const {\n          status\n        } = fields;\n        delete fields.status;\n        if (status) {\n          await Presence.setStatus(user.id, status, fields.statusText);\n        }\n        await Users.updateOne({\n          _id: user.id\n        }, {\n          $set: fields\n        });\n        void notifyOnUserChange({\n          clientAction: 'updated',\n          id: user.id,\n          diff: fields\n        });\n        return true;\n      }\n      async deactivate(userId, confirmRelinquish, appId) {\n        var _this$orch$getConvert5;\n        this.orch.debugLog(\"The App \".concat(appId, \" is deactivating a user.\"));\n        if (!userId) {\n          throw new Error('Invalid user id');\n        }\n        // #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n        const convertedUser = await ((_this$orch$getConvert5 = this.orch.getConverters()) === null || _this$orch$getConvert5 === void 0 ? void 0 : _this$orch$getConvert5.get('users').convertById(userId));\n        const {\n          id: uid\n        } = convertedUser;\n        await setUserActiveStatus(uid, false, confirmRelinquish);\n        return true;\n      }\n      async getActiveUserCount() {\n        return Users.getActiveLocalUserCount();\n      }\n      async getUserUnreadMessageCount(uid) {\n        return Subscriptions.getBadgeCount(uid);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","AppUserBridge","UserBridge","link","v","Presence","Subscriptions","Users","Random","checkUsernameAvailability","deleteUser","getUserCreatedByApp","setUserActiveStatus","setUserAvatar","notifyOnUserChange","notifyOnUserChangeById","__reifyWaitForDeps__","constructor","orch","getById","userId","appId","_this$orch$getConvert","debugLog","concat","promise","getConverters","get","convertById","getByUsername","username","_this$orch$getConvert2","convertByUsername","getAppUser","_this$orch$getConvert3","user","findOneByAppId","convertToApp","deleteUsersCreatedByApp","type","appUsers","length","Promise","all","map","appUser","_id","create","userDescriptor","options","_this$orch$getConvert4","convertToRocketChat","id","createdAt","Date","Error","insertOne","avatarUrl","clientAction","remove","err","update","fields","Object","keys","status","setStatus","statusText","updateOne","$set","diff","deactivate","confirmRelinquish","_this$orch$getConvert5","convertedUser","uid","getActiveUserCount","getActiveLocalUserCount","getUserUnreadMessageCount","getBadgeCount","__reify_async_result__","_reifyError","self","async"],"sources":["app/apps/server/bridges/users.ts"],"sourcesContent":["import type { IAppServerOrchestrator } from '@rocket.chat/apps';\nimport type { IUserCreationOptions, IUser, UserType } from '@rocket.chat/apps-engine/definition/users';\nimport { UserBridge } from '@rocket.chat/apps-engine/server/bridges/UserBridge';\nimport { Presence } from '@rocket.chat/core-services';\nimport type { UserStatus } from '@rocket.chat/core-typings';\nimport { Subscriptions, Users } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\n\nimport { checkUsernameAvailability } from '../../../lib/server/functions/checkUsernameAvailability';\nimport { deleteUser } from '../../../lib/server/functions/deleteUser';\nimport { getUserCreatedByApp } from '../../../lib/server/functions/getUserCreatedByApp';\nimport { setUserActiveStatus } from '../../../lib/server/functions/setUserActiveStatus';\nimport { setUserAvatar } from '../../../lib/server/functions/setUserAvatar';\nimport { notifyOnUserChange, notifyOnUserChangeById } from '../../../lib/server/lib/notifyListener';\n\nexport class AppUserBridge extends UserBridge {\n\tconstructor(private readonly orch: IAppServerOrchestrator) {\n\t\tsuper();\n\t}\n\n\tprotected async getById(userId: string, appId: string): Promise<IUser> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the userId: \"${userId}\"`);\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst promise: Promise<IUser | undefined> = this.orch.getConverters()?.get('users').convertById(userId);\n\t\treturn promise as Promise<IUser>;\n\t}\n\n\tprotected async getByUsername(username: string, appId: string): Promise<IUser> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting the username: \"${username}\"`);\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst promise: Promise<IUser | undefined> = this.orch.getConverters()?.get('users').convertByUsername(username);\n\t\treturn promise as Promise<IUser>;\n\t}\n\n\tprotected async getAppUser(appId?: string): Promise<IUser | undefined> {\n\t\tthis.orch.debugLog(`The App ${appId} is getting its assigned user`);\n\n\t\tif (!appId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst user = await Users.findOneByAppId(appId, {});\n\n\t\treturn this.orch.getConverters()?.get('users').convertToApp(user);\n\t}\n\n\t/**\n\t * Deletes all bot or app users created by the App.\n\t * @param appId the App's ID.\n\t * @param type the type of the user to be deleted.\n\t * @returns true if any user was deleted, false otherwise.\n\t */\n\tprotected async deleteUsersCreatedByApp(appId: string, type: UserType.APP | UserType.BOT): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is deleting all bot users`);\n\n\t\tconst appUsers = await getUserCreatedByApp(appId, type);\n\t\tif (appUsers.length) {\n\t\t\tthis.orch.debugLog(`The App ${appId} is deleting ${appUsers.length} users`);\n\t\t\tawait Promise.all(appUsers.map((appUser) => deleteUser(appUser._id)));\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected async create(userDescriptor: Partial<IUser>, appId: string, options?: IUserCreationOptions): Promise<string> {\n\t\tthis.orch.debugLog(`The App ${appId} is requesting to create a new user.`);\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst user = this.orch\n\t\t\t.getConverters()\n\t\t\t?.get('users')\n\t\t\t.convertToRocketChat(userDescriptor as IUser);\n\n\t\tif (!user._id) {\n\t\t\tuser._id = Random.id();\n\t\t}\n\n\t\tif (!user.createdAt) {\n\t\t\tuser.createdAt = new Date();\n\t\t}\n\n\t\tswitch (user.type) {\n\t\t\tcase 'bot':\n\t\t\tcase 'app':\n\t\t\t\tif (!(await checkUsernameAvailability(user.username as string))) {\n\t\t\t\t\tthrow new Error(`The username \"${user.username}\" is already being used. Rename or remove the user using it to install this App`);\n\t\t\t\t}\n\n\t\t\t\tawait Users.insertOne(user);\n\n\t\t\t\tif (options?.avatarUrl) {\n\t\t\t\t\tawait setUserAvatar(user, options.avatarUrl, '', 'local');\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Creating normal users is currently not supported');\n\t\t}\n\n\t\tvoid notifyOnUserChangeById({ clientAction: 'inserted', id: user._id });\n\n\t\treturn user._id;\n\t}\n\n\tprotected async remove(user: IUser & { id: string }, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App's user is being removed: ${appId}`);\n\n\t\t// It's actually not a problem if there is no App user to delete - just means we don't need to do anything more.\n\t\tif (!user) {\n\t\t\treturn true;\n\t\t}\n\n\t\ttry {\n\t\t\tawait deleteUser(user.id);\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Errors occurred while deleting an app user: ${err}`);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected async update(user: IUser & { id: string }, fields: Partial<IUser>, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is updating a user`);\n\n\t\tif (!user) {\n\t\t\tthrow new Error('User not provided');\n\t\t}\n\n\t\tif (!Object.keys(fields).length) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst { status } = fields;\n\t\tdelete fields.status;\n\n\t\tif (status) {\n\t\t\tawait Presence.setStatus(user.id, status as UserStatus, fields.statusText);\n\t\t}\n\n\t\tawait Users.updateOne({ _id: user.id }, { $set: fields as any });\n\n\t\tvoid notifyOnUserChange({ clientAction: 'updated', id: user.id, diff: fields });\n\n\t\treturn true;\n\t}\n\n\tprotected async deactivate(userId: IUser['id'], confirmRelinquish: boolean, appId: string): Promise<boolean> {\n\t\tthis.orch.debugLog(`The App ${appId} is deactivating a user.`);\n\n\t\tif (!userId) {\n\t\t\tthrow new Error('Invalid user id');\n\t\t}\n\n\t\t// #TODO: #AppsEngineTypes - Remove explicit types and typecasts once the apps-engine definition/implementation mismatch is fixed.\n\t\tconst convertedUser: IUser | undefined = await this.orch.getConverters()?.get('users').convertById(userId);\n\t\tconst { id: uid } = convertedUser as IUser;\n\n\t\tawait setUserActiveStatus(uid, false, confirmRelinquish);\n\n\t\treturn true;\n\t}\n\n\tprotected async getActiveUserCount(): Promise<number> {\n\t\treturn Users.getActiveLocalUserCount();\n\t}\n\n\tprotected async getUserUnreadMessageCount(uid: string): Promise<number> {\n\t\treturn Subscriptions.getBadgeCount(uid);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"1ac6c964cd413076ace88164e6a602fcb83808d3"}
