{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/lib/roles/updateRole.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/lib/roles/updateRole.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/lib/roles/updateRole.ts","inputSourceMap":{"version":3,"file":"ee/server/lib/roles/updateRole.ts","sourceRoot":"","sources":["ee/server/lib/roles/updateRole.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AAE9D,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,OAAO,EAAE,uBAAuB,EAAE,MAAM,+CAA+C,CAAC;AACxF,OAAO,EAAE,gBAAgB,EAAE,MAAM,wCAAwC,CAAC;AAM1E,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,EAAE,MAAoB,EAAE,QAA4B,EAAE,UAA6B,EAAE,EAAkB,EAAE;IACvI,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAE7C,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,WAAW,CAAC,sBAAsB,EAAE,0BAA0B,CAAC,CAAC;IAC3E,CAAC;IAED,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QAC7H,MAAM,IAAI,WAAW,CAAC,sBAAsB,EAAE,mBAAmB,CAAC,CAAC;IACpE,CAAC;IAED,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;QACnB,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACvF,IAAI,SAAS,IAAI,SAAS,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC;YAC7C,MAAM,IAAI,WAAW,CAAC,wCAAwC,EAAE,0BAA0B,CAAC,CAAC;QAC7F,CAAC;IACF,CAAC;SAAM,CAAC;QACP,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC3B,CAAC;IAED,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YACvC,MAAM,IAAI,WAAW,CAAC,qBAAqB,EAAE,eAAe,CAAC,CAAC;QAC/D,CAAC;IACF,CAAC;SAAM,CAAC;QACP,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC7B,CAAC;IAED,MAAM,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC;IAE3G,KAAK,uBAAuB,CAAC,MAAM,CAAC,CAAC;IAErC,IAAI,OAAO,CAAC,eAAe,EAAE,CAAC;QAC7B,KAAK,GAAG,CAAC,SAAS,CAAC,iBAAiB,EAAE;YACrC,IAAI,EAAE,SAAS;YACf,GAAG,EAAE,MAAM;YACX,KAAK,EAAE,QAAQ,CAAC,KAAK;SACrB,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,WAAW,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACpD,IAAI,CAAC,WAAW,EAAE,CAAC;QAClB,MAAM,IAAI,WAAW,CAAC,sBAAsB,EAAE,gBAAgB,CAAC,CAAC;IACjE,CAAC;IAED,OAAO,WAAW,CAAC;AACpB,CAAC,CAAC","sourcesContent":["import { api, MeteorError } from '@rocket.chat/core-services';\nimport type { IRole } from '@rocket.chat/core-typings';\nimport { Roles } from '@rocket.chat/models';\n\nimport { notifyOnRoleChangedById } from '../../../../app/lib/server/lib/notifyListener';\nimport { isValidRoleScope } from '../../../../lib/roles/isValidRoleScope';\n\ntype UpdateRoleOptions = {\n\tbroadcastUpdate?: boolean;\n};\n\nexport const updateRole = async (roleId: IRole['_id'], roleData: Omit<IRole, '_id'>, options: UpdateRoleOptions = {}): Promise<IRole> => {\n\tconst role = await Roles.findOneById(roleId);\n\n\tif (!role) {\n\t\tthrow new MeteorError('error-invalid-roleId', 'This role does not exist');\n\t}\n\n\tif (role.protected && ((roleData.name && roleData.name !== role.name) || (roleData.scope && roleData.scope !== role.scope))) {\n\t\tthrow new MeteorError('error-role-protected', 'Role is protected');\n\t}\n\n\tif (roleData.name) {\n\t\tconst otherRole = await Roles.findOneByName(roleData.name, { projection: { _id: 1 } });\n\t\tif (otherRole && otherRole._id !== role._id) {\n\t\t\tthrow new MeteorError('error-duplicate-role-names-not-allowed', 'Role name already exists');\n\t\t}\n\t} else {\n\t\troleData.name = role.name;\n\t}\n\n\tif (roleData.scope) {\n\t\tif (!isValidRoleScope(roleData.scope)) {\n\t\t\tthrow new MeteorError('error-invalid-scope', 'Invalid scope');\n\t\t}\n\t} else {\n\t\troleData.scope = role.scope;\n\t}\n\n\tawait Roles.updateById(roleId, roleData.name, roleData.scope, roleData.description, roleData.mandatory2fa);\n\n\tvoid notifyOnRoleChangedById(roleId);\n\n\tif (options.broadcastUpdate) {\n\t\tvoid api.broadcast('user.roleUpdate', {\n\t\t\ttype: 'changed',\n\t\t\t_id: roleId,\n\t\t\tscope: roleData.scope,\n\t\t});\n\t}\n\n\tconst updatedRole = await Roles.findOneById(roleId);\n\tif (!updatedRole) {\n\t\tthrow new MeteorError('error-role-not-found', 'Role not found');\n\t}\n\n\treturn updatedRole;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/lib/roles/updateRole.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/lib/roles/updateRole.ts","inputSourceMap":{"version":3,"file":"ee/server/lib/roles/updateRole.ts","sourceRoot":"","sources":["ee/server/lib/roles/updateRole.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AAE9D,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,OAAO,EAAE,uBAAuB,EAAE,MAAM,+CAA+C,CAAC;AACxF,OAAO,EAAE,gBAAgB,EAAE,MAAM,wCAAwC,CAAC;AAM1E,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,EAAE,MAAoB,EAAE,QAA4B,EAAE,UAA6B,EAAE,EAAkB,EAAE;IACvI,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAE7C,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,WAAW,CAAC,sBAAsB,EAAE,0BAA0B,CAAC,CAAC;IAC3E,CAAC;IAED,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;QAC7H,MAAM,IAAI,WAAW,CAAC,sBAAsB,EAAE,mBAAmB,CAAC,CAAC;IACpE,CAAC;IAED,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;QACnB,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACvF,IAAI,SAAS,IAAI,SAAS,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,EAAE,CAAC;YAC7C,MAAM,IAAI,WAAW,CAAC,wCAAwC,EAAE,0BAA0B,CAAC,CAAC;QAC7F,CAAC;IACF,CAAC;SAAM,CAAC;QACP,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC3B,CAAC;IAED,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YACvC,MAAM,IAAI,WAAW,CAAC,qBAAqB,EAAE,eAAe,CAAC,CAAC;QAC/D,CAAC;IACF,CAAC;SAAM,CAAC;QACP,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC7B,CAAC;IAED,MAAM,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC;IAE3G,KAAK,uBAAuB,CAAC,MAAM,CAAC,CAAC;IAErC,IAAI,OAAO,CAAC,eAAe,EAAE,CAAC;QAC7B,KAAK,GAAG,CAAC,SAAS,CAAC,iBAAiB,EAAE;YACrC,IAAI,EAAE,SAAS;YACf,GAAG,EAAE,MAAM;YACX,KAAK,EAAE,QAAQ,CAAC,KAAK;SACrB,CAAC,CAAC;IACJ,CAAC;IAED,MAAM,WAAW,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACpD,IAAI,CAAC,WAAW,EAAE,CAAC;QAClB,MAAM,IAAI,WAAW,CAAC,sBAAsB,EAAE,gBAAgB,CAAC,CAAC;IACjE,CAAC;IAED,OAAO,WAAW,CAAC;AACpB,CAAC,CAAC","sourcesContent":["import { api, MeteorError } from '@rocket.chat/core-services';\nimport type { IRole } from '@rocket.chat/core-typings';\nimport { Roles } from '@rocket.chat/models';\n\nimport { notifyOnRoleChangedById } from '../../../../app/lib/server/lib/notifyListener';\nimport { isValidRoleScope } from '../../../../lib/roles/isValidRoleScope';\n\ntype UpdateRoleOptions = {\n\tbroadcastUpdate?: boolean;\n};\n\nexport const updateRole = async (roleId: IRole['_id'], roleData: Omit<IRole, '_id'>, options: UpdateRoleOptions = {}): Promise<IRole> => {\n\tconst role = await Roles.findOneById(roleId);\n\n\tif (!role) {\n\t\tthrow new MeteorError('error-invalid-roleId', 'This role does not exist');\n\t}\n\n\tif (role.protected && ((roleData.name && roleData.name !== role.name) || (roleData.scope && roleData.scope !== role.scope))) {\n\t\tthrow new MeteorError('error-role-protected', 'Role is protected');\n\t}\n\n\tif (roleData.name) {\n\t\tconst otherRole = await Roles.findOneByName(roleData.name, { projection: { _id: 1 } });\n\t\tif (otherRole && otherRole._id !== role._id) {\n\t\t\tthrow new MeteorError('error-duplicate-role-names-not-allowed', 'Role name already exists');\n\t\t}\n\t} else {\n\t\troleData.name = role.name;\n\t}\n\n\tif (roleData.scope) {\n\t\tif (!isValidRoleScope(roleData.scope)) {\n\t\t\tthrow new MeteorError('error-invalid-scope', 'Invalid scope');\n\t\t}\n\t} else {\n\t\troleData.scope = role.scope;\n\t}\n\n\tawait Roles.updateById(roleId, roleData.name, roleData.scope, roleData.description, roleData.mandatory2fa);\n\n\tvoid notifyOnRoleChangedById(roleId);\n\n\tif (options.broadcastUpdate) {\n\t\tvoid api.broadcast('user.roleUpdate', {\n\t\t\ttype: 'changed',\n\t\t\t_id: roleId,\n\t\t\tscope: roleData.scope,\n\t\t});\n\t}\n\n\tconst updatedRole = await Roles.findOneById(roleId);\n\tif (!updatedRole) {\n\t\tthrow new MeteorError('error-role-not-found', 'Role not found');\n\t}\n\n\treturn updatedRole;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      updateRole: () => updateRole\n    });\n    let api, MeteorError;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      },\n      MeteorError(v) {\n        MeteorError = v;\n      }\n    }, 0);\n    let Roles;\n    module.link(\"@rocket.chat/models\", {\n      Roles(v) {\n        Roles = v;\n      }\n    }, 1);\n    let notifyOnRoleChangedById;\n    module.link(\"../../../../app/lib/server/lib/notifyListener\", {\n      notifyOnRoleChangedById(v) {\n        notifyOnRoleChangedById = v;\n      }\n    }, 2);\n    let isValidRoleScope;\n    module.link(\"../../../../lib/roles/isValidRoleScope\", {\n      isValidRoleScope(v) {\n        isValidRoleScope = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const updateRole = async function (roleId, roleData) {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const role = await Roles.findOneById(roleId);\n      if (!role) {\n        throw new MeteorError('error-invalid-roleId', 'This role does not exist');\n      }\n      if (role.protected && (roleData.name && roleData.name !== role.name || roleData.scope && roleData.scope !== role.scope)) {\n        throw new MeteorError('error-role-protected', 'Role is protected');\n      }\n      if (roleData.name) {\n        const otherRole = await Roles.findOneByName(roleData.name, {\n          projection: {\n            _id: 1\n          }\n        });\n        if (otherRole && otherRole._id !== role._id) {\n          throw new MeteorError('error-duplicate-role-names-not-allowed', 'Role name already exists');\n        }\n      } else {\n        roleData.name = role.name;\n      }\n      if (roleData.scope) {\n        if (!isValidRoleScope(roleData.scope)) {\n          throw new MeteorError('error-invalid-scope', 'Invalid scope');\n        }\n      } else {\n        roleData.scope = role.scope;\n      }\n      await Roles.updateById(roleId, roleData.name, roleData.scope, roleData.description, roleData.mandatory2fa);\n      void notifyOnRoleChangedById(roleId);\n      if (options.broadcastUpdate) {\n        void api.broadcast('user.roleUpdate', {\n          type: 'changed',\n          _id: roleId,\n          scope: roleData.scope\n        });\n      }\n      const updatedRole = await Roles.findOneById(roleId);\n      if (!updatedRole) {\n        throw new MeteorError('error-role-not-found', 'Role not found');\n      }\n      return updatedRole;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","updateRole","api","MeteorError","link","v","Roles","notifyOnRoleChangedById","isValidRoleScope","__reifyWaitForDeps__","roleId","roleData","options","arguments","length","undefined","role","findOneById","protected","name","scope","otherRole","findOneByName","projection","_id","updateById","description","mandatory2fa","broadcastUpdate","broadcast","type","updatedRole","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/lib/roles/updateRole.ts"],"sourcesContent":["import { api, MeteorError } from '@rocket.chat/core-services';\nimport type { IRole } from '@rocket.chat/core-typings';\nimport { Roles } from '@rocket.chat/models';\n\nimport { notifyOnRoleChangedById } from '../../../../app/lib/server/lib/notifyListener';\nimport { isValidRoleScope } from '../../../../lib/roles/isValidRoleScope';\n\ntype UpdateRoleOptions = {\n\tbroadcastUpdate?: boolean;\n};\n\nexport const updateRole = async (roleId: IRole['_id'], roleData: Omit<IRole, '_id'>, options: UpdateRoleOptions = {}): Promise<IRole> => {\n\tconst role = await Roles.findOneById(roleId);\n\n\tif (!role) {\n\t\tthrow new MeteorError('error-invalid-roleId', 'This role does not exist');\n\t}\n\n\tif (role.protected && ((roleData.name && roleData.name !== role.name) || (roleData.scope && roleData.scope !== role.scope))) {\n\t\tthrow new MeteorError('error-role-protected', 'Role is protected');\n\t}\n\n\tif (roleData.name) {\n\t\tconst otherRole = await Roles.findOneByName(roleData.name, { projection: { _id: 1 } });\n\t\tif (otherRole && otherRole._id !== role._id) {\n\t\t\tthrow new MeteorError('error-duplicate-role-names-not-allowed', 'Role name already exists');\n\t\t}\n\t} else {\n\t\troleData.name = role.name;\n\t}\n\n\tif (roleData.scope) {\n\t\tif (!isValidRoleScope(roleData.scope)) {\n\t\t\tthrow new MeteorError('error-invalid-scope', 'Invalid scope');\n\t\t}\n\t} else {\n\t\troleData.scope = role.scope;\n\t}\n\n\tawait Roles.updateById(roleId, roleData.name, roleData.scope, roleData.description, roleData.mandatory2fa);\n\n\tvoid notifyOnRoleChangedById(roleId);\n\n\tif (options.broadcastUpdate) {\n\t\tvoid api.broadcast('user.roleUpdate', {\n\t\t\ttype: 'changed',\n\t\t\t_id: roleId,\n\t\t\tscope: roleData.scope,\n\t\t});\n\t}\n\n\tconst updatedRole = await Roles.findOneById(roleId);\n\tif (!updatedRole) {\n\t\tthrow new MeteorError('error-role-not-found', 'Role not found');\n\t}\n\n\treturn updatedRole;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"5d99be8f5120d88d5d29a8b312b7e0c8ec435432"}
