{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/header/hooks/useSearchItems.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/sidebarv2/header/hooks/useSearchItems.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/header/hooks/useSearchItems.ts","inputSourceMap":{"version":3,"file":"client/sidebarv2/header/hooks/useSearchItems.ts","sourceRoot":"","sources":["client/sidebarv2/header/hooks/useSearchItems.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { useMethod, useUserSubscriptions } from '@rocket.chat/ui-contexts';\nimport { useQuery, type UseQueryResult } from '@tanstack/react-query';\nimport { useMemo } from 'react';\n\nimport { getConfig } from '../../../lib/utils/getConfig';\n\nconst LIMIT = parseInt(String(getConfig('Sidebar_Search_Spotlight_LIMIT', 20)));\n\nconst options = {\n\tsort: {\n\t\tlm: -1,\n\t\tname: 1,\n\t},\n\tlimit: LIMIT,\n} as const;\n\nexport const useSearchItems = (filterText: string): UseQueryResult<(ISubscription & IRoom)[] | undefined, Error> => {\n\tconst [, mention, name] = useMemo(() => filterText.match(/(@|#)?(.*)/i) || [], [filterText]);\n\tconst query = useMemo(() => {\n\t\tconst filterRegex = new RegExp(escapeRegExp(name), 'i');\n\n\t\treturn {\n\t\t\t$or: [{ name: filterRegex }, { fname: filterRegex }],\n\t\t\t...(mention && {\n\t\t\t\tt: mention === '@' ? 'd' : { $ne: 'd' },\n\t\t\t}),\n\t\t};\n\t}, [name, mention]);\n\n\tconst localRooms = useUserSubscriptions(query, options);\n\n\tconst usernamesFromClient = [...localRooms?.map(({ t, name }) => (t === 'd' ? name : null))].filter(Boolean) as string[];\n\n\tconst searchForChannels = mention === '#';\n\tconst searchForDMs = mention === '@';\n\n\tconst type = useMemo(() => {\n\t\tif (searchForChannels) {\n\t\t\treturn { users: false, rooms: true, includeFederatedRooms: true };\n\t\t}\n\t\tif (searchForDMs) {\n\t\t\treturn { users: true, rooms: false };\n\t\t}\n\t\treturn { users: true, rooms: true, includeFederatedRooms: true };\n\t}, [searchForChannels, searchForDMs]);\n\n\tconst getSpotlight = useMethod('spotlight');\n\n\treturn useQuery(\n\t\t['sidebar/search/spotlight', name, usernamesFromClient, type, localRooms.map(({ _id, name }) => _id + name)],\n\t\tasync () => {\n\t\t\tif (localRooms.length === LIMIT) {\n\t\t\t\treturn localRooms;\n\t\t\t}\n\n\t\t\tconst spotlight = await getSpotlight(name, usernamesFromClient, type);\n\n\t\t\tconst filterUsersUnique = ({ _id }: { _id: string }, index: number, arr: { _id: string }[]): boolean =>\n\t\t\t\tindex === arr.findIndex((user) => _id === user._id);\n\n\t\t\tconst roomFilter = (room: { t: string; uids?: string[]; _id: string; name?: string }): boolean =>\n\t\t\t\t!localRooms.find(\n\t\t\t\t\t(item) =>\n\t\t\t\t\t\t(room.t === 'd' && room.uids && room.uids.length > 1 && room.uids?.includes(item._id)) ||\n\t\t\t\t\t\t[item.rid, item._id].includes(room._id),\n\t\t\t\t);\n\t\t\tconst usersFilter = (user: { _id: string }): boolean =>\n\t\t\t\t!localRooms.find((room) => room.t === 'd' && room.uids && room.uids?.length === 2 && room.uids.includes(user._id));\n\n\t\t\tconst userMap = (user: {\n\t\t\t\t_id: string;\n\t\t\t\tname: string;\n\t\t\t\tusername: string;\n\t\t\t\tavatarETag?: string;\n\t\t\t}): {\n\t\t\t\t_id: string;\n\t\t\t\tt: string;\n\t\t\t\tname: string;\n\t\t\t\tfname: string;\n\t\t\t\tavatarETag?: string;\n\t\t\t} => ({\n\t\t\t\t_id: user._id,\n\t\t\t\tt: 'd',\n\t\t\t\tname: user.username,\n\t\t\t\tfname: user.name,\n\t\t\t\tavatarETag: user.avatarETag,\n\t\t\t});\n\n\t\t\ttype resultsFromServerType = {\n\t\t\t\t_id: string;\n\t\t\t\tt: string;\n\t\t\t\tname: string;\n\t\t\t\tteamMain?: boolean;\n\t\t\t\tfname?: string;\n\t\t\t\tavatarETag?: string | undefined;\n\t\t\t\tuids?: string[] | undefined;\n\t\t\t}[];\n\n\t\t\tconst resultsFromServer: resultsFromServerType = [];\n\t\t\tresultsFromServer.push(...spotlight.users.filter(filterUsersUnique).filter(usersFilter).map(userMap));\n\t\t\tresultsFromServer.push(...spotlight.rooms.filter(roomFilter));\n\n\t\t\tconst exact = resultsFromServer?.filter((item) => [item.name, item.fname].includes(name));\n\t\t\treturn Array.from(new Set([...exact, ...localRooms, ...resultsFromServer]));\n\t\t},\n\t\t{\n\t\t\tstaleTime: 60_000,\n\t\t\tkeepPreviousData: true,\n\t\t\tplaceholderData: localRooms,\n\t\t},\n\t);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/sidebarv2/header/hooks/useSearchItems.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/sidebarv2/header/hooks/useSearchItems.ts","inputSourceMap":{"version":3,"file":"client/sidebarv2/header/hooks/useSearchItems.ts","sourceRoot":"","sources":["client/sidebarv2/header/hooks/useSearchItems.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { useMethod, useUserSubscriptions } from '@rocket.chat/ui-contexts';\nimport { useQuery, type UseQueryResult } from '@tanstack/react-query';\nimport { useMemo } from 'react';\n\nimport { getConfig } from '../../../lib/utils/getConfig';\n\nconst LIMIT = parseInt(String(getConfig('Sidebar_Search_Spotlight_LIMIT', 20)));\n\nconst options = {\n\tsort: {\n\t\tlm: -1,\n\t\tname: 1,\n\t},\n\tlimit: LIMIT,\n} as const;\n\nexport const useSearchItems = (filterText: string): UseQueryResult<(ISubscription & IRoom)[] | undefined, Error> => {\n\tconst [, mention, name] = useMemo(() => filterText.match(/(@|#)?(.*)/i) || [], [filterText]);\n\tconst query = useMemo(() => {\n\t\tconst filterRegex = new RegExp(escapeRegExp(name), 'i');\n\n\t\treturn {\n\t\t\t$or: [{ name: filterRegex }, { fname: filterRegex }],\n\t\t\t...(mention && {\n\t\t\t\tt: mention === '@' ? 'd' : { $ne: 'd' },\n\t\t\t}),\n\t\t};\n\t}, [name, mention]);\n\n\tconst localRooms = useUserSubscriptions(query, options);\n\n\tconst usernamesFromClient = [...localRooms?.map(({ t, name }) => (t === 'd' ? name : null))].filter(Boolean) as string[];\n\n\tconst searchForChannels = mention === '#';\n\tconst searchForDMs = mention === '@';\n\n\tconst type = useMemo(() => {\n\t\tif (searchForChannels) {\n\t\t\treturn { users: false, rooms: true, includeFederatedRooms: true };\n\t\t}\n\t\tif (searchForDMs) {\n\t\t\treturn { users: true, rooms: false };\n\t\t}\n\t\treturn { users: true, rooms: true, includeFederatedRooms: true };\n\t}, [searchForChannels, searchForDMs]);\n\n\tconst getSpotlight = useMethod('spotlight');\n\n\treturn useQuery(\n\t\t['sidebar/search/spotlight', name, usernamesFromClient, type, localRooms.map(({ _id, name }) => _id + name)],\n\t\tasync () => {\n\t\t\tif (localRooms.length === LIMIT) {\n\t\t\t\treturn localRooms;\n\t\t\t}\n\n\t\t\tconst spotlight = await getSpotlight(name, usernamesFromClient, type);\n\n\t\t\tconst filterUsersUnique = ({ _id }: { _id: string }, index: number, arr: { _id: string }[]): boolean =>\n\t\t\t\tindex === arr.findIndex((user) => _id === user._id);\n\n\t\t\tconst roomFilter = (room: { t: string; uids?: string[]; _id: string; name?: string }): boolean =>\n\t\t\t\t!localRooms.find(\n\t\t\t\t\t(item) =>\n\t\t\t\t\t\t(room.t === 'd' && room.uids && room.uids.length > 1 && room.uids?.includes(item._id)) ||\n\t\t\t\t\t\t[item.rid, item._id].includes(room._id),\n\t\t\t\t);\n\t\t\tconst usersFilter = (user: { _id: string }): boolean =>\n\t\t\t\t!localRooms.find((room) => room.t === 'd' && room.uids && room.uids?.length === 2 && room.uids.includes(user._id));\n\n\t\t\tconst userMap = (user: {\n\t\t\t\t_id: string;\n\t\t\t\tname: string;\n\t\t\t\tusername: string;\n\t\t\t\tavatarETag?: string;\n\t\t\t}): {\n\t\t\t\t_id: string;\n\t\t\t\tt: string;\n\t\t\t\tname: string;\n\t\t\t\tfname: string;\n\t\t\t\tavatarETag?: string;\n\t\t\t} => ({\n\t\t\t\t_id: user._id,\n\t\t\t\tt: 'd',\n\t\t\t\tname: user.username,\n\t\t\t\tfname: user.name,\n\t\t\t\tavatarETag: user.avatarETag,\n\t\t\t});\n\n\t\t\ttype resultsFromServerType = {\n\t\t\t\t_id: string;\n\t\t\t\tt: string;\n\t\t\t\tname: string;\n\t\t\t\tteamMain?: boolean;\n\t\t\t\tfname?: string;\n\t\t\t\tavatarETag?: string | undefined;\n\t\t\t\tuids?: string[] | undefined;\n\t\t\t}[];\n\n\t\t\tconst resultsFromServer: resultsFromServerType = [];\n\t\t\tresultsFromServer.push(...spotlight.users.filter(filterUsersUnique).filter(usersFilter).map(userMap));\n\t\t\tresultsFromServer.push(...spotlight.rooms.filter(roomFilter));\n\n\t\t\tconst exact = resultsFromServer?.filter((item) => [item.name, item.fname].includes(name));\n\t\t\treturn Array.from(new Set([...exact, ...localRooms, ...resultsFromServer]));\n\t\t},\n\t\t{\n\t\t\tstaleTime: 60_000,\n\t\t\tkeepPreviousData: true,\n\t\t\tplaceholderData: localRooms,\n\t\t},\n\t);\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  useSearchItems: () => useSearchItems\n});\nlet escapeRegExp;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  }\n}, 0);\nlet useMethod, useUserSubscriptions;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useMethod(v) {\n    useMethod = v;\n  },\n  useUserSubscriptions(v) {\n    useUserSubscriptions = v;\n  }\n}, 1);\nlet useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  }\n}, 2);\nlet useMemo;\nmodule.link(\"react\", {\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 3);\nlet getConfig;\nmodule.link(\"../../../lib/utils/getConfig\", {\n  getConfig(v) {\n    getConfig = v;\n  }\n}, 4);\nconst LIMIT = parseInt(String(getConfig('Sidebar_Search_Spotlight_LIMIT', 20)));\nconst options = {\n  sort: {\n    lm: -1,\n    name: 1\n  },\n  limit: LIMIT\n};\nconst useSearchItems = filterText => {\n  const [, mention, name] = useMemo(() => filterText.match(/(@|#)?(.*)/i) || [], [filterText]);\n  const query = useMemo(() => {\n    const filterRegex = new RegExp(escapeRegExp(name), 'i');\n    return _objectSpread({\n      $or: [{\n        name: filterRegex\n      }, {\n        fname: filterRegex\n      }]\n    }, mention && {\n      t: mention === '@' ? 'd' : {\n        $ne: 'd'\n      }\n    });\n  }, [name, mention]);\n  const localRooms = useUserSubscriptions(query, options);\n  const usernamesFromClient = [...(localRooms === null || localRooms === void 0 ? void 0 : localRooms.map(_ref => {\n    let {\n      t,\n      name\n    } = _ref;\n    return t === 'd' ? name : null;\n  }))].filter(Boolean);\n  const searchForChannels = mention === '#';\n  const searchForDMs = mention === '@';\n  const type = useMemo(() => {\n    if (searchForChannels) {\n      return {\n        users: false,\n        rooms: true,\n        includeFederatedRooms: true\n      };\n    }\n    if (searchForDMs) {\n      return {\n        users: true,\n        rooms: false\n      };\n    }\n    return {\n      users: true,\n      rooms: true,\n      includeFederatedRooms: true\n    };\n  }, [searchForChannels, searchForDMs]);\n  const getSpotlight = useMethod('spotlight');\n  return useQuery(['sidebar/search/spotlight', name, usernamesFromClient, type, localRooms.map(_ref2 => {\n    let {\n      _id,\n      name\n    } = _ref2;\n    return _id + name;\n  })], async () => {\n    if (localRooms.length === LIMIT) {\n      return localRooms;\n    }\n    const spotlight = await getSpotlight(name, usernamesFromClient, type);\n    const filterUsersUnique = (_ref3, index, arr) => {\n      let {\n        _id\n      } = _ref3;\n      return index === arr.findIndex(user => _id === user._id);\n    };\n    const roomFilter = room => !localRooms.find(item => {\n      var _room$uids;\n      return room.t === 'd' && room.uids && room.uids.length > 1 && ((_room$uids = room.uids) === null || _room$uids === void 0 ? void 0 : _room$uids.includes(item._id)) || [item.rid, item._id].includes(room._id);\n    });\n    const usersFilter = user => !localRooms.find(room => {\n      var _room$uids2;\n      return room.t === 'd' && room.uids && ((_room$uids2 = room.uids) === null || _room$uids2 === void 0 ? void 0 : _room$uids2.length) === 2 && room.uids.includes(user._id);\n    });\n    const userMap = user => ({\n      _id: user._id,\n      t: 'd',\n      name: user.username,\n      fname: user.name,\n      avatarETag: user.avatarETag\n    });\n    const resultsFromServer = [];\n    resultsFromServer.push(...spotlight.users.filter(filterUsersUnique).filter(usersFilter).map(userMap));\n    resultsFromServer.push(...spotlight.rooms.filter(roomFilter));\n    const exact = resultsFromServer === null || resultsFromServer === void 0 ? void 0 : resultsFromServer.filter(item => [item.name, item.fname].includes(name));\n    return Array.from(new Set([...exact, ...localRooms, ...resultsFromServer]));\n  }, {\n    staleTime: 60_000,\n    keepPreviousData: true,\n    placeholderData: localRooms\n  });\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","useSearchItems","escapeRegExp","useMethod","useUserSubscriptions","useQuery","useMemo","getConfig","LIMIT","parseInt","String","options","sort","lm","name","limit","filterText","mention","match","query","filterRegex","RegExp","$or","fname","t","$ne","localRooms","usernamesFromClient","map","_ref","filter","Boolean","searchForChannels","searchForDMs","type","users","rooms","includeFederatedRooms","getSpotlight","_ref2","_id","length","spotlight","filterUsersUnique","_ref3","index","arr","findIndex","user","roomFilter","room","find","item","_room$uids","uids","includes","rid","usersFilter","_room$uids2","userMap","username","avatarETag","resultsFromServer","push","exact","Array","from","Set","staleTime","keepPreviousData","placeholderData"],"sources":["client/sidebarv2/header/hooks/useSearchItems.ts"],"sourcesContent":["import type { IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { useMethod, useUserSubscriptions } from '@rocket.chat/ui-contexts';\nimport { useQuery, type UseQueryResult } from '@tanstack/react-query';\nimport { useMemo } from 'react';\n\nimport { getConfig } from '../../../lib/utils/getConfig';\n\nconst LIMIT = parseInt(String(getConfig('Sidebar_Search_Spotlight_LIMIT', 20)));\n\nconst options = {\n\tsort: {\n\t\tlm: -1,\n\t\tname: 1,\n\t},\n\tlimit: LIMIT,\n} as const;\n\nexport const useSearchItems = (filterText: string): UseQueryResult<(ISubscription & IRoom)[] | undefined, Error> => {\n\tconst [, mention, name] = useMemo(() => filterText.match(/(@|#)?(.*)/i) || [], [filterText]);\n\tconst query = useMemo(() => {\n\t\tconst filterRegex = new RegExp(escapeRegExp(name), 'i');\n\n\t\treturn {\n\t\t\t$or: [{ name: filterRegex }, { fname: filterRegex }],\n\t\t\t...(mention && {\n\t\t\t\tt: mention === '@' ? 'd' : { $ne: 'd' },\n\t\t\t}),\n\t\t};\n\t}, [name, mention]);\n\n\tconst localRooms = useUserSubscriptions(query, options);\n\n\tconst usernamesFromClient = [...localRooms?.map(({ t, name }) => (t === 'd' ? name : null))].filter(Boolean) as string[];\n\n\tconst searchForChannels = mention === '#';\n\tconst searchForDMs = mention === '@';\n\n\tconst type = useMemo(() => {\n\t\tif (searchForChannels) {\n\t\t\treturn { users: false, rooms: true, includeFederatedRooms: true };\n\t\t}\n\t\tif (searchForDMs) {\n\t\t\treturn { users: true, rooms: false };\n\t\t}\n\t\treturn { users: true, rooms: true, includeFederatedRooms: true };\n\t}, [searchForChannels, searchForDMs]);\n\n\tconst getSpotlight = useMethod('spotlight');\n\n\treturn useQuery(\n\t\t['sidebar/search/spotlight', name, usernamesFromClient, type, localRooms.map(({ _id, name }) => _id + name)],\n\t\tasync () => {\n\t\t\tif (localRooms.length === LIMIT) {\n\t\t\t\treturn localRooms;\n\t\t\t}\n\n\t\t\tconst spotlight = await getSpotlight(name, usernamesFromClient, type);\n\n\t\t\tconst filterUsersUnique = ({ _id }: { _id: string }, index: number, arr: { _id: string }[]): boolean =>\n\t\t\t\tindex === arr.findIndex((user) => _id === user._id);\n\n\t\t\tconst roomFilter = (room: { t: string; uids?: string[]; _id: string; name?: string }): boolean =>\n\t\t\t\t!localRooms.find(\n\t\t\t\t\t(item) =>\n\t\t\t\t\t\t(room.t === 'd' && room.uids && room.uids.length > 1 && room.uids?.includes(item._id)) ||\n\t\t\t\t\t\t[item.rid, item._id].includes(room._id),\n\t\t\t\t);\n\t\t\tconst usersFilter = (user: { _id: string }): boolean =>\n\t\t\t\t!localRooms.find((room) => room.t === 'd' && room.uids && room.uids?.length === 2 && room.uids.includes(user._id));\n\n\t\t\tconst userMap = (user: {\n\t\t\t\t_id: string;\n\t\t\t\tname: string;\n\t\t\t\tusername: string;\n\t\t\t\tavatarETag?: string;\n\t\t\t}): {\n\t\t\t\t_id: string;\n\t\t\t\tt: string;\n\t\t\t\tname: string;\n\t\t\t\tfname: string;\n\t\t\t\tavatarETag?: string;\n\t\t\t} => ({\n\t\t\t\t_id: user._id,\n\t\t\t\tt: 'd',\n\t\t\t\tname: user.username,\n\t\t\t\tfname: user.name,\n\t\t\t\tavatarETag: user.avatarETag,\n\t\t\t});\n\n\t\t\ttype resultsFromServerType = {\n\t\t\t\t_id: string;\n\t\t\t\tt: string;\n\t\t\t\tname: string;\n\t\t\t\tteamMain?: boolean;\n\t\t\t\tfname?: string;\n\t\t\t\tavatarETag?: string | undefined;\n\t\t\t\tuids?: string[] | undefined;\n\t\t\t}[];\n\n\t\t\tconst resultsFromServer: resultsFromServerType = [];\n\t\t\tresultsFromServer.push(...spotlight.users.filter(filterUsersUnique).filter(usersFilter).map(userMap));\n\t\t\tresultsFromServer.push(...spotlight.rooms.filter(roomFilter));\n\n\t\t\tconst exact = resultsFromServer?.filter((item) => [item.name, item.fname].includes(name));\n\t\t\treturn Array.from(new Set([...exact, ...localRooms, ...resultsFromServer]));\n\t\t},\n\t\t{\n\t\t\tstaleTime: 60_000,\n\t\t\tkeepPreviousData: true,\n\t\t\tplaceholderData: localRooms,\n\t\t},\n\t);\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"5017bc0b59ca0036c92971538d6790c4c30b79f7"}
