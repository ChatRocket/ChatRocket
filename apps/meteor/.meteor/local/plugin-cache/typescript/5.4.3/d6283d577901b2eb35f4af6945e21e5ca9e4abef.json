{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/otr/client/OTRRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/otr/client/OTRRoom.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/otr/client/OTRRoom.ts","inputSourceMap":{"version":3,"file":"app/otr/client/OTRRoom.ts","sourceRoot":"","sources":["app/otr/client/OTRRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, IMessage, IUser } from '@rocket.chat/core-typings';\nimport { UserStatus } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport EJSON from 'ejson';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport GenericModal from '../../../client/components/GenericModal';\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\nimport type { UserPresence } from '../../../client/lib/presence';\nimport { Presence } from '../../../client/lib/presence';\nimport { dispatchToastMessage } from '../../../client/lib/toast';\nimport { getUidDirectMessage } from '../../../client/lib/utils/getUidDirectMessage';\nimport { goToRoomById } from '../../../client/lib/utils/goToRoomById';\nimport { sdk } from '../../utils/client/lib/SDKClient';\nimport { t } from '../../utils/lib/i18n';\nimport type { IOnUserStreamData, IOTRAlgorithm, IOTRDecrypt, IOTRRoom } from '../lib/IOTR';\nimport { OtrRoomState } from '../lib/OtrRoomState';\nimport { otrSystemMessages } from '../lib/constants';\nimport {\n\tdecryptAES,\n\tderiveBits,\n\tdigest,\n\tencryptAES,\n\texportKey,\n\tgenerateKeyPair,\n\timportKey,\n\timportKeyRaw,\n\tjoinEncryptedData,\n} from '../lib/functions';\n\nexport class OTRRoom implements IOTRRoom {\n\tprivate _userId: string;\n\n\tprivate _roomId: string;\n\n\tprivate _keyPair: CryptoKeyPair | null;\n\n\tprivate _exportedPublicKey: JsonWebKey;\n\n\tprivate _sessionKey: CryptoKey | null;\n\n\tprivate _userOnlineComputation: Tracker.Computation;\n\n\tprivate peerId: string;\n\n\tprivate state: ReactiveVar<OtrRoomState> = new ReactiveVar(OtrRoomState.NOT_STARTED);\n\n\tprivate isFirstOTR: boolean;\n\n\tprivate onPresenceEventHook: (event: UserPresence | undefined) => void;\n\n\tprotected constructor(uid: IUser['_id'], rid: IRoom['_id'], peerId: IUser['_id']) {\n\t\tthis._userId = uid;\n\t\tthis._roomId = rid;\n\t\tthis._keyPair = null;\n\t\tthis._sessionKey = null;\n\t\tthis.peerId = peerId;\n\t\tthis.isFirstOTR = true;\n\t\tthis.onPresenceEventHook = this.onPresenceEvent.bind(this);\n\t}\n\n\tpublic static create(uid: IUser['_id'], rid: IRoom['_id']): OTRRoom | undefined {\n\t\tconst peerId = getUidDirectMessage(rid);\n\n\t\tif (!peerId) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn new OTRRoom(uid, rid, peerId);\n\t}\n\n\tgetPeerId(): string {\n\t\treturn this.peerId;\n\t}\n\n\tgetState(): OtrRoomState {\n\t\treturn this.state.get();\n\t}\n\n\tsetState(nextState: OtrRoomState): void {\n\t\tif (this.getState() === nextState) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.set(nextState);\n\t}\n\n\tasync handshake(refresh?: boolean): Promise<void> {\n\t\tthis.setState(OtrRoomState.ESTABLISHING);\n\n\t\tawait this.generateKeyPair();\n\t\tsdk.publish('notify-user', [\n\t\t\t`${this.peerId}/otr`,\n\t\t\t'handshake',\n\t\t\t{\n\t\t\t\troomId: this._roomId,\n\t\t\t\tuserId: this._userId,\n\t\t\t\tpublicKey: EJSON.stringify(this._exportedPublicKey),\n\t\t\t\trefresh,\n\t\t\t},\n\t\t]);\n\n\t\tif (refresh) {\n\t\t\tconst user = Meteor.user();\n\t\t\tif (!user) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait sdk.rest.post('/v1/chat.otr', {\n\t\t\t\troomId: this._roomId,\n\t\t\t\ttype: otrSystemMessages.USER_REQUESTED_OTR_KEY_REFRESH,\n\t\t\t});\n\t\t\tthis.isFirstOTR = false;\n\t\t}\n\t}\n\n\tonPresenceEvent(event: UserPresence | undefined): void {\n\t\tif (!event) {\n\t\t\treturn;\n\t\t}\n\t\tif (event.status !== UserStatus.OFFLINE) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.warn(`OTR Room ${this._roomId} ended because ${this.peerId} went offline`);\n\t\tthis.end();\n\n\t\timperativeModal.open({\n\t\t\tcomponent: GenericModal,\n\t\t\tprops: {\n\t\t\t\tvariant: 'warning',\n\t\t\t\ttitle: t('OTR'),\n\t\t\t\tchildren: t('OTR_Session_ended_other_user_went_offline', { username: event.username }),\n\t\t\t\tconfirmText: t('Ok'),\n\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\tonConfirm: imperativeModal.close,\n\t\t\t},\n\t\t});\n\t}\n\n\t// Starts listening to other user's status changes and end OTR if any of the Users goes offline\n\t// this should be called in 2 places: on acknowledge (meaning user accepted OTR) or on establish (meaning user initiated OTR)\n\tlistenToUserStatus(): void {\n\t\tPresence.listen(this.peerId, this.onPresenceEventHook);\n\t}\n\n\tacknowledge(): void {\n\t\tvoid sdk.rest.post('/v1/statistics.telemetry', { params: [{ eventName: 'otrStats', timestamp: Date.now(), rid: this._roomId }] });\n\n\t\tsdk.publish('notify-user', [\n\t\t\t`${this.peerId}/otr`,\n\t\t\t'acknowledge',\n\t\t\t{\n\t\t\t\troomId: this._roomId,\n\t\t\t\tuserId: this._userId,\n\t\t\t\tpublicKey: EJSON.stringify(this._exportedPublicKey),\n\t\t\t},\n\t\t]);\n\t}\n\n\tdeny(): void {\n\t\tthis.reset();\n\t\tthis.setState(OtrRoomState.DECLINED);\n\t\tsdk.publish('notify-user', [\n\t\t\t`${this.peerId}/otr`,\n\t\t\t'deny',\n\t\t\t{\n\t\t\t\troomId: this._roomId,\n\t\t\t\tuserId: this._userId,\n\t\t\t},\n\t\t]);\n\t}\n\n\tsoftReset(): void {\n\t\tthis.isFirstOTR = true;\n\t\tthis.setState(OtrRoomState.NOT_STARTED);\n\t\tthis._keyPair = null;\n\t\tthis._exportedPublicKey = {};\n\t\tthis._sessionKey = null;\n\t}\n\n\tend(): void {\n\t\tthis.isFirstOTR = true;\n\t\tthis.reset();\n\t\tthis.setState(OtrRoomState.NOT_STARTED);\n\t\tPresence.stop(this.peerId, this.onPresenceEventHook);\n\t\tsdk.publish('notify-user', [\n\t\t\t`${this.peerId}/otr`,\n\t\t\t'end',\n\t\t\t{\n\t\t\t\troomId: this._roomId,\n\t\t\t\tuserId: this._userId,\n\t\t\t},\n\t\t]);\n\t}\n\n\treset(): void {\n\t\tthis._keyPair = null;\n\t\tthis._exportedPublicKey = {};\n\t\tthis._sessionKey = null;\n\t\tvoid sdk.call('deleteOldOTRMessages', this._roomId);\n\t}\n\n\tasync generateKeyPair(): Promise<void> {\n\t\tif (this._userOnlineComputation) {\n\t\t\tthis._userOnlineComputation.stop();\n\t\t}\n\n\t\tthis._userOnlineComputation = Tracker.autorun(() => {\n\t\t\tconst $room = document.querySelector(`#chat-window-${this._roomId}`);\n\t\t\tconst $title = $room?.querySelector('.rc-header__title');\n\t\t\tif (this.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\t\tif ($room && $title && !$title.querySelector('.otr-icon')) {\n\t\t\t\t\t$title.prepend(\"<i class='otr-icon icon-key'></i>\");\n\t\t\t\t}\n\t\t\t} else if ($title) {\n\t\t\t\t$title.querySelector('.otr-icon')?.remove();\n\t\t\t}\n\t\t});\n\t\ttry {\n\t\t\t// Generate an ephemeral key pair.\n\t\t\tthis._keyPair = await generateKeyPair();\n\n\t\t\tif (!this._keyPair.publicKey) {\n\t\t\t\tthrow new Error('Public key is not generated');\n\t\t\t}\n\n\t\t\tthis._exportedPublicKey = await exportKey(this._keyPair.publicKey);\n\n\t\t\t// Once we have generated new keys, it's safe to delete old messages\n\t\t\tvoid sdk.call('deleteOldOTRMessages', this._roomId);\n\t\t} catch (e) {\n\t\t\tthis.setState(OtrRoomState.ERROR);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tasync importPublicKey(publicKey: string): Promise<void> {\n\t\ttry {\n\t\t\tif (!this._keyPair) throw new Error('No key pair');\n\t\t\tconst publicKeyObject: JsonWebKey = EJSON.parse(publicKey);\n\t\t\tconst peerPublicKey = await importKey(publicKeyObject);\n\t\t\tconst ecdhObj: IOTRAlgorithm = {\n\t\t\t\tname: 'ECDH',\n\t\t\t\tnamedCurve: 'P-256',\n\t\t\t\tpublic: peerPublicKey,\n\t\t\t};\n\t\t\tconst bits = await deriveBits({ ecdhObj, _keyPair: this._keyPair });\n\t\t\tconst hashedBits = await digest(bits);\n\t\t\t// We truncate the hash to 128 bits.\n\t\t\tconst sessionKeyData = new Uint8Array(hashedBits).slice(0, 16);\n\t\t\t// Session key available.\n\t\t\tthis._sessionKey = await importKeyRaw(sessionKeyData);\n\t\t} catch (e) {\n\t\t\tthis.setState(OtrRoomState.ERROR);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tasync encryptText(data: string | Uint8Array): Promise<string> {\n\t\tif (typeof data === 'string') {\n\t\t\tdata = new TextEncoder().encode(EJSON.stringify({ text: data, ack: Random.id((Random.fraction() + 1) * 20) }));\n\t\t}\n\t\ttry {\n\t\t\tif (!this._sessionKey) throw new Error('Session Key not available');\n\n\t\t\tconst iv = crypto.getRandomValues(new Uint8Array(12));\n\t\t\tconst encryptedData = await encryptAES({ iv, _sessionKey: this._sessionKey, data });\n\n\t\t\tconst output = joinEncryptedData({ encryptedData, iv });\n\n\t\t\treturn EJSON.stringify(output);\n\t\t} catch (e) {\n\t\t\tthis.setState(OtrRoomState.ERROR);\n\t\t\tthrow new Meteor.Error('encryption-error', 'Encryption error.');\n\t\t}\n\t}\n\n\tasync encrypt(message: Pick<IMessage, '_id' | 'msg'>): Promise<string> {\n\t\ttry {\n\t\t\tconst data = new TextEncoder().encode(\n\t\t\t\tEJSON.stringify({\n\t\t\t\t\t_id: message._id,\n\t\t\t\t\ttext: message.msg,\n\t\t\t\t\tuserId: this._userId,\n\t\t\t\t\tack: Random.id((Random.fraction() + 1) * 20),\n\t\t\t\t\tts: new Date(),\n\t\t\t\t}),\n\t\t\t);\n\t\t\tconst enc = await this.encryptText(data);\n\t\t\treturn enc;\n\t\t} catch (e) {\n\t\t\tthrow new Meteor.Error('encryption-error', 'Encryption error.');\n\t\t}\n\t}\n\n\tasync decrypt(message: string): Promise<IOTRDecrypt | string> {\n\t\ttry {\n\t\t\tif (!this._sessionKey) throw new Error('Session Key not available.');\n\n\t\t\tconst cipherText: Uint8Array = EJSON.parse(message);\n\t\t\tconst data = await decryptAES(cipherText, this._sessionKey);\n\t\t\tconst msgDecoded: IOTRDecrypt = EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(data)));\n\t\t\tif (msgDecoded && typeof msgDecoded === 'object') {\n\t\t\t\treturn msgDecoded;\n\t\t\t}\n\t\t\treturn message;\n\t\t} catch (e) {\n\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\tthis.setState(OtrRoomState.ERROR);\n\t\t\treturn message;\n\t\t}\n\t}\n\n\tasync onUserStream(type: string, data: IOnUserStreamData): Promise<void> {\n\t\tswitch (type) {\n\t\t\tcase 'handshake':\n\t\t\t\tlet timeout: NodeJS.Timeout;\n\n\t\t\t\tconst establishConnection = async (): Promise<void> => {\n\t\t\t\t\tthis.setState(OtrRoomState.ESTABLISHING);\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!data.publicKey) throw new Error('Public key is not generated');\n\t\t\t\t\t\tawait this.generateKeyPair();\n\t\t\t\t\t\tawait this.importPublicKey(data.publicKey);\n\t\t\t\t\t\tawait goToRoomById(data.roomId);\n\t\t\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\t\t\tthis.setState(OtrRoomState.ESTABLISHED);\n\t\t\t\t\t\t\tthis.acknowledge();\n\t\t\t\t\t\t\tthis.listenToUserStatus();\n\n\t\t\t\t\t\t\tif (data.refresh) {\n\t\t\t\t\t\t\t\tawait sdk.rest.post('/v1/chat.otr', {\n\t\t\t\t\t\t\t\t\troomId: this._roomId,\n\t\t\t\t\t\t\t\t\ttype: otrSystemMessages.USER_KEY_REFRESHED_SUCCESSFULLY,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\t\t\tthrow new Meteor.Error('establish-connection-error', 'Establish connection error.');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst closeOrCancelModal = (): void => {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\tthis.deny();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t};\n\n\t\t\t\ttry {\n\t\t\t\t\tconst obj = await Presence.get(data.userId);\n\t\t\t\t\tif (!obj?.username) {\n\t\t\t\t\t\tthrow new Meteor.Error('user-not-defined', 'User not defined.');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.refresh && this.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\tawait establishConnection();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* \tWe have to check if there's an in progress handshake request because\n\t\t\t\t\t\t\tNotifications.notifyUser will sometimes dispatch 2 events */\n\t\t\t\t\t\tif (this.getState() === OtrRoomState.REQUESTED) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.setState(OtrRoomState.REQUESTED);\n\t\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\t\t\ttitle: t('OTR'),\n\t\t\t\t\t\t\t\tchildren: t('Username_wants_to_start_otr_Do_you_want_to_accept', {\n\t\t\t\t\t\t\t\t\tusername: obj.username,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tconfirmText: t('Yes'),\n\t\t\t\t\t\t\t\tcancelText: t('No'),\n\t\t\t\t\t\t\t\tonClose: (): void => closeOrCancelModal(),\n\t\t\t\t\t\t\t\tonCancel: (): void => closeOrCancelModal(),\n\t\t\t\t\t\t\t\tonConfirm: async (): Promise<void> => {\n\t\t\t\t\t\t\t\t\tawait establishConnection();\n\t\t\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttimeout = setTimeout(() => {\n\t\t\t\t\t\t\tthis.setState(OtrRoomState.TIMEOUT);\n\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t}, 10000);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'acknowledge':\n\t\t\t\ttry {\n\t\t\t\t\tif (!data.publicKey) throw new Error('Public key is not generated');\n\t\t\t\t\tawait this.importPublicKey(data.publicKey);\n\n\t\t\t\t\tthis.setState(OtrRoomState.ESTABLISHED);\n\n\t\t\t\t\tif (this.isFirstOTR) {\n\t\t\t\t\t\tthis.listenToUserStatus();\n\t\t\t\t\t\tawait sdk.rest.post('/v1/chat.otr', {\n\t\t\t\t\t\t\troomId: this._roomId,\n\t\t\t\t\t\t\ttype: otrSystemMessages.USER_JOINED_OTR,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis.isFirstOTR = false;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'deny':\n\t\t\t\tif (this.getState() === OtrRoomState.ESTABLISHING) {\n\t\t\t\t\tthis.reset();\n\t\t\t\t\tthis.setState(OtrRoomState.DECLINED);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\ttry {\n\t\t\t\t\tconst obj = await Presence.get(this.peerId);\n\t\t\t\t\tif (!obj?.username) {\n\t\t\t\t\t\tthrow new Meteor.Error('user-not-defined', 'User not defined.');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\tthis.setState(OtrRoomState.NOT_STARTED);\n\t\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\t\t\ttitle: t('OTR'),\n\t\t\t\t\t\t\t\tchildren: t('Username_ended_the_OTR_session', { username: obj.username }),\n\t\t\t\t\t\t\t\tconfirmText: t('Ok'),\n\t\t\t\t\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\t\t\t\t\tonConfirm: imperativeModal.close,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/otr/client/OTRRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/otr/client/OTRRoom.ts","inputSourceMap":{"version":3,"file":"app/otr/client/OTRRoom.ts","sourceRoot":"","sources":["app/otr/client/OTRRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, IMessage, IUser } from '@rocket.chat/core-typings';\nimport { UserStatus } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport EJSON from 'ejson';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport GenericModal from '../../../client/components/GenericModal';\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\nimport type { UserPresence } from '../../../client/lib/presence';\nimport { Presence } from '../../../client/lib/presence';\nimport { dispatchToastMessage } from '../../../client/lib/toast';\nimport { getUidDirectMessage } from '../../../client/lib/utils/getUidDirectMessage';\nimport { goToRoomById } from '../../../client/lib/utils/goToRoomById';\nimport { sdk } from '../../utils/client/lib/SDKClient';\nimport { t } from '../../utils/lib/i18n';\nimport type { IOnUserStreamData, IOTRAlgorithm, IOTRDecrypt, IOTRRoom } from '../lib/IOTR';\nimport { OtrRoomState } from '../lib/OtrRoomState';\nimport { otrSystemMessages } from '../lib/constants';\nimport {\n\tdecryptAES,\n\tderiveBits,\n\tdigest,\n\tencryptAES,\n\texportKey,\n\tgenerateKeyPair,\n\timportKey,\n\timportKeyRaw,\n\tjoinEncryptedData,\n} from '../lib/functions';\n\nexport class OTRRoom implements IOTRRoom {\n\tprivate _userId: string;\n\n\tprivate _roomId: string;\n\n\tprivate _keyPair: CryptoKeyPair | null;\n\n\tprivate _exportedPublicKey: JsonWebKey;\n\n\tprivate _sessionKey: CryptoKey | null;\n\n\tprivate _userOnlineComputation: Tracker.Computation;\n\n\tprivate peerId: string;\n\n\tprivate state: ReactiveVar<OtrRoomState> = new ReactiveVar(OtrRoomState.NOT_STARTED);\n\n\tprivate isFirstOTR: boolean;\n\n\tprivate onPresenceEventHook: (event: UserPresence | undefined) => void;\n\n\tprotected constructor(uid: IUser['_id'], rid: IRoom['_id'], peerId: IUser['_id']) {\n\t\tthis._userId = uid;\n\t\tthis._roomId = rid;\n\t\tthis._keyPair = null;\n\t\tthis._sessionKey = null;\n\t\tthis.peerId = peerId;\n\t\tthis.isFirstOTR = true;\n\t\tthis.onPresenceEventHook = this.onPresenceEvent.bind(this);\n\t}\n\n\tpublic static create(uid: IUser['_id'], rid: IRoom['_id']): OTRRoom | undefined {\n\t\tconst peerId = getUidDirectMessage(rid);\n\n\t\tif (!peerId) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn new OTRRoom(uid, rid, peerId);\n\t}\n\n\tgetPeerId(): string {\n\t\treturn this.peerId;\n\t}\n\n\tgetState(): OtrRoomState {\n\t\treturn this.state.get();\n\t}\n\n\tsetState(nextState: OtrRoomState): void {\n\t\tif (this.getState() === nextState) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.set(nextState);\n\t}\n\n\tasync handshake(refresh?: boolean): Promise<void> {\n\t\tthis.setState(OtrRoomState.ESTABLISHING);\n\n\t\tawait this.generateKeyPair();\n\t\tsdk.publish('notify-user', [\n\t\t\t`${this.peerId}/otr`,\n\t\t\t'handshake',\n\t\t\t{\n\t\t\t\troomId: this._roomId,\n\t\t\t\tuserId: this._userId,\n\t\t\t\tpublicKey: EJSON.stringify(this._exportedPublicKey),\n\t\t\t\trefresh,\n\t\t\t},\n\t\t]);\n\n\t\tif (refresh) {\n\t\t\tconst user = Meteor.user();\n\t\t\tif (!user) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait sdk.rest.post('/v1/chat.otr', {\n\t\t\t\troomId: this._roomId,\n\t\t\t\ttype: otrSystemMessages.USER_REQUESTED_OTR_KEY_REFRESH,\n\t\t\t});\n\t\t\tthis.isFirstOTR = false;\n\t\t}\n\t}\n\n\tonPresenceEvent(event: UserPresence | undefined): void {\n\t\tif (!event) {\n\t\t\treturn;\n\t\t}\n\t\tif (event.status !== UserStatus.OFFLINE) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.warn(`OTR Room ${this._roomId} ended because ${this.peerId} went offline`);\n\t\tthis.end();\n\n\t\timperativeModal.open({\n\t\t\tcomponent: GenericModal,\n\t\t\tprops: {\n\t\t\t\tvariant: 'warning',\n\t\t\t\ttitle: t('OTR'),\n\t\t\t\tchildren: t('OTR_Session_ended_other_user_went_offline', { username: event.username }),\n\t\t\t\tconfirmText: t('Ok'),\n\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\tonConfirm: imperativeModal.close,\n\t\t\t},\n\t\t});\n\t}\n\n\t// Starts listening to other user's status changes and end OTR if any of the Users goes offline\n\t// this should be called in 2 places: on acknowledge (meaning user accepted OTR) or on establish (meaning user initiated OTR)\n\tlistenToUserStatus(): void {\n\t\tPresence.listen(this.peerId, this.onPresenceEventHook);\n\t}\n\n\tacknowledge(): void {\n\t\tvoid sdk.rest.post('/v1/statistics.telemetry', { params: [{ eventName: 'otrStats', timestamp: Date.now(), rid: this._roomId }] });\n\n\t\tsdk.publish('notify-user', [\n\t\t\t`${this.peerId}/otr`,\n\t\t\t'acknowledge',\n\t\t\t{\n\t\t\t\troomId: this._roomId,\n\t\t\t\tuserId: this._userId,\n\t\t\t\tpublicKey: EJSON.stringify(this._exportedPublicKey),\n\t\t\t},\n\t\t]);\n\t}\n\n\tdeny(): void {\n\t\tthis.reset();\n\t\tthis.setState(OtrRoomState.DECLINED);\n\t\tsdk.publish('notify-user', [\n\t\t\t`${this.peerId}/otr`,\n\t\t\t'deny',\n\t\t\t{\n\t\t\t\troomId: this._roomId,\n\t\t\t\tuserId: this._userId,\n\t\t\t},\n\t\t]);\n\t}\n\n\tsoftReset(): void {\n\t\tthis.isFirstOTR = true;\n\t\tthis.setState(OtrRoomState.NOT_STARTED);\n\t\tthis._keyPair = null;\n\t\tthis._exportedPublicKey = {};\n\t\tthis._sessionKey = null;\n\t}\n\n\tend(): void {\n\t\tthis.isFirstOTR = true;\n\t\tthis.reset();\n\t\tthis.setState(OtrRoomState.NOT_STARTED);\n\t\tPresence.stop(this.peerId, this.onPresenceEventHook);\n\t\tsdk.publish('notify-user', [\n\t\t\t`${this.peerId}/otr`,\n\t\t\t'end',\n\t\t\t{\n\t\t\t\troomId: this._roomId,\n\t\t\t\tuserId: this._userId,\n\t\t\t},\n\t\t]);\n\t}\n\n\treset(): void {\n\t\tthis._keyPair = null;\n\t\tthis._exportedPublicKey = {};\n\t\tthis._sessionKey = null;\n\t\tvoid sdk.call('deleteOldOTRMessages', this._roomId);\n\t}\n\n\tasync generateKeyPair(): Promise<void> {\n\t\tif (this._userOnlineComputation) {\n\t\t\tthis._userOnlineComputation.stop();\n\t\t}\n\n\t\tthis._userOnlineComputation = Tracker.autorun(() => {\n\t\t\tconst $room = document.querySelector(`#chat-window-${this._roomId}`);\n\t\t\tconst $title = $room?.querySelector('.rc-header__title');\n\t\t\tif (this.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\t\tif ($room && $title && !$title.querySelector('.otr-icon')) {\n\t\t\t\t\t$title.prepend(\"<i class='otr-icon icon-key'></i>\");\n\t\t\t\t}\n\t\t\t} else if ($title) {\n\t\t\t\t$title.querySelector('.otr-icon')?.remove();\n\t\t\t}\n\t\t});\n\t\ttry {\n\t\t\t// Generate an ephemeral key pair.\n\t\t\tthis._keyPair = await generateKeyPair();\n\n\t\t\tif (!this._keyPair.publicKey) {\n\t\t\t\tthrow new Error('Public key is not generated');\n\t\t\t}\n\n\t\t\tthis._exportedPublicKey = await exportKey(this._keyPair.publicKey);\n\n\t\t\t// Once we have generated new keys, it's safe to delete old messages\n\t\t\tvoid sdk.call('deleteOldOTRMessages', this._roomId);\n\t\t} catch (e) {\n\t\t\tthis.setState(OtrRoomState.ERROR);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tasync importPublicKey(publicKey: string): Promise<void> {\n\t\ttry {\n\t\t\tif (!this._keyPair) throw new Error('No key pair');\n\t\t\tconst publicKeyObject: JsonWebKey = EJSON.parse(publicKey);\n\t\t\tconst peerPublicKey = await importKey(publicKeyObject);\n\t\t\tconst ecdhObj: IOTRAlgorithm = {\n\t\t\t\tname: 'ECDH',\n\t\t\t\tnamedCurve: 'P-256',\n\t\t\t\tpublic: peerPublicKey,\n\t\t\t};\n\t\t\tconst bits = await deriveBits({ ecdhObj, _keyPair: this._keyPair });\n\t\t\tconst hashedBits = await digest(bits);\n\t\t\t// We truncate the hash to 128 bits.\n\t\t\tconst sessionKeyData = new Uint8Array(hashedBits).slice(0, 16);\n\t\t\t// Session key available.\n\t\t\tthis._sessionKey = await importKeyRaw(sessionKeyData);\n\t\t} catch (e) {\n\t\t\tthis.setState(OtrRoomState.ERROR);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tasync encryptText(data: string | Uint8Array): Promise<string> {\n\t\tif (typeof data === 'string') {\n\t\t\tdata = new TextEncoder().encode(EJSON.stringify({ text: data, ack: Random.id((Random.fraction() + 1) * 20) }));\n\t\t}\n\t\ttry {\n\t\t\tif (!this._sessionKey) throw new Error('Session Key not available');\n\n\t\t\tconst iv = crypto.getRandomValues(new Uint8Array(12));\n\t\t\tconst encryptedData = await encryptAES({ iv, _sessionKey: this._sessionKey, data });\n\n\t\t\tconst output = joinEncryptedData({ encryptedData, iv });\n\n\t\t\treturn EJSON.stringify(output);\n\t\t} catch (e) {\n\t\t\tthis.setState(OtrRoomState.ERROR);\n\t\t\tthrow new Meteor.Error('encryption-error', 'Encryption error.');\n\t\t}\n\t}\n\n\tasync encrypt(message: Pick<IMessage, '_id' | 'msg'>): Promise<string> {\n\t\ttry {\n\t\t\tconst data = new TextEncoder().encode(\n\t\t\t\tEJSON.stringify({\n\t\t\t\t\t_id: message._id,\n\t\t\t\t\ttext: message.msg,\n\t\t\t\t\tuserId: this._userId,\n\t\t\t\t\tack: Random.id((Random.fraction() + 1) * 20),\n\t\t\t\t\tts: new Date(),\n\t\t\t\t}),\n\t\t\t);\n\t\t\tconst enc = await this.encryptText(data);\n\t\t\treturn enc;\n\t\t} catch (e) {\n\t\t\tthrow new Meteor.Error('encryption-error', 'Encryption error.');\n\t\t}\n\t}\n\n\tasync decrypt(message: string): Promise<IOTRDecrypt | string> {\n\t\ttry {\n\t\t\tif (!this._sessionKey) throw new Error('Session Key not available.');\n\n\t\t\tconst cipherText: Uint8Array = EJSON.parse(message);\n\t\t\tconst data = await decryptAES(cipherText, this._sessionKey);\n\t\t\tconst msgDecoded: IOTRDecrypt = EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(data)));\n\t\t\tif (msgDecoded && typeof msgDecoded === 'object') {\n\t\t\t\treturn msgDecoded;\n\t\t\t}\n\t\t\treturn message;\n\t\t} catch (e) {\n\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\tthis.setState(OtrRoomState.ERROR);\n\t\t\treturn message;\n\t\t}\n\t}\n\n\tasync onUserStream(type: string, data: IOnUserStreamData): Promise<void> {\n\t\tswitch (type) {\n\t\t\tcase 'handshake':\n\t\t\t\tlet timeout: NodeJS.Timeout;\n\n\t\t\t\tconst establishConnection = async (): Promise<void> => {\n\t\t\t\t\tthis.setState(OtrRoomState.ESTABLISHING);\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!data.publicKey) throw new Error('Public key is not generated');\n\t\t\t\t\t\tawait this.generateKeyPair();\n\t\t\t\t\t\tawait this.importPublicKey(data.publicKey);\n\t\t\t\t\t\tawait goToRoomById(data.roomId);\n\t\t\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\t\t\tthis.setState(OtrRoomState.ESTABLISHED);\n\t\t\t\t\t\t\tthis.acknowledge();\n\t\t\t\t\t\t\tthis.listenToUserStatus();\n\n\t\t\t\t\t\t\tif (data.refresh) {\n\t\t\t\t\t\t\t\tawait sdk.rest.post('/v1/chat.otr', {\n\t\t\t\t\t\t\t\t\troomId: this._roomId,\n\t\t\t\t\t\t\t\t\ttype: otrSystemMessages.USER_KEY_REFRESHED_SUCCESSFULLY,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\t\t\tthrow new Meteor.Error('establish-connection-error', 'Establish connection error.');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst closeOrCancelModal = (): void => {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\tthis.deny();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t};\n\n\t\t\t\ttry {\n\t\t\t\t\tconst obj = await Presence.get(data.userId);\n\t\t\t\t\tif (!obj?.username) {\n\t\t\t\t\t\tthrow new Meteor.Error('user-not-defined', 'User not defined.');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.refresh && this.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\tawait establishConnection();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* \tWe have to check if there's an in progress handshake request because\n\t\t\t\t\t\t\tNotifications.notifyUser will sometimes dispatch 2 events */\n\t\t\t\t\t\tif (this.getState() === OtrRoomState.REQUESTED) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.setState(OtrRoomState.REQUESTED);\n\t\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\t\t\ttitle: t('OTR'),\n\t\t\t\t\t\t\t\tchildren: t('Username_wants_to_start_otr_Do_you_want_to_accept', {\n\t\t\t\t\t\t\t\t\tusername: obj.username,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tconfirmText: t('Yes'),\n\t\t\t\t\t\t\t\tcancelText: t('No'),\n\t\t\t\t\t\t\t\tonClose: (): void => closeOrCancelModal(),\n\t\t\t\t\t\t\t\tonCancel: (): void => closeOrCancelModal(),\n\t\t\t\t\t\t\t\tonConfirm: async (): Promise<void> => {\n\t\t\t\t\t\t\t\t\tawait establishConnection();\n\t\t\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttimeout = setTimeout(() => {\n\t\t\t\t\t\t\tthis.setState(OtrRoomState.TIMEOUT);\n\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t}, 10000);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'acknowledge':\n\t\t\t\ttry {\n\t\t\t\t\tif (!data.publicKey) throw new Error('Public key is not generated');\n\t\t\t\t\tawait this.importPublicKey(data.publicKey);\n\n\t\t\t\t\tthis.setState(OtrRoomState.ESTABLISHED);\n\n\t\t\t\t\tif (this.isFirstOTR) {\n\t\t\t\t\t\tthis.listenToUserStatus();\n\t\t\t\t\t\tawait sdk.rest.post('/v1/chat.otr', {\n\t\t\t\t\t\t\troomId: this._roomId,\n\t\t\t\t\t\t\ttype: otrSystemMessages.USER_JOINED_OTR,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis.isFirstOTR = false;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'deny':\n\t\t\t\tif (this.getState() === OtrRoomState.ESTABLISHING) {\n\t\t\t\t\tthis.reset();\n\t\t\t\t\tthis.setState(OtrRoomState.DECLINED);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\ttry {\n\t\t\t\t\tconst obj = await Presence.get(this.peerId);\n\t\t\t\t\tif (!obj?.username) {\n\t\t\t\t\t\tthrow new Meteor.Error('user-not-defined', 'User not defined.');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\tthis.setState(OtrRoomState.NOT_STARTED);\n\t\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\t\t\ttitle: t('OTR'),\n\t\t\t\t\t\t\t\tchildren: t('Username_ended_the_OTR_session', { username: obj.username }),\n\t\t\t\t\t\t\t\tconfirmText: t('Ok'),\n\t\t\t\t\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\t\t\t\t\tonConfirm: imperativeModal.close,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"]}}},"code":"var _typeof;\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 0);\nvar _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 1);\nmodule.export({\n  OTRRoom: function () {\n    return OTRRoom;\n  }\n});\nvar UserStatus;\nmodule.link(\"@rocket.chat/core-typings\", {\n  UserStatus: function (v) {\n    UserStatus = v;\n  }\n}, 0);\nvar Random;\nmodule.link(\"@rocket.chat/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 1);\nvar EJSON;\nmodule.link(\"ejson\", {\n  \"default\": function (v) {\n    EJSON = v;\n  }\n}, 2);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 3);\nvar ReactiveVar;\nmodule.link(\"meteor/reactive-var\", {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 4);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 5);\nvar GenericModal;\nmodule.link(\"../../../client/components/GenericModal\", {\n  \"default\": function (v) {\n    GenericModal = v;\n  }\n}, 6);\nvar imperativeModal;\nmodule.link(\"../../../client/lib/imperativeModal\", {\n  imperativeModal: function (v) {\n    imperativeModal = v;\n  }\n}, 7);\nvar Presence;\nmodule.link(\"../../../client/lib/presence\", {\n  Presence: function (v) {\n    Presence = v;\n  }\n}, 8);\nvar dispatchToastMessage;\nmodule.link(\"../../../client/lib/toast\", {\n  dispatchToastMessage: function (v) {\n    dispatchToastMessage = v;\n  }\n}, 9);\nvar getUidDirectMessage;\nmodule.link(\"../../../client/lib/utils/getUidDirectMessage\", {\n  getUidDirectMessage: function (v) {\n    getUidDirectMessage = v;\n  }\n}, 10);\nvar goToRoomById;\nmodule.link(\"../../../client/lib/utils/goToRoomById\", {\n  goToRoomById: function (v) {\n    goToRoomById = v;\n  }\n}, 11);\nvar sdk;\nmodule.link(\"../../utils/client/lib/SDKClient\", {\n  sdk: function (v) {\n    sdk = v;\n  }\n}, 12);\nvar t;\nmodule.link(\"../../utils/lib/i18n\", {\n  t: function (v) {\n    t = v;\n  }\n}, 13);\nvar OtrRoomState;\nmodule.link(\"../lib/OtrRoomState\", {\n  OtrRoomState: function (v) {\n    OtrRoomState = v;\n  }\n}, 14);\nvar otrSystemMessages;\nmodule.link(\"../lib/constants\", {\n  otrSystemMessages: function (v) {\n    otrSystemMessages = v;\n  }\n}, 15);\nvar decryptAES, deriveBits, digest, encryptAES, exportKey, _generateKeyPair, importKey, importKeyRaw, joinEncryptedData;\nmodule.link(\"../lib/functions\", {\n  decryptAES: function (v) {\n    decryptAES = v;\n  },\n  deriveBits: function (v) {\n    deriveBits = v;\n  },\n  digest: function (v) {\n    digest = v;\n  },\n  encryptAES: function (v) {\n    encryptAES = v;\n  },\n  exportKey: function (v) {\n    exportKey = v;\n  },\n  generateKeyPair: function (v) {\n    _generateKeyPair = v;\n  },\n  importKey: function (v) {\n    importKey = v;\n  },\n  importKeyRaw: function (v) {\n    importKeyRaw = v;\n  },\n  joinEncryptedData: function (v) {\n    joinEncryptedData = v;\n  }\n}, 16);\nvar OTRRoom = /*#__PURE__*/function () {\n  function OTRRoom(uid, rid, peerId) {\n    this._userId = void 0;\n    this._roomId = void 0;\n    this._keyPair = void 0;\n    this._exportedPublicKey = void 0;\n    this._sessionKey = void 0;\n    this._userOnlineComputation = void 0;\n    this.peerId = void 0;\n    this.state = new ReactiveVar(OtrRoomState.NOT_STARTED);\n    this.isFirstOTR = void 0;\n    this.onPresenceEventHook = void 0;\n    this._userId = uid;\n    this._roomId = rid;\n    this._keyPair = null;\n    this._sessionKey = null;\n    this.peerId = peerId;\n    this.isFirstOTR = true;\n    this.onPresenceEventHook = this.onPresenceEvent.bind(this);\n  }\n  OTRRoom.create = function () {\n    function create(uid, rid) {\n      var peerId = getUidDirectMessage(rid);\n      if (!peerId) {\n        return undefined;\n      }\n      return new OTRRoom(uid, rid, peerId);\n    }\n    return create;\n  }();\n  var _proto = OTRRoom.prototype;\n  _proto.getPeerId = function () {\n    function getPeerId() {\n      return this.peerId;\n    }\n    return getPeerId;\n  }();\n  _proto.getState = function () {\n    function getState() {\n      return this.state.get();\n    }\n    return getState;\n  }();\n  _proto.setState = function () {\n    function setState(nextState) {\n      if (this.getState() === nextState) {\n        return;\n      }\n      this.state.set(nextState);\n    }\n    return setState;\n  }();\n  _proto.handshake = function () {\n    function handshake(refresh) {\n      var user;\n      return _regeneratorRuntime.async(function () {\n        function handshake$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.setState(OtrRoomState.ESTABLISHING);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(this.generateKeyPair());\n            case 3:\n              sdk.publish('notify-user', [this.peerId + \"/otr\", 'handshake', {\n                roomId: this._roomId,\n                userId: this._userId,\n                publicKey: EJSON.stringify(this._exportedPublicKey),\n                refresh: refresh\n              }]);\n              if (!refresh) {\n                _context.next = 11;\n                break;\n              }\n              user = Meteor.user();\n              if (user) {\n                _context.next = 8;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 8:\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(sdk.rest.post('/v1/chat.otr', {\n                roomId: this._roomId,\n                type: otrSystemMessages.USER_REQUESTED_OTR_KEY_REFRESH\n              }));\n            case 10:\n              this.isFirstOTR = false;\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return handshake$;\n      }(), null, this, null, Promise);\n    }\n    return handshake;\n  }();\n  _proto.onPresenceEvent = function () {\n    function onPresenceEvent(event) {\n      if (!event) {\n        return;\n      }\n      if (event.status !== UserStatus.OFFLINE) {\n        return;\n      }\n      console.warn(\"OTR Room \" + this._roomId + \" ended because \" + this.peerId + \" went offline\");\n      this.end();\n      imperativeModal.open({\n        component: GenericModal,\n        props: {\n          variant: 'warning',\n          title: t('OTR'),\n          children: t('OTR_Session_ended_other_user_went_offline', {\n            username: event.username\n          }),\n          confirmText: t('Ok'),\n          onClose: imperativeModal.close,\n          onConfirm: imperativeModal.close\n        }\n      });\n    }\n    return onPresenceEvent;\n  }() // Starts listening to other user's status changes and end OTR if any of the Users goes offline\n  // this should be called in 2 places: on acknowledge (meaning user accepted OTR) or on establish (meaning user initiated OTR)\n  ;\n  _proto.listenToUserStatus = function () {\n    function listenToUserStatus() {\n      Presence.listen(this.peerId, this.onPresenceEventHook);\n    }\n    return listenToUserStatus;\n  }();\n  _proto.acknowledge = function () {\n    function acknowledge() {\n      void sdk.rest.post('/v1/statistics.telemetry', {\n        params: [{\n          eventName: 'otrStats',\n          timestamp: Date.now(),\n          rid: this._roomId\n        }]\n      });\n      sdk.publish('notify-user', [this.peerId + \"/otr\", 'acknowledge', {\n        roomId: this._roomId,\n        userId: this._userId,\n        publicKey: EJSON.stringify(this._exportedPublicKey)\n      }]);\n    }\n    return acknowledge;\n  }();\n  _proto.deny = function () {\n    function deny() {\n      this.reset();\n      this.setState(OtrRoomState.DECLINED);\n      sdk.publish('notify-user', [this.peerId + \"/otr\", 'deny', {\n        roomId: this._roomId,\n        userId: this._userId\n      }]);\n    }\n    return deny;\n  }();\n  _proto.softReset = function () {\n    function softReset() {\n      this.isFirstOTR = true;\n      this.setState(OtrRoomState.NOT_STARTED);\n      this._keyPair = null;\n      this._exportedPublicKey = {};\n      this._sessionKey = null;\n    }\n    return softReset;\n  }();\n  _proto.end = function () {\n    function end() {\n      this.isFirstOTR = true;\n      this.reset();\n      this.setState(OtrRoomState.NOT_STARTED);\n      Presence.stop(this.peerId, this.onPresenceEventHook);\n      sdk.publish('notify-user', [this.peerId + \"/otr\", 'end', {\n        roomId: this._roomId,\n        userId: this._userId\n      }]);\n    }\n    return end;\n  }();\n  _proto.reset = function () {\n    function reset() {\n      this._keyPair = null;\n      this._exportedPublicKey = {};\n      this._sessionKey = null;\n      void sdk.call('deleteOldOTRMessages', this._roomId);\n    }\n    return reset;\n  }();\n  _proto.generateKeyPair = function () {\n    function generateKeyPair() {\n      var _this = this;\n      return _regeneratorRuntime.async(function () {\n        function generateKeyPair$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this._userOnlineComputation) {\n                this._userOnlineComputation.stop();\n              }\n              this._userOnlineComputation = Tracker.autorun(function () {\n                var $room = document.querySelector(\"#chat-window-\" + _this._roomId);\n                var $title = $room === null || $room === void 0 ? void 0 : $room.querySelector('.rc-header__title');\n                if (_this.getState() === OtrRoomState.ESTABLISHED) {\n                  if ($room && $title && !$title.querySelector('.otr-icon')) {\n                    $title.prepend(\"<i class='otr-icon icon-key'></i>\");\n                  }\n                } else if ($title) {\n                  var _$title$querySelector;\n                  (_$title$querySelector = $title.querySelector('.otr-icon')) === null || _$title$querySelector === void 0 ? void 0 : _$title$querySelector.remove();\n                }\n              });\n              _context2.prev = 2;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(_generateKeyPair());\n            case 5:\n              this._keyPair = _context2.sent;\n              if (this._keyPair.publicKey) {\n                _context2.next = 8;\n                break;\n              }\n              throw new Error('Public key is not generated');\n            case 8:\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(exportKey(this._keyPair.publicKey));\n            case 10:\n              this._exportedPublicKey = _context2.sent;\n              // Once we have generated new keys, it's safe to delete old messages\n              void sdk.call('deleteOldOTRMessages', this._roomId);\n              _context2.next = 18;\n              break;\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](2);\n              this.setState(OtrRoomState.ERROR);\n              throw _context2.t0;\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n        return generateKeyPair$;\n      }(), null, this, [[2, 14]], Promise);\n    }\n    return generateKeyPair;\n  }();\n  _proto.importPublicKey = function () {\n    function importPublicKey(publicKey) {\n      var publicKeyObject, peerPublicKey, ecdhObj, bits, hashedBits, sessionKeyData;\n      return _regeneratorRuntime.async(function () {\n        function importPublicKey$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              if (this._keyPair) {\n                _context3.next = 3;\n                break;\n              }\n              throw new Error('No key pair');\n            case 3:\n              publicKeyObject = EJSON.parse(publicKey);\n              _context3.next = 6;\n              return _regeneratorRuntime.awrap(importKey(publicKeyObject));\n            case 6:\n              peerPublicKey = _context3.sent;\n              ecdhObj = {\n                name: 'ECDH',\n                namedCurve: 'P-256',\n                \"public\": peerPublicKey\n              };\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(deriveBits({\n                ecdhObj: ecdhObj,\n                _keyPair: this._keyPair\n              }));\n            case 10:\n              bits = _context3.sent;\n              _context3.next = 13;\n              return _regeneratorRuntime.awrap(digest(bits));\n            case 13:\n              hashedBits = _context3.sent;\n              // We truncate the hash to 128 bits.\n              sessionKeyData = new Uint8Array(hashedBits).slice(0, 16); // Session key available.\n              _context3.next = 17;\n              return _regeneratorRuntime.awrap(importKeyRaw(sessionKeyData));\n            case 17:\n              this._sessionKey = _context3.sent;\n              _context3.next = 24;\n              break;\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](0);\n              this.setState(OtrRoomState.ERROR);\n              throw _context3.t0;\n            case 24:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n        return importPublicKey$;\n      }(), null, this, [[0, 20]], Promise);\n    }\n    return importPublicKey;\n  }();\n  _proto.encryptText = function () {\n    function encryptText(data) {\n      var iv, encryptedData, output;\n      return _regeneratorRuntime.async(function () {\n        function encryptText$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (typeof data === 'string') {\n                data = new TextEncoder().encode(EJSON.stringify({\n                  text: data,\n                  ack: Random.id((Random.fraction() + 1) * 20)\n                }));\n              }\n              _context4.prev = 1;\n              if (this._sessionKey) {\n                _context4.next = 4;\n                break;\n              }\n              throw new Error('Session Key not available');\n            case 4:\n              iv = crypto.getRandomValues(new Uint8Array(12));\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(encryptAES({\n                iv: iv,\n                _sessionKey: this._sessionKey,\n                data: data\n              }));\n            case 7:\n              encryptedData = _context4.sent;\n              output = joinEncryptedData({\n                encryptedData: encryptedData,\n                iv: iv\n              });\n              return _context4.abrupt(\"return\", EJSON.stringify(output));\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](1);\n              this.setState(OtrRoomState.ERROR);\n              throw new Meteor.Error('encryption-error', 'Encryption error.');\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n        return encryptText$;\n      }(), null, this, [[1, 12]], Promise);\n    }\n    return encryptText;\n  }();\n  _proto.encrypt = function () {\n    function encrypt(message) {\n      var data, enc;\n      return _regeneratorRuntime.async(function () {\n        function encrypt$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              data = new TextEncoder().encode(EJSON.stringify({\n                _id: message._id,\n                text: message.msg,\n                userId: this._userId,\n                ack: Random.id((Random.fraction() + 1) * 20),\n                ts: new Date()\n              }));\n              _context5.next = 4;\n              return _regeneratorRuntime.awrap(this.encryptText(data));\n            case 4:\n              enc = _context5.sent;\n              return _context5.abrupt(\"return\", enc);\n            case 8:\n              _context5.prev = 8;\n              _context5.t0 = _context5[\"catch\"](0);\n              throw new Meteor.Error('encryption-error', 'Encryption error.');\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n        return encrypt$;\n      }(), null, this, [[0, 8]], Promise);\n    }\n    return encrypt;\n  }();\n  _proto.decrypt = function () {\n    function decrypt(message) {\n      var cipherText, data, msgDecoded;\n      return _regeneratorRuntime.async(function () {\n        function decrypt$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              if (this._sessionKey) {\n                _context6.next = 3;\n                break;\n              }\n              throw new Error('Session Key not available.');\n            case 3:\n              cipherText = EJSON.parse(message);\n              _context6.next = 6;\n              return _regeneratorRuntime.awrap(decryptAES(cipherText, this._sessionKey));\n            case 6:\n              data = _context6.sent;\n              msgDecoded = EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(data)));\n              if (!(msgDecoded && _typeof(msgDecoded) === 'object')) {\n                _context6.next = 10;\n                break;\n              }\n              return _context6.abrupt(\"return\", msgDecoded);\n            case 10:\n              return _context6.abrupt(\"return\", message);\n            case 13:\n              _context6.prev = 13;\n              _context6.t0 = _context6[\"catch\"](0);\n              dispatchToastMessage({\n                type: 'error',\n                message: _context6.t0\n              });\n              this.setState(OtrRoomState.ERROR);\n              return _context6.abrupt(\"return\", message);\n            case 18:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n        return decrypt$;\n      }(), null, this, [[0, 13]], Promise);\n    }\n    return decrypt;\n  }();\n  _proto.onUserStream = function () {\n    function onUserStream(type, data) {\n      var _this2 = this;\n      var timeout, establishConnection, closeOrCancelModal, obj, _obj;\n      return _regeneratorRuntime.async(function () {\n        function onUserStream$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.t0 = type;\n              _context10.next = _context10.t0 === 'handshake' ? 3 : _context10.t0 === 'acknowledge' ? 29 : _context10.t0 === 'deny' ? 46 : _context10.t0 === 'end' ? 48 : 61;\n              break;\n            case 3:\n              establishConnection = function () {\n                function _callee2() {\n                  return _regeneratorRuntime.async(function () {\n                    function _callee2$(_context8) {\n                      while (1) switch (_context8.prev = _context8.next) {\n                        case 0:\n                          _this2.setState(OtrRoomState.ESTABLISHING);\n                          clearTimeout(timeout);\n                          _context8.prev = 2;\n                          if (data.publicKey) {\n                            _context8.next = 5;\n                            break;\n                          }\n                          throw new Error('Public key is not generated');\n                        case 5:\n                          _context8.next = 7;\n                          return _regeneratorRuntime.awrap(_this2.generateKeyPair());\n                        case 7:\n                          _context8.next = 9;\n                          return _regeneratorRuntime.awrap(_this2.importPublicKey(data.publicKey));\n                        case 9:\n                          _context8.next = 11;\n                          return _regeneratorRuntime.awrap(goToRoomById(data.roomId));\n                        case 11:\n                          setTimeout(function () {\n                            function _callee() {\n                              return _regeneratorRuntime.async(function () {\n                                function _callee$(_context7) {\n                                  while (1) switch (_context7.prev = _context7.next) {\n                                    case 0:\n                                      _this2.setState(OtrRoomState.ESTABLISHED);\n                                      _this2.acknowledge();\n                                      _this2.listenToUserStatus();\n                                      if (!data.refresh) {\n                                        _context7.next = 6;\n                                        break;\n                                      }\n                                      _context7.next = 6;\n                                      return _regeneratorRuntime.awrap(sdk.rest.post('/v1/chat.otr', {\n                                        roomId: _this2._roomId,\n                                        type: otrSystemMessages.USER_KEY_REFRESHED_SUCCESSFULLY\n                                      }));\n                                    case 6:\n                                    case \"end\":\n                                      return _context7.stop();\n                                  }\n                                }\n                                return _callee$;\n                              }(), null, null, null, Promise);\n                            }\n                            return _callee;\n                          }(), 0);\n                          _context8.next = 18;\n                          break;\n                        case 14:\n                          _context8.prev = 14;\n                          _context8.t0 = _context8[\"catch\"](2);\n                          dispatchToastMessage({\n                            type: 'error',\n                            message: _context8.t0\n                          });\n                          throw new Meteor.Error('establish-connection-error', 'Establish connection error.');\n                        case 18:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                    return _callee2$;\n                  }(), null, null, [[2, 14]], Promise);\n                }\n                return _callee2;\n              }();\n              closeOrCancelModal = function () {\n                clearTimeout(timeout);\n                _this2.deny();\n                imperativeModal.close();\n              };\n              _context10.prev = 5;\n              _context10.next = 8;\n              return _regeneratorRuntime.awrap(Presence.get(data.userId));\n            case 8:\n              obj = _context10.sent;\n              if (obj !== null && obj !== void 0 && obj.username) {\n                _context10.next = 11;\n                break;\n              }\n              throw new Meteor.Error('user-not-defined', 'User not defined.');\n            case 11:\n              if (!(data.refresh && this.getState() === OtrRoomState.ESTABLISHED)) {\n                _context10.next = 17;\n                break;\n              }\n              this.reset();\n              _context10.next = 15;\n              return _regeneratorRuntime.awrap(establishConnection());\n            case 15:\n              _context10.next = 23;\n              break;\n            case 17:\n              if (!(this.getState() === OtrRoomState.REQUESTED)) {\n                _context10.next = 19;\n                break;\n              }\n              return _context10.abrupt(\"return\");\n            case 19:\n              if (this.getState() === OtrRoomState.ESTABLISHED) {\n                this.reset();\n              }\n              this.setState(OtrRoomState.REQUESTED);\n              imperativeModal.open({\n                component: GenericModal,\n                props: {\n                  variant: 'warning',\n                  title: t('OTR'),\n                  children: t('Username_wants_to_start_otr_Do_you_want_to_accept', {\n                    username: obj.username\n                  }),\n                  confirmText: t('Yes'),\n                  cancelText: t('No'),\n                  onClose: function () {\n                    return closeOrCancelModal();\n                  },\n                  onCancel: function () {\n                    return closeOrCancelModal();\n                  },\n                  onConfirm: function () {\n                    function _callee3() {\n                      return _regeneratorRuntime.async(function () {\n                        function _callee3$(_context9) {\n                          while (1) switch (_context9.prev = _context9.next) {\n                            case 0:\n                              _context9.next = 2;\n                              return _regeneratorRuntime.awrap(establishConnection());\n                            case 2:\n                              imperativeModal.close();\n                            case 3:\n                            case \"end\":\n                              return _context9.stop();\n                          }\n                        }\n                        return _callee3$;\n                      }(), null, null, null, Promise);\n                    }\n                    return _callee3;\n                  }()\n                }\n              });\n              timeout = setTimeout(function () {\n                _this2.setState(OtrRoomState.TIMEOUT);\n                imperativeModal.close();\n              }, 10000);\n            case 23:\n              _context10.next = 28;\n              break;\n            case 25:\n              _context10.prev = 25;\n              _context10.t1 = _context10[\"catch\"](5);\n              dispatchToastMessage({\n                type: 'error',\n                message: _context10.t1\n              });\n            case 28:\n              return _context10.abrupt(\"break\", 61);\n            case 29:\n              _context10.prev = 29;\n              if (data.publicKey) {\n                _context10.next = 32;\n                break;\n              }\n              throw new Error('Public key is not generated');\n            case 32:\n              _context10.next = 34;\n              return _regeneratorRuntime.awrap(this.importPublicKey(data.publicKey));\n            case 34:\n              this.setState(OtrRoomState.ESTABLISHED);\n              if (!this.isFirstOTR) {\n                _context10.next = 39;\n                break;\n              }\n              this.listenToUserStatus();\n              _context10.next = 39;\n              return _regeneratorRuntime.awrap(sdk.rest.post('/v1/chat.otr', {\n                roomId: this._roomId,\n                type: otrSystemMessages.USER_JOINED_OTR\n              }));\n            case 39:\n              this.isFirstOTR = false;\n              _context10.next = 45;\n              break;\n            case 42:\n              _context10.prev = 42;\n              _context10.t2 = _context10[\"catch\"](29);\n              dispatchToastMessage({\n                type: 'error',\n                message: _context10.t2\n              });\n            case 45:\n              return _context10.abrupt(\"break\", 61);\n            case 46:\n              if (this.getState() === OtrRoomState.ESTABLISHING) {\n                this.reset();\n                this.setState(OtrRoomState.DECLINED);\n              }\n              return _context10.abrupt(\"break\", 61);\n            case 48:\n              _context10.prev = 48;\n              _context10.next = 51;\n              return _regeneratorRuntime.awrap(Presence.get(this.peerId));\n            case 51:\n              _obj = _context10.sent;\n              if (_obj !== null && _obj !== void 0 && _obj.username) {\n                _context10.next = 54;\n                break;\n              }\n              throw new Meteor.Error('user-not-defined', 'User not defined.');\n            case 54:\n              if (this.getState() === OtrRoomState.ESTABLISHED) {\n                this.reset();\n                this.setState(OtrRoomState.NOT_STARTED);\n                imperativeModal.open({\n                  component: GenericModal,\n                  props: {\n                    variant: 'warning',\n                    title: t('OTR'),\n                    children: t('Username_ended_the_OTR_session', {\n                      username: _obj.username\n                    }),\n                    confirmText: t('Ok'),\n                    onClose: imperativeModal.close,\n                    onConfirm: imperativeModal.close\n                  }\n                });\n              }\n              _context10.next = 60;\n              break;\n            case 57:\n              _context10.prev = 57;\n              _context10.t3 = _context10[\"catch\"](48);\n              dispatchToastMessage({\n                type: 'error',\n                message: _context10.t3\n              });\n            case 60:\n              return _context10.abrupt(\"break\", 61);\n            case 61:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n        return onUserStream$;\n      }(), null, this, [[5, 25], [29, 42], [48, 57]], Promise);\n    }\n    return onUserStream;\n  }();\n  return OTRRoom;\n}();","map":{"version":3,"names":["_typeof","module","link","default","v","_regeneratorRuntime","export","OTRRoom","UserStatus","Random","EJSON","Meteor","ReactiveVar","Tracker","GenericModal","imperativeModal","Presence","dispatchToastMessage","getUidDirectMessage","goToRoomById","sdk","t","OtrRoomState","otrSystemMessages","decryptAES","deriveBits","digest","encryptAES","exportKey","generateKeyPair","importKey","importKeyRaw","joinEncryptedData","uid","rid","peerId","_userId","_roomId","_keyPair","_exportedPublicKey","_sessionKey","_userOnlineComputation","state","NOT_STARTED","isFirstOTR","onPresenceEventHook","onPresenceEvent","bind","create","undefined","_proto","prototype","getPeerId","getState","get","setState","nextState","set","handshake","refresh","user","async","handshake$","_context","prev","next","ESTABLISHING","awrap","publish","roomId","userId","publicKey","stringify","abrupt","rest","post","type","USER_REQUESTED_OTR_KEY_REFRESH","stop","Promise","event","status","OFFLINE","console","warn","end","open","component","props","variant","title","children","username","confirmText","onClose","close","onConfirm","listenToUserStatus","listen","acknowledge","params","eventName","timestamp","Date","now","deny","reset","DECLINED","softReset","call","_this","generateKeyPair$","_context2","autorun","$room","document","querySelector","$title","ESTABLISHED","prepend","_$title$querySelector","remove","sent","Error","t0","ERROR","importPublicKey","publicKeyObject","peerPublicKey","ecdhObj","bits","hashedBits","sessionKeyData","importPublicKey$","_context3","parse","name","namedCurve","Uint8Array","slice","encryptText","data","iv","encryptedData","output","encryptText$","_context4","TextEncoder","encode","text","ack","id","fraction","crypto","getRandomValues","encrypt","message","enc","encrypt$","_context5","_id","msg","ts","decrypt","cipherText","msgDecoded","decrypt$","_context6","TextDecoder","decode","onUserStream","_this2","timeout","establishConnection","closeOrCancelModal","obj","_obj","onUserStream$","_context10","_callee2","_callee2$","_context8","clearTimeout","setTimeout","_callee","_callee$","_context7","USER_KEY_REFRESHED_SUCCESSFULLY","REQUESTED","cancelText","onCancel","_callee3","_callee3$","_context9","TIMEOUT","t1","USER_JOINED_OTR","t2","t3"],"sources":["app/otr/client/OTRRoom.ts"],"sourcesContent":["import type { IRoom, IMessage, IUser } from '@rocket.chat/core-typings';\nimport { UserStatus } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport EJSON from 'ejson';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Tracker } from 'meteor/tracker';\n\nimport GenericModal from '../../../client/components/GenericModal';\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\nimport type { UserPresence } from '../../../client/lib/presence';\nimport { Presence } from '../../../client/lib/presence';\nimport { dispatchToastMessage } from '../../../client/lib/toast';\nimport { getUidDirectMessage } from '../../../client/lib/utils/getUidDirectMessage';\nimport { goToRoomById } from '../../../client/lib/utils/goToRoomById';\nimport { sdk } from '../../utils/client/lib/SDKClient';\nimport { t } from '../../utils/lib/i18n';\nimport type { IOnUserStreamData, IOTRAlgorithm, IOTRDecrypt, IOTRRoom } from '../lib/IOTR';\nimport { OtrRoomState } from '../lib/OtrRoomState';\nimport { otrSystemMessages } from '../lib/constants';\nimport {\n\tdecryptAES,\n\tderiveBits,\n\tdigest,\n\tencryptAES,\n\texportKey,\n\tgenerateKeyPair,\n\timportKey,\n\timportKeyRaw,\n\tjoinEncryptedData,\n} from '../lib/functions';\n\nexport class OTRRoom implements IOTRRoom {\n\tprivate _userId: string;\n\n\tprivate _roomId: string;\n\n\tprivate _keyPair: CryptoKeyPair | null;\n\n\tprivate _exportedPublicKey: JsonWebKey;\n\n\tprivate _sessionKey: CryptoKey | null;\n\n\tprivate _userOnlineComputation: Tracker.Computation;\n\n\tprivate peerId: string;\n\n\tprivate state: ReactiveVar<OtrRoomState> = new ReactiveVar(OtrRoomState.NOT_STARTED);\n\n\tprivate isFirstOTR: boolean;\n\n\tprivate onPresenceEventHook: (event: UserPresence | undefined) => void;\n\n\tprotected constructor(uid: IUser['_id'], rid: IRoom['_id'], peerId: IUser['_id']) {\n\t\tthis._userId = uid;\n\t\tthis._roomId = rid;\n\t\tthis._keyPair = null;\n\t\tthis._sessionKey = null;\n\t\tthis.peerId = peerId;\n\t\tthis.isFirstOTR = true;\n\t\tthis.onPresenceEventHook = this.onPresenceEvent.bind(this);\n\t}\n\n\tpublic static create(uid: IUser['_id'], rid: IRoom['_id']): OTRRoom | undefined {\n\t\tconst peerId = getUidDirectMessage(rid);\n\n\t\tif (!peerId) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn new OTRRoom(uid, rid, peerId);\n\t}\n\n\tgetPeerId(): string {\n\t\treturn this.peerId;\n\t}\n\n\tgetState(): OtrRoomState {\n\t\treturn this.state.get();\n\t}\n\n\tsetState(nextState: OtrRoomState): void {\n\t\tif (this.getState() === nextState) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.set(nextState);\n\t}\n\n\tasync handshake(refresh?: boolean): Promise<void> {\n\t\tthis.setState(OtrRoomState.ESTABLISHING);\n\n\t\tawait this.generateKeyPair();\n\t\tsdk.publish('notify-user', [\n\t\t\t`${this.peerId}/otr`,\n\t\t\t'handshake',\n\t\t\t{\n\t\t\t\troomId: this._roomId,\n\t\t\t\tuserId: this._userId,\n\t\t\t\tpublicKey: EJSON.stringify(this._exportedPublicKey),\n\t\t\t\trefresh,\n\t\t\t},\n\t\t]);\n\n\t\tif (refresh) {\n\t\t\tconst user = Meteor.user();\n\t\t\tif (!user) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait sdk.rest.post('/v1/chat.otr', {\n\t\t\t\troomId: this._roomId,\n\t\t\t\ttype: otrSystemMessages.USER_REQUESTED_OTR_KEY_REFRESH,\n\t\t\t});\n\t\t\tthis.isFirstOTR = false;\n\t\t}\n\t}\n\n\tonPresenceEvent(event: UserPresence | undefined): void {\n\t\tif (!event) {\n\t\t\treturn;\n\t\t}\n\t\tif (event.status !== UserStatus.OFFLINE) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.warn(`OTR Room ${this._roomId} ended because ${this.peerId} went offline`);\n\t\tthis.end();\n\n\t\timperativeModal.open({\n\t\t\tcomponent: GenericModal,\n\t\t\tprops: {\n\t\t\t\tvariant: 'warning',\n\t\t\t\ttitle: t('OTR'),\n\t\t\t\tchildren: t('OTR_Session_ended_other_user_went_offline', { username: event.username }),\n\t\t\t\tconfirmText: t('Ok'),\n\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\tonConfirm: imperativeModal.close,\n\t\t\t},\n\t\t});\n\t}\n\n\t// Starts listening to other user's status changes and end OTR if any of the Users goes offline\n\t// this should be called in 2 places: on acknowledge (meaning user accepted OTR) or on establish (meaning user initiated OTR)\n\tlistenToUserStatus(): void {\n\t\tPresence.listen(this.peerId, this.onPresenceEventHook);\n\t}\n\n\tacknowledge(): void {\n\t\tvoid sdk.rest.post('/v1/statistics.telemetry', { params: [{ eventName: 'otrStats', timestamp: Date.now(), rid: this._roomId }] });\n\n\t\tsdk.publish('notify-user', [\n\t\t\t`${this.peerId}/otr`,\n\t\t\t'acknowledge',\n\t\t\t{\n\t\t\t\troomId: this._roomId,\n\t\t\t\tuserId: this._userId,\n\t\t\t\tpublicKey: EJSON.stringify(this._exportedPublicKey),\n\t\t\t},\n\t\t]);\n\t}\n\n\tdeny(): void {\n\t\tthis.reset();\n\t\tthis.setState(OtrRoomState.DECLINED);\n\t\tsdk.publish('notify-user', [\n\t\t\t`${this.peerId}/otr`,\n\t\t\t'deny',\n\t\t\t{\n\t\t\t\troomId: this._roomId,\n\t\t\t\tuserId: this._userId,\n\t\t\t},\n\t\t]);\n\t}\n\n\tsoftReset(): void {\n\t\tthis.isFirstOTR = true;\n\t\tthis.setState(OtrRoomState.NOT_STARTED);\n\t\tthis._keyPair = null;\n\t\tthis._exportedPublicKey = {};\n\t\tthis._sessionKey = null;\n\t}\n\n\tend(): void {\n\t\tthis.isFirstOTR = true;\n\t\tthis.reset();\n\t\tthis.setState(OtrRoomState.NOT_STARTED);\n\t\tPresence.stop(this.peerId, this.onPresenceEventHook);\n\t\tsdk.publish('notify-user', [\n\t\t\t`${this.peerId}/otr`,\n\t\t\t'end',\n\t\t\t{\n\t\t\t\troomId: this._roomId,\n\t\t\t\tuserId: this._userId,\n\t\t\t},\n\t\t]);\n\t}\n\n\treset(): void {\n\t\tthis._keyPair = null;\n\t\tthis._exportedPublicKey = {};\n\t\tthis._sessionKey = null;\n\t\tvoid sdk.call('deleteOldOTRMessages', this._roomId);\n\t}\n\n\tasync generateKeyPair(): Promise<void> {\n\t\tif (this._userOnlineComputation) {\n\t\t\tthis._userOnlineComputation.stop();\n\t\t}\n\n\t\tthis._userOnlineComputation = Tracker.autorun(() => {\n\t\t\tconst $room = document.querySelector(`#chat-window-${this._roomId}`);\n\t\t\tconst $title = $room?.querySelector('.rc-header__title');\n\t\t\tif (this.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\t\tif ($room && $title && !$title.querySelector('.otr-icon')) {\n\t\t\t\t\t$title.prepend(\"<i class='otr-icon icon-key'></i>\");\n\t\t\t\t}\n\t\t\t} else if ($title) {\n\t\t\t\t$title.querySelector('.otr-icon')?.remove();\n\t\t\t}\n\t\t});\n\t\ttry {\n\t\t\t// Generate an ephemeral key pair.\n\t\t\tthis._keyPair = await generateKeyPair();\n\n\t\t\tif (!this._keyPair.publicKey) {\n\t\t\t\tthrow new Error('Public key is not generated');\n\t\t\t}\n\n\t\t\tthis._exportedPublicKey = await exportKey(this._keyPair.publicKey);\n\n\t\t\t// Once we have generated new keys, it's safe to delete old messages\n\t\t\tvoid sdk.call('deleteOldOTRMessages', this._roomId);\n\t\t} catch (e) {\n\t\t\tthis.setState(OtrRoomState.ERROR);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tasync importPublicKey(publicKey: string): Promise<void> {\n\t\ttry {\n\t\t\tif (!this._keyPair) throw new Error('No key pair');\n\t\t\tconst publicKeyObject: JsonWebKey = EJSON.parse(publicKey);\n\t\t\tconst peerPublicKey = await importKey(publicKeyObject);\n\t\t\tconst ecdhObj: IOTRAlgorithm = {\n\t\t\t\tname: 'ECDH',\n\t\t\t\tnamedCurve: 'P-256',\n\t\t\t\tpublic: peerPublicKey,\n\t\t\t};\n\t\t\tconst bits = await deriveBits({ ecdhObj, _keyPair: this._keyPair });\n\t\t\tconst hashedBits = await digest(bits);\n\t\t\t// We truncate the hash to 128 bits.\n\t\t\tconst sessionKeyData = new Uint8Array(hashedBits).slice(0, 16);\n\t\t\t// Session key available.\n\t\t\tthis._sessionKey = await importKeyRaw(sessionKeyData);\n\t\t} catch (e) {\n\t\t\tthis.setState(OtrRoomState.ERROR);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tasync encryptText(data: string | Uint8Array): Promise<string> {\n\t\tif (typeof data === 'string') {\n\t\t\tdata = new TextEncoder().encode(EJSON.stringify({ text: data, ack: Random.id((Random.fraction() + 1) * 20) }));\n\t\t}\n\t\ttry {\n\t\t\tif (!this._sessionKey) throw new Error('Session Key not available');\n\n\t\t\tconst iv = crypto.getRandomValues(new Uint8Array(12));\n\t\t\tconst encryptedData = await encryptAES({ iv, _sessionKey: this._sessionKey, data });\n\n\t\t\tconst output = joinEncryptedData({ encryptedData, iv });\n\n\t\t\treturn EJSON.stringify(output);\n\t\t} catch (e) {\n\t\t\tthis.setState(OtrRoomState.ERROR);\n\t\t\tthrow new Meteor.Error('encryption-error', 'Encryption error.');\n\t\t}\n\t}\n\n\tasync encrypt(message: Pick<IMessage, '_id' | 'msg'>): Promise<string> {\n\t\ttry {\n\t\t\tconst data = new TextEncoder().encode(\n\t\t\t\tEJSON.stringify({\n\t\t\t\t\t_id: message._id,\n\t\t\t\t\ttext: message.msg,\n\t\t\t\t\tuserId: this._userId,\n\t\t\t\t\tack: Random.id((Random.fraction() + 1) * 20),\n\t\t\t\t\tts: new Date(),\n\t\t\t\t}),\n\t\t\t);\n\t\t\tconst enc = await this.encryptText(data);\n\t\t\treturn enc;\n\t\t} catch (e) {\n\t\t\tthrow new Meteor.Error('encryption-error', 'Encryption error.');\n\t\t}\n\t}\n\n\tasync decrypt(message: string): Promise<IOTRDecrypt | string> {\n\t\ttry {\n\t\t\tif (!this._sessionKey) throw new Error('Session Key not available.');\n\n\t\t\tconst cipherText: Uint8Array = EJSON.parse(message);\n\t\t\tconst data = await decryptAES(cipherText, this._sessionKey);\n\t\t\tconst msgDecoded: IOTRDecrypt = EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(data)));\n\t\t\tif (msgDecoded && typeof msgDecoded === 'object') {\n\t\t\t\treturn msgDecoded;\n\t\t\t}\n\t\t\treturn message;\n\t\t} catch (e) {\n\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\tthis.setState(OtrRoomState.ERROR);\n\t\t\treturn message;\n\t\t}\n\t}\n\n\tasync onUserStream(type: string, data: IOnUserStreamData): Promise<void> {\n\t\tswitch (type) {\n\t\t\tcase 'handshake':\n\t\t\t\tlet timeout: NodeJS.Timeout;\n\n\t\t\t\tconst establishConnection = async (): Promise<void> => {\n\t\t\t\t\tthis.setState(OtrRoomState.ESTABLISHING);\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!data.publicKey) throw new Error('Public key is not generated');\n\t\t\t\t\t\tawait this.generateKeyPair();\n\t\t\t\t\t\tawait this.importPublicKey(data.publicKey);\n\t\t\t\t\t\tawait goToRoomById(data.roomId);\n\t\t\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\t\t\tthis.setState(OtrRoomState.ESTABLISHED);\n\t\t\t\t\t\t\tthis.acknowledge();\n\t\t\t\t\t\t\tthis.listenToUserStatus();\n\n\t\t\t\t\t\t\tif (data.refresh) {\n\t\t\t\t\t\t\t\tawait sdk.rest.post('/v1/chat.otr', {\n\t\t\t\t\t\t\t\t\troomId: this._roomId,\n\t\t\t\t\t\t\t\t\ttype: otrSystemMessages.USER_KEY_REFRESHED_SUCCESSFULLY,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\t\t\tthrow new Meteor.Error('establish-connection-error', 'Establish connection error.');\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst closeOrCancelModal = (): void => {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\tthis.deny();\n\t\t\t\t\timperativeModal.close();\n\t\t\t\t};\n\n\t\t\t\ttry {\n\t\t\t\t\tconst obj = await Presence.get(data.userId);\n\t\t\t\t\tif (!obj?.username) {\n\t\t\t\t\t\tthrow new Meteor.Error('user-not-defined', 'User not defined.');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.refresh && this.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\tawait establishConnection();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* \tWe have to check if there's an in progress handshake request because\n\t\t\t\t\t\t\tNotifications.notifyUser will sometimes dispatch 2 events */\n\t\t\t\t\t\tif (this.getState() === OtrRoomState.REQUESTED) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.setState(OtrRoomState.REQUESTED);\n\t\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\t\t\ttitle: t('OTR'),\n\t\t\t\t\t\t\t\tchildren: t('Username_wants_to_start_otr_Do_you_want_to_accept', {\n\t\t\t\t\t\t\t\t\tusername: obj.username,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tconfirmText: t('Yes'),\n\t\t\t\t\t\t\t\tcancelText: t('No'),\n\t\t\t\t\t\t\t\tonClose: (): void => closeOrCancelModal(),\n\t\t\t\t\t\t\t\tonCancel: (): void => closeOrCancelModal(),\n\t\t\t\t\t\t\t\tonConfirm: async (): Promise<void> => {\n\t\t\t\t\t\t\t\t\tawait establishConnection();\n\t\t\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttimeout = setTimeout(() => {\n\t\t\t\t\t\t\tthis.setState(OtrRoomState.TIMEOUT);\n\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t}, 10000);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'acknowledge':\n\t\t\t\ttry {\n\t\t\t\t\tif (!data.publicKey) throw new Error('Public key is not generated');\n\t\t\t\t\tawait this.importPublicKey(data.publicKey);\n\n\t\t\t\t\tthis.setState(OtrRoomState.ESTABLISHED);\n\n\t\t\t\t\tif (this.isFirstOTR) {\n\t\t\t\t\t\tthis.listenToUserStatus();\n\t\t\t\t\t\tawait sdk.rest.post('/v1/chat.otr', {\n\t\t\t\t\t\t\troomId: this._roomId,\n\t\t\t\t\t\t\ttype: otrSystemMessages.USER_JOINED_OTR,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis.isFirstOTR = false;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'deny':\n\t\t\t\tif (this.getState() === OtrRoomState.ESTABLISHING) {\n\t\t\t\t\tthis.reset();\n\t\t\t\t\tthis.setState(OtrRoomState.DECLINED);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\ttry {\n\t\t\t\t\tconst obj = await Presence.get(this.peerId);\n\t\t\t\t\tif (!obj?.username) {\n\t\t\t\t\t\tthrow new Meteor.Error('user-not-defined', 'User not defined.');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.getState() === OtrRoomState.ESTABLISHED) {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t\tthis.setState(OtrRoomState.NOT_STARTED);\n\t\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\t\tcomponent: GenericModal,\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\t\t\t\ttitle: t('OTR'),\n\t\t\t\t\t\t\t\tchildren: t('Username_ended_the_OTR_session', { username: obj.username }),\n\t\t\t\t\t\t\t\tconfirmText: t('Ok'),\n\t\t\t\t\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\t\t\t\t\tonConfirm: imperativeModal.close,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"],"mappings":"AACA,IAAAA,OAAS;AAAAC,MAAA,CAAUC,IAAE,gCAAkC;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAJ,OAAA,GAAAI,CAAA;EAAA;AAAA;AAAA,IAAAC,mBAAA;AAAAJ,MAAA,CAAAC,IAAA;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAC,mBAAA,GAAAD,CAAA;EAAA;AAAA;AAAvDH,MAAA,CAAOK,MAAE;EAAAC,OAAY,WAAAA,CAAA,EAAM;IAAA,OAAAA,OAAA;EAAA;AAAA;AAAA,IAA4BC,UAAA;AAAAP,MAAA,CAAAC,IAAA;EAAAM,UAAA,WAAAA,CAAAJ,CAAA;IAAAI,UAAA,GAAAJ,CAAA;EAAA;AAAA;AAAA,IAAAK,MAAA;AAAAR,MAAA,CAAAC,IAAA;EAAAO,MAAA,WAAAA,CAAAL,CAAA;IAAAK,MAAA,GAAAL,CAAA;EAAA;AAAA;AAAA,IAAAM,KAAA;AAAAT,MAAA,CAAAC,IAAA;EAAA,oBAAAC,CAAAC,CAAA;IAAAM,KAAA,GAAAN,CAAA;EAAA;AAAA;AAAA,IAAAO,MAAA;AAAAV,MAAA,CAAAC,IAAA;EAAAS,MAAA,WAAAA,CAAAP,CAAA;IAAAO,MAAA,GAAAP,CAAA;EAAA;AAAA;AAAA,IAAAQ,WAAA;AAAAX,MAAA,CAAAC,IAAA;EAAAU,WAAA,WAAAA,CAAAR,CAAA;IAAAQ,WAAA,GAAAR,CAAA;EAAA;AAAA;AAAA,IAAAS,OAAA;AAAAZ,MAAA,CAAAC,IAAA;EAAAW,OAAA,WAAAA,CAAAT,CAAA;IAAAS,OAAA,GAAAT,CAAA;EAAA;AAAA;AAAA,IAAAU,YAAA;AAAAb,MAAA,CAAAC,IAAA;EAAA,oBAAAC,CAAAC,CAAA;IAAAU,YAAA,GAAAV,CAAA;EAAA;AAAA;AAAA,IAAAW,eAAA;AAAAd,MAAA,CAAAC,IAAA;EAAAa,eAAA,WAAAA,CAAAX,CAAA;IAAAW,eAAA,GAAAX,CAAA;EAAA;AAAA;AAAA,IAAAY,QAAA;AAAAf,MAAA,CAAAC,IAAA;EAAAc,QAAA,WAAAA,CAAAZ,CAAA;IAAAY,QAAA,GAAAZ,CAAA;EAAA;AAAA;AAAA,IAAAa,oBAAA;AAAAhB,MAAA,CAAAC,IAAA;EAAAe,oBAAA,WAAAA,CAAAb,CAAA;IAAAa,oBAAA,GAAAb,CAAA;EAAA;AAAA;AAAA,IAAAc,mBAAA;AAAAjB,MAAA,CAAAC,IAAA;EAAAgB,mBAAA,WAAAA,CAAAd,CAAA;IAAAc,mBAAA,GAAAd,CAAA;EAAA;AAAA;AAAA,IAAAe,YAAA;AAAAlB,MAAA,CAAAC,IAAA;EAAAiB,YAAA,WAAAA,CAAAf,CAAA;IAAAe,YAAA,GAAAf,CAAA;EAAA;AAAA;AAAA,IAAAgB,GAAA;AAAAnB,MAAA,CAAAC,IAAA;EAAAkB,GAAA,WAAAA,CAAAhB,CAAA;IAAAgB,GAAA,GAAAhB,CAAA;EAAA;AAAA;AAAA,IAAAiB,CAAA;AAAApB,MAAA,CAAAC,IAAA;EAAAmB,CAAA,WAAAA,CAAAjB,CAAA;IAAAiB,CAAA,GAAAjB,CAAA;EAAA;AAAA;AAAA,IAAAkB,YAAA;AAAArB,MAAA,CAAAC,IAAA;EAAAoB,YAAA,WAAAA,CAAAlB,CAAA;IAAAkB,YAAA,GAAAlB,CAAA;EAAA;AAAA;AAAA,IAAAmB,iBAAA;AAAAtB,MAAA,CAAAC,IAAA;EAAAqB,iBAAA,WAAAA,CAAAnB,CAAA;IAAAmB,iBAAA,GAAAnB,CAAA;EAAA;AAAA;AAAA,IAAAoB,UAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,UAAA,EAAAC,SAAA,EAAAC,gBAAA,EAAAC,SAAA,EAAAC,YAAA,EAAAC,iBAAA;AAAA/B,MAAA,CAAAC,IAAA;EAAAsB,UAAA,WAAAA,CAAApB,CAAA;IAAAoB,UAAA,GAAApB,CAAA;EAAA;EAAAqB,UAAA,WAAAA,CAAArB,CAAA;IAAAqB,UAAA,GAAArB,CAAA;EAAA;EAAAsB,MAAA,WAAAA,CAAAtB,CAAA;IAAAsB,MAAA,GAAAtB,CAAA;EAAA;EAAAuB,UAAA,WAAAA,CAAAvB,CAAA;IAAAuB,UAAA,GAAAvB,CAAA;EAAA;EAAAwB,SAAA,WAAAA,CAAAxB,CAAA;IAAAwB,SAAA,GAAAxB,CAAA;EAAA;EAAAyB,eAAA,WAAAA,CAAAzB,CAAA;IAAAyB,gBAAA,GAAAzB,CAAA;EAAA;EAAA0B,SAAA,WAAAA,CAAA1B,CAAA;IAAA0B,SAAA,GAAA1B,CAAA;EAAA;EAAA2B,YAAA,WAAAA,CAAA3B,CAAA;IAAA2B,YAAA,GAAA3B,CAAA;EAAA;EAAA4B,iBAAA,WAAAA,CAAA5B,CAAA;IAAA4B,iBAAA,GAAA5B,CAAA;EAAA;AAAA;AAAA,IA+B1CG,OAAO;EAqBnB,SAAAA,QAAsB0B,GAAiB,EAAEC,GAAiB,EAAEC,MAAoB;IAAA,KApBxEC,OAAO;IAAA,KAEPC,OAAO;IAAA,KAEPC,QAAQ;IAAA,KAERC,kBAAkB;IAAA,KAElBC,WAAW;IAAA,KAEXC,sBAAsB;IAAA,KAEtBN,MAAM;IAAA,KAENO,KAAK,GAA8B,IAAI9B,WAAW,CAACU,YAAY,CAACqB,WAAW,CAAC;IAAA,KAE5EC,UAAU;IAAA,KAEVC,mBAAmB;IAG1B,IAAI,CAACT,OAAO,GAAGH,GAAG;IAClB,IAAI,CAACI,OAAO,GAAGH,GAAG;IAClB,IAAI,CAACI,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACE,WAAW,GAAG,IAAI;IACvB,IAAI,CAACL,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACS,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC;EAC3D;EAACxC,OAAA,CAEayC,MAAM;IAAb,SAAAA,OAAcf,GAAiB,EAAEC,GAAiB;MACxD,IAAMC,MAAM,GAAGjB,mBAAmB,CAACgB,GAAG,CAAC;MAEvC,IAAI,CAACC,MAAM,EAAE;QACZ,OAAOc,SAAS;MACjB;MAEA,OAAO,IAAI1C,OAAO,CAAC0B,GAAG,EAAEC,GAAG,EAAEC,MAAM,CAAC;IACrC;IAAC,OAAAa,MAAA;EAAA;EAAA,IAAAE,MAAA,GAAA3C,OAAA,CAAA4C,SAAA;EAAAD,MAAA,CAEDE,SAAS;IAAT,SAAAA,UAAA,EAAS;MACR,OAAO,IAAI,CAACjB,MAAM;IACnB;IAAC,OAAAiB,SAAA;EAAA;EAAAF,MAAA,CAEDG,QAAQ;IAAR,SAAAA,SAAA,EAAQ;MACP,OAAO,IAAI,CAACX,KAAK,CAACY,GAAG,EAAE;IACxB;IAAC,OAAAD,QAAA;EAAA;EAAAH,MAAA,CAEDK,QAAQ;IAAR,SAAAA,SAASC,SAAuB;MAC/B,IAAI,IAAI,CAACH,QAAQ,EAAE,KAAKG,SAAS,EAAE;QAClC;MACD;MAEA,IAAI,CAACd,KAAK,CAACe,GAAG,CAACD,SAAS,CAAC;IAC1B;IAAC,OAAAD,QAAA;EAAA;EAAAL,MAAA,CAEKQ,SAAS;IAAf,SAAAA,UAAgBC,OAAiB;MAAA,IAAAC,IAAA;MAAA,OAAAvD,mBAAA,CAAAwD,KAAA;QAAA,SAAAC,WAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAChC,IAAI,CAACV,QAAQ,CAACjC,YAAY,CAAC4C,YAAY,CAAC;cAACH,QAAA,CAAAE,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CAEnC,IAAI,CAACtC,eAAe,EAAE;YAAA;cAC5BT,GAAG,CAACgD,OAAO,CAAC,aAAa,EAAE,CACvB,IAAI,CAACjC,MAAM,WACd,WAAW,EACX;gBACCkC,MAAM,EAAE,IAAI,CAAChC,OAAO;gBACpBiC,MAAM,EAAE,IAAI,CAAClC,OAAO;gBACpBmC,SAAS,EAAE7D,KAAK,CAAC8D,SAAS,CAAC,IAAI,CAACjC,kBAAkB,CAAC;gBACnDoB,OAAO,EAAPA;eACA,CACD,CAAC;cAAC,KAECA,OAAO;gBAAAI,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACJL,IAAI,GAAGjD,MAAM,CAACiD,IAAI,EAAE;cAAA,IACrBA,IAAI;gBAAAG,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAU,MAAA;YAAA;cAAAV,QAAA,CAAAE,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CAGH/C,GAAG,CAACsD,IAAI,CAACC,IAAI,CAAC,cAAc,EAAE;gBACnCN,MAAM,EAAE,IAAI,CAAChC,OAAO;gBACpBuC,IAAI,EAAErD,iBAAiB,CAACsD;eACxB,CAAC;YAAA;cACF,IAAI,CAACjC,UAAU,GAAG,KAAK;YAAC;YAAA;cAAA,OAAAmB,QAAA,CAAAe,IAAA;UAAA;QAAA;QAAA,OAAAhB,UAAA;MAAA,uBAAAiB,OAAA;IAAA;IAEzB,OAAArB,SAAA;EAAA;EAAAR,MAAA,CAEDJ,eAAe;IAAf,SAAAA,gBAAgBkC,KAA+B;MAC9C,IAAI,CAACA,KAAK,EAAE;QACX;MACD;MACA,IAAIA,KAAK,CAACC,MAAM,KAAKzE,UAAU,CAAC0E,OAAO,EAAE;QACxC;MACD;MACAC,OAAO,CAACC,IAAI,eAAa,IAAI,CAAC/C,OAAO,uBAAkB,IAAI,CAACF,MAAM,kBAAe,CAAC;MAClF,IAAI,CAACkD,GAAG,EAAE;MAEVtE,eAAe,CAACuE,IAAI,CAAC;QACpBC,SAAS,EAAEzE,YAAY;QACvB0E,KAAK,EAAE;UACNC,OAAO,EAAE,SAAS;UAClBC,KAAK,EAAErE,CAAC,CAAC,KAAK,CAAC;UACfsE,QAAQ,EAAEtE,CAAC,CAAC,2CAA2C,EAAE;YAAEuE,QAAQ,EAAEZ,KAAK,CAACY;UAAQ,CAAE,CAAC;UACtFC,WAAW,EAAExE,CAAC,CAAC,IAAI,CAAC;UACpByE,OAAO,EAAE/E,eAAe,CAACgF,KAAK;UAC9BC,SAAS,EAAEjF,eAAe,CAACgF;;OAE5B,CAAC;IACH;IAAC,OAAAjD,eAAA;EAAA,IAED;EACA;EAAA;EAAAI,MAAA,CACA+C,kBAAkB;IAAlB,SAAAA,mBAAA,EAAkB;MACjBjF,QAAQ,CAACkF,MAAM,CAAC,IAAI,CAAC/D,MAAM,EAAE,IAAI,CAACU,mBAAmB,CAAC;IACvD;IAAC,OAAAoD,kBAAA;EAAA;EAAA/C,MAAA,CAEDiD,WAAW;IAAX,SAAAA,YAAA,EAAW;MACV,KAAK/E,GAAG,CAACsD,IAAI,CAACC,IAAI,CAAC,0BAA0B,EAAE;QAAEyB,MAAM,EAAE,CAAC;UAAEC,SAAS,EAAE,UAAU;UAAEC,SAAS,EAAEC,IAAI,CAACC,GAAG,EAAE;UAAEtE,GAAG,EAAE,IAAI,CAACG;QAAO,CAAE;MAAC,CAAE,CAAC;MAEjIjB,GAAG,CAACgD,OAAO,CAAC,aAAa,EAAE,CACvB,IAAI,CAACjC,MAAM,WACd,aAAa,EACb;QACCkC,MAAM,EAAE,IAAI,CAAChC,OAAO;QACpBiC,MAAM,EAAE,IAAI,CAAClC,OAAO;QACpBmC,SAAS,EAAE7D,KAAK,CAAC8D,SAAS,CAAC,IAAI,CAACjC,kBAAkB;OAClD,CACD,CAAC;IACH;IAAC,OAAA4D,WAAA;EAAA;EAAAjD,MAAA,CAEDuD,IAAI;IAAJ,SAAAA,KAAA,EAAI;MACH,IAAI,CAACC,KAAK,EAAE;MACZ,IAAI,CAACnD,QAAQ,CAACjC,YAAY,CAACqF,QAAQ,CAAC;MACpCvF,GAAG,CAACgD,OAAO,CAAC,aAAa,EAAE,CACvB,IAAI,CAACjC,MAAM,WACd,MAAM,EACN;QACCkC,MAAM,EAAE,IAAI,CAAChC,OAAO;QACpBiC,MAAM,EAAE,IAAI,CAAClC;OACb,CACD,CAAC;IACH;IAAC,OAAAqE,IAAA;EAAA;EAAAvD,MAAA,CAED0D,SAAS;IAAT,SAAAA,UAAA,EAAS;MACR,IAAI,CAAChE,UAAU,GAAG,IAAI;MACtB,IAAI,CAACW,QAAQ,CAACjC,YAAY,CAACqB,WAAW,CAAC;MACvC,IAAI,CAACL,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,kBAAkB,GAAG,EAAE;MAC5B,IAAI,CAACC,WAAW,GAAG,IAAI;IACxB;IAAC,OAAAoE,SAAA;EAAA;EAAA1D,MAAA,CAEDmC,GAAG;IAAH,SAAAA,IAAA,EAAG;MACF,IAAI,CAACzC,UAAU,GAAG,IAAI;MACtB,IAAI,CAAC8D,KAAK,EAAE;MACZ,IAAI,CAACnD,QAAQ,CAACjC,YAAY,CAACqB,WAAW,CAAC;MACvC3B,QAAQ,CAAC8D,IAAI,CAAC,IAAI,CAAC3C,MAAM,EAAE,IAAI,CAACU,mBAAmB,CAAC;MACpDzB,GAAG,CAACgD,OAAO,CAAC,aAAa,EAAE,CACvB,IAAI,CAACjC,MAAM,WACd,KAAK,EACL;QACCkC,MAAM,EAAE,IAAI,CAAChC,OAAO;QACpBiC,MAAM,EAAE,IAAI,CAAClC;OACb,CACD,CAAC;IACH;IAAC,OAAAiD,GAAA;EAAA;EAAAnC,MAAA,CAEDwD,KAAK;IAAL,SAAAA,MAAA,EAAK;MACJ,IAAI,CAACpE,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,kBAAkB,GAAG,EAAE;MAC5B,IAAI,CAACC,WAAW,GAAG,IAAI;MACvB,KAAKpB,GAAG,CAACyF,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAACxE,OAAO,CAAC;IACpD;IAAC,OAAAqE,KAAA;EAAA;EAAAxD,MAAA,CAEKrB,eAAe;IAArB,SAAAA,gBAAA;MAAA,IAAAiF,KAAA;MAAA,OAAAzG,mBAAA,CAAAwD,KAAA;QAAA,SAAAkD,iBAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAhD,IAAA,GAAAgD,SAAA,CAAA/C,IAAA;YAAA;cACC,IAAI,IAAI,CAACxB,sBAAsB,EAAE;gBAChC,IAAI,CAACA,sBAAsB,CAACqC,IAAI,EAAE;cACnC;cAEA,IAAI,CAACrC,sBAAsB,GAAG5B,OAAO,CAACoG,OAAO,CAAC,YAAK;gBAClD,IAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,mBAAiBN,KAAI,CAACzE,OAAS,CAAC;gBACpE,IAAMgF,MAAM,GAAGH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,aAAa,CAAC,mBAAmB,CAAC;gBACxD,IAAIN,KAAI,CAACzD,QAAQ,EAAE,KAAK/B,YAAY,CAACgG,WAAW,EAAE;kBACjD,IAAIJ,KAAK,IAAIG,MAAM,IAAI,CAACA,MAAM,CAACD,aAAa,CAAC,WAAW,CAAC,EAAE;oBAC1DC,MAAM,CAACE,OAAO,CAAC,mCAAmC,CAAC;kBACpD;gBACD,CAAC,MAAM,IAAIF,MAAM,EAAE;kBAAA,IAAAG,qBAAA;kBAClB,CAAAA,qBAAA,GAAAH,MAAM,CAACD,aAAa,CAAC,WAAW,CAAC,cAAAI,qBAAA,uBAAjCA,qBAAA,CAAmCC,MAAM,EAAE;gBAC5C;cACD,CAAC,CAAC;cAACT,SAAA,CAAAhD,IAAA;cAAAgD,SAAA,CAAA/C,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CAGoBtC,gBAAe,EAAE;YAAA;cAAvC,IAAI,CAACS,QAAQ,GAAA0E,SAAA,CAAAU,IAAA;cAAA,IAER,IAAI,CAACpF,QAAQ,CAACiC,SAAS;gBAAAyC,SAAA,CAAA/C,IAAA;gBAAA;cAAA;cAAA,MACrB,IAAI0D,KAAK,CAAC,6BAA6B,CAAC;YAAA;cAAAX,SAAA,CAAA/C,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CAGfvC,SAAS,CAAC,IAAI,CAACU,QAAQ,CAACiC,SAAS,CAAC;YAAA;cAAlE,IAAI,CAAChC,kBAAkB,GAAAyE,SAAA,CAAAU,IAAA;cAEvB;cACA,KAAKtG,GAAG,CAACyF,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAACxE,OAAO,CAAC;cAAC2E,SAAA,CAAA/C,IAAA;cAAA;YAAA;cAAA+C,SAAA,CAAAhD,IAAA;cAAAgD,SAAA,CAAAY,EAAA,GAAAZ,SAAA;cAEpD,IAAI,CAACzD,QAAQ,CAACjC,YAAY,CAACuG,KAAK,CAAC;cAAC,MAAAb,SAAA,CAAAY,EAAA;YAAA;YAAA;cAAA,OAAAZ,SAAA,CAAAlC,IAAA;UAAA;QAAA;QAAA,OAAAiC,gBAAA;MAAA,4BAAAhC,OAAA;IAAA;IAGnC,OAAAlD,eAAA;EAAA;EAAAqB,MAAA,CAEK4E,eAAe;IAArB,SAAAA,gBAAsBvD,SAAiB;MAAA,IAAAwD,eAAA,EAAAC,aAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,cAAA;MAAA,OAAA/H,mBAAA,CAAAwD,KAAA;QAAA,SAAAwE,iBAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAtE,IAAA,GAAAsE,SAAA,CAAArE,IAAA;YAAA;cAAAqE,SAAA,CAAAtE,IAAA;cAAA,IAEhC,IAAI,CAAC1B,QAAQ;gBAAAgG,SAAA,CAAArE,IAAA;gBAAA;cAAA;cAAA,MAAQ,IAAI0D,KAAK,CAAC,aAAa,CAAC;YAAA;cAC5CI,eAAe,GAAerH,KAAK,CAAC6H,KAAK,CAAChE,SAAS,CAAC;cAAA+D,SAAA,CAAArE,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CAC9BrC,SAAS,CAACiG,eAAe,CAAC;YAAA;cAAhDC,aAAa,GAAAM,SAAA,CAAAZ,IAAA;cACbO,OAAO,GAAkB;gBAC9BO,IAAI,EAAE,MAAM;gBACZC,UAAU,EAAE,OAAO;gBACnB,UAAQT;eACR;cAAAM,SAAA,CAAArE,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CACkB1C,UAAU,CAAC;gBAAEwG,OAAO,EAAPA,OAAO;gBAAE3F,QAAQ,EAAE,IAAI,CAACA;cAAQ,CAAE,CAAC;YAAA;cAA7D4F,IAAI,GAAAI,SAAA,CAAAZ,IAAA;cAAAY,SAAA,CAAArE,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CACezC,MAAM,CAACwG,IAAI,CAAC;YAAA;cAA/BC,UAAU,GAAAG,SAAA,CAAAZ,IAAA;cAChB;cACMU,cAAc,GAAG,IAAIM,UAAU,CAACP,UAAU,CAAC,CAACQ,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAC9D;cAAAL,SAAA,CAAArE,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CACyBpC,YAAY,CAACqG,cAAc,CAAC;YAAA;cAArD,IAAI,CAAC5F,WAAW,GAAA8F,SAAA,CAAAZ,IAAA;cAAAY,SAAA,CAAArE,IAAA;cAAA;YAAA;cAAAqE,SAAA,CAAAtE,IAAA;cAAAsE,SAAA,CAAAV,EAAA,GAAAU,SAAA;cAEhB,IAAI,CAAC/E,QAAQ,CAACjC,YAAY,CAACuG,KAAK,CAAC;cAAC,MAAAS,SAAA,CAAAV,EAAA;YAAA;YAAA;cAAA,OAAAU,SAAA,CAAAxD,IAAA;UAAA;QAAA;QAAA,OAAAuD,gBAAA;MAAA,4BAAAtD,OAAA;IAAA;IAGnC,OAAA+C,eAAA;EAAA;EAAA5E,MAAA,CAEK0F,WAAW;IAAjB,SAAAA,YAAkBC,IAAyB;MAAA,IAAAC,EAAA,EAAAC,aAAA,EAAAC,MAAA;MAAA,OAAA3I,mBAAA,CAAAwD,KAAA;QAAA,SAAAoF,aAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAlF,IAAA,GAAAkF,SAAA,CAAAjF,IAAA;YAAA;cAC1C,IAAI,OAAO4E,IAAI,KAAK,QAAQ,EAAE;gBAC7BA,IAAI,GAAG,IAAIM,WAAW,EAAE,CAACC,MAAM,CAAC1I,KAAK,CAAC8D,SAAS,CAAC;kBAAE6E,IAAI,EAAER,IAAI;kBAAES,GAAG,EAAE7I,MAAM,CAAC8I,EAAE,CAAC,CAAC9I,MAAM,CAAC+I,QAAQ,EAAE,GAAG,CAAC,IAAI,EAAE;gBAAC,CAAE,CAAC,CAAC;cAC/G;cAACN,SAAA,CAAAlF,IAAA;cAAA,IAEK,IAAI,CAACxB,WAAW;gBAAA0G,SAAA,CAAAjF,IAAA;gBAAA;cAAA;cAAA,MAAQ,IAAI0D,KAAK,CAAC,2BAA2B,CAAC;YAAA;cAE7DmB,EAAE,GAAGW,MAAM,CAACC,eAAe,CAAC,IAAIhB,UAAU,CAAC,EAAE,CAAC,CAAC;cAAAQ,SAAA,CAAAjF,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CACzBxC,UAAU,CAAC;gBAAEmH,EAAE,EAAFA,EAAE;gBAAEtG,WAAW,EAAE,IAAI,CAACA,WAAW;gBAAEqG,IAAI,EAAJA;cAAI,CAAE,CAAC;YAAA;cAA7EE,aAAa,GAAAG,SAAA,CAAAxB,IAAA;cAEbsB,MAAM,GAAGhH,iBAAiB,CAAC;gBAAE+G,aAAa,EAAbA,aAAa;gBAAED,EAAE,EAAFA;cAAE,CAAE,CAAC;cAAA,OAAAI,SAAA,CAAAzE,MAAA,WAEhD/D,KAAK,CAAC8D,SAAS,CAACwE,MAAM,CAAC;YAAA;cAAAE,SAAA,CAAAlF,IAAA;cAAAkF,SAAA,CAAAtB,EAAA,GAAAsB,SAAA;cAE9B,IAAI,CAAC3F,QAAQ,CAACjC,YAAY,CAACuG,KAAK,CAAC;cAAC,MAC5B,IAAIlH,MAAM,CAACgH,KAAK,CAAC,kBAAkB,EAAE,mBAAmB,CAAC;YAAA;YAAA;cAAA,OAAAuB,SAAA,CAAApE,IAAA;UAAA;QAAA;QAAA,OAAAmE,YAAA;MAAA,4BAAAlE,OAAA;IAAA;IAEhE,OAAA6D,WAAA;EAAA;EAAA1F,MAAA,CAEKyG,OAAO;IAAb,SAAAA,QAAcC,OAAsC;MAAA,IAAAf,IAAA,EAAAgB,GAAA;MAAA,OAAAxJ,mBAAA,CAAAwD,KAAA;QAAA,SAAAiG,SAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA/F,IAAA,GAAA+F,SAAA,CAAA9F,IAAA;YAAA;cAAA8F,SAAA,CAAA/F,IAAA;cAE5C6E,IAAI,GAAG,IAAIM,WAAW,EAAE,CAACC,MAAM,CACpC1I,KAAK,CAAC8D,SAAS,CAAC;gBACfwF,GAAG,EAAEJ,OAAO,CAACI,GAAG;gBAChBX,IAAI,EAAEO,OAAO,CAACK,GAAG;gBACjB3F,MAAM,EAAE,IAAI,CAAClC,OAAO;gBACpBkH,GAAG,EAAE7I,MAAM,CAAC8I,EAAE,CAAC,CAAC9I,MAAM,CAAC+I,QAAQ,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC;gBAC5CU,EAAE,EAAE,IAAI3D,IAAI;eACZ,CAAC,CACF;cAAAwD,SAAA,CAAA9F,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CACiB,IAAI,CAACyE,WAAW,CAACC,IAAI,CAAC;YAAA;cAAlCgB,GAAG,GAAAE,SAAA,CAAArC,IAAA;cAAA,OAAAqC,SAAA,CAAAtF,MAAA,WACFoF,GAAG;YAAA;cAAAE,SAAA,CAAA/F,IAAA;cAAA+F,SAAA,CAAAnC,EAAA,GAAAmC,SAAA;cAAA,MAEJ,IAAIpJ,MAAM,CAACgH,KAAK,CAAC,kBAAkB,EAAE,mBAAmB,CAAC;YAAA;YAAA;cAAA,OAAAoC,SAAA,CAAAjF,IAAA;UAAA;QAAA;QAAA,OAAAgF,QAAA;MAAA,2BAAA/E,OAAA;IAAA;IAEhE,OAAA4E,OAAA;EAAA;EAAAzG,MAAA,CAEKiH,OAAO;IAAb,SAAAA,QAAcP,OAAe;MAAA,IAAAQ,UAAA,EAAAvB,IAAA,EAAAwB,UAAA;MAAA,OAAAhK,mBAAA,CAAAwD,KAAA;QAAA,SAAAyG,SAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAvG,IAAA,GAAAuG,SAAA,CAAAtG,IAAA;YAAA;cAAAsG,SAAA,CAAAvG,IAAA;cAAA,IAEtB,IAAI,CAACxB,WAAW;gBAAA+H,SAAA,CAAAtG,IAAA;gBAAA;cAAA;cAAA,MAAQ,IAAI0D,KAAK,CAAC,4BAA4B,CAAC;YAAA;cAE9DyC,UAAU,GAAe1J,KAAK,CAAC6H,KAAK,CAACqB,OAAO,CAAC;cAAAW,SAAA,CAAAtG,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CAChC3C,UAAU,CAAC4I,UAAU,EAAE,IAAI,CAAC5H,WAAW,CAAC;YAAA;cAArDqG,IAAI,GAAA0B,SAAA,CAAA7C,IAAA;cACJ2C,UAAU,GAAgB3J,KAAK,CAAC6H,KAAK,CAAC,IAAIiC,WAAW,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,IAAI/B,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;cAAA,MAC9FwB,UAAU,IAAIrK,OAAA,CAAOqK,UAAU,MAAK,QAAQ;gBAAAE,SAAA,CAAAtG,IAAA;gBAAA;cAAA;cAAA,OAAAsG,SAAA,CAAA9F,MAAA,WACxC4F,UAAU;YAAA;cAAA,OAAAE,SAAA,CAAA9F,MAAA,WAEXmF,OAAO;YAAA;cAAAW,SAAA,CAAAvG,IAAA;cAAAuG,SAAA,CAAA3C,EAAA,GAAA2C,SAAA;cAEdtJ,oBAAoB,CAAC;gBAAE2D,IAAI,EAAE,OAAO;gBAAEgF,OAAO,EAAAW,SAAA,CAAA3C;cAAG,CAAE,CAAC;cACnD,IAAI,CAACrE,QAAQ,CAACjC,YAAY,CAACuG,KAAK,CAAC;cAAC,OAAA0C,SAAA,CAAA9F,MAAA,WAC3BmF,OAAO;YAAA;YAAA;cAAA,OAAAW,SAAA,CAAAzF,IAAA;UAAA;QAAA;QAAA,OAAAwF,QAAA;MAAA,4BAAAvF,OAAA;IAAA;IAEf,OAAAoF,OAAA;EAAA;EAAAjH,MAAA,CAEKwH,YAAY;IAAlB,SAAAA,aAAmB9F,IAAY,EAAEiE,IAAuB;MAAA,IAAA8B,MAAA;MAAA,IAAAC,OAAA,EAAAC,mBAAA,EAAAC,kBAAA,EAAAC,GAAA,EAAAC,IAAA;MAAA,OAAA3K,mBAAA,CAAAwD,KAAA;QAAA,SAAAoH,cAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAlH,IAAA,GAAAkH,UAAA,CAAAjH,IAAA;YAAA;cAAAiH,UAAA,CAAAtD,EAAA,GAC/ChD,IAAI;cAAAsG,UAAA,CAAAjH,IAAA,GAAAiH,UAAA,CAAAtD,EAAA,KACN,WAAW,OAAAsD,UAAA,CAAAtD,EAAA,KAoFX,aAAa,QAAAsD,UAAA,CAAAtD,EAAA,KAoBb,MAAM,QAAAsD,UAAA,CAAAtD,EAAA,KAON,KAAK;cAAA;YAAA;cA5GHiD,mBAAmB;gBAAG,SAAAM,SAAA;kBAAA,OAAA9K,mBAAA,CAAAwD,KAAA;oBAAA,SAAAuH,UAAAC,SAAA;sBAAA,kBAAAA,SAAA,CAAArH,IAAA,GAAAqH,SAAA,CAAApH,IAAA;wBAAA;0BAC3B0G,MAAI,CAACpH,QAAQ,CAACjC,YAAY,CAAC4C,YAAY,CAAC;0BACxCoH,YAAY,CAACV,OAAO,CAAC;0BAACS,SAAA,CAAArH,IAAA;0BAAA,IAEhB6E,IAAI,CAACtE,SAAS;4BAAA8G,SAAA,CAAApH,IAAA;4BAAA;0BAAA;0BAAA,MAAQ,IAAI0D,KAAK,CAAC,6BAA6B,CAAC;wBAAA;0BAAA0D,SAAA,CAAApH,IAAA;0BAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CAC7DwG,MAAI,CAAC9I,eAAe,EAAE;wBAAA;0BAAAwJ,SAAA,CAAApH,IAAA;0BAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CACtBwG,MAAI,CAAC7C,eAAe,CAACe,IAAI,CAACtE,SAAS,CAAC;wBAAA;0BAAA8G,SAAA,CAAApH,IAAA;0BAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CACpChD,YAAY,CAAC0H,IAAI,CAACxE,MAAM,CAAC;wBAAA;0BAC/BkH,UAAU;4BAAC,SAAAC,QAAA;8BAAA,OAAAnL,mBAAA,CAAAwD,KAAA;gCAAA,SAAA4H,SAAAC,SAAA;kCAAA,kBAAAA,SAAA,CAAA1H,IAAA,GAAA0H,SAAA,CAAAzH,IAAA;oCAAA;sCACV0G,MAAI,CAACpH,QAAQ,CAACjC,YAAY,CAACgG,WAAW,CAAC;sCACvCqD,MAAI,CAACxE,WAAW,EAAE;sCAClBwE,MAAI,CAAC1E,kBAAkB,EAAE;sCAAC,KAEtB4C,IAAI,CAAClF,OAAO;wCAAA+H,SAAA,CAAAzH,IAAA;wCAAA;sCAAA;sCAAAyH,SAAA,CAAAzH,IAAA;sCAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CACT/C,GAAG,CAACsD,IAAI,CAACC,IAAI,CAAC,cAAc,EAAE;wCACnCN,MAAM,EAAEsG,MAAI,CAACtI,OAAO;wCACpBuC,IAAI,EAAErD,iBAAiB,CAACoK;uCACxB,CAAC;oCAAA;oCAAA;sCAAA,OAAAD,SAAA,CAAA5G,IAAA;kCAAA;gCAAA;gCAAA,OAAA2G,QAAA;8BAAA,uBAAA1G,OAAA;4BAAA;4BAEH,OAAAyG,OAAA;0BAAA,KAAE,CAAC,CAAC;0BAACH,SAAA,CAAApH,IAAA;0BAAA;wBAAA;0BAAAoH,SAAA,CAAArH,IAAA;0BAAAqH,SAAA,CAAAzD,EAAA,GAAAyD,SAAA;0BAENpK,oBAAoB,CAAC;4BAAE2D,IAAI,EAAE,OAAO;4BAAEgF,OAAO,EAAAyB,SAAA,CAAAzD;0BAAG,CAAE,CAAC;0BAAC,MAC9C,IAAIjH,MAAM,CAACgH,KAAK,CAAC,4BAA4B,EAAE,6BAA6B,CAAC;wBAAA;wBAAA;0BAAA,OAAA0D,SAAA,CAAAvG,IAAA;sBAAA;oBAAA;oBAAA,OAAAsG,SAAA;kBAAA,4BAAArG,OAAA;gBAAA;gBAEpF,OAAAoG,QAAA;cAAA;cAEKL,kBAAkB,GAAG,SAAAA,CAAA,EAAW;gBACrCQ,YAAY,CAACV,OAAO,CAAC;gBACrBD,MAAI,CAAClE,IAAI,EAAE;gBACX1F,eAAe,CAACgF,KAAK,EAAE;cACxB,CAAC;cAAAmF,UAAA,CAAAlH,IAAA;cAAAkH,UAAA,CAAAjH,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CAGkBnD,QAAQ,CAACsC,GAAG,CAACuF,IAAI,CAACvE,MAAM,CAAC;YAAA;cAArCyG,GAAG,GAAAG,UAAA,CAAAxD,IAAA;cAAA,IACJqD,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAEnF,QAAQ;gBAAAsF,UAAA,CAAAjH,IAAA;gBAAA;cAAA;cAAA,MACX,IAAItD,MAAM,CAACgH,KAAK,CAAC,kBAAkB,EAAE,mBAAmB,CAAC;YAAA;cAAA,MAG5DkB,IAAI,CAAClF,OAAO,IAAI,IAAI,CAACN,QAAQ,EAAE,KAAK/B,YAAY,CAACgG,WAAW;gBAAA4D,UAAA,CAAAjH,IAAA;gBAAA;cAAA;cAC/D,IAAI,CAACyC,KAAK,EAAE;cAACwE,UAAA,CAAAjH,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CACP0G,mBAAmB,EAAE;YAAA;cAAAK,UAAA,CAAAjH,IAAA;cAAA;YAAA;cAAA,MAIvB,IAAI,CAACZ,QAAQ,EAAE,KAAK/B,YAAY,CAACsK,SAAS;gBAAAV,UAAA,CAAAjH,IAAA;gBAAA;cAAA;cAAA,OAAAiH,UAAA,CAAAzG,MAAA;YAAA;cAI9C,IAAI,IAAI,CAACpB,QAAQ,EAAE,KAAK/B,YAAY,CAACgG,WAAW,EAAE;gBACjD,IAAI,CAACZ,KAAK,EAAE;cACb;cAEA,IAAI,CAACnD,QAAQ,CAACjC,YAAY,CAACsK,SAAS,CAAC;cACrC7K,eAAe,CAACuE,IAAI,CAAC;gBACpBC,SAAS,EAAEzE,YAAY;gBACvB0E,KAAK,EAAE;kBACNC,OAAO,EAAE,SAAS;kBAClBC,KAAK,EAAErE,CAAC,CAAC,KAAK,CAAC;kBACfsE,QAAQ,EAAEtE,CAAC,CAAC,mDAAmD,EAAE;oBAChEuE,QAAQ,EAAEmF,GAAG,CAACnF;mBACd,CAAC;kBACFC,WAAW,EAAExE,CAAC,CAAC,KAAK,CAAC;kBACrBwK,UAAU,EAAExK,CAAC,CAAC,IAAI,CAAC;kBACnByE,OAAO,EAAE,SAAAA,CAAA;oBAAA,OAAYgF,kBAAkB,EAAE;kBAAA;kBACzCgB,QAAQ,EAAE,SAAAA,CAAA;oBAAA,OAAYhB,kBAAkB,EAAE;kBAAA;kBAC1C9E,SAAS;oBAAE,SAAA+F,SAAA;sBAAA,OAAA1L,mBAAA,CAAAwD,KAAA;wBAAA,SAAAmI,UAAAC,SAAA;0BAAA,kBAAAA,SAAA,CAAAjI,IAAA,GAAAiI,SAAA,CAAAhI,IAAA;4BAAA;8BAAAgI,SAAA,CAAAhI,IAAA;8BAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CACJ0G,mBAAmB,EAAE;4BAAA;8BAC3B9J,eAAe,CAACgF,KAAK,EAAE;4BAAC;4BAAA;8BAAA,OAAAkG,SAAA,CAAAnH,IAAA;0BAAA;wBAAA;wBAAA,OAAAkH,SAAA;sBAAA,uBAAAjH,OAAA;oBAAA;oBACxB,OAAAgH,QAAA;kBAAA;;eAEF,CAAC;cACFnB,OAAO,GAAGW,UAAU,CAAC,YAAK;gBACzBZ,MAAI,CAACpH,QAAQ,CAACjC,YAAY,CAAC4K,OAAO,CAAC;gBACnCnL,eAAe,CAACgF,KAAK,EAAE;cACxB,CAAC,EAAE,KAAK,CAAC;YAAC;cAAAmF,UAAA,CAAAjH,IAAA;cAAA;YAAA;cAAAiH,UAAA,CAAAlH,IAAA;cAAAkH,UAAA,CAAAiB,EAAA,GAAAjB,UAAA;cAGXjK,oBAAoB,CAAC;gBAAE2D,IAAI,EAAE,OAAO;gBAAEgF,OAAO,EAAAsB,UAAA,CAAAiB;cAAG,CAAE,CAAC;YAAC;cAAA,OAAAjB,UAAA,CAAAzG,MAAA;YAAA;cAAAyG,UAAA,CAAAlH,IAAA;cAAA,IAM/C6E,IAAI,CAACtE,SAAS;gBAAA2G,UAAA,CAAAjH,IAAA;gBAAA;cAAA;cAAA,MAAQ,IAAI0D,KAAK,CAAC,6BAA6B,CAAC;YAAA;cAAAuD,UAAA,CAAAjH,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CAC7D,IAAI,CAAC2D,eAAe,CAACe,IAAI,CAACtE,SAAS,CAAC;YAAA;cAE1C,IAAI,CAAChB,QAAQ,CAACjC,YAAY,CAACgG,WAAW,CAAC;cAAC,KAEpC,IAAI,CAAC1E,UAAU;gBAAAsI,UAAA,CAAAjH,IAAA;gBAAA;cAAA;cAClB,IAAI,CAACgC,kBAAkB,EAAE;cAACiF,UAAA,CAAAjH,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CACpB/C,GAAG,CAACsD,IAAI,CAACC,IAAI,CAAC,cAAc,EAAE;gBACnCN,MAAM,EAAE,IAAI,CAAChC,OAAO;gBACpBuC,IAAI,EAAErD,iBAAiB,CAAC6K;eACxB,CAAC;YAAA;cAEH,IAAI,CAACxJ,UAAU,GAAG,KAAK;cAACsI,UAAA,CAAAjH,IAAA;cAAA;YAAA;cAAAiH,UAAA,CAAAlH,IAAA;cAAAkH,UAAA,CAAAmB,EAAA,GAAAnB,UAAA;cAExBjK,oBAAoB,CAAC;gBAAE2D,IAAI,EAAE,OAAO;gBAAEgF,OAAO,EAAAsB,UAAA,CAAAmB;cAAG,CAAE,CAAC;YAAC;cAAA,OAAAnB,UAAA,CAAAzG,MAAA;YAAA;cAKrD,IAAI,IAAI,CAACpB,QAAQ,EAAE,KAAK/B,YAAY,CAAC4C,YAAY,EAAE;gBAClD,IAAI,CAACwC,KAAK,EAAE;gBACZ,IAAI,CAACnD,QAAQ,CAACjC,YAAY,CAACqF,QAAQ,CAAC;cACrC;cAAC,OAAAuE,UAAA,CAAAzG,MAAA;YAAA;cAAAyG,UAAA,CAAAlH,IAAA;cAAAkH,UAAA,CAAAjH,IAAA;cAAA,OAAA5D,mBAAA,CAAA8D,KAAA,CAKkBnD,QAAQ,CAACsC,GAAG,CAAC,IAAI,CAACnB,MAAM,CAAC;YAAA;cAArC4I,IAAG,GAAAG,UAAA,CAAAxD,IAAA;cAAA,IACJqD,IAAG,aAAHA,IAAG,eAAHA,IAAG,CAAEnF,QAAQ;gBAAAsF,UAAA,CAAAjH,IAAA;gBAAA;cAAA;cAAA,MACX,IAAItD,MAAM,CAACgH,KAAK,CAAC,kBAAkB,EAAE,mBAAmB,CAAC;YAAA;cAGhE,IAAI,IAAI,CAACtE,QAAQ,EAAE,KAAK/B,YAAY,CAACgG,WAAW,EAAE;gBACjD,IAAI,CAACZ,KAAK,EAAE;gBACZ,IAAI,CAACnD,QAAQ,CAACjC,YAAY,CAACqB,WAAW,CAAC;gBACvC5B,eAAe,CAACuE,IAAI,CAAC;kBACpBC,SAAS,EAAEzE,YAAY;kBACvB0E,KAAK,EAAE;oBACNC,OAAO,EAAE,SAAS;oBAClBC,KAAK,EAAErE,CAAC,CAAC,KAAK,CAAC;oBACfsE,QAAQ,EAAEtE,CAAC,CAAC,gCAAgC,EAAE;sBAAEuE,QAAQ,EAAEmF,IAAG,CAACnF;oBAAQ,CAAE,CAAC;oBACzEC,WAAW,EAAExE,CAAC,CAAC,IAAI,CAAC;oBACpByE,OAAO,EAAE/E,eAAe,CAACgF,KAAK;oBAC9BC,SAAS,EAAEjF,eAAe,CAACgF;;iBAE5B,CAAC;cACH;cAACmF,UAAA,CAAAjH,IAAA;cAAA;YAAA;cAAAiH,UAAA,CAAAlH,IAAA;cAAAkH,UAAA,CAAAoB,EAAA,GAAApB,UAAA;cAEDjK,oBAAoB,CAAC;gBAAE2D,IAAI,EAAE,OAAO;gBAAEgF,OAAO,EAAAsB,UAAA,CAAAoB;cAAG,CAAE,CAAC;YAAC;cAAA,OAAApB,UAAA,CAAAzG,MAAA;YAAA;YAAA;cAAA,OAAAyG,UAAA,CAAApG,IAAA;UAAA;QAAA;QAAA,OAAAmG,aAAA;MAAA,gDAAAlG,OAAA;IAAA;IAKvD,OAAA2F,YAAA;EAAA;EAAA,OAAAnK,OAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d6283d577901b2eb35f4af6945e21e5ca9e4abef"}
