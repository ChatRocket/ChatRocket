{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/canned-responses/server/methods/saveCannedResponse.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/canned-responses/server/methods/saveCannedResponse.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/canned-responses/server/methods/saveCannedResponse.ts","inputSourceMap":{"version":3,"file":"ee/app/canned-responses/server/methods/saveCannedResponse.ts","sourceRoot":"","sources":["ee/app/canned-responses/server/methods/saveCannedResponse.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelCannedResponse, ILivechatDepartment } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { LivechatDepartment, CannedResponse, Users } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../../../../app/authorization/server/functions/hasPermission';\nimport notifications from '../../../../../app/notifications/server/lib/Notifications';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsaveCannedResponse(\n\t\t\t_id: string,\n\t\t\tresponseData: {\n\t\t\t\tshortcut: string;\n\t\t\t\ttext: string;\n\t\t\t\tscope: string;\n\t\t\t\ttags?: string[];\n\t\t\t\tdepartmentId?: string;\n\t\t\t},\n\t\t): Promise<Omit<IOmnichannelCannedResponse, '_updatedAt' | '_createdAt'> & { _createdAt?: Date }>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync saveCannedResponse(_id, responseData) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId || !(await hasPermissionAsync(userId, 'save-canned-responses'))) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'saveCannedResponse' });\n\t\t}\n\n\t\tcheck(_id, Match.Maybe(String));\n\n\t\tcheck(responseData, {\n\t\t\tshortcut: String,\n\t\t\ttext: String,\n\t\t\tscope: String,\n\t\t\ttags: Match.Maybe([String]),\n\t\t\tdepartmentId: Match.Maybe(String),\n\t\t});\n\n\t\tconst canSaveAll = await hasPermissionAsync(userId, 'save-all-canned-responses');\n\t\tif (!canSaveAll && ['global'].includes(responseData.scope)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed to modify canned responses on *global* scope', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\tconst canSaveDepartment = await hasPermissionAsync(userId, 'save-department-canned-responses');\n\t\tif (!canSaveAll && !canSaveDepartment && ['department'].includes(responseData.scope)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed to modify canned responses on *department* scope', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\t// to avoid inconsistencies\n\t\tif (responseData.scope === 'user') {\n\t\t\tdelete responseData.departmentId;\n\t\t}\n\t\t// TODO: check if the department i'm trying to save is a department i can interact with\n\n\t\t// check if the response already exists and we're not updating one\n\t\tconst duplicateShortcut = await CannedResponse.findOneByShortcut(responseData.shortcut, {\n\t\t\tprojection: { _id: 1 },\n\t\t});\n\t\tif ((!_id && duplicateShortcut) || (_id && duplicateShortcut && duplicateShortcut._id !== _id)) {\n\t\t\tthrow new Meteor.Error('error-invalid-shortcut', 'Shortcut provided already exists', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\tif (responseData.scope === 'department' && !responseData.departmentId) {\n\t\t\tthrow new Meteor.Error('error-invalid-department', 'Invalid department', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tresponseData.departmentId &&\n\t\t\t!(await LivechatDepartment.findOneById<Pick<ILivechatDepartment, '_id'>>(responseData.departmentId, { projection: { _id: 1 } }))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-invalid-department', 'Invalid department', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\tlet result: Omit<IOmnichannelCannedResponse, '_updatedAt' | '_createdAt'> & { _createdAt?: Date };\n\n\t\tif (_id) {\n\t\t\tconst cannedResponse = await CannedResponse.findOneById(_id);\n\t\t\tif (!cannedResponse) {\n\t\t\t\tthrow new Meteor.Error('error-canned-response-not-found', 'Canned Response not found', {\n\t\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tresult = await CannedResponse.updateCannedResponse(_id, { ...responseData, createdBy: cannedResponse.createdBy });\n\t\t} else {\n\t\t\tconst user = await Users.findOneById(userId);\n\n\t\t\tconst data = {\n\t\t\t\t...responseData,\n\t\t\t\t...(responseData.scope === 'user' && { userId: user?._id }),\n\t\t\t\tcreatedBy: { _id: user?._id || '', username: user?.username || '' },\n\t\t\t\t_createdAt: new Date(),\n\t\t\t};\n\n\t\t\tresult = await CannedResponse.createCannedResponse(data);\n\t\t}\n\n\t\tnotifications.streamCannedResponses.emit('canned-responses', {\n\t\t\ttype: 'changed',\n\t\t\t...result,\n\t\t});\n\n\t\treturn result;\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/canned-responses/server/methods/saveCannedResponse.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/canned-responses/server/methods/saveCannedResponse.ts","inputSourceMap":{"version":3,"file":"ee/app/canned-responses/server/methods/saveCannedResponse.ts","sourceRoot":"","sources":["ee/app/canned-responses/server/methods/saveCannedResponse.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelCannedResponse, ILivechatDepartment } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { LivechatDepartment, CannedResponse, Users } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../../../../app/authorization/server/functions/hasPermission';\nimport notifications from '../../../../../app/notifications/server/lib/Notifications';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsaveCannedResponse(\n\t\t\t_id: string,\n\t\t\tresponseData: {\n\t\t\t\tshortcut: string;\n\t\t\t\ttext: string;\n\t\t\t\tscope: string;\n\t\t\t\ttags?: string[];\n\t\t\t\tdepartmentId?: string;\n\t\t\t},\n\t\t): Promise<Omit<IOmnichannelCannedResponse, '_updatedAt' | '_createdAt'> & { _createdAt?: Date }>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync saveCannedResponse(_id, responseData) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId || !(await hasPermissionAsync(userId, 'save-canned-responses'))) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'saveCannedResponse' });\n\t\t}\n\n\t\tcheck(_id, Match.Maybe(String));\n\n\t\tcheck(responseData, {\n\t\t\tshortcut: String,\n\t\t\ttext: String,\n\t\t\tscope: String,\n\t\t\ttags: Match.Maybe([String]),\n\t\t\tdepartmentId: Match.Maybe(String),\n\t\t});\n\n\t\tconst canSaveAll = await hasPermissionAsync(userId, 'save-all-canned-responses');\n\t\tif (!canSaveAll && ['global'].includes(responseData.scope)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed to modify canned responses on *global* scope', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\tconst canSaveDepartment = await hasPermissionAsync(userId, 'save-department-canned-responses');\n\t\tif (!canSaveAll && !canSaveDepartment && ['department'].includes(responseData.scope)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed to modify canned responses on *department* scope', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\t// to avoid inconsistencies\n\t\tif (responseData.scope === 'user') {\n\t\t\tdelete responseData.departmentId;\n\t\t}\n\t\t// TODO: check if the department i'm trying to save is a department i can interact with\n\n\t\t// check if the response already exists and we're not updating one\n\t\tconst duplicateShortcut = await CannedResponse.findOneByShortcut(responseData.shortcut, {\n\t\t\tprojection: { _id: 1 },\n\t\t});\n\t\tif ((!_id && duplicateShortcut) || (_id && duplicateShortcut && duplicateShortcut._id !== _id)) {\n\t\t\tthrow new Meteor.Error('error-invalid-shortcut', 'Shortcut provided already exists', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\tif (responseData.scope === 'department' && !responseData.departmentId) {\n\t\t\tthrow new Meteor.Error('error-invalid-department', 'Invalid department', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tresponseData.departmentId &&\n\t\t\t!(await LivechatDepartment.findOneById<Pick<ILivechatDepartment, '_id'>>(responseData.departmentId, { projection: { _id: 1 } }))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-invalid-department', 'Invalid department', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\tlet result: Omit<IOmnichannelCannedResponse, '_updatedAt' | '_createdAt'> & { _createdAt?: Date };\n\n\t\tif (_id) {\n\t\t\tconst cannedResponse = await CannedResponse.findOneById(_id);\n\t\t\tif (!cannedResponse) {\n\t\t\t\tthrow new Meteor.Error('error-canned-response-not-found', 'Canned Response not found', {\n\t\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tresult = await CannedResponse.updateCannedResponse(_id, { ...responseData, createdBy: cannedResponse.createdBy });\n\t\t} else {\n\t\t\tconst user = await Users.findOneById(userId);\n\n\t\t\tconst data = {\n\t\t\t\t...responseData,\n\t\t\t\t...(responseData.scope === 'user' && { userId: user?._id }),\n\t\t\t\tcreatedBy: { _id: user?._id || '', username: user?.username || '' },\n\t\t\t\t_createdAt: new Date(),\n\t\t\t};\n\n\t\t\tresult = await CannedResponse.createCannedResponse(data);\n\t\t}\n\n\t\tnotifications.streamCannedResponses.emit('canned-responses', {\n\t\t\ttype: 'changed',\n\t\t\t...result,\n\t\t});\n\n\t\treturn result;\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let LivechatDepartment, CannedResponse, Users;\n    module.link(\"@rocket.chat/models\", {\n      LivechatDepartment(v) {\n        LivechatDepartment = v;\n      },\n      CannedResponse(v) {\n        CannedResponse = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let hasPermissionAsync;\n    module.link(\"../../../../../app/authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 3);\n    let notifications;\n    module.link(\"../../../../../app/notifications/server/lib/Notifications\", {\n      default(v) {\n        notifications = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async saveCannedResponse(_id, responseData) {\n        const userId = Meteor.userId();\n        if (!userId || !(await hasPermissionAsync(userId, 'save-canned-responses'))) {\n          throw new Meteor.Error('error-not-allowed', 'Not allowed', {\n            method: 'saveCannedResponse'\n          });\n        }\n        check(_id, Match.Maybe(String));\n        check(responseData, {\n          shortcut: String,\n          text: String,\n          scope: String,\n          tags: Match.Maybe([String]),\n          departmentId: Match.Maybe(String)\n        });\n        const canSaveAll = await hasPermissionAsync(userId, 'save-all-canned-responses');\n        if (!canSaveAll && ['global'].includes(responseData.scope)) {\n          throw new Meteor.Error('error-not-allowed', 'Not allowed to modify canned responses on *global* scope', {\n            method: 'saveCannedResponse'\n          });\n        }\n        const canSaveDepartment = await hasPermissionAsync(userId, 'save-department-canned-responses');\n        if (!canSaveAll && !canSaveDepartment && ['department'].includes(responseData.scope)) {\n          throw new Meteor.Error('error-not-allowed', 'Not allowed to modify canned responses on *department* scope', {\n            method: 'saveCannedResponse'\n          });\n        }\n        // to avoid inconsistencies\n        if (responseData.scope === 'user') {\n          delete responseData.departmentId;\n        }\n        // TODO: check if the department i'm trying to save is a department i can interact with\n        // check if the response already exists and we're not updating one\n        const duplicateShortcut = await CannedResponse.findOneByShortcut(responseData.shortcut, {\n          projection: {\n            _id: 1\n          }\n        });\n        if (!_id && duplicateShortcut || _id && duplicateShortcut && duplicateShortcut._id !== _id) {\n          throw new Meteor.Error('error-invalid-shortcut', 'Shortcut provided already exists', {\n            method: 'saveCannedResponse'\n          });\n        }\n        if (responseData.scope === 'department' && !responseData.departmentId) {\n          throw new Meteor.Error('error-invalid-department', 'Invalid department', {\n            method: 'saveCannedResponse'\n          });\n        }\n        if (responseData.departmentId && !(await LivechatDepartment.findOneById(responseData.departmentId, {\n          projection: {\n            _id: 1\n          }\n        }))) {\n          throw new Meteor.Error('error-invalid-department', 'Invalid department', {\n            method: 'saveCannedResponse'\n          });\n        }\n        let result;\n        if (_id) {\n          const cannedResponse = await CannedResponse.findOneById(_id);\n          if (!cannedResponse) {\n            throw new Meteor.Error('error-canned-response-not-found', 'Canned Response not found', {\n              method: 'saveCannedResponse'\n            });\n          }\n          result = await CannedResponse.updateCannedResponse(_id, _objectSpread(_objectSpread({}, responseData), {}, {\n            createdBy: cannedResponse.createdBy\n          }));\n        } else {\n          const user = await Users.findOneById(userId);\n          const data = _objectSpread(_objectSpread(_objectSpread({}, responseData), responseData.scope === 'user' && {\n            userId: user === null || user === void 0 ? void 0 : user._id\n          }), {}, {\n            createdBy: {\n              _id: (user === null || user === void 0 ? void 0 : user._id) || '',\n              username: (user === null || user === void 0 ? void 0 : user.username) || ''\n            },\n            _createdAt: new Date()\n          });\n          result = await CannedResponse.createCannedResponse(data);\n        }\n        notifications.streamCannedResponses.emit('canned-responses', _objectSpread({\n          type: 'changed'\n        }, result));\n        return result;\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","LivechatDepartment","CannedResponse","Users","Match","check","Meteor","hasPermissionAsync","notifications","__reifyWaitForDeps__","methods","saveCannedResponse","_id","responseData","userId","Error","method","Maybe","String","shortcut","text","scope","tags","departmentId","canSaveAll","includes","canSaveDepartment","duplicateShortcut","findOneByShortcut","projection","findOneById","result","cannedResponse","updateCannedResponse","createdBy","user","data","username","_createdAt","Date","createCannedResponse","streamCannedResponses","emit","type","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/canned-responses/server/methods/saveCannedResponse.ts"],"sourcesContent":["import type { IOmnichannelCannedResponse, ILivechatDepartment } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { LivechatDepartment, CannedResponse, Users } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../../../../app/authorization/server/functions/hasPermission';\nimport notifications from '../../../../../app/notifications/server/lib/Notifications';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsaveCannedResponse(\n\t\t\t_id: string,\n\t\t\tresponseData: {\n\t\t\t\tshortcut: string;\n\t\t\t\ttext: string;\n\t\t\t\tscope: string;\n\t\t\t\ttags?: string[];\n\t\t\t\tdepartmentId?: string;\n\t\t\t},\n\t\t): Promise<Omit<IOmnichannelCannedResponse, '_updatedAt' | '_createdAt'> & { _createdAt?: Date }>;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync saveCannedResponse(_id, responseData) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId || !(await hasPermissionAsync(userId, 'save-canned-responses'))) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'saveCannedResponse' });\n\t\t}\n\n\t\tcheck(_id, Match.Maybe(String));\n\n\t\tcheck(responseData, {\n\t\t\tshortcut: String,\n\t\t\ttext: String,\n\t\t\tscope: String,\n\t\t\ttags: Match.Maybe([String]),\n\t\t\tdepartmentId: Match.Maybe(String),\n\t\t});\n\n\t\tconst canSaveAll = await hasPermissionAsync(userId, 'save-all-canned-responses');\n\t\tif (!canSaveAll && ['global'].includes(responseData.scope)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed to modify canned responses on *global* scope', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\tconst canSaveDepartment = await hasPermissionAsync(userId, 'save-department-canned-responses');\n\t\tif (!canSaveAll && !canSaveDepartment && ['department'].includes(responseData.scope)) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed to modify canned responses on *department* scope', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\t// to avoid inconsistencies\n\t\tif (responseData.scope === 'user') {\n\t\t\tdelete responseData.departmentId;\n\t\t}\n\t\t// TODO: check if the department i'm trying to save is a department i can interact with\n\n\t\t// check if the response already exists and we're not updating one\n\t\tconst duplicateShortcut = await CannedResponse.findOneByShortcut(responseData.shortcut, {\n\t\t\tprojection: { _id: 1 },\n\t\t});\n\t\tif ((!_id && duplicateShortcut) || (_id && duplicateShortcut && duplicateShortcut._id !== _id)) {\n\t\t\tthrow new Meteor.Error('error-invalid-shortcut', 'Shortcut provided already exists', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\tif (responseData.scope === 'department' && !responseData.departmentId) {\n\t\t\tthrow new Meteor.Error('error-invalid-department', 'Invalid department', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tresponseData.departmentId &&\n\t\t\t!(await LivechatDepartment.findOneById<Pick<ILivechatDepartment, '_id'>>(responseData.departmentId, { projection: { _id: 1 } }))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-invalid-department', 'Invalid department', {\n\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t});\n\t\t}\n\n\t\tlet result: Omit<IOmnichannelCannedResponse, '_updatedAt' | '_createdAt'> & { _createdAt?: Date };\n\n\t\tif (_id) {\n\t\t\tconst cannedResponse = await CannedResponse.findOneById(_id);\n\t\t\tif (!cannedResponse) {\n\t\t\t\tthrow new Meteor.Error('error-canned-response-not-found', 'Canned Response not found', {\n\t\t\t\t\tmethod: 'saveCannedResponse',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tresult = await CannedResponse.updateCannedResponse(_id, { ...responseData, createdBy: cannedResponse.createdBy });\n\t\t} else {\n\t\t\tconst user = await Users.findOneById(userId);\n\n\t\t\tconst data = {\n\t\t\t\t...responseData,\n\t\t\t\t...(responseData.scope === 'user' && { userId: user?._id }),\n\t\t\t\tcreatedBy: { _id: user?._id || '', username: user?.username || '' },\n\t\t\t\t_createdAt: new Date(),\n\t\t\t};\n\n\t\t\tresult = await CannedResponse.createCannedResponse(data);\n\t\t}\n\n\t\tnotifications.streamCannedResponses.emit('canned-responses', {\n\t\t\ttype: 'changed',\n\t\t\t...result,\n\t\t});\n\n\t\treturn result;\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7d948b87d86536dffa3228d80f6bd361ca700d22"}
