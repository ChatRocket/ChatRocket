{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/UserInfo/UserInfoActions.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/room/contextualBar/UserInfo/UserInfoActions.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/UserInfo/UserInfoActions.tsx","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/UserInfo/UserInfoActions.tsx","sourceRoot":"","sources":["client/views/room/contextualBar/UserInfo/UserInfoActions.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/display-name, react/no-multi-comp */\nimport type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { ButtonGroup, IconButton, Skeleton } from '@rocket.chat/fuselage';\nimport { GenericMenu } from '@rocket.chat/ui-client';\nimport type { ReactElement } from 'react';\nimport React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { UserInfoAction } from '../../../../components/UserInfo';\nimport { useMemberExists } from '../../../hooks/useMemberExists';\nimport { useUserInfoActions } from '../../hooks/useUserInfoActions';\n\ntype UserInfoActionsProps = {\n\tuser: Pick<IUser, '_id' | 'username' | 'name' | 'freeSwitchExtension'>;\n\trid: IRoom['_id'];\n\tbackToList?: () => void;\n};\n\nconst UserInfoActions = ({ user, rid, backToList }: UserInfoActionsProps): ReactElement => {\n\tconst { t } = useTranslation();\n\tconst {\n\t\tdata: isMemberData,\n\t\trefetch,\n\t\tisSuccess: membershipCheckSuccess,\n\t\tisLoading,\n\t} = useMemberExists({ roomId: rid, username: user.username as string });\n\n\tconst isMember = membershipCheckSuccess && isMemberData?.isMember;\n\tconst { _id: userId, username, name, freeSwitchExtension } = user;\n\n\tconst { actions: actionsDefinition, menuActions: menuOptions } = useUserInfoActions({\n\t\trid,\n\t\tuser: { _id: userId, username, name, freeSwitchExtension },\n\t\tsize: 3,\n\t\tisMember,\n\t\treload: () => {\n\t\t\tbackToList?.();\n\t\t\trefetch();\n\t\t},\n\t});\n\n\tconst menu = useMemo(() => {\n\t\tif (!menuOptions?.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<GenericMenu\n\t\t\t\tbutton={<IconButton icon='kebab' secondary />}\n\t\t\t\ttitle={t('More')}\n\t\t\t\tkey='menu'\n\t\t\t\tdata-qa-id='UserUserInfo-menu'\n\t\t\t\tsections={menuOptions}\n\t\t\t\tplacement='bottom-end'\n\t\t\t\tsmall={false}\n\t\t\t\tdata-qa='UserUserInfo-menu'\n\t\t\t/>\n\t\t);\n\t}, [menuOptions, t]);\n\n\t// TODO: sanitize Action type to avoid any\n\tconst actions = useMemo(() => {\n\t\tconst mapAction = ([key, { content, title, icon, onClick }]: any): ReactElement => (\n\t\t\t<UserInfoAction key={key} title={title} label={content} onClick={onClick} icon={icon} />\n\t\t);\n\n\t\treturn [...actionsDefinition.map(mapAction), menu].filter(Boolean);\n\t}, [actionsDefinition, menu]);\n\n\tif (isLoading) {\n\t\treturn <Skeleton w='full' />;\n\t}\n\treturn <ButtonGroup align='center'>{actions}</ButtonGroup>;\n};\n\nexport default UserInfoActions;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/contextualBar/UserInfo/UserInfoActions.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/contextualBar/UserInfo/UserInfoActions.tsx","inputSourceMap":{"version":3,"file":"client/views/room/contextualBar/UserInfo/UserInfoActions.tsx","sourceRoot":"","sources":["client/views/room/contextualBar/UserInfo/UserInfoActions.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/display-name, react/no-multi-comp */\nimport type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { ButtonGroup, IconButton, Skeleton } from '@rocket.chat/fuselage';\nimport { GenericMenu } from '@rocket.chat/ui-client';\nimport type { ReactElement } from 'react';\nimport React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { UserInfoAction } from '../../../../components/UserInfo';\nimport { useMemberExists } from '../../../hooks/useMemberExists';\nimport { useUserInfoActions } from '../../hooks/useUserInfoActions';\n\ntype UserInfoActionsProps = {\n\tuser: Pick<IUser, '_id' | 'username' | 'name' | 'freeSwitchExtension'>;\n\trid: IRoom['_id'];\n\tbackToList?: () => void;\n};\n\nconst UserInfoActions = ({ user, rid, backToList }: UserInfoActionsProps): ReactElement => {\n\tconst { t } = useTranslation();\n\tconst {\n\t\tdata: isMemberData,\n\t\trefetch,\n\t\tisSuccess: membershipCheckSuccess,\n\t\tisLoading,\n\t} = useMemberExists({ roomId: rid, username: user.username as string });\n\n\tconst isMember = membershipCheckSuccess && isMemberData?.isMember;\n\tconst { _id: userId, username, name, freeSwitchExtension } = user;\n\n\tconst { actions: actionsDefinition, menuActions: menuOptions } = useUserInfoActions({\n\t\trid,\n\t\tuser: { _id: userId, username, name, freeSwitchExtension },\n\t\tsize: 3,\n\t\tisMember,\n\t\treload: () => {\n\t\t\tbackToList?.();\n\t\t\trefetch();\n\t\t},\n\t});\n\n\tconst menu = useMemo(() => {\n\t\tif (!menuOptions?.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<GenericMenu\n\t\t\t\tbutton={<IconButton icon='kebab' secondary />}\n\t\t\t\ttitle={t('More')}\n\t\t\t\tkey='menu'\n\t\t\t\tdata-qa-id='UserUserInfo-menu'\n\t\t\t\tsections={menuOptions}\n\t\t\t\tplacement='bottom-end'\n\t\t\t\tsmall={false}\n\t\t\t\tdata-qa='UserUserInfo-menu'\n\t\t\t/>\n\t\t);\n\t}, [menuOptions, t]);\n\n\t// TODO: sanitize Action type to avoid any\n\tconst actions = useMemo(() => {\n\t\tconst mapAction = ([key, { content, title, icon, onClick }]: any): ReactElement => (\n\t\t\t<UserInfoAction key={key} title={title} label={content} onClick={onClick} icon={icon} />\n\t\t);\n\n\t\treturn [...actionsDefinition.map(mapAction), menu].filter(Boolean);\n\t}, [actionsDefinition, menu]);\n\n\tif (isLoading) {\n\t\treturn <Skeleton w='full' />;\n\t}\n\treturn <ButtonGroup align='center'>{actions}</ButtonGroup>;\n};\n\nexport default UserInfoActions;\n"]}}},"code":"let ButtonGroup, IconButton, Skeleton;\nmodule.link(\"@rocket.chat/fuselage\", {\n  ButtonGroup(v) {\n    ButtonGroup = v;\n  },\n  IconButton(v) {\n    IconButton = v;\n  },\n  Skeleton(v) {\n    Skeleton = v;\n  }\n}, 0);\nlet GenericMenu;\nmodule.link(\"@rocket.chat/ui-client\", {\n  GenericMenu(v) {\n    GenericMenu = v;\n  }\n}, 1);\nlet React, useMemo;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 2);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 3);\nlet UserInfoAction;\nmodule.link(\"../../../../components/UserInfo\", {\n  UserInfoAction(v) {\n    UserInfoAction = v;\n  }\n}, 4);\nlet useMemberExists;\nmodule.link(\"../../../hooks/useMemberExists\", {\n  useMemberExists(v) {\n    useMemberExists = v;\n  }\n}, 5);\nlet useUserInfoActions;\nmodule.link(\"../../hooks/useUserInfoActions\", {\n  useUserInfoActions(v) {\n    useUserInfoActions = v;\n  }\n}, 6);\nconst UserInfoActions = _ref => {\n  let {\n    user,\n    rid,\n    backToList\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    data: isMemberData,\n    refetch,\n    isSuccess: membershipCheckSuccess,\n    isLoading\n  } = useMemberExists({\n    roomId: rid,\n    username: user.username\n  });\n  const isMember = membershipCheckSuccess && (isMemberData === null || isMemberData === void 0 ? void 0 : isMemberData.isMember);\n  const {\n    _id: userId,\n    username,\n    name,\n    freeSwitchExtension\n  } = user;\n  const {\n    actions: actionsDefinition,\n    menuActions: menuOptions\n  } = useUserInfoActions({\n    rid,\n    user: {\n      _id: userId,\n      username,\n      name,\n      freeSwitchExtension\n    },\n    size: 3,\n    isMember,\n    reload: () => {\n      backToList === null || backToList === void 0 ? void 0 : backToList();\n      refetch();\n    }\n  });\n  const menu = useMemo(() => {\n    if (!(menuOptions !== null && menuOptions !== void 0 && menuOptions.length)) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(GenericMenu, {\n      button: /*#__PURE__*/React.createElement(IconButton, {\n        icon: \"kebab\",\n        secondary: true\n      }),\n      title: t('More'),\n      key: \"menu\",\n      \"data-qa-id\": \"UserUserInfo-menu\",\n      sections: menuOptions,\n      placement: \"bottom-end\",\n      small: false,\n      \"data-qa\": \"UserUserInfo-menu\"\n    });\n  }, [menuOptions, t]);\n  // TODO: sanitize Action type to avoid any\n  const actions = useMemo(() => {\n    const mapAction = _ref2 => {\n      let [key, {\n        content,\n        title,\n        icon,\n        onClick\n      }] = _ref2;\n      return /*#__PURE__*/React.createElement(UserInfoAction, {\n        key: key,\n        title: title,\n        label: content,\n        onClick: onClick,\n        icon: icon\n      });\n    };\n    return [...actionsDefinition.map(mapAction), menu].filter(Boolean);\n  }, [actionsDefinition, menu]);\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Skeleton, {\n      w: \"full\"\n    });\n  }\n  return /*#__PURE__*/React.createElement(ButtonGroup, {\n    align: \"center\"\n  }, actions);\n};\nmodule.exportDefault(UserInfoActions);","map":{"version":3,"names":["ButtonGroup","IconButton","Skeleton","module","link","v","GenericMenu","React","useMemo","default","useTranslation","UserInfoAction","useMemberExists","useUserInfoActions","UserInfoActions","_ref","user","rid","backToList","t","data","isMemberData","refetch","isSuccess","membershipCheckSuccess","isLoading","roomId","username","isMember","_id","userId","name","freeSwitchExtension","actions","actionsDefinition","menuActions","menuOptions","size","reload","menu","length","createElement","button","icon","secondary","title","key","sections","placement","small","mapAction","_ref2","content","onClick","label","map","filter","Boolean","w","align","exportDefault"],"sources":["client/views/room/contextualBar/UserInfo/UserInfoActions.tsx"],"sourcesContent":["/* eslint-disable react/display-name, react/no-multi-comp */\nimport type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { ButtonGroup, IconButton, Skeleton } from '@rocket.chat/fuselage';\nimport { GenericMenu } from '@rocket.chat/ui-client';\nimport type { ReactElement } from 'react';\nimport React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { UserInfoAction } from '../../../../components/UserInfo';\nimport { useMemberExists } from '../../../hooks/useMemberExists';\nimport { useUserInfoActions } from '../../hooks/useUserInfoActions';\n\ntype UserInfoActionsProps = {\n\tuser: Pick<IUser, '_id' | 'username' | 'name' | 'freeSwitchExtension'>;\n\trid: IRoom['_id'];\n\tbackToList?: () => void;\n};\n\nconst UserInfoActions = ({ user, rid, backToList }: UserInfoActionsProps): ReactElement => {\n\tconst { t } = useTranslation();\n\tconst {\n\t\tdata: isMemberData,\n\t\trefetch,\n\t\tisSuccess: membershipCheckSuccess,\n\t\tisLoading,\n\t} = useMemberExists({ roomId: rid, username: user.username as string });\n\n\tconst isMember = membershipCheckSuccess && isMemberData?.isMember;\n\tconst { _id: userId, username, name, freeSwitchExtension } = user;\n\n\tconst { actions: actionsDefinition, menuActions: menuOptions } = useUserInfoActions({\n\t\trid,\n\t\tuser: { _id: userId, username, name, freeSwitchExtension },\n\t\tsize: 3,\n\t\tisMember,\n\t\treload: () => {\n\t\t\tbackToList?.();\n\t\t\trefetch();\n\t\t},\n\t});\n\n\tconst menu = useMemo(() => {\n\t\tif (!menuOptions?.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<GenericMenu\n\t\t\t\tbutton={<IconButton icon='kebab' secondary />}\n\t\t\t\ttitle={t('More')}\n\t\t\t\tkey='menu'\n\t\t\t\tdata-qa-id='UserUserInfo-menu'\n\t\t\t\tsections={menuOptions}\n\t\t\t\tplacement='bottom-end'\n\t\t\t\tsmall={false}\n\t\t\t\tdata-qa='UserUserInfo-menu'\n\t\t\t/>\n\t\t);\n\t}, [menuOptions, t]);\n\n\t// TODO: sanitize Action type to avoid any\n\tconst actions = useMemo(() => {\n\t\tconst mapAction = ([key, { content, title, icon, onClick }]: any): ReactElement => (\n\t\t\t<UserInfoAction key={key} title={title} label={content} onClick={onClick} icon={icon} />\n\t\t);\n\n\t\treturn [...actionsDefinition.map(mapAction), menu].filter(Boolean);\n\t}, [actionsDefinition, menu]);\n\n\tif (isLoading) {\n\t\treturn <Skeleton w='full' />;\n\t}\n\treturn <ButtonGroup align='center'>{actions}</ButtonGroup>;\n};\n\nexport default UserInfoActions;\n"],"mappings":"AAEA,IAAAA,WAAS,EAAAC,UAAa,EAAAC,QAAY;AAAAC,MAAQ,CAAAC,IAAE,wBAAM;EAAuBJ,WAACA,CAAAK,CAAA;IAAAL,WAAA,GAAAK,CAAA;EAAA;EAAAJ,WAAAI,CAAA;IAAAJ,UAAA,GAAAI,CAAA;EAAA;EAAAH,SAAAG,CAAA;IAAAH,QAAA,GAAAG,CAAA;EAAA;AAAA;AAAA,IAAAC,WAAA;AAAAH,MAAA,CAAAC,IAAA;EAAAE,YAAAD,CAAA;IAAAC,WAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,KAAA,EAAAC,OAAA;AAAAL,MAAA,CAAAC,IAAA;EAAAK,QAAAJ,CAAA;IAAAE,KAAA,GAAAF,CAAA;EAAA;EAAAG,QAAAH,CAAA;IAAAG,OAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAK,cAAA;AAAAP,MAAA,CAAAC,IAAA;EAAAM,eAAAL,CAAA;IAAAK,cAAA,GAAAL,CAAA;EAAA;AAAA;AAAA,IAAAM,cAAA;AAAAR,MAAA,CAAAC,IAAA;EAAAO,eAAAN,CAAA;IAAAM,cAAA,GAAAN,CAAA;EAAA;AAAA;AAAA,IAAAO,eAAA;AAAAT,MAAA,CAAAC,IAAA;EAAAQ,gBAAAP,CAAA;IAAAO,eAAA,GAAAP,CAAA;EAAA;AAAA;AAAA,IAAAQ,kBAAA;AAAAV,MAAA,CAAAC,IAAA;EAAAS,mBAAAR,CAAA;IAAAQ,kBAAA,GAAAR,CAAA;EAAA;AAAA;AAgB1E,MAAMS,eAAe,GAAGC,IAAA,IAAkE;EAAA,IAAjE;IAAEC,IAAI;IAAEC,GAAG;IAAEC;EAAU,CAAwB,GAAAH,IAAA;EACvE,MAAM;IAAEI;EAAC,CAAE,GAAGT,cAAc,EAAE;EAC9B,MAAM;IACLU,IAAI,EAAEC,YAAY;IAClBC,OAAO;IACPC,SAAS,EAAEC,sBAAsB;IACjCC;EAAS,CACT,GAAGb,eAAe,CAAC;IAAEc,MAAM,EAAET,GAAG;IAAEU,QAAQ,EAAEX,IAAI,CAACW;EAAkB,CAAE,CAAC;EAEvE,MAAMC,QAAQ,GAAGJ,sBAAsB,KAAIH,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEO,QAAQ;EACjE,MAAM;IAAEC,GAAG,EAAEC,MAAM;IAAEH,QAAQ;IAAEI,IAAI;IAAEC;EAAmB,CAAE,GAAGhB,IAAI;EAEjE,MAAM;IAAEiB,OAAO,EAAEC,iBAAiB;IAAEC,WAAW,EAAEC;EAAW,CAAE,GAAGvB,kBAAkB,CAAC;IACnFI,GAAG;IACHD,IAAI,EAAE;MAAEa,GAAG,EAAEC,MAAM;MAAEH,QAAQ;MAAEI,IAAI;MAAEC;IAAmB,CAAE;IAC1DK,IAAI,EAAE,CAAC;IACPT,QAAQ;IACRU,MAAM,EAAEA,CAAA,KAAK;MACZpB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAE,CAAE;MACdI,OAAO,EAAE;IACV;GACA,CAAC;EAEF,MAAMiB,IAAI,GAAG/B,OAAO,CAAC,MAAK;IACzB,IAAI,EAAC4B,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEI,MAAM,GAAE;MACzB,OAAO,IAAI;IACZ;IAEA,oBACCjC,KAAA,CAAAkC,aAAA,CAACnC,WAAW;MACXoC,MAAM,eAAEnC,KAAA,CAAAkC,aAAA,CAACxC,UAAU;QAAC0C,IAAI,EAAC,OAAO;QAACC,SAAS;MAAA,EAAI;MAC9CC,KAAK,EAAE1B,CAAC,CAAC,MAAM,CAAE;MACjB2B,GAAG,EAAC,MAAM;MACV,cAAW,mBAAmB;MAC9BC,QAAQ,EAAEX,WAAY;MACtBY,SAAS,EAAC,YAAY;MACtBC,KAAK,EAAE,KAAM;MACb,WAAQ;IAAmB,EAC1B;EAEJ,CAAC,EAAE,CAACb,WAAW,EAAEjB,CAAC,CAAC,CAAC;EAEpB;EACA,MAAMc,OAAO,GAAGzB,OAAO,CAAC,MAAK;IAC5B,MAAM0C,SAAS,GAAGC,KAAA;MAAA,IAAC,CAACL,GAAG,EAAE;QAAEM,OAAO;QAAEP,KAAK;QAAEF,IAAI;QAAEU;MAAO,CAAE,CAAM,GAAAF,KAAA;MAAA,oBAC/D5C,KAAA,CAAAkC,aAAA,CAAC9B,cAAc;QAACmC,GAAG,EAAEA,GAAI;QAACD,KAAK,EAAEA,KAAM;QAACS,KAAK,EAAEF,OAAQ;QAACC,OAAO,EAAEA,OAAQ;QAACV,IAAI,EAAEA;MAAK,EAAG;IAAA,CACxF;IAED,OAAO,CAAC,GAAGT,iBAAiB,CAACqB,GAAG,CAACL,SAAS,CAAC,EAAEX,IAAI,CAAC,CAACiB,MAAM,CAACC,OAAO,CAAC;EACnE,CAAC,EAAE,CAACvB,iBAAiB,EAAEK,IAAI,CAAC,CAAC;EAE7B,IAAId,SAAS,EAAE;IACd,oBAAOlB,KAAA,CAAAkC,aAAA,CAACvC,QAAQ;MAACwD,CAAC,EAAC;IAAM,EAAG;EAC7B;EACA,oBAAOnD,KAAA,CAAAkC,aAAA,CAACzC,WAAW;IAAC2D,KAAK,EAAC;EAAQ,GAAE1B,OAAqB,CAAC;AAC3D,CAAC;AAvED9B,MAAA,CAAOyD,aAAa,CAyEL9C,eAzEO","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e57bf1df6cae452370c700021558875daefbf115"}
