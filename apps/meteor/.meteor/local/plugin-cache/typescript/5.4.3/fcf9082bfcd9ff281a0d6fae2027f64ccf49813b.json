{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Permissions.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/Permissions.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Permissions.ts","inputSourceMap":{"version":3,"file":"server/models/raw/Permissions.ts","sourceRoot":"","sources":["server/models/raw/Permissions.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,cAAe,SAAQ,OAAoB;IACvD,YAAY,EAAM,EAAE,KAAwD;QAC3E,KAAK,CAAC,EAAE,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;IACjC,CAAC;IAES,YAAY;QACrB,OAAO;YACN;gBACC,GAAG,EAAE;oBACJ,KAAK,EAAE,CAAC;oBACR,SAAS,EAAE,CAAC;iBACZ;aACD;SACD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,IAAY,EAAE,KAAqB;QACvD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAChC;YACC,GAAG,EAAE,IAAI;YACT,KAAK;SACL,EACD,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAC1B,CAAC;QAEF,IAAI,MAAM,EAAE,CAAC;YACZ,OAAO,MAAM,CAAC,GAAG,CAAC;QACnB,CAAC;QAED,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAE3E,OAAO,IAAI,CAAC;IACb,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAU,EAAE,KAAqB;QAC7C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAA2B,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAChG,IAAI,MAAM,EAAE,CAAC;YACZ,OAAO,MAAM,CAAC,GAAG,CAAC;QACnB,CAAC;QAED,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAEzE,OAAO,EAAE,CAAC;IACX,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,UAAkB,EAAE,IAAkB;QACnD,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACjG,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,UAAkB,EAAE,KAAqB;QACvD,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,UAAkB,EAAE,IAAkB;QACtD,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACpF,CAAC;IAED,WAAW,CAAC,KAAiB,EAAE,SAAkB;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,SAAS,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IAC9D,CAAC;CACD","sourcesContent":["import type { IPermission, IRole, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IPermissionsModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, FindCursor, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class PermissionsRaw extends BaseRaw<IPermission> implements IPermissionsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IPermission>>) {\n\t\tsuper(db, 'permissions', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tlevel: 1,\n\t\t\t\t\tsettingId: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tasync createOrUpdate(name: string, roles: IRole['_id'][]): Promise<IPermission['_id']> {\n\t\tconst exists = await this.findOne<Pick<IPermission, '_id'>>(\n\t\t\t{\n\t\t\t\t_id: name,\n\t\t\t\troles,\n\t\t\t},\n\t\t\t{ projection: { _id: 1 } },\n\t\t);\n\n\t\tif (exists) {\n\t\t\treturn exists._id;\n\t\t}\n\n\t\tawait this.updateOne({ _id: name }, { $set: { roles } }, { upsert: true });\n\n\t\treturn name;\n\t}\n\n\tasync create(id: string, roles: IRole['_id'][]): Promise<IPermission['_id']> {\n\t\tconst exists = await this.findOneById<Pick<IPermission, '_id'>>(id, { projection: { _id: 1 } });\n\t\tif (exists) {\n\t\t\treturn exists._id;\n\t\t}\n\n\t\tawait this.updateOne({ _id: id }, { $set: { roles } }, { upsert: true });\n\n\t\treturn id;\n\t}\n\n\tasync addRole(permission: string, role: IRole['_id']): Promise<void> {\n\t\tawait this.updateOne({ _id: permission, roles: { $ne: role } }, { $addToSet: { roles: role } });\n\t}\n\n\tasync setRoles(permission: string, roles: IRole['_id'][]): Promise<void> {\n\t\tawait this.updateOne({ _id: permission }, { $set: { roles } });\n\t}\n\n\tasync removeRole(permission: string, role: IRole['_id']): Promise<void> {\n\t\tawait this.updateOne({ _id: permission, roles: role }, { $pull: { roles: role } });\n\t}\n\n\tfindByLevel(level: 'settings', settingId?: string): FindCursor<IPermission> {\n\t\treturn this.find({ level, ...(settingId && { settingId }) });\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Permissions.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/Permissions.ts","inputSourceMap":{"version":3,"file":"server/models/raw/Permissions.ts","sourceRoot":"","sources":["server/models/raw/Permissions.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,OAAO,cAAe,SAAQ,OAAoB;IACvD,YAAY,EAAM,EAAE,KAAwD;QAC3E,KAAK,CAAC,EAAE,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;IACjC,CAAC;IAES,YAAY;QACrB,OAAO;YACN;gBACC,GAAG,EAAE;oBACJ,KAAK,EAAE,CAAC;oBACR,SAAS,EAAE,CAAC;iBACZ;aACD;SACD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,IAAY,EAAE,KAAqB;QACvD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAChC;YACC,GAAG,EAAE,IAAI;YACT,KAAK;SACL,EACD,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAC1B,CAAC;QAEF,IAAI,MAAM,EAAE,CAAC;YACZ,OAAO,MAAM,CAAC,GAAG,CAAC;QACnB,CAAC;QAED,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAE3E,OAAO,IAAI,CAAC;IACb,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAU,EAAE,KAAqB;QAC7C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAA2B,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAChG,IAAI,MAAM,EAAE,CAAC;YACZ,OAAO,MAAM,CAAC,GAAG,CAAC;QACnB,CAAC;QAED,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAEzE,OAAO,EAAE,CAAC;IACX,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,UAAkB,EAAE,IAAkB;QACnD,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACjG,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,UAAkB,EAAE,KAAqB;QACvD,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,UAAkB,EAAE,IAAkB;QACtD,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACpF,CAAC;IAED,WAAW,CAAC,KAAiB,EAAE,SAAkB;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,SAAS,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IAC9D,CAAC;CACD","sourcesContent":["import type { IPermission, IRole, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IPermissionsModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, FindCursor, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class PermissionsRaw extends BaseRaw<IPermission> implements IPermissionsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IPermission>>) {\n\t\tsuper(db, 'permissions', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tlevel: 1,\n\t\t\t\t\tsettingId: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tasync createOrUpdate(name: string, roles: IRole['_id'][]): Promise<IPermission['_id']> {\n\t\tconst exists = await this.findOne<Pick<IPermission, '_id'>>(\n\t\t\t{\n\t\t\t\t_id: name,\n\t\t\t\troles,\n\t\t\t},\n\t\t\t{ projection: { _id: 1 } },\n\t\t);\n\n\t\tif (exists) {\n\t\t\treturn exists._id;\n\t\t}\n\n\t\tawait this.updateOne({ _id: name }, { $set: { roles } }, { upsert: true });\n\n\t\treturn name;\n\t}\n\n\tasync create(id: string, roles: IRole['_id'][]): Promise<IPermission['_id']> {\n\t\tconst exists = await this.findOneById<Pick<IPermission, '_id'>>(id, { projection: { _id: 1 } });\n\t\tif (exists) {\n\t\t\treturn exists._id;\n\t\t}\n\n\t\tawait this.updateOne({ _id: id }, { $set: { roles } }, { upsert: true });\n\n\t\treturn id;\n\t}\n\n\tasync addRole(permission: string, role: IRole['_id']): Promise<void> {\n\t\tawait this.updateOne({ _id: permission, roles: { $ne: role } }, { $addToSet: { roles: role } });\n\t}\n\n\tasync setRoles(permission: string, roles: IRole['_id'][]): Promise<void> {\n\t\tawait this.updateOne({ _id: permission }, { $set: { roles } });\n\t}\n\n\tasync removeRole(permission: string, role: IRole['_id']): Promise<void> {\n\t\tawait this.updateOne({ _id: permission, roles: role }, { $pull: { roles: role } });\n\t}\n\n\tfindByLevel(level: 'settings', settingId?: string): FindCursor<IPermission> {\n\t\treturn this.find({ level, ...(settingId && { settingId }) });\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      PermissionsRaw: () => PermissionsRaw\n    });\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class PermissionsRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'permissions', trash);\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            level: 1,\n            settingId: 1\n          }\n        }];\n      }\n      async createOrUpdate(name, roles) {\n        const exists = await this.findOne({\n          _id: name,\n          roles\n        }, {\n          projection: {\n            _id: 1\n          }\n        });\n        if (exists) {\n          return exists._id;\n        }\n        await this.updateOne({\n          _id: name\n        }, {\n          $set: {\n            roles\n          }\n        }, {\n          upsert: true\n        });\n        return name;\n      }\n      async create(id, roles) {\n        const exists = await this.findOneById(id, {\n          projection: {\n            _id: 1\n          }\n        });\n        if (exists) {\n          return exists._id;\n        }\n        await this.updateOne({\n          _id: id\n        }, {\n          $set: {\n            roles\n          }\n        }, {\n          upsert: true\n        });\n        return id;\n      }\n      async addRole(permission, role) {\n        await this.updateOne({\n          _id: permission,\n          roles: {\n            $ne: role\n          }\n        }, {\n          $addToSet: {\n            roles: role\n          }\n        });\n      }\n      async setRoles(permission, roles) {\n        await this.updateOne({\n          _id: permission\n        }, {\n          $set: {\n            roles\n          }\n        });\n      }\n      async removeRole(permission, role) {\n        await this.updateOne({\n          _id: permission,\n          roles: role\n        }, {\n          $pull: {\n            roles: role\n          }\n        });\n      }\n      findByLevel(level, settingId) {\n        return this.find(_objectSpread({\n          level\n        }, settingId && {\n          settingId\n        }));\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","PermissionsRaw","BaseRaw","__reifyWaitForDeps__","constructor","db","trash","modelIndexes","key","level","settingId","createOrUpdate","name","roles","exists","findOne","_id","projection","updateOne","$set","upsert","create","id","findOneById","addRole","permission","role","$ne","$addToSet","setRoles","removeRole","$pull","findByLevel","find","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/Permissions.ts"],"sourcesContent":["import type { IPermission, IRole, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IPermissionsModel } from '@rocket.chat/model-typings';\nimport type { Collection, Db, FindCursor, IndexDescription } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\nexport class PermissionsRaw extends BaseRaw<IPermission> implements IPermissionsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IPermission>>) {\n\t\tsuper(db, 'permissions', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tlevel: 1,\n\t\t\t\t\tsettingId: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tasync createOrUpdate(name: string, roles: IRole['_id'][]): Promise<IPermission['_id']> {\n\t\tconst exists = await this.findOne<Pick<IPermission, '_id'>>(\n\t\t\t{\n\t\t\t\t_id: name,\n\t\t\t\troles,\n\t\t\t},\n\t\t\t{ projection: { _id: 1 } },\n\t\t);\n\n\t\tif (exists) {\n\t\t\treturn exists._id;\n\t\t}\n\n\t\tawait this.updateOne({ _id: name }, { $set: { roles } }, { upsert: true });\n\n\t\treturn name;\n\t}\n\n\tasync create(id: string, roles: IRole['_id'][]): Promise<IPermission['_id']> {\n\t\tconst exists = await this.findOneById<Pick<IPermission, '_id'>>(id, { projection: { _id: 1 } });\n\t\tif (exists) {\n\t\t\treturn exists._id;\n\t\t}\n\n\t\tawait this.updateOne({ _id: id }, { $set: { roles } }, { upsert: true });\n\n\t\treturn id;\n\t}\n\n\tasync addRole(permission: string, role: IRole['_id']): Promise<void> {\n\t\tawait this.updateOne({ _id: permission, roles: { $ne: role } }, { $addToSet: { roles: role } });\n\t}\n\n\tasync setRoles(permission: string, roles: IRole['_id'][]): Promise<void> {\n\t\tawait this.updateOne({ _id: permission }, { $set: { roles } });\n\t}\n\n\tasync removeRole(permission: string, role: IRole['_id']): Promise<void> {\n\t\tawait this.updateOne({ _id: permission, roles: role }, { $pull: { roles: role } });\n\t}\n\n\tfindByLevel(level: 'settings', settingId?: string): FindCursor<IPermission> {\n\t\treturn this.find({ level, ...(settingId && { settingId }) });\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"fcf9082bfcd9ff281a0d6fae2027f64ccf49813b"}
