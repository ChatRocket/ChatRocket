{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file/server/file.server.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/file/server/file.server.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file/server/file.server.ts","inputSourceMap":{"version":3,"file":"app/file/server/file.server.ts","sourceRoot":"","sources":["app/file/server/file.server.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReadStream } from 'fs';\nimport fs from 'fs';\nimport fsp from 'fs/promises';\nimport path from 'path';\nimport stream from 'stream';\n\nimport type { ObjectId } from 'bson';\nimport { MongoInternals } from 'meteor/mongo';\nimport mime from 'mime-type/with-db';\nimport mkdirp from 'mkdirp';\nimport type { GridFSBucketReadStream } from 'mongodb';\nimport { GridFSBucket } from 'mongodb';\n\nconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\ntype IFile = {\n\tbuffer: Buffer;\n\tcontentType?: string;\n\tlength: number;\n\tuploadDate?: Date;\n};\n\ninterface IRocketChatFileStore {\n\tremove(fileId: string): Promise<void>;\n\n\tcreateWriteStream(fileName: string, contentType: string): void;\n\n\tcreateReadStream(fileName: string): void;\n\n\tgetFileWithReadStream(fileName: string): Promise<\n\t\t| {\n\t\t\t\treadStream: GridFSBucketReadStream | ReadStream;\n\t\t\t\tcontentType?: string;\n\t\t\t\tlength: number;\n\t\t\t\tuploadDate?: Date;\n\t\t  }\n\t\t| undefined\n\t>;\n\n\tgetFile(fileName: string): Promise<IFile | undefined>;\n\n\tdeleteFile(fileName: string): Promise<void>;\n}\n\nclass GridFS implements IRocketChatFileStore {\n\tprivate name: string;\n\n\tprivate bucket: GridFSBucket;\n\n\tconstructor({ name = 'file' } = {}) {\n\t\tthis.name = name;\n\n\t\tthis.bucket = new GridFSBucket(db, { bucketName: this.name });\n\t}\n\n\tprivate async findOne(filename: string) {\n\t\tconst file = await this.bucket.find({ filename }).limit(1).toArray();\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\treturn file[0];\n\t}\n\n\tasync remove(fileId: string) {\n\t\tawait this.bucket.delete(fileId as unknown as ObjectId);\n\t}\n\n\tcreateWriteStream(fileName: string, contentType: string) {\n\t\tconst ws = this.bucket.openUploadStream(fileName, {\n\t\t\tcontentType,\n\t\t});\n\n\t\tws.on('close', () => {\n\t\t\treturn ws.emit('end');\n\t\t});\n\t\treturn ws;\n\t}\n\n\tcreateReadStream(fileName: string) {\n\t\treturn this.bucket.openDownloadStreamByName(fileName);\n\t}\n\n\tasync getFileWithReadStream(fileName: string) {\n\t\tconst file = await this.findOne(fileName);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\tconst rs = this.createReadStream(fileName);\n\t\treturn {\n\t\t\treadStream: rs,\n\t\t\tcontentType: file.contentType,\n\t\t\tlength: file.length,\n\t\t\tuploadDate: file.uploadDate,\n\t\t};\n\t}\n\n\tasync getFile(fileName: string) {\n\t\tconst file = await this.getFileWithReadStream(fileName);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\treturn new Promise<IFile>((resolve) => {\n\t\t\tconst data: Buffer[] = [];\n\t\t\tfile.readStream.on('data', (chunk) => {\n\t\t\t\treturn data.push(chunk);\n\t\t\t});\n\n\t\t\tfile.readStream.on('end', () => {\n\t\t\t\tresolve({\n\t\t\t\t\tbuffer: Buffer.concat(data),\n\t\t\t\t\tcontentType: file.contentType,\n\t\t\t\t\tlength: file.length,\n\t\t\t\t\tuploadDate: file.uploadDate,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tasync deleteFile(fileName: string) {\n\t\tconst file = await this.findOne(fileName);\n\t\tif (file == null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.remove(file._id as unknown as string);\n\t}\n}\n\nclass FileSystem implements IRocketChatFileStore {\n\tprivate absolutePath: string;\n\n\tconstructor({ absolutePath = '~/uploads' } = {}) {\n\t\tif (absolutePath.split(path.sep)[0] === '~') {\n\t\t\tconst homepath = process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE;\n\t\t\tif (homepath != null) {\n\t\t\t\tabsolutePath = absolutePath.replace('~', homepath);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unable to resolve \"~\" in path');\n\t\t\t}\n\t\t}\n\t\tthis.absolutePath = path.resolve(absolutePath);\n\t\tmkdirp.sync(this.absolutePath);\n\t}\n\n\tcreateWriteStream(fileName: string) {\n\t\tconst ws = fs.createWriteStream(path.join(this.absolutePath, fileName));\n\t\tws.on('close', () => {\n\t\t\treturn ws.emit('end');\n\t\t});\n\t\treturn ws;\n\t}\n\n\tcreateReadStream(fileName: string) {\n\t\treturn fs.createReadStream(path.join(this.absolutePath, fileName));\n\t}\n\n\tstat(fileName: string) {\n\t\treturn fsp.stat(path.join(this.absolutePath, fileName));\n\t}\n\n\tasync remove(fileName: string) {\n\t\treturn fsp.unlink(path.join(this.absolutePath, fileName));\n\t}\n\n\tasync getFileWithReadStream(fileName: string) {\n\t\ttry {\n\t\t\tconst stat = await this.stat(fileName);\n\t\t\tconst rs = this.createReadStream(fileName);\n\t\t\treturn {\n\t\t\t\treadStream: rs,\n\t\t\t\t// We currently don't store the content type of uploaded custom sounds when using\n\t\t\t\t// The filesystem storage. We will use mime to infer its type from the extension.\n\t\t\t\tcontentType: (mime.lookup(fileName) as string) || 'application/octet-stream',\n\t\t\t\tlength: stat.size,\n\t\t\t};\n\t\t} catch (error1) {\n\t\t\tconsole.error(error1);\n\t\t}\n\t}\n\n\tasync getFile(fileName: string) {\n\t\tconst file = await this.getFileWithReadStream(fileName);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\treturn new Promise<IFile>((resolve) => {\n\t\t\tconst data: Buffer[] = [];\n\t\t\tfile.readStream.on('data', (chunk: Buffer) => {\n\t\t\t\treturn data.push(chunk);\n\t\t\t});\n\t\t\tfile.readStream.on('end', () => {\n\t\t\t\tresolve({\n\t\t\t\t\tbuffer: Buffer.concat(data),\n\t\t\t\t\tlength: file.length,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tasync deleteFile(fileName: string) {\n\t\ttry {\n\t\t\treturn await this.remove(fileName);\n\t\t} catch (error1) {\n\t\t\tconsole.error(error1);\n\t\t}\n\t}\n}\n\nexport const RocketChatFile = {\n\tbufferToStream(buffer: Buffer) {\n\t\tconst bufferStream = new stream.PassThrough();\n\t\tbufferStream.end(buffer);\n\t\treturn bufferStream;\n\t},\n\n\tdataURIParse(dataURI: string | Buffer) {\n\t\tconst imageData = Buffer.from(dataURI).toString().split(';base64,');\n\t\treturn {\n\t\t\timage: imageData[1],\n\t\t\tcontentType: imageData[0].replace('data:', ''),\n\t\t};\n\t},\n\n\tGridFS,\n\tFileSystem,\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file/server/file.server.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/file/server/file.server.ts","inputSourceMap":{"version":3,"file":"app/file/server/file.server.ts","sourceRoot":"","sources":["app/file/server/file.server.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,IAAI,CAAC;AACpB,OAAO,GAAG,MAAM,aAAa,CAAC;AAC9B,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,MAAM,MAAM,QAAQ,CAAC;AAG5B,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAC9C,OAAO,IAAI,MAAM,mBAAmB,CAAC;AACrC,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,YAAY,EAAE,MAAM,SAAS,CAAC;AAEvC,MAAM,EAAE,EAAE,EAAE,GAAG,cAAc,CAAC,6BAA6B,EAAE,CAAC,KAAK,CAAC;AA+BpE,MAAM,MAAM;IACH,IAAI,CAAS;IAEb,MAAM,CAAe;IAE7B,YAAY,EAAE,IAAI,GAAG,MAAM,EAAE,GAAG,EAAE;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAC/D,CAAC;IAEO,KAAK,CAAC,OAAO,CAAC,QAAgB;QACrC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QACrE,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QACD,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,MAAc;QAC1B,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAA6B,CAAC,CAAC;IACzD,CAAC;IAED,iBAAiB,CAAC,QAAgB,EAAE,WAAmB;QACtD,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE;YACjD,WAAW;SACX,CAAC,CAAC;QAEH,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;YACnB,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,CAAC;IACX,CAAC;IAED,gBAAgB,CAAC,QAAgB;QAChC,OAAO,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,qBAAqB,CAAC,QAAgB;QAC3C,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QACD,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC3C,OAAO;YACN,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,UAAU,EAAE,IAAI,CAAC,UAAU;SAC3B,CAAC;IACH,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,QAAgB;QAC7B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QACD,OAAO,IAAI,OAAO,CAAQ,CAAC,OAAO,EAAE,EAAE;YACrC,MAAM,IAAI,GAAa,EAAE,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;gBACpC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;gBAC9B,OAAO,CAAC;oBACP,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;oBAC3B,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,UAAU,EAAE,IAAI,CAAC,UAAU;iBAC3B,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,QAAgB;QAChC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;YAClB,OAAO,SAAS,CAAC;QAClB,CAAC;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAwB,CAAC,CAAC;IACnD,CAAC;CACD;AAED,MAAM,UAAU;IACP,YAAY,CAAS;IAE7B,YAAY,EAAE,YAAY,GAAG,WAAW,EAAE,GAAG,EAAE;QAC9C,IAAI,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;YAC7C,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;YACrF,IAAI,QAAQ,IAAI,IAAI,EAAE,CAAC;gBACtB,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;YACpD,CAAC;iBAAM,CAAC;gBACP,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;YAClD,CAAC;QACF,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAChC,CAAC;IAED,iBAAiB,CAAC,QAAgB;QACjC,MAAM,EAAE,GAAG,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC;QACxE,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;YACnB,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,OAAO,EAAE,CAAC;IACX,CAAC;IAED,gBAAgB,CAAC,QAAgB;QAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,IAAI,CAAC,QAAgB;QACpB,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,QAAgB;QAC5B,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,KAAK,CAAC,qBAAqB,CAAC,QAAgB;QAC3C,IAAI,CAAC;YACJ,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvC,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAC3C,OAAO;gBACN,UAAU,EAAE,EAAE;gBACd,iFAAiF;gBACjF,iFAAiF;gBACjF,WAAW,EAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAY,IAAI,0BAA0B;gBAC5E,MAAM,EAAE,IAAI,CAAC,IAAI;aACjB,CAAC;QACH,CAAC;QAAC,OAAO,MAAM,EAAE,CAAC;YACjB,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACvB,CAAC;IACF,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,QAAgB;QAC7B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO;QACR,CAAC;QACD,OAAO,IAAI,OAAO,CAAQ,CAAC,OAAO,EAAE,EAAE;YACrC,MAAM,IAAI,GAAa,EAAE,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,KAAa,EAAE,EAAE;gBAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;gBAC9B,OAAO,CAAC;oBACP,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;oBAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;iBACnB,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,QAAgB;QAChC,IAAI,CAAC;YACJ,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACpC,CAAC;QAAC,OAAO,MAAM,EAAE,CAAC;YACjB,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACvB,CAAC;IACF,CAAC;CACD;AAED,MAAM,CAAC,MAAM,cAAc,GAAG;IAC7B,cAAc,CAAC,MAAc;QAC5B,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC;QAC9C,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACzB,OAAO,YAAY,CAAC;IACrB,CAAC;IAED,YAAY,CAAC,OAAwB;QACpC,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACpE,OAAO;YACN,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;YACnB,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;SAC9C,CAAC;IACH,CAAC;IAED,MAAM;IACN,UAAU;CACV,CAAC","sourcesContent":["import type { ReadStream } from 'fs';\nimport fs from 'fs';\nimport fsp from 'fs/promises';\nimport path from 'path';\nimport stream from 'stream';\n\nimport type { ObjectId } from 'bson';\nimport { MongoInternals } from 'meteor/mongo';\nimport mime from 'mime-type/with-db';\nimport mkdirp from 'mkdirp';\nimport type { GridFSBucketReadStream } from 'mongodb';\nimport { GridFSBucket } from 'mongodb';\n\nconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\ntype IFile = {\n\tbuffer: Buffer;\n\tcontentType?: string;\n\tlength: number;\n\tuploadDate?: Date;\n};\n\ninterface IRocketChatFileStore {\n\tremove(fileId: string): Promise<void>;\n\n\tcreateWriteStream(fileName: string, contentType: string): void;\n\n\tcreateReadStream(fileName: string): void;\n\n\tgetFileWithReadStream(fileName: string): Promise<\n\t\t| {\n\t\t\t\treadStream: GridFSBucketReadStream | ReadStream;\n\t\t\t\tcontentType?: string;\n\t\t\t\tlength: number;\n\t\t\t\tuploadDate?: Date;\n\t\t  }\n\t\t| undefined\n\t>;\n\n\tgetFile(fileName: string): Promise<IFile | undefined>;\n\n\tdeleteFile(fileName: string): Promise<void>;\n}\n\nclass GridFS implements IRocketChatFileStore {\n\tprivate name: string;\n\n\tprivate bucket: GridFSBucket;\n\n\tconstructor({ name = 'file' } = {}) {\n\t\tthis.name = name;\n\n\t\tthis.bucket = new GridFSBucket(db, { bucketName: this.name });\n\t}\n\n\tprivate async findOne(filename: string) {\n\t\tconst file = await this.bucket.find({ filename }).limit(1).toArray();\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\treturn file[0];\n\t}\n\n\tasync remove(fileId: string) {\n\t\tawait this.bucket.delete(fileId as unknown as ObjectId);\n\t}\n\n\tcreateWriteStream(fileName: string, contentType: string) {\n\t\tconst ws = this.bucket.openUploadStream(fileName, {\n\t\t\tcontentType,\n\t\t});\n\n\t\tws.on('close', () => {\n\t\t\treturn ws.emit('end');\n\t\t});\n\t\treturn ws;\n\t}\n\n\tcreateReadStream(fileName: string) {\n\t\treturn this.bucket.openDownloadStreamByName(fileName);\n\t}\n\n\tasync getFileWithReadStream(fileName: string) {\n\t\tconst file = await this.findOne(fileName);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\tconst rs = this.createReadStream(fileName);\n\t\treturn {\n\t\t\treadStream: rs,\n\t\t\tcontentType: file.contentType,\n\t\t\tlength: file.length,\n\t\t\tuploadDate: file.uploadDate,\n\t\t};\n\t}\n\n\tasync getFile(fileName: string) {\n\t\tconst file = await this.getFileWithReadStream(fileName);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\treturn new Promise<IFile>((resolve) => {\n\t\t\tconst data: Buffer[] = [];\n\t\t\tfile.readStream.on('data', (chunk) => {\n\t\t\t\treturn data.push(chunk);\n\t\t\t});\n\n\t\t\tfile.readStream.on('end', () => {\n\t\t\t\tresolve({\n\t\t\t\t\tbuffer: Buffer.concat(data),\n\t\t\t\t\tcontentType: file.contentType,\n\t\t\t\t\tlength: file.length,\n\t\t\t\t\tuploadDate: file.uploadDate,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tasync deleteFile(fileName: string) {\n\t\tconst file = await this.findOne(fileName);\n\t\tif (file == null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.remove(file._id as unknown as string);\n\t}\n}\n\nclass FileSystem implements IRocketChatFileStore {\n\tprivate absolutePath: string;\n\n\tconstructor({ absolutePath = '~/uploads' } = {}) {\n\t\tif (absolutePath.split(path.sep)[0] === '~') {\n\t\t\tconst homepath = process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE;\n\t\t\tif (homepath != null) {\n\t\t\t\tabsolutePath = absolutePath.replace('~', homepath);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unable to resolve \"~\" in path');\n\t\t\t}\n\t\t}\n\t\tthis.absolutePath = path.resolve(absolutePath);\n\t\tmkdirp.sync(this.absolutePath);\n\t}\n\n\tcreateWriteStream(fileName: string) {\n\t\tconst ws = fs.createWriteStream(path.join(this.absolutePath, fileName));\n\t\tws.on('close', () => {\n\t\t\treturn ws.emit('end');\n\t\t});\n\t\treturn ws;\n\t}\n\n\tcreateReadStream(fileName: string) {\n\t\treturn fs.createReadStream(path.join(this.absolutePath, fileName));\n\t}\n\n\tstat(fileName: string) {\n\t\treturn fsp.stat(path.join(this.absolutePath, fileName));\n\t}\n\n\tasync remove(fileName: string) {\n\t\treturn fsp.unlink(path.join(this.absolutePath, fileName));\n\t}\n\n\tasync getFileWithReadStream(fileName: string) {\n\t\ttry {\n\t\t\tconst stat = await this.stat(fileName);\n\t\t\tconst rs = this.createReadStream(fileName);\n\t\t\treturn {\n\t\t\t\treadStream: rs,\n\t\t\t\t// We currently don't store the content type of uploaded custom sounds when using\n\t\t\t\t// The filesystem storage. We will use mime to infer its type from the extension.\n\t\t\t\tcontentType: (mime.lookup(fileName) as string) || 'application/octet-stream',\n\t\t\t\tlength: stat.size,\n\t\t\t};\n\t\t} catch (error1) {\n\t\t\tconsole.error(error1);\n\t\t}\n\t}\n\n\tasync getFile(fileName: string) {\n\t\tconst file = await this.getFileWithReadStream(fileName);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\treturn new Promise<IFile>((resolve) => {\n\t\t\tconst data: Buffer[] = [];\n\t\t\tfile.readStream.on('data', (chunk: Buffer) => {\n\t\t\t\treturn data.push(chunk);\n\t\t\t});\n\t\t\tfile.readStream.on('end', () => {\n\t\t\t\tresolve({\n\t\t\t\t\tbuffer: Buffer.concat(data),\n\t\t\t\t\tlength: file.length,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tasync deleteFile(fileName: string) {\n\t\ttry {\n\t\t\treturn await this.remove(fileName);\n\t\t} catch (error1) {\n\t\t\tconsole.error(error1);\n\t\t}\n\t}\n}\n\nexport const RocketChatFile = {\n\tbufferToStream(buffer: Buffer) {\n\t\tconst bufferStream = new stream.PassThrough();\n\t\tbufferStream.end(buffer);\n\t\treturn bufferStream;\n\t},\n\n\tdataURIParse(dataURI: string | Buffer) {\n\t\tconst imageData = Buffer.from(dataURI).toString().split(';base64,');\n\t\treturn {\n\t\t\timage: imageData[1],\n\t\t\tcontentType: imageData[0].replace('data:', ''),\n\t\t};\n\t},\n\n\tGridFS,\n\tFileSystem,\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      RocketChatFile: () => RocketChatFile\n    });\n    let fs;\n    module.link(\"fs\", {\n      default(v) {\n        fs = v;\n      }\n    }, 0);\n    let fsp;\n    module.link(\"fs/promises\", {\n      default(v) {\n        fsp = v;\n      }\n    }, 1);\n    let path;\n    module.link(\"path\", {\n      default(v) {\n        path = v;\n      }\n    }, 2);\n    let stream;\n    module.link(\"stream\", {\n      default(v) {\n        stream = v;\n      }\n    }, 3);\n    let MongoInternals;\n    module.link(\"meteor/mongo\", {\n      MongoInternals(v) {\n        MongoInternals = v;\n      }\n    }, 4);\n    let mime;\n    module.link(\"mime-type/with-db\", {\n      default(v) {\n        mime = v;\n      }\n    }, 5);\n    let mkdirp;\n    module.link(\"mkdirp\", {\n      default(v) {\n        mkdirp = v;\n      }\n    }, 6);\n    let GridFSBucket;\n    module.link(\"mongodb\", {\n      GridFSBucket(v) {\n        GridFSBucket = v;\n      }\n    }, 7);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const {\n      db\n    } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n    class GridFS {\n      constructor() {\n        let {\n          name = 'file'\n        } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this.name = void 0;\n        this.bucket = void 0;\n        this.name = name;\n        this.bucket = new GridFSBucket(db, {\n          bucketName: this.name\n        });\n      }\n      async findOne(filename) {\n        const file = await this.bucket.find({\n          filename\n        }).limit(1).toArray();\n        if (!file) {\n          return;\n        }\n        return file[0];\n      }\n      async remove(fileId) {\n        await this.bucket.delete(fileId);\n      }\n      createWriteStream(fileName, contentType) {\n        const ws = this.bucket.openUploadStream(fileName, {\n          contentType\n        });\n        ws.on('close', () => {\n          return ws.emit('end');\n        });\n        return ws;\n      }\n      createReadStream(fileName) {\n        return this.bucket.openDownloadStreamByName(fileName);\n      }\n      async getFileWithReadStream(fileName) {\n        const file = await this.findOne(fileName);\n        if (!file) {\n          return;\n        }\n        const rs = this.createReadStream(fileName);\n        return {\n          readStream: rs,\n          contentType: file.contentType,\n          length: file.length,\n          uploadDate: file.uploadDate\n        };\n      }\n      async getFile(fileName) {\n        const file = await this.getFileWithReadStream(fileName);\n        if (!file) {\n          return;\n        }\n        return new Promise(resolve => {\n          const data = [];\n          file.readStream.on('data', chunk => {\n            return data.push(chunk);\n          });\n          file.readStream.on('end', () => {\n            resolve({\n              buffer: Buffer.concat(data),\n              contentType: file.contentType,\n              length: file.length,\n              uploadDate: file.uploadDate\n            });\n          });\n        });\n      }\n      async deleteFile(fileName) {\n        const file = await this.findOne(fileName);\n        if (file == null) {\n          return undefined;\n        }\n        return this.remove(file._id);\n      }\n    }\n    class FileSystem {\n      constructor() {\n        let {\n          absolutePath = '~/uploads'\n        } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        this.absolutePath = void 0;\n        if (absolutePath.split(path.sep)[0] === '~') {\n          const homepath = process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE;\n          if (homepath != null) {\n            absolutePath = absolutePath.replace('~', homepath);\n          } else {\n            throw new Error('Unable to resolve \"~\" in path');\n          }\n        }\n        this.absolutePath = path.resolve(absolutePath);\n        mkdirp.sync(this.absolutePath);\n      }\n      createWriteStream(fileName) {\n        const ws = fs.createWriteStream(path.join(this.absolutePath, fileName));\n        ws.on('close', () => {\n          return ws.emit('end');\n        });\n        return ws;\n      }\n      createReadStream(fileName) {\n        return fs.createReadStream(path.join(this.absolutePath, fileName));\n      }\n      stat(fileName) {\n        return fsp.stat(path.join(this.absolutePath, fileName));\n      }\n      async remove(fileName) {\n        return fsp.unlink(path.join(this.absolutePath, fileName));\n      }\n      async getFileWithReadStream(fileName) {\n        try {\n          const stat = await this.stat(fileName);\n          const rs = this.createReadStream(fileName);\n          return {\n            readStream: rs,\n            // We currently don't store the content type of uploaded custom sounds when using\n            // The filesystem storage. We will use mime to infer its type from the extension.\n            contentType: mime.lookup(fileName) || 'application/octet-stream',\n            length: stat.size\n          };\n        } catch (error1) {\n          console.error(error1);\n        }\n      }\n      async getFile(fileName) {\n        const file = await this.getFileWithReadStream(fileName);\n        if (!file) {\n          return;\n        }\n        return new Promise(resolve => {\n          const data = [];\n          file.readStream.on('data', chunk => {\n            return data.push(chunk);\n          });\n          file.readStream.on('end', () => {\n            resolve({\n              buffer: Buffer.concat(data),\n              length: file.length\n            });\n          });\n        });\n      }\n      async deleteFile(fileName) {\n        try {\n          return await this.remove(fileName);\n        } catch (error1) {\n          console.error(error1);\n        }\n      }\n    }\n    const RocketChatFile = {\n      bufferToStream(buffer) {\n        const bufferStream = new stream.PassThrough();\n        bufferStream.end(buffer);\n        return bufferStream;\n      },\n      dataURIParse(dataURI) {\n        const imageData = Buffer.from(dataURI).toString().split(';base64,');\n        return {\n          image: imageData[1],\n          contentType: imageData[0].replace('data:', '')\n        };\n      },\n      GridFS,\n      FileSystem\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","RocketChatFile","fs","link","default","v","fsp","path","stream","MongoInternals","mime","mkdirp","GridFSBucket","__reifyWaitForDeps__","db","defaultRemoteCollectionDriver","mongo","GridFS","constructor","name","arguments","length","undefined","bucket","bucketName","findOne","filename","file","find","limit","toArray","remove","fileId","delete","createWriteStream","fileName","contentType","ws","openUploadStream","on","emit","createReadStream","openDownloadStreamByName","getFileWithReadStream","rs","readStream","uploadDate","getFile","Promise","resolve","data","chunk","push","buffer","Buffer","concat","deleteFile","_id","FileSystem","absolutePath","split","sep","homepath","process","env","HOME","HOMEPATH","USERPROFILE","replace","Error","sync","join","stat","unlink","lookup","size","error1","console","error","bufferToStream","bufferStream","PassThrough","end","dataURIParse","dataURI","imageData","from","toString","image","__reify_async_result__","_reifyError","self","async"],"sources":["app/file/server/file.server.ts"],"sourcesContent":["import type { ReadStream } from 'fs';\nimport fs from 'fs';\nimport fsp from 'fs/promises';\nimport path from 'path';\nimport stream from 'stream';\n\nimport type { ObjectId } from 'bson';\nimport { MongoInternals } from 'meteor/mongo';\nimport mime from 'mime-type/with-db';\nimport mkdirp from 'mkdirp';\nimport type { GridFSBucketReadStream } from 'mongodb';\nimport { GridFSBucket } from 'mongodb';\n\nconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\ntype IFile = {\n\tbuffer: Buffer;\n\tcontentType?: string;\n\tlength: number;\n\tuploadDate?: Date;\n};\n\ninterface IRocketChatFileStore {\n\tremove(fileId: string): Promise<void>;\n\n\tcreateWriteStream(fileName: string, contentType: string): void;\n\n\tcreateReadStream(fileName: string): void;\n\n\tgetFileWithReadStream(fileName: string): Promise<\n\t\t| {\n\t\t\t\treadStream: GridFSBucketReadStream | ReadStream;\n\t\t\t\tcontentType?: string;\n\t\t\t\tlength: number;\n\t\t\t\tuploadDate?: Date;\n\t\t  }\n\t\t| undefined\n\t>;\n\n\tgetFile(fileName: string): Promise<IFile | undefined>;\n\n\tdeleteFile(fileName: string): Promise<void>;\n}\n\nclass GridFS implements IRocketChatFileStore {\n\tprivate name: string;\n\n\tprivate bucket: GridFSBucket;\n\n\tconstructor({ name = 'file' } = {}) {\n\t\tthis.name = name;\n\n\t\tthis.bucket = new GridFSBucket(db, { bucketName: this.name });\n\t}\n\n\tprivate async findOne(filename: string) {\n\t\tconst file = await this.bucket.find({ filename }).limit(1).toArray();\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\treturn file[0];\n\t}\n\n\tasync remove(fileId: string) {\n\t\tawait this.bucket.delete(fileId as unknown as ObjectId);\n\t}\n\n\tcreateWriteStream(fileName: string, contentType: string) {\n\t\tconst ws = this.bucket.openUploadStream(fileName, {\n\t\t\tcontentType,\n\t\t});\n\n\t\tws.on('close', () => {\n\t\t\treturn ws.emit('end');\n\t\t});\n\t\treturn ws;\n\t}\n\n\tcreateReadStream(fileName: string) {\n\t\treturn this.bucket.openDownloadStreamByName(fileName);\n\t}\n\n\tasync getFileWithReadStream(fileName: string) {\n\t\tconst file = await this.findOne(fileName);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\tconst rs = this.createReadStream(fileName);\n\t\treturn {\n\t\t\treadStream: rs,\n\t\t\tcontentType: file.contentType,\n\t\t\tlength: file.length,\n\t\t\tuploadDate: file.uploadDate,\n\t\t};\n\t}\n\n\tasync getFile(fileName: string) {\n\t\tconst file = await this.getFileWithReadStream(fileName);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\treturn new Promise<IFile>((resolve) => {\n\t\t\tconst data: Buffer[] = [];\n\t\t\tfile.readStream.on('data', (chunk) => {\n\t\t\t\treturn data.push(chunk);\n\t\t\t});\n\n\t\t\tfile.readStream.on('end', () => {\n\t\t\t\tresolve({\n\t\t\t\t\tbuffer: Buffer.concat(data),\n\t\t\t\t\tcontentType: file.contentType,\n\t\t\t\t\tlength: file.length,\n\t\t\t\t\tuploadDate: file.uploadDate,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tasync deleteFile(fileName: string) {\n\t\tconst file = await this.findOne(fileName);\n\t\tif (file == null) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.remove(file._id as unknown as string);\n\t}\n}\n\nclass FileSystem implements IRocketChatFileStore {\n\tprivate absolutePath: string;\n\n\tconstructor({ absolutePath = '~/uploads' } = {}) {\n\t\tif (absolutePath.split(path.sep)[0] === '~') {\n\t\t\tconst homepath = process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE;\n\t\t\tif (homepath != null) {\n\t\t\t\tabsolutePath = absolutePath.replace('~', homepath);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unable to resolve \"~\" in path');\n\t\t\t}\n\t\t}\n\t\tthis.absolutePath = path.resolve(absolutePath);\n\t\tmkdirp.sync(this.absolutePath);\n\t}\n\n\tcreateWriteStream(fileName: string) {\n\t\tconst ws = fs.createWriteStream(path.join(this.absolutePath, fileName));\n\t\tws.on('close', () => {\n\t\t\treturn ws.emit('end');\n\t\t});\n\t\treturn ws;\n\t}\n\n\tcreateReadStream(fileName: string) {\n\t\treturn fs.createReadStream(path.join(this.absolutePath, fileName));\n\t}\n\n\tstat(fileName: string) {\n\t\treturn fsp.stat(path.join(this.absolutePath, fileName));\n\t}\n\n\tasync remove(fileName: string) {\n\t\treturn fsp.unlink(path.join(this.absolutePath, fileName));\n\t}\n\n\tasync getFileWithReadStream(fileName: string) {\n\t\ttry {\n\t\t\tconst stat = await this.stat(fileName);\n\t\t\tconst rs = this.createReadStream(fileName);\n\t\t\treturn {\n\t\t\t\treadStream: rs,\n\t\t\t\t// We currently don't store the content type of uploaded custom sounds when using\n\t\t\t\t// The filesystem storage. We will use mime to infer its type from the extension.\n\t\t\t\tcontentType: (mime.lookup(fileName) as string) || 'application/octet-stream',\n\t\t\t\tlength: stat.size,\n\t\t\t};\n\t\t} catch (error1) {\n\t\t\tconsole.error(error1);\n\t\t}\n\t}\n\n\tasync getFile(fileName: string) {\n\t\tconst file = await this.getFileWithReadStream(fileName);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\treturn new Promise<IFile>((resolve) => {\n\t\t\tconst data: Buffer[] = [];\n\t\t\tfile.readStream.on('data', (chunk: Buffer) => {\n\t\t\t\treturn data.push(chunk);\n\t\t\t});\n\t\t\tfile.readStream.on('end', () => {\n\t\t\t\tresolve({\n\t\t\t\t\tbuffer: Buffer.concat(data),\n\t\t\t\t\tlength: file.length,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tasync deleteFile(fileName: string) {\n\t\ttry {\n\t\t\treturn await this.remove(fileName);\n\t\t} catch (error1) {\n\t\t\tconsole.error(error1);\n\t\t}\n\t}\n}\n\nexport const RocketChatFile = {\n\tbufferToStream(buffer: Buffer) {\n\t\tconst bufferStream = new stream.PassThrough();\n\t\tbufferStream.end(buffer);\n\t\treturn bufferStream;\n\t},\n\n\tdataURIParse(dataURI: string | Buffer) {\n\t\tconst imageData = Buffer.from(dataURI).toString().split(';base64,');\n\t\treturn {\n\t\t\timage: imageData[1],\n\t\t\tcontentType: imageData[0].replace('data:', ''),\n\t\t};\n\t},\n\n\tGridFS,\n\tFileSystem,\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"afe2a2f91a75bccc8f33be8a20aceb37499a7a6f"}
