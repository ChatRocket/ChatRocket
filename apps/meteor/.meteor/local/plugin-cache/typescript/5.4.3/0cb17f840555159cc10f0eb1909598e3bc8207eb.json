{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/lists/RecordList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/lists/RecordList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/lists/RecordList.ts","inputSourceMap":{"version":3,"file":"client/lib/lists/RecordList.ts","sourceRoot":"","sources":["client/lib/lists/RecordList.ts"],"names":[],"mappings":"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","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\n\nimport { AsyncStatePhase } from '../asyncState';\n\nexport type RecordListBatchChanges<T> = {\n\titems?: T[];\n\titemCount?: number;\n};\n\nexport class RecordList<T extends { _id: string; _updatedAt?: Date }> extends Emitter {\n\t#hasChanges = false;\n\n\t#index = new Map<T['_id'], T>();\n\n\t#phase: AsyncStatePhase.LOADING | AsyncStatePhase.UPDATING | AsyncStatePhase.RESOLVED = AsyncStatePhase.LOADING;\n\n\t#items: T[] | undefined = undefined;\n\n\t#itemCount: number | undefined = undefined;\n\n\tprotected filter(_item: T): boolean {\n\t\treturn true;\n\t}\n\n\tprotected compare(a: T, b: T): number {\n\t\tconst aUpdatedAt = typeof a._updatedAt === 'string' ? new Date(a._updatedAt) : a._updatedAt;\n\t\tconst bUpdatedAt = typeof b._updatedAt === 'string' ? new Date(b._updatedAt) : b._updatedAt;\n\t\treturn (bUpdatedAt?.getTime() ?? -1) - (aUpdatedAt?.getTime() ?? -1);\n\t}\n\n\tpublic get phase(): AsyncStatePhase {\n\t\treturn this.#phase;\n\t}\n\n\tpublic get items(): T[] {\n\t\tif (!this.#items) {\n\t\t\tthis.#items = Array.from(this.#index.values()).sort(this.compare);\n\t\t}\n\n\t\treturn this.#items;\n\t}\n\n\tpublic get itemCount(): number {\n\t\treturn this.#itemCount ?? this.#index.size;\n\t}\n\n\tprivate insert(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/inserted`, item);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount++;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate update(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/updated`, item);\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate delete(_id: T['_id']): void {\n\t\tthis.#index.delete(_id);\n\t\tthis.emit(`${_id}/deleted`);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount--;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate push(item: T): void {\n\t\tconst exists = this.#index.has(item._id);\n\t\tconst valid = this.filter(item);\n\n\t\tif (exists && !valid) {\n\t\t\tthis.delete(item._id);\n\t\t\treturn;\n\t\t}\n\n\t\tif (exists && valid) {\n\t\t\tthis.update(item);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!exists && valid) {\n\t\t\tthis.insert(item);\n\t\t}\n\t}\n\n\t#pedingMutation: Promise<void> = Promise.resolve();\n\n\tprotected async mutate(mutation: () => void | Promise<void>): Promise<void> {\n\t\ttry {\n\t\t\tif (this.#phase === AsyncStatePhase.RESOLVED) {\n\t\t\t\tthis.#phase = AsyncStatePhase.UPDATING;\n\t\t\t\tthis.emit('mutating');\n\t\t\t}\n\n\t\t\tthis.#pedingMutation = this.#pedingMutation.then(mutation);\n\t\t\tawait this.#pedingMutation;\n\t\t} catch (error) {\n\t\t\tthis.emit('errored', error);\n\t\t} finally {\n\t\t\tconst hasChanged = this.#hasChanges;\n\t\t\tthis.#phase = AsyncStatePhase.RESOLVED;\n\t\t\tif (hasChanged) {\n\t\t\t\tthis.#items = undefined;\n\t\t\t\tthis.#hasChanges = false;\n\t\t\t}\n\t\t\tthis.emit('mutated', hasChanged);\n\t\t}\n\t}\n\n\tpublic batchHandle(getInfo: () => Promise<RecordListBatchChanges<T>>): Promise<void> {\n\t\treturn this.mutate(async () => {\n\t\t\tconst info = await getInfo();\n\n\t\t\tif (info.items) {\n\t\t\t\tfor (const item of info.items) {\n\t\t\t\t\tthis.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (info.itemCount) {\n\t\t\t\tthis.#itemCount = info.itemCount;\n\t\t\t\tthis.#hasChanges = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic prune(matchCriteria: (item: T) => boolean): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tfor (const item of this.#index.values()) {\n\t\t\t\tif (matchCriteria(item)) {\n\t\t\t\t\tthis.delete(item._id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic handle(item: T): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tthis.push(item);\n\t\t});\n\t}\n\n\tpublic remove(_id: T['_id']): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (!this.#index.has(_id)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.delete(_id);\n\t\t});\n\t}\n\n\tpublic clear(): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (this.#index.size === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#index.clear();\n\t\t\tthis.#items = undefined;\n\t\t\tthis.#itemCount = undefined;\n\t\t\tthis.#hasChanges = true;\n\t\t\tthis.emit('cleared');\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/lists/RecordList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/lists/RecordList.ts","inputSourceMap":{"version":3,"file":"client/lib/lists/RecordList.ts","sourceRoot":"","sources":["client/lib/lists/RecordList.ts"],"names":[],"mappings":"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","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\n\nimport { AsyncStatePhase } from '../asyncState';\n\nexport type RecordListBatchChanges<T> = {\n\titems?: T[];\n\titemCount?: number;\n};\n\nexport class RecordList<T extends { _id: string; _updatedAt?: Date }> extends Emitter {\n\t#hasChanges = false;\n\n\t#index = new Map<T['_id'], T>();\n\n\t#phase: AsyncStatePhase.LOADING | AsyncStatePhase.UPDATING | AsyncStatePhase.RESOLVED = AsyncStatePhase.LOADING;\n\n\t#items: T[] | undefined = undefined;\n\n\t#itemCount: number | undefined = undefined;\n\n\tprotected filter(_item: T): boolean {\n\t\treturn true;\n\t}\n\n\tprotected compare(a: T, b: T): number {\n\t\tconst aUpdatedAt = typeof a._updatedAt === 'string' ? new Date(a._updatedAt) : a._updatedAt;\n\t\tconst bUpdatedAt = typeof b._updatedAt === 'string' ? new Date(b._updatedAt) : b._updatedAt;\n\t\treturn (bUpdatedAt?.getTime() ?? -1) - (aUpdatedAt?.getTime() ?? -1);\n\t}\n\n\tpublic get phase(): AsyncStatePhase {\n\t\treturn this.#phase;\n\t}\n\n\tpublic get items(): T[] {\n\t\tif (!this.#items) {\n\t\t\tthis.#items = Array.from(this.#index.values()).sort(this.compare);\n\t\t}\n\n\t\treturn this.#items;\n\t}\n\n\tpublic get itemCount(): number {\n\t\treturn this.#itemCount ?? this.#index.size;\n\t}\n\n\tprivate insert(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/inserted`, item);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount++;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate update(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/updated`, item);\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate delete(_id: T['_id']): void {\n\t\tthis.#index.delete(_id);\n\t\tthis.emit(`${_id}/deleted`);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount--;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate push(item: T): void {\n\t\tconst exists = this.#index.has(item._id);\n\t\tconst valid = this.filter(item);\n\n\t\tif (exists && !valid) {\n\t\t\tthis.delete(item._id);\n\t\t\treturn;\n\t\t}\n\n\t\tif (exists && valid) {\n\t\t\tthis.update(item);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!exists && valid) {\n\t\t\tthis.insert(item);\n\t\t}\n\t}\n\n\t#pedingMutation: Promise<void> = Promise.resolve();\n\n\tprotected async mutate(mutation: () => void | Promise<void>): Promise<void> {\n\t\ttry {\n\t\t\tif (this.#phase === AsyncStatePhase.RESOLVED) {\n\t\t\t\tthis.#phase = AsyncStatePhase.UPDATING;\n\t\t\t\tthis.emit('mutating');\n\t\t\t}\n\n\t\t\tthis.#pedingMutation = this.#pedingMutation.then(mutation);\n\t\t\tawait this.#pedingMutation;\n\t\t} catch (error) {\n\t\t\tthis.emit('errored', error);\n\t\t} finally {\n\t\t\tconst hasChanged = this.#hasChanges;\n\t\t\tthis.#phase = AsyncStatePhase.RESOLVED;\n\t\t\tif (hasChanged) {\n\t\t\t\tthis.#items = undefined;\n\t\t\t\tthis.#hasChanges = false;\n\t\t\t}\n\t\t\tthis.emit('mutated', hasChanged);\n\t\t}\n\t}\n\n\tpublic batchHandle(getInfo: () => Promise<RecordListBatchChanges<T>>): Promise<void> {\n\t\treturn this.mutate(async () => {\n\t\t\tconst info = await getInfo();\n\n\t\t\tif (info.items) {\n\t\t\t\tfor (const item of info.items) {\n\t\t\t\t\tthis.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (info.itemCount) {\n\t\t\t\tthis.#itemCount = info.itemCount;\n\t\t\t\tthis.#hasChanges = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic prune(matchCriteria: (item: T) => boolean): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tfor (const item of this.#index.values()) {\n\t\t\t\tif (matchCriteria(item)) {\n\t\t\t\t\tthis.delete(item._id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic handle(item: T): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tthis.push(item);\n\t\t});\n\t}\n\n\tpublic remove(_id: T['_id']): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (!this.#index.has(_id)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.delete(_id);\n\t\t});\n\t}\n\n\tpublic clear(): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (this.#index.size === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#index.clear();\n\t\t\tthis.#items = undefined;\n\t\t\tthis.#itemCount = undefined;\n\t\t\tthis.#hasChanges = true;\n\t\t\tthis.emit('cleared');\n\t\t});\n\t}\n}\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _createForOfIteratorHelperLoose;\nmodule.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\", {\n  default: function (v) {\n    _createForOfIteratorHelperLoose = v;\n  }\n}, 1);\nvar _createClass;\nmodule.link(\"@babel/runtime/helpers/createClass\", {\n  default: function (v) {\n    _createClass = v;\n  }\n}, 2);\nvar _inheritsLoose;\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 3);\nvar _classPrivateFieldLooseBase;\nmodule.link(\"@babel/runtime/helpers/classPrivateFieldLooseBase\", {\n  default: function (v) {\n    _classPrivateFieldLooseBase = v;\n  }\n}, 4);\nvar _classPrivateFieldLooseKey;\nmodule.link(\"@babel/runtime/helpers/classPrivateFieldLooseKey\", {\n  default: function (v) {\n    _classPrivateFieldLooseKey = v;\n  }\n}, 5);\nmodule.export({\n  RecordList: function () {\n    return RecordList;\n  }\n});\nvar Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter: function (v) {\n    Emitter = v;\n  }\n}, 0);\nvar AsyncStatePhase;\nmodule.link(\"../asyncState\", {\n  AsyncStatePhase: function (v) {\n    AsyncStatePhase = v;\n  }\n}, 1);\nvar _hasChanges = /*#__PURE__*/_classPrivateFieldLooseKey(\"hasChanges\");\nvar _index = /*#__PURE__*/_classPrivateFieldLooseKey(\"index\");\nvar _phase = /*#__PURE__*/_classPrivateFieldLooseKey(\"phase\");\nvar _items = /*#__PURE__*/_classPrivateFieldLooseKey(\"items\");\nvar _itemCount = /*#__PURE__*/_classPrivateFieldLooseKey(\"itemCount\");\nvar _pedingMutation = /*#__PURE__*/_classPrivateFieldLooseKey(\"pedingMutation\");\nvar RecordList = /*#__PURE__*/function (_Emitter) {\n  function RecordList() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _Emitter.call.apply(_Emitter, [this].concat(args)) || this;\n    Object.defineProperty(_this, _hasChanges, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, _index, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(_this, _phase, {\n      writable: true,\n      value: AsyncStatePhase.LOADING\n    });\n    Object.defineProperty(_this, _items, {\n      writable: true,\n      value: undefined\n    });\n    Object.defineProperty(_this, _itemCount, {\n      writable: true,\n      value: undefined\n    });\n    Object.defineProperty(_this, _pedingMutation, {\n      writable: true,\n      value: Promise.resolve()\n    });\n    return _this;\n  }\n  _inheritsLoose(RecordList, _Emitter);\n  var _proto = RecordList.prototype;\n  _proto.filter = function () {\n    function filter(_item) {\n      return true;\n    }\n    return filter;\n  }();\n  _proto.compare = function () {\n    function compare(a, b) {\n      var _bUpdatedAt$getTime, _aUpdatedAt$getTime;\n      var aUpdatedAt = typeof a._updatedAt === 'string' ? new Date(a._updatedAt) : a._updatedAt;\n      var bUpdatedAt = typeof b._updatedAt === 'string' ? new Date(b._updatedAt) : b._updatedAt;\n      return ((_bUpdatedAt$getTime = bUpdatedAt === null || bUpdatedAt === void 0 ? void 0 : bUpdatedAt.getTime()) !== null && _bUpdatedAt$getTime !== void 0 ? _bUpdatedAt$getTime : -1) - ((_aUpdatedAt$getTime = aUpdatedAt === null || aUpdatedAt === void 0 ? void 0 : aUpdatedAt.getTime()) !== null && _aUpdatedAt$getTime !== void 0 ? _aUpdatedAt$getTime : -1);\n    }\n    return compare;\n  }();\n  _proto.insert = function () {\n    function insert(item) {\n      _classPrivateFieldLooseBase(this, _index)[_index].set(item._id, item);\n      this.emit(item._id + \"/inserted\", item);\n      if (typeof _classPrivateFieldLooseBase(this, _itemCount)[_itemCount] === 'number') {\n        _classPrivateFieldLooseBase(this, _itemCount)[_itemCount]++;\n      }\n      _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = true;\n    }\n    return insert;\n  }();\n  _proto.update = function () {\n    function update(item) {\n      _classPrivateFieldLooseBase(this, _index)[_index].set(item._id, item);\n      this.emit(item._id + \"/updated\", item);\n      _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = true;\n    }\n    return update;\n  }();\n  _proto.delete = function () {\n    function _delete(_id) {\n      _classPrivateFieldLooseBase(this, _index)[_index].delete(_id);\n      this.emit(_id + \"/deleted\");\n      if (typeof _classPrivateFieldLooseBase(this, _itemCount)[_itemCount] === 'number') {\n        _classPrivateFieldLooseBase(this, _itemCount)[_itemCount]--;\n      }\n      _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = true;\n    }\n    return _delete;\n  }();\n  _proto.push = function () {\n    function push(item) {\n      var exists = _classPrivateFieldLooseBase(this, _index)[_index].has(item._id);\n      var valid = this.filter(item);\n      if (exists && !valid) {\n        this.delete(item._id);\n        return;\n      }\n      if (exists && valid) {\n        this.update(item);\n        return;\n      }\n      if (!exists && valid) {\n        this.insert(item);\n      }\n    }\n    return push;\n  }();\n  _proto.mutate = function () {\n    function mutate(mutation) {\n      var hasChanged;\n      return _regeneratorRuntime.async(function () {\n        function mutate$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              if (_classPrivateFieldLooseBase(this, _phase)[_phase] === AsyncStatePhase.RESOLVED) {\n                _classPrivateFieldLooseBase(this, _phase)[_phase] = AsyncStatePhase.UPDATING;\n                this.emit('mutating');\n              }\n              _classPrivateFieldLooseBase(this, _pedingMutation)[_pedingMutation] = _classPrivateFieldLooseBase(this, _pedingMutation)[_pedingMutation].then(mutation);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(_classPrivateFieldLooseBase(this, _pedingMutation)[_pedingMutation]);\n            case 5:\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              this.emit('errored', _context.t0);\n            case 10:\n              _context.prev = 10;\n              hasChanged = _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges];\n              _classPrivateFieldLooseBase(this, _phase)[_phase] = AsyncStatePhase.RESOLVED;\n              if (hasChanged) {\n                _classPrivateFieldLooseBase(this, _items)[_items] = undefined;\n                _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = false;\n              }\n              this.emit('mutated', hasChanged);\n              return _context.finish(10);\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return mutate$;\n      }(), null, this, [[0, 7, 10, 16]], Promise);\n    }\n    return mutate;\n  }();\n  _proto.batchHandle = function () {\n    function batchHandle(getInfo) {\n      var _this2 = this;\n      return this.mutate(function () {\n        function _callee() {\n          var info, _iterator, _step, item;\n          return _regeneratorRuntime.async(function () {\n            function _callee$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return _regeneratorRuntime.awrap(getInfo());\n                case 2:\n                  info = _context2.sent;\n                  if (info.items) {\n                    for (_iterator = _createForOfIteratorHelperLoose(info.items); !(_step = _iterator()).done;) {\n                      item = _step.value;\n                      _this2.push(item);\n                    }\n                  }\n                  if (info.itemCount) {\n                    _classPrivateFieldLooseBase(_this2, _itemCount)[_itemCount] = info.itemCount;\n                    _classPrivateFieldLooseBase(_this2, _hasChanges)[_hasChanges] = true;\n                  }\n                case 5:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n            return _callee$;\n          }(), null, null, null, Promise);\n        }\n        return _callee;\n      }());\n    }\n    return batchHandle;\n  }();\n  _proto.prune = function () {\n    function prune(matchCriteria) {\n      var _this3 = this;\n      return this.mutate(function () {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(_classPrivateFieldLooseBase(_this3, _index)[_index].values()), _step2; !(_step2 = _iterator2()).done;) {\n          var item = _step2.value;\n          if (matchCriteria(item)) {\n            _this3.delete(item._id);\n          }\n        }\n      });\n    }\n    return prune;\n  }();\n  _proto.handle = function () {\n    function handle(item) {\n      var _this4 = this;\n      return this.mutate(function () {\n        _this4.push(item);\n      });\n    }\n    return handle;\n  }();\n  _proto.remove = function () {\n    function remove(_id) {\n      var _this5 = this;\n      return this.mutate(function () {\n        if (!_classPrivateFieldLooseBase(_this5, _index)[_index].has(_id)) {\n          return;\n        }\n        _this5.delete(_id);\n      });\n    }\n    return remove;\n  }();\n  _proto.clear = function () {\n    function clear() {\n      var _this6 = this;\n      return this.mutate(function () {\n        if (_classPrivateFieldLooseBase(_this6, _index)[_index].size === 0) {\n          return;\n        }\n        _classPrivateFieldLooseBase(_this6, _index)[_index].clear();\n        _classPrivateFieldLooseBase(_this6, _items)[_items] = undefined;\n        _classPrivateFieldLooseBase(_this6, _itemCount)[_itemCount] = undefined;\n        _classPrivateFieldLooseBase(_this6, _hasChanges)[_hasChanges] = true;\n        _this6.emit('cleared');\n      });\n    }\n    return clear;\n  }();\n  return _createClass(RecordList, [{\n    key: \"phase\",\n    get: function () {\n      return _classPrivateFieldLooseBase(this, _phase)[_phase];\n    }\n  }, {\n    key: \"items\",\n    get: function () {\n      if (!_classPrivateFieldLooseBase(this, _items)[_items]) {\n        _classPrivateFieldLooseBase(this, _items)[_items] = Array.from(_classPrivateFieldLooseBase(this, _index)[_index].values()).sort(this.compare);\n      }\n      return _classPrivateFieldLooseBase(this, _items)[_items];\n    }\n  }, {\n    key: \"itemCount\",\n    get: function () {\n      var _classPrivateFieldLoo;\n      return (_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _itemCount)[_itemCount]) !== null && _classPrivateFieldLoo !== void 0 ? _classPrivateFieldLoo : _classPrivateFieldLooseBase(this, _index)[_index].size;\n    }\n  }]);\n}(Emitter);","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_createForOfIteratorHelperLoose","_createClass","_inheritsLoose","_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","export","RecordList","Emitter","AsyncStatePhase","_hasChanges","_index","_phase","_items","_itemCount","_pedingMutation","_Emitter","_this","_len","arguments","length","args","Array","_key","call","apply","concat","Object","defineProperty","writable","value","Map","LOADING","undefined","Promise","resolve","_proto","prototype","filter","_item","compare","a","b","_bUpdatedAt$getTime","_aUpdatedAt$getTime","aUpdatedAt","_updatedAt","Date","bUpdatedAt","getTime","insert","item","set","_id","emit","update","delete","_delete","push","exists","has","valid","mutate","mutation","hasChanged","async","mutate$","_context","prev","next","RESOLVED","UPDATING","then","awrap","t0","finish","stop","batchHandle","getInfo","_this2","_callee","info","_iterator","_step","_callee$","_context2","sent","items","done","itemCount","prune","matchCriteria","_this3","_iterator2","values","_step2","handle","_this4","remove","_this5","clear","_this6","size","key","get","from","sort","_classPrivateFieldLoo"],"sources":["client/lib/lists/RecordList.ts"],"sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\n\nimport { AsyncStatePhase } from '../asyncState';\n\nexport type RecordListBatchChanges<T> = {\n\titems?: T[];\n\titemCount?: number;\n};\n\nexport class RecordList<T extends { _id: string; _updatedAt?: Date }> extends Emitter {\n\t#hasChanges = false;\n\n\t#index = new Map<T['_id'], T>();\n\n\t#phase: AsyncStatePhase.LOADING | AsyncStatePhase.UPDATING | AsyncStatePhase.RESOLVED = AsyncStatePhase.LOADING;\n\n\t#items: T[] | undefined = undefined;\n\n\t#itemCount: number | undefined = undefined;\n\n\tprotected filter(_item: T): boolean {\n\t\treturn true;\n\t}\n\n\tprotected compare(a: T, b: T): number {\n\t\tconst aUpdatedAt = typeof a._updatedAt === 'string' ? new Date(a._updatedAt) : a._updatedAt;\n\t\tconst bUpdatedAt = typeof b._updatedAt === 'string' ? new Date(b._updatedAt) : b._updatedAt;\n\t\treturn (bUpdatedAt?.getTime() ?? -1) - (aUpdatedAt?.getTime() ?? -1);\n\t}\n\n\tpublic get phase(): AsyncStatePhase {\n\t\treturn this.#phase;\n\t}\n\n\tpublic get items(): T[] {\n\t\tif (!this.#items) {\n\t\t\tthis.#items = Array.from(this.#index.values()).sort(this.compare);\n\t\t}\n\n\t\treturn this.#items;\n\t}\n\n\tpublic get itemCount(): number {\n\t\treturn this.#itemCount ?? this.#index.size;\n\t}\n\n\tprivate insert(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/inserted`, item);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount++;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate update(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/updated`, item);\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate delete(_id: T['_id']): void {\n\t\tthis.#index.delete(_id);\n\t\tthis.emit(`${_id}/deleted`);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount--;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate push(item: T): void {\n\t\tconst exists = this.#index.has(item._id);\n\t\tconst valid = this.filter(item);\n\n\t\tif (exists && !valid) {\n\t\t\tthis.delete(item._id);\n\t\t\treturn;\n\t\t}\n\n\t\tif (exists && valid) {\n\t\t\tthis.update(item);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!exists && valid) {\n\t\t\tthis.insert(item);\n\t\t}\n\t}\n\n\t#pedingMutation: Promise<void> = Promise.resolve();\n\n\tprotected async mutate(mutation: () => void | Promise<void>): Promise<void> {\n\t\ttry {\n\t\t\tif (this.#phase === AsyncStatePhase.RESOLVED) {\n\t\t\t\tthis.#phase = AsyncStatePhase.UPDATING;\n\t\t\t\tthis.emit('mutating');\n\t\t\t}\n\n\t\t\tthis.#pedingMutation = this.#pedingMutation.then(mutation);\n\t\t\tawait this.#pedingMutation;\n\t\t} catch (error) {\n\t\t\tthis.emit('errored', error);\n\t\t} finally {\n\t\t\tconst hasChanged = this.#hasChanges;\n\t\t\tthis.#phase = AsyncStatePhase.RESOLVED;\n\t\t\tif (hasChanged) {\n\t\t\t\tthis.#items = undefined;\n\t\t\t\tthis.#hasChanges = false;\n\t\t\t}\n\t\t\tthis.emit('mutated', hasChanged);\n\t\t}\n\t}\n\n\tpublic batchHandle(getInfo: () => Promise<RecordListBatchChanges<T>>): Promise<void> {\n\t\treturn this.mutate(async () => {\n\t\t\tconst info = await getInfo();\n\n\t\t\tif (info.items) {\n\t\t\t\tfor (const item of info.items) {\n\t\t\t\t\tthis.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (info.itemCount) {\n\t\t\t\tthis.#itemCount = info.itemCount;\n\t\t\t\tthis.#hasChanges = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic prune(matchCriteria: (item: T) => boolean): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tfor (const item of this.#index.values()) {\n\t\t\t\tif (matchCriteria(item)) {\n\t\t\t\t\tthis.delete(item._id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic handle(item: T): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tthis.push(item);\n\t\t});\n\t}\n\n\tpublic remove(_id: T['_id']): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (!this.#index.has(_id)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.delete(_id);\n\t\t});\n\t}\n\n\tpublic clear(): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (this.#index.size === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#index.clear();\n\t\t\tthis.#items = undefined;\n\t\t\tthis.#itemCount = undefined;\n\t\t\tthis.#hasChanges = true;\n\t\t\tthis.emit('cleared');\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0cb17f840555159cc10f0eb1909598e3bc8207eb"}
