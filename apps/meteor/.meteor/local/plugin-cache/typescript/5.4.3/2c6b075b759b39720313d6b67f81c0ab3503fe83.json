{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/modules/notifications/notifications.module.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/modules/notifications/notifications.module.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/modules/notifications/notifications.module.ts","inputSourceMap":{"version":3,"file":"server/modules/notifications/notifications.module.ts","sourceRoot":"","sources":["server/modules/notifications/notifications.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,4BAA4B,CAAC;AAGtE,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAI5E,OAAO,EAAE,IAAI,EAAE,cAAc,EAAE,MAAM,gDAAgD,CAAC;AACtF,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAEvD,MAAM,OAAO,mBAAmB;IAuCX;IAtCJ,YAAY,CAA6B;IAEzC,SAAS,CAA0B;IAEnC,UAAU,CAA2B;IAErC,eAAe,CAAiC;IAEhD,UAAU,CAExB;IAEc,iBAAiB,CAA6B;IAE9C,eAAe,CAAyB;IAExC,WAAW,CAAqB;IAEhC,UAAU,CAAoB;IAE9B,gBAAgB,CAA2B;IAE3C,qBAAqB,CAAgC;IAErD,wBAAwB,CAAkC;IAE1D,kBAAkB,CAA6B;IAE/C,uBAAuB,CAA+C;IAEtE,YAAY,CAAsB;IAElC,cAAc,CAAyB;IAEvC,WAAW,CAAqB;IAEhC,cAAc,CAA6B;IAE3D,YAAoB,QAA8B;QAA9B,aAAQ,GAAR,QAAQ,CAAsB;QACjD,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QAC9D,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QAC7E,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QACnE,IAAI,CAAC,gBAAgB,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QAChF,IAAI,CAAC,qBAAqB,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QACnE,IAAI,CAAC,wBAAwB,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;QACxE,IAAI,CAAC,kBAAkB,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAC7D,IAAI,CAAC,uBAAuB,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,iCAAiC,CAAC,CAAC;QACpF,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC,WAAW,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;QAC5E,IAAI,CAAC,iBAAiB,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QAE5D,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,eAAe,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAyB,EAAE,SAAiB,EAAiB,EAAE;YAC1H,MAAM,EAAE,MAAM,EAAE,GAAG,WAAW,CAAC,QAAQ,CAAC;YACxC,IAAI,CAAC,MAAM,EAAE,CAAC;gBACb,OAAO;YACR,CAAC;YAED,MAAM,SAAS,GAAG,CAAC,YAAoB,EAAE,EAAE,GAAG,EAAmB,EAAQ,EAAE;gBAC1E,QAAQ,YAAY,EAAE,CAAC;oBACtB,KAAK,SAAS;wBACb,QAAQ,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;wBAC3C,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,KAAK,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;wBACnH,GAAG,IAAI,QAAQ,CAAC,kBAAkB,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;wBACnD,MAAM;gBACR,CAAC;YACF,CAAC,CAAC;YAEF,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YAE/B,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC;IAED,SAAS;QACR,4DAA4D;QAC5D,MAAM,IAAI,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,WAAW,SAAS,EAAE,SAAS;YACpE,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAChD,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,OAAO,KAAK,CAAC;YACd,CAAC;YAED,MAAM,SAAS,GAAG,MAAM,aAAa,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;YACjG,IAAI,CAAC,SAAS,EAAE,CAAC;gBAChB,sDAAsD;gBACtD,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;oBACnC,OAAO,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;gBACnE,CAAC;gBACD,OAAO,KAAK,CAAC;YACd,CAAC;YAED,OAAO,IAAI,CAAC;QACb,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QAC3D,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,WAAW,UAAU,EAAE,EAAE,GAAG,EAAE;YACtF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,OAAO,KAAK,CAAC;YACd,CAAC;YAED,IAAI,CAAC;gBACJ,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBAC1C,IAAI,CAAC,IAAI,EAAE,CAAC;oBACX,OAAO,KAAK,CAAC;gBACd,CAAC;gBAED,MAAM,SAAS,GAAG,MAAM,aAAa,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBAChF,IAAI,CAAC,SAAS,EAAE,CAAC;oBAChB,OAAO,KAAK,CAAC;gBACd,CAAC;gBAED,MAAM,eAAe,GAAG,MAAM,aAAa,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;gBAE1F,OAAO;oBACN,eAAe,EAAE,eAAe,GAAG,CAAC;oBACpC,QAAQ,EAAE,IAAI,CAAC,CAAC;oBAChB,QAAQ,EAAE,IAAI,CAAC,IAAI;iBACnB,CAAC;YACH,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBAChB,UAAU;gBACV,OAAO,KAAK,CAAC;YACd,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,0BAA0B,EAAE,KAAK;YAC5D,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE,CAAC;gBACzB,OAAO,KAAK,CAAC;YACd,CAAC;YACD,OAAO,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,EAAE;gBACzD,yBAAyB;gBACzB,yBAAyB;gBACzB,0BAA0B;aAC1B,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAEtC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,WAAW,SAAS,EAAE,SAAS;YAC7D,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEtC,IAAI,CAAC,KAAK,QAAQ,EAAE,CAAC;gBACpB,OAAO,IAAI,CAAC;YACb,CAAC;YAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAA4C,GAAG,EAAE;gBACpF,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE;aACpC,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,OAAO,KAAK,CAAC;YACd,CAAC;YAED,8BAA8B;YAC9B,IAAI,SAAS,EAAE,KAAK,EAAE,CAAC;gBACtB,8CAA8C;gBAC9C,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAoC,GAAG,EAAE;oBAC5E,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE;iBACpC,CAAC,CAAC;gBACH,OAAO,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,CAAC;YACrE,CAAC;YAED,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,OAAO,KAAK,CAAC;YACd,CAAC;YACD,MAAM,SAAS,GAAG,MAAM,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAE7E,OAAO,SAAS,CAAC;QAClB,CAAC,CAAC,CAAC;QAEH,KAAK,UAAU,OAAO,CAAC,EACtB,MAAM,EACN,QAAQ,EACR,SAAS,EACT,GAAG,GAMH;YACA,IAAI,CAAC;gBACJ,8BAA8B;gBAC9B,IAAI,SAAS,EAAE,KAAK,EAAE,CAAC;oBACtB,8CAA8C;oBAC9C,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAoC,GAAG,EAAE;wBAC5E,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE;qBACpC,CAAC,CAAC;oBACH,OAAO,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,CAAC;gBACrE,CAAC;gBAED,IAAI,CAAC,MAAM,EAAE,CAAC;oBACb,OAAO,KAAK,CAAC;gBACd,CAAC;gBAED,kDAAkD;gBAClD,MAAM,GAAG,GAAG,CAAC,MAAM,QAAQ,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC;gBAEpF,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAmC,MAAM,EAAE;oBAC9E,UAAU,EAAE;wBACX,CAAC,GAAG,CAAC,EAAE,CAAC;qBACR;iBACD,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,EAAE,CAAC;oBACX,OAAO,KAAK,CAAC;gBACd,CAAC;gBAED,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC;YAC/B,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACZ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,OAAO,KAAK,CAAC;YACd,CAAC;QACF,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,WAAW,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS;YACnF,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEtC,4CAA4C;YAC5C,IAAI,CAAC,KAAK,QAAQ,EAAE,CAAC;gBACpB,OAAO,IAAI,CAAC;YACb,CAAC;YAED,IAAI,CAAC,KAAK,eAAe,EAAE,CAAC;gBAC3B,OAAO,KAAK,CAAC;YACd,CAAC;YAED,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC;gBACtF,OAAO,KAAK,CAAC;YACd,CAAC;YAED,OAAO,IAAI,CAAC;QACb,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,WAAW,SAAS,EAAE,GAAG,IAAW;YACxE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAmB,MAAM,EAAE;oBAC9D,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,cAAc,EAAE,CAAC,EAAE;iBACzC,CAAC,CAAC;gBACH,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC/D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;oBAC/C,OAAO,KAAK,CAAC;gBACd,CAAC;YACF,CAAC;iBAAM,IAAI,CAAC,MAAM,aAAa,CAAC,sBAAsB,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;gBAClF,MAAM,qBAAqB,GAAoB,MAAM,aAAa,CAAC,gCAAgC,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;oBACxH,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;iBACpC,CAAC,CAAC,OAAO,EAAE,CAAC;gBACb,IAAI,qBAAqB,IAAI,CAAC,KAAK,QAAQ,EAAE,CAAC;oBAC7C,qBAAqB,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;oBACnH,OAAO,KAAK,CAAC;gBACd,CAAC;gBACD,MAAM,aAAa,GAAoB,MAAM,aAAa,CAAC,wBAAwB,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE;oBACxG,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;iBACpC,CAAC,CAAC,OAAO,EAAE,CAAC;gBAEb,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;YAC1F,CAAC;YACD,OAAO,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,WAAW,SAAS,EAAE,IAAa;YAClE,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACnC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,KAAK,WAAW,IAAI,IAAI,KAAK,aAAa,CAAC,EAAE,CAAC;gBACrE,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;gBAC3D,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,IAAI,CAAC,CAAC;YAC3E,CAAC;YACD,IAAI,CAAC,KAAK,QAAQ,EAAE,CAAC;gBACpB,OAAO,IAAI,CAAC;YACb,CAAC;YACD,IAAI,CAAC,KAAK,kBAAkB,EAAE,CAAC;gBAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;oBACvD,OAAO,KAAK,CAAC;gBACd,CAAC;gBAED,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,IAGvC,CAAC;gBAEF,IAAI,CAAC,WAAW,IAAI,OAAO,WAAW,KAAK,QAAQ,IAAI,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE,CAAC;oBAC9F,OAAO,KAAK,CAAC;gBACd,CAAC;gBAED,MAAM,MAAM,GAAG,QAAQ,IAAI,MAAM,IAAI,OAAO,MAAM,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC5F,MAAM,GAAG,GAAG,KAAK,IAAI,MAAM,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;gBAChF,MAAM,GAAG,GAAG,KAAK,IAAI,MAAM,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;gBAEhF,OAAO,SAAS,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE;oBACzD,MAAM;oBACN,GAAG;oBACH,GAAG;iBACH,CAAC,CAAC;YACJ,CAAC;YAED,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,WAAW,SAAS;YAClD,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEzC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC;gBACjB,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;gBAC3D,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,CAAC,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,IAAI,CAAC,CAAC;YACrG,CAAC;YACD,IAAI,CAAC,KAAK,QAAQ,EAAE,CAAC;gBACpB,OAAO,IAAI,CAAC;YACb,CAAC;YAED,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC;QACvD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAExC,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAEnC,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,IAAI,CAAC;QACxC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAEzC,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,KAAK;YACzC,OAAO,CACN,CAAC,CAAC,IAAI,CAAC,MAAM;gBACb,CAAC,CAAC,CAAC,MAAM,QAAQ,CAAC,YAAY,CAAC,yBAAyB,CAAC,CAAC;gBAC1D,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,uBAAuB,CAAC,CACjE,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,KAAK;YAC5C,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,OAAO,KAAK,CAAC;YACd,CAAC;YACD,OAAO,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,8BAA8B,EAAE,kCAAkC,CAAC,CAAC,CAAC;QACjI,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE;YAC7D,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAoC,MAAM,EAAE;gBAC/E,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;aAClC,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,OAAO,CAAC,IAAI,CAAC,uBAAuB,MAAM,GAAG,CAAC,CAAC;gBAC/C,OAAO,KAAK,CAAC;YACd,CAAC;YAED,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,SAAS,EAAE,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,YAAY,EAAE,CAAC;gBAC1F,OAAO,IAAI,CAAC;YACb,CAAC;YACD,OAAO,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,KAAK;YAC3C,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACtF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK;YAChC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,OAAO,KAAK,CAAC;YACd,CAAC;YACD,OAAO,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,WAAW,GAAG;YAChD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,OAAO,KAAK,CAAC;YACd,CAAC;YAED,IAAI,CAAC;gBACJ,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBAC1C,IAAI,CAAC,IAAI,EAAE,CAAC;oBACX,OAAO,KAAK,CAAC;gBACd,CAAC;gBAED,MAAM,SAAS,GAAG,MAAM,aAAa,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBAChF,IAAI,CAAC,SAAS,EAAE,CAAC;oBAChB,OAAO,KAAK,CAAC;gBACd,CAAC;gBAED,OAAO,IAAI,CAAC;YACb,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBAChB,OAAO,KAAK,CAAC;YACd,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAErC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,eAAe,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAyB,EAAE,SAAiB,EAAiB,EAAE;YACnH,MAAM,EAAE,MAAM,EAAE,GAAG,WAAW,CAAC,QAAQ,CAAC;YACxC,IAAI,CAAC,MAAM,EAAE,CAAC;gBACb,OAAO;YACR,CAAC;YAED,IAAI,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;gBACrC,2CAA2C;gBAC3C,MAAM,SAAS,GAAG,CAAC,GAAG,IAAW,EAAQ,EAAE;oBAC1C,uFAAuF;oBACvF,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,EAAE;wBACxE,SAAS,EAAE,GAAG,MAAM,gBAAgB;wBACpC,IAAI;qBACJ,CAAC,CAAC;oBAEH,OAAO,IAAI,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBACvD,CAAC,CAAC;gBAEF,MAAM,aAAa,GAAG,MAAM,aAAa,CAAC,IAAI,CAC7C,EAAE,OAAO,EAAE,MAAM,EAAE,EACnB,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAC1B,CAAC,OAAO,EAAE,CAAC;gBAEZ,aAAa,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE;oBACjC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC;gBAEH,MAAM,SAAS,GAAG,KAAK,EAAE,YAAoB,EAAE,EAAE,GAAG,KAA6B,EAAE,EAAiB,EAAE;oBACrG,IAAI,CAAC,GAAG,EAAE,CAAC;wBACV,OAAO;oBACR,CAAC;oBAED,QAAQ,YAAY,EAAE,CAAC;wBACtB,KAAK,UAAU;4BACd,aAAa,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;4BAC5B,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;4BAE5B,4DAA4D;4BAC5D,SAAS,CAAC,UAAU,EAAE,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;4BACpD,MAAM;wBAEP,KAAK,SAAS;4BACb,QAAQ,CAAC,cAAc,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;4BACxC,MAAM;oBACR,CAAC;gBACF,CAAC,CAAC;gBACF,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;gBAE/B,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE;oBACvB,QAAQ,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;oBAC3C,aAAa,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;gBAC7E,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAEpC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,sHAAsH;IACtH,mDAAmD;IACnD,IAAI;IAEJ,YAAY,CAAwC,SAAY,EAAE,GAAG,IAA8C;QAClH,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,UAAU,CACT,IAAO,EACP,SAA6E,EAC7E,GAAG,IAAuH;QAE1H,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,SAAS,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;IAC9D,CAAC;IAED,UAAU,CACT,MAAS,EACT,SAA6E,EAC7E,GAAG,IAAuH;QAE1H,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,MAAM,IAAI,SAAS,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,uBAAuB,CAAqC,SAAY,EAAE,GAAG,IAA2C;QACvH,OAAO,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,0BAA0B,CAAwC,SAAY,EAAE,GAAG,IAA8C;QAChI,OAAO,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC;IACnE,CAAC;IAED,wBAAwB,CACvB,IAAO,EACP,SAA6E,EAC7E,GAAG,IAAuH;QAE1H,OAAO,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,GAAG,IAAI,IAAI,SAAS,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;IAC9E,CAAC;IAED,wBAAwB,CACvB,MAAS,EACT,SAA6E,EAC7E,GAAG,IAAuH;QAE1H,OAAO,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,GAAG,MAAM,IAAI,SAAS,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;IAChF,CAAC;IAED,YAAY,CAAC,GAAW,EAAE,GAAG,IAAqE;QACjG,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QAClB,OAAO,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;IAED,eAAe,CAAC,QAA6C;QAC5D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACjD,CAAC;CACD","sourcesContent":["import { Authorization, VideoConf } from '@rocket.chat/core-services';\nimport type { ISubscription, IOmnichannelRoom, IUser } from '@rocket.chat/core-typings';\nimport type { StreamerCallbackArgs, StreamKeys, StreamNames } from '@rocket.chat/ddp-client';\nimport { Rooms, Subscriptions, Users, Settings } from '@rocket.chat/models';\nimport type { IStreamer, IStreamerConstructor, IPublication } from 'meteor/rocketchat:streamer';\n\nimport type { ImporterProgress } from '../../../app/importer/server/classes/ImporterProgress';\nimport { emit, StreamPresence } from '../../../app/notifications/server/lib/Presence';\nimport { SystemLogger } from '../../lib/logger/system';\n\nexport class NotificationsModule {\n\tpublic readonly streamLogged: IStreamer<'notify-logged'>;\n\n\tpublic readonly streamAll: IStreamer<'notify-all'>;\n\n\tpublic readonly streamRoom: IStreamer<'notify-room'>;\n\n\tpublic readonly streamRoomUsers: IStreamer<'notify-room-users'>;\n\n\tpublic readonly streamUser: IStreamer<'notify-user'> & {\n\t\ton(event: string, fn: (...data: any[]) => void): void;\n\t};\n\n\tpublic readonly streamRoomMessage: IStreamer<'room-messages'>;\n\n\tpublic readonly streamImporters: IStreamer<'importers'>;\n\n\tpublic readonly streamRoles: IStreamer<'roles'>;\n\n\tpublic readonly streamApps: IStreamer<'apps'>;\n\n\tpublic readonly streamAppsEngine: IStreamer<'apps-engine'>;\n\n\tpublic readonly streamCannedResponses: IStreamer<'canned-responses'>;\n\n\tpublic readonly streamIntegrationHistory: IStreamer<'integrationHistory'>;\n\n\tpublic readonly streamLivechatRoom: IStreamer<'livechat-room'>;\n\n\tpublic readonly streamLivechatQueueData: IStreamer<'livechat-inquiry-queue-observer'>;\n\n\tpublic readonly streamStdout: IStreamer<'stdout'>;\n\n\tpublic readonly streamRoomData: IStreamer<'room-data'>;\n\n\tpublic readonly streamLocal: IStreamer<'local'>;\n\n\tpublic readonly streamPresence: IStreamer<'user-presence'>;\n\n\tconstructor(private Streamer: IStreamerConstructor) {\n\t\tthis.streamAll = new this.Streamer('notify-all');\n\t\tthis.streamLogged = new this.Streamer('notify-logged');\n\t\tthis.streamRoom = new this.Streamer('notify-room');\n\t\tthis.streamRoomUsers = new this.Streamer('notify-room-users');\n\t\tthis.streamImporters = new this.Streamer('importers', { retransmit: false });\n\t\tthis.streamRoles = new this.Streamer('roles');\n\t\tthis.streamApps = new this.Streamer('apps', { retransmit: false });\n\t\tthis.streamAppsEngine = new this.Streamer('apps-engine', { retransmit: false });\n\t\tthis.streamCannedResponses = new this.Streamer('canned-responses');\n\t\tthis.streamIntegrationHistory = new this.Streamer('integrationHistory');\n\t\tthis.streamLivechatRoom = new this.Streamer('livechat-room');\n\t\tthis.streamLivechatQueueData = new this.Streamer('livechat-inquiry-queue-observer');\n\t\tthis.streamStdout = new this.Streamer('stdout');\n\t\tthis.streamRoomData = new this.Streamer('room-data');\n\t\tthis.streamPresence = StreamPresence.getInstance(Streamer, 'user-presence');\n\t\tthis.streamRoomMessage = new this.Streamer('room-messages');\n\n\t\tthis.streamRoomMessage.on('_afterPublish', async (streamer, publication: IPublication, eventName: string): Promise<void> => {\n\t\t\tconst { userId } = publication._session;\n\t\t\tif (!userId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userEvent = (clientAction: string, { rid }: { rid: string }): void => {\n\t\t\t\tswitch (clientAction) {\n\t\t\t\t\tcase 'removed':\n\t\t\t\t\t\tstreamer.removeListener(userId, userEvent);\n\t\t\t\t\t\tconst sub = [...streamer.subscriptions].find((sub) => sub.eventName === rid && sub.subscription.userId === userId);\n\t\t\t\t\t\tsub && streamer.removeSubscription(sub, eventName);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tstreamer.on(userId, userEvent);\n\n\t\t\tpublication.onStop(() => streamer.removeListener(userId, userEvent));\n\t\t});\n\n\t\tthis.streamUser = new this.Streamer('notify-user');\n\t\tthis.streamLocal = new this.Streamer('local');\n\t}\n\n\tconfigure(): void {\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\n\t\tthis.streamRoomMessage.allowWrite('none');\n\t\tthis.streamRoomMessage.allowRead(async function (eventName, extraData) {\n\t\t\tconst room = await Rooms.findOneById(eventName);\n\t\t\tif (!room) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst canAccess = await Authorization.canAccessRoom(room, { _id: this.userId || '' }, extraData);\n\t\t\tif (!canAccess) {\n\t\t\t\t// verify if can preview messages from public channels\n\t\t\t\tif (room.t === 'c' && this.userId) {\n\t\t\t\t\treturn Authorization.hasPermission(this.userId, 'preview-c-room');\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tthis.streamRoomMessage.allowRead('__my_messages__', 'all');\n\t\tthis.streamRoomMessage.allowEmit('__my_messages__', async function (_eventName, { rid }) {\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst room = await Rooms.findOneById(rid);\n\t\t\t\tif (!room) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst canAccess = await Authorization.canAccessRoom(room, { _id: this.userId });\n\t\t\t\tif (!canAccess) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst roomParticipant = await Subscriptions.countByRoomIdAndUserId(room._id, this.userId);\n\n\t\t\t\treturn {\n\t\t\t\t\troomParticipant: roomParticipant > 0,\n\t\t\t\t\troomType: room.t,\n\t\t\t\t\troomName: room.name,\n\t\t\t\t};\n\t\t\t} catch (error) {\n\t\t\t\t/* error*/\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tthis.streamAll.allowWrite('none');\n\t\tthis.streamAll.allowRead('all');\n\t\tthis.streamLogged.allowRead('private-settings-changed', async function () {\n\t\t\tif (this.userId == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Authorization.hasAtLeastOnePermission(this.userId, [\n\t\t\t\t'view-privileged-setting',\n\t\t\t\t'edit-privileged-setting',\n\t\t\t\t'manage-selected-settings',\n\t\t\t]);\n\t\t});\n\n\t\tthis.streamLogged.allowWrite('none');\n\t\tthis.streamLogged.allowRead('logged');\n\n\t\tthis.streamRoom.allowRead(async function (eventName, extraData): Promise<boolean> {\n\t\t\tconst [rid, e] = eventName.split('/');\n\n\t\t\tif (e === 'webrtc') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst room = await Rooms.findOneById<Pick<IOmnichannelRoom, 't' | 'v' | '_id'>>(rid, {\n\t\t\t\tprojection: { 't': 1, 'v.token': 1 },\n\t\t\t});\n\n\t\t\tif (!room) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// typing from livechat widget\n\t\t\tif (extraData?.token) {\n\t\t\t\t// TODO improve this to make a query 'v.token'\n\t\t\t\tconst room = await Rooms.findOneById<Pick<IOmnichannelRoom, 't' | 'v'>>(rid, {\n\t\t\t\t\tprojection: { 't': 1, 'v.token': 1 },\n\t\t\t\t});\n\t\t\t\treturn !!room && room.t === 'l' && room.v.token === extraData.token;\n\t\t\t}\n\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst canAccess = await Authorization.canAccessRoomId(room._id, this.userId);\n\n\t\t\treturn canAccess;\n\t\t});\n\n\t\tasync function canType({\n\t\t\tuserId,\n\t\t\tusername,\n\t\t\textraData,\n\t\t\trid,\n\t\t}: {\n\t\t\tuserId?: string;\n\t\t\tusername: string;\n\t\t\textraData?: { token: string };\n\t\t\trid: string;\n\t\t}): Promise<boolean> {\n\t\t\ttry {\n\t\t\t\t// typing from livechat widget\n\t\t\t\tif (extraData?.token) {\n\t\t\t\t\t// TODO improve this to make a query 'v.token'\n\t\t\t\t\tconst room = await Rooms.findOneById<Pick<IOmnichannelRoom, 't' | 'v'>>(rid, {\n\t\t\t\t\t\tprojection: { 't': 1, 'v.token': 1 },\n\t\t\t\t\t});\n\t\t\t\t\treturn !!room && room.t === 'l' && room.v.token === extraData.token;\n\t\t\t\t}\n\n\t\t\t\tif (!userId) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// TODO consider using something to cache settings\n\t\t\t\tconst key = (await Settings.getValueById('UI_Use_Real_Name')) ? 'name' : 'username';\n\n\t\t\t\tconst user = await Users.findOneById<Pick<IUser, 'name' | 'username'>>(userId, {\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\t[key]: 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tif (!user) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn user[key] === username;\n\t\t\t} catch (e) {\n\t\t\t\tSystemLogger.error(e);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tthis.streamRoom.allowWrite(async function (eventName, username, _activity, extraData): Promise<boolean> {\n\t\t\tconst [rid, e] = eventName.split('/');\n\n\t\t\t// TODO should this use WEB_RTC_EVENTS enum?\n\t\t\tif (e === 'webrtc') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (e !== 'user-activity') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!(await canType({ extraData, rid, username, userId: this.userId ?? undefined }))) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tthis.streamRoomUsers.allowRead('none');\n\t\tthis.streamRoomUsers.allowWrite(async function (eventName, ...args: any[]) {\n\t\t\tconst [roomId, e] = eventName.split('/');\n\t\t\tif (!this.userId) {\n\t\t\t\tconst room = await Rooms.findOneById<IOmnichannelRoom>(roomId, {\n\t\t\t\t\tprojection: { 't': 1, 'servedBy._id': 1 },\n\t\t\t\t});\n\t\t\t\tif (room && room.t === 'l' && e === 'webrtc' && room.servedBy) {\n\t\t\t\t\tself.notifyUser(room.servedBy._id, e, ...args);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if ((await Subscriptions.countByRoomIdAndUserId(roomId, this.userId)) > 0) {\n\t\t\t\tconst livechatSubscriptions: ISubscription[] = await Subscriptions.findByLivechatRoomIdAndNotUserId(roomId, this.userId, {\n\t\t\t\t\tprojection: { 'v._id': 1, '_id': 0 },\n\t\t\t\t}).toArray();\n\t\t\t\tif (livechatSubscriptions && e === 'webrtc') {\n\t\t\t\t\tlivechatSubscriptions.forEach((subscription) => subscription.v && self.notifyUser(subscription.v._id, e, ...args));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tconst subscriptions: ISubscription[] = await Subscriptions.findByRoomIdAndNotUserId(roomId, this.userId, {\n\t\t\t\t\tprojection: { 'u._id': 1, '_id': 0 },\n\t\t\t\t}).toArray();\n\n\t\t\t\tsubscriptions.forEach((subscription) => self.notifyUser(subscription.u._id, e, ...args));\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tthis.streamUser.allowWrite(async function (eventName, data: unknown) {\n\t\t\tconst [, e] = eventName.split('/');\n\t\t\tif (e === 'otr' && (data === 'handshake' || data === 'acknowledge')) {\n\t\t\t\tconst isEnable = await Settings.getValueById('OTR_Enable');\n\t\t\t\treturn Boolean(this.userId) && (isEnable === 'true' || isEnable === true);\n\t\t\t}\n\t\t\tif (e === 'webrtc') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (e === 'video-conference') {\n\t\t\t\tif (!this.userId || !data || typeof data !== 'object') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst { action: videoAction, params } = data as {\n\t\t\t\t\taction: string | undefined;\n\t\t\t\t\tparams: { callId?: string; uid?: string; rid?: string };\n\t\t\t\t};\n\n\t\t\t\tif (!videoAction || typeof videoAction !== 'string' || !params || typeof params !== 'object') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst callId = 'callId' in params && typeof params.callId === 'string' ? params.callId : '';\n\t\t\t\tconst uid = 'uid' in params && typeof params.uid === 'string' ? params.uid : '';\n\t\t\t\tconst rid = 'rid' in params && typeof params.rid === 'string' ? params.rid : '';\n\n\t\t\t\treturn VideoConf.validateAction(videoAction, this.userId, {\n\t\t\t\t\tcallId,\n\t\t\t\t\tuid,\n\t\t\t\t\trid,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Boolean(this.userId);\n\t\t});\n\t\tthis.streamUser.allowRead(async function (eventName) {\n\t\t\tconst [userId, e] = eventName.split('/');\n\n\t\t\tif (e === 'otr') {\n\t\t\t\tconst isEnable = await Settings.getValueById('OTR_Enable');\n\t\t\t\treturn Boolean(this.userId) && this.userId === userId && (isEnable === 'true' || isEnable === true);\n\t\t\t}\n\t\t\tif (e === 'webrtc') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn Boolean(this.userId) && this.userId === userId;\n\t\t});\n\n\t\tthis.streamImporters.allowRead('all');\n\t\tthis.streamImporters.allowEmit('all');\n\t\tthis.streamImporters.allowWrite('none');\n\n\t\tthis.streamApps.serverOnly = true;\n\t\tthis.streamApps.allowRead('all');\n\t\tthis.streamApps.allowEmit('all');\n\t\tthis.streamApps.allowWrite('none');\n\n\t\tthis.streamAppsEngine.serverOnly = true;\n\t\tthis.streamAppsEngine.allowRead('none');\n\t\tthis.streamAppsEngine.allowEmit('all');\n\t\tthis.streamAppsEngine.allowWrite('none');\n\n\t\tthis.streamCannedResponses.allowWrite('none');\n\t\tthis.streamCannedResponses.allowRead(async function () {\n\t\t\treturn (\n\t\t\t\t!!this.userId &&\n\t\t\t\t!!(await Settings.getValueById('Canned_Responses_Enable')) &&\n\t\t\t\tAuthorization.hasPermission(this.userId, 'view-canned-responses')\n\t\t\t);\n\t\t});\n\n\t\tthis.streamIntegrationHistory.allowWrite('none');\n\t\tthis.streamIntegrationHistory.allowRead(async function () {\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Authorization.hasAtLeastOnePermission(this.userId, ['manage-outgoing-integrations', 'manage-own-outgoing-integrations']);\n\t\t});\n\n\t\tthis.streamLivechatRoom.allowRead(async (roomId, extraData) => {\n\t\t\tconst room = await Rooms.findOneById<Pick<IOmnichannelRoom, 't' | 'v'>>(roomId, {\n\t\t\t\tprojection: { _id: 0, t: 1, v: 1 },\n\t\t\t});\n\n\t\t\tif (!room) {\n\t\t\t\tconsole.warn(`Invalid eventName: \"${roomId}\"`);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (room.t === 'l' && extraData?.visitorToken && room.v.token === extraData.visitorToken) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tthis.streamLivechatQueueData.allowWrite('none');\n\t\tthis.streamLivechatQueueData.allowRead(async function () {\n\t\t\treturn this.userId ? Authorization.hasPermission(this.userId, 'view-l-room') : false;\n\t\t});\n\n\t\tthis.streamStdout.allowWrite('none');\n\t\tthis.streamStdout.allowRead(async function () {\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Authorization.hasPermission(this.userId, 'view-logs');\n\t\t});\n\n\t\tthis.streamRoomData.allowWrite('none');\n\t\tthis.streamRoomData.allowRead(async function (rid) {\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst room = await Rooms.findOneById(rid);\n\t\t\t\tif (!room) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst canAccess = await Authorization.canAccessRoom(room, { _id: this.userId });\n\t\t\t\tif (!canAccess) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t} catch (error) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tthis.streamRoles.allowWrite('none');\n\t\tthis.streamRoles.allowRead('logged');\n\n\t\tthis.streamUser.on('_afterPublish', async (streamer, publication: IPublication, eventName: string): Promise<void> => {\n\t\t\tconst { userId } = publication._session;\n\t\t\tif (!userId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/rooms-changed/.test(eventName)) {\n\t\t\t\t// TODO: change this to serialize only once\n\t\t\t\tconst roomEvent = (...args: any[]): void => {\n\t\t\t\t\t// TODO if receive a removed event could do => streamer.removeListener(rid, roomEvent);\n\t\t\t\t\tconst payload = streamer.changedPayload(streamer.subscriptionName, 'id', {\n\t\t\t\t\t\teventName: `${userId}/rooms-changed`,\n\t\t\t\t\t\targs,\n\t\t\t\t\t});\n\n\t\t\t\t\tpayload && publication._session.socket?.send(payload);\n\t\t\t\t};\n\n\t\t\t\tconst subscriptions = await Subscriptions.find<Pick<ISubscription, 'rid'>>(\n\t\t\t\t\t{ 'u._id': userId },\n\t\t\t\t\t{ projection: { rid: 1 } },\n\t\t\t\t).toArray();\n\n\t\t\t\tsubscriptions.forEach(({ rid }) => {\n\t\t\t\t\tstreamer.on(rid, roomEvent);\n\t\t\t\t});\n\n\t\t\t\tconst userEvent = async (clientAction: string, { rid }: Partial<ISubscription> = {}): Promise<void> => {\n\t\t\t\t\tif (!rid) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (clientAction) {\n\t\t\t\t\t\tcase 'inserted':\n\t\t\t\t\t\t\tsubscriptions.push({ rid });\n\t\t\t\t\t\t\tstreamer.on(rid, roomEvent);\n\n\t\t\t\t\t\t\t// after a subscription is added need to emit the room again\n\t\t\t\t\t\t\troomEvent('inserted', await Rooms.findOneById(rid));\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'removed':\n\t\t\t\t\t\t\tstreamer.removeListener(rid, roomEvent);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tstreamer.on(userId, userEvent);\n\n\t\t\t\tpublication.onStop(() => {\n\t\t\t\t\tstreamer.removeListener(userId, userEvent);\n\t\t\t\t\tsubscriptions.forEach(({ rid }) => streamer.removeListener(rid, roomEvent));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis.streamLocal.serverOnly = true;\n\t\tthis.streamLocal.allowRead('none');\n\t\tthis.streamLocal.allowEmit('all');\n\t\tthis.streamLocal.allowWrite('none');\n\n\t\tthis.streamPresence.allowRead('logged');\n\t\tthis.streamPresence.allowWrite('none');\n\t}\n\n\t// notifyAll<E extends StreamKeys<'notify-all'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-all', E>): void {\n\t// \treturn this.streamAll.emit(eventName, ...args);\n\t// }\n\n\tnotifyLogged<E extends StreamKeys<'notify-logged'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-logged', E>): void {\n\t\treturn this.streamLogged.emit(eventName, ...args);\n\t}\n\n\tnotifyRoom<P extends string, E extends string>(\n\t\troom: P,\n\t\teventName: E extends ExtractNotifyUserEventName<'notify-room', P> ? E : never,\n\t\t...args: E extends ExtractNotifyUserEventName<'notify-room', P> ? StreamerCallbackArgs<'notify-room', `${P}/${E}`> : never\n\t): void {\n\t\treturn this.streamRoom.emit(`${room}/${eventName}`, ...args);\n\t}\n\n\tnotifyUser<P extends string, E extends string>(\n\t\tuserId: P,\n\t\teventName: E extends ExtractNotifyUserEventName<'notify-user', P> ? E : never,\n\t\t...args: E extends ExtractNotifyUserEventName<'notify-user', P> ? StreamerCallbackArgs<'notify-user', `${P}/${E}`> : never\n\t): void {\n\t\treturn this.streamUser.emit(`${userId}/${eventName}`, ...args);\n\t}\n\n\tnotifyAllInThisInstance<E extends StreamKeys<'notify-all'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-all', E>): void {\n\t\treturn this.streamAll.emitWithoutBroadcast(eventName, ...args);\n\t}\n\n\tnotifyLoggedInThisInstance<E extends StreamKeys<'notify-logged'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-logged', E>): void {\n\t\treturn this.streamLogged.emitWithoutBroadcast(eventName, ...args);\n\t}\n\n\tnotifyRoomInThisInstance<P extends string, E extends string>(\n\t\troom: P,\n\t\teventName: E extends ExtractNotifyUserEventName<'notify-room', P> ? E : never,\n\t\t...args: E extends ExtractNotifyUserEventName<'notify-room', P> ? StreamerCallbackArgs<'notify-room', `${P}/${E}`> : never\n\t): void {\n\t\treturn this.streamRoom.emitWithoutBroadcast(`${room}/${eventName}`, ...args);\n\t}\n\n\tnotifyUserInThisInstance<P extends string, E extends string>(\n\t\tuserId: P,\n\t\teventName: E extends ExtractNotifyUserEventName<'notify-user', P> ? E : never,\n\t\t...args: E extends ExtractNotifyUserEventName<'notify-user', P> ? StreamerCallbackArgs<'notify-user', `${P}/${E}`> : never\n\t): void {\n\t\treturn this.streamUser.emitWithoutBroadcast(`${userId}/${eventName}`, ...args);\n\t}\n\n\tsendPresence(uid: string, ...args: [username: string, status?: 0 | 1 | 2 | 3, statusText?: string]): void {\n\t\temit(uid, [args]);\n\t\treturn this.streamPresence.emitWithoutBroadcast(uid, args);\n\t}\n\n\tprogressUpdated(progress: { rate: number } | ImporterProgress): void {\n\t\tthis.streamImporters.emit('progress', progress);\n\t}\n}\n\ntype ExtractNotifyUserEventName<\n\tT extends StreamNames,\n\tP extends string,\n\tE extends StreamKeys<T> = StreamKeys<T>,\n> = E extends `${infer X}/${infer I}` ? (P extends X ? I : never) : never;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/modules/notifications/notifications.module.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/modules/notifications/notifications.module.ts","inputSourceMap":{"version":3,"file":"server/modules/notifications/notifications.module.ts","sourceRoot":"","sources":["server/modules/notifications/notifications.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Authorization, VideoConf } from '@rocket.chat/core-services';\nimport type { ISubscription, IOmnichannelRoom, IUser } from '@rocket.chat/core-typings';\nimport type { StreamerCallbackArgs, StreamKeys, StreamNames } from '@rocket.chat/ddp-client';\nimport { Rooms, Subscriptions, Users, Settings } from '@rocket.chat/models';\nimport type { IStreamer, IStreamerConstructor, IPublication } from 'meteor/rocketchat:streamer';\n\nimport type { ImporterProgress } from '../../../app/importer/server/classes/ImporterProgress';\nimport { emit, StreamPresence } from '../../../app/notifications/server/lib/Presence';\nimport { SystemLogger } from '../../lib/logger/system';\n\nexport class NotificationsModule {\n\tpublic readonly streamLogged: IStreamer<'notify-logged'>;\n\n\tpublic readonly streamAll: IStreamer<'notify-all'>;\n\n\tpublic readonly streamRoom: IStreamer<'notify-room'>;\n\n\tpublic readonly streamRoomUsers: IStreamer<'notify-room-users'>;\n\n\tpublic readonly streamUser: IStreamer<'notify-user'> & {\n\t\ton(event: string, fn: (...data: any[]) => void): void;\n\t};\n\n\tpublic readonly streamRoomMessage: IStreamer<'room-messages'>;\n\n\tpublic readonly streamImporters: IStreamer<'importers'>;\n\n\tpublic readonly streamRoles: IStreamer<'roles'>;\n\n\tpublic readonly streamApps: IStreamer<'apps'>;\n\n\tpublic readonly streamAppsEngine: IStreamer<'apps-engine'>;\n\n\tpublic readonly streamCannedResponses: IStreamer<'canned-responses'>;\n\n\tpublic readonly streamIntegrationHistory: IStreamer<'integrationHistory'>;\n\n\tpublic readonly streamLivechatRoom: IStreamer<'livechat-room'>;\n\n\tpublic readonly streamLivechatQueueData: IStreamer<'livechat-inquiry-queue-observer'>;\n\n\tpublic readonly streamStdout: IStreamer<'stdout'>;\n\n\tpublic readonly streamRoomData: IStreamer<'room-data'>;\n\n\tpublic readonly streamLocal: IStreamer<'local'>;\n\n\tpublic readonly streamPresence: IStreamer<'user-presence'>;\n\n\tconstructor(private Streamer: IStreamerConstructor) {\n\t\tthis.streamAll = new this.Streamer('notify-all');\n\t\tthis.streamLogged = new this.Streamer('notify-logged');\n\t\tthis.streamRoom = new this.Streamer('notify-room');\n\t\tthis.streamRoomUsers = new this.Streamer('notify-room-users');\n\t\tthis.streamImporters = new this.Streamer('importers', { retransmit: false });\n\t\tthis.streamRoles = new this.Streamer('roles');\n\t\tthis.streamApps = new this.Streamer('apps', { retransmit: false });\n\t\tthis.streamAppsEngine = new this.Streamer('apps-engine', { retransmit: false });\n\t\tthis.streamCannedResponses = new this.Streamer('canned-responses');\n\t\tthis.streamIntegrationHistory = new this.Streamer('integrationHistory');\n\t\tthis.streamLivechatRoom = new this.Streamer('livechat-room');\n\t\tthis.streamLivechatQueueData = new this.Streamer('livechat-inquiry-queue-observer');\n\t\tthis.streamStdout = new this.Streamer('stdout');\n\t\tthis.streamRoomData = new this.Streamer('room-data');\n\t\tthis.streamPresence = StreamPresence.getInstance(Streamer, 'user-presence');\n\t\tthis.streamRoomMessage = new this.Streamer('room-messages');\n\n\t\tthis.streamRoomMessage.on('_afterPublish', async (streamer, publication: IPublication, eventName: string): Promise<void> => {\n\t\t\tconst { userId } = publication._session;\n\t\t\tif (!userId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userEvent = (clientAction: string, { rid }: { rid: string }): void => {\n\t\t\t\tswitch (clientAction) {\n\t\t\t\t\tcase 'removed':\n\t\t\t\t\t\tstreamer.removeListener(userId, userEvent);\n\t\t\t\t\t\tconst sub = [...streamer.subscriptions].find((sub) => sub.eventName === rid && sub.subscription.userId === userId);\n\t\t\t\t\t\tsub && streamer.removeSubscription(sub, eventName);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tstreamer.on(userId, userEvent);\n\n\t\t\tpublication.onStop(() => streamer.removeListener(userId, userEvent));\n\t\t});\n\n\t\tthis.streamUser = new this.Streamer('notify-user');\n\t\tthis.streamLocal = new this.Streamer('local');\n\t}\n\n\tconfigure(): void {\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\n\t\tthis.streamRoomMessage.allowWrite('none');\n\t\tthis.streamRoomMessage.allowRead(async function (eventName, extraData) {\n\t\t\tconst room = await Rooms.findOneById(eventName);\n\t\t\tif (!room) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst canAccess = await Authorization.canAccessRoom(room, { _id: this.userId || '' }, extraData);\n\t\t\tif (!canAccess) {\n\t\t\t\t// verify if can preview messages from public channels\n\t\t\t\tif (room.t === 'c' && this.userId) {\n\t\t\t\t\treturn Authorization.hasPermission(this.userId, 'preview-c-room');\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tthis.streamRoomMessage.allowRead('__my_messages__', 'all');\n\t\tthis.streamRoomMessage.allowEmit('__my_messages__', async function (_eventName, { rid }) {\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst room = await Rooms.findOneById(rid);\n\t\t\t\tif (!room) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst canAccess = await Authorization.canAccessRoom(room, { _id: this.userId });\n\t\t\t\tif (!canAccess) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst roomParticipant = await Subscriptions.countByRoomIdAndUserId(room._id, this.userId);\n\n\t\t\t\treturn {\n\t\t\t\t\troomParticipant: roomParticipant > 0,\n\t\t\t\t\troomType: room.t,\n\t\t\t\t\troomName: room.name,\n\t\t\t\t};\n\t\t\t} catch (error) {\n\t\t\t\t/* error*/\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tthis.streamAll.allowWrite('none');\n\t\tthis.streamAll.allowRead('all');\n\t\tthis.streamLogged.allowRead('private-settings-changed', async function () {\n\t\t\tif (this.userId == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Authorization.hasAtLeastOnePermission(this.userId, [\n\t\t\t\t'view-privileged-setting',\n\t\t\t\t'edit-privileged-setting',\n\t\t\t\t'manage-selected-settings',\n\t\t\t]);\n\t\t});\n\n\t\tthis.streamLogged.allowWrite('none');\n\t\tthis.streamLogged.allowRead('logged');\n\n\t\tthis.streamRoom.allowRead(async function (eventName, extraData): Promise<boolean> {\n\t\t\tconst [rid, e] = eventName.split('/');\n\n\t\t\tif (e === 'webrtc') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst room = await Rooms.findOneById<Pick<IOmnichannelRoom, 't' | 'v' | '_id'>>(rid, {\n\t\t\t\tprojection: { 't': 1, 'v.token': 1 },\n\t\t\t});\n\n\t\t\tif (!room) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// typing from livechat widget\n\t\t\tif (extraData?.token) {\n\t\t\t\t// TODO improve this to make a query 'v.token'\n\t\t\t\tconst room = await Rooms.findOneById<Pick<IOmnichannelRoom, 't' | 'v'>>(rid, {\n\t\t\t\t\tprojection: { 't': 1, 'v.token': 1 },\n\t\t\t\t});\n\t\t\t\treturn !!room && room.t === 'l' && room.v.token === extraData.token;\n\t\t\t}\n\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst canAccess = await Authorization.canAccessRoomId(room._id, this.userId);\n\n\t\t\treturn canAccess;\n\t\t});\n\n\t\tasync function canType({\n\t\t\tuserId,\n\t\t\tusername,\n\t\t\textraData,\n\t\t\trid,\n\t\t}: {\n\t\t\tuserId?: string;\n\t\t\tusername: string;\n\t\t\textraData?: { token: string };\n\t\t\trid: string;\n\t\t}): Promise<boolean> {\n\t\t\ttry {\n\t\t\t\t// typing from livechat widget\n\t\t\t\tif (extraData?.token) {\n\t\t\t\t\t// TODO improve this to make a query 'v.token'\n\t\t\t\t\tconst room = await Rooms.findOneById<Pick<IOmnichannelRoom, 't' | 'v'>>(rid, {\n\t\t\t\t\t\tprojection: { 't': 1, 'v.token': 1 },\n\t\t\t\t\t});\n\t\t\t\t\treturn !!room && room.t === 'l' && room.v.token === extraData.token;\n\t\t\t\t}\n\n\t\t\t\tif (!userId) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// TODO consider using something to cache settings\n\t\t\t\tconst key = (await Settings.getValueById('UI_Use_Real_Name')) ? 'name' : 'username';\n\n\t\t\t\tconst user = await Users.findOneById<Pick<IUser, 'name' | 'username'>>(userId, {\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\t[key]: 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tif (!user) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn user[key] === username;\n\t\t\t} catch (e) {\n\t\t\t\tSystemLogger.error(e);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tthis.streamRoom.allowWrite(async function (eventName, username, _activity, extraData): Promise<boolean> {\n\t\t\tconst [rid, e] = eventName.split('/');\n\n\t\t\t// TODO should this use WEB_RTC_EVENTS enum?\n\t\t\tif (e === 'webrtc') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (e !== 'user-activity') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!(await canType({ extraData, rid, username, userId: this.userId ?? undefined }))) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tthis.streamRoomUsers.allowRead('none');\n\t\tthis.streamRoomUsers.allowWrite(async function (eventName, ...args: any[]) {\n\t\t\tconst [roomId, e] = eventName.split('/');\n\t\t\tif (!this.userId) {\n\t\t\t\tconst room = await Rooms.findOneById<IOmnichannelRoom>(roomId, {\n\t\t\t\t\tprojection: { 't': 1, 'servedBy._id': 1 },\n\t\t\t\t});\n\t\t\t\tif (room && room.t === 'l' && e === 'webrtc' && room.servedBy) {\n\t\t\t\t\tself.notifyUser(room.servedBy._id, e, ...args);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if ((await Subscriptions.countByRoomIdAndUserId(roomId, this.userId)) > 0) {\n\t\t\t\tconst livechatSubscriptions: ISubscription[] = await Subscriptions.findByLivechatRoomIdAndNotUserId(roomId, this.userId, {\n\t\t\t\t\tprojection: { 'v._id': 1, '_id': 0 },\n\t\t\t\t}).toArray();\n\t\t\t\tif (livechatSubscriptions && e === 'webrtc') {\n\t\t\t\t\tlivechatSubscriptions.forEach((subscription) => subscription.v && self.notifyUser(subscription.v._id, e, ...args));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tconst subscriptions: ISubscription[] = await Subscriptions.findByRoomIdAndNotUserId(roomId, this.userId, {\n\t\t\t\t\tprojection: { 'u._id': 1, '_id': 0 },\n\t\t\t\t}).toArray();\n\n\t\t\t\tsubscriptions.forEach((subscription) => self.notifyUser(subscription.u._id, e, ...args));\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tthis.streamUser.allowWrite(async function (eventName, data: unknown) {\n\t\t\tconst [, e] = eventName.split('/');\n\t\t\tif (e === 'otr' && (data === 'handshake' || data === 'acknowledge')) {\n\t\t\t\tconst isEnable = await Settings.getValueById('OTR_Enable');\n\t\t\t\treturn Boolean(this.userId) && (isEnable === 'true' || isEnable === true);\n\t\t\t}\n\t\t\tif (e === 'webrtc') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (e === 'video-conference') {\n\t\t\t\tif (!this.userId || !data || typeof data !== 'object') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst { action: videoAction, params } = data as {\n\t\t\t\t\taction: string | undefined;\n\t\t\t\t\tparams: { callId?: string; uid?: string; rid?: string };\n\t\t\t\t};\n\n\t\t\t\tif (!videoAction || typeof videoAction !== 'string' || !params || typeof params !== 'object') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst callId = 'callId' in params && typeof params.callId === 'string' ? params.callId : '';\n\t\t\t\tconst uid = 'uid' in params && typeof params.uid === 'string' ? params.uid : '';\n\t\t\t\tconst rid = 'rid' in params && typeof params.rid === 'string' ? params.rid : '';\n\n\t\t\t\treturn VideoConf.validateAction(videoAction, this.userId, {\n\t\t\t\t\tcallId,\n\t\t\t\t\tuid,\n\t\t\t\t\trid,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Boolean(this.userId);\n\t\t});\n\t\tthis.streamUser.allowRead(async function (eventName) {\n\t\t\tconst [userId, e] = eventName.split('/');\n\n\t\t\tif (e === 'otr') {\n\t\t\t\tconst isEnable = await Settings.getValueById('OTR_Enable');\n\t\t\t\treturn Boolean(this.userId) && this.userId === userId && (isEnable === 'true' || isEnable === true);\n\t\t\t}\n\t\t\tif (e === 'webrtc') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn Boolean(this.userId) && this.userId === userId;\n\t\t});\n\n\t\tthis.streamImporters.allowRead('all');\n\t\tthis.streamImporters.allowEmit('all');\n\t\tthis.streamImporters.allowWrite('none');\n\n\t\tthis.streamApps.serverOnly = true;\n\t\tthis.streamApps.allowRead('all');\n\t\tthis.streamApps.allowEmit('all');\n\t\tthis.streamApps.allowWrite('none');\n\n\t\tthis.streamAppsEngine.serverOnly = true;\n\t\tthis.streamAppsEngine.allowRead('none');\n\t\tthis.streamAppsEngine.allowEmit('all');\n\t\tthis.streamAppsEngine.allowWrite('none');\n\n\t\tthis.streamCannedResponses.allowWrite('none');\n\t\tthis.streamCannedResponses.allowRead(async function () {\n\t\t\treturn (\n\t\t\t\t!!this.userId &&\n\t\t\t\t!!(await Settings.getValueById('Canned_Responses_Enable')) &&\n\t\t\t\tAuthorization.hasPermission(this.userId, 'view-canned-responses')\n\t\t\t);\n\t\t});\n\n\t\tthis.streamIntegrationHistory.allowWrite('none');\n\t\tthis.streamIntegrationHistory.allowRead(async function () {\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Authorization.hasAtLeastOnePermission(this.userId, ['manage-outgoing-integrations', 'manage-own-outgoing-integrations']);\n\t\t});\n\n\t\tthis.streamLivechatRoom.allowRead(async (roomId, extraData) => {\n\t\t\tconst room = await Rooms.findOneById<Pick<IOmnichannelRoom, 't' | 'v'>>(roomId, {\n\t\t\t\tprojection: { _id: 0, t: 1, v: 1 },\n\t\t\t});\n\n\t\t\tif (!room) {\n\t\t\t\tconsole.warn(`Invalid eventName: \"${roomId}\"`);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (room.t === 'l' && extraData?.visitorToken && room.v.token === extraData.visitorToken) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tthis.streamLivechatQueueData.allowWrite('none');\n\t\tthis.streamLivechatQueueData.allowRead(async function () {\n\t\t\treturn this.userId ? Authorization.hasPermission(this.userId, 'view-l-room') : false;\n\t\t});\n\n\t\tthis.streamStdout.allowWrite('none');\n\t\tthis.streamStdout.allowRead(async function () {\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Authorization.hasPermission(this.userId, 'view-logs');\n\t\t});\n\n\t\tthis.streamRoomData.allowWrite('none');\n\t\tthis.streamRoomData.allowRead(async function (rid) {\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst room = await Rooms.findOneById(rid);\n\t\t\t\tif (!room) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst canAccess = await Authorization.canAccessRoom(room, { _id: this.userId });\n\t\t\t\tif (!canAccess) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t} catch (error) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tthis.streamRoles.allowWrite('none');\n\t\tthis.streamRoles.allowRead('logged');\n\n\t\tthis.streamUser.on('_afterPublish', async (streamer, publication: IPublication, eventName: string): Promise<void> => {\n\t\t\tconst { userId } = publication._session;\n\t\t\tif (!userId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/rooms-changed/.test(eventName)) {\n\t\t\t\t// TODO: change this to serialize only once\n\t\t\t\tconst roomEvent = (...args: any[]): void => {\n\t\t\t\t\t// TODO if receive a removed event could do => streamer.removeListener(rid, roomEvent);\n\t\t\t\t\tconst payload = streamer.changedPayload(streamer.subscriptionName, 'id', {\n\t\t\t\t\t\teventName: `${userId}/rooms-changed`,\n\t\t\t\t\t\targs,\n\t\t\t\t\t});\n\n\t\t\t\t\tpayload && publication._session.socket?.send(payload);\n\t\t\t\t};\n\n\t\t\t\tconst subscriptions = await Subscriptions.find<Pick<ISubscription, 'rid'>>(\n\t\t\t\t\t{ 'u._id': userId },\n\t\t\t\t\t{ projection: { rid: 1 } },\n\t\t\t\t).toArray();\n\n\t\t\t\tsubscriptions.forEach(({ rid }) => {\n\t\t\t\t\tstreamer.on(rid, roomEvent);\n\t\t\t\t});\n\n\t\t\t\tconst userEvent = async (clientAction: string, { rid }: Partial<ISubscription> = {}): Promise<void> => {\n\t\t\t\t\tif (!rid) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (clientAction) {\n\t\t\t\t\t\tcase 'inserted':\n\t\t\t\t\t\t\tsubscriptions.push({ rid });\n\t\t\t\t\t\t\tstreamer.on(rid, roomEvent);\n\n\t\t\t\t\t\t\t// after a subscription is added need to emit the room again\n\t\t\t\t\t\t\troomEvent('inserted', await Rooms.findOneById(rid));\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'removed':\n\t\t\t\t\t\t\tstreamer.removeListener(rid, roomEvent);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tstreamer.on(userId, userEvent);\n\n\t\t\t\tpublication.onStop(() => {\n\t\t\t\t\tstreamer.removeListener(userId, userEvent);\n\t\t\t\t\tsubscriptions.forEach(({ rid }) => streamer.removeListener(rid, roomEvent));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis.streamLocal.serverOnly = true;\n\t\tthis.streamLocal.allowRead('none');\n\t\tthis.streamLocal.allowEmit('all');\n\t\tthis.streamLocal.allowWrite('none');\n\n\t\tthis.streamPresence.allowRead('logged');\n\t\tthis.streamPresence.allowWrite('none');\n\t}\n\n\t// notifyAll<E extends StreamKeys<'notify-all'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-all', E>): void {\n\t// \treturn this.streamAll.emit(eventName, ...args);\n\t// }\n\n\tnotifyLogged<E extends StreamKeys<'notify-logged'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-logged', E>): void {\n\t\treturn this.streamLogged.emit(eventName, ...args);\n\t}\n\n\tnotifyRoom<P extends string, E extends string>(\n\t\troom: P,\n\t\teventName: E extends ExtractNotifyUserEventName<'notify-room', P> ? E : never,\n\t\t...args: E extends ExtractNotifyUserEventName<'notify-room', P> ? StreamerCallbackArgs<'notify-room', `${P}/${E}`> : never\n\t): void {\n\t\treturn this.streamRoom.emit(`${room}/${eventName}`, ...args);\n\t}\n\n\tnotifyUser<P extends string, E extends string>(\n\t\tuserId: P,\n\t\teventName: E extends ExtractNotifyUserEventName<'notify-user', P> ? E : never,\n\t\t...args: E extends ExtractNotifyUserEventName<'notify-user', P> ? StreamerCallbackArgs<'notify-user', `${P}/${E}`> : never\n\t): void {\n\t\treturn this.streamUser.emit(`${userId}/${eventName}`, ...args);\n\t}\n\n\tnotifyAllInThisInstance<E extends StreamKeys<'notify-all'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-all', E>): void {\n\t\treturn this.streamAll.emitWithoutBroadcast(eventName, ...args);\n\t}\n\n\tnotifyLoggedInThisInstance<E extends StreamKeys<'notify-logged'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-logged', E>): void {\n\t\treturn this.streamLogged.emitWithoutBroadcast(eventName, ...args);\n\t}\n\n\tnotifyRoomInThisInstance<P extends string, E extends string>(\n\t\troom: P,\n\t\teventName: E extends ExtractNotifyUserEventName<'notify-room', P> ? E : never,\n\t\t...args: E extends ExtractNotifyUserEventName<'notify-room', P> ? StreamerCallbackArgs<'notify-room', `${P}/${E}`> : never\n\t): void {\n\t\treturn this.streamRoom.emitWithoutBroadcast(`${room}/${eventName}`, ...args);\n\t}\n\n\tnotifyUserInThisInstance<P extends string, E extends string>(\n\t\tuserId: P,\n\t\teventName: E extends ExtractNotifyUserEventName<'notify-user', P> ? E : never,\n\t\t...args: E extends ExtractNotifyUserEventName<'notify-user', P> ? StreamerCallbackArgs<'notify-user', `${P}/${E}`> : never\n\t): void {\n\t\treturn this.streamUser.emitWithoutBroadcast(`${userId}/${eventName}`, ...args);\n\t}\n\n\tsendPresence(uid: string, ...args: [username: string, status?: 0 | 1 | 2 | 3, statusText?: string]): void {\n\t\temit(uid, [args]);\n\t\treturn this.streamPresence.emitWithoutBroadcast(uid, args);\n\t}\n\n\tprogressUpdated(progress: { rate: number } | ImporterProgress): void {\n\t\tthis.streamImporters.emit('progress', progress);\n\t}\n}\n\ntype ExtractNotifyUserEventName<\n\tT extends StreamNames,\n\tP extends string,\n\tE extends StreamKeys<T> = StreamKeys<T>,\n> = E extends `${infer X}/${infer I}` ? (P extends X ? I : never) : never;\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      NotificationsModule: () => NotificationsModule\n    });\n    let Authorization, VideoConf;\n    module.link(\"@rocket.chat/core-services\", {\n      Authorization(v) {\n        Authorization = v;\n      },\n      VideoConf(v) {\n        VideoConf = v;\n      }\n    }, 0);\n    let Rooms, Subscriptions, Users, Settings;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      Settings(v) {\n        Settings = v;\n      }\n    }, 1);\n    let emit, StreamPresence;\n    module.link(\"../../../app/notifications/server/lib/Presence\", {\n      emit(v) {\n        emit = v;\n      },\n      StreamPresence(v) {\n        StreamPresence = v;\n      }\n    }, 2);\n    let SystemLogger;\n    module.link(\"../../lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class NotificationsModule {\n      constructor(Streamer) {\n        this.Streamer = void 0;\n        this.streamLogged = void 0;\n        this.streamAll = void 0;\n        this.streamRoom = void 0;\n        this.streamRoomUsers = void 0;\n        this.streamUser = void 0;\n        this.streamRoomMessage = void 0;\n        this.streamImporters = void 0;\n        this.streamRoles = void 0;\n        this.streamApps = void 0;\n        this.streamAppsEngine = void 0;\n        this.streamCannedResponses = void 0;\n        this.streamIntegrationHistory = void 0;\n        this.streamLivechatRoom = void 0;\n        this.streamLivechatQueueData = void 0;\n        this.streamStdout = void 0;\n        this.streamRoomData = void 0;\n        this.streamLocal = void 0;\n        this.streamPresence = void 0;\n        this.Streamer = Streamer;\n        this.streamAll = new this.Streamer('notify-all');\n        this.streamLogged = new this.Streamer('notify-logged');\n        this.streamRoom = new this.Streamer('notify-room');\n        this.streamRoomUsers = new this.Streamer('notify-room-users');\n        this.streamImporters = new this.Streamer('importers', {\n          retransmit: false\n        });\n        this.streamRoles = new this.Streamer('roles');\n        this.streamApps = new this.Streamer('apps', {\n          retransmit: false\n        });\n        this.streamAppsEngine = new this.Streamer('apps-engine', {\n          retransmit: false\n        });\n        this.streamCannedResponses = new this.Streamer('canned-responses');\n        this.streamIntegrationHistory = new this.Streamer('integrationHistory');\n        this.streamLivechatRoom = new this.Streamer('livechat-room');\n        this.streamLivechatQueueData = new this.Streamer('livechat-inquiry-queue-observer');\n        this.streamStdout = new this.Streamer('stdout');\n        this.streamRoomData = new this.Streamer('room-data');\n        this.streamPresence = StreamPresence.getInstance(Streamer, 'user-presence');\n        this.streamRoomMessage = new this.Streamer('room-messages');\n        this.streamRoomMessage.on('_afterPublish', async (streamer, publication, eventName) => {\n          const {\n            userId\n          } = publication._session;\n          if (!userId) {\n            return;\n          }\n          const userEvent = (clientAction, _ref) => {\n            let {\n              rid\n            } = _ref;\n            switch (clientAction) {\n              case 'removed':\n                streamer.removeListener(userId, userEvent);\n                const sub = [...streamer.subscriptions].find(sub => sub.eventName === rid && sub.subscription.userId === userId);\n                sub && streamer.removeSubscription(sub, eventName);\n                break;\n            }\n          };\n          streamer.on(userId, userEvent);\n          publication.onStop(() => streamer.removeListener(userId, userEvent));\n        });\n        this.streamUser = new this.Streamer('notify-user');\n        this.streamLocal = new this.Streamer('local');\n      }\n      configure() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        this.streamRoomMessage.allowWrite('none');\n        this.streamRoomMessage.allowRead(async function (eventName, extraData) {\n          const room = await Rooms.findOneById(eventName);\n          if (!room) {\n            return false;\n          }\n          const canAccess = await Authorization.canAccessRoom(room, {\n            _id: this.userId || ''\n          }, extraData);\n          if (!canAccess) {\n            // verify if can preview messages from public channels\n            if (room.t === 'c' && this.userId) {\n              return Authorization.hasPermission(this.userId, 'preview-c-room');\n            }\n            return false;\n          }\n          return true;\n        });\n        this.streamRoomMessage.allowRead('__my_messages__', 'all');\n        this.streamRoomMessage.allowEmit('__my_messages__', async function (_eventName, _ref2) {\n          let {\n            rid\n          } = _ref2;\n          if (!this.userId) {\n            return false;\n          }\n          try {\n            const room = await Rooms.findOneById(rid);\n            if (!room) {\n              return false;\n            }\n            const canAccess = await Authorization.canAccessRoom(room, {\n              _id: this.userId\n            });\n            if (!canAccess) {\n              return false;\n            }\n            const roomParticipant = await Subscriptions.countByRoomIdAndUserId(room._id, this.userId);\n            return {\n              roomParticipant: roomParticipant > 0,\n              roomType: room.t,\n              roomName: room.name\n            };\n          } catch (error) {\n            /* error*/\n            return false;\n          }\n        });\n        this.streamAll.allowWrite('none');\n        this.streamAll.allowRead('all');\n        this.streamLogged.allowRead('private-settings-changed', async function () {\n          if (this.userId == null) {\n            return false;\n          }\n          return Authorization.hasAtLeastOnePermission(this.userId, ['view-privileged-setting', 'edit-privileged-setting', 'manage-selected-settings']);\n        });\n        this.streamLogged.allowWrite('none');\n        this.streamLogged.allowRead('logged');\n        this.streamRoom.allowRead(async function (eventName, extraData) {\n          const [rid, e] = eventName.split('/');\n          if (e === 'webrtc') {\n            return true;\n          }\n          const room = await Rooms.findOneById(rid, {\n            projection: {\n              't': 1,\n              'v.token': 1\n            }\n          });\n          if (!room) {\n            return false;\n          }\n          // typing from livechat widget\n          if (extraData !== null && extraData !== void 0 && extraData.token) {\n            // TODO improve this to make a query 'v.token'\n            const room = await Rooms.findOneById(rid, {\n              projection: {\n                't': 1,\n                'v.token': 1\n              }\n            });\n            return !!room && room.t === 'l' && room.v.token === extraData.token;\n          }\n          if (!this.userId) {\n            return false;\n          }\n          const canAccess = await Authorization.canAccessRoomId(room._id, this.userId);\n          return canAccess;\n        });\n        async function canType(_ref3) {\n          let {\n            userId,\n            username,\n            extraData,\n            rid\n          } = _ref3;\n          try {\n            // typing from livechat widget\n            if (extraData !== null && extraData !== void 0 && extraData.token) {\n              // TODO improve this to make a query 'v.token'\n              const room = await Rooms.findOneById(rid, {\n                projection: {\n                  't': 1,\n                  'v.token': 1\n                }\n              });\n              return !!room && room.t === 'l' && room.v.token === extraData.token;\n            }\n            if (!userId) {\n              return false;\n            }\n            // TODO consider using something to cache settings\n            const key = (await Settings.getValueById('UI_Use_Real_Name')) ? 'name' : 'username';\n            const user = await Users.findOneById(userId, {\n              projection: {\n                [key]: 1\n              }\n            });\n            if (!user) {\n              return false;\n            }\n            return user[key] === username;\n          } catch (e) {\n            SystemLogger.error(e);\n            return false;\n          }\n        }\n        this.streamRoom.allowWrite(async function (eventName, username, _activity, extraData) {\n          var _this$userId;\n          const [rid, e] = eventName.split('/');\n          // TODO should this use WEB_RTC_EVENTS enum?\n          if (e === 'webrtc') {\n            return true;\n          }\n          if (e !== 'user-activity') {\n            return false;\n          }\n          if (!(await canType({\n            extraData,\n            rid,\n            username,\n            userId: (_this$userId = this.userId) !== null && _this$userId !== void 0 ? _this$userId : undefined\n          }))) {\n            return false;\n          }\n          return true;\n        });\n        this.streamRoomUsers.allowRead('none');\n        this.streamRoomUsers.allowWrite(async function (eventName) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          const [roomId, e] = eventName.split('/');\n          if (!this.userId) {\n            const room = await Rooms.findOneById(roomId, {\n              projection: {\n                't': 1,\n                'servedBy._id': 1\n              }\n            });\n            if (room && room.t === 'l' && e === 'webrtc' && room.servedBy) {\n              self.notifyUser(room.servedBy._id, e, ...args);\n              return false;\n            }\n          } else if ((await Subscriptions.countByRoomIdAndUserId(roomId, this.userId)) > 0) {\n            const livechatSubscriptions = await Subscriptions.findByLivechatRoomIdAndNotUserId(roomId, this.userId, {\n              projection: {\n                'v._id': 1,\n                '_id': 0\n              }\n            }).toArray();\n            if (livechatSubscriptions && e === 'webrtc') {\n              livechatSubscriptions.forEach(subscription => subscription.v && self.notifyUser(subscription.v._id, e, ...args));\n              return false;\n            }\n            const subscriptions = await Subscriptions.findByRoomIdAndNotUserId(roomId, this.userId, {\n              projection: {\n                'u._id': 1,\n                '_id': 0\n              }\n            }).toArray();\n            subscriptions.forEach(subscription => self.notifyUser(subscription.u._id, e, ...args));\n          }\n          return false;\n        });\n        this.streamUser.allowWrite(async function (eventName, data) {\n          const [, e] = eventName.split('/');\n          if (e === 'otr' && (data === 'handshake' || data === 'acknowledge')) {\n            const isEnable = await Settings.getValueById('OTR_Enable');\n            return Boolean(this.userId) && (isEnable === 'true' || isEnable === true);\n          }\n          if (e === 'webrtc') {\n            return true;\n          }\n          if (e === 'video-conference') {\n            if (!this.userId || !data || typeof data !== 'object') {\n              return false;\n            }\n            const {\n              action: videoAction,\n              params\n            } = data;\n            if (!videoAction || typeof videoAction !== 'string' || !params || typeof params !== 'object') {\n              return false;\n            }\n            const callId = 'callId' in params && typeof params.callId === 'string' ? params.callId : '';\n            const uid = 'uid' in params && typeof params.uid === 'string' ? params.uid : '';\n            const rid = 'rid' in params && typeof params.rid === 'string' ? params.rid : '';\n            return VideoConf.validateAction(videoAction, this.userId, {\n              callId,\n              uid,\n              rid\n            });\n          }\n          return Boolean(this.userId);\n        });\n        this.streamUser.allowRead(async function (eventName) {\n          const [userId, e] = eventName.split('/');\n          if (e === 'otr') {\n            const isEnable = await Settings.getValueById('OTR_Enable');\n            return Boolean(this.userId) && this.userId === userId && (isEnable === 'true' || isEnable === true);\n          }\n          if (e === 'webrtc') {\n            return true;\n          }\n          return Boolean(this.userId) && this.userId === userId;\n        });\n        this.streamImporters.allowRead('all');\n        this.streamImporters.allowEmit('all');\n        this.streamImporters.allowWrite('none');\n        this.streamApps.serverOnly = true;\n        this.streamApps.allowRead('all');\n        this.streamApps.allowEmit('all');\n        this.streamApps.allowWrite('none');\n        this.streamAppsEngine.serverOnly = true;\n        this.streamAppsEngine.allowRead('none');\n        this.streamAppsEngine.allowEmit('all');\n        this.streamAppsEngine.allowWrite('none');\n        this.streamCannedResponses.allowWrite('none');\n        this.streamCannedResponses.allowRead(async function () {\n          return !!this.userId && !!(await Settings.getValueById('Canned_Responses_Enable')) && Authorization.hasPermission(this.userId, 'view-canned-responses');\n        });\n        this.streamIntegrationHistory.allowWrite('none');\n        this.streamIntegrationHistory.allowRead(async function () {\n          if (!this.userId) {\n            return false;\n          }\n          return Authorization.hasAtLeastOnePermission(this.userId, ['manage-outgoing-integrations', 'manage-own-outgoing-integrations']);\n        });\n        this.streamLivechatRoom.allowRead(async (roomId, extraData) => {\n          const room = await Rooms.findOneById(roomId, {\n            projection: {\n              _id: 0,\n              t: 1,\n              v: 1\n            }\n          });\n          if (!room) {\n            console.warn(\"Invalid eventName: \\\"\".concat(roomId, \"\\\"\"));\n            return false;\n          }\n          if (room.t === 'l' && extraData !== null && extraData !== void 0 && extraData.visitorToken && room.v.token === extraData.visitorToken) {\n            return true;\n          }\n          return false;\n        });\n        this.streamLivechatQueueData.allowWrite('none');\n        this.streamLivechatQueueData.allowRead(async function () {\n          return this.userId ? Authorization.hasPermission(this.userId, 'view-l-room') : false;\n        });\n        this.streamStdout.allowWrite('none');\n        this.streamStdout.allowRead(async function () {\n          if (!this.userId) {\n            return false;\n          }\n          return Authorization.hasPermission(this.userId, 'view-logs');\n        });\n        this.streamRoomData.allowWrite('none');\n        this.streamRoomData.allowRead(async function (rid) {\n          if (!this.userId) {\n            return false;\n          }\n          try {\n            const room = await Rooms.findOneById(rid);\n            if (!room) {\n              return false;\n            }\n            const canAccess = await Authorization.canAccessRoom(room, {\n              _id: this.userId\n            });\n            if (!canAccess) {\n              return false;\n            }\n            return true;\n          } catch (error) {\n            return false;\n          }\n        });\n        this.streamRoles.allowWrite('none');\n        this.streamRoles.allowRead('logged');\n        this.streamUser.on('_afterPublish', async (streamer, publication, eventName) => {\n          const {\n            userId\n          } = publication._session;\n          if (!userId) {\n            return;\n          }\n          if (/rooms-changed/.test(eventName)) {\n            // TODO: change this to serialize only once\n            const roomEvent = function () {\n              var _publication$_session;\n              for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n              }\n              // TODO if receive a removed event could do => streamer.removeListener(rid, roomEvent);\n              const payload = streamer.changedPayload(streamer.subscriptionName, 'id', {\n                eventName: \"\".concat(userId, \"/rooms-changed\"),\n                args\n              });\n              payload && ((_publication$_session = publication._session.socket) === null || _publication$_session === void 0 ? void 0 : _publication$_session.send(payload));\n            };\n            const subscriptions = await Subscriptions.find({\n              'u._id': userId\n            }, {\n              projection: {\n                rid: 1\n              }\n            }).toArray();\n            subscriptions.forEach(_ref4 => {\n              let {\n                rid\n              } = _ref4;\n              streamer.on(rid, roomEvent);\n            });\n            const userEvent = async function (clientAction) {\n              let {\n                rid\n              } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n              if (!rid) {\n                return;\n              }\n              switch (clientAction) {\n                case 'inserted':\n                  subscriptions.push({\n                    rid\n                  });\n                  streamer.on(rid, roomEvent);\n                  // after a subscription is added need to emit the room again\n                  roomEvent('inserted', await Rooms.findOneById(rid));\n                  break;\n                case 'removed':\n                  streamer.removeListener(rid, roomEvent);\n                  break;\n              }\n            };\n            streamer.on(userId, userEvent);\n            publication.onStop(() => {\n              streamer.removeListener(userId, userEvent);\n              subscriptions.forEach(_ref5 => {\n                let {\n                  rid\n                } = _ref5;\n                return streamer.removeListener(rid, roomEvent);\n              });\n            });\n          }\n        });\n        this.streamLocal.serverOnly = true;\n        this.streamLocal.allowRead('none');\n        this.streamLocal.allowEmit('all');\n        this.streamLocal.allowWrite('none');\n        this.streamPresence.allowRead('logged');\n        this.streamPresence.allowWrite('none');\n      }\n      // notifyAll<E extends StreamKeys<'notify-all'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-all', E>): void {\n      // \treturn this.streamAll.emit(eventName, ...args);\n      // }\n      notifyLogged(eventName) {\n        for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          args[_key3 - 1] = arguments[_key3];\n        }\n        return this.streamLogged.emit(eventName, ...args);\n      }\n      notifyRoom(room, eventName) {\n        for (var _len4 = arguments.length, args = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n          args[_key4 - 2] = arguments[_key4];\n        }\n        return this.streamRoom.emit(\"\".concat(room, \"/\").concat(eventName), ...args);\n      }\n      notifyUser(userId, eventName) {\n        for (var _len5 = arguments.length, args = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {\n          args[_key5 - 2] = arguments[_key5];\n        }\n        return this.streamUser.emit(\"\".concat(userId, \"/\").concat(eventName), ...args);\n      }\n      notifyAllInThisInstance(eventName) {\n        for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n          args[_key6 - 1] = arguments[_key6];\n        }\n        return this.streamAll.emitWithoutBroadcast(eventName, ...args);\n      }\n      notifyLoggedInThisInstance(eventName) {\n        for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n          args[_key7 - 1] = arguments[_key7];\n        }\n        return this.streamLogged.emitWithoutBroadcast(eventName, ...args);\n      }\n      notifyRoomInThisInstance(room, eventName) {\n        for (var _len8 = arguments.length, args = new Array(_len8 > 2 ? _len8 - 2 : 0), _key8 = 2; _key8 < _len8; _key8++) {\n          args[_key8 - 2] = arguments[_key8];\n        }\n        return this.streamRoom.emitWithoutBroadcast(\"\".concat(room, \"/\").concat(eventName), ...args);\n      }\n      notifyUserInThisInstance(userId, eventName) {\n        for (var _len9 = arguments.length, args = new Array(_len9 > 2 ? _len9 - 2 : 0), _key9 = 2; _key9 < _len9; _key9++) {\n          args[_key9 - 2] = arguments[_key9];\n        }\n        return this.streamUser.emitWithoutBroadcast(\"\".concat(userId, \"/\").concat(eventName), ...args);\n      }\n      sendPresence(uid) {\n        for (var _len10 = arguments.length, args = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {\n          args[_key10 - 1] = arguments[_key10];\n        }\n        emit(uid, [args]);\n        return this.streamPresence.emitWithoutBroadcast(uid, args);\n      }\n      progressUpdated(progress) {\n        this.streamImporters.emit('progress', progress);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","NotificationsModule","Authorization","VideoConf","link","v","Rooms","Subscriptions","Users","Settings","emit","StreamPresence","SystemLogger","__reifyWaitForDeps__","constructor","Streamer","streamLogged","streamAll","streamRoom","streamRoomUsers","streamUser","streamRoomMessage","streamImporters","streamRoles","streamApps","streamAppsEngine","streamCannedResponses","streamIntegrationHistory","streamLivechatRoom","streamLivechatQueueData","streamStdout","streamRoomData","streamLocal","streamPresence","retransmit","getInstance","on","streamer","publication","eventName","userId","_session","userEvent","clientAction","_ref","rid","removeListener","sub","subscriptions","find","subscription","removeSubscription","onStop","configure","self","allowWrite","allowRead","extraData","room","findOneById","canAccess","canAccessRoom","_id","t","hasPermission","allowEmit","_eventName","_ref2","roomParticipant","countByRoomIdAndUserId","roomType","roomName","name","error","hasAtLeastOnePermission","e","split","projection","token","canAccessRoomId","canType","_ref3","username","key","getValueById","user","_activity","_this$userId","undefined","_len","arguments","length","args","Array","_key","roomId","servedBy","notifyUser","livechatSubscriptions","findByLivechatRoomIdAndNotUserId","toArray","forEach","findByRoomIdAndNotUserId","u","data","isEnable","Boolean","action","videoAction","params","callId","uid","validateAction","serverOnly","console","warn","concat","visitorToken","test","roomEvent","_publication$_session","_len2","_key2","payload","changedPayload","subscriptionName","socket","send","_ref4","push","_ref5","notifyLogged","_len3","_key3","notifyRoom","_len4","_key4","_len5","_key5","notifyAllInThisInstance","_len6","_key6","emitWithoutBroadcast","notifyLoggedInThisInstance","_len7","_key7","notifyRoomInThisInstance","_len8","_key8","notifyUserInThisInstance","_len9","_key9","sendPresence","_len10","_key10","progressUpdated","progress","__reify_async_result__","_reifyError","async"],"sources":["server/modules/notifications/notifications.module.ts"],"sourcesContent":["import { Authorization, VideoConf } from '@rocket.chat/core-services';\nimport type { ISubscription, IOmnichannelRoom, IUser } from '@rocket.chat/core-typings';\nimport type { StreamerCallbackArgs, StreamKeys, StreamNames } from '@rocket.chat/ddp-client';\nimport { Rooms, Subscriptions, Users, Settings } from '@rocket.chat/models';\nimport type { IStreamer, IStreamerConstructor, IPublication } from 'meteor/rocketchat:streamer';\n\nimport type { ImporterProgress } from '../../../app/importer/server/classes/ImporterProgress';\nimport { emit, StreamPresence } from '../../../app/notifications/server/lib/Presence';\nimport { SystemLogger } from '../../lib/logger/system';\n\nexport class NotificationsModule {\n\tpublic readonly streamLogged: IStreamer<'notify-logged'>;\n\n\tpublic readonly streamAll: IStreamer<'notify-all'>;\n\n\tpublic readonly streamRoom: IStreamer<'notify-room'>;\n\n\tpublic readonly streamRoomUsers: IStreamer<'notify-room-users'>;\n\n\tpublic readonly streamUser: IStreamer<'notify-user'> & {\n\t\ton(event: string, fn: (...data: any[]) => void): void;\n\t};\n\n\tpublic readonly streamRoomMessage: IStreamer<'room-messages'>;\n\n\tpublic readonly streamImporters: IStreamer<'importers'>;\n\n\tpublic readonly streamRoles: IStreamer<'roles'>;\n\n\tpublic readonly streamApps: IStreamer<'apps'>;\n\n\tpublic readonly streamAppsEngine: IStreamer<'apps-engine'>;\n\n\tpublic readonly streamCannedResponses: IStreamer<'canned-responses'>;\n\n\tpublic readonly streamIntegrationHistory: IStreamer<'integrationHistory'>;\n\n\tpublic readonly streamLivechatRoom: IStreamer<'livechat-room'>;\n\n\tpublic readonly streamLivechatQueueData: IStreamer<'livechat-inquiry-queue-observer'>;\n\n\tpublic readonly streamStdout: IStreamer<'stdout'>;\n\n\tpublic readonly streamRoomData: IStreamer<'room-data'>;\n\n\tpublic readonly streamLocal: IStreamer<'local'>;\n\n\tpublic readonly streamPresence: IStreamer<'user-presence'>;\n\n\tconstructor(private Streamer: IStreamerConstructor) {\n\t\tthis.streamAll = new this.Streamer('notify-all');\n\t\tthis.streamLogged = new this.Streamer('notify-logged');\n\t\tthis.streamRoom = new this.Streamer('notify-room');\n\t\tthis.streamRoomUsers = new this.Streamer('notify-room-users');\n\t\tthis.streamImporters = new this.Streamer('importers', { retransmit: false });\n\t\tthis.streamRoles = new this.Streamer('roles');\n\t\tthis.streamApps = new this.Streamer('apps', { retransmit: false });\n\t\tthis.streamAppsEngine = new this.Streamer('apps-engine', { retransmit: false });\n\t\tthis.streamCannedResponses = new this.Streamer('canned-responses');\n\t\tthis.streamIntegrationHistory = new this.Streamer('integrationHistory');\n\t\tthis.streamLivechatRoom = new this.Streamer('livechat-room');\n\t\tthis.streamLivechatQueueData = new this.Streamer('livechat-inquiry-queue-observer');\n\t\tthis.streamStdout = new this.Streamer('stdout');\n\t\tthis.streamRoomData = new this.Streamer('room-data');\n\t\tthis.streamPresence = StreamPresence.getInstance(Streamer, 'user-presence');\n\t\tthis.streamRoomMessage = new this.Streamer('room-messages');\n\n\t\tthis.streamRoomMessage.on('_afterPublish', async (streamer, publication: IPublication, eventName: string): Promise<void> => {\n\t\t\tconst { userId } = publication._session;\n\t\t\tif (!userId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst userEvent = (clientAction: string, { rid }: { rid: string }): void => {\n\t\t\t\tswitch (clientAction) {\n\t\t\t\t\tcase 'removed':\n\t\t\t\t\t\tstreamer.removeListener(userId, userEvent);\n\t\t\t\t\t\tconst sub = [...streamer.subscriptions].find((sub) => sub.eventName === rid && sub.subscription.userId === userId);\n\t\t\t\t\t\tsub && streamer.removeSubscription(sub, eventName);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tstreamer.on(userId, userEvent);\n\n\t\t\tpublication.onStop(() => streamer.removeListener(userId, userEvent));\n\t\t});\n\n\t\tthis.streamUser = new this.Streamer('notify-user');\n\t\tthis.streamLocal = new this.Streamer('local');\n\t}\n\n\tconfigure(): void {\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\n\t\tthis.streamRoomMessage.allowWrite('none');\n\t\tthis.streamRoomMessage.allowRead(async function (eventName, extraData) {\n\t\t\tconst room = await Rooms.findOneById(eventName);\n\t\t\tif (!room) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst canAccess = await Authorization.canAccessRoom(room, { _id: this.userId || '' }, extraData);\n\t\t\tif (!canAccess) {\n\t\t\t\t// verify if can preview messages from public channels\n\t\t\t\tif (room.t === 'c' && this.userId) {\n\t\t\t\t\treturn Authorization.hasPermission(this.userId, 'preview-c-room');\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tthis.streamRoomMessage.allowRead('__my_messages__', 'all');\n\t\tthis.streamRoomMessage.allowEmit('__my_messages__', async function (_eventName, { rid }) {\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst room = await Rooms.findOneById(rid);\n\t\t\t\tif (!room) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst canAccess = await Authorization.canAccessRoom(room, { _id: this.userId });\n\t\t\t\tif (!canAccess) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst roomParticipant = await Subscriptions.countByRoomIdAndUserId(room._id, this.userId);\n\n\t\t\t\treturn {\n\t\t\t\t\troomParticipant: roomParticipant > 0,\n\t\t\t\t\troomType: room.t,\n\t\t\t\t\troomName: room.name,\n\t\t\t\t};\n\t\t\t} catch (error) {\n\t\t\t\t/* error*/\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tthis.streamAll.allowWrite('none');\n\t\tthis.streamAll.allowRead('all');\n\t\tthis.streamLogged.allowRead('private-settings-changed', async function () {\n\t\t\tif (this.userId == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Authorization.hasAtLeastOnePermission(this.userId, [\n\t\t\t\t'view-privileged-setting',\n\t\t\t\t'edit-privileged-setting',\n\t\t\t\t'manage-selected-settings',\n\t\t\t]);\n\t\t});\n\n\t\tthis.streamLogged.allowWrite('none');\n\t\tthis.streamLogged.allowRead('logged');\n\n\t\tthis.streamRoom.allowRead(async function (eventName, extraData): Promise<boolean> {\n\t\t\tconst [rid, e] = eventName.split('/');\n\n\t\t\tif (e === 'webrtc') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst room = await Rooms.findOneById<Pick<IOmnichannelRoom, 't' | 'v' | '_id'>>(rid, {\n\t\t\t\tprojection: { 't': 1, 'v.token': 1 },\n\t\t\t});\n\n\t\t\tif (!room) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// typing from livechat widget\n\t\t\tif (extraData?.token) {\n\t\t\t\t// TODO improve this to make a query 'v.token'\n\t\t\t\tconst room = await Rooms.findOneById<Pick<IOmnichannelRoom, 't' | 'v'>>(rid, {\n\t\t\t\t\tprojection: { 't': 1, 'v.token': 1 },\n\t\t\t\t});\n\t\t\t\treturn !!room && room.t === 'l' && room.v.token === extraData.token;\n\t\t\t}\n\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst canAccess = await Authorization.canAccessRoomId(room._id, this.userId);\n\n\t\t\treturn canAccess;\n\t\t});\n\n\t\tasync function canType({\n\t\t\tuserId,\n\t\t\tusername,\n\t\t\textraData,\n\t\t\trid,\n\t\t}: {\n\t\t\tuserId?: string;\n\t\t\tusername: string;\n\t\t\textraData?: { token: string };\n\t\t\trid: string;\n\t\t}): Promise<boolean> {\n\t\t\ttry {\n\t\t\t\t// typing from livechat widget\n\t\t\t\tif (extraData?.token) {\n\t\t\t\t\t// TODO improve this to make a query 'v.token'\n\t\t\t\t\tconst room = await Rooms.findOneById<Pick<IOmnichannelRoom, 't' | 'v'>>(rid, {\n\t\t\t\t\t\tprojection: { 't': 1, 'v.token': 1 },\n\t\t\t\t\t});\n\t\t\t\t\treturn !!room && room.t === 'l' && room.v.token === extraData.token;\n\t\t\t\t}\n\n\t\t\t\tif (!userId) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// TODO consider using something to cache settings\n\t\t\t\tconst key = (await Settings.getValueById('UI_Use_Real_Name')) ? 'name' : 'username';\n\n\t\t\t\tconst user = await Users.findOneById<Pick<IUser, 'name' | 'username'>>(userId, {\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\t[key]: 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tif (!user) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn user[key] === username;\n\t\t\t} catch (e) {\n\t\t\t\tSystemLogger.error(e);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tthis.streamRoom.allowWrite(async function (eventName, username, _activity, extraData): Promise<boolean> {\n\t\t\tconst [rid, e] = eventName.split('/');\n\n\t\t\t// TODO should this use WEB_RTC_EVENTS enum?\n\t\t\tif (e === 'webrtc') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (e !== 'user-activity') {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!(await canType({ extraData, rid, username, userId: this.userId ?? undefined }))) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tthis.streamRoomUsers.allowRead('none');\n\t\tthis.streamRoomUsers.allowWrite(async function (eventName, ...args: any[]) {\n\t\t\tconst [roomId, e] = eventName.split('/');\n\t\t\tif (!this.userId) {\n\t\t\t\tconst room = await Rooms.findOneById<IOmnichannelRoom>(roomId, {\n\t\t\t\t\tprojection: { 't': 1, 'servedBy._id': 1 },\n\t\t\t\t});\n\t\t\t\tif (room && room.t === 'l' && e === 'webrtc' && room.servedBy) {\n\t\t\t\t\tself.notifyUser(room.servedBy._id, e, ...args);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if ((await Subscriptions.countByRoomIdAndUserId(roomId, this.userId)) > 0) {\n\t\t\t\tconst livechatSubscriptions: ISubscription[] = await Subscriptions.findByLivechatRoomIdAndNotUserId(roomId, this.userId, {\n\t\t\t\t\tprojection: { 'v._id': 1, '_id': 0 },\n\t\t\t\t}).toArray();\n\t\t\t\tif (livechatSubscriptions && e === 'webrtc') {\n\t\t\t\t\tlivechatSubscriptions.forEach((subscription) => subscription.v && self.notifyUser(subscription.v._id, e, ...args));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tconst subscriptions: ISubscription[] = await Subscriptions.findByRoomIdAndNotUserId(roomId, this.userId, {\n\t\t\t\t\tprojection: { 'u._id': 1, '_id': 0 },\n\t\t\t\t}).toArray();\n\n\t\t\t\tsubscriptions.forEach((subscription) => self.notifyUser(subscription.u._id, e, ...args));\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tthis.streamUser.allowWrite(async function (eventName, data: unknown) {\n\t\t\tconst [, e] = eventName.split('/');\n\t\t\tif (e === 'otr' && (data === 'handshake' || data === 'acknowledge')) {\n\t\t\t\tconst isEnable = await Settings.getValueById('OTR_Enable');\n\t\t\t\treturn Boolean(this.userId) && (isEnable === 'true' || isEnable === true);\n\t\t\t}\n\t\t\tif (e === 'webrtc') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (e === 'video-conference') {\n\t\t\t\tif (!this.userId || !data || typeof data !== 'object') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst { action: videoAction, params } = data as {\n\t\t\t\t\taction: string | undefined;\n\t\t\t\t\tparams: { callId?: string; uid?: string; rid?: string };\n\t\t\t\t};\n\n\t\t\t\tif (!videoAction || typeof videoAction !== 'string' || !params || typeof params !== 'object') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst callId = 'callId' in params && typeof params.callId === 'string' ? params.callId : '';\n\t\t\t\tconst uid = 'uid' in params && typeof params.uid === 'string' ? params.uid : '';\n\t\t\t\tconst rid = 'rid' in params && typeof params.rid === 'string' ? params.rid : '';\n\n\t\t\t\treturn VideoConf.validateAction(videoAction, this.userId, {\n\t\t\t\t\tcallId,\n\t\t\t\t\tuid,\n\t\t\t\t\trid,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Boolean(this.userId);\n\t\t});\n\t\tthis.streamUser.allowRead(async function (eventName) {\n\t\t\tconst [userId, e] = eventName.split('/');\n\n\t\t\tif (e === 'otr') {\n\t\t\t\tconst isEnable = await Settings.getValueById('OTR_Enable');\n\t\t\t\treturn Boolean(this.userId) && this.userId === userId && (isEnable === 'true' || isEnable === true);\n\t\t\t}\n\t\t\tif (e === 'webrtc') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn Boolean(this.userId) && this.userId === userId;\n\t\t});\n\n\t\tthis.streamImporters.allowRead('all');\n\t\tthis.streamImporters.allowEmit('all');\n\t\tthis.streamImporters.allowWrite('none');\n\n\t\tthis.streamApps.serverOnly = true;\n\t\tthis.streamApps.allowRead('all');\n\t\tthis.streamApps.allowEmit('all');\n\t\tthis.streamApps.allowWrite('none');\n\n\t\tthis.streamAppsEngine.serverOnly = true;\n\t\tthis.streamAppsEngine.allowRead('none');\n\t\tthis.streamAppsEngine.allowEmit('all');\n\t\tthis.streamAppsEngine.allowWrite('none');\n\n\t\tthis.streamCannedResponses.allowWrite('none');\n\t\tthis.streamCannedResponses.allowRead(async function () {\n\t\t\treturn (\n\t\t\t\t!!this.userId &&\n\t\t\t\t!!(await Settings.getValueById('Canned_Responses_Enable')) &&\n\t\t\t\tAuthorization.hasPermission(this.userId, 'view-canned-responses')\n\t\t\t);\n\t\t});\n\n\t\tthis.streamIntegrationHistory.allowWrite('none');\n\t\tthis.streamIntegrationHistory.allowRead(async function () {\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Authorization.hasAtLeastOnePermission(this.userId, ['manage-outgoing-integrations', 'manage-own-outgoing-integrations']);\n\t\t});\n\n\t\tthis.streamLivechatRoom.allowRead(async (roomId, extraData) => {\n\t\t\tconst room = await Rooms.findOneById<Pick<IOmnichannelRoom, 't' | 'v'>>(roomId, {\n\t\t\t\tprojection: { _id: 0, t: 1, v: 1 },\n\t\t\t});\n\n\t\t\tif (!room) {\n\t\t\t\tconsole.warn(`Invalid eventName: \"${roomId}\"`);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (room.t === 'l' && extraData?.visitorToken && room.v.token === extraData.visitorToken) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\n\t\tthis.streamLivechatQueueData.allowWrite('none');\n\t\tthis.streamLivechatQueueData.allowRead(async function () {\n\t\t\treturn this.userId ? Authorization.hasPermission(this.userId, 'view-l-room') : false;\n\t\t});\n\n\t\tthis.streamStdout.allowWrite('none');\n\t\tthis.streamStdout.allowRead(async function () {\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn Authorization.hasPermission(this.userId, 'view-logs');\n\t\t});\n\n\t\tthis.streamRoomData.allowWrite('none');\n\t\tthis.streamRoomData.allowRead(async function (rid) {\n\t\t\tif (!this.userId) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst room = await Rooms.findOneById(rid);\n\t\t\t\tif (!room) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst canAccess = await Authorization.canAccessRoom(room, { _id: this.userId });\n\t\t\t\tif (!canAccess) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t} catch (error) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\tthis.streamRoles.allowWrite('none');\n\t\tthis.streamRoles.allowRead('logged');\n\n\t\tthis.streamUser.on('_afterPublish', async (streamer, publication: IPublication, eventName: string): Promise<void> => {\n\t\t\tconst { userId } = publication._session;\n\t\t\tif (!userId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/rooms-changed/.test(eventName)) {\n\t\t\t\t// TODO: change this to serialize only once\n\t\t\t\tconst roomEvent = (...args: any[]): void => {\n\t\t\t\t\t// TODO if receive a removed event could do => streamer.removeListener(rid, roomEvent);\n\t\t\t\t\tconst payload = streamer.changedPayload(streamer.subscriptionName, 'id', {\n\t\t\t\t\t\teventName: `${userId}/rooms-changed`,\n\t\t\t\t\t\targs,\n\t\t\t\t\t});\n\n\t\t\t\t\tpayload && publication._session.socket?.send(payload);\n\t\t\t\t};\n\n\t\t\t\tconst subscriptions = await Subscriptions.find<Pick<ISubscription, 'rid'>>(\n\t\t\t\t\t{ 'u._id': userId },\n\t\t\t\t\t{ projection: { rid: 1 } },\n\t\t\t\t).toArray();\n\n\t\t\t\tsubscriptions.forEach(({ rid }) => {\n\t\t\t\t\tstreamer.on(rid, roomEvent);\n\t\t\t\t});\n\n\t\t\t\tconst userEvent = async (clientAction: string, { rid }: Partial<ISubscription> = {}): Promise<void> => {\n\t\t\t\t\tif (!rid) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (clientAction) {\n\t\t\t\t\t\tcase 'inserted':\n\t\t\t\t\t\t\tsubscriptions.push({ rid });\n\t\t\t\t\t\t\tstreamer.on(rid, roomEvent);\n\n\t\t\t\t\t\t\t// after a subscription is added need to emit the room again\n\t\t\t\t\t\t\troomEvent('inserted', await Rooms.findOneById(rid));\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'removed':\n\t\t\t\t\t\t\tstreamer.removeListener(rid, roomEvent);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tstreamer.on(userId, userEvent);\n\n\t\t\t\tpublication.onStop(() => {\n\t\t\t\t\tstreamer.removeListener(userId, userEvent);\n\t\t\t\t\tsubscriptions.forEach(({ rid }) => streamer.removeListener(rid, roomEvent));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis.streamLocal.serverOnly = true;\n\t\tthis.streamLocal.allowRead('none');\n\t\tthis.streamLocal.allowEmit('all');\n\t\tthis.streamLocal.allowWrite('none');\n\n\t\tthis.streamPresence.allowRead('logged');\n\t\tthis.streamPresence.allowWrite('none');\n\t}\n\n\t// notifyAll<E extends StreamKeys<'notify-all'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-all', E>): void {\n\t// \treturn this.streamAll.emit(eventName, ...args);\n\t// }\n\n\tnotifyLogged<E extends StreamKeys<'notify-logged'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-logged', E>): void {\n\t\treturn this.streamLogged.emit(eventName, ...args);\n\t}\n\n\tnotifyRoom<P extends string, E extends string>(\n\t\troom: P,\n\t\teventName: E extends ExtractNotifyUserEventName<'notify-room', P> ? E : never,\n\t\t...args: E extends ExtractNotifyUserEventName<'notify-room', P> ? StreamerCallbackArgs<'notify-room', `${P}/${E}`> : never\n\t): void {\n\t\treturn this.streamRoom.emit(`${room}/${eventName}`, ...args);\n\t}\n\n\tnotifyUser<P extends string, E extends string>(\n\t\tuserId: P,\n\t\teventName: E extends ExtractNotifyUserEventName<'notify-user', P> ? E : never,\n\t\t...args: E extends ExtractNotifyUserEventName<'notify-user', P> ? StreamerCallbackArgs<'notify-user', `${P}/${E}`> : never\n\t): void {\n\t\treturn this.streamUser.emit(`${userId}/${eventName}`, ...args);\n\t}\n\n\tnotifyAllInThisInstance<E extends StreamKeys<'notify-all'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-all', E>): void {\n\t\treturn this.streamAll.emitWithoutBroadcast(eventName, ...args);\n\t}\n\n\tnotifyLoggedInThisInstance<E extends StreamKeys<'notify-logged'>>(eventName: E, ...args: StreamerCallbackArgs<'notify-logged', E>): void {\n\t\treturn this.streamLogged.emitWithoutBroadcast(eventName, ...args);\n\t}\n\n\tnotifyRoomInThisInstance<P extends string, E extends string>(\n\t\troom: P,\n\t\teventName: E extends ExtractNotifyUserEventName<'notify-room', P> ? E : never,\n\t\t...args: E extends ExtractNotifyUserEventName<'notify-room', P> ? StreamerCallbackArgs<'notify-room', `${P}/${E}`> : never\n\t): void {\n\t\treturn this.streamRoom.emitWithoutBroadcast(`${room}/${eventName}`, ...args);\n\t}\n\n\tnotifyUserInThisInstance<P extends string, E extends string>(\n\t\tuserId: P,\n\t\teventName: E extends ExtractNotifyUserEventName<'notify-user', P> ? E : never,\n\t\t...args: E extends ExtractNotifyUserEventName<'notify-user', P> ? StreamerCallbackArgs<'notify-user', `${P}/${E}`> : never\n\t): void {\n\t\treturn this.streamUser.emitWithoutBroadcast(`${userId}/${eventName}`, ...args);\n\t}\n\n\tsendPresence(uid: string, ...args: [username: string, status?: 0 | 1 | 2 | 3, statusText?: string]): void {\n\t\temit(uid, [args]);\n\t\treturn this.streamPresence.emitWithoutBroadcast(uid, args);\n\t}\n\n\tprogressUpdated(progress: { rate: number } | ImporterProgress): void {\n\t\tthis.streamImporters.emit('progress', progress);\n\t}\n}\n\ntype ExtractNotifyUserEventName<\n\tT extends StreamNames,\n\tP extends string,\n\tE extends StreamKeys<T> = StreamKeys<T>,\n> = E extends `${infer X}/${infer I}` ? (P extends X ? I : never) : never;\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAE;MAAAC,mBAAwB,EAAEA,CAAA,KAAAA;IAAM;IAAA,IAAAC,aAA6B,EAAAC,SAAA;IAAAJ,MAAA,CAAAK,IAAA;MAAAF,cAAAG,CAAA;QAAAH,aAAA,GAAAG,CAAA;MAAA;MAAAF,UAAAE,CAAA;QAAAF,SAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA,EAAAC,aAAA,EAAAC,KAAA,EAAAC,QAAA;IAAAV,MAAA,CAAAK,IAAA;MAAAE,MAAAD,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;MAAAE,cAAAF,CAAA;QAAAE,aAAA,GAAAF,CAAA;MAAA;MAAAG,MAAAH,CAAA;QAAAG,KAAA,GAAAH,CAAA;MAAA;MAAAI,SAAAJ,CAAA;QAAAI,QAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,IAAA,EAAAC,cAAA;IAAAZ,MAAA,CAAAK,IAAA;MAAAM,KAAAL,CAAA;QAAAK,IAAA,GAAAL,CAAA;MAAA;MAAAM,eAAAN,CAAA;QAAAM,cAAA,GAAAN,CAAA;MAAA;IAAA;IAAA,IAAAO,YAAA;IAAAb,MAAA,CAAAK,IAAA;MAAAQ,aAAAP,CAAA;QAAAO,YAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,oBAAA,WAAAA,oBAAA;IAUhE,MAAOZ,mBAAmB;MAuC/Ba,YAAoBC,QAA8B;QAAA,KAA9BA,QAAA;QAAA,KAtCJC,YAAY;QAAA,KAEZC,SAAS;QAAA,KAETC,UAAU;QAAA,KAEVC,eAAe;QAAA,KAEfC,UAAU;QAAA,KAIVC,iBAAiB;QAAA,KAEjBC,eAAe;QAAA,KAEfC,WAAW;QAAA,KAEXC,UAAU;QAAA,KAEVC,gBAAgB;QAAA,KAEhBC,qBAAqB;QAAA,KAErBC,wBAAwB;QAAA,KAExBC,kBAAkB;QAAA,KAElBC,uBAAuB;QAAA,KAEvBC,YAAY;QAAA,KAEZC,cAAc;QAAA,KAEdC,WAAW;QAAA,KAEXC,cAAc;QAEV,KAAAlB,QAAQ,GAARA,QAAQ;QAC3B,IAAI,CAACE,SAAS,GAAG,IAAI,IAAI,CAACF,QAAQ,CAAC,YAAY,CAAC;QAChD,IAAI,CAACC,YAAY,GAAG,IAAI,IAAI,CAACD,QAAQ,CAAC,eAAe,CAAC;QACtD,IAAI,CAACG,UAAU,GAAG,IAAI,IAAI,CAACH,QAAQ,CAAC,aAAa,CAAC;QAClD,IAAI,CAACI,eAAe,GAAG,IAAI,IAAI,CAACJ,QAAQ,CAAC,mBAAmB,CAAC;QAC7D,IAAI,CAACO,eAAe,GAAG,IAAI,IAAI,CAACP,QAAQ,CAAC,WAAW,EAAE;UAAEmB,UAAU,EAAE;QAAK,CAAE,CAAC;QAC5E,IAAI,CAACX,WAAW,GAAG,IAAI,IAAI,CAACR,QAAQ,CAAC,OAAO,CAAC;QAC7C,IAAI,CAACS,UAAU,GAAG,IAAI,IAAI,CAACT,QAAQ,CAAC,MAAM,EAAE;UAAEmB,UAAU,EAAE;QAAK,CAAE,CAAC;QAClE,IAAI,CAACT,gBAAgB,GAAG,IAAI,IAAI,CAACV,QAAQ,CAAC,aAAa,EAAE;UAAEmB,UAAU,EAAE;QAAK,CAAE,CAAC;QAC/E,IAAI,CAACR,qBAAqB,GAAG,IAAI,IAAI,CAACX,QAAQ,CAAC,kBAAkB,CAAC;QAClE,IAAI,CAACY,wBAAwB,GAAG,IAAI,IAAI,CAACZ,QAAQ,CAAC,oBAAoB,CAAC;QACvE,IAAI,CAACa,kBAAkB,GAAG,IAAI,IAAI,CAACb,QAAQ,CAAC,eAAe,CAAC;QAC5D,IAAI,CAACc,uBAAuB,GAAG,IAAI,IAAI,CAACd,QAAQ,CAAC,iCAAiC,CAAC;QACnF,IAAI,CAACe,YAAY,GAAG,IAAI,IAAI,CAACf,QAAQ,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAACgB,cAAc,GAAG,IAAI,IAAI,CAAChB,QAAQ,CAAC,WAAW,CAAC;QACpD,IAAI,CAACkB,cAAc,GAAGtB,cAAc,CAACwB,WAAW,CAACpB,QAAQ,EAAE,eAAe,CAAC;QAC3E,IAAI,CAACM,iBAAiB,GAAG,IAAI,IAAI,CAACN,QAAQ,CAAC,eAAe,CAAC;QAE3D,IAAI,CAACM,iBAAiB,CAACe,EAAE,CAAC,eAAe,EAAE,OAAOC,QAAQ,EAAEC,WAAyB,EAAEC,SAAiB,KAAmB;UAC1H,MAAM;YAAEC;UAAM,CAAE,GAAGF,WAAW,CAACG,QAAQ;UACvC,IAAI,CAACD,MAAM,EAAE;YACZ;UACD;UAEA,MAAME,SAAS,GAAGA,CAACC,YAAoB,EAAAC,IAAA,KAAoC;YAAA,IAAlC;cAAEC;YAAG,CAAmB,GAAAD,IAAA;YAChE,QAAQD,YAAY;cACnB,KAAK,SAAS;gBACbN,QAAQ,CAACS,cAAc,CAACN,MAAM,EAAEE,SAAS,CAAC;gBAC1C,MAAMK,GAAG,GAAG,CAAC,GAAGV,QAAQ,CAACW,aAAa,CAAC,CAACC,IAAI,CAAEF,GAAG,IAAKA,GAAG,CAACR,SAAS,KAAKM,GAAG,IAAIE,GAAG,CAACG,YAAY,CAACV,MAAM,KAAKA,MAAM,CAAC;gBAClHO,GAAG,IAAIV,QAAQ,CAACc,kBAAkB,CAACJ,GAAG,EAAER,SAAS,CAAC;gBAClD;YACF;UACD,CAAC;UAEDF,QAAQ,CAACD,EAAE,CAACI,MAAM,EAAEE,SAAS,CAAC;UAE9BJ,WAAW,CAACc,MAAM,CAAC,MAAMf,QAAQ,CAACS,cAAc,CAACN,MAAM,EAAEE,SAAS,CAAC,CAAC;QACrE,CAAC,CAAC;QAEF,IAAI,CAACtB,UAAU,GAAG,IAAI,IAAI,CAACL,QAAQ,CAAC,aAAa,CAAC;QAClD,IAAI,CAACiB,WAAW,GAAG,IAAI,IAAI,CAACjB,QAAQ,CAAC,OAAO,CAAC;MAC9C;MAEAsC,SAASA,CAAA;QACR;QACA,MAAMC,IAAI,GAAG,IAAI;QAEjB,IAAI,CAACjC,iBAAiB,CAACkC,UAAU,CAAC,MAAM,CAAC;QACzC,IAAI,CAAClC,iBAAiB,CAACmC,SAAS,CAAC,gBAAgBjB,SAAS,EAAEkB,SAAS;UACpE,MAAMC,IAAI,GAAG,MAAMpD,KAAK,CAACqD,WAAW,CAACpB,SAAS,CAAC;UAC/C,IAAI,CAACmB,IAAI,EAAE;YACV,OAAO,KAAK;UACb;UAEA,MAAME,SAAS,GAAG,MAAM1D,aAAa,CAAC2D,aAAa,CAACH,IAAI,EAAE;YAAEI,GAAG,EAAE,IAAI,CAACtB,MAAM,IAAI;UAAE,CAAE,EAAEiB,SAAS,CAAC;UAChG,IAAI,CAACG,SAAS,EAAE;YACf;YACA,IAAIF,IAAI,CAACK,CAAC,KAAK,GAAG,IAAI,IAAI,CAACvB,MAAM,EAAE;cAClC,OAAOtC,aAAa,CAAC8D,aAAa,CAAC,IAAI,CAACxB,MAAM,EAAE,gBAAgB,CAAC;YAClE;YACA,OAAO,KAAK;UACb;UAEA,OAAO,IAAI;QACZ,CAAC,CAAC;QAEF,IAAI,CAACnB,iBAAiB,CAACmC,SAAS,CAAC,iBAAiB,EAAE,KAAK,CAAC;QAC1D,IAAI,CAACnC,iBAAiB,CAAC4C,SAAS,CAAC,iBAAiB,EAAE,gBAAgBC,UAAU,EAAAC,KAAA,EAAS;UAAA,IAAP;YAAEtB;UAAG,CAAE,GAAAsB,KAAA;UACtF,IAAI,CAAC,IAAI,CAAC3B,MAAM,EAAE;YACjB,OAAO,KAAK;UACb;UAEA,IAAI;YACH,MAAMkB,IAAI,GAAG,MAAMpD,KAAK,CAACqD,WAAW,CAACd,GAAG,CAAC;YACzC,IAAI,CAACa,IAAI,EAAE;cACV,OAAO,KAAK;YACb;YAEA,MAAME,SAAS,GAAG,MAAM1D,aAAa,CAAC2D,aAAa,CAACH,IAAI,EAAE;cAAEI,GAAG,EAAE,IAAI,CAACtB;YAAM,CAAE,CAAC;YAC/E,IAAI,CAACoB,SAAS,EAAE;cACf,OAAO,KAAK;YACb;YAEA,MAAMQ,eAAe,GAAG,MAAM7D,aAAa,CAAC8D,sBAAsB,CAACX,IAAI,CAACI,GAAG,EAAE,IAAI,CAACtB,MAAM,CAAC;YAEzF,OAAO;cACN4B,eAAe,EAAEA,eAAe,GAAG,CAAC;cACpCE,QAAQ,EAAEZ,IAAI,CAACK,CAAC;cAChBQ,QAAQ,EAAEb,IAAI,CAACc;aACf;UACF,CAAC,CAAC,OAAOC,KAAK,EAAE;YACf;YACA,OAAO,KAAK;UACb;QACD,CAAC,CAAC;QAEF,IAAI,CAACxD,SAAS,CAACsC,UAAU,CAAC,MAAM,CAAC;QACjC,IAAI,CAACtC,SAAS,CAACuC,SAAS,CAAC,KAAK,CAAC;QAC/B,IAAI,CAACxC,YAAY,CAACwC,SAAS,CAAC,0BAA0B,EAAE,kBAAK;UAC5D,IAAI,IAAI,CAAChB,MAAM,IAAI,IAAI,EAAE;YACxB,OAAO,KAAK;UACb;UACA,OAAOtC,aAAa,CAACwE,uBAAuB,CAAC,IAAI,CAAClC,MAAM,EAAE,CACzD,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,CAC1B,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACxB,YAAY,CAACuC,UAAU,CAAC,MAAM,CAAC;QACpC,IAAI,CAACvC,YAAY,CAACwC,SAAS,CAAC,QAAQ,CAAC;QAErC,IAAI,CAACtC,UAAU,CAACsC,SAAS,CAAC,gBAAgBjB,SAAS,EAAEkB,SAAS;UAC7D,MAAM,CAACZ,GAAG,EAAE8B,CAAC,CAAC,GAAGpC,SAAS,CAACqC,KAAK,CAAC,GAAG,CAAC;UAErC,IAAID,CAAC,KAAK,QAAQ,EAAE;YACnB,OAAO,IAAI;UACZ;UAEA,MAAMjB,IAAI,GAAG,MAAMpD,KAAK,CAACqD,WAAW,CAA4Cd,GAAG,EAAE;YACpFgC,UAAU,EAAE;cAAE,GAAG,EAAE,CAAC;cAAE,SAAS,EAAE;YAAC;WAClC,CAAC;UAEF,IAAI,CAACnB,IAAI,EAAE;YACV,OAAO,KAAK;UACb;UAEA;UACA,IAAID,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEqB,KAAK,EAAE;YACrB;YACA,MAAMpB,IAAI,GAAG,MAAMpD,KAAK,CAACqD,WAAW,CAAoCd,GAAG,EAAE;cAC5EgC,UAAU,EAAE;gBAAE,GAAG,EAAE,CAAC;gBAAE,SAAS,EAAE;cAAC;aAClC,CAAC;YACF,OAAO,CAAC,CAACnB,IAAI,IAAIA,IAAI,CAACK,CAAC,KAAK,GAAG,IAAIL,IAAI,CAACrD,CAAC,CAACyE,KAAK,KAAKrB,SAAS,CAACqB,KAAK;UACpE;UAEA,IAAI,CAAC,IAAI,CAACtC,MAAM,EAAE;YACjB,OAAO,KAAK;UACb;UACA,MAAMoB,SAAS,GAAG,MAAM1D,aAAa,CAAC6E,eAAe,CAACrB,IAAI,CAACI,GAAG,EAAE,IAAI,CAACtB,MAAM,CAAC;UAE5E,OAAOoB,SAAS;QACjB,CAAC,CAAC;QAEF,eAAeoB,OAAOA,CAAAC,KAAA,EAUrB;UAAA,IAVsB;YACtBzC,MAAM;YACN0C,QAAQ;YACRzB,SAAS;YACTZ;UAAG,CAMH,GAAAoC,KAAA;UACA,IAAI;YACH;YACA,IAAIxB,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEqB,KAAK,EAAE;cACrB;cACA,MAAMpB,IAAI,GAAG,MAAMpD,KAAK,CAACqD,WAAW,CAAoCd,GAAG,EAAE;gBAC5EgC,UAAU,EAAE;kBAAE,GAAG,EAAE,CAAC;kBAAE,SAAS,EAAE;gBAAC;eAClC,CAAC;cACF,OAAO,CAAC,CAACnB,IAAI,IAAIA,IAAI,CAACK,CAAC,KAAK,GAAG,IAAIL,IAAI,CAACrD,CAAC,CAACyE,KAAK,KAAKrB,SAAS,CAACqB,KAAK;YACpE;YAEA,IAAI,CAACtC,MAAM,EAAE;cACZ,OAAO,KAAK;YACb;YAEA;YACA,MAAM2C,GAAG,GAAG,CAAC,MAAM1E,QAAQ,CAAC2E,YAAY,CAAC,kBAAkB,CAAC,IAAI,MAAM,GAAG,UAAU;YAEnF,MAAMC,IAAI,GAAG,MAAM7E,KAAK,CAACmD,WAAW,CAAmCnB,MAAM,EAAE;cAC9EqC,UAAU,EAAE;gBACX,CAACM,GAAG,GAAG;;aAER,CAAC;YAEF,IAAI,CAACE,IAAI,EAAE;cACV,OAAO,KAAK;YACb;YAEA,OAAOA,IAAI,CAACF,GAAG,CAAC,KAAKD,QAAQ;UAC9B,CAAC,CAAC,OAAOP,CAAC,EAAE;YACX/D,YAAY,CAAC6D,KAAK,CAACE,CAAC,CAAC;YACrB,OAAO,KAAK;UACb;QACD;QAEA,IAAI,CAACzD,UAAU,CAACqC,UAAU,CAAC,gBAAgBhB,SAAS,EAAE2C,QAAQ,EAAEI,SAAS,EAAE7B,SAAS;UAAA,IAAA8B,YAAA;UACnF,MAAM,CAAC1C,GAAG,EAAE8B,CAAC,CAAC,GAAGpC,SAAS,CAACqC,KAAK,CAAC,GAAG,CAAC;UAErC;UACA,IAAID,CAAC,KAAK,QAAQ,EAAE;YACnB,OAAO,IAAI;UACZ;UAEA,IAAIA,CAAC,KAAK,eAAe,EAAE;YAC1B,OAAO,KAAK;UACb;UAEA,IAAI,EAAE,MAAMK,OAAO,CAAC;YAAEvB,SAAS;YAAEZ,GAAG;YAAEqC,QAAQ;YAAE1C,MAAM,GAAA+C,YAAA,GAAE,IAAI,CAAC/C,MAAM,cAAA+C,YAAA,cAAAA,YAAA,GAAIC;UAAS,CAAE,CAAC,CAAC,EAAE;YACrF,OAAO,KAAK;UACb;UAEA,OAAO,IAAI;QACZ,CAAC,CAAC;QAEF,IAAI,CAACrE,eAAe,CAACqC,SAAS,CAAC,MAAM,CAAC;QACtC,IAAI,CAACrC,eAAe,CAACoC,UAAU,CAAC,gBAAgBhB,SAAS,EAAgB;UAAA,SAAAkD,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAXC,IAAW,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;YAAXF,IAAW,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;UAAA;UACxE,MAAM,CAACC,MAAM,EAAEpB,CAAC,CAAC,GAAGpC,SAAS,CAACqC,KAAK,CAAC,GAAG,CAAC;UACxC,IAAI,CAAC,IAAI,CAACpC,MAAM,EAAE;YACjB,MAAMkB,IAAI,GAAG,MAAMpD,KAAK,CAACqD,WAAW,CAAmBoC,MAAM,EAAE;cAC9DlB,UAAU,EAAE;gBAAE,GAAG,EAAE,CAAC;gBAAE,cAAc,EAAE;cAAC;aACvC,CAAC;YACF,IAAInB,IAAI,IAAIA,IAAI,CAACK,CAAC,KAAK,GAAG,IAAIY,CAAC,KAAK,QAAQ,IAAIjB,IAAI,CAACsC,QAAQ,EAAE;cAC9D1C,IAAI,CAAC2C,UAAU,CAACvC,IAAI,CAACsC,QAAQ,CAAClC,GAAG,EAAEa,CAAC,EAAE,GAAGiB,IAAI,CAAC;cAC9C,OAAO,KAAK;YACb;UACD,CAAC,MAAM,IAAI,CAAC,MAAMrF,aAAa,CAAC8D,sBAAsB,CAAC0B,MAAM,EAAE,IAAI,CAACvD,MAAM,CAAC,IAAI,CAAC,EAAE;YACjF,MAAM0D,qBAAqB,GAAoB,MAAM3F,aAAa,CAAC4F,gCAAgC,CAACJ,MAAM,EAAE,IAAI,CAACvD,MAAM,EAAE;cACxHqC,UAAU,EAAE;gBAAE,OAAO,EAAE,CAAC;gBAAE,KAAK,EAAE;cAAC;aAClC,CAAC,CAACuB,OAAO,EAAE;YACZ,IAAIF,qBAAqB,IAAIvB,CAAC,KAAK,QAAQ,EAAE;cAC5CuB,qBAAqB,CAACG,OAAO,CAAEnD,YAAY,IAAKA,YAAY,CAAC7C,CAAC,IAAIiD,IAAI,CAAC2C,UAAU,CAAC/C,YAAY,CAAC7C,CAAC,CAACyD,GAAG,EAAEa,CAAC,EAAE,GAAGiB,IAAI,CAAC,CAAC;cAClH,OAAO,KAAK;YACb;YACA,MAAM5C,aAAa,GAAoB,MAAMzC,aAAa,CAAC+F,wBAAwB,CAACP,MAAM,EAAE,IAAI,CAACvD,MAAM,EAAE;cACxGqC,UAAU,EAAE;gBAAE,OAAO,EAAE,CAAC;gBAAE,KAAK,EAAE;cAAC;aAClC,CAAC,CAACuB,OAAO,EAAE;YAEZpD,aAAa,CAACqD,OAAO,CAAEnD,YAAY,IAAKI,IAAI,CAAC2C,UAAU,CAAC/C,YAAY,CAACqD,CAAC,CAACzC,GAAG,EAAEa,CAAC,EAAE,GAAGiB,IAAI,CAAC,CAAC;UACzF;UACA,OAAO,KAAK;QACb,CAAC,CAAC;QAEF,IAAI,CAACxE,UAAU,CAACmC,UAAU,CAAC,gBAAgBhB,SAAS,EAAEiE,IAAa;UAClE,MAAM,GAAG7B,CAAC,CAAC,GAAGpC,SAAS,CAACqC,KAAK,CAAC,GAAG,CAAC;UAClC,IAAID,CAAC,KAAK,KAAK,KAAK6B,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,aAAa,CAAC,EAAE;YACpE,MAAMC,QAAQ,GAAG,MAAMhG,QAAQ,CAAC2E,YAAY,CAAC,YAAY,CAAC;YAC1D,OAAOsB,OAAO,CAAC,IAAI,CAAClE,MAAM,CAAC,KAAKiE,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,IAAI,CAAC;UAC1E;UACA,IAAI9B,CAAC,KAAK,QAAQ,EAAE;YACnB,OAAO,IAAI;UACZ;UACA,IAAIA,CAAC,KAAK,kBAAkB,EAAE;YAC7B,IAAI,CAAC,IAAI,CAACnC,MAAM,IAAI,CAACgE,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;cACtD,OAAO,KAAK;YACb;YAEA,MAAM;cAAEG,MAAM,EAAEC,WAAW;cAAEC;YAAM,CAAE,GAAGL,IAGvC;YAED,IAAI,CAACI,WAAW,IAAI,OAAOA,WAAW,KAAK,QAAQ,IAAI,CAACC,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;cAC7F,OAAO,KAAK;YACb;YAEA,MAAMC,MAAM,GAAG,QAAQ,IAAID,MAAM,IAAI,OAAOA,MAAM,CAACC,MAAM,KAAK,QAAQ,GAAGD,MAAM,CAACC,MAAM,GAAG,EAAE;YAC3F,MAAMC,GAAG,GAAG,KAAK,IAAIF,MAAM,IAAI,OAAOA,MAAM,CAACE,GAAG,KAAK,QAAQ,GAAGF,MAAM,CAACE,GAAG,GAAG,EAAE;YAC/E,MAAMlE,GAAG,GAAG,KAAK,IAAIgE,MAAM,IAAI,OAAOA,MAAM,CAAChE,GAAG,KAAK,QAAQ,GAAGgE,MAAM,CAAChE,GAAG,GAAG,EAAE;YAE/E,OAAO1C,SAAS,CAAC6G,cAAc,CAACJ,WAAW,EAAE,IAAI,CAACpE,MAAM,EAAE;cACzDsE,MAAM;cACNC,GAAG;cACHlE;aACA,CAAC;UACH;UAEA,OAAO6D,OAAO,CAAC,IAAI,CAAClE,MAAM,CAAC;QAC5B,CAAC,CAAC;QACF,IAAI,CAACpB,UAAU,CAACoC,SAAS,CAAC,gBAAgBjB,SAAS;UAClD,MAAM,CAACC,MAAM,EAAEmC,CAAC,CAAC,GAAGpC,SAAS,CAACqC,KAAK,CAAC,GAAG,CAAC;UAExC,IAAID,CAAC,KAAK,KAAK,EAAE;YAChB,MAAM8B,QAAQ,GAAG,MAAMhG,QAAQ,CAAC2E,YAAY,CAAC,YAAY,CAAC;YAC1D,OAAOsB,OAAO,CAAC,IAAI,CAAClE,MAAM,CAAC,IAAI,IAAI,CAACA,MAAM,KAAKA,MAAM,KAAKiE,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,IAAI,CAAC;UACpG;UACA,IAAI9B,CAAC,KAAK,QAAQ,EAAE;YACnB,OAAO,IAAI;UACZ;UAEA,OAAO+B,OAAO,CAAC,IAAI,CAAClE,MAAM,CAAC,IAAI,IAAI,CAACA,MAAM,KAAKA,MAAM;QACtD,CAAC,CAAC;QAEF,IAAI,CAAClB,eAAe,CAACkC,SAAS,CAAC,KAAK,CAAC;QACrC,IAAI,CAAClC,eAAe,CAAC2C,SAAS,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC3C,eAAe,CAACiC,UAAU,CAAC,MAAM,CAAC;QAEvC,IAAI,CAAC/B,UAAU,CAACyF,UAAU,GAAG,IAAI;QACjC,IAAI,CAACzF,UAAU,CAACgC,SAAS,CAAC,KAAK,CAAC;QAChC,IAAI,CAAChC,UAAU,CAACyC,SAAS,CAAC,KAAK,CAAC;QAChC,IAAI,CAACzC,UAAU,CAAC+B,UAAU,CAAC,MAAM,CAAC;QAElC,IAAI,CAAC9B,gBAAgB,CAACwF,UAAU,GAAG,IAAI;QACvC,IAAI,CAACxF,gBAAgB,CAAC+B,SAAS,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC/B,gBAAgB,CAACwC,SAAS,CAAC,KAAK,CAAC;QACtC,IAAI,CAACxC,gBAAgB,CAAC8B,UAAU,CAAC,MAAM,CAAC;QAExC,IAAI,CAAC7B,qBAAqB,CAAC6B,UAAU,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC7B,qBAAqB,CAAC8B,SAAS,CAAC,kBAAK;UACzC,OACC,CAAC,CAAC,IAAI,CAAChB,MAAM,IACb,CAAC,EAAE,MAAM/B,QAAQ,CAAC2E,YAAY,CAAC,yBAAyB,CAAC,CAAC,IAC1DlF,aAAa,CAAC8D,aAAa,CAAC,IAAI,CAACxB,MAAM,EAAE,uBAAuB,CAAC;QAEnE,CAAC,CAAC;QAEF,IAAI,CAACb,wBAAwB,CAAC4B,UAAU,CAAC,MAAM,CAAC;QAChD,IAAI,CAAC5B,wBAAwB,CAAC6B,SAAS,CAAC,kBAAK;UAC5C,IAAI,CAAC,IAAI,CAAChB,MAAM,EAAE;YACjB,OAAO,KAAK;UACb;UACA,OAAOtC,aAAa,CAACwE,uBAAuB,CAAC,IAAI,CAAClC,MAAM,EAAE,CAAC,8BAA8B,EAAE,kCAAkC,CAAC,CAAC;QAChI,CAAC,CAAC;QAEF,IAAI,CAACZ,kBAAkB,CAAC4B,SAAS,CAAC,OAAOuC,MAAM,EAAEtC,SAAS,KAAI;UAC7D,MAAMC,IAAI,GAAG,MAAMpD,KAAK,CAACqD,WAAW,CAAoCoC,MAAM,EAAE;YAC/ElB,UAAU,EAAE;cAAEf,GAAG,EAAE,CAAC;cAAEC,CAAC,EAAE,CAAC;cAAE1D,CAAC,EAAE;YAAC;WAChC,CAAC;UAEF,IAAI,CAACqD,IAAI,EAAE;YACVwD,OAAO,CAACC,IAAI,yBAAAC,MAAA,CAAwBrB,MAAM,OAAG,CAAC;YAC9C,OAAO,KAAK;UACb;UAEA,IAAIrC,IAAI,CAACK,CAAC,KAAK,GAAG,IAAIN,SAAS,aAATA,SAAS,eAATA,SAAS,CAAE4D,YAAY,IAAI3D,IAAI,CAACrD,CAAC,CAACyE,KAAK,KAAKrB,SAAS,CAAC4D,YAAY,EAAE;YACzF,OAAO,IAAI;UACZ;UACA,OAAO,KAAK;QACb,CAAC,CAAC;QAEF,IAAI,CAACxF,uBAAuB,CAAC0B,UAAU,CAAC,MAAM,CAAC;QAC/C,IAAI,CAAC1B,uBAAuB,CAAC2B,SAAS,CAAC,kBAAK;UAC3C,OAAO,IAAI,CAAChB,MAAM,GAAGtC,aAAa,CAAC8D,aAAa,CAAC,IAAI,CAACxB,MAAM,EAAE,aAAa,CAAC,GAAG,KAAK;QACrF,CAAC,CAAC;QAEF,IAAI,CAACV,YAAY,CAACyB,UAAU,CAAC,MAAM,CAAC;QACpC,IAAI,CAACzB,YAAY,CAAC0B,SAAS,CAAC,kBAAK;UAChC,IAAI,CAAC,IAAI,CAAChB,MAAM,EAAE;YACjB,OAAO,KAAK;UACb;UACA,OAAOtC,aAAa,CAAC8D,aAAa,CAAC,IAAI,CAACxB,MAAM,EAAE,WAAW,CAAC;QAC7D,CAAC,CAAC;QAEF,IAAI,CAACT,cAAc,CAACwB,UAAU,CAAC,MAAM,CAAC;QACtC,IAAI,CAACxB,cAAc,CAACyB,SAAS,CAAC,gBAAgBX,GAAG;UAChD,IAAI,CAAC,IAAI,CAACL,MAAM,EAAE;YACjB,OAAO,KAAK;UACb;UAEA,IAAI;YACH,MAAMkB,IAAI,GAAG,MAAMpD,KAAK,CAACqD,WAAW,CAACd,GAAG,CAAC;YACzC,IAAI,CAACa,IAAI,EAAE;cACV,OAAO,KAAK;YACb;YAEA,MAAME,SAAS,GAAG,MAAM1D,aAAa,CAAC2D,aAAa,CAACH,IAAI,EAAE;cAAEI,GAAG,EAAE,IAAI,CAACtB;YAAM,CAAE,CAAC;YAC/E,IAAI,CAACoB,SAAS,EAAE;cACf,OAAO,KAAK;YACb;YAEA,OAAO,IAAI;UACZ,CAAC,CAAC,OAAOa,KAAK,EAAE;YACf,OAAO,KAAK;UACb;QACD,CAAC,CAAC;QAEF,IAAI,CAAClD,WAAW,CAACgC,UAAU,CAAC,MAAM,CAAC;QACnC,IAAI,CAAChC,WAAW,CAACiC,SAAS,CAAC,QAAQ,CAAC;QAEpC,IAAI,CAACpC,UAAU,CAACgB,EAAE,CAAC,eAAe,EAAE,OAAOC,QAAQ,EAAEC,WAAyB,EAAEC,SAAiB,KAAmB;UACnH,MAAM;YAAEC;UAAM,CAAE,GAAGF,WAAW,CAACG,QAAQ;UACvC,IAAI,CAACD,MAAM,EAAE;YACZ;UACD;UAEA,IAAI,eAAe,CAAC8E,IAAI,CAAC/E,SAAS,CAAC,EAAE;YACpC;YACA,MAAMgF,SAAS,GAAG,SAAAA,CAAA,EAAyB;cAAA,IAAAC,qBAAA;cAAA,SAAAC,KAAA,GAAA/B,SAAA,CAAAC,MAAA,EAArBC,IAAW,OAAAC,KAAA,CAAA4B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;gBAAX9B,IAAW,CAAA8B,KAAA,IAAAhC,SAAA,CAAAgC,KAAA;cAAA;cAChC;cACA,MAAMC,OAAO,GAAGtF,QAAQ,CAACuF,cAAc,CAACvF,QAAQ,CAACwF,gBAAgB,EAAE,IAAI,EAAE;gBACxEtF,SAAS,KAAA6E,MAAA,CAAK5E,MAAM,mBAAgB;gBACpCoD;eACA,CAAC;cAEF+B,OAAO,MAAAH,qBAAA,GAAIlF,WAAW,CAACG,QAAQ,CAACqF,MAAM,cAAAN,qBAAA,uBAA3BA,qBAAA,CAA6BO,IAAI,CAACJ,OAAO,CAAC;YACtD,CAAC;YAED,MAAM3E,aAAa,GAAG,MAAMzC,aAAa,CAAC0C,IAAI,CAC7C;cAAE,OAAO,EAAET;YAAM,CAAE,EACnB;cAAEqC,UAAU,EAAE;gBAAEhC,GAAG,EAAE;cAAC;YAAE,CAAE,CAC1B,CAACuD,OAAO,EAAE;YAEXpD,aAAa,CAACqD,OAAO,CAAC2B,KAAA,IAAY;cAAA,IAAX;gBAAEnF;cAAG,CAAE,GAAAmF,KAAA;cAC7B3F,QAAQ,CAACD,EAAE,CAACS,GAAG,EAAE0E,SAAS,CAAC;YAC5B,CAAC,CAAC;YAEF,MAAM7E,SAAS,GAAG,eAAAA,CAAOC,YAAoB,EAAyD;cAAA,IAAvD;gBAAEE;cAAG,IAAA6C,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAF,SAAA,GAAAE,SAAA,MAA6B,EAAE;cAClF,IAAI,CAAC7C,GAAG,EAAE;gBACT;cACD;cAEA,QAAQF,YAAY;gBACnB,KAAK,UAAU;kBACdK,aAAa,CAACiF,IAAI,CAAC;oBAAEpF;kBAAG,CAAE,CAAC;kBAC3BR,QAAQ,CAACD,EAAE,CAACS,GAAG,EAAE0E,SAAS,CAAC;kBAE3B;kBACAA,SAAS,CAAC,UAAU,EAAE,MAAMjH,KAAK,CAACqD,WAAW,CAACd,GAAG,CAAC,CAAC;kBACnD;gBAED,KAAK,SAAS;kBACbR,QAAQ,CAACS,cAAc,CAACD,GAAG,EAAE0E,SAAS,CAAC;kBACvC;cACF;YACD,CAAC;YACDlF,QAAQ,CAACD,EAAE,CAACI,MAAM,EAAEE,SAAS,CAAC;YAE9BJ,WAAW,CAACc,MAAM,CAAC,MAAK;cACvBf,QAAQ,CAACS,cAAc,CAACN,MAAM,EAAEE,SAAS,CAAC;cAC1CM,aAAa,CAACqD,OAAO,CAAC6B,KAAA;gBAAA,IAAC;kBAAErF;gBAAG,CAAE,GAAAqF,KAAA;gBAAA,OAAK7F,QAAQ,CAACS,cAAc,CAACD,GAAG,EAAE0E,SAAS,CAAC;cAAA,EAAC;YAC5E,CAAC,CAAC;UACH;QACD,CAAC,CAAC;QAEF,IAAI,CAACvF,WAAW,CAACiF,UAAU,GAAG,IAAI;QAClC,IAAI,CAACjF,WAAW,CAACwB,SAAS,CAAC,MAAM,CAAC;QAClC,IAAI,CAACxB,WAAW,CAACiC,SAAS,CAAC,KAAK,CAAC;QACjC,IAAI,CAACjC,WAAW,CAACuB,UAAU,CAAC,MAAM,CAAC;QAEnC,IAAI,CAACtB,cAAc,CAACuB,SAAS,CAAC,QAAQ,CAAC;QACvC,IAAI,CAACvB,cAAc,CAACsB,UAAU,CAAC,MAAM,CAAC;MACvC;MAEA;MACA;MACA;MAEA4E,YAAYA,CAAwC5F,SAAY,EAAmD;QAAA,SAAA6F,KAAA,GAAA1C,SAAA,CAAAC,MAAA,EAA9CC,IAA8C,OAAAC,KAAA,CAAAuC,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;UAA9CzC,IAA8C,CAAAyC,KAAA,QAAA3C,SAAA,CAAA2C,KAAA;QAAA;QAClH,OAAO,IAAI,CAACrH,YAAY,CAACN,IAAI,CAAC6B,SAAS,EAAE,GAAGqD,IAAI,CAAC;MAClD;MAEA0C,UAAUA,CACT5E,IAAO,EACPnB,SAA6E,EAC6C;QAAA,SAAAgG,KAAA,GAAA7C,SAAA,CAAAC,MAAA,EAAvHC,IAAuH,OAAAC,KAAA,CAAA0C,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;UAAvH5C,IAAuH,CAAA4C,KAAA,QAAA9C,SAAA,CAAA8C,KAAA;QAAA;QAE1H,OAAO,IAAI,CAACtH,UAAU,CAACR,IAAI,IAAA0G,MAAA,CAAI1D,IAAI,OAAA0D,MAAA,CAAI7E,SAAS,GAAI,GAAGqD,IAAI,CAAC;MAC7D;MAEAK,UAAUA,CACTzD,MAAS,EACTD,SAA6E,EAC6C;QAAA,SAAAkG,KAAA,GAAA/C,SAAA,CAAAC,MAAA,EAAvHC,IAAuH,OAAAC,KAAA,CAAA4C,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;UAAvH9C,IAAuH,CAAA8C,KAAA,QAAAhD,SAAA,CAAAgD,KAAA;QAAA;QAE1H,OAAO,IAAI,CAACtH,UAAU,CAACV,IAAI,IAAA0G,MAAA,CAAI5E,MAAM,OAAA4E,MAAA,CAAI7E,SAAS,GAAI,GAAGqD,IAAI,CAAC;MAC/D;MAEA+C,uBAAuBA,CAAqCpG,SAAY,EAAgD;QAAA,SAAAqG,KAAA,GAAAlD,SAAA,CAAAC,MAAA,EAA3CC,IAA2C,OAAAC,KAAA,CAAA+C,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;UAA3CjD,IAA2C,CAAAiD,KAAA,QAAAnD,SAAA,CAAAmD,KAAA;QAAA;QACvH,OAAO,IAAI,CAAC5H,SAAS,CAAC6H,oBAAoB,CAACvG,SAAS,EAAE,GAAGqD,IAAI,CAAC;MAC/D;MAEAmD,0BAA0BA,CAAwCxG,SAAY,EAAmD;QAAA,SAAAyG,KAAA,GAAAtD,SAAA,CAAAC,MAAA,EAA9CC,IAA8C,OAAAC,KAAA,CAAAmD,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;UAA9CrD,IAA8C,CAAAqD,KAAA,QAAAvD,SAAA,CAAAuD,KAAA;QAAA;QAChI,OAAO,IAAI,CAACjI,YAAY,CAAC8H,oBAAoB,CAACvG,SAAS,EAAE,GAAGqD,IAAI,CAAC;MAClE;MAEAsD,wBAAwBA,CACvBxF,IAAO,EACPnB,SAA6E,EAC6C;QAAA,SAAA4G,KAAA,GAAAzD,SAAA,CAAAC,MAAA,EAAvHC,IAAuH,OAAAC,KAAA,CAAAsD,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;UAAvHxD,IAAuH,CAAAwD,KAAA,QAAA1D,SAAA,CAAA0D,KAAA;QAAA;QAE1H,OAAO,IAAI,CAAClI,UAAU,CAAC4H,oBAAoB,IAAA1B,MAAA,CAAI1D,IAAI,OAAA0D,MAAA,CAAI7E,SAAS,GAAI,GAAGqD,IAAI,CAAC;MAC7E;MAEAyD,wBAAwBA,CACvB7G,MAAS,EACTD,SAA6E,EAC6C;QAAA,SAAA+G,KAAA,GAAA5D,SAAA,CAAAC,MAAA,EAAvHC,IAAuH,OAAAC,KAAA,CAAAyD,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;UAAvH3D,IAAuH,CAAA2D,KAAA,QAAA7D,SAAA,CAAA6D,KAAA;QAAA;QAE1H,OAAO,IAAI,CAACnI,UAAU,CAAC0H,oBAAoB,IAAA1B,MAAA,CAAI5E,MAAM,OAAA4E,MAAA,CAAI7E,SAAS,GAAI,GAAGqD,IAAI,CAAC;MAC/E;MAEA4D,YAAYA,CAACzC,GAAW,EAA0E;QAAA,SAAA0C,MAAA,GAAA/D,SAAA,CAAAC,MAAA,EAArEC,IAAqE,OAAAC,KAAA,CAAA4D,MAAA,OAAAA,MAAA,WAAAC,MAAA,MAAAA,MAAA,GAAAD,MAAA,EAAAC,MAAA;UAArE9D,IAAqE,CAAA8D,MAAA,QAAAhE,SAAA,CAAAgE,MAAA;QAAA;QACjGhJ,IAAI,CAACqG,GAAG,EAAE,CAACnB,IAAI,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC3D,cAAc,CAAC6G,oBAAoB,CAAC/B,GAAG,EAAEnB,IAAI,CAAC;MAC3D;MAEA+D,eAAeA,CAACC,QAA6C;QAC5D,IAAI,CAACtI,eAAe,CAACZ,IAAI,CAAC,UAAU,EAAEkJ,QAAQ,CAAC;MAChD;;IACAC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAvG,IAAA;EAAAyG,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"2c6b075b759b39720313d6b67f81c0ab3503fe83"}
