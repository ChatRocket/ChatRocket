{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/publications/room/index.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/publications/room/index.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/publications/room/index.ts","inputSourceMap":{"version":3,"file":"server/publications/room/index.ts","sourceRoot":"","sources":["server/publications/room/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelRoom, IRoom, RoomType } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { canAccessRoomAsync } from '../../../app/authorization/server';\nimport { hasPermissionAsync } from '../../../app/authorization/server/functions/hasPermission';\nimport { settings } from '../../../app/settings/server';\nimport { roomFields } from '../../../lib/publishFields';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\n\ntype PublicRoomField = keyof typeof roomFields;\ntype PublicRoom = Pick<IRoom, PublicRoomField & keyof IRoom> & Pick<IOmnichannelRoom, PublicRoomField & keyof IOmnichannelRoom>;\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'rooms/get'(updatedAt?: Date): IRoom[] | { update: IRoom[]; remove: IRoom[] };\n\t\t'getRoomByTypeAndName': (type: RoomType, name: string) => PublicRoom;\n\t}\n}\n\nconst roomMap = (record: IRoom | IOmnichannelRoom) => {\n\treturn _.pick(record, ...Object.keys(roomFields)) as PublicRoom;\n};\n\nMeteor.methods<ServerMethods>({\n\tasync 'rooms/get'(updatedAt) {\n\t\tconst options = { projection: roomFields };\n\t\tconst user = Meteor.userId();\n\n\t\tif (!user) {\n\t\t\tif (settings.get('Accounts_AllowAnonymousRead')) {\n\t\t\t\treturn Rooms.findByDefaultAndTypes(true, ['c'], options).toArray();\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\n\t\tif (updatedAt instanceof Date) {\n\t\t\treturn {\n\t\t\t\tupdate: await (await Rooms.findBySubscriptionUserIdUpdatedAfter(user, updatedAt, options)).toArray(),\n\t\t\t\tremove: await Rooms.trashFindDeletedAfter(updatedAt, {}, { projection: { _id: 1, _deletedAt: 1 } }).toArray(),\n\t\t\t};\n\t\t}\n\n\t\treturn (await Rooms.findBySubscriptionUserId(user, options)).toArray();\n\t},\n\n\tasync 'getRoomByTypeAndName'(type, name) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId && settings.get('Accounts_AllowAnonymousRead') === false) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'getRoomByTypeAndName',\n\t\t\t});\n\t\t}\n\n\t\tconst roomFind = roomCoordinator.getRoomFind(type);\n\n\t\tconst room = roomFind ? await roomFind.call(this, name) : await Rooms.findByTypeAndNameOrId(type, name);\n\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'getRoomByTypeAndName',\n\t\t\t});\n\t\t}\n\n\t\tif (userId && !(await canAccessRoomAsync(room, { _id: userId }))) {\n\t\t\tthrow new Meteor.Error('error-no-permission', 'No permission', {\n\t\t\t\tmethod: 'getRoomByTypeAndName',\n\t\t\t});\n\t\t}\n\n\t\tif (settings.get('Store_Last_Message') && userId && !(await hasPermissionAsync(userId, 'preview-c-room'))) {\n\t\t\tdelete room.lastMessage;\n\t\t}\n\n\t\treturn roomMap(room);\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/publications/room/index.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/publications/room/index.ts","inputSourceMap":{"version":3,"file":"server/publications/room/index.ts","sourceRoot":"","sources":["server/publications/room/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelRoom, IRoom, RoomType } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { canAccessRoomAsync } from '../../../app/authorization/server';\nimport { hasPermissionAsync } from '../../../app/authorization/server/functions/hasPermission';\nimport { settings } from '../../../app/settings/server';\nimport { roomFields } from '../../../lib/publishFields';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\n\ntype PublicRoomField = keyof typeof roomFields;\ntype PublicRoom = Pick<IRoom, PublicRoomField & keyof IRoom> & Pick<IOmnichannelRoom, PublicRoomField & keyof IOmnichannelRoom>;\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'rooms/get'(updatedAt?: Date): IRoom[] | { update: IRoom[]; remove: IRoom[] };\n\t\t'getRoomByTypeAndName': (type: RoomType, name: string) => PublicRoom;\n\t}\n}\n\nconst roomMap = (record: IRoom | IOmnichannelRoom) => {\n\treturn _.pick(record, ...Object.keys(roomFields)) as PublicRoom;\n};\n\nMeteor.methods<ServerMethods>({\n\tasync 'rooms/get'(updatedAt) {\n\t\tconst options = { projection: roomFields };\n\t\tconst user = Meteor.userId();\n\n\t\tif (!user) {\n\t\t\tif (settings.get('Accounts_AllowAnonymousRead')) {\n\t\t\t\treturn Rooms.findByDefaultAndTypes(true, ['c'], options).toArray();\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\n\t\tif (updatedAt instanceof Date) {\n\t\t\treturn {\n\t\t\t\tupdate: await (await Rooms.findBySubscriptionUserIdUpdatedAfter(user, updatedAt, options)).toArray(),\n\t\t\t\tremove: await Rooms.trashFindDeletedAfter(updatedAt, {}, { projection: { _id: 1, _deletedAt: 1 } }).toArray(),\n\t\t\t};\n\t\t}\n\n\t\treturn (await Rooms.findBySubscriptionUserId(user, options)).toArray();\n\t},\n\n\tasync 'getRoomByTypeAndName'(type, name) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId && settings.get('Accounts_AllowAnonymousRead') === false) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'getRoomByTypeAndName',\n\t\t\t});\n\t\t}\n\n\t\tconst roomFind = roomCoordinator.getRoomFind(type);\n\n\t\tconst room = roomFind ? await roomFind.call(this, name) : await Rooms.findByTypeAndNameOrId(type, name);\n\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'getRoomByTypeAndName',\n\t\t\t});\n\t\t}\n\n\t\tif (userId && !(await canAccessRoomAsync(room, { _id: userId }))) {\n\t\t\tthrow new Meteor.Error('error-no-permission', 'No permission', {\n\t\t\t\tmethod: 'getRoomByTypeAndName',\n\t\t\t});\n\t\t}\n\n\t\tif (settings.get('Store_Last_Message') && userId && !(await hasPermissionAsync(userId, 'preview-c-room'))) {\n\t\t\tdelete room.lastMessage;\n\t\t}\n\n\t\treturn roomMap(room);\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let _;\n    module.link(\"underscore\", {\n      default(v) {\n        _ = v;\n      }\n    }, 2);\n    let canAccessRoomAsync;\n    module.link(\"../../../app/authorization/server\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 3);\n    let hasPermissionAsync;\n    module.link(\"../../../app/authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 4);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 5);\n    let roomFields;\n    module.link(\"../../../lib/publishFields\", {\n      roomFields(v) {\n        roomFields = v;\n      }\n    }, 6);\n    let roomCoordinator;\n    module.link(\"../../lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 7);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const roomMap = record => {\n      return _.pick(record, ...Object.keys(roomFields));\n    };\n    Meteor.methods({\n      async 'rooms/get'(updatedAt) {\n        const options = {\n          projection: roomFields\n        };\n        const user = Meteor.userId();\n        if (!user) {\n          if (settings.get('Accounts_AllowAnonymousRead')) {\n            return Rooms.findByDefaultAndTypes(true, ['c'], options).toArray();\n          }\n          return [];\n        }\n        if (updatedAt instanceof Date) {\n          return {\n            update: await (await Rooms.findBySubscriptionUserIdUpdatedAfter(user, updatedAt, options)).toArray(),\n            remove: await Rooms.trashFindDeletedAfter(updatedAt, {}, {\n              projection: {\n                _id: 1,\n                _deletedAt: 1\n              }\n            }).toArray()\n          };\n        }\n        return (await Rooms.findBySubscriptionUserId(user, options)).toArray();\n      },\n      async 'getRoomByTypeAndName'(type, name) {\n        const userId = Meteor.userId();\n        if (!userId && settings.get('Accounts_AllowAnonymousRead') === false) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: 'getRoomByTypeAndName'\n          });\n        }\n        const roomFind = roomCoordinator.getRoomFind(type);\n        const room = roomFind ? await roomFind.call(this, name) : await Rooms.findByTypeAndNameOrId(type, name);\n        if (!room) {\n          throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n            method: 'getRoomByTypeAndName'\n          });\n        }\n        if (userId && !(await canAccessRoomAsync(room, {\n          _id: userId\n        }))) {\n          throw new Meteor.Error('error-no-permission', 'No permission', {\n            method: 'getRoomByTypeAndName'\n          });\n        }\n        if (settings.get('Store_Last_Message') && userId && !(await hasPermissionAsync(userId, 'preview-c-room'))) {\n          delete room.lastMessage;\n        }\n        return roomMap(room);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Rooms","module","link","v","Meteor","_","default","canAccessRoomAsync","hasPermissionAsync","settings","roomFields","roomCoordinator","__reifyWaitForDeps__","roomMap","record","pick","Object","keys","methods","rooms/get","updatedAt","options","projection","user","userId","get","findByDefaultAndTypes","toArray","Date","update","findBySubscriptionUserIdUpdatedAfter","remove","trashFindDeletedAfter","_id","_deletedAt","findBySubscriptionUserId","getRoomByTypeAndName","type","name","Error","method","roomFind","getRoomFind","room","call","findByTypeAndNameOrId","lastMessage","__reify_async_result__","_reifyError","self","async"],"sources":["server/publications/room/index.ts"],"sourcesContent":["import type { IOmnichannelRoom, IRoom, RoomType } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Rooms } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { canAccessRoomAsync } from '../../../app/authorization/server';\nimport { hasPermissionAsync } from '../../../app/authorization/server/functions/hasPermission';\nimport { settings } from '../../../app/settings/server';\nimport { roomFields } from '../../../lib/publishFields';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\n\ntype PublicRoomField = keyof typeof roomFields;\ntype PublicRoom = Pick<IRoom, PublicRoomField & keyof IRoom> & Pick<IOmnichannelRoom, PublicRoomField & keyof IOmnichannelRoom>;\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'rooms/get'(updatedAt?: Date): IRoom[] | { update: IRoom[]; remove: IRoom[] };\n\t\t'getRoomByTypeAndName': (type: RoomType, name: string) => PublicRoom;\n\t}\n}\n\nconst roomMap = (record: IRoom | IOmnichannelRoom) => {\n\treturn _.pick(record, ...Object.keys(roomFields)) as PublicRoom;\n};\n\nMeteor.methods<ServerMethods>({\n\tasync 'rooms/get'(updatedAt) {\n\t\tconst options = { projection: roomFields };\n\t\tconst user = Meteor.userId();\n\n\t\tif (!user) {\n\t\t\tif (settings.get('Accounts_AllowAnonymousRead')) {\n\t\t\t\treturn Rooms.findByDefaultAndTypes(true, ['c'], options).toArray();\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\n\t\tif (updatedAt instanceof Date) {\n\t\t\treturn {\n\t\t\t\tupdate: await (await Rooms.findBySubscriptionUserIdUpdatedAfter(user, updatedAt, options)).toArray(),\n\t\t\t\tremove: await Rooms.trashFindDeletedAfter(updatedAt, {}, { projection: { _id: 1, _deletedAt: 1 } }).toArray(),\n\t\t\t};\n\t\t}\n\n\t\treturn (await Rooms.findBySubscriptionUserId(user, options)).toArray();\n\t},\n\n\tasync 'getRoomByTypeAndName'(type, name) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId && settings.get('Accounts_AllowAnonymousRead') === false) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'getRoomByTypeAndName',\n\t\t\t});\n\t\t}\n\n\t\tconst roomFind = roomCoordinator.getRoomFind(type);\n\n\t\tconst room = roomFind ? await roomFind.call(this, name) : await Rooms.findByTypeAndNameOrId(type, name);\n\n\t\tif (!room) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'getRoomByTypeAndName',\n\t\t\t});\n\t\t}\n\n\t\tif (userId && !(await canAccessRoomAsync(room, { _id: userId }))) {\n\t\t\tthrow new Meteor.Error('error-no-permission', 'No permission', {\n\t\t\t\tmethod: 'getRoomByTypeAndName',\n\t\t\t});\n\t\t}\n\n\t\tif (settings.get('Store_Last_Message') && userId && !(await hasPermissionAsync(userId, 'preview-c-room'))) {\n\t\t\tdelete room.lastMessage;\n\t\t}\n\n\t\treturn roomMap(room);\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"537282990b0b9898eeb48a561e309f4a0c15d336"}
