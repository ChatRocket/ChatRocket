{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/processWebhookMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/processWebhookMessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/processWebhookMessage.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/processWebhookMessage.ts","sourceRoot":"","sources":["app/lib/server/functions/processWebhookMessage.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IUser, RequiredField, MessageAttachment } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { getRoomByNameOrIdWithOptionToJoin } from './getRoomByNameOrIdWithOptionToJoin';\nimport { sendMessage } from './sendMessage';\nimport { ensureArray } from '../../../../lib/utils/arrayUtils';\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { validateRoomMessagePermissionsAsync } from '../../../authorization/server/functions/canSendMessage';\n\ntype Payload = {\n\tchannel?: string | string[];\n\troomId?: string | string[];\n\ttext?: IMessage['msg'];\n\tmsg?: IMessage['msg']; // overridden if text is present\n\tusername?: IMessage['alias'];\n\talias?: IMessage['alias']; // overridden if username is present\n\ticon_emoji?: IMessage['emoji'];\n\temoji?: IMessage['emoji']; // overridden if icon_emoji is present\n\ticon_url?: IMessage['avatar'];\n\tavatar?: IMessage['avatar']; // overridden if icon_url is present\n\tattachments?: IMessage['attachments'];\n\tparseUrls?: boolean;\n\tbot?: IMessage['bot'];\n\tgroupable?: IMessage['groupable'];\n\ttmid?: IMessage['tmid'];\n\tcustomFields?: IMessage['customFields'];\n};\n\ntype DefaultValues = {\n\tchannel: string | string[];\n\talias: string;\n\tavatar: string;\n\temoji: string;\n};\n\nexport const processWebhookMessage = async function (\n\tmessageObj: Payload,\n\tuser: IUser & { username: RequiredField<IUser, 'username'> },\n\tdefaultValues: DefaultValues = { channel: '', alias: '', avatar: '', emoji: '' },\n) {\n\tconst sentData = [];\n\n\tconst channels: Array<string> = [...new Set(ensureArray(messageObj.channel || messageObj.roomId || defaultValues.channel))];\n\n\tfor await (const channel of channels) {\n\t\tconst channelType = channel[0];\n\n\t\tlet channelValue = channel.substr(1);\n\t\tlet room;\n\n\t\tswitch (channelType) {\n\t\t\tcase '#':\n\t\t\t\troom = await getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tuser,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\tjoinChannel: true,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase '@':\n\t\t\t\troom = await getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tuser,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\ttype: 'd',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tchannelValue = channelType + channelValue;\n\n\t\t\t\t// Try to find the room by id or name if they didn't include the prefix.\n\t\t\t\troom = await getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tuser,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\tjoinChannel: true,\n\t\t\t\t\terrorOnEmpty: false,\n\t\t\t\t});\n\t\t\t\tif (room) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// We didn't get a room, let's try finding direct messages\n\t\t\t\troom = await getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tuser,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\ttryDirectByUserIdOnly: true,\n\t\t\t\t\ttype: 'd',\n\t\t\t\t});\n\t\t\t\tif (room) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// No room, so throw an error\n\t\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\n\t\tif (messageObj.attachments && !Array.isArray(messageObj.attachments)) {\n\t\t\tSystemLogger.warn({\n\t\t\t\tmsg: 'Attachments should be Array, ignoring value',\n\t\t\t\tattachments: messageObj.attachments,\n\t\t\t});\n\t\t\tmessageObj.attachments = undefined;\n\t\t}\n\n\t\tconst message: Partial<IMessage> & { parseUrls?: boolean } = {\n\t\t\talias: messageObj.username || messageObj.alias || defaultValues.alias,\n\t\t\tmsg: trim(messageObj.text || messageObj.msg || ''),\n\t\t\tattachments: messageObj.attachments || [],\n\t\t\tparseUrls: messageObj.parseUrls !== undefined ? messageObj.parseUrls : !messageObj.attachments,\n\t\t\tbot: messageObj.bot,\n\t\t\tgroupable: messageObj.groupable !== undefined ? messageObj.groupable : false,\n\t\t\ttmid: messageObj.tmid,\n\t\t\tcustomFields: messageObj.customFields,\n\t\t};\n\n\t\tif (!_.isEmpty(messageObj.icon_url) || !_.isEmpty(messageObj.avatar)) {\n\t\t\tmessage.avatar = messageObj.icon_url || messageObj.avatar;\n\t\t} else if (!_.isEmpty(messageObj.icon_emoji) || !_.isEmpty(messageObj.emoji)) {\n\t\t\tmessage.emoji = messageObj.icon_emoji || messageObj.emoji;\n\t\t} else if (!_.isEmpty(defaultValues.avatar)) {\n\t\t\tmessage.avatar = defaultValues.avatar;\n\t\t} else if (!_.isEmpty(defaultValues.emoji)) {\n\t\t\tmessage.emoji = defaultValues.emoji;\n\t\t}\n\n\t\tif (Array.isArray(message.attachments)) {\n\t\t\tfor (let i = 0; i < message.attachments.length; i++) {\n\t\t\t\tconst attachment = message.attachments[i] as MessageAttachment & { msg?: string };\n\t\t\t\tif (attachment.msg) {\n\t\t\t\t\tattachment.text = trim(attachment.msg);\n\t\t\t\t\tdelete attachment.msg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tawait validateRoomMessagePermissionsAsync(room, { uid: user._id, ...user });\n\n\t\tconst messageReturn = await sendMessage(user, message, room);\n\t\tsentData.push({ channel, message: messageReturn });\n\t}\n\n\treturn sentData;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/processWebhookMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/processWebhookMessage.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/processWebhookMessage.ts","sourceRoot":"","sources":["app/lib/server/functions/processWebhookMessage.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IUser, RequiredField, MessageAttachment } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { getRoomByNameOrIdWithOptionToJoin } from './getRoomByNameOrIdWithOptionToJoin';\nimport { sendMessage } from './sendMessage';\nimport { ensureArray } from '../../../../lib/utils/arrayUtils';\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { validateRoomMessagePermissionsAsync } from '../../../authorization/server/functions/canSendMessage';\n\ntype Payload = {\n\tchannel?: string | string[];\n\troomId?: string | string[];\n\ttext?: IMessage['msg'];\n\tmsg?: IMessage['msg']; // overridden if text is present\n\tusername?: IMessage['alias'];\n\talias?: IMessage['alias']; // overridden if username is present\n\ticon_emoji?: IMessage['emoji'];\n\temoji?: IMessage['emoji']; // overridden if icon_emoji is present\n\ticon_url?: IMessage['avatar'];\n\tavatar?: IMessage['avatar']; // overridden if icon_url is present\n\tattachments?: IMessage['attachments'];\n\tparseUrls?: boolean;\n\tbot?: IMessage['bot'];\n\tgroupable?: IMessage['groupable'];\n\ttmid?: IMessage['tmid'];\n\tcustomFields?: IMessage['customFields'];\n};\n\ntype DefaultValues = {\n\tchannel: string | string[];\n\talias: string;\n\tavatar: string;\n\temoji: string;\n};\n\nexport const processWebhookMessage = async function (\n\tmessageObj: Payload,\n\tuser: IUser & { username: RequiredField<IUser, 'username'> },\n\tdefaultValues: DefaultValues = { channel: '', alias: '', avatar: '', emoji: '' },\n) {\n\tconst sentData = [];\n\n\tconst channels: Array<string> = [...new Set(ensureArray(messageObj.channel || messageObj.roomId || defaultValues.channel))];\n\n\tfor await (const channel of channels) {\n\t\tconst channelType = channel[0];\n\n\t\tlet channelValue = channel.substr(1);\n\t\tlet room;\n\n\t\tswitch (channelType) {\n\t\t\tcase '#':\n\t\t\t\troom = await getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tuser,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\tjoinChannel: true,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase '@':\n\t\t\t\troom = await getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tuser,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\ttype: 'd',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tchannelValue = channelType + channelValue;\n\n\t\t\t\t// Try to find the room by id or name if they didn't include the prefix.\n\t\t\t\troom = await getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tuser,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\tjoinChannel: true,\n\t\t\t\t\terrorOnEmpty: false,\n\t\t\t\t});\n\t\t\t\tif (room) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// We didn't get a room, let's try finding direct messages\n\t\t\t\troom = await getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tuser,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\ttryDirectByUserIdOnly: true,\n\t\t\t\t\ttype: 'd',\n\t\t\t\t});\n\t\t\t\tif (room) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// No room, so throw an error\n\t\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\n\t\tif (messageObj.attachments && !Array.isArray(messageObj.attachments)) {\n\t\t\tSystemLogger.warn({\n\t\t\t\tmsg: 'Attachments should be Array, ignoring value',\n\t\t\t\tattachments: messageObj.attachments,\n\t\t\t});\n\t\t\tmessageObj.attachments = undefined;\n\t\t}\n\n\t\tconst message: Partial<IMessage> & { parseUrls?: boolean } = {\n\t\t\talias: messageObj.username || messageObj.alias || defaultValues.alias,\n\t\t\tmsg: trim(messageObj.text || messageObj.msg || ''),\n\t\t\tattachments: messageObj.attachments || [],\n\t\t\tparseUrls: messageObj.parseUrls !== undefined ? messageObj.parseUrls : !messageObj.attachments,\n\t\t\tbot: messageObj.bot,\n\t\t\tgroupable: messageObj.groupable !== undefined ? messageObj.groupable : false,\n\t\t\ttmid: messageObj.tmid,\n\t\t\tcustomFields: messageObj.customFields,\n\t\t};\n\n\t\tif (!_.isEmpty(messageObj.icon_url) || !_.isEmpty(messageObj.avatar)) {\n\t\t\tmessage.avatar = messageObj.icon_url || messageObj.avatar;\n\t\t} else if (!_.isEmpty(messageObj.icon_emoji) || !_.isEmpty(messageObj.emoji)) {\n\t\t\tmessage.emoji = messageObj.icon_emoji || messageObj.emoji;\n\t\t} else if (!_.isEmpty(defaultValues.avatar)) {\n\t\t\tmessage.avatar = defaultValues.avatar;\n\t\t} else if (!_.isEmpty(defaultValues.emoji)) {\n\t\t\tmessage.emoji = defaultValues.emoji;\n\t\t}\n\n\t\tif (Array.isArray(message.attachments)) {\n\t\t\tfor (let i = 0; i < message.attachments.length; i++) {\n\t\t\t\tconst attachment = message.attachments[i] as MessageAttachment & { msg?: string };\n\t\t\t\tif (attachment.msg) {\n\t\t\t\t\tattachment.text = trim(attachment.msg);\n\t\t\t\t\tdelete attachment.msg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tawait validateRoomMessagePermissionsAsync(room, { uid: user._id, ...user });\n\n\t\tconst messageReturn = await sendMessage(user, message, room);\n\t\tsentData.push({ channel, message: messageReturn });\n\t}\n\n\treturn sentData;\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      processWebhookMessage: () => processWebhookMessage\n    });\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 0);\n    let _;\n    module.link(\"underscore\", {\n      default(v) {\n        _ = v;\n      }\n    }, 1);\n    let getRoomByNameOrIdWithOptionToJoin;\n    module.link(\"./getRoomByNameOrIdWithOptionToJoin\", {\n      getRoomByNameOrIdWithOptionToJoin(v) {\n        getRoomByNameOrIdWithOptionToJoin = v;\n      }\n    }, 2);\n    let sendMessage;\n    module.link(\"./sendMessage\", {\n      sendMessage(v) {\n        sendMessage = v;\n      }\n    }, 3);\n    let ensureArray;\n    module.link(\"../../../../lib/utils/arrayUtils\", {\n      ensureArray(v) {\n        ensureArray = v;\n      }\n    }, 4);\n    let trim;\n    module.link(\"../../../../lib/utils/stringUtils\", {\n      trim(v) {\n        trim = v;\n      }\n    }, 5);\n    let SystemLogger;\n    module.link(\"../../../../server/lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 6);\n    let validateRoomMessagePermissionsAsync;\n    module.link(\"../../../authorization/server/functions/canSendMessage\", {\n      validateRoomMessagePermissionsAsync(v) {\n        validateRoomMessagePermissionsAsync = v;\n      }\n    }, 7);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const processWebhookMessage = async function (messageObj, user) {\n      let defaultValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        channel: '',\n        alias: '',\n        avatar: '',\n        emoji: ''\n      };\n      const sentData = [];\n      const channels = [...new Set(ensureArray(messageObj.channel || messageObj.roomId || defaultValues.channel))];\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(channels), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const channel = _step.value;\n          {\n            const channelType = channel[0];\n            let channelValue = channel.substr(1);\n            let room;\n            switch (channelType) {\n              case '#':\n                room = await getRoomByNameOrIdWithOptionToJoin({\n                  user,\n                  nameOrId: channelValue,\n                  joinChannel: true\n                });\n                break;\n              case '@':\n                room = await getRoomByNameOrIdWithOptionToJoin({\n                  user,\n                  nameOrId: channelValue,\n                  type: 'd'\n                });\n                break;\n              default:\n                channelValue = channelType + channelValue;\n                // Try to find the room by id or name if they didn't include the prefix.\n                room = await getRoomByNameOrIdWithOptionToJoin({\n                  user,\n                  nameOrId: channelValue,\n                  joinChannel: true,\n                  errorOnEmpty: false\n                });\n                if (room) {\n                  break;\n                }\n                // We didn't get a room, let's try finding direct messages\n                room = await getRoomByNameOrIdWithOptionToJoin({\n                  user,\n                  nameOrId: channelValue,\n                  tryDirectByUserIdOnly: true,\n                  type: 'd'\n                });\n                if (room) {\n                  break;\n                }\n                // No room, so throw an error\n                throw new Meteor.Error('invalid-channel');\n            }\n            if (messageObj.attachments && !Array.isArray(messageObj.attachments)) {\n              SystemLogger.warn({\n                msg: 'Attachments should be Array, ignoring value',\n                attachments: messageObj.attachments\n              });\n              messageObj.attachments = undefined;\n            }\n            const message = {\n              alias: messageObj.username || messageObj.alias || defaultValues.alias,\n              msg: trim(messageObj.text || messageObj.msg || ''),\n              attachments: messageObj.attachments || [],\n              parseUrls: messageObj.parseUrls !== undefined ? messageObj.parseUrls : !messageObj.attachments,\n              bot: messageObj.bot,\n              groupable: messageObj.groupable !== undefined ? messageObj.groupable : false,\n              tmid: messageObj.tmid,\n              customFields: messageObj.customFields\n            };\n            if (!_.isEmpty(messageObj.icon_url) || !_.isEmpty(messageObj.avatar)) {\n              message.avatar = messageObj.icon_url || messageObj.avatar;\n            } else if (!_.isEmpty(messageObj.icon_emoji) || !_.isEmpty(messageObj.emoji)) {\n              message.emoji = messageObj.icon_emoji || messageObj.emoji;\n            } else if (!_.isEmpty(defaultValues.avatar)) {\n              message.avatar = defaultValues.avatar;\n            } else if (!_.isEmpty(defaultValues.emoji)) {\n              message.emoji = defaultValues.emoji;\n            }\n            if (Array.isArray(message.attachments)) {\n              for (let i = 0; i < message.attachments.length; i++) {\n                const attachment = message.attachments[i];\n                if (attachment.msg) {\n                  attachment.text = trim(attachment.msg);\n                  delete attachment.msg;\n                }\n              }\n            }\n            await validateRoomMessagePermissionsAsync(room, _objectSpread({\n              uid: user._id\n            }, user));\n            const messageReturn = await sendMessage(user, message, room);\n            sentData.push({\n              channel,\n              message: messageReturn\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      return sentData;\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","processWebhookMessage","Meteor","_","getRoomByNameOrIdWithOptionToJoin","sendMessage","ensureArray","trim","SystemLogger","validateRoomMessagePermissionsAsync","__reifyWaitForDeps__","messageObj","user","defaultValues","arguments","length","undefined","channel","alias","avatar","emoji","sentData","channels","Set","roomId","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","channelType","channelValue","substr","room","nameOrId","joinChannel","type","errorOnEmpty","tryDirectByUserIdOnly","Error","attachments","Array","isArray","warn","msg","message","username","text","parseUrls","bot","groupable","tmid","customFields","isEmpty","icon_url","icon_emoji","i","attachment","uid","_id","messageReturn","push","err","return","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/processWebhookMessage.ts"],"sourcesContent":["import type { IMessage, IUser, RequiredField, MessageAttachment } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { getRoomByNameOrIdWithOptionToJoin } from './getRoomByNameOrIdWithOptionToJoin';\nimport { sendMessage } from './sendMessage';\nimport { ensureArray } from '../../../../lib/utils/arrayUtils';\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { validateRoomMessagePermissionsAsync } from '../../../authorization/server/functions/canSendMessage';\n\ntype Payload = {\n\tchannel?: string | string[];\n\troomId?: string | string[];\n\ttext?: IMessage['msg'];\n\tmsg?: IMessage['msg']; // overridden if text is present\n\tusername?: IMessage['alias'];\n\talias?: IMessage['alias']; // overridden if username is present\n\ticon_emoji?: IMessage['emoji'];\n\temoji?: IMessage['emoji']; // overridden if icon_emoji is present\n\ticon_url?: IMessage['avatar'];\n\tavatar?: IMessage['avatar']; // overridden if icon_url is present\n\tattachments?: IMessage['attachments'];\n\tparseUrls?: boolean;\n\tbot?: IMessage['bot'];\n\tgroupable?: IMessage['groupable'];\n\ttmid?: IMessage['tmid'];\n\tcustomFields?: IMessage['customFields'];\n};\n\ntype DefaultValues = {\n\tchannel: string | string[];\n\talias: string;\n\tavatar: string;\n\temoji: string;\n};\n\nexport const processWebhookMessage = async function (\n\tmessageObj: Payload,\n\tuser: IUser & { username: RequiredField<IUser, 'username'> },\n\tdefaultValues: DefaultValues = { channel: '', alias: '', avatar: '', emoji: '' },\n) {\n\tconst sentData = [];\n\n\tconst channels: Array<string> = [...new Set(ensureArray(messageObj.channel || messageObj.roomId || defaultValues.channel))];\n\n\tfor await (const channel of channels) {\n\t\tconst channelType = channel[0];\n\n\t\tlet channelValue = channel.substr(1);\n\t\tlet room;\n\n\t\tswitch (channelType) {\n\t\t\tcase '#':\n\t\t\t\troom = await getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tuser,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\tjoinChannel: true,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase '@':\n\t\t\t\troom = await getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tuser,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\ttype: 'd',\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tchannelValue = channelType + channelValue;\n\n\t\t\t\t// Try to find the room by id or name if they didn't include the prefix.\n\t\t\t\troom = await getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tuser,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\tjoinChannel: true,\n\t\t\t\t\terrorOnEmpty: false,\n\t\t\t\t});\n\t\t\t\tif (room) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// We didn't get a room, let's try finding direct messages\n\t\t\t\troom = await getRoomByNameOrIdWithOptionToJoin({\n\t\t\t\t\tuser,\n\t\t\t\t\tnameOrId: channelValue,\n\t\t\t\t\ttryDirectByUserIdOnly: true,\n\t\t\t\t\ttype: 'd',\n\t\t\t\t});\n\t\t\t\tif (room) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// No room, so throw an error\n\t\t\t\tthrow new Meteor.Error('invalid-channel');\n\t\t}\n\n\t\tif (messageObj.attachments && !Array.isArray(messageObj.attachments)) {\n\t\t\tSystemLogger.warn({\n\t\t\t\tmsg: 'Attachments should be Array, ignoring value',\n\t\t\t\tattachments: messageObj.attachments,\n\t\t\t});\n\t\t\tmessageObj.attachments = undefined;\n\t\t}\n\n\t\tconst message: Partial<IMessage> & { parseUrls?: boolean } = {\n\t\t\talias: messageObj.username || messageObj.alias || defaultValues.alias,\n\t\t\tmsg: trim(messageObj.text || messageObj.msg || ''),\n\t\t\tattachments: messageObj.attachments || [],\n\t\t\tparseUrls: messageObj.parseUrls !== undefined ? messageObj.parseUrls : !messageObj.attachments,\n\t\t\tbot: messageObj.bot,\n\t\t\tgroupable: messageObj.groupable !== undefined ? messageObj.groupable : false,\n\t\t\ttmid: messageObj.tmid,\n\t\t\tcustomFields: messageObj.customFields,\n\t\t};\n\n\t\tif (!_.isEmpty(messageObj.icon_url) || !_.isEmpty(messageObj.avatar)) {\n\t\t\tmessage.avatar = messageObj.icon_url || messageObj.avatar;\n\t\t} else if (!_.isEmpty(messageObj.icon_emoji) || !_.isEmpty(messageObj.emoji)) {\n\t\t\tmessage.emoji = messageObj.icon_emoji || messageObj.emoji;\n\t\t} else if (!_.isEmpty(defaultValues.avatar)) {\n\t\t\tmessage.avatar = defaultValues.avatar;\n\t\t} else if (!_.isEmpty(defaultValues.emoji)) {\n\t\t\tmessage.emoji = defaultValues.emoji;\n\t\t}\n\n\t\tif (Array.isArray(message.attachments)) {\n\t\t\tfor (let i = 0; i < message.attachments.length; i++) {\n\t\t\t\tconst attachment = message.attachments[i] as MessageAttachment & { msg?: string };\n\t\t\t\tif (attachment.msg) {\n\t\t\t\t\tattachment.text = trim(attachment.msg);\n\t\t\t\t\tdelete attachment.msg;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tawait validateRoomMessagePermissionsAsync(room, { uid: user._id, ...user });\n\n\t\tconst messageReturn = await sendMessage(user, message, room);\n\t\tsentData.push({ channel, message: messageReturn });\n\t}\n\n\treturn sentData;\n};\n"],"mappings":";;;IACA,IAAAA,aAAiB;IAAAC,MAAM,CAAAC,IAAA,uCAAgB;MAAAC,QAAAC,CAAA;QAAAJ,aAAA,GAAAI,CAAA;MAAA;IAAA;IAAA,IAAAC,cAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAC,QAAAC,CAAA;QAAAC,cAAA,GAAAD,CAAA;MAAA;IAAA;IAAvCH,MAAA,CAAOK,MAAE;MAAMC,qBAAQ,EAAAA,CAAA,KAAgBA;IAAA;IAAA,IAAAC,MAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAM,OAAAJ,CAAA;QAAAI,MAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,CAAA;IAAAR,MAAA,CAAAC,IAAA;MAAAC,QAAAC,CAAA;QAAAK,CAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,iCAAA;IAAAT,MAAA,CAAAC,IAAA;MAAAQ,kCAAAN,CAAA;QAAAM,iCAAA,GAAAN,CAAA;MAAA;IAAA;IAAA,IAAAO,WAAA;IAAAV,MAAA,CAAAC,IAAA;MAAAS,YAAAP,CAAA;QAAAO,WAAA,GAAAP,CAAA;MAAA;IAAA;IAAA,IAAAQ,WAAA;IAAAX,MAAA,CAAAC,IAAA;MAAAU,YAAAR,CAAA;QAAAQ,WAAA,GAAAR,CAAA;MAAA;IAAA;IAAA,IAAAS,IAAA;IAAAZ,MAAA,CAAAC,IAAA;MAAAW,KAAAT,CAAA;QAAAS,IAAA,GAAAT,CAAA;MAAA;IAAA;IAAA,IAAAU,YAAA;IAAAb,MAAA,CAAAC,IAAA;MAAAY,aAAAV,CAAA;QAAAU,YAAA,GAAAV,CAAA;MAAA;IAAA;IAAA,IAAAW,mCAAA;IAAAd,MAAA,CAAAC,IAAA;MAAAa,oCAAAX,CAAA;QAAAW,mCAAA,GAAAX,CAAA;MAAA;IAAA;IAAA,IAAAY,oBAAA,WAAAA,oBAAA;IAoChC,MAAMT,qBAAqB,GAAG,eAAAA,CACpCU,UAAmB,EACnBC,IAA4D,EACoB;MAAA,IAAhFC,aAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA+B;QAAEG,OAAO,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAE,CAAE;MAEhF,MAAMC,QAAQ,GAAG,EAAE;MAEnB,MAAMC,QAAQ,GAAkB,CAAC,GAAG,IAAIC,GAAG,CAACjB,WAAW,CAACK,UAAU,CAACM,OAAO,IAAIN,UAAU,CAACa,MAAM,IAAIX,aAAa,CAACI,OAAO,CAAC,CAAC,CAAC;MAAC,IAAAQ,yBAAA;MAAA,IAAAC,iBAAA;MAAA,IAAAC,cAAA;MAAA;QAE5H,SAAAC,SAAA,GAAA7B,cAAA,CAA4BuB,QAAQ,GAAAO,KAAA,EAAAJ,yBAAA,KAAAI,KAAA,SAAAD,SAAA,CAAAE,IAAA,IAAAC,IAAA,EAAAN,yBAAA,UAAE;UAAA,MAArBR,OAAO,GAAAY,KAAA,CAAAG,KAAA;UAAA;YACvB,MAAMC,WAAW,GAAGhB,OAAO,CAAC,CAAC,CAAC;YAE9B,IAAIiB,YAAY,GAAGjB,OAAO,CAACkB,MAAM,CAAC,CAAC,CAAC;YACpC,IAAIC,IAAI;YAER,QAAQH,WAAW;cAClB,KAAK,GAAG;gBACPG,IAAI,GAAG,MAAMhC,iCAAiC,CAAC;kBAC9CQ,IAAI;kBACJyB,QAAQ,EAAEH,YAAY;kBACtBI,WAAW,EAAE;iBACb,CAAC;gBACF;cACD,KAAK,GAAG;gBACPF,IAAI,GAAG,MAAMhC,iCAAiC,CAAC;kBAC9CQ,IAAI;kBACJyB,QAAQ,EAAEH,YAAY;kBACtBK,IAAI,EAAE;iBACN,CAAC;gBACF;cACD;gBACCL,YAAY,GAAGD,WAAW,GAAGC,YAAY;gBAEzC;gBACAE,IAAI,GAAG,MAAMhC,iCAAiC,CAAC;kBAC9CQ,IAAI;kBACJyB,QAAQ,EAAEH,YAAY;kBACtBI,WAAW,EAAE,IAAI;kBACjBE,YAAY,EAAE;iBACd,CAAC;gBACF,IAAIJ,IAAI,EAAE;kBACT;gBACD;gBAEA;gBACAA,IAAI,GAAG,MAAMhC,iCAAiC,CAAC;kBAC9CQ,IAAI;kBACJyB,QAAQ,EAAEH,YAAY;kBACtBO,qBAAqB,EAAE,IAAI;kBAC3BF,IAAI,EAAE;iBACN,CAAC;gBACF,IAAIH,IAAI,EAAE;kBACT;gBACD;gBAEA;gBACA,MAAM,IAAIlC,MAAM,CAACwC,KAAK,CAAC,iBAAiB,CAAC;YAC3C;YAEA,IAAI/B,UAAU,CAACgC,WAAW,IAAI,CAACC,KAAK,CAACC,OAAO,CAAClC,UAAU,CAACgC,WAAW,CAAC,EAAE;cACrEnC,YAAY,CAACsC,IAAI,CAAC;gBACjBC,GAAG,EAAE,6CAA6C;gBAClDJ,WAAW,EAAEhC,UAAU,CAACgC;eACxB,CAAC;cACFhC,UAAU,CAACgC,WAAW,GAAG3B,SAAS;YACnC;YAEA,MAAMgC,OAAO,GAAgD;cAC5D9B,KAAK,EAAEP,UAAU,CAACsC,QAAQ,IAAItC,UAAU,CAACO,KAAK,IAAIL,aAAa,CAACK,KAAK;cACrE6B,GAAG,EAAExC,IAAI,CAACI,UAAU,CAACuC,IAAI,IAAIvC,UAAU,CAACoC,GAAG,IAAI,EAAE,CAAC;cAClDJ,WAAW,EAAEhC,UAAU,CAACgC,WAAW,IAAI,EAAE;cACzCQ,SAAS,EAAExC,UAAU,CAACwC,SAAS,KAAKnC,SAAS,GAAGL,UAAU,CAACwC,SAAS,GAAG,CAACxC,UAAU,CAACgC,WAAW;cAC9FS,GAAG,EAAEzC,UAAU,CAACyC,GAAG;cACnBC,SAAS,EAAE1C,UAAU,CAAC0C,SAAS,KAAKrC,SAAS,GAAGL,UAAU,CAAC0C,SAAS,GAAG,KAAK;cAC5EC,IAAI,EAAE3C,UAAU,CAAC2C,IAAI;cACrBC,YAAY,EAAE5C,UAAU,CAAC4C;aACzB;YAED,IAAI,CAACpD,CAAC,CAACqD,OAAO,CAAC7C,UAAU,CAAC8C,QAAQ,CAAC,IAAI,CAACtD,CAAC,CAACqD,OAAO,CAAC7C,UAAU,CAACQ,MAAM,CAAC,EAAE;cACrE6B,OAAO,CAAC7B,MAAM,GAAGR,UAAU,CAAC8C,QAAQ,IAAI9C,UAAU,CAACQ,MAAM;YAC1D,CAAC,MAAM,IAAI,CAAChB,CAAC,CAACqD,OAAO,CAAC7C,UAAU,CAAC+C,UAAU,CAAC,IAAI,CAACvD,CAAC,CAACqD,OAAO,CAAC7C,UAAU,CAACS,KAAK,CAAC,EAAE;cAC7E4B,OAAO,CAAC5B,KAAK,GAAGT,UAAU,CAAC+C,UAAU,IAAI/C,UAAU,CAACS,KAAK;YAC1D,CAAC,MAAM,IAAI,CAACjB,CAAC,CAACqD,OAAO,CAAC3C,aAAa,CAACM,MAAM,CAAC,EAAE;cAC5C6B,OAAO,CAAC7B,MAAM,GAAGN,aAAa,CAACM,MAAM;YACtC,CAAC,MAAM,IAAI,CAAChB,CAAC,CAACqD,OAAO,CAAC3C,aAAa,CAACO,KAAK,CAAC,EAAE;cAC3C4B,OAAO,CAAC5B,KAAK,GAAGP,aAAa,CAACO,KAAK;YACpC;YAEA,IAAIwB,KAAK,CAACC,OAAO,CAACG,OAAO,CAACL,WAAW,CAAC,EAAE;cACvC,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,OAAO,CAACL,WAAW,CAAC5B,MAAM,EAAE4C,CAAC,EAAE,EAAE;gBACpD,MAAMC,UAAU,GAAGZ,OAAO,CAACL,WAAW,CAACgB,CAAC,CAAyC;gBACjF,IAAIC,UAAU,CAACb,GAAG,EAAE;kBACnBa,UAAU,CAACV,IAAI,GAAG3C,IAAI,CAACqD,UAAU,CAACb,GAAG,CAAC;kBACtC,OAAOa,UAAU,CAACb,GAAG;gBACtB;cACD;YACD;YAEA,MAAMtC,mCAAmC,CAAC2B,IAAI,EAAA1C,aAAA;cAAImE,GAAG,EAAEjD,IAAI,CAACkD;YAAG,GAAKlD,IAAI,CAAE,CAAC;YAE3E,MAAMmD,aAAa,GAAG,MAAM1D,WAAW,CAACO,IAAI,EAAEoC,OAAO,EAAEZ,IAAI,CAAC;YAC5Df,QAAQ,CAAC2C,IAAI,CAAC;cAAE/C,OAAO;cAAE+B,OAAO,EAAEe;YAAa,CAAE,CAAC;UAAC;QACpD;MAAC,SAAAE,GAAA;QAAAvC,iBAAA;QAAAC,cAAA,GAAAsC,GAAA;MAAA;QAAA;UAAA,IAAAxC,yBAAA,IAAAG,SAAA,CAAAsC,MAAA;YAAA,MAAAtC,SAAA,CAAAsC,MAAA;UAAA;QAAA;UAAA,IAAAxC,iBAAA;YAAA,MAAAC,cAAA;UAAA;QAAA;MAAA;MAED,OAAON,QAAQ;IAChB,CAAC;IAAC8C,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"fab7a26075a39e844b77ad4eff297fa3036f48e6"}
