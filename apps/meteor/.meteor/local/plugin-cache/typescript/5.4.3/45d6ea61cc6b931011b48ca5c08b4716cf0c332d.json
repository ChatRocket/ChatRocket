{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/push.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/push.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/push.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/push.ts","sourceRoot":"","sources":["app/api/server/v1/push.ts"],"names":[],"mappings":"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","sourcesContent":["import { Messages, AppsTokens, Users, Rooms, Settings } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { executePushTest } from '../../../../server/lib/pushConfig';\nimport { canAccessRoomAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport PushNotification from '../../../push-notifications/server/lib/PushNotification';\nimport { settings } from '../../../settings/server';\nimport { API } from '../api';\n\nAPI.v1.addRoute(\n\t'push.token',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst { id, type, value, appName } = this.bodyParams;\n\n\t\t\tif (id && typeof id !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-id-param-not-valid', 'The required \"id\" body param is invalid.');\n\t\t\t}\n\n\t\t\tconst deviceId = id || Random.id();\n\n\t\t\tif (!type || (type !== 'apn' && type !== 'gcm')) {\n\t\t\t\tthrow new Meteor.Error('error-type-param-not-valid', 'The required \"type\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tif (!value || typeof value !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-token-param-not-valid', 'The required \"value\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tif (!appName || typeof appName !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-appName-param-not-valid', 'The required \"appName\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tconst result = await Meteor.callAsync('raix:push-update', {\n\t\t\t\tid: deviceId,\n\t\t\t\ttoken: { [type]: value },\n\t\t\t\tauthToken: this.request.headers['x-auth-token'],\n\t\t\t\tappName,\n\t\t\t\tuserId: this.userId,\n\t\t\t});\n\n\t\t\treturn API.v1.success({ result });\n\t\t},\n\t\tasync delete() {\n\t\t\tconst { token } = this.bodyParams;\n\n\t\t\tif (!token || typeof token !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-token-param-not-valid', 'The required \"token\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tconst affectedRecords = (\n\t\t\t\tawait AppsTokens.deleteMany({\n\t\t\t\t\t$or: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'token.apn': token,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'token.gcm': token,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t})\n\t\t\t).deletedCount;\n\n\t\t\tif (affectedRecords === 0) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'push.get',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst params = this.queryParams;\n\t\t\tcheck(\n\t\t\t\tparams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tid: String,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst receiver = await Users.findOneById(this.userId);\n\t\t\tif (!receiver) {\n\t\t\t\tthrow new Error('error-user-not-found');\n\t\t\t}\n\n\t\t\tconst message = await Messages.findOneById(params.id);\n\t\t\tif (!message) {\n\t\t\t\tthrow new Error('error-message-not-found');\n\t\t\t}\n\n\t\t\tconst room = await Rooms.findOneById(message.rid);\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('error-room-not-found');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomAsync(room, receiver))) {\n\t\t\t\tthrow new Error('error-not-allowed');\n\t\t\t}\n\n\t\t\tconst data = await PushNotification.getNotificationForMessageId({ receiver, room, message });\n\n\t\t\treturn API.v1.success({ data });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'push.info',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst defaultGateway = (await Settings.findOneById('Push_gateway', { projection: { packageValue: 1 } }))?.packageValue;\n\t\t\tconst defaultPushGateway = settings.get('Push_gateway') === defaultGateway;\n\t\t\treturn API.v1.success({\n\t\t\t\tpushGatewayEnabled: settings.get('Push_enable'),\n\t\t\t\tdefaultPushGateway,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'push.test',\n\t{\n\t\tauthRequired: true,\n\t\trateLimiterOptions: {\n\t\t\tnumRequestsAllowed: 1,\n\t\t\tintervalTimeInMS: 1000,\n\t\t},\n\t\tpermissionsRequired: ['test-push-notifications'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tif (settings.get('Push_enable') !== true) {\n\t\t\t\tthrow new Meteor.Error('error-push-disabled', 'Push is disabled', {\n\t\t\t\t\tmethod: 'push_test',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst tokensCount = await executePushTest(this.userId, this.user.username);\n\t\t\treturn API.v1.success({ tokensCount });\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/push.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/push.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/push.ts","sourceRoot":"","sources":["app/api/server/v1/push.ts"],"names":[],"mappings":"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","sourcesContent":["import { Messages, AppsTokens, Users, Rooms, Settings } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { executePushTest } from '../../../../server/lib/pushConfig';\nimport { canAccessRoomAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport PushNotification from '../../../push-notifications/server/lib/PushNotification';\nimport { settings } from '../../../settings/server';\nimport { API } from '../api';\n\nAPI.v1.addRoute(\n\t'push.token',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst { id, type, value, appName } = this.bodyParams;\n\n\t\t\tif (id && typeof id !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-id-param-not-valid', 'The required \"id\" body param is invalid.');\n\t\t\t}\n\n\t\t\tconst deviceId = id || Random.id();\n\n\t\t\tif (!type || (type !== 'apn' && type !== 'gcm')) {\n\t\t\t\tthrow new Meteor.Error('error-type-param-not-valid', 'The required \"type\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tif (!value || typeof value !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-token-param-not-valid', 'The required \"value\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tif (!appName || typeof appName !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-appName-param-not-valid', 'The required \"appName\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tconst result = await Meteor.callAsync('raix:push-update', {\n\t\t\t\tid: deviceId,\n\t\t\t\ttoken: { [type]: value },\n\t\t\t\tauthToken: this.request.headers['x-auth-token'],\n\t\t\t\tappName,\n\t\t\t\tuserId: this.userId,\n\t\t\t});\n\n\t\t\treturn API.v1.success({ result });\n\t\t},\n\t\tasync delete() {\n\t\t\tconst { token } = this.bodyParams;\n\n\t\t\tif (!token || typeof token !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-token-param-not-valid', 'The required \"token\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tconst affectedRecords = (\n\t\t\t\tawait AppsTokens.deleteMany({\n\t\t\t\t\t$or: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'token.apn': token,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'token.gcm': token,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t})\n\t\t\t).deletedCount;\n\n\t\t\tif (affectedRecords === 0) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'push.get',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst params = this.queryParams;\n\t\t\tcheck(\n\t\t\t\tparams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tid: String,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst receiver = await Users.findOneById(this.userId);\n\t\t\tif (!receiver) {\n\t\t\t\tthrow new Error('error-user-not-found');\n\t\t\t}\n\n\t\t\tconst message = await Messages.findOneById(params.id);\n\t\t\tif (!message) {\n\t\t\t\tthrow new Error('error-message-not-found');\n\t\t\t}\n\n\t\t\tconst room = await Rooms.findOneById(message.rid);\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('error-room-not-found');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomAsync(room, receiver))) {\n\t\t\t\tthrow new Error('error-not-allowed');\n\t\t\t}\n\n\t\t\tconst data = await PushNotification.getNotificationForMessageId({ receiver, room, message });\n\n\t\t\treturn API.v1.success({ data });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'push.info',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst defaultGateway = (await Settings.findOneById('Push_gateway', { projection: { packageValue: 1 } }))?.packageValue;\n\t\t\tconst defaultPushGateway = settings.get('Push_gateway') === defaultGateway;\n\t\t\treturn API.v1.success({\n\t\t\t\tpushGatewayEnabled: settings.get('Push_enable'),\n\t\t\t\tdefaultPushGateway,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'push.test',\n\t{\n\t\tauthRequired: true,\n\t\trateLimiterOptions: {\n\t\t\tnumRequestsAllowed: 1,\n\t\t\tintervalTimeInMS: 1000,\n\t\t},\n\t\tpermissionsRequired: ['test-push-notifications'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tif (settings.get('Push_enable') !== true) {\n\t\t\t\tthrow new Meteor.Error('error-push-disabled', 'Push is disabled', {\n\t\t\t\t\tmethod: 'push_test',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst tokensCount = await executePushTest(this.userId, this.user.username);\n\t\t\treturn API.v1.success({ tokensCount });\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Messages, AppsTokens, Users, Rooms, Settings;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      AppsTokens(v) {\n        AppsTokens = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      },\n      Settings(v) {\n        Settings = v;\n      }\n    }, 0);\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 1);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let executePushTest;\n    module.link(\"../../../../server/lib/pushConfig\", {\n      executePushTest(v) {\n        executePushTest = v;\n      }\n    }, 4);\n    let canAccessRoomAsync;\n    module.link(\"../../../authorization/server/functions/canAccessRoom\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 5);\n    let PushNotification;\n    module.link(\"../../../push-notifications/server/lib/PushNotification\", {\n      default(v) {\n        PushNotification = v;\n      }\n    }, 6);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 7);\n    let API;\n    module.link(\"../api\", {\n      API(v) {\n        API = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('push.token', {\n      authRequired: true\n    }, {\n      async post() {\n        const {\n          id,\n          type,\n          value,\n          appName\n        } = this.bodyParams;\n        if (id && typeof id !== 'string') {\n          throw new Meteor.Error('error-id-param-not-valid', 'The required \"id\" body param is invalid.');\n        }\n        const deviceId = id || Random.id();\n        if (!type || type !== 'apn' && type !== 'gcm') {\n          throw new Meteor.Error('error-type-param-not-valid', 'The required \"type\" body param is missing or invalid.');\n        }\n        if (!value || typeof value !== 'string') {\n          throw new Meteor.Error('error-token-param-not-valid', 'The required \"value\" body param is missing or invalid.');\n        }\n        if (!appName || typeof appName !== 'string') {\n          throw new Meteor.Error('error-appName-param-not-valid', 'The required \"appName\" body param is missing or invalid.');\n        }\n        const result = await Meteor.callAsync('raix:push-update', {\n          id: deviceId,\n          token: {\n            [type]: value\n          },\n          authToken: this.request.headers['x-auth-token'],\n          appName,\n          userId: this.userId\n        });\n        return API.v1.success({\n          result\n        });\n      },\n      async delete() {\n        const {\n          token\n        } = this.bodyParams;\n        if (!token || typeof token !== 'string') {\n          throw new Meteor.Error('error-token-param-not-valid', 'The required \"token\" body param is missing or invalid.');\n        }\n        const affectedRecords = (await AppsTokens.deleteMany({\n          $or: [{\n            'token.apn': token\n          }, {\n            'token.gcm': token\n          }],\n          userId: this.userId\n        })).deletedCount;\n        if (affectedRecords === 0) {\n          return API.v1.notFound();\n        }\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('push.get', {\n      authRequired: true\n    }, {\n      async get() {\n        const params = this.queryParams;\n        check(params, Match.ObjectIncluding({\n          id: String\n        }));\n        const receiver = await Users.findOneById(this.userId);\n        if (!receiver) {\n          throw new Error('error-user-not-found');\n        }\n        const message = await Messages.findOneById(params.id);\n        if (!message) {\n          throw new Error('error-message-not-found');\n        }\n        const room = await Rooms.findOneById(message.rid);\n        if (!room) {\n          throw new Error('error-room-not-found');\n        }\n        if (!(await canAccessRoomAsync(room, receiver))) {\n          throw new Error('error-not-allowed');\n        }\n        const data = await PushNotification.getNotificationForMessageId({\n          receiver,\n          room,\n          message\n        });\n        return API.v1.success({\n          data\n        });\n      }\n    });\n    API.v1.addRoute('push.info', {\n      authRequired: true\n    }, {\n      async get() {\n        var _await$Settings$findO;\n        const defaultGateway = (_await$Settings$findO = await Settings.findOneById('Push_gateway', {\n          projection: {\n            packageValue: 1\n          }\n        })) === null || _await$Settings$findO === void 0 ? void 0 : _await$Settings$findO.packageValue;\n        const defaultPushGateway = settings.get('Push_gateway') === defaultGateway;\n        return API.v1.success({\n          pushGatewayEnabled: settings.get('Push_enable'),\n          defaultPushGateway\n        });\n      }\n    });\n    API.v1.addRoute('push.test', {\n      authRequired: true,\n      rateLimiterOptions: {\n        numRequestsAllowed: 1,\n        intervalTimeInMS: 1000\n      },\n      permissionsRequired: ['test-push-notifications']\n    }, {\n      async post() {\n        if (settings.get('Push_enable') !== true) {\n          throw new Meteor.Error('error-push-disabled', 'Push is disabled', {\n            method: 'push_test'\n          });\n        }\n        const tokensCount = await executePushTest(this.userId, this.user.username);\n        return API.v1.success({\n          tokensCount\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Messages","AppsTokens","Users","Rooms","Settings","module","link","v","Random","Match","check","Meteor","executePushTest","canAccessRoomAsync","PushNotification","default","settings","API","__reifyWaitForDeps__","v1","addRoute","authRequired","post","id","type","value","appName","bodyParams","Error","deviceId","result","callAsync","token","authToken","request","headers","userId","success","delete","affectedRecords","deleteMany","$or","deletedCount","notFound","get","params","queryParams","ObjectIncluding","String","receiver","findOneById","message","room","rid","data","getNotificationForMessageId","_await$Settings$findO","defaultGateway","projection","packageValue","defaultPushGateway","pushGatewayEnabled","rateLimiterOptions","numRequestsAllowed","intervalTimeInMS","permissionsRequired","method","tokensCount","user","username","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/v1/push.ts"],"sourcesContent":["import { Messages, AppsTokens, Users, Rooms, Settings } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { executePushTest } from '../../../../server/lib/pushConfig';\nimport { canAccessRoomAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport PushNotification from '../../../push-notifications/server/lib/PushNotification';\nimport { settings } from '../../../settings/server';\nimport { API } from '../api';\n\nAPI.v1.addRoute(\n\t'push.token',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tconst { id, type, value, appName } = this.bodyParams;\n\n\t\t\tif (id && typeof id !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-id-param-not-valid', 'The required \"id\" body param is invalid.');\n\t\t\t}\n\n\t\t\tconst deviceId = id || Random.id();\n\n\t\t\tif (!type || (type !== 'apn' && type !== 'gcm')) {\n\t\t\t\tthrow new Meteor.Error('error-type-param-not-valid', 'The required \"type\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tif (!value || typeof value !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-token-param-not-valid', 'The required \"value\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tif (!appName || typeof appName !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-appName-param-not-valid', 'The required \"appName\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tconst result = await Meteor.callAsync('raix:push-update', {\n\t\t\t\tid: deviceId,\n\t\t\t\ttoken: { [type]: value },\n\t\t\t\tauthToken: this.request.headers['x-auth-token'],\n\t\t\t\tappName,\n\t\t\t\tuserId: this.userId,\n\t\t\t});\n\n\t\t\treturn API.v1.success({ result });\n\t\t},\n\t\tasync delete() {\n\t\t\tconst { token } = this.bodyParams;\n\n\t\t\tif (!token || typeof token !== 'string') {\n\t\t\t\tthrow new Meteor.Error('error-token-param-not-valid', 'The required \"token\" body param is missing or invalid.');\n\t\t\t}\n\n\t\t\tconst affectedRecords = (\n\t\t\t\tawait AppsTokens.deleteMany({\n\t\t\t\t\t$or: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'token.apn': token,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'token.gcm': token,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tuserId: this.userId,\n\t\t\t\t})\n\t\t\t).deletedCount;\n\n\t\t\tif (affectedRecords === 0) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'push.get',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst params = this.queryParams;\n\t\t\tcheck(\n\t\t\t\tparams,\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tid: String,\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst receiver = await Users.findOneById(this.userId);\n\t\t\tif (!receiver) {\n\t\t\t\tthrow new Error('error-user-not-found');\n\t\t\t}\n\n\t\t\tconst message = await Messages.findOneById(params.id);\n\t\t\tif (!message) {\n\t\t\t\tthrow new Error('error-message-not-found');\n\t\t\t}\n\n\t\t\tconst room = await Rooms.findOneById(message.rid);\n\t\t\tif (!room) {\n\t\t\t\tthrow new Error('error-room-not-found');\n\t\t\t}\n\n\t\t\tif (!(await canAccessRoomAsync(room, receiver))) {\n\t\t\t\tthrow new Error('error-not-allowed');\n\t\t\t}\n\n\t\t\tconst data = await PushNotification.getNotificationForMessageId({ receiver, room, message });\n\n\t\t\treturn API.v1.success({ data });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'push.info',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst defaultGateway = (await Settings.findOneById('Push_gateway', { projection: { packageValue: 1 } }))?.packageValue;\n\t\t\tconst defaultPushGateway = settings.get('Push_gateway') === defaultGateway;\n\t\t\treturn API.v1.success({\n\t\t\t\tpushGatewayEnabled: settings.get('Push_enable'),\n\t\t\t\tdefaultPushGateway,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'push.test',\n\t{\n\t\tauthRequired: true,\n\t\trateLimiterOptions: {\n\t\t\tnumRequestsAllowed: 1,\n\t\t\tintervalTimeInMS: 1000,\n\t\t},\n\t\tpermissionsRequired: ['test-push-notifications'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tif (settings.get('Push_enable') !== true) {\n\t\t\t\tthrow new Meteor.Error('error-push-disabled', 'Push is disabled', {\n\t\t\t\t\tmethod: 'push_test',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst tokensCount = await executePushTest(this.userId, this.user.username);\n\t\t\treturn API.v1.success({ tokensCount });\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"45d6ea61cc6b931011b48ca5c08b4716cf0c332d"}
