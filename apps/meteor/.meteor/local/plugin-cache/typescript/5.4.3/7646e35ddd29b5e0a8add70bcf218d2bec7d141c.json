{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer-pending-files/server/PendingFileImporter.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/importer-pending-files/server/PendingFileImporter.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer-pending-files/server/PendingFileImporter.ts","inputSourceMap":{"version":3,"file":"app/importer-pending-files/server/PendingFileImporter.ts","sourceRoot":"","sources":["app/importer-pending-files/server/PendingFileImporter.ts"],"names":[],"mappings":"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","sourcesContent":["import http from 'http';\nimport https from 'https';\n\nimport { api } from '@rocket.chat/core-services';\nimport type { IImport, MessageAttachment, IUpload } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\n\nimport { FileUpload } from '../../file-upload/server';\nimport { Importer, ProgressStep, Selection } from '../../importer/server';\nimport type { ConverterOptions } from '../../importer/server/classes/ImportDataConverter';\nimport type { ImporterProgress } from '../../importer/server/classes/ImporterProgress';\nimport type { ImporterInfo } from '../../importer/server/definitions/ImporterInfo';\n\nexport class PendingFileImporter extends Importer {\n\tconstructor(info: ImporterInfo, importRecord: IImport, converterOptions: ConverterOptions = {}) {\n\t\tsuper(info, importRecord, converterOptions);\n\t}\n\n\tasync prepareFileCount() {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tawait super.updateProgress(ProgressStep.PREPARING_STARTED);\n\n\t\tconst fileCount = await Messages.countAllImportedMessagesWithFilesToDownload();\n\t\tif (fileCount === 0) {\n\t\t\tawait super.updateProgress(ProgressStep.DONE);\n\t\t\treturn 0;\n\t\t}\n\n\t\tawait this.updateRecord({ 'count.messages': fileCount, 'messagesstatus': null });\n\t\tawait this.addCountToTotal(fileCount);\n\n\t\tconst fileData = new Selection(this.info.name, [], [], fileCount);\n\t\tawait this.updateRecord({ fileData });\n\n\t\tawait super.updateProgress(ProgressStep.IMPORTING_FILES);\n\t\tsetImmediate(() => {\n\t\t\tvoid this.startImport(fileData);\n\t\t});\n\n\t\treturn fileCount;\n\t}\n\n\tasync startImport(importSelection: Selection): Promise<ImporterProgress> {\n\t\tconst downloadedFileIds: string[] = [];\n\t\tconst maxFileCount = 10;\n\t\tconst maxFileSize = 1024 * 1024 * 500;\n\n\t\tlet count = 0;\n\t\tlet currentSize = 0;\n\t\tlet nextSize = 0;\n\n\t\tconst waitForFiles = async () => {\n\t\t\tif (count + 1 < maxFileCount && currentSize + nextSize < maxFileSize) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\tconst handler = setInterval(() => {\n\t\t\t\t\tif (count + 1 >= maxFileCount) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentSize + nextSize >= maxFileSize && count > 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearInterval(handler);\n\t\t\t\t\tresolve();\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t};\n\n\t\tconst completeFile = async (details: { size: number }) => {\n\t\t\tawait this.addCountCompleted(1);\n\t\t\tcount--;\n\t\t\tcurrentSize -= details.size;\n\t\t};\n\n\t\tconst logError = this.logger.error.bind(this.logger);\n\n\t\ttry {\n\t\t\tconst pendingFileMessageList = Messages.findAllImportedMessagesWithFilesToDownload();\n\t\t\tconst importedRoomIds = new Set<string>();\n\t\t\tfor await (const message of pendingFileMessageList) {\n\t\t\t\ttry {\n\t\t\t\t\tconst { _importFile } = message;\n\n\t\t\t\t\tif (!_importFile || _importFile.downloaded || downloadedFileIds.includes(_importFile.id)) {\n\t\t\t\t\t\tawait this.addCountCompleted(1);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst url = _importFile.downloadUrl;\n\t\t\t\t\tif (!url?.startsWith('http')) {\n\t\t\t\t\t\tawait this.addCountCompleted(1);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst details: { message_id: string; name: string; size: number; userId: string; rid: string; type?: string } = {\n\t\t\t\t\t\tmessage_id: `${message._id}-file-${_importFile.id}`,\n\t\t\t\t\t\tname: _importFile.name || Random.id(),\n\t\t\t\t\t\tsize: _importFile.size || 0,\n\t\t\t\t\t\tuserId: message.u._id,\n\t\t\t\t\t\trid: message.rid,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst requestModule = /https/i.test(url) ? https : http;\n\t\t\t\t\tconst fileStore = FileUpload.getStore('Uploads');\n\n\t\t\t\t\tnextSize = details.size;\n\t\t\t\t\tawait waitForFiles();\n\t\t\t\t\tcount++;\n\t\t\t\t\tcurrentSize += nextSize;\n\t\t\t\t\tdownloadedFileIds.push(_importFile.id);\n\n\t\t\t\t\trequestModule.get(url, (res) => {\n\t\t\t\t\t\tconst contentType = res.headers['content-type'];\n\t\t\t\t\t\tif (!details.type && contentType) {\n\t\t\t\t\t\t\tdetails.type = contentType;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst rawData: Uint8Array[] = [];\n\t\t\t\t\t\tres.on('data', (chunk) => {\n\t\t\t\t\t\t\trawData.push(chunk);\n\n\t\t\t\t\t\t\t// Update progress more often on large files\n\t\t\t\t\t\t\tthis.reportProgress();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tres.on('error', async (error) => {\n\t\t\t\t\t\t\tawait completeFile(details);\n\t\t\t\t\t\t\tlogError(error);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tres.on('end', async () => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t// Bypass the fileStore filters\n\t\t\t\t\t\t\t\tconst file = await fileStore._doInsert(details, Buffer.concat(rawData));\n\n\t\t\t\t\t\t\t\tconst url = FileUpload.getPath(`${file._id}/${encodeURI(file.name || '')}`);\n\t\t\t\t\t\t\t\tconst attachment = this.getMessageAttachment(file, url);\n\n\t\t\t\t\t\t\t\tawait Messages.setImportFileRocketChatAttachment(_importFile.id, url, attachment);\n\t\t\t\t\t\t\t\tawait completeFile(details);\n\t\t\t\t\t\t\t\timportedRoomIds.add(message.rid);\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tawait completeFile(details);\n\t\t\t\t\t\t\t\tlogError(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logger.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvoid api.broadcast('notify.importedMessages', { roomIds: Array.from(importedRoomIds) });\n\t\t} catch (error) {\n\t\t\t// If the cursor expired, restart the method\n\t\t\tif (this.isCursorNotFoundError(error)) {\n\t\t\t\tthis.logger.info('CursorNotFound');\n\t\t\t\treturn this.startImport(importSelection);\n\t\t\t}\n\n\t\t\tawait super.updateProgress(ProgressStep.ERROR);\n\t\t\tthrow error;\n\t\t}\n\n\t\tawait super.updateProgress(ProgressStep.DONE);\n\t\treturn this.getProgress();\n\t}\n\n\tgetMessageAttachment(file: IUpload, url: string): MessageAttachment {\n\t\tif (file.type) {\n\t\t\tif (/^image\\/.+/.test(file.type)) {\n\t\t\t\treturn {\n\t\t\t\t\ttitle: file.name,\n\t\t\t\t\ttitle_link: url,\n\t\t\t\t\timage_url: url,\n\t\t\t\t\timage_type: file.type,\n\t\t\t\t\timage_size: file.size,\n\t\t\t\t\timage_dimensions: file.identify ? file.identify.size : undefined,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (/^audio\\/.+/.test(file.type)) {\n\t\t\t\treturn {\n\t\t\t\t\ttitle: file.name,\n\t\t\t\t\ttitle_link: url,\n\t\t\t\t\taudio_url: url,\n\t\t\t\t\taudio_type: file.type,\n\t\t\t\t\taudio_size: file.size,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (/^video\\/.+/.test(file.type)) {\n\t\t\t\treturn {\n\t\t\t\t\ttitle: file.name,\n\t\t\t\t\ttitle_link: url,\n\t\t\t\t\tvideo_url: url,\n\t\t\t\t\tvideo_type: file.type,\n\t\t\t\t\tvideo_size: file.size,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttitle: file.name,\n\t\t\ttitle_link: url,\n\t\t};\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/importer-pending-files/server/PendingFileImporter.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/importer-pending-files/server/PendingFileImporter.ts","inputSourceMap":{"version":3,"file":"app/importer-pending-files/server/PendingFileImporter.ts","sourceRoot":"","sources":["app/importer-pending-files/server/PendingFileImporter.ts"],"names":[],"mappings":"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","sourcesContent":["import http from 'http';\nimport https from 'https';\n\nimport { api } from '@rocket.chat/core-services';\nimport type { IImport, MessageAttachment, IUpload } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\n\nimport { FileUpload } from '../../file-upload/server';\nimport { Importer, ProgressStep, Selection } from '../../importer/server';\nimport type { ConverterOptions } from '../../importer/server/classes/ImportDataConverter';\nimport type { ImporterProgress } from '../../importer/server/classes/ImporterProgress';\nimport type { ImporterInfo } from '../../importer/server/definitions/ImporterInfo';\n\nexport class PendingFileImporter extends Importer {\n\tconstructor(info: ImporterInfo, importRecord: IImport, converterOptions: ConverterOptions = {}) {\n\t\tsuper(info, importRecord, converterOptions);\n\t}\n\n\tasync prepareFileCount() {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tawait super.updateProgress(ProgressStep.PREPARING_STARTED);\n\n\t\tconst fileCount = await Messages.countAllImportedMessagesWithFilesToDownload();\n\t\tif (fileCount === 0) {\n\t\t\tawait super.updateProgress(ProgressStep.DONE);\n\t\t\treturn 0;\n\t\t}\n\n\t\tawait this.updateRecord({ 'count.messages': fileCount, 'messagesstatus': null });\n\t\tawait this.addCountToTotal(fileCount);\n\n\t\tconst fileData = new Selection(this.info.name, [], [], fileCount);\n\t\tawait this.updateRecord({ fileData });\n\n\t\tawait super.updateProgress(ProgressStep.IMPORTING_FILES);\n\t\tsetImmediate(() => {\n\t\t\tvoid this.startImport(fileData);\n\t\t});\n\n\t\treturn fileCount;\n\t}\n\n\tasync startImport(importSelection: Selection): Promise<ImporterProgress> {\n\t\tconst downloadedFileIds: string[] = [];\n\t\tconst maxFileCount = 10;\n\t\tconst maxFileSize = 1024 * 1024 * 500;\n\n\t\tlet count = 0;\n\t\tlet currentSize = 0;\n\t\tlet nextSize = 0;\n\n\t\tconst waitForFiles = async () => {\n\t\t\tif (count + 1 < maxFileCount && currentSize + nextSize < maxFileSize) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\tconst handler = setInterval(() => {\n\t\t\t\t\tif (count + 1 >= maxFileCount) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentSize + nextSize >= maxFileSize && count > 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearInterval(handler);\n\t\t\t\t\tresolve();\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t};\n\n\t\tconst completeFile = async (details: { size: number }) => {\n\t\t\tawait this.addCountCompleted(1);\n\t\t\tcount--;\n\t\t\tcurrentSize -= details.size;\n\t\t};\n\n\t\tconst logError = this.logger.error.bind(this.logger);\n\n\t\ttry {\n\t\t\tconst pendingFileMessageList = Messages.findAllImportedMessagesWithFilesToDownload();\n\t\t\tconst importedRoomIds = new Set<string>();\n\t\t\tfor await (const message of pendingFileMessageList) {\n\t\t\t\ttry {\n\t\t\t\t\tconst { _importFile } = message;\n\n\t\t\t\t\tif (!_importFile || _importFile.downloaded || downloadedFileIds.includes(_importFile.id)) {\n\t\t\t\t\t\tawait this.addCountCompleted(1);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst url = _importFile.downloadUrl;\n\t\t\t\t\tif (!url?.startsWith('http')) {\n\t\t\t\t\t\tawait this.addCountCompleted(1);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst details: { message_id: string; name: string; size: number; userId: string; rid: string; type?: string } = {\n\t\t\t\t\t\tmessage_id: `${message._id}-file-${_importFile.id}`,\n\t\t\t\t\t\tname: _importFile.name || Random.id(),\n\t\t\t\t\t\tsize: _importFile.size || 0,\n\t\t\t\t\t\tuserId: message.u._id,\n\t\t\t\t\t\trid: message.rid,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst requestModule = /https/i.test(url) ? https : http;\n\t\t\t\t\tconst fileStore = FileUpload.getStore('Uploads');\n\n\t\t\t\t\tnextSize = details.size;\n\t\t\t\t\tawait waitForFiles();\n\t\t\t\t\tcount++;\n\t\t\t\t\tcurrentSize += nextSize;\n\t\t\t\t\tdownloadedFileIds.push(_importFile.id);\n\n\t\t\t\t\trequestModule.get(url, (res) => {\n\t\t\t\t\t\tconst contentType = res.headers['content-type'];\n\t\t\t\t\t\tif (!details.type && contentType) {\n\t\t\t\t\t\t\tdetails.type = contentType;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst rawData: Uint8Array[] = [];\n\t\t\t\t\t\tres.on('data', (chunk) => {\n\t\t\t\t\t\t\trawData.push(chunk);\n\n\t\t\t\t\t\t\t// Update progress more often on large files\n\t\t\t\t\t\t\tthis.reportProgress();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tres.on('error', async (error) => {\n\t\t\t\t\t\t\tawait completeFile(details);\n\t\t\t\t\t\t\tlogError(error);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tres.on('end', async () => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t// Bypass the fileStore filters\n\t\t\t\t\t\t\t\tconst file = await fileStore._doInsert(details, Buffer.concat(rawData));\n\n\t\t\t\t\t\t\t\tconst url = FileUpload.getPath(`${file._id}/${encodeURI(file.name || '')}`);\n\t\t\t\t\t\t\t\tconst attachment = this.getMessageAttachment(file, url);\n\n\t\t\t\t\t\t\t\tawait Messages.setImportFileRocketChatAttachment(_importFile.id, url, attachment);\n\t\t\t\t\t\t\t\tawait completeFile(details);\n\t\t\t\t\t\t\t\timportedRoomIds.add(message.rid);\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tawait completeFile(details);\n\t\t\t\t\t\t\t\tlogError(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logger.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvoid api.broadcast('notify.importedMessages', { roomIds: Array.from(importedRoomIds) });\n\t\t} catch (error) {\n\t\t\t// If the cursor expired, restart the method\n\t\t\tif (this.isCursorNotFoundError(error)) {\n\t\t\t\tthis.logger.info('CursorNotFound');\n\t\t\t\treturn this.startImport(importSelection);\n\t\t\t}\n\n\t\t\tawait super.updateProgress(ProgressStep.ERROR);\n\t\t\tthrow error;\n\t\t}\n\n\t\tawait super.updateProgress(ProgressStep.DONE);\n\t\treturn this.getProgress();\n\t}\n\n\tgetMessageAttachment(file: IUpload, url: string): MessageAttachment {\n\t\tif (file.type) {\n\t\t\tif (/^image\\/.+/.test(file.type)) {\n\t\t\t\treturn {\n\t\t\t\t\ttitle: file.name,\n\t\t\t\t\ttitle_link: url,\n\t\t\t\t\timage_url: url,\n\t\t\t\t\timage_type: file.type,\n\t\t\t\t\timage_size: file.size,\n\t\t\t\t\timage_dimensions: file.identify ? file.identify.size : undefined,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (/^audio\\/.+/.test(file.type)) {\n\t\t\t\treturn {\n\t\t\t\t\ttitle: file.name,\n\t\t\t\t\ttitle_link: url,\n\t\t\t\t\taudio_url: url,\n\t\t\t\t\taudio_type: file.type,\n\t\t\t\t\taudio_size: file.size,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (/^video\\/.+/.test(file.type)) {\n\t\t\t\treturn {\n\t\t\t\t\ttitle: file.name,\n\t\t\t\t\ttitle_link: url,\n\t\t\t\t\tvideo_url: url,\n\t\t\t\t\tvideo_type: file.type,\n\t\t\t\t\tvideo_size: file.size,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttitle: file.name,\n\t\t\ttitle_link: url,\n\t\t};\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      PendingFileImporter: () => PendingFileImporter\n    });\n    let http;\n    module.link(\"http\", {\n      default(v) {\n        http = v;\n      }\n    }, 0);\n    let https;\n    module.link(\"https\", {\n      default(v) {\n        https = v;\n      }\n    }, 1);\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 2);\n    let Messages;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      }\n    }, 3);\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 4);\n    let FileUpload;\n    module.link(\"../../file-upload/server\", {\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 5);\n    let Importer, ProgressStep, Selection;\n    module.link(\"../../importer/server\", {\n      Importer(v) {\n        Importer = v;\n      },\n      ProgressStep(v) {\n        ProgressStep = v;\n      },\n      Selection(v) {\n        Selection = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class PendingFileImporter extends Importer {\n      constructor(info, importRecord) {\n        let converterOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        super(info, importRecord, converterOptions);\n      }\n      async prepareFileCount() {\n        this.logger.debug('start preparing import operation');\n        await super.updateProgress(ProgressStep.PREPARING_STARTED);\n        const fileCount = await Messages.countAllImportedMessagesWithFilesToDownload();\n        if (fileCount === 0) {\n          await super.updateProgress(ProgressStep.DONE);\n          return 0;\n        }\n        await this.updateRecord({\n          'count.messages': fileCount,\n          'messagesstatus': null\n        });\n        await this.addCountToTotal(fileCount);\n        const fileData = new Selection(this.info.name, [], [], fileCount);\n        await this.updateRecord({\n          fileData\n        });\n        await super.updateProgress(ProgressStep.IMPORTING_FILES);\n        setImmediate(() => {\n          void this.startImport(fileData);\n        });\n        return fileCount;\n      }\n      async startImport(importSelection) {\n        const downloadedFileIds = [];\n        const maxFileCount = 10;\n        const maxFileSize = 1024 * 1024 * 500;\n        let count = 0;\n        let currentSize = 0;\n        let nextSize = 0;\n        const waitForFiles = async () => {\n          if (count + 1 < maxFileCount && currentSize + nextSize < maxFileSize) {\n            return;\n          }\n          return new Promise(resolve => {\n            const handler = setInterval(() => {\n              if (count + 1 >= maxFileCount) {\n                return;\n              }\n              if (currentSize + nextSize >= maxFileSize && count > 0) {\n                return;\n              }\n              clearInterval(handler);\n              resolve();\n            }, 1000);\n          });\n        };\n        const completeFile = async details => {\n          await this.addCountCompleted(1);\n          count--;\n          currentSize -= details.size;\n        };\n        const logError = this.logger.error.bind(this.logger);\n        try {\n          const pendingFileMessageList = Messages.findAllImportedMessagesWithFilesToDownload();\n          const importedRoomIds = new Set();\n          var _iteratorAbruptCompletion = false;\n          var _didIteratorError = false;\n          var _iteratorError;\n          try {\n            for (var _iterator = _asyncIterator(pendingFileMessageList), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n              const message = _step.value;\n              {\n                try {\n                  const {\n                    _importFile\n                  } = message;\n                  if (!_importFile || _importFile.downloaded || downloadedFileIds.includes(_importFile.id)) {\n                    await this.addCountCompleted(1);\n                    continue;\n                  }\n                  const url = _importFile.downloadUrl;\n                  if (!(url !== null && url !== void 0 && url.startsWith('http'))) {\n                    await this.addCountCompleted(1);\n                    continue;\n                  }\n                  const details = {\n                    message_id: \"\".concat(message._id, \"-file-\").concat(_importFile.id),\n                    name: _importFile.name || Random.id(),\n                    size: _importFile.size || 0,\n                    userId: message.u._id,\n                    rid: message.rid\n                  };\n                  const requestModule = /https/i.test(url) ? https : http;\n                  const fileStore = FileUpload.getStore('Uploads');\n                  nextSize = details.size;\n                  await waitForFiles();\n                  count++;\n                  currentSize += nextSize;\n                  downloadedFileIds.push(_importFile.id);\n                  requestModule.get(url, res => {\n                    const contentType = res.headers['content-type'];\n                    if (!details.type && contentType) {\n                      details.type = contentType;\n                    }\n                    const rawData = [];\n                    res.on('data', chunk => {\n                      rawData.push(chunk);\n                      // Update progress more often on large files\n                      this.reportProgress();\n                    });\n                    res.on('error', async error => {\n                      await completeFile(details);\n                      logError(error);\n                    });\n                    res.on('end', async () => {\n                      try {\n                        // Bypass the fileStore filters\n                        const file = await fileStore._doInsert(details, Buffer.concat(rawData));\n                        const url = FileUpload.getPath(\"\".concat(file._id, \"/\").concat(encodeURI(file.name || '')));\n                        const attachment = this.getMessageAttachment(file, url);\n                        await Messages.setImportFileRocketChatAttachment(_importFile.id, url, attachment);\n                        await completeFile(details);\n                        importedRoomIds.add(message.rid);\n                      } catch (error) {\n                        await completeFile(details);\n                        logError(error);\n                      }\n                    });\n                  });\n                } catch (error) {\n                  this.logger.error(error);\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (_iteratorAbruptCompletion && _iterator.return != null) {\n                await _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n          void api.broadcast('notify.importedMessages', {\n            roomIds: Array.from(importedRoomIds)\n          });\n        } catch (error) {\n          // If the cursor expired, restart the method\n          if (this.isCursorNotFoundError(error)) {\n            this.logger.info('CursorNotFound');\n            return this.startImport(importSelection);\n          }\n          await super.updateProgress(ProgressStep.ERROR);\n          throw error;\n        }\n        await super.updateProgress(ProgressStep.DONE);\n        return this.getProgress();\n      }\n      getMessageAttachment(file, url) {\n        if (file.type) {\n          if (/^image\\/.+/.test(file.type)) {\n            return {\n              title: file.name,\n              title_link: url,\n              image_url: url,\n              image_type: file.type,\n              image_size: file.size,\n              image_dimensions: file.identify ? file.identify.size : undefined\n            };\n          }\n          if (/^audio\\/.+/.test(file.type)) {\n            return {\n              title: file.name,\n              title_link: url,\n              audio_url: url,\n              audio_type: file.type,\n              audio_size: file.size\n            };\n          }\n          if (/^video\\/.+/.test(file.type)) {\n            return {\n              title: file.name,\n              title_link: url,\n              video_url: url,\n              video_type: file.type,\n              video_size: file.size\n            };\n          }\n        }\n        return {\n          title: file.name,\n          title_link: url\n        };\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","PendingFileImporter","http","https","api","Messages","Random","FileUpload","Importer","ProgressStep","Selection","__reifyWaitForDeps__","constructor","info","importRecord","converterOptions","arguments","length","undefined","prepareFileCount","logger","debug","updateProgress","PREPARING_STARTED","fileCount","countAllImportedMessagesWithFilesToDownload","DONE","updateRecord","addCountToTotal","fileData","name","IMPORTING_FILES","setImmediate","startImport","importSelection","downloadedFileIds","maxFileCount","maxFileSize","count","currentSize","nextSize","waitForFiles","Promise","resolve","handler","setInterval","clearInterval","completeFile","details","addCountCompleted","size","logError","error","bind","pendingFileMessageList","findAllImportedMessagesWithFilesToDownload","importedRoomIds","Set","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","message","value","_importFile","downloaded","includes","id","url","downloadUrl","startsWith","message_id","concat","_id","userId","u","rid","requestModule","test","fileStore","getStore","push","get","res","contentType","headers","type","rawData","on","chunk","reportProgress","file","_doInsert","Buffer","getPath","encodeURI","attachment","getMessageAttachment","setImportFileRocketChatAttachment","add","err","return","broadcast","roomIds","Array","from","isCursorNotFoundError","ERROR","getProgress","title","title_link","image_url","image_type","image_size","image_dimensions","identify","audio_url","audio_type","audio_size","video_url","video_type","video_size","__reify_async_result__","_reifyError","self","async"],"sources":["app/importer-pending-files/server/PendingFileImporter.ts"],"sourcesContent":["import http from 'http';\nimport https from 'https';\n\nimport { api } from '@rocket.chat/core-services';\nimport type { IImport, MessageAttachment, IUpload } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\n\nimport { FileUpload } from '../../file-upload/server';\nimport { Importer, ProgressStep, Selection } from '../../importer/server';\nimport type { ConverterOptions } from '../../importer/server/classes/ImportDataConverter';\nimport type { ImporterProgress } from '../../importer/server/classes/ImporterProgress';\nimport type { ImporterInfo } from '../../importer/server/definitions/ImporterInfo';\n\nexport class PendingFileImporter extends Importer {\n\tconstructor(info: ImporterInfo, importRecord: IImport, converterOptions: ConverterOptions = {}) {\n\t\tsuper(info, importRecord, converterOptions);\n\t}\n\n\tasync prepareFileCount() {\n\t\tthis.logger.debug('start preparing import operation');\n\t\tawait super.updateProgress(ProgressStep.PREPARING_STARTED);\n\n\t\tconst fileCount = await Messages.countAllImportedMessagesWithFilesToDownload();\n\t\tif (fileCount === 0) {\n\t\t\tawait super.updateProgress(ProgressStep.DONE);\n\t\t\treturn 0;\n\t\t}\n\n\t\tawait this.updateRecord({ 'count.messages': fileCount, 'messagesstatus': null });\n\t\tawait this.addCountToTotal(fileCount);\n\n\t\tconst fileData = new Selection(this.info.name, [], [], fileCount);\n\t\tawait this.updateRecord({ fileData });\n\n\t\tawait super.updateProgress(ProgressStep.IMPORTING_FILES);\n\t\tsetImmediate(() => {\n\t\t\tvoid this.startImport(fileData);\n\t\t});\n\n\t\treturn fileCount;\n\t}\n\n\tasync startImport(importSelection: Selection): Promise<ImporterProgress> {\n\t\tconst downloadedFileIds: string[] = [];\n\t\tconst maxFileCount = 10;\n\t\tconst maxFileSize = 1024 * 1024 * 500;\n\n\t\tlet count = 0;\n\t\tlet currentSize = 0;\n\t\tlet nextSize = 0;\n\n\t\tconst waitForFiles = async () => {\n\t\t\tif (count + 1 < maxFileCount && currentSize + nextSize < maxFileSize) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\tconst handler = setInterval(() => {\n\t\t\t\t\tif (count + 1 >= maxFileCount) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentSize + nextSize >= maxFileSize && count > 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearInterval(handler);\n\t\t\t\t\tresolve();\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t};\n\n\t\tconst completeFile = async (details: { size: number }) => {\n\t\t\tawait this.addCountCompleted(1);\n\t\t\tcount--;\n\t\t\tcurrentSize -= details.size;\n\t\t};\n\n\t\tconst logError = this.logger.error.bind(this.logger);\n\n\t\ttry {\n\t\t\tconst pendingFileMessageList = Messages.findAllImportedMessagesWithFilesToDownload();\n\t\t\tconst importedRoomIds = new Set<string>();\n\t\t\tfor await (const message of pendingFileMessageList) {\n\t\t\t\ttry {\n\t\t\t\t\tconst { _importFile } = message;\n\n\t\t\t\t\tif (!_importFile || _importFile.downloaded || downloadedFileIds.includes(_importFile.id)) {\n\t\t\t\t\t\tawait this.addCountCompleted(1);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst url = _importFile.downloadUrl;\n\t\t\t\t\tif (!url?.startsWith('http')) {\n\t\t\t\t\t\tawait this.addCountCompleted(1);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst details: { message_id: string; name: string; size: number; userId: string; rid: string; type?: string } = {\n\t\t\t\t\t\tmessage_id: `${message._id}-file-${_importFile.id}`,\n\t\t\t\t\t\tname: _importFile.name || Random.id(),\n\t\t\t\t\t\tsize: _importFile.size || 0,\n\t\t\t\t\t\tuserId: message.u._id,\n\t\t\t\t\t\trid: message.rid,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst requestModule = /https/i.test(url) ? https : http;\n\t\t\t\t\tconst fileStore = FileUpload.getStore('Uploads');\n\n\t\t\t\t\tnextSize = details.size;\n\t\t\t\t\tawait waitForFiles();\n\t\t\t\t\tcount++;\n\t\t\t\t\tcurrentSize += nextSize;\n\t\t\t\t\tdownloadedFileIds.push(_importFile.id);\n\n\t\t\t\t\trequestModule.get(url, (res) => {\n\t\t\t\t\t\tconst contentType = res.headers['content-type'];\n\t\t\t\t\t\tif (!details.type && contentType) {\n\t\t\t\t\t\t\tdetails.type = contentType;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst rawData: Uint8Array[] = [];\n\t\t\t\t\t\tres.on('data', (chunk) => {\n\t\t\t\t\t\t\trawData.push(chunk);\n\n\t\t\t\t\t\t\t// Update progress more often on large files\n\t\t\t\t\t\t\tthis.reportProgress();\n\t\t\t\t\t\t});\n\t\t\t\t\t\tres.on('error', async (error) => {\n\t\t\t\t\t\t\tawait completeFile(details);\n\t\t\t\t\t\t\tlogError(error);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tres.on('end', async () => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t// Bypass the fileStore filters\n\t\t\t\t\t\t\t\tconst file = await fileStore._doInsert(details, Buffer.concat(rawData));\n\n\t\t\t\t\t\t\t\tconst url = FileUpload.getPath(`${file._id}/${encodeURI(file.name || '')}`);\n\t\t\t\t\t\t\t\tconst attachment = this.getMessageAttachment(file, url);\n\n\t\t\t\t\t\t\t\tawait Messages.setImportFileRocketChatAttachment(_importFile.id, url, attachment);\n\t\t\t\t\t\t\t\tawait completeFile(details);\n\t\t\t\t\t\t\t\timportedRoomIds.add(message.rid);\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tawait completeFile(details);\n\t\t\t\t\t\t\t\tlogError(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logger.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvoid api.broadcast('notify.importedMessages', { roomIds: Array.from(importedRoomIds) });\n\t\t} catch (error) {\n\t\t\t// If the cursor expired, restart the method\n\t\t\tif (this.isCursorNotFoundError(error)) {\n\t\t\t\tthis.logger.info('CursorNotFound');\n\t\t\t\treturn this.startImport(importSelection);\n\t\t\t}\n\n\t\t\tawait super.updateProgress(ProgressStep.ERROR);\n\t\t\tthrow error;\n\t\t}\n\n\t\tawait super.updateProgress(ProgressStep.DONE);\n\t\treturn this.getProgress();\n\t}\n\n\tgetMessageAttachment(file: IUpload, url: string): MessageAttachment {\n\t\tif (file.type) {\n\t\t\tif (/^image\\/.+/.test(file.type)) {\n\t\t\t\treturn {\n\t\t\t\t\ttitle: file.name,\n\t\t\t\t\ttitle_link: url,\n\t\t\t\t\timage_url: url,\n\t\t\t\t\timage_type: file.type,\n\t\t\t\t\timage_size: file.size,\n\t\t\t\t\timage_dimensions: file.identify ? file.identify.size : undefined,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (/^audio\\/.+/.test(file.type)) {\n\t\t\t\treturn {\n\t\t\t\t\ttitle: file.name,\n\t\t\t\t\ttitle_link: url,\n\t\t\t\t\taudio_url: url,\n\t\t\t\t\taudio_type: file.type,\n\t\t\t\t\taudio_size: file.size,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (/^video\\/.+/.test(file.type)) {\n\t\t\t\treturn {\n\t\t\t\t\ttitle: file.name,\n\t\t\t\t\ttitle_link: url,\n\t\t\t\t\tvideo_url: url,\n\t\t\t\t\tvideo_type: file.type,\n\t\t\t\t\tvideo_size: file.size,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttitle: file.name,\n\t\t\ttitle_link: url,\n\t\t};\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7646e35ddd29b5e0a8add70bcf218d2bec7d141c"}
