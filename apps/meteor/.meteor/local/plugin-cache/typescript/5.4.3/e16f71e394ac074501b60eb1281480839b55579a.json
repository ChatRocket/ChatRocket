{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/ufs/ufs-filter.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/ufs/ufs-filter.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/ufs/ufs-filter.ts","inputSourceMap":{"version":3,"file":"server/ufs/ufs-filter.ts","sourceRoot":"","sources":["server/ufs/ufs-filter.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUpload } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { OptionalId } from 'mongodb';\n\ntype IFilterOptions = {\n\tcontentTypes?: string[];\n\textensions?: string[];\n\tminSize?: number;\n\tmaxSize?: number;\n\tonCheck?: (file: IUpload, content?: Buffer) => Promise<boolean>;\n\tinvalidFileError?: () => Meteor.Error;\n\tfileTooSmallError?: (fileSize: number, minFileSize: number) => Meteor.Error;\n\tfileTooLargeError?: (fileSize: number, maxFileSize: number) => Meteor.Error;\n\tinvalidFileExtension?: (fileExtension: string, allowedExtensions: string[]) => Meteor.Error;\n\tinvalidFileType?: (fileType: string | undefined, allowedContentTypes: string[]) => Meteor.Error;\n};\n\nexport class Filter {\n\tprivate options: Required<IFilterOptions>;\n\n\tconstructor(options: IFilterOptions) {\n\t\tthis.options = {\n\t\t\tcontentTypes: [],\n\t\t\textensions: [],\n\t\t\tminSize: 1,\n\t\t\tmaxSize: 0,\n\t\t\tinvalidFileError: () => new Meteor.Error('invalid-file', 'File is not valid'),\n\t\t\tfileTooSmallError: (fileSize, minFileSize) =>\n\t\t\t\tnew Meteor.Error('file-too-small', `File size (size = ${fileSize}) is too small (min = ${minFileSize})`),\n\t\t\tfileTooLargeError: (fileSize, maxFileSize) =>\n\t\t\t\tnew Meteor.Error('file-too-large', `File size (size = ${fileSize}) is too large (max = ${maxFileSize})`),\n\t\t\tinvalidFileExtension: (fileExtension, allowedExtensions) =>\n\t\t\t\tnew Meteor.Error('invalid-file-extension', `File extension \"${fileExtension}\" is not accepted (${allowedExtensions})`),\n\t\t\tinvalidFileType: (fileType, allowedContentTypes) =>\n\t\t\t\tnew Meteor.Error('invalid-file-type', `File type \"${fileType}\" is not accepted (${allowedContentTypes})`),\n\t\t\tonCheck: this.onCheck,\n\t\t\t...options,\n\t\t};\n\n\t\t// Check options\n\t\tif (this.options.contentTypes && !(this.options.contentTypes instanceof Array)) {\n\t\t\tthrow new TypeError('Filter: contentTypes is not an Array');\n\t\t}\n\t\tif (this.options.extensions && !(this.options.extensions instanceof Array)) {\n\t\t\tthrow new TypeError('Filter: extensions is not an Array');\n\t\t}\n\t\tif (typeof this.options.minSize !== 'number') {\n\t\t\tthrow new TypeError('Filter: minSize is not a number');\n\t\t}\n\t\tif (typeof this.options.maxSize !== 'number') {\n\t\t\tthrow new TypeError('Filter: maxSize is not a number');\n\t\t}\n\t\tif (this.options.onCheck && typeof this.options.onCheck !== 'function') {\n\t\t\tthrow new TypeError('Filter: onCheck is not a function');\n\t\t}\n\n\t\tif (typeof this.options.onCheck === 'function') {\n\t\t\tthis.onCheck = this.options.onCheck;\n\t\t}\n\t}\n\n\tasync check(file: OptionalId<IUpload>, content?: ReadableStream | Buffer) {\n\t\tlet error = null;\n\t\tif (typeof file !== 'object' || !file) {\n\t\t\terror = this.options.invalidFileError();\n\t\t}\n\t\t// Check size\n\t\tconst fileSize = file.size || 0;\n\t\tconst minSize = this.getMinSize();\n\t\tif (fileSize <= 0 || fileSize < minSize) {\n\t\t\terror = this.options.fileTooSmallError(fileSize, minSize);\n\t\t}\n\t\tconst maxSize = this.getMaxSize();\n\t\tif (maxSize > 0 && fileSize > maxSize) {\n\t\t\terror = this.options.fileTooLargeError(fileSize, maxSize);\n\t\t}\n\t\t// Check extension\n\t\tconst allowedExtensions = this.getExtensions();\n\t\tconst fileExtension = file.extension || '';\n\t\tif (allowedExtensions.length && !allowedExtensions.includes(fileExtension)) {\n\t\t\terror = this.options.invalidFileExtension(fileExtension, allowedExtensions);\n\t\t}\n\t\t// Check content type\n\t\tconst allowedContentTypes = this.getContentTypes();\n\t\tconst fileTypes = file.type;\n\t\tif (allowedContentTypes.length && !this.isContentTypeInList(fileTypes, allowedContentTypes)) {\n\t\t\terror = this.options.invalidFileType(fileTypes, allowedContentTypes);\n\t\t}\n\t\t// Apply custom check\n\t\tif (typeof this.onCheck === 'function' && !(await this.onCheck(file, content))) {\n\t\t\terror = new Meteor.Error('invalid-file', 'File does not match filter');\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tgetContentTypes() {\n\t\treturn this.options.contentTypes;\n\t}\n\n\tgetExtensions() {\n\t\treturn this.options.extensions;\n\t}\n\n\tgetMaxSize() {\n\t\treturn this.options.maxSize;\n\t}\n\n\tgetMinSize() {\n\t\treturn this.options.minSize;\n\t}\n\n\tisContentTypeInList(type: string | undefined, list: string[]) {\n\t\tif (typeof type === 'string' && list instanceof Array) {\n\t\t\tif (list.includes(type)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst wildCardGlob = '/*';\n\t\t\tconst wildcards = list.filter((item) => item.indexOf(wildCardGlob) > 0);\n\n\t\t\tif (wildcards.includes(type.replace(/(\\/.*)$/, wildCardGlob))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync isValid(file: IUpload) {\n\t\tlet result = true;\n\t\ttry {\n\t\t\tawait this.check(file);\n\t\t} catch (err) {\n\t\t\tresult = false;\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync onCheck(_file: OptionalId<IUpload>, _content?: ReadableStream | Buffer) {\n\t\treturn true;\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/ufs/ufs-filter.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/ufs/ufs-filter.ts","inputSourceMap":{"version":3,"file":"server/ufs/ufs-filter.ts","sourceRoot":"","sources":["server/ufs/ufs-filter.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUpload } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { OptionalId } from 'mongodb';\n\ntype IFilterOptions = {\n\tcontentTypes?: string[];\n\textensions?: string[];\n\tminSize?: number;\n\tmaxSize?: number;\n\tonCheck?: (file: IUpload, content?: Buffer) => Promise<boolean>;\n\tinvalidFileError?: () => Meteor.Error;\n\tfileTooSmallError?: (fileSize: number, minFileSize: number) => Meteor.Error;\n\tfileTooLargeError?: (fileSize: number, maxFileSize: number) => Meteor.Error;\n\tinvalidFileExtension?: (fileExtension: string, allowedExtensions: string[]) => Meteor.Error;\n\tinvalidFileType?: (fileType: string | undefined, allowedContentTypes: string[]) => Meteor.Error;\n};\n\nexport class Filter {\n\tprivate options: Required<IFilterOptions>;\n\n\tconstructor(options: IFilterOptions) {\n\t\tthis.options = {\n\t\t\tcontentTypes: [],\n\t\t\textensions: [],\n\t\t\tminSize: 1,\n\t\t\tmaxSize: 0,\n\t\t\tinvalidFileError: () => new Meteor.Error('invalid-file', 'File is not valid'),\n\t\t\tfileTooSmallError: (fileSize, minFileSize) =>\n\t\t\t\tnew Meteor.Error('file-too-small', `File size (size = ${fileSize}) is too small (min = ${minFileSize})`),\n\t\t\tfileTooLargeError: (fileSize, maxFileSize) =>\n\t\t\t\tnew Meteor.Error('file-too-large', `File size (size = ${fileSize}) is too large (max = ${maxFileSize})`),\n\t\t\tinvalidFileExtension: (fileExtension, allowedExtensions) =>\n\t\t\t\tnew Meteor.Error('invalid-file-extension', `File extension \"${fileExtension}\" is not accepted (${allowedExtensions})`),\n\t\t\tinvalidFileType: (fileType, allowedContentTypes) =>\n\t\t\t\tnew Meteor.Error('invalid-file-type', `File type \"${fileType}\" is not accepted (${allowedContentTypes})`),\n\t\t\tonCheck: this.onCheck,\n\t\t\t...options,\n\t\t};\n\n\t\t// Check options\n\t\tif (this.options.contentTypes && !(this.options.contentTypes instanceof Array)) {\n\t\t\tthrow new TypeError('Filter: contentTypes is not an Array');\n\t\t}\n\t\tif (this.options.extensions && !(this.options.extensions instanceof Array)) {\n\t\t\tthrow new TypeError('Filter: extensions is not an Array');\n\t\t}\n\t\tif (typeof this.options.minSize !== 'number') {\n\t\t\tthrow new TypeError('Filter: minSize is not a number');\n\t\t}\n\t\tif (typeof this.options.maxSize !== 'number') {\n\t\t\tthrow new TypeError('Filter: maxSize is not a number');\n\t\t}\n\t\tif (this.options.onCheck && typeof this.options.onCheck !== 'function') {\n\t\t\tthrow new TypeError('Filter: onCheck is not a function');\n\t\t}\n\n\t\tif (typeof this.options.onCheck === 'function') {\n\t\t\tthis.onCheck = this.options.onCheck;\n\t\t}\n\t}\n\n\tasync check(file: OptionalId<IUpload>, content?: ReadableStream | Buffer) {\n\t\tlet error = null;\n\t\tif (typeof file !== 'object' || !file) {\n\t\t\terror = this.options.invalidFileError();\n\t\t}\n\t\t// Check size\n\t\tconst fileSize = file.size || 0;\n\t\tconst minSize = this.getMinSize();\n\t\tif (fileSize <= 0 || fileSize < minSize) {\n\t\t\terror = this.options.fileTooSmallError(fileSize, minSize);\n\t\t}\n\t\tconst maxSize = this.getMaxSize();\n\t\tif (maxSize > 0 && fileSize > maxSize) {\n\t\t\terror = this.options.fileTooLargeError(fileSize, maxSize);\n\t\t}\n\t\t// Check extension\n\t\tconst allowedExtensions = this.getExtensions();\n\t\tconst fileExtension = file.extension || '';\n\t\tif (allowedExtensions.length && !allowedExtensions.includes(fileExtension)) {\n\t\t\terror = this.options.invalidFileExtension(fileExtension, allowedExtensions);\n\t\t}\n\t\t// Check content type\n\t\tconst allowedContentTypes = this.getContentTypes();\n\t\tconst fileTypes = file.type;\n\t\tif (allowedContentTypes.length && !this.isContentTypeInList(fileTypes, allowedContentTypes)) {\n\t\t\terror = this.options.invalidFileType(fileTypes, allowedContentTypes);\n\t\t}\n\t\t// Apply custom check\n\t\tif (typeof this.onCheck === 'function' && !(await this.onCheck(file, content))) {\n\t\t\terror = new Meteor.Error('invalid-file', 'File does not match filter');\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tgetContentTypes() {\n\t\treturn this.options.contentTypes;\n\t}\n\n\tgetExtensions() {\n\t\treturn this.options.extensions;\n\t}\n\n\tgetMaxSize() {\n\t\treturn this.options.maxSize;\n\t}\n\n\tgetMinSize() {\n\t\treturn this.options.minSize;\n\t}\n\n\tisContentTypeInList(type: string | undefined, list: string[]) {\n\t\tif (typeof type === 'string' && list instanceof Array) {\n\t\t\tif (list.includes(type)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst wildCardGlob = '/*';\n\t\t\tconst wildcards = list.filter((item) => item.indexOf(wildCardGlob) > 0);\n\n\t\t\tif (wildcards.includes(type.replace(/(\\/.*)$/, wildCardGlob))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync isValid(file: IUpload) {\n\t\tlet result = true;\n\t\ttry {\n\t\t\tawait this.check(file);\n\t\t} catch (err) {\n\t\t\tresult = false;\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync onCheck(_file: OptionalId<IUpload>, _content?: ReadableStream | Buffer) {\n\t\treturn true;\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      Filter: () => Filter\n    });\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class Filter {\n      constructor(options) {\n        this.options = void 0;\n        this.options = _objectSpread({\n          contentTypes: [],\n          extensions: [],\n          minSize: 1,\n          maxSize: 0,\n          invalidFileError: () => new Meteor.Error('invalid-file', 'File is not valid'),\n          fileTooSmallError: (fileSize, minFileSize) => new Meteor.Error('file-too-small', \"File size (size = \".concat(fileSize, \") is too small (min = \").concat(minFileSize, \")\")),\n          fileTooLargeError: (fileSize, maxFileSize) => new Meteor.Error('file-too-large', \"File size (size = \".concat(fileSize, \") is too large (max = \").concat(maxFileSize, \")\")),\n          invalidFileExtension: (fileExtension, allowedExtensions) => new Meteor.Error('invalid-file-extension', \"File extension \\\"\".concat(fileExtension, \"\\\" is not accepted (\").concat(allowedExtensions, \")\")),\n          invalidFileType: (fileType, allowedContentTypes) => new Meteor.Error('invalid-file-type', \"File type \\\"\".concat(fileType, \"\\\" is not accepted (\").concat(allowedContentTypes, \")\")),\n          onCheck: this.onCheck\n        }, options);\n        // Check options\n        if (this.options.contentTypes && !(this.options.contentTypes instanceof Array)) {\n          throw new TypeError('Filter: contentTypes is not an Array');\n        }\n        if (this.options.extensions && !(this.options.extensions instanceof Array)) {\n          throw new TypeError('Filter: extensions is not an Array');\n        }\n        if (typeof this.options.minSize !== 'number') {\n          throw new TypeError('Filter: minSize is not a number');\n        }\n        if (typeof this.options.maxSize !== 'number') {\n          throw new TypeError('Filter: maxSize is not a number');\n        }\n        if (this.options.onCheck && typeof this.options.onCheck !== 'function') {\n          throw new TypeError('Filter: onCheck is not a function');\n        }\n        if (typeof this.options.onCheck === 'function') {\n          this.onCheck = this.options.onCheck;\n        }\n      }\n      async check(file, content) {\n        let error = null;\n        if (typeof file !== 'object' || !file) {\n          error = this.options.invalidFileError();\n        }\n        // Check size\n        const fileSize = file.size || 0;\n        const minSize = this.getMinSize();\n        if (fileSize <= 0 || fileSize < minSize) {\n          error = this.options.fileTooSmallError(fileSize, minSize);\n        }\n        const maxSize = this.getMaxSize();\n        if (maxSize > 0 && fileSize > maxSize) {\n          error = this.options.fileTooLargeError(fileSize, maxSize);\n        }\n        // Check extension\n        const allowedExtensions = this.getExtensions();\n        const fileExtension = file.extension || '';\n        if (allowedExtensions.length && !allowedExtensions.includes(fileExtension)) {\n          error = this.options.invalidFileExtension(fileExtension, allowedExtensions);\n        }\n        // Check content type\n        const allowedContentTypes = this.getContentTypes();\n        const fileTypes = file.type;\n        if (allowedContentTypes.length && !this.isContentTypeInList(fileTypes, allowedContentTypes)) {\n          error = this.options.invalidFileType(fileTypes, allowedContentTypes);\n        }\n        // Apply custom check\n        if (typeof this.onCheck === 'function' && !(await this.onCheck(file, content))) {\n          error = new Meteor.Error('invalid-file', 'File does not match filter');\n        }\n        if (error) {\n          throw error;\n        }\n      }\n      getContentTypes() {\n        return this.options.contentTypes;\n      }\n      getExtensions() {\n        return this.options.extensions;\n      }\n      getMaxSize() {\n        return this.options.maxSize;\n      }\n      getMinSize() {\n        return this.options.minSize;\n      }\n      isContentTypeInList(type, list) {\n        if (typeof type === 'string' && list instanceof Array) {\n          if (list.includes(type)) {\n            return true;\n          }\n          const wildCardGlob = '/*';\n          const wildcards = list.filter(item => item.indexOf(wildCardGlob) > 0);\n          if (wildcards.includes(type.replace(/(\\/.*)$/, wildCardGlob))) {\n            return true;\n          }\n        }\n        return false;\n      }\n      async isValid(file) {\n        let result = true;\n        try {\n          await this.check(file);\n        } catch (err) {\n          result = false;\n        }\n        return result;\n      }\n      async onCheck(_file, _content) {\n        return true;\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","Filter","Meteor","__reifyWaitForDeps__","constructor","options","contentTypes","extensions","minSize","maxSize","invalidFileError","Error","fileTooSmallError","fileSize","minFileSize","concat","fileTooLargeError","maxFileSize","invalidFileExtension","fileExtension","allowedExtensions","invalidFileType","fileType","allowedContentTypes","onCheck","Array","TypeError","check","file","content","error","size","getMinSize","getMaxSize","getExtensions","extension","length","includes","getContentTypes","fileTypes","type","isContentTypeInList","list","wildCardGlob","wildcards","filter","item","indexOf","replace","isValid","result","err","_file","_content","__reify_async_result__","_reifyError","self","async"],"sources":["server/ufs/ufs-filter.ts"],"sourcesContent":["import type { IUpload } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { OptionalId } from 'mongodb';\n\ntype IFilterOptions = {\n\tcontentTypes?: string[];\n\textensions?: string[];\n\tminSize?: number;\n\tmaxSize?: number;\n\tonCheck?: (file: IUpload, content?: Buffer) => Promise<boolean>;\n\tinvalidFileError?: () => Meteor.Error;\n\tfileTooSmallError?: (fileSize: number, minFileSize: number) => Meteor.Error;\n\tfileTooLargeError?: (fileSize: number, maxFileSize: number) => Meteor.Error;\n\tinvalidFileExtension?: (fileExtension: string, allowedExtensions: string[]) => Meteor.Error;\n\tinvalidFileType?: (fileType: string | undefined, allowedContentTypes: string[]) => Meteor.Error;\n};\n\nexport class Filter {\n\tprivate options: Required<IFilterOptions>;\n\n\tconstructor(options: IFilterOptions) {\n\t\tthis.options = {\n\t\t\tcontentTypes: [],\n\t\t\textensions: [],\n\t\t\tminSize: 1,\n\t\t\tmaxSize: 0,\n\t\t\tinvalidFileError: () => new Meteor.Error('invalid-file', 'File is not valid'),\n\t\t\tfileTooSmallError: (fileSize, minFileSize) =>\n\t\t\t\tnew Meteor.Error('file-too-small', `File size (size = ${fileSize}) is too small (min = ${minFileSize})`),\n\t\t\tfileTooLargeError: (fileSize, maxFileSize) =>\n\t\t\t\tnew Meteor.Error('file-too-large', `File size (size = ${fileSize}) is too large (max = ${maxFileSize})`),\n\t\t\tinvalidFileExtension: (fileExtension, allowedExtensions) =>\n\t\t\t\tnew Meteor.Error('invalid-file-extension', `File extension \"${fileExtension}\" is not accepted (${allowedExtensions})`),\n\t\t\tinvalidFileType: (fileType, allowedContentTypes) =>\n\t\t\t\tnew Meteor.Error('invalid-file-type', `File type \"${fileType}\" is not accepted (${allowedContentTypes})`),\n\t\t\tonCheck: this.onCheck,\n\t\t\t...options,\n\t\t};\n\n\t\t// Check options\n\t\tif (this.options.contentTypes && !(this.options.contentTypes instanceof Array)) {\n\t\t\tthrow new TypeError('Filter: contentTypes is not an Array');\n\t\t}\n\t\tif (this.options.extensions && !(this.options.extensions instanceof Array)) {\n\t\t\tthrow new TypeError('Filter: extensions is not an Array');\n\t\t}\n\t\tif (typeof this.options.minSize !== 'number') {\n\t\t\tthrow new TypeError('Filter: minSize is not a number');\n\t\t}\n\t\tif (typeof this.options.maxSize !== 'number') {\n\t\t\tthrow new TypeError('Filter: maxSize is not a number');\n\t\t}\n\t\tif (this.options.onCheck && typeof this.options.onCheck !== 'function') {\n\t\t\tthrow new TypeError('Filter: onCheck is not a function');\n\t\t}\n\n\t\tif (typeof this.options.onCheck === 'function') {\n\t\t\tthis.onCheck = this.options.onCheck;\n\t\t}\n\t}\n\n\tasync check(file: OptionalId<IUpload>, content?: ReadableStream | Buffer) {\n\t\tlet error = null;\n\t\tif (typeof file !== 'object' || !file) {\n\t\t\terror = this.options.invalidFileError();\n\t\t}\n\t\t// Check size\n\t\tconst fileSize = file.size || 0;\n\t\tconst minSize = this.getMinSize();\n\t\tif (fileSize <= 0 || fileSize < minSize) {\n\t\t\terror = this.options.fileTooSmallError(fileSize, minSize);\n\t\t}\n\t\tconst maxSize = this.getMaxSize();\n\t\tif (maxSize > 0 && fileSize > maxSize) {\n\t\t\terror = this.options.fileTooLargeError(fileSize, maxSize);\n\t\t}\n\t\t// Check extension\n\t\tconst allowedExtensions = this.getExtensions();\n\t\tconst fileExtension = file.extension || '';\n\t\tif (allowedExtensions.length && !allowedExtensions.includes(fileExtension)) {\n\t\t\terror = this.options.invalidFileExtension(fileExtension, allowedExtensions);\n\t\t}\n\t\t// Check content type\n\t\tconst allowedContentTypes = this.getContentTypes();\n\t\tconst fileTypes = file.type;\n\t\tif (allowedContentTypes.length && !this.isContentTypeInList(fileTypes, allowedContentTypes)) {\n\t\t\terror = this.options.invalidFileType(fileTypes, allowedContentTypes);\n\t\t}\n\t\t// Apply custom check\n\t\tif (typeof this.onCheck === 'function' && !(await this.onCheck(file, content))) {\n\t\t\terror = new Meteor.Error('invalid-file', 'File does not match filter');\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tgetContentTypes() {\n\t\treturn this.options.contentTypes;\n\t}\n\n\tgetExtensions() {\n\t\treturn this.options.extensions;\n\t}\n\n\tgetMaxSize() {\n\t\treturn this.options.maxSize;\n\t}\n\n\tgetMinSize() {\n\t\treturn this.options.minSize;\n\t}\n\n\tisContentTypeInList(type: string | undefined, list: string[]) {\n\t\tif (typeof type === 'string' && list instanceof Array) {\n\t\t\tif (list.includes(type)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst wildCardGlob = '/*';\n\t\t\tconst wildcards = list.filter((item) => item.indexOf(wildCardGlob) > 0);\n\n\t\t\tif (wildcards.includes(type.replace(/(\\/.*)$/, wildCardGlob))) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync isValid(file: IUpload) {\n\t\tlet result = true;\n\t\ttry {\n\t\t\tawait this.check(file);\n\t\t} catch (err) {\n\t\t\tresult = false;\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync onCheck(_file: OptionalId<IUpload>, _content?: ReadableStream | Buffer) {\n\t\treturn true;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e16f71e394ac074501b60eb1281480839b55579a"}
