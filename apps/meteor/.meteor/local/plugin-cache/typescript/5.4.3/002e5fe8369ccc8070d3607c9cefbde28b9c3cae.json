{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/integrations/server/methods/incoming/addIncomingIntegration.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/integrations/server/methods/incoming/addIncomingIntegration.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/integrations/server/methods/incoming/addIncomingIntegration.ts","inputSourceMap":{"version":3,"file":"app/integrations/server/methods/incoming/addIncomingIntegration.ts","sourceRoot":"","sources":["app/integrations/server/methods/incoming/addIncomingIntegration.ts"],"names":[],"mappings":"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","sourcesContent":["import type { INewIncomingIntegration, IIncomingIntegration } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Integrations, Roles, Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { Babel } from 'meteor/babel-compiler';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { hasPermissionAsync, hasAllPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { notifyOnIntegrationChanged } from '../../../../lib/server/lib/notifyListener';\nimport { validateScriptEngine, isScriptEngineFrozen } from '../../lib/validateScriptEngine';\n\nconst validChannelChars = ['@', '#'];\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\taddIncomingIntegration(integration: INewIncomingIntegration): Promise<IIncomingIntegration>;\n\t}\n}\n\nexport const addIncomingIntegration = async (userId: string, integration: INewIncomingIntegration): Promise<IIncomingIntegration> => {\n\tcheck(\n\t\tintegration,\n\t\tMatch.ObjectIncluding({\n\t\t\ttype: String,\n\t\t\tname: String,\n\t\t\tenabled: Boolean,\n\t\t\tusername: String,\n\t\t\tchannel: String,\n\t\t\talias: Match.Maybe(String),\n\t\t\temoji: Match.Maybe(String),\n\t\t\tscriptEnabled: Boolean,\n\t\t\tscriptEngine: Match.Maybe(String),\n\t\t\toverrideDestinationChannelEnabled: Match.Maybe(Boolean),\n\t\t\tscript: Match.Maybe(String),\n\t\t\tavatar: Match.Maybe(String),\n\t\t}),\n\t);\n\n\tif (\n\t\t!userId ||\n\t\t(!(await hasPermissionAsync(userId, 'manage-incoming-integrations')) &&\n\t\t\t!(await hasPermissionAsync(userId, 'manage-own-incoming-integrations')))\n\t) {\n\t\tthrow new Meteor.Error('not_authorized', 'Unauthorized', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tif (!integration.channel || typeof integration.channel.valueOf() !== 'string') {\n\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid channel', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tif (integration.channel.trim() === '') {\n\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid channel', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tconst channels = integration.channel.split(',').map((channel) => channel.trim());\n\n\tfor (const channel of channels) {\n\t\tif (!validChannelChars.includes(channel[0])) {\n\t\t\tthrow new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (!integration.username || typeof integration.username.valueOf() !== 'string' || integration.username.trim() === '') {\n\t\tthrow new Meteor.Error('error-invalid-username', 'Invalid username', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tif (integration.script?.trim()) {\n\t\tvalidateScriptEngine(integration.scriptEngine ?? 'isolated-vm');\n\t}\n\n\tconst user = await Users.findOne({ username: integration.username });\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tconst integrationData: IIncomingIntegration = {\n\t\t...integration,\n\t\tscriptEngine: integration.scriptEngine ?? 'isolated-vm',\n\t\ttype: 'webhook-incoming',\n\t\tchannel: channels,\n\t\toverrideDestinationChannelEnabled: integration.overrideDestinationChannelEnabled ?? false,\n\t\ttoken: Random.id(48),\n\t\tuserId: user._id,\n\t\t_createdAt: new Date(),\n\t\t_createdBy: await Users.findOne({ _id: userId }, { projection: { username: 1 } }),\n\t};\n\n\t// Only compile the script if it is enabled and using a sandbox that is not frozen\n\tif (\n\t\t!isScriptEngineFrozen(integrationData.scriptEngine) &&\n\t\tintegration.scriptEnabled === true &&\n\t\tintegration.script &&\n\t\tintegration.script.trim() !== ''\n\t) {\n\t\ttry {\n\t\t\tlet babelOptions = Babel.getDefaultOptions({ runtime: false });\n\t\t\tbabelOptions = _.extend(babelOptions, { compact: true, minified: true, comments: false });\n\n\t\t\tintegrationData.scriptCompiled = Babel.compile(integration.script, babelOptions).code;\n\t\t\tintegrationData.scriptError = undefined;\n\t\t} catch (e) {\n\t\t\tintegrationData.scriptCompiled = undefined;\n\t\t\tintegrationData.scriptError = e instanceof Error ? _.pick(e, 'name', 'message', 'stack') : undefined;\n\t\t}\n\t}\n\n\tfor await (let channel of channels) {\n\t\tlet record;\n\t\tconst channelType = channel[0];\n\t\tchannel = channel.substr(1);\n\n\t\tswitch (channelType) {\n\t\t\tcase '#':\n\t\t\t\trecord = await Rooms.findOne({\n\t\t\t\t\t$or: [{ _id: channel }, { name: channel }],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase '@':\n\t\t\t\trecord = await Users.findOne({\n\t\t\t\t\t$or: [{ _id: channel }, { username: channel }],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!record) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'addIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\t!(await hasAllPermissionAsync(userId, ['manage-incoming-integrations', 'manage-own-incoming-integrations'])) &&\n\t\t\t!(await Subscriptions.findOneByRoomIdAndUserId(record._id, userId, { projection: { _id: 1 } }))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\tmethod: 'addIncomingIntegration',\n\t\t\t});\n\t\t}\n\t}\n\n\tawait Roles.addUserRoles(user._id, ['bot']);\n\n\tconst { insertedId } = await Integrations.insertOne(integrationData);\n\n\tif (insertedId) {\n\t\tvoid notifyOnIntegrationChanged({ ...integrationData, _id: insertedId }, 'inserted');\n\t}\n\n\tintegrationData._id = insertedId;\n\n\treturn integrationData;\n};\n\nMeteor.methods<ServerMethods>({\n\tasync addIncomingIntegration(integration: INewIncomingIntegration): Promise<IIncomingIntegration> {\n\t\tconst { userId } = this;\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('invalid-user', 'Invalid User', {\n\t\t\t\tmethod: 'addIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\treturn addIncomingIntegration(userId, integration);\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/integrations/server/methods/incoming/addIncomingIntegration.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/integrations/server/methods/incoming/addIncomingIntegration.ts","inputSourceMap":{"version":3,"file":"app/integrations/server/methods/incoming/addIncomingIntegration.ts","sourceRoot":"","sources":["app/integrations/server/methods/incoming/addIncomingIntegration.ts"],"names":[],"mappings":"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","sourcesContent":["import type { INewIncomingIntegration, IIncomingIntegration } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Integrations, Roles, Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { Babel } from 'meteor/babel-compiler';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { hasPermissionAsync, hasAllPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { notifyOnIntegrationChanged } from '../../../../lib/server/lib/notifyListener';\nimport { validateScriptEngine, isScriptEngineFrozen } from '../../lib/validateScriptEngine';\n\nconst validChannelChars = ['@', '#'];\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\taddIncomingIntegration(integration: INewIncomingIntegration): Promise<IIncomingIntegration>;\n\t}\n}\n\nexport const addIncomingIntegration = async (userId: string, integration: INewIncomingIntegration): Promise<IIncomingIntegration> => {\n\tcheck(\n\t\tintegration,\n\t\tMatch.ObjectIncluding({\n\t\t\ttype: String,\n\t\t\tname: String,\n\t\t\tenabled: Boolean,\n\t\t\tusername: String,\n\t\t\tchannel: String,\n\t\t\talias: Match.Maybe(String),\n\t\t\temoji: Match.Maybe(String),\n\t\t\tscriptEnabled: Boolean,\n\t\t\tscriptEngine: Match.Maybe(String),\n\t\t\toverrideDestinationChannelEnabled: Match.Maybe(Boolean),\n\t\t\tscript: Match.Maybe(String),\n\t\t\tavatar: Match.Maybe(String),\n\t\t}),\n\t);\n\n\tif (\n\t\t!userId ||\n\t\t(!(await hasPermissionAsync(userId, 'manage-incoming-integrations')) &&\n\t\t\t!(await hasPermissionAsync(userId, 'manage-own-incoming-integrations')))\n\t) {\n\t\tthrow new Meteor.Error('not_authorized', 'Unauthorized', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tif (!integration.channel || typeof integration.channel.valueOf() !== 'string') {\n\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid channel', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tif (integration.channel.trim() === '') {\n\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid channel', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tconst channels = integration.channel.split(',').map((channel) => channel.trim());\n\n\tfor (const channel of channels) {\n\t\tif (!validChannelChars.includes(channel[0])) {\n\t\t\tthrow new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (!integration.username || typeof integration.username.valueOf() !== 'string' || integration.username.trim() === '') {\n\t\tthrow new Meteor.Error('error-invalid-username', 'Invalid username', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tif (integration.script?.trim()) {\n\t\tvalidateScriptEngine(integration.scriptEngine ?? 'isolated-vm');\n\t}\n\n\tconst user = await Users.findOne({ username: integration.username });\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tconst integrationData: IIncomingIntegration = {\n\t\t...integration,\n\t\tscriptEngine: integration.scriptEngine ?? 'isolated-vm',\n\t\ttype: 'webhook-incoming',\n\t\tchannel: channels,\n\t\toverrideDestinationChannelEnabled: integration.overrideDestinationChannelEnabled ?? false,\n\t\ttoken: Random.id(48),\n\t\tuserId: user._id,\n\t\t_createdAt: new Date(),\n\t\t_createdBy: await Users.findOne({ _id: userId }, { projection: { username: 1 } }),\n\t};\n\n\t// Only compile the script if it is enabled and using a sandbox that is not frozen\n\tif (\n\t\t!isScriptEngineFrozen(integrationData.scriptEngine) &&\n\t\tintegration.scriptEnabled === true &&\n\t\tintegration.script &&\n\t\tintegration.script.trim() !== ''\n\t) {\n\t\ttry {\n\t\t\tlet babelOptions = Babel.getDefaultOptions({ runtime: false });\n\t\t\tbabelOptions = _.extend(babelOptions, { compact: true, minified: true, comments: false });\n\n\t\t\tintegrationData.scriptCompiled = Babel.compile(integration.script, babelOptions).code;\n\t\t\tintegrationData.scriptError = undefined;\n\t\t} catch (e) {\n\t\t\tintegrationData.scriptCompiled = undefined;\n\t\t\tintegrationData.scriptError = e instanceof Error ? _.pick(e, 'name', 'message', 'stack') : undefined;\n\t\t}\n\t}\n\n\tfor await (let channel of channels) {\n\t\tlet record;\n\t\tconst channelType = channel[0];\n\t\tchannel = channel.substr(1);\n\n\t\tswitch (channelType) {\n\t\t\tcase '#':\n\t\t\t\trecord = await Rooms.findOne({\n\t\t\t\t\t$or: [{ _id: channel }, { name: channel }],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase '@':\n\t\t\t\trecord = await Users.findOne({\n\t\t\t\t\t$or: [{ _id: channel }, { username: channel }],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!record) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'addIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\t!(await hasAllPermissionAsync(userId, ['manage-incoming-integrations', 'manage-own-incoming-integrations'])) &&\n\t\t\t!(await Subscriptions.findOneByRoomIdAndUserId(record._id, userId, { projection: { _id: 1 } }))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\tmethod: 'addIncomingIntegration',\n\t\t\t});\n\t\t}\n\t}\n\n\tawait Roles.addUserRoles(user._id, ['bot']);\n\n\tconst { insertedId } = await Integrations.insertOne(integrationData);\n\n\tif (insertedId) {\n\t\tvoid notifyOnIntegrationChanged({ ...integrationData, _id: insertedId }, 'inserted');\n\t}\n\n\tintegrationData._id = insertedId;\n\n\treturn integrationData;\n};\n\nMeteor.methods<ServerMethods>({\n\tasync addIncomingIntegration(integration: INewIncomingIntegration): Promise<IIncomingIntegration> {\n\t\tconst { userId } = this;\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('invalid-user', 'Invalid User', {\n\t\t\t\tmethod: 'addIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\treturn addIncomingIntegration(userId, integration);\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      addIncomingIntegration: () => addIncomingIntegration\n    });\n    let Integrations, Roles, Subscriptions, Users, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Integrations(v) {\n        Integrations = v;\n      },\n      Roles(v) {\n        Roles = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 0);\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 1);\n    let Babel;\n    module.link(\"meteor/babel-compiler\", {\n      Babel(v) {\n        Babel = v;\n      }\n    }, 2);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 3);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 4);\n    let _;\n    module.link(\"underscore\", {\n      default(v) {\n        _ = v;\n      }\n    }, 5);\n    let hasPermissionAsync, hasAllPermissionAsync;\n    module.link(\"../../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      },\n      hasAllPermissionAsync(v) {\n        hasAllPermissionAsync = v;\n      }\n    }, 6);\n    let notifyOnIntegrationChanged;\n    module.link(\"../../../../lib/server/lib/notifyListener\", {\n      notifyOnIntegrationChanged(v) {\n        notifyOnIntegrationChanged = v;\n      }\n    }, 7);\n    let validateScriptEngine, isScriptEngineFrozen;\n    module.link(\"../../lib/validateScriptEngine\", {\n      validateScriptEngine(v) {\n        validateScriptEngine = v;\n      },\n      isScriptEngineFrozen(v) {\n        isScriptEngineFrozen = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const validChannelChars = ['@', '#'];\n    const addIncomingIntegration = async (userId, integration) => {\n      var _integration$script, _integration$scriptEn2, _integration$override;\n      check(integration, Match.ObjectIncluding({\n        type: String,\n        name: String,\n        enabled: Boolean,\n        username: String,\n        channel: String,\n        alias: Match.Maybe(String),\n        emoji: Match.Maybe(String),\n        scriptEnabled: Boolean,\n        scriptEngine: Match.Maybe(String),\n        overrideDestinationChannelEnabled: Match.Maybe(Boolean),\n        script: Match.Maybe(String),\n        avatar: Match.Maybe(String)\n      }));\n      if (!userId || !(await hasPermissionAsync(userId, 'manage-incoming-integrations')) && !(await hasPermissionAsync(userId, 'manage-own-incoming-integrations'))) {\n        throw new Meteor.Error('not_authorized', 'Unauthorized', {\n          method: 'addIncomingIntegration'\n        });\n      }\n      if (!integration.channel || typeof integration.channel.valueOf() !== 'string') {\n        throw new Meteor.Error('error-invalid-channel', 'Invalid channel', {\n          method: 'addIncomingIntegration'\n        });\n      }\n      if (integration.channel.trim() === '') {\n        throw new Meteor.Error('error-invalid-channel', 'Invalid channel', {\n          method: 'addIncomingIntegration'\n        });\n      }\n      const channels = integration.channel.split(',').map(channel => channel.trim());\n      for (const channel of channels) {\n        if (!validChannelChars.includes(channel[0])) {\n          throw new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n            method: 'updateIncomingIntegration'\n          });\n        }\n      }\n      if (!integration.username || typeof integration.username.valueOf() !== 'string' || integration.username.trim() === '') {\n        throw new Meteor.Error('error-invalid-username', 'Invalid username', {\n          method: 'addIncomingIntegration'\n        });\n      }\n      if ((_integration$script = integration.script) !== null && _integration$script !== void 0 && _integration$script.trim()) {\n        var _integration$scriptEn;\n        validateScriptEngine((_integration$scriptEn = integration.scriptEngine) !== null && _integration$scriptEn !== void 0 ? _integration$scriptEn : 'isolated-vm');\n      }\n      const user = await Users.findOne({\n        username: integration.username\n      });\n      if (!user) {\n        throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n          method: 'addIncomingIntegration'\n        });\n      }\n      const integrationData = _objectSpread(_objectSpread({}, integration), {}, {\n        scriptEngine: (_integration$scriptEn2 = integration.scriptEngine) !== null && _integration$scriptEn2 !== void 0 ? _integration$scriptEn2 : 'isolated-vm',\n        type: 'webhook-incoming',\n        channel: channels,\n        overrideDestinationChannelEnabled: (_integration$override = integration.overrideDestinationChannelEnabled) !== null && _integration$override !== void 0 ? _integration$override : false,\n        token: Random.id(48),\n        userId: user._id,\n        _createdAt: new Date(),\n        _createdBy: await Users.findOne({\n          _id: userId\n        }, {\n          projection: {\n            username: 1\n          }\n        })\n      });\n      // Only compile the script if it is enabled and using a sandbox that is not frozen\n      if (!isScriptEngineFrozen(integrationData.scriptEngine) && integration.scriptEnabled === true && integration.script && integration.script.trim() !== '') {\n        try {\n          let babelOptions = Babel.getDefaultOptions({\n            runtime: false\n          });\n          babelOptions = _.extend(babelOptions, {\n            compact: true,\n            minified: true,\n            comments: false\n          });\n          integrationData.scriptCompiled = Babel.compile(integration.script, babelOptions).code;\n          integrationData.scriptError = undefined;\n        } catch (e) {\n          integrationData.scriptCompiled = undefined;\n          integrationData.scriptError = e instanceof Error ? _.pick(e, 'name', 'message', 'stack') : undefined;\n        }\n      }\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(channels), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          let channel = _step.value;\n          {\n            let record;\n            const channelType = channel[0];\n            channel = channel.substr(1);\n            switch (channelType) {\n              case '#':\n                record = await Rooms.findOne({\n                  $or: [{\n                    _id: channel\n                  }, {\n                    name: channel\n                  }]\n                });\n                break;\n              case '@':\n                record = await Users.findOne({\n                  $or: [{\n                    _id: channel\n                  }, {\n                    username: channel\n                  }]\n                });\n                break;\n            }\n            if (!record) {\n              throw new Meteor.Error('error-invalid-room', 'Invalid room', {\n                method: 'addIncomingIntegration'\n              });\n            }\n            if (!(await hasAllPermissionAsync(userId, ['manage-incoming-integrations', 'manage-own-incoming-integrations'])) && !(await Subscriptions.findOneByRoomIdAndUserId(record._id, userId, {\n              projection: {\n                _id: 1\n              }\n            }))) {\n              throw new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n                method: 'addIncomingIntegration'\n              });\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            await _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      await Roles.addUserRoles(user._id, ['bot']);\n      const {\n        insertedId\n      } = await Integrations.insertOne(integrationData);\n      if (insertedId) {\n        void notifyOnIntegrationChanged(_objectSpread(_objectSpread({}, integrationData), {}, {\n          _id: insertedId\n        }), 'inserted');\n      }\n      integrationData._id = insertedId;\n      return integrationData;\n    };\n    Meteor.methods({\n      async addIncomingIntegration(integration) {\n        const {\n          userId\n        } = this;\n        if (!userId) {\n          throw new Meteor.Error('invalid-user', 'Invalid User', {\n            method: 'addIncomingIntegration'\n          });\n        }\n        return addIncomingIntegration(userId, integration);\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","addIncomingIntegration","Integrations","Roles","Subscriptions","Users","Rooms","Random","Babel","Match","check","Meteor","_","hasPermissionAsync","hasAllPermissionAsync","notifyOnIntegrationChanged","validateScriptEngine","isScriptEngineFrozen","__reifyWaitForDeps__","validChannelChars","userId","integration","_integration$script","_integration$scriptEn2","_integration$override","ObjectIncluding","type","String","name","enabled","Boolean","username","channel","alias","Maybe","emoji","scriptEnabled","scriptEngine","overrideDestinationChannelEnabled","script","avatar","Error","method","valueOf","trim","channels","split","map","includes","_integration$scriptEn","user","findOne","integrationData","token","id","_id","_createdAt","Date","_createdBy","projection","babelOptions","getDefaultOptions","runtime","extend","compact","minified","comments","scriptCompiled","compile","code","scriptError","undefined","e","pick","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","value","record","channelType","substr","$or","findOneByRoomIdAndUserId","err","return","addUserRoles","insertedId","insertOne","methods","__reify_async_result__","_reifyError","self","async"],"sources":["app/integrations/server/methods/incoming/addIncomingIntegration.ts"],"sourcesContent":["import type { INewIncomingIntegration, IIncomingIntegration } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Integrations, Roles, Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport { Babel } from 'meteor/babel-compiler';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { hasPermissionAsync, hasAllPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { notifyOnIntegrationChanged } from '../../../../lib/server/lib/notifyListener';\nimport { validateScriptEngine, isScriptEngineFrozen } from '../../lib/validateScriptEngine';\n\nconst validChannelChars = ['@', '#'];\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\taddIncomingIntegration(integration: INewIncomingIntegration): Promise<IIncomingIntegration>;\n\t}\n}\n\nexport const addIncomingIntegration = async (userId: string, integration: INewIncomingIntegration): Promise<IIncomingIntegration> => {\n\tcheck(\n\t\tintegration,\n\t\tMatch.ObjectIncluding({\n\t\t\ttype: String,\n\t\t\tname: String,\n\t\t\tenabled: Boolean,\n\t\t\tusername: String,\n\t\t\tchannel: String,\n\t\t\talias: Match.Maybe(String),\n\t\t\temoji: Match.Maybe(String),\n\t\t\tscriptEnabled: Boolean,\n\t\t\tscriptEngine: Match.Maybe(String),\n\t\t\toverrideDestinationChannelEnabled: Match.Maybe(Boolean),\n\t\t\tscript: Match.Maybe(String),\n\t\t\tavatar: Match.Maybe(String),\n\t\t}),\n\t);\n\n\tif (\n\t\t!userId ||\n\t\t(!(await hasPermissionAsync(userId, 'manage-incoming-integrations')) &&\n\t\t\t!(await hasPermissionAsync(userId, 'manage-own-incoming-integrations')))\n\t) {\n\t\tthrow new Meteor.Error('not_authorized', 'Unauthorized', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tif (!integration.channel || typeof integration.channel.valueOf() !== 'string') {\n\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid channel', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tif (integration.channel.trim() === '') {\n\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid channel', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tconst channels = integration.channel.split(',').map((channel) => channel.trim());\n\n\tfor (const channel of channels) {\n\t\tif (!validChannelChars.includes(channel[0])) {\n\t\t\tthrow new Meteor.Error('error-invalid-channel-start-with-chars', 'Invalid channel. Start with @ or #', {\n\t\t\t\tmethod: 'updateIncomingIntegration',\n\t\t\t});\n\t\t}\n\t}\n\n\tif (!integration.username || typeof integration.username.valueOf() !== 'string' || integration.username.trim() === '') {\n\t\tthrow new Meteor.Error('error-invalid-username', 'Invalid username', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tif (integration.script?.trim()) {\n\t\tvalidateScriptEngine(integration.scriptEngine ?? 'isolated-vm');\n\t}\n\n\tconst user = await Users.findOne({ username: integration.username });\n\n\tif (!user) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\tmethod: 'addIncomingIntegration',\n\t\t});\n\t}\n\n\tconst integrationData: IIncomingIntegration = {\n\t\t...integration,\n\t\tscriptEngine: integration.scriptEngine ?? 'isolated-vm',\n\t\ttype: 'webhook-incoming',\n\t\tchannel: channels,\n\t\toverrideDestinationChannelEnabled: integration.overrideDestinationChannelEnabled ?? false,\n\t\ttoken: Random.id(48),\n\t\tuserId: user._id,\n\t\t_createdAt: new Date(),\n\t\t_createdBy: await Users.findOne({ _id: userId }, { projection: { username: 1 } }),\n\t};\n\n\t// Only compile the script if it is enabled and using a sandbox that is not frozen\n\tif (\n\t\t!isScriptEngineFrozen(integrationData.scriptEngine) &&\n\t\tintegration.scriptEnabled === true &&\n\t\tintegration.script &&\n\t\tintegration.script.trim() !== ''\n\t) {\n\t\ttry {\n\t\t\tlet babelOptions = Babel.getDefaultOptions({ runtime: false });\n\t\t\tbabelOptions = _.extend(babelOptions, { compact: true, minified: true, comments: false });\n\n\t\t\tintegrationData.scriptCompiled = Babel.compile(integration.script, babelOptions).code;\n\t\t\tintegrationData.scriptError = undefined;\n\t\t} catch (e) {\n\t\t\tintegrationData.scriptCompiled = undefined;\n\t\t\tintegrationData.scriptError = e instanceof Error ? _.pick(e, 'name', 'message', 'stack') : undefined;\n\t\t}\n\t}\n\n\tfor await (let channel of channels) {\n\t\tlet record;\n\t\tconst channelType = channel[0];\n\t\tchannel = channel.substr(1);\n\n\t\tswitch (channelType) {\n\t\t\tcase '#':\n\t\t\t\trecord = await Rooms.findOne({\n\t\t\t\t\t$or: [{ _id: channel }, { name: channel }],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase '@':\n\t\t\t\trecord = await Users.findOne({\n\t\t\t\t\t$or: [{ _id: channel }, { username: channel }],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!record) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'addIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\t!(await hasAllPermissionAsync(userId, ['manage-incoming-integrations', 'manage-own-incoming-integrations'])) &&\n\t\t\t!(await Subscriptions.findOneByRoomIdAndUserId(record._id, userId, { projection: { _id: 1 } }))\n\t\t) {\n\t\t\tthrow new Meteor.Error('error-invalid-channel', 'Invalid Channel', {\n\t\t\t\tmethod: 'addIncomingIntegration',\n\t\t\t});\n\t\t}\n\t}\n\n\tawait Roles.addUserRoles(user._id, ['bot']);\n\n\tconst { insertedId } = await Integrations.insertOne(integrationData);\n\n\tif (insertedId) {\n\t\tvoid notifyOnIntegrationChanged({ ...integrationData, _id: insertedId }, 'inserted');\n\t}\n\n\tintegrationData._id = insertedId;\n\n\treturn integrationData;\n};\n\nMeteor.methods<ServerMethods>({\n\tasync addIncomingIntegration(integration: INewIncomingIntegration): Promise<IIncomingIntegration> {\n\t\tconst { userId } = this;\n\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('invalid-user', 'Invalid User', {\n\t\t\t\tmethod: 'addIncomingIntegration',\n\t\t\t});\n\t\t}\n\n\t\treturn addIncomingIntegration(userId, integration);\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"002e5fe8369ccc8070d3607c9cefbde28b9c3cae"}
