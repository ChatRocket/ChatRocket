{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/methods/saveSettings.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/methods/saveSettings.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/methods/saveSettings.ts","inputSourceMap":{"version":3,"file":"app/lib/server/methods/saveSettings.ts","sourceRoot":"","sources":["app/lib/server/methods/saveSettings.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISetting } from '@rocket.chat/core-typings';\nimport { isSettingCode } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Settings } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { updateAuditedByUser } from '../../../../server/settings/lib/auditedSettingUpdates';\nimport { twoFactorRequired } from '../../../2fa/server/twoFactorRequired';\nimport { getSettingPermissionId } from '../../../authorization/lib';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\nimport { disableCustomScripts } from '../functions/disableCustomScripts';\nimport { notifyOnSettingChangedById } from '../lib/notifyListener';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsaveSettings(\n\t\t\tchanges: {\n\t\t\t\t_id: ISetting['_id'];\n\t\t\t\tvalue: ISetting['value'];\n\t\t\t}[],\n\t\t): Promise<boolean>;\n\t}\n}\n\nconst validJSON = Match.Where((value: string) => {\n\ttry {\n\t\tvalue === '' || JSON.parse(value);\n\t\treturn true;\n\t} catch (_) {\n\t\tthrow new Meteor.Error('Invalid JSON provided');\n\t}\n});\n\nMeteor.methods<ServerMethods>({\n\tsaveSettings: twoFactorRequired(\n\t\tasync (\n\t\t\tparams: {\n\t\t\t\t_id: ISetting['_id'];\n\t\t\t\tvalue: ISetting['value'];\n\t\t\t}[] = [],\n\t\t) => {\n\t\t\tconst uid = Meteor.userId();\n\t\t\tconst settingsNotAllowed: ISetting['_id'][] = [];\n\t\t\tif (uid === null) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing settings is not allowed', {\n\t\t\t\t\tmethod: 'saveSetting',\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst editPrivilegedSetting = await hasPermissionAsync(uid, 'edit-privileged-setting');\n\t\t\tconst manageSelectedSettings = await hasPermissionAsync(uid, 'manage-selected-settings');\n\n\t\t\t// if the id contains Organization_Name then change the Site_Name\n\t\t\tconst orgName = params.find(({ _id }) => _id === 'Organization_Name');\n\n\t\t\tif (orgName) {\n\t\t\t\t// check if the site name is still the default value or ifs the same as organization name\n\t\t\t\tconst siteName = await Settings.findOneById('Site_Name');\n\n\t\t\t\tif (siteName?.value === siteName?.packageValue || siteName?.value === settings.get('Organization_Name')) {\n\t\t\t\t\tparams.push({\n\t\t\t\t\t\t_id: 'Site_Name',\n\t\t\t\t\t\tvalue: orgName.value,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait Promise.all(\n\t\t\t\tparams.map(async ({ _id, value }) => {\n\t\t\t\t\t// Verify the _id passed in is a string.\n\t\t\t\t\tcheck(_id, String);\n\t\t\t\t\tif (!editPrivilegedSetting && !(manageSelectedSettings && (await hasPermissionAsync(uid, getSettingPermissionId(_id))))) {\n\t\t\t\t\t\treturn settingsNotAllowed.push(_id);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Disable custom scripts in cloud trials to prevent phishing campaigns\n\t\t\t\t\tif (disableCustomScripts() && /^Custom_Script_/.test(_id)) {\n\t\t\t\t\t\treturn settingsNotAllowed.push(_id);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst setting = await Settings.findOneById(_id);\n\t\t\t\t\t// Verify the value is what it should be\n\t\t\t\t\tswitch (setting?.type) {\n\t\t\t\t\t\tcase 'roomPick':\n\t\t\t\t\t\t\tcheck(value, Match.OneOf([Object], ''));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\t\tcheck(value, Boolean);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'timespan':\n\t\t\t\t\t\tcase 'int':\n\t\t\t\t\t\t\tcheck(value, Number);\n\t\t\t\t\t\t\tif (!Number.isInteger(value)) {\n\t\t\t\t\t\t\t\tthrow new Meteor.Error(`Invalid setting value ${value}`, 'Invalid setting value', {\n\t\t\t\t\t\t\t\t\tmethod: 'saveSettings',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'multiSelect':\n\t\t\t\t\t\t\tcheck(value, Array);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'code':\n\t\t\t\t\t\t\tcheck(value, String);\n\t\t\t\t\t\t\tif (isSettingCode(setting) && setting.code === 'application/json') {\n\t\t\t\t\t\t\t\tcheck(value, validJSON);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcheck(value, String);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tif (settingsNotAllowed.length) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing settings is not allowed', {\n\t\t\t\t\tmethod: 'saveSettings',\n\t\t\t\t\tsettingIds: settingsNotAllowed,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst auditSettingOperation = updateAuditedByUser({\n\t\t\t\t_id: uid,\n\t\t\t\tusername: (await Meteor.userAsync())!.username!,\n\t\t\t\tip: Meteor.connection.clientAddress,\n\t\t\t\tuseragent: Meteor.connection.httpHeaders['user-agent'] || '',\n\t\t\t});\n\n\t\t\tconst promises = params.map(({ _id, value }) => auditSettingOperation(Settings.updateValueById, _id, value));\n\n\t\t\t(await Promise.all(promises)).forEach((value, index) => {\n\t\t\t\tif (value?.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSettingChangedById(params[index]._id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn true;\n\t\t},\n\t\t{},\n\t),\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/methods/saveSettings.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/methods/saveSettings.ts","inputSourceMap":{"version":3,"file":"app/lib/server/methods/saveSettings.ts","sourceRoot":"","sources":["app/lib/server/methods/saveSettings.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISetting } from '@rocket.chat/core-typings';\nimport { isSettingCode } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Settings } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { updateAuditedByUser } from '../../../../server/settings/lib/auditedSettingUpdates';\nimport { twoFactorRequired } from '../../../2fa/server/twoFactorRequired';\nimport { getSettingPermissionId } from '../../../authorization/lib';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\nimport { disableCustomScripts } from '../functions/disableCustomScripts';\nimport { notifyOnSettingChangedById } from '../lib/notifyListener';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsaveSettings(\n\t\t\tchanges: {\n\t\t\t\t_id: ISetting['_id'];\n\t\t\t\tvalue: ISetting['value'];\n\t\t\t}[],\n\t\t): Promise<boolean>;\n\t}\n}\n\nconst validJSON = Match.Where((value: string) => {\n\ttry {\n\t\tvalue === '' || JSON.parse(value);\n\t\treturn true;\n\t} catch (_) {\n\t\tthrow new Meteor.Error('Invalid JSON provided');\n\t}\n});\n\nMeteor.methods<ServerMethods>({\n\tsaveSettings: twoFactorRequired(\n\t\tasync (\n\t\t\tparams: {\n\t\t\t\t_id: ISetting['_id'];\n\t\t\t\tvalue: ISetting['value'];\n\t\t\t}[] = [],\n\t\t) => {\n\t\t\tconst uid = Meteor.userId();\n\t\t\tconst settingsNotAllowed: ISetting['_id'][] = [];\n\t\t\tif (uid === null) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing settings is not allowed', {\n\t\t\t\t\tmethod: 'saveSetting',\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst editPrivilegedSetting = await hasPermissionAsync(uid, 'edit-privileged-setting');\n\t\t\tconst manageSelectedSettings = await hasPermissionAsync(uid, 'manage-selected-settings');\n\n\t\t\t// if the id contains Organization_Name then change the Site_Name\n\t\t\tconst orgName = params.find(({ _id }) => _id === 'Organization_Name');\n\n\t\t\tif (orgName) {\n\t\t\t\t// check if the site name is still the default value or ifs the same as organization name\n\t\t\t\tconst siteName = await Settings.findOneById('Site_Name');\n\n\t\t\t\tif (siteName?.value === siteName?.packageValue || siteName?.value === settings.get('Organization_Name')) {\n\t\t\t\t\tparams.push({\n\t\t\t\t\t\t_id: 'Site_Name',\n\t\t\t\t\t\tvalue: orgName.value,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait Promise.all(\n\t\t\t\tparams.map(async ({ _id, value }) => {\n\t\t\t\t\t// Verify the _id passed in is a string.\n\t\t\t\t\tcheck(_id, String);\n\t\t\t\t\tif (!editPrivilegedSetting && !(manageSelectedSettings && (await hasPermissionAsync(uid, getSettingPermissionId(_id))))) {\n\t\t\t\t\t\treturn settingsNotAllowed.push(_id);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Disable custom scripts in cloud trials to prevent phishing campaigns\n\t\t\t\t\tif (disableCustomScripts() && /^Custom_Script_/.test(_id)) {\n\t\t\t\t\t\treturn settingsNotAllowed.push(_id);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst setting = await Settings.findOneById(_id);\n\t\t\t\t\t// Verify the value is what it should be\n\t\t\t\t\tswitch (setting?.type) {\n\t\t\t\t\t\tcase 'roomPick':\n\t\t\t\t\t\t\tcheck(value, Match.OneOf([Object], ''));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\t\tcheck(value, Boolean);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'timespan':\n\t\t\t\t\t\tcase 'int':\n\t\t\t\t\t\t\tcheck(value, Number);\n\t\t\t\t\t\t\tif (!Number.isInteger(value)) {\n\t\t\t\t\t\t\t\tthrow new Meteor.Error(`Invalid setting value ${value}`, 'Invalid setting value', {\n\t\t\t\t\t\t\t\t\tmethod: 'saveSettings',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'multiSelect':\n\t\t\t\t\t\t\tcheck(value, Array);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'code':\n\t\t\t\t\t\t\tcheck(value, String);\n\t\t\t\t\t\t\tif (isSettingCode(setting) && setting.code === 'application/json') {\n\t\t\t\t\t\t\t\tcheck(value, validJSON);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcheck(value, String);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tif (settingsNotAllowed.length) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing settings is not allowed', {\n\t\t\t\t\tmethod: 'saveSettings',\n\t\t\t\t\tsettingIds: settingsNotAllowed,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst auditSettingOperation = updateAuditedByUser({\n\t\t\t\t_id: uid,\n\t\t\t\tusername: (await Meteor.userAsync())!.username!,\n\t\t\t\tip: Meteor.connection.clientAddress,\n\t\t\t\tuseragent: Meteor.connection.httpHeaders['user-agent'] || '',\n\t\t\t});\n\n\t\t\tconst promises = params.map(({ _id, value }) => auditSettingOperation(Settings.updateValueById, _id, value));\n\n\t\t\t(await Promise.all(promises)).forEach((value, index) => {\n\t\t\t\tif (value?.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSettingChangedById(params[index]._id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn true;\n\t\t},\n\t\t{},\n\t),\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let isSettingCode;\n    module.link(\"@rocket.chat/core-typings\", {\n      isSettingCode(v) {\n        isSettingCode = v;\n      }\n    }, 0);\n    let Settings;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      }\n    }, 1);\n    let Match, check;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      },\n      check(v) {\n        check = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let updateAuditedByUser;\n    module.link(\"../../../../server/settings/lib/auditedSettingUpdates\", {\n      updateAuditedByUser(v) {\n        updateAuditedByUser = v;\n      }\n    }, 4);\n    let twoFactorRequired;\n    module.link(\"../../../2fa/server/twoFactorRequired\", {\n      twoFactorRequired(v) {\n        twoFactorRequired = v;\n      }\n    }, 5);\n    let getSettingPermissionId;\n    module.link(\"../../../authorization/lib\", {\n      getSettingPermissionId(v) {\n        getSettingPermissionId = v;\n      }\n    }, 6);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 7);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 8);\n    let disableCustomScripts;\n    module.link(\"../functions/disableCustomScripts\", {\n      disableCustomScripts(v) {\n        disableCustomScripts = v;\n      }\n    }, 9);\n    let notifyOnSettingChangedById;\n    module.link(\"../lib/notifyListener\", {\n      notifyOnSettingChangedById(v) {\n        notifyOnSettingChangedById = v;\n      }\n    }, 10);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const validJSON = Match.Where(value => {\n      try {\n        value === '' || JSON.parse(value);\n        return true;\n      } catch (_) {\n        throw new Meteor.Error('Invalid JSON provided');\n      }\n    });\n    Meteor.methods({\n      saveSettings: twoFactorRequired(async function () {\n        let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        const uid = Meteor.userId();\n        const settingsNotAllowed = [];\n        if (uid === null) {\n          throw new Meteor.Error('error-action-not-allowed', 'Editing settings is not allowed', {\n            method: 'saveSetting'\n          });\n        }\n        const editPrivilegedSetting = await hasPermissionAsync(uid, 'edit-privileged-setting');\n        const manageSelectedSettings = await hasPermissionAsync(uid, 'manage-selected-settings');\n        // if the id contains Organization_Name then change the Site_Name\n        const orgName = params.find(_ref => {\n          let {\n            _id\n          } = _ref;\n          return _id === 'Organization_Name';\n        });\n        if (orgName) {\n          // check if the site name is still the default value or ifs the same as organization name\n          const siteName = await Settings.findOneById('Site_Name');\n          if ((siteName === null || siteName === void 0 ? void 0 : siteName.value) === (siteName === null || siteName === void 0 ? void 0 : siteName.packageValue) || (siteName === null || siteName === void 0 ? void 0 : siteName.value) === settings.get('Organization_Name')) {\n            params.push({\n              _id: 'Site_Name',\n              value: orgName.value\n            });\n          }\n        }\n        await Promise.all(params.map(async _ref2 => {\n          let {\n            _id,\n            value\n          } = _ref2;\n          // Verify the _id passed in is a string.\n          check(_id, String);\n          if (!editPrivilegedSetting && !(manageSelectedSettings && (await hasPermissionAsync(uid, getSettingPermissionId(_id))))) {\n            return settingsNotAllowed.push(_id);\n          }\n          // Disable custom scripts in cloud trials to prevent phishing campaigns\n          if (disableCustomScripts() && /^Custom_Script_/.test(_id)) {\n            return settingsNotAllowed.push(_id);\n          }\n          const setting = await Settings.findOneById(_id);\n          // Verify the value is what it should be\n          switch (setting === null || setting === void 0 ? void 0 : setting.type) {\n            case 'roomPick':\n              check(value, Match.OneOf([Object], ''));\n              break;\n            case 'boolean':\n              check(value, Boolean);\n              break;\n            case 'timespan':\n            case 'int':\n              check(value, Number);\n              if (!Number.isInteger(value)) {\n                throw new Meteor.Error(\"Invalid setting value \".concat(value), 'Invalid setting value', {\n                  method: 'saveSettings'\n                });\n              }\n              break;\n            case 'multiSelect':\n              check(value, Array);\n              break;\n            case 'code':\n              check(value, String);\n              if (isSettingCode(setting) && setting.code === 'application/json') {\n                check(value, validJSON);\n              }\n              break;\n            default:\n              check(value, String);\n              break;\n          }\n        }));\n        if (settingsNotAllowed.length) {\n          throw new Meteor.Error('error-action-not-allowed', 'Editing settings is not allowed', {\n            method: 'saveSettings',\n            settingIds: settingsNotAllowed\n          });\n        }\n        const auditSettingOperation = updateAuditedByUser({\n          _id: uid,\n          username: (await Meteor.userAsync()).username,\n          ip: Meteor.connection.clientAddress,\n          useragent: Meteor.connection.httpHeaders['user-agent'] || ''\n        });\n        const promises = params.map(_ref3 => {\n          let {\n            _id,\n            value\n          } = _ref3;\n          return auditSettingOperation(Settings.updateValueById, _id, value);\n        });\n        (await Promise.all(promises)).forEach((value, index) => {\n          if (value !== null && value !== void 0 && value.modifiedCount) {\n            void notifyOnSettingChangedById(params[index]._id);\n          }\n        });\n        return true;\n      }, {})\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["isSettingCode","module","link","v","Settings","Match","check","Meteor","updateAuditedByUser","twoFactorRequired","getSettingPermissionId","hasPermissionAsync","settings","disableCustomScripts","notifyOnSettingChangedById","__reifyWaitForDeps__","validJSON","Where","value","JSON","parse","_","Error","methods","saveSettings","params","arguments","length","undefined","uid","userId","settingsNotAllowed","method","editPrivilegedSetting","manageSelectedSettings","orgName","find","_ref","_id","siteName","findOneById","packageValue","get","push","Promise","all","map","_ref2","String","test","setting","type","OneOf","Object","Boolean","Number","isInteger","concat","Array","code","settingIds","auditSettingOperation","username","userAsync","ip","connection","clientAddress","useragent","httpHeaders","promises","_ref3","updateValueById","forEach","index","modifiedCount","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/methods/saveSettings.ts"],"sourcesContent":["import type { ISetting } from '@rocket.chat/core-typings';\nimport { isSettingCode } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Settings } from '@rocket.chat/models';\nimport { Match, check } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\n\nimport { updateAuditedByUser } from '../../../../server/settings/lib/auditedSettingUpdates';\nimport { twoFactorRequired } from '../../../2fa/server/twoFactorRequired';\nimport { getSettingPermissionId } from '../../../authorization/lib';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { settings } from '../../../settings/server';\nimport { disableCustomScripts } from '../functions/disableCustomScripts';\nimport { notifyOnSettingChangedById } from '../lib/notifyListener';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tsaveSettings(\n\t\t\tchanges: {\n\t\t\t\t_id: ISetting['_id'];\n\t\t\t\tvalue: ISetting['value'];\n\t\t\t}[],\n\t\t): Promise<boolean>;\n\t}\n}\n\nconst validJSON = Match.Where((value: string) => {\n\ttry {\n\t\tvalue === '' || JSON.parse(value);\n\t\treturn true;\n\t} catch (_) {\n\t\tthrow new Meteor.Error('Invalid JSON provided');\n\t}\n});\n\nMeteor.methods<ServerMethods>({\n\tsaveSettings: twoFactorRequired(\n\t\tasync (\n\t\t\tparams: {\n\t\t\t\t_id: ISetting['_id'];\n\t\t\t\tvalue: ISetting['value'];\n\t\t\t}[] = [],\n\t\t) => {\n\t\t\tconst uid = Meteor.userId();\n\t\t\tconst settingsNotAllowed: ISetting['_id'][] = [];\n\t\t\tif (uid === null) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing settings is not allowed', {\n\t\t\t\t\tmethod: 'saveSetting',\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst editPrivilegedSetting = await hasPermissionAsync(uid, 'edit-privileged-setting');\n\t\t\tconst manageSelectedSettings = await hasPermissionAsync(uid, 'manage-selected-settings');\n\n\t\t\t// if the id contains Organization_Name then change the Site_Name\n\t\t\tconst orgName = params.find(({ _id }) => _id === 'Organization_Name');\n\n\t\t\tif (orgName) {\n\t\t\t\t// check if the site name is still the default value or ifs the same as organization name\n\t\t\t\tconst siteName = await Settings.findOneById('Site_Name');\n\n\t\t\t\tif (siteName?.value === siteName?.packageValue || siteName?.value === settings.get('Organization_Name')) {\n\t\t\t\t\tparams.push({\n\t\t\t\t\t\t_id: 'Site_Name',\n\t\t\t\t\t\tvalue: orgName.value,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait Promise.all(\n\t\t\t\tparams.map(async ({ _id, value }) => {\n\t\t\t\t\t// Verify the _id passed in is a string.\n\t\t\t\t\tcheck(_id, String);\n\t\t\t\t\tif (!editPrivilegedSetting && !(manageSelectedSettings && (await hasPermissionAsync(uid, getSettingPermissionId(_id))))) {\n\t\t\t\t\t\treturn settingsNotAllowed.push(_id);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Disable custom scripts in cloud trials to prevent phishing campaigns\n\t\t\t\t\tif (disableCustomScripts() && /^Custom_Script_/.test(_id)) {\n\t\t\t\t\t\treturn settingsNotAllowed.push(_id);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst setting = await Settings.findOneById(_id);\n\t\t\t\t\t// Verify the value is what it should be\n\t\t\t\t\tswitch (setting?.type) {\n\t\t\t\t\t\tcase 'roomPick':\n\t\t\t\t\t\t\tcheck(value, Match.OneOf([Object], ''));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\t\tcheck(value, Boolean);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'timespan':\n\t\t\t\t\t\tcase 'int':\n\t\t\t\t\t\t\tcheck(value, Number);\n\t\t\t\t\t\t\tif (!Number.isInteger(value)) {\n\t\t\t\t\t\t\t\tthrow new Meteor.Error(`Invalid setting value ${value}`, 'Invalid setting value', {\n\t\t\t\t\t\t\t\t\tmethod: 'saveSettings',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'multiSelect':\n\t\t\t\t\t\t\tcheck(value, Array);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'code':\n\t\t\t\t\t\t\tcheck(value, String);\n\t\t\t\t\t\t\tif (isSettingCode(setting) && setting.code === 'application/json') {\n\t\t\t\t\t\t\t\tcheck(value, validJSON);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcheck(value, String);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tif (settingsNotAllowed.length) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing settings is not allowed', {\n\t\t\t\t\tmethod: 'saveSettings',\n\t\t\t\t\tsettingIds: settingsNotAllowed,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst auditSettingOperation = updateAuditedByUser({\n\t\t\t\t_id: uid,\n\t\t\t\tusername: (await Meteor.userAsync())!.username!,\n\t\t\t\tip: Meteor.connection.clientAddress,\n\t\t\t\tuseragent: Meteor.connection.httpHeaders['user-agent'] || '',\n\t\t\t});\n\n\t\t\tconst promises = params.map(({ _id, value }) => auditSettingOperation(Settings.updateValueById, _id, value));\n\n\t\t\t(await Promise.all(promises)).forEach((value, index) => {\n\t\t\t\tif (value?.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSettingChangedById(params[index]._id);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn true;\n\t\t},\n\t\t{},\n\t),\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"59d42a1ee1284a21d6dc516962e4d17114892483"}
