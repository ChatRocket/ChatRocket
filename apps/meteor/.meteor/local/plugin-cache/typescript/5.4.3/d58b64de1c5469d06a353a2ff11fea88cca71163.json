{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/lib/tags.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/api/lib/tags.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/lib/tags.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/lib/tags.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/lib/tags.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatTag } from '@rocket.chat/core-typings';\nimport { LivechatTag } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Filter, FindOptions } from 'mongodb';\n\nimport { hasPermissionAsync } from '../../../../../../app/authorization/server/functions/hasPermission';\nimport { helperLogger } from '../../lib/logger';\nimport { getDepartmentsWhichUserCanAccess } from './departments';\n\ntype FindTagsParams = {\n\tuserId: string;\n\ttext?: string;\n\tpagination: {\n\t\toffset: number;\n\t\tcount: number;\n\t\tsort: FindOptions<ILivechatTag>['sort'];\n\t};\n\tdepartment?: string;\n\tviewAll?: boolean;\n};\n\ntype FindTagsResult = {\n\ttags: ILivechatTag[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n};\n\ntype FindTagsByIdParams = {\n\tuserId: string;\n\ttagId: string;\n};\n\ntype FindTagsByIdResult = ILivechatTag | null;\n\n// If viewAll is true\n//  -> & user has access to all tags\n//      -> then all tags will be returned\n//          -> Pages:\n//              - Admin > Omnichannel > Tags\n//              - Current chat's panel, filter by tags\n//              - Canned response creation\n//  -> & user does not have access to all tags\n//      -> then only public tags will be returned (unauthorized access - no page uses this)\n// If viewAll is false\n// -> & user has access to all tags\n//      -> & department is not specified\n//          -> only public tags will be returned (Pages: Close chat modal tag selection for chats not associated with a department being closed by manager)\n//      -> & department is specified\n//          -> only tags associated with the department will be returned (Page: Close chat modal tag selection for chats associated with a department being closed by manager)\n// -> & user does not have access to all tags (same as viewAll = false & user has access to all tags)\n//      -> & department is not specified\n//          -> only public tags will be returned (Page: Close chat modal tag selection for chats not associated with a department being closed by agent)\n//      -> & department is specified\n//          -> only tags associated with the department will be returned (Page: Close chat modal tag selection for chats associated with a department being closed by agent)\nexport async function findTags({\n\tuserId,\n\ttext,\n\tdepartment,\n\tviewAll,\n\tpagination: { offset, count, sort },\n}: FindTagsParams): Promise<FindTagsResult> {\n\tlet filteredDepartmentIds: string[] = [];\n\n\tif (!(await hasPermissionAsync(userId, 'manage-livechat-tags'))) {\n\t\tif (viewAll) {\n\t\t\tviewAll = false;\n\t\t}\n\n\t\t// Get a list of all departments this user has access to and only\n\t\t// return tags that are associated with those departments\n\t\tfilteredDepartmentIds = await getDepartmentsWhichUserCanAccess(userId);\n\n\t\thelperLogger.debug({\n\t\t\tmsg: 'User does not have permission to manage livechat tags. Filtering tags by departments user has access to.',\n\t\t\tuserId,\n\t\t\taccessibleDepartmentsLength: filteredDepartmentIds.length,\n\t\t\ttop5AccessibleDepartments: filteredDepartmentIds.slice(0, 5),\n\t\t});\n\n\t\tif (department && !filteredDepartmentIds.includes(department)) {\n\t\t\tdepartment = undefined;\n\t\t}\n\t}\n\n\tif (department) {\n\t\t// In certain cases, the user would only want to see tags for a specific department\n\t\t// EG: When closing the chat which is associated with a specific department\n\t\t// user get's to choose which tag to use to close the chat\n\t\t// (only tags associated with the department should be shown)\n\t\tfilteredDepartmentIds = [department];\n\t}\n\n\tconst query: {\n\t\t$and?: Filter<ILivechatTag>[];\n\t} = {\n\t\t$and: [\n\t\t\t...(text ? [{ $or: [{ name: new RegExp(escapeRegExp(text), 'i') }, { description: new RegExp(escapeRegExp(text), 'i') }] }] : []),\n\t\t\t...(!viewAll\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t\t{ departments: { $size: 0 } },\n\t\t\t\t\t\t\t\t...(filteredDepartmentIds.length ? [{ departments: { $in: filteredDepartmentIds } }] : []),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t: []),\n\t\t],\n\t};\n\n\tif (!query?.$and?.length) {\n\t\tdelete query.$and;\n\t}\n\n\tconst { cursor, totalCount } = LivechatTag.findPaginated(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [tags, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\ttags,\n\t\tcount: tags.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findTagById({ tagId }: FindTagsByIdParams): Promise<FindTagsByIdResult> {\n\treturn LivechatTag.findOneById(tagId);\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/lib/tags.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/api/lib/tags.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/lib/tags.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/lib/tags.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatTag } from '@rocket.chat/core-typings';\nimport { LivechatTag } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Filter, FindOptions } from 'mongodb';\n\nimport { hasPermissionAsync } from '../../../../../../app/authorization/server/functions/hasPermission';\nimport { helperLogger } from '../../lib/logger';\nimport { getDepartmentsWhichUserCanAccess } from './departments';\n\ntype FindTagsParams = {\n\tuserId: string;\n\ttext?: string;\n\tpagination: {\n\t\toffset: number;\n\t\tcount: number;\n\t\tsort: FindOptions<ILivechatTag>['sort'];\n\t};\n\tdepartment?: string;\n\tviewAll?: boolean;\n};\n\ntype FindTagsResult = {\n\ttags: ILivechatTag[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n};\n\ntype FindTagsByIdParams = {\n\tuserId: string;\n\ttagId: string;\n};\n\ntype FindTagsByIdResult = ILivechatTag | null;\n\n// If viewAll is true\n//  -> & user has access to all tags\n//      -> then all tags will be returned\n//          -> Pages:\n//              - Admin > Omnichannel > Tags\n//              - Current chat's panel, filter by tags\n//              - Canned response creation\n//  -> & user does not have access to all tags\n//      -> then only public tags will be returned (unauthorized access - no page uses this)\n// If viewAll is false\n// -> & user has access to all tags\n//      -> & department is not specified\n//          -> only public tags will be returned (Pages: Close chat modal tag selection for chats not associated with a department being closed by manager)\n//      -> & department is specified\n//          -> only tags associated with the department will be returned (Page: Close chat modal tag selection for chats associated with a department being closed by manager)\n// -> & user does not have access to all tags (same as viewAll = false & user has access to all tags)\n//      -> & department is not specified\n//          -> only public tags will be returned (Page: Close chat modal tag selection for chats not associated with a department being closed by agent)\n//      -> & department is specified\n//          -> only tags associated with the department will be returned (Page: Close chat modal tag selection for chats associated with a department being closed by agent)\nexport async function findTags({\n\tuserId,\n\ttext,\n\tdepartment,\n\tviewAll,\n\tpagination: { offset, count, sort },\n}: FindTagsParams): Promise<FindTagsResult> {\n\tlet filteredDepartmentIds: string[] = [];\n\n\tif (!(await hasPermissionAsync(userId, 'manage-livechat-tags'))) {\n\t\tif (viewAll) {\n\t\t\tviewAll = false;\n\t\t}\n\n\t\t// Get a list of all departments this user has access to and only\n\t\t// return tags that are associated with those departments\n\t\tfilteredDepartmentIds = await getDepartmentsWhichUserCanAccess(userId);\n\n\t\thelperLogger.debug({\n\t\t\tmsg: 'User does not have permission to manage livechat tags. Filtering tags by departments user has access to.',\n\t\t\tuserId,\n\t\t\taccessibleDepartmentsLength: filteredDepartmentIds.length,\n\t\t\ttop5AccessibleDepartments: filteredDepartmentIds.slice(0, 5),\n\t\t});\n\n\t\tif (department && !filteredDepartmentIds.includes(department)) {\n\t\t\tdepartment = undefined;\n\t\t}\n\t}\n\n\tif (department) {\n\t\t// In certain cases, the user would only want to see tags for a specific department\n\t\t// EG: When closing the chat which is associated with a specific department\n\t\t// user get's to choose which tag to use to close the chat\n\t\t// (only tags associated with the department should be shown)\n\t\tfilteredDepartmentIds = [department];\n\t}\n\n\tconst query: {\n\t\t$and?: Filter<ILivechatTag>[];\n\t} = {\n\t\t$and: [\n\t\t\t...(text ? [{ $or: [{ name: new RegExp(escapeRegExp(text), 'i') }, { description: new RegExp(escapeRegExp(text), 'i') }] }] : []),\n\t\t\t...(!viewAll\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t\t{ departments: { $size: 0 } },\n\t\t\t\t\t\t\t\t...(filteredDepartmentIds.length ? [{ departments: { $in: filteredDepartmentIds } }] : []),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t: []),\n\t\t],\n\t};\n\n\tif (!query?.$and?.length) {\n\t\tdelete query.$and;\n\t}\n\n\tconst { cursor, totalCount } = LivechatTag.findPaginated(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [tags, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\ttags,\n\t\tcount: tags.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findTagById({ tagId }: FindTagsByIdParams): Promise<FindTagsByIdResult> {\n\treturn LivechatTag.findOneById(tagId);\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      findTags: () => findTags,\n      findTagById: () => findTagById\n    });\n    let LivechatTag;\n    module.link(\"@rocket.chat/models\", {\n      LivechatTag(v) {\n        LivechatTag = v;\n      }\n    }, 0);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 1);\n    let hasPermissionAsync;\n    module.link(\"../../../../../../app/authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 2);\n    let helperLogger;\n    module.link(\"../../lib/logger\", {\n      helperLogger(v) {\n        helperLogger = v;\n      }\n    }, 3);\n    let getDepartmentsWhichUserCanAccess;\n    module.link(\"./departments\", {\n      getDepartmentsWhichUserCanAccess(v) {\n        getDepartmentsWhichUserCanAccess = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function findTags(_ref) {\n      var _query$$and;\n      let {\n        userId,\n        text,\n        department,\n        viewAll,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref;\n      let filteredDepartmentIds = [];\n      if (!(await hasPermissionAsync(userId, 'manage-livechat-tags'))) {\n        if (viewAll) {\n          viewAll = false;\n        }\n        // Get a list of all departments this user has access to and only\n        // return tags that are associated with those departments\n        filteredDepartmentIds = await getDepartmentsWhichUserCanAccess(userId);\n        helperLogger.debug({\n          msg: 'User does not have permission to manage livechat tags. Filtering tags by departments user has access to.',\n          userId,\n          accessibleDepartmentsLength: filteredDepartmentIds.length,\n          top5AccessibleDepartments: filteredDepartmentIds.slice(0, 5)\n        });\n        if (department && !filteredDepartmentIds.includes(department)) {\n          department = undefined;\n        }\n      }\n      if (department) {\n        // In certain cases, the user would only want to see tags for a specific department\n        // EG: When closing the chat which is associated with a specific department\n        // user get's to choose which tag to use to close the chat\n        // (only tags associated with the department should be shown)\n        filteredDepartmentIds = [department];\n      }\n      const query = {\n        $and: [...(text ? [{\n          $or: [{\n            name: new RegExp(escapeRegExp(text), 'i')\n          }, {\n            description: new RegExp(escapeRegExp(text), 'i')\n          }]\n        }] : []), ...(!viewAll ? [{\n          $or: [{\n            departments: {\n              $size: 0\n            }\n          }, ...(filteredDepartmentIds.length ? [{\n            departments: {\n              $in: filteredDepartmentIds\n            }\n          }] : [])]\n        }] : [])]\n      };\n      if (!(query !== null && query !== void 0 && (_query$$and = query.$and) !== null && _query$$and !== void 0 && _query$$and.length)) {\n        delete query.$and;\n      }\n      const {\n        cursor,\n        totalCount\n      } = LivechatTag.findPaginated(query, {\n        sort: sort || {\n          name: 1\n        },\n        skip: offset,\n        limit: count\n      });\n      const [tags, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        tags,\n        count: tags.length,\n        offset,\n        total\n      };\n    }\n    async function findTagById(_ref2) {\n      let {\n        tagId\n      } = _ref2;\n      return LivechatTag.findOneById(tagId);\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","findTags","findTagById","LivechatTag","link","v","escapeRegExp","hasPermissionAsync","helperLogger","getDepartmentsWhichUserCanAccess","__reifyWaitForDeps__","_ref","_query$$and","userId","text","department","viewAll","pagination","offset","count","sort","filteredDepartmentIds","debug","msg","accessibleDepartmentsLength","length","top5AccessibleDepartments","slice","includes","undefined","query","$and","$or","name","RegExp","description","departments","$size","$in","cursor","totalCount","findPaginated","skip","limit","tags","total","Promise","all","toArray","_ref2","tagId","findOneById","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/api/lib/tags.ts"],"sourcesContent":["import type { ILivechatTag } from '@rocket.chat/core-typings';\nimport { LivechatTag } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Filter, FindOptions } from 'mongodb';\n\nimport { hasPermissionAsync } from '../../../../../../app/authorization/server/functions/hasPermission';\nimport { helperLogger } from '../../lib/logger';\nimport { getDepartmentsWhichUserCanAccess } from './departments';\n\ntype FindTagsParams = {\n\tuserId: string;\n\ttext?: string;\n\tpagination: {\n\t\toffset: number;\n\t\tcount: number;\n\t\tsort: FindOptions<ILivechatTag>['sort'];\n\t};\n\tdepartment?: string;\n\tviewAll?: boolean;\n};\n\ntype FindTagsResult = {\n\ttags: ILivechatTag[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n};\n\ntype FindTagsByIdParams = {\n\tuserId: string;\n\ttagId: string;\n};\n\ntype FindTagsByIdResult = ILivechatTag | null;\n\n// If viewAll is true\n//  -> & user has access to all tags\n//      -> then all tags will be returned\n//          -> Pages:\n//              - Admin > Omnichannel > Tags\n//              - Current chat's panel, filter by tags\n//              - Canned response creation\n//  -> & user does not have access to all tags\n//      -> then only public tags will be returned (unauthorized access - no page uses this)\n// If viewAll is false\n// -> & user has access to all tags\n//      -> & department is not specified\n//          -> only public tags will be returned (Pages: Close chat modal tag selection for chats not associated with a department being closed by manager)\n//      -> & department is specified\n//          -> only tags associated with the department will be returned (Page: Close chat modal tag selection for chats associated with a department being closed by manager)\n// -> & user does not have access to all tags (same as viewAll = false & user has access to all tags)\n//      -> & department is not specified\n//          -> only public tags will be returned (Page: Close chat modal tag selection for chats not associated with a department being closed by agent)\n//      -> & department is specified\n//          -> only tags associated with the department will be returned (Page: Close chat modal tag selection for chats associated with a department being closed by agent)\nexport async function findTags({\n\tuserId,\n\ttext,\n\tdepartment,\n\tviewAll,\n\tpagination: { offset, count, sort },\n}: FindTagsParams): Promise<FindTagsResult> {\n\tlet filteredDepartmentIds: string[] = [];\n\n\tif (!(await hasPermissionAsync(userId, 'manage-livechat-tags'))) {\n\t\tif (viewAll) {\n\t\t\tviewAll = false;\n\t\t}\n\n\t\t// Get a list of all departments this user has access to and only\n\t\t// return tags that are associated with those departments\n\t\tfilteredDepartmentIds = await getDepartmentsWhichUserCanAccess(userId);\n\n\t\thelperLogger.debug({\n\t\t\tmsg: 'User does not have permission to manage livechat tags. Filtering tags by departments user has access to.',\n\t\t\tuserId,\n\t\t\taccessibleDepartmentsLength: filteredDepartmentIds.length,\n\t\t\ttop5AccessibleDepartments: filteredDepartmentIds.slice(0, 5),\n\t\t});\n\n\t\tif (department && !filteredDepartmentIds.includes(department)) {\n\t\t\tdepartment = undefined;\n\t\t}\n\t}\n\n\tif (department) {\n\t\t// In certain cases, the user would only want to see tags for a specific department\n\t\t// EG: When closing the chat which is associated with a specific department\n\t\t// user get's to choose which tag to use to close the chat\n\t\t// (only tags associated with the department should be shown)\n\t\tfilteredDepartmentIds = [department];\n\t}\n\n\tconst query: {\n\t\t$and?: Filter<ILivechatTag>[];\n\t} = {\n\t\t$and: [\n\t\t\t...(text ? [{ $or: [{ name: new RegExp(escapeRegExp(text), 'i') }, { description: new RegExp(escapeRegExp(text), 'i') }] }] : []),\n\t\t\t...(!viewAll\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t\t{ departments: { $size: 0 } },\n\t\t\t\t\t\t\t\t...(filteredDepartmentIds.length ? [{ departments: { $in: filteredDepartmentIds } }] : []),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t: []),\n\t\t],\n\t};\n\n\tif (!query?.$and?.length) {\n\t\tdelete query.$and;\n\t}\n\n\tconst { cursor, totalCount } = LivechatTag.findPaginated(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [tags, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\ttags,\n\t\tcount: tags.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findTagById({ tagId }: FindTagsByIdParams): Promise<FindTagsByIdResult> {\n\treturn LivechatTag.findOneById(tagId);\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d58b64de1c5469d06a353a2ff11fea88cca71163"}
