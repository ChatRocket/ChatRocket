{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/helpers/parseJsonQuery.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/helpers/parseJsonQuery.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/helpers/parseJsonQuery.ts","inputSourceMap":{"version":3,"file":"app/api/server/helpers/parseJsonQuery.ts","sourceRoot":"","sources":["app/api/server/helpers/parseJsonQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import ejson from 'ejson';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { apiDeprecationLogger } from '../../../lib/server/lib/deprecationWarningLogger';\nimport { API } from '../api';\nimport type { PartialThis } from '../definition';\nimport { clean } from '../lib/cleanQuery';\nimport { isValidQuery } from '../lib/isValidQuery';\n\nconst pathAllowConf = {\n\t'/api/v1/users.list': ['$or', '$regex', '$and'],\n\t'def': ['$or', '$and', '$regex'],\n};\n\nexport async function parseJsonQuery(api: PartialThis): Promise<{\n\tsort: Record<string, 1 | -1>;\n\t/**\n\t * @deprecated To access \"fields\" parameter, use ALLOW_UNSAFE_QUERY_AND_FIELDS_API_PARAMS environment variable.\n\t */\n\tfields: Record<string, 0 | 1>;\n\t/**\n\t * @deprecated To access \"query\" parameter, use ALLOW_UNSAFE_QUERY_AND_FIELDS_API_PARAMS environment variable.\n\t */\n\tquery: Record<string, unknown>;\n}> {\n\tconst {\n\t\trequest: { route },\n\t\tuserId,\n\t\tqueryParams: params,\n\t\tlogger,\n\t\tqueryFields,\n\t\tqueryOperations,\n\t\tresponse,\n\t} = api;\n\n\tlet sort;\n\tif (params.sort) {\n\t\ttry {\n\t\t\tsort = JSON.parse(params.sort);\n\t\t\tObject.entries(sort).forEach(([key, value]) => {\n\t\t\t\tif (value !== 1 && value !== -1) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-sort-parameter', `Invalid sort parameter: ${key}`, {\n\t\t\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tlogger.warn(`Invalid sort parameter provided \"${params.sort}\":`, e);\n\t\t\tthrow new Meteor.Error('error-invalid-sort', `Invalid sort parameter provided: \"${params.sort}\"`, {\n\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t});\n\t\t}\n\t}\n\n\tconst isUnsafeQueryParamsAllowed = process.env.ALLOW_UNSAFE_QUERY_AND_FIELDS_API_PARAMS?.toUpperCase() === 'TRUE';\n\tconst messageGenerator = ({ endpoint, version, parameter }: { endpoint: string; version: string; parameter: string }): string =>\n\t\t`The usage of the \"${parameter}\" parameter in endpoint \"${endpoint}\" breaks the security of the API and can lead to data exposure. It has been deprecated and will be removed in the version ${version}.`;\n\n\tlet fields: Record<string, 0 | 1> | undefined;\n\tif (params.fields && isUnsafeQueryParamsAllowed) {\n\t\ttry {\n\t\t\tapiDeprecationLogger.parameter(route, 'fields', '8.0.0', response, messageGenerator);\n\t\t\tfields = JSON.parse(params.fields) as Record<string, 0 | 1>;\n\t\t\tObject.entries(fields).forEach(([key, value]) => {\n\t\t\t\tif (value !== 1 && value !== 0) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-sort-parameter', `Invalid fields parameter: ${key}`, {\n\t\t\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tlogger.warn(`Invalid fields parameter provided \"${params.fields}\":`, e);\n\t\t\tthrow new Meteor.Error('error-invalid-fields', `Invalid fields parameter provided: \"${params.fields}\"`, {\n\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t});\n\t\t}\n\t}\n\n\t// Verify the user's selected fields only contains ones which their role allows\n\tif (typeof fields === 'object') {\n\t\tlet nonSelectableFields = Object.keys(API.v1.defaultFieldsToExclude);\n\t\tif (route.includes('/v1/users.')) {\n\t\t\tnonSelectableFields = nonSelectableFields.concat(\n\t\t\t\tObject.keys(\n\t\t\t\t\t(await hasPermissionAsync(userId, 'view-full-other-user-info'))\n\t\t\t\t\t\t? API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser\n\t\t\t\t\t\t: API.v1.limitedUserFieldsToExclude,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tObject.keys(fields).forEach((k) => {\n\t\t\tif (nonSelectableFields.includes(k) || nonSelectableFields.includes(k.split(API.v1.fieldSeparator)[0])) {\n\t\t\t\tfields && delete fields[k as keyof typeof fields];\n\t\t\t}\n\t\t});\n\t}\n\n\t// Limit the fields by default\n\tfields = Object.assign({}, fields, API.v1.defaultFieldsToExclude);\n\tif (route.includes('/v1/users.')) {\n\t\tif (await hasPermissionAsync(userId, 'view-full-other-user-info')) {\n\t\t\tfields = Object.assign(fields, API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser);\n\t\t} else {\n\t\t\tfields = Object.assign(fields, API.v1.limitedUserFieldsToExclude);\n\t\t}\n\t}\n\n\tlet query: Record<string, any> = {};\n\tif (params.query && isUnsafeQueryParamsAllowed) {\n\t\tapiDeprecationLogger.parameter(route, 'query', '8.0.0', response, messageGenerator);\n\t\ttry {\n\t\t\tquery = ejson.parse(params.query);\n\t\t\tquery = clean(query, pathAllowConf.def);\n\t\t} catch (e) {\n\t\t\tlogger.warn(`Invalid query parameter provided \"${params.query}\":`, e);\n\t\t\tthrow new Meteor.Error('error-invalid-query', `Invalid query parameter provided: \"${params.query}\"`, {\n\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t});\n\t\t}\n\t}\n\n\t// Verify the user has permission to query the fields they are\n\tif (typeof query === 'object') {\n\t\tlet nonQueryableFields = Object.keys(API.v1.defaultFieldsToExclude);\n\n\t\tif (route.includes('/v1/users.')) {\n\t\t\tif (await hasPermissionAsync(userId, 'view-full-other-user-info')) {\n\t\t\t\tnonQueryableFields = nonQueryableFields.concat(Object.keys(API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser));\n\t\t\t} else {\n\t\t\t\tnonQueryableFields = nonQueryableFields.concat(Object.keys(API.v1.limitedUserFieldsToExclude));\n\t\t\t}\n\t\t}\n\n\t\tif (queryFields && !isValidQuery(query, queryFields || ['*'], queryOperations ?? pathAllowConf.def)) {\n\t\t\tthrow new Meteor.Error('error-invalid-query', isValidQuery.errors.join('\\n'));\n\t\t}\n\n\t\tObject.keys(query).forEach((k) => {\n\t\t\tif (nonQueryableFields.includes(k) || nonQueryableFields.includes(k.split(API.v1.fieldSeparator)[0])) {\n\t\t\t\tquery && delete query[k];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tsort,\n\t\tfields,\n\t\tquery,\n\t};\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/helpers/parseJsonQuery.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/helpers/parseJsonQuery.ts","inputSourceMap":{"version":3,"file":"app/api/server/helpers/parseJsonQuery.ts","sourceRoot":"","sources":["app/api/server/helpers/parseJsonQuery.ts"],"names":[],"mappings":"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","sourcesContent":["import ejson from 'ejson';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { apiDeprecationLogger } from '../../../lib/server/lib/deprecationWarningLogger';\nimport { API } from '../api';\nimport type { PartialThis } from '../definition';\nimport { clean } from '../lib/cleanQuery';\nimport { isValidQuery } from '../lib/isValidQuery';\n\nconst pathAllowConf = {\n\t'/api/v1/users.list': ['$or', '$regex', '$and'],\n\t'def': ['$or', '$and', '$regex'],\n};\n\nexport async function parseJsonQuery(api: PartialThis): Promise<{\n\tsort: Record<string, 1 | -1>;\n\t/**\n\t * @deprecated To access \"fields\" parameter, use ALLOW_UNSAFE_QUERY_AND_FIELDS_API_PARAMS environment variable.\n\t */\n\tfields: Record<string, 0 | 1>;\n\t/**\n\t * @deprecated To access \"query\" parameter, use ALLOW_UNSAFE_QUERY_AND_FIELDS_API_PARAMS environment variable.\n\t */\n\tquery: Record<string, unknown>;\n}> {\n\tconst {\n\t\trequest: { route },\n\t\tuserId,\n\t\tqueryParams: params,\n\t\tlogger,\n\t\tqueryFields,\n\t\tqueryOperations,\n\t\tresponse,\n\t} = api;\n\n\tlet sort;\n\tif (params.sort) {\n\t\ttry {\n\t\t\tsort = JSON.parse(params.sort);\n\t\t\tObject.entries(sort).forEach(([key, value]) => {\n\t\t\t\tif (value !== 1 && value !== -1) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-sort-parameter', `Invalid sort parameter: ${key}`, {\n\t\t\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tlogger.warn(`Invalid sort parameter provided \"${params.sort}\":`, e);\n\t\t\tthrow new Meteor.Error('error-invalid-sort', `Invalid sort parameter provided: \"${params.sort}\"`, {\n\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t});\n\t\t}\n\t}\n\n\tconst isUnsafeQueryParamsAllowed = process.env.ALLOW_UNSAFE_QUERY_AND_FIELDS_API_PARAMS?.toUpperCase() === 'TRUE';\n\tconst messageGenerator = ({ endpoint, version, parameter }: { endpoint: string; version: string; parameter: string }): string =>\n\t\t`The usage of the \"${parameter}\" parameter in endpoint \"${endpoint}\" breaks the security of the API and can lead to data exposure. It has been deprecated and will be removed in the version ${version}.`;\n\n\tlet fields: Record<string, 0 | 1> | undefined;\n\tif (params.fields && isUnsafeQueryParamsAllowed) {\n\t\ttry {\n\t\t\tapiDeprecationLogger.parameter(route, 'fields', '8.0.0', response, messageGenerator);\n\t\t\tfields = JSON.parse(params.fields) as Record<string, 0 | 1>;\n\t\t\tObject.entries(fields).forEach(([key, value]) => {\n\t\t\t\tif (value !== 1 && value !== 0) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-sort-parameter', `Invalid fields parameter: ${key}`, {\n\t\t\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tlogger.warn(`Invalid fields parameter provided \"${params.fields}\":`, e);\n\t\t\tthrow new Meteor.Error('error-invalid-fields', `Invalid fields parameter provided: \"${params.fields}\"`, {\n\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t});\n\t\t}\n\t}\n\n\t// Verify the user's selected fields only contains ones which their role allows\n\tif (typeof fields === 'object') {\n\t\tlet nonSelectableFields = Object.keys(API.v1.defaultFieldsToExclude);\n\t\tif (route.includes('/v1/users.')) {\n\t\t\tnonSelectableFields = nonSelectableFields.concat(\n\t\t\t\tObject.keys(\n\t\t\t\t\t(await hasPermissionAsync(userId, 'view-full-other-user-info'))\n\t\t\t\t\t\t? API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser\n\t\t\t\t\t\t: API.v1.limitedUserFieldsToExclude,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tObject.keys(fields).forEach((k) => {\n\t\t\tif (nonSelectableFields.includes(k) || nonSelectableFields.includes(k.split(API.v1.fieldSeparator)[0])) {\n\t\t\t\tfields && delete fields[k as keyof typeof fields];\n\t\t\t}\n\t\t});\n\t}\n\n\t// Limit the fields by default\n\tfields = Object.assign({}, fields, API.v1.defaultFieldsToExclude);\n\tif (route.includes('/v1/users.')) {\n\t\tif (await hasPermissionAsync(userId, 'view-full-other-user-info')) {\n\t\t\tfields = Object.assign(fields, API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser);\n\t\t} else {\n\t\t\tfields = Object.assign(fields, API.v1.limitedUserFieldsToExclude);\n\t\t}\n\t}\n\n\tlet query: Record<string, any> = {};\n\tif (params.query && isUnsafeQueryParamsAllowed) {\n\t\tapiDeprecationLogger.parameter(route, 'query', '8.0.0', response, messageGenerator);\n\t\ttry {\n\t\t\tquery = ejson.parse(params.query);\n\t\t\tquery = clean(query, pathAllowConf.def);\n\t\t} catch (e) {\n\t\t\tlogger.warn(`Invalid query parameter provided \"${params.query}\":`, e);\n\t\t\tthrow new Meteor.Error('error-invalid-query', `Invalid query parameter provided: \"${params.query}\"`, {\n\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t});\n\t\t}\n\t}\n\n\t// Verify the user has permission to query the fields they are\n\tif (typeof query === 'object') {\n\t\tlet nonQueryableFields = Object.keys(API.v1.defaultFieldsToExclude);\n\n\t\tif (route.includes('/v1/users.')) {\n\t\t\tif (await hasPermissionAsync(userId, 'view-full-other-user-info')) {\n\t\t\t\tnonQueryableFields = nonQueryableFields.concat(Object.keys(API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser));\n\t\t\t} else {\n\t\t\t\tnonQueryableFields = nonQueryableFields.concat(Object.keys(API.v1.limitedUserFieldsToExclude));\n\t\t\t}\n\t\t}\n\n\t\tif (queryFields && !isValidQuery(query, queryFields || ['*'], queryOperations ?? pathAllowConf.def)) {\n\t\t\tthrow new Meteor.Error('error-invalid-query', isValidQuery.errors.join('\\n'));\n\t\t}\n\n\t\tObject.keys(query).forEach((k) => {\n\t\t\tif (nonQueryableFields.includes(k) || nonQueryableFields.includes(k.split(API.v1.fieldSeparator)[0])) {\n\t\t\t\tquery && delete query[k];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tsort,\n\t\tfields,\n\t\tquery,\n\t};\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      parseJsonQuery: () => parseJsonQuery\n    });\n    let ejson;\n    module.link(\"ejson\", {\n      default(v) {\n        ejson = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 2);\n    let apiDeprecationLogger;\n    module.link(\"../../../lib/server/lib/deprecationWarningLogger\", {\n      apiDeprecationLogger(v) {\n        apiDeprecationLogger = v;\n      }\n    }, 3);\n    let API;\n    module.link(\"../api\", {\n      API(v) {\n        API = v;\n      }\n    }, 4);\n    let clean;\n    module.link(\"../lib/cleanQuery\", {\n      clean(v) {\n        clean = v;\n      }\n    }, 5);\n    let isValidQuery;\n    module.link(\"../lib/isValidQuery\", {\n      isValidQuery(v) {\n        isValidQuery = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const pathAllowConf = {\n      '/api/v1/users.list': ['$or', '$regex', '$and'],\n      'def': ['$or', '$and', '$regex']\n    };\n    async function parseJsonQuery(api) {\n      var _process$env$ALLOW_UN;\n      const {\n        request: {\n          route\n        },\n        userId,\n        queryParams: params,\n        logger,\n        queryFields,\n        queryOperations,\n        response\n      } = api;\n      let sort;\n      if (params.sort) {\n        try {\n          sort = JSON.parse(params.sort);\n          Object.entries(sort).forEach(_ref => {\n            let [key, value] = _ref;\n            if (value !== 1 && value !== -1) {\n              throw new Meteor.Error('error-invalid-sort-parameter', \"Invalid sort parameter: \".concat(key), {\n                helperMethod: 'parseJsonQuery'\n              });\n            }\n          });\n        } catch (e) {\n          logger.warn(\"Invalid sort parameter provided \\\"\".concat(params.sort, \"\\\":\"), e);\n          throw new Meteor.Error('error-invalid-sort', \"Invalid sort parameter provided: \\\"\".concat(params.sort, \"\\\"\"), {\n            helperMethod: 'parseJsonQuery'\n          });\n        }\n      }\n      const isUnsafeQueryParamsAllowed = ((_process$env$ALLOW_UN = process.env.ALLOW_UNSAFE_QUERY_AND_FIELDS_API_PARAMS) === null || _process$env$ALLOW_UN === void 0 ? void 0 : _process$env$ALLOW_UN.toUpperCase()) === 'TRUE';\n      const messageGenerator = _ref2 => {\n        let {\n          endpoint,\n          version,\n          parameter\n        } = _ref2;\n        return \"The usage of the \\\"\".concat(parameter, \"\\\" parameter in endpoint \\\"\").concat(endpoint, \"\\\" breaks the security of the API and can lead to data exposure. It has been deprecated and will be removed in the version \").concat(version, \".\");\n      };\n      let fields;\n      if (params.fields && isUnsafeQueryParamsAllowed) {\n        try {\n          apiDeprecationLogger.parameter(route, 'fields', '8.0.0', response, messageGenerator);\n          fields = JSON.parse(params.fields);\n          Object.entries(fields).forEach(_ref3 => {\n            let [key, value] = _ref3;\n            if (value !== 1 && value !== 0) {\n              throw new Meteor.Error('error-invalid-sort-parameter', \"Invalid fields parameter: \".concat(key), {\n                helperMethod: 'parseJsonQuery'\n              });\n            }\n          });\n        } catch (e) {\n          logger.warn(\"Invalid fields parameter provided \\\"\".concat(params.fields, \"\\\":\"), e);\n          throw new Meteor.Error('error-invalid-fields', \"Invalid fields parameter provided: \\\"\".concat(params.fields, \"\\\"\"), {\n            helperMethod: 'parseJsonQuery'\n          });\n        }\n      }\n      // Verify the user's selected fields only contains ones which their role allows\n      if (typeof fields === 'object') {\n        let nonSelectableFields = Object.keys(API.v1.defaultFieldsToExclude);\n        if (route.includes('/v1/users.')) {\n          nonSelectableFields = nonSelectableFields.concat(Object.keys((await hasPermissionAsync(userId, 'view-full-other-user-info')) ? API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser : API.v1.limitedUserFieldsToExclude));\n        }\n        Object.keys(fields).forEach(k => {\n          if (nonSelectableFields.includes(k) || nonSelectableFields.includes(k.split(API.v1.fieldSeparator)[0])) {\n            fields && delete fields[k];\n          }\n        });\n      }\n      // Limit the fields by default\n      fields = Object.assign({}, fields, API.v1.defaultFieldsToExclude);\n      if (route.includes('/v1/users.')) {\n        if (await hasPermissionAsync(userId, 'view-full-other-user-info')) {\n          fields = Object.assign(fields, API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser);\n        } else {\n          fields = Object.assign(fields, API.v1.limitedUserFieldsToExclude);\n        }\n      }\n      let query = {};\n      if (params.query && isUnsafeQueryParamsAllowed) {\n        apiDeprecationLogger.parameter(route, 'query', '8.0.0', response, messageGenerator);\n        try {\n          query = ejson.parse(params.query);\n          query = clean(query, pathAllowConf.def);\n        } catch (e) {\n          logger.warn(\"Invalid query parameter provided \\\"\".concat(params.query, \"\\\":\"), e);\n          throw new Meteor.Error('error-invalid-query', \"Invalid query parameter provided: \\\"\".concat(params.query, \"\\\"\"), {\n            helperMethod: 'parseJsonQuery'\n          });\n        }\n      }\n      // Verify the user has permission to query the fields they are\n      if (typeof query === 'object') {\n        let nonQueryableFields = Object.keys(API.v1.defaultFieldsToExclude);\n        if (route.includes('/v1/users.')) {\n          if (await hasPermissionAsync(userId, 'view-full-other-user-info')) {\n            nonQueryableFields = nonQueryableFields.concat(Object.keys(API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser));\n          } else {\n            nonQueryableFields = nonQueryableFields.concat(Object.keys(API.v1.limitedUserFieldsToExclude));\n          }\n        }\n        if (queryFields && !isValidQuery(query, queryFields || ['*'], queryOperations !== null && queryOperations !== void 0 ? queryOperations : pathAllowConf.def)) {\n          throw new Meteor.Error('error-invalid-query', isValidQuery.errors.join('\\n'));\n        }\n        Object.keys(query).forEach(k => {\n          if (nonQueryableFields.includes(k) || nonQueryableFields.includes(k.split(API.v1.fieldSeparator)[0])) {\n            query && delete query[k];\n          }\n        });\n      }\n      return {\n        sort,\n        fields,\n        query\n      };\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","parseJsonQuery","ejson","link","default","v","Meteor","hasPermissionAsync","apiDeprecationLogger","API","clean","isValidQuery","__reifyWaitForDeps__","pathAllowConf","api","_process$env$ALLOW_UN","request","route","userId","queryParams","params","logger","queryFields","queryOperations","response","sort","JSON","parse","Object","entries","forEach","_ref","key","value","Error","concat","helperMethod","e","warn","isUnsafeQueryParamsAllowed","process","env","ALLOW_UNSAFE_QUERY_AND_FIELDS_API_PARAMS","toUpperCase","messageGenerator","_ref2","endpoint","version","parameter","fields","_ref3","nonSelectableFields","keys","v1","defaultFieldsToExclude","includes","limitedUserFieldsToExcludeIfIsPrivilegedUser","limitedUserFieldsToExclude","k","split","fieldSeparator","assign","query","def","nonQueryableFields","errors","join","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/helpers/parseJsonQuery.ts"],"sourcesContent":["import ejson from 'ejson';\nimport { Meteor } from 'meteor/meteor';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { apiDeprecationLogger } from '../../../lib/server/lib/deprecationWarningLogger';\nimport { API } from '../api';\nimport type { PartialThis } from '../definition';\nimport { clean } from '../lib/cleanQuery';\nimport { isValidQuery } from '../lib/isValidQuery';\n\nconst pathAllowConf = {\n\t'/api/v1/users.list': ['$or', '$regex', '$and'],\n\t'def': ['$or', '$and', '$regex'],\n};\n\nexport async function parseJsonQuery(api: PartialThis): Promise<{\n\tsort: Record<string, 1 | -1>;\n\t/**\n\t * @deprecated To access \"fields\" parameter, use ALLOW_UNSAFE_QUERY_AND_FIELDS_API_PARAMS environment variable.\n\t */\n\tfields: Record<string, 0 | 1>;\n\t/**\n\t * @deprecated To access \"query\" parameter, use ALLOW_UNSAFE_QUERY_AND_FIELDS_API_PARAMS environment variable.\n\t */\n\tquery: Record<string, unknown>;\n}> {\n\tconst {\n\t\trequest: { route },\n\t\tuserId,\n\t\tqueryParams: params,\n\t\tlogger,\n\t\tqueryFields,\n\t\tqueryOperations,\n\t\tresponse,\n\t} = api;\n\n\tlet sort;\n\tif (params.sort) {\n\t\ttry {\n\t\t\tsort = JSON.parse(params.sort);\n\t\t\tObject.entries(sort).forEach(([key, value]) => {\n\t\t\t\tif (value !== 1 && value !== -1) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-sort-parameter', `Invalid sort parameter: ${key}`, {\n\t\t\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tlogger.warn(`Invalid sort parameter provided \"${params.sort}\":`, e);\n\t\t\tthrow new Meteor.Error('error-invalid-sort', `Invalid sort parameter provided: \"${params.sort}\"`, {\n\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t});\n\t\t}\n\t}\n\n\tconst isUnsafeQueryParamsAllowed = process.env.ALLOW_UNSAFE_QUERY_AND_FIELDS_API_PARAMS?.toUpperCase() === 'TRUE';\n\tconst messageGenerator = ({ endpoint, version, parameter }: { endpoint: string; version: string; parameter: string }): string =>\n\t\t`The usage of the \"${parameter}\" parameter in endpoint \"${endpoint}\" breaks the security of the API and can lead to data exposure. It has been deprecated and will be removed in the version ${version}.`;\n\n\tlet fields: Record<string, 0 | 1> | undefined;\n\tif (params.fields && isUnsafeQueryParamsAllowed) {\n\t\ttry {\n\t\t\tapiDeprecationLogger.parameter(route, 'fields', '8.0.0', response, messageGenerator);\n\t\t\tfields = JSON.parse(params.fields) as Record<string, 0 | 1>;\n\t\t\tObject.entries(fields).forEach(([key, value]) => {\n\t\t\t\tif (value !== 1 && value !== 0) {\n\t\t\t\t\tthrow new Meteor.Error('error-invalid-sort-parameter', `Invalid fields parameter: ${key}`, {\n\t\t\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tlogger.warn(`Invalid fields parameter provided \"${params.fields}\":`, e);\n\t\t\tthrow new Meteor.Error('error-invalid-fields', `Invalid fields parameter provided: \"${params.fields}\"`, {\n\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t});\n\t\t}\n\t}\n\n\t// Verify the user's selected fields only contains ones which their role allows\n\tif (typeof fields === 'object') {\n\t\tlet nonSelectableFields = Object.keys(API.v1.defaultFieldsToExclude);\n\t\tif (route.includes('/v1/users.')) {\n\t\t\tnonSelectableFields = nonSelectableFields.concat(\n\t\t\t\tObject.keys(\n\t\t\t\t\t(await hasPermissionAsync(userId, 'view-full-other-user-info'))\n\t\t\t\t\t\t? API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser\n\t\t\t\t\t\t: API.v1.limitedUserFieldsToExclude,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tObject.keys(fields).forEach((k) => {\n\t\t\tif (nonSelectableFields.includes(k) || nonSelectableFields.includes(k.split(API.v1.fieldSeparator)[0])) {\n\t\t\t\tfields && delete fields[k as keyof typeof fields];\n\t\t\t}\n\t\t});\n\t}\n\n\t// Limit the fields by default\n\tfields = Object.assign({}, fields, API.v1.defaultFieldsToExclude);\n\tif (route.includes('/v1/users.')) {\n\t\tif (await hasPermissionAsync(userId, 'view-full-other-user-info')) {\n\t\t\tfields = Object.assign(fields, API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser);\n\t\t} else {\n\t\t\tfields = Object.assign(fields, API.v1.limitedUserFieldsToExclude);\n\t\t}\n\t}\n\n\tlet query: Record<string, any> = {};\n\tif (params.query && isUnsafeQueryParamsAllowed) {\n\t\tapiDeprecationLogger.parameter(route, 'query', '8.0.0', response, messageGenerator);\n\t\ttry {\n\t\t\tquery = ejson.parse(params.query);\n\t\t\tquery = clean(query, pathAllowConf.def);\n\t\t} catch (e) {\n\t\t\tlogger.warn(`Invalid query parameter provided \"${params.query}\":`, e);\n\t\t\tthrow new Meteor.Error('error-invalid-query', `Invalid query parameter provided: \"${params.query}\"`, {\n\t\t\t\thelperMethod: 'parseJsonQuery',\n\t\t\t});\n\t\t}\n\t}\n\n\t// Verify the user has permission to query the fields they are\n\tif (typeof query === 'object') {\n\t\tlet nonQueryableFields = Object.keys(API.v1.defaultFieldsToExclude);\n\n\t\tif (route.includes('/v1/users.')) {\n\t\t\tif (await hasPermissionAsync(userId, 'view-full-other-user-info')) {\n\t\t\t\tnonQueryableFields = nonQueryableFields.concat(Object.keys(API.v1.limitedUserFieldsToExcludeIfIsPrivilegedUser));\n\t\t\t} else {\n\t\t\t\tnonQueryableFields = nonQueryableFields.concat(Object.keys(API.v1.limitedUserFieldsToExclude));\n\t\t\t}\n\t\t}\n\n\t\tif (queryFields && !isValidQuery(query, queryFields || ['*'], queryOperations ?? pathAllowConf.def)) {\n\t\t\tthrow new Meteor.Error('error-invalid-query', isValidQuery.errors.join('\\n'));\n\t\t}\n\n\t\tObject.keys(query).forEach((k) => {\n\t\t\tif (nonQueryableFields.includes(k) || nonQueryableFields.includes(k.split(API.v1.fieldSeparator)[0])) {\n\t\t\t\tquery && delete query[k];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tsort,\n\t\tfields,\n\t\tquery,\n\t};\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"20d3de99bc6c0fbfb8f97543cad86e796e7cfb2a"}
