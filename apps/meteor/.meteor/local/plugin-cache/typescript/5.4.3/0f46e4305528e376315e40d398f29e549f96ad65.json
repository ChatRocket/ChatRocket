{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/adapters/Message.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/infrastructure/rocket-chat/adapters/Message.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/adapters/Message.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/rocket-chat/adapters/Message.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/rocket-chat/adapters/Message.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,iBAAiB,EAAE,MAAM,2BAA2B,CAAC;AAC9D,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAE/C,OAAO,EAAE,aAAa,EAAE,MAAM,0DAA0D,CAAC;AACzF,OAAO,EAAE,WAAW,EAAE,MAAM,wDAAwD,CAAC;AACrF,OAAO,EAAE,aAAa,EAAE,MAAM,0DAA0D,CAAC;AACzF,OAAO,EAAE,kBAAkB,EAAE,MAAM,oDAAoD,CAAC;AACxF,OAAO,EAAE,MAAM,EAAE,MAAM,2CAA2C,CAAC;AACnE,OAAO,EAAE,eAAe,EAAE,MAAM,0CAA0C,CAAC;AAG3E,OAAO,EAAE,uBAAuB,EAAE,4BAA4B,EAAE,MAAM,4CAA4C,CAAC;AACnH,OAAO,EAAE,+BAA+B,EAAE,MAAM,+BAA+B,CAAC;AAEhF,MAAM,yDAAyD,GAAG,iBAAiB,CAAC;AAEpF,MAAM,OAAO,wBAAwB;IAC7B,KAAK,CAAC,WAAW,CACvB,IAAmB,EACnB,IAAmB,EACnB,UAAkB,EAClB,wBAAgC,EAChC,eAAuB,EACvB,gBAAwB;QAExB,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,uBAAuB,CAAC;gBAC5B,UAAU;gBACV,gBAAgB,EAAE,wBAAwB;gBAC1C,gBAAgB;gBAChB,gBAAgB,EAAE,IAAI,CAAC,aAAa,EAAE;aACtC,CAAC;SACF,EACD,IAAI,CAAC,oBAAoB,EAAE,CAC3B,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAC5B,IAAmB,EACnB,aAA4B,EAC5B,qBAA6B,EAC7B,UAAkB,EAClB,eAAuB,EACvB,gBAA0B,EAC1B,gBAAwB;QAExB,MAAM,IAAI,GAAG,aAAa,CAAC,oBAAoB,EAAE,CAAC;QAClD,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,MAAM,IAAI,CAAC,8BAA8B,CAC7C,aAAa,EACb,gBAAgB,EAChB,qBAAqB,EACrB,UAAU,EACV,gBAAgB,EAChB,IAAI,CACJ;SACD,EACD,IAAI,CACJ,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAC7B,IAAmB,EACnB,IAAmB,EACnB,UAAkB,EAClB,eAAuB,EACvB,eAAuB,EACvB,wBAAgC,EAChC,gBAAwB;QAExB,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,uBAAuB,CAAC;gBAC5B,UAAU;gBACV,gBAAgB,EAAE,wBAAwB;gBAC1C,gBAAgB;gBAChB,gBAAgB,EAAE,IAAI,CAAC,aAAa,EAAE;aACtC,CAAC;YACF,IAAI,EAAE,eAAe;SACrB,EACD,IAAI,CAAC,oBAAoB,EAAE,CAC3B,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,sBAAsB,CAClC,IAAmB,EACnB,aAA4B,EAC5B,UAAkB,EAClB,eAAuB,EACvB,gBAA0B,EAC1B,gBAAwB,EACxB,eAAuB,EACvB,qBAA6B;QAE7B,MAAM,IAAI,GAAG,aAAa,CAAC,oBAAoB,EAAE,CAAC;QAElD,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,MAAM,IAAI,CAAC,8BAA8B,CAC7C,aAAa,EACb,gBAAgB,EAChB,qBAAqB,EACrB,UAAU,EACV,gBAAgB,EAChB,IAAI,CACJ;YACD,IAAI,EAAE,eAAe;SACrB,EACD,IAAI,CACJ,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,WAAW,CACvB,IAAmB,EACnB,iBAAyB,EACzB,2BAAmC,EACnC,eAAyB,EACzB,gBAAwB;QAExB,MAAM,cAAc,GAAG;YACtB,GAAG,eAAe;YAClB,GAAG,EAAE,uBAAuB,CAAC;gBAC5B,UAAU,EAAE,iBAAiB;gBAC7B,gBAAgB,EAAE,2BAA2B;gBAC7C,gBAAgB;gBAChB,gBAAgB,EAAE,IAAI,CAAC,aAAa,EAAE;aACtC,CAAC;SACF,CAAC;QACF,MAAM,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,oBAAoB,EAAE,EAAE,eAAe,CAAC,CAAC;IACnF,CAAC;IAEO,KAAK,CAAC,8BAA8B,CAC3C,aAA4B,EAC5B,gBAA0B,EAC1B,wBAAgC,EAChC,UAAkB,EAClB,gBAAwB,EACxB,UAAyB;QAEzB,MAAM,IAAI,GAAG,aAAa,CAAC,oBAAoB,EAAE,CAAC;QAClD,MAAM,mBAAmB,GAAG,MAAM,CACjC,GAAG,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAW,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,QAAQ,gBAAgB,CAAC,GAAG,EAAE,EACnH,EAAE,IAAI,EAAE,IAAI,EAAE,CACd,CAAC;QAEF,OAAO,4BAA4B,CAAC;YACnC,mBAAmB;YACnB,gBAAgB,EAAE,wBAAwB;YAC1C,UAAU;YACV,gBAAgB;YAChB,gBAAgB,EAAE,UAAU,CAAC,aAAa,EAAE;SAC5C,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,iCAAiC,CAC7C,aAAuB,EACvB,2BAAmC,EACnC,iBAAyB,EACzB,gBAAwB,EACxB,UAAyB;QAEzB,MAAM,gBAAgB,GAAG,aAAa,CAAC,WAAW,EAAE,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC;QAEjG,OAAO,4BAA4B,CAAC;YACnC,mBAAmB,EAAE,gBAAgB,IAAI,EAAE;YAC3C,gBAAgB,EAAE,2BAA2B;YAC7C,UAAU,EAAE,iBAAiB;YAC7B,gBAAgB;YAChB,gBAAgB,EAAE,UAAU,CAAC,aAAa,EAAE;SAC5C,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAC7B,IAAmB,EACnB,iBAAyB,EACzB,2BAAmC,EACnC,aAAuB,EACvB,gBAAwB;QAExB,MAAM,cAAc,GAAG;YACtB,GAAG,aAAa;YAChB,GAAG,EAAE,MAAM,IAAI,CAAC,iCAAiC,CAChD,aAAa,EACb,2BAA2B,EAC3B,iBAAiB,EACjB,gBAAgB,EAChB,IAAI,CACJ;SACD,CAAC;QACF,MAAM,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,oBAAoB,EAAE,EAAE,aAAa,CAAC,CAAC;IACjF,CAAC;IAEM,KAAK,CAAC,eAAe,CAC3B,IAAmB,EACnB,IAAmB,EACnB,KAAwB,EACxB,WAAoC,EACpC,eAAuB;QAEvB,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE;YACzB,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,KAAK;YACL,WAAW;SACX,EACD,IAAI,CAAC,oBAAoB,EAAE,CAC3B,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,oBAAoB,CAChC,IAAmB,EACnB,aAA4B,EAC5B,KAAwB,EACxB,WAAoC,EACpC,eAAuB,EACvB,gBAA0B,EAC1B,gBAAwB;QAExB,MAAM,IAAI,GAAG,aAAa,CAAC,oBAAoB,EAAE,CAAC;QAElD,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,aAAa,CAAC,aAAa,EAAE;YAClC,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,KAAK;YACL,WAAW;YACX,GAAG,EAAE,MAAM,IAAI,CAAC,8BAA8B,CAAC,aAAa,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,gBAAgB,EAAE,IAAI,CAAC;SAC/G,EACD,IAAI,CACJ,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,qBAAqB,CACjC,IAAmB,EACnB,IAAmB,EACnB,KAAwB,EACxB,WAAoC,EACpC,eAAuB,EACvB,eAAuB;QAEvB,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE;YACzB,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,KAAK;YACL,WAAW;YACX,IAAI,EAAE,eAAe;SACrB,EACD,IAAI,CAAC,oBAAoB,EAAE,CAC3B,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,0BAA0B,CACtC,IAAmB,EACnB,aAA4B,EAC5B,KAAwB,EACxB,WAAoC,EACpC,eAAuB,EACvB,gBAA0B,EAC1B,gBAAwB,EACxB,eAAuB;QAEvB,MAAM,IAAI,GAAG,aAAa,CAAC,oBAAoB,EAAE,CAAC;QAClD,MAAM,mBAAmB,GAAG,MAAM,CACjC,GAAG,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAW,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,QAAQ,gBAAgB,CAAC,GAAG,EAAE,EACnH,EAAE,IAAI,EAAE,IAAI,EAAE,CACd,CAAC;QAEF,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,aAAa,CAAC,aAAa,EAAE;YAClC,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,KAAK;YACL,WAAW;YACX,GAAG,EAAE,MAAM,4BAA4B,CAAC;gBACvC,mBAAmB;gBACnB,UAAU,EAAE,EAAE;gBACd,gBAAgB,EAAE,IAAI,CAAC,aAAa,EAAE;gBACtC,gBAAgB,EAAE,EAAE;gBACpB,gBAAgB;aAChB,CAAC;YACF,IAAI,EAAE,eAAe;SACrB,EACD,IAAI,CACJ,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,aAAa,CAAC,OAAiB,EAAE,IAAmB;QAChE,MAAM,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;IAC3D,CAAC;IAEM,KAAK,CAAC,cAAc,CAAC,IAAmB,EAAE,OAAiB,EAAE,QAAgB,EAAE,eAAuB;QAC5G,IAAI,CAAC;YACJ,MAAM,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YACtE,IAAI,CAAC,WAAW,EAAE;gBACjB,CAAC,MAAM,QAAQ,CAAC,4BAA4B,CAC3C,IAAI,CAAC,WAAW,EAAY,EAC5B,OAAO,CAAC,GAAG,EACX,QAAQ,EACR,+BAA+B,CAAC,eAAe,CAAC,CAChD,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACrB,IAAI,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,yBAAyB,CAAC,EAAE,CAAC;gBACzD,MAAM,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,yDAAyD,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YACxH,CAAC;QACF,CAAC;IACF,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAAC,IAAmB,EAAE,OAAiB,EAAE,QAAgB,EAAE,eAAuB;QAC9G,MAAM,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACtE,MAAM,QAAQ,CAAC,8BAA8B,CAAC,+BAA+B,CAAC,eAAe,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACxH,CAAC;IAEM,KAAK,CAAC,gCAAgC,CAAC,iBAAyB,EAAE,IAAmB;QAC3F,OAAO,CACN,CAAC,IAAI,CAAC,WAAW,EAAE;YAClB,QAAQ,CAAC,2CAA2C,CACnD,+BAA+B,CAAC,iBAAiB,CAAC,EAClD,IAAI,CAAC,WAAW,EAAY,CAC5B,CAAC;YACH,SAAS,CACT,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,wBAAwB,CAAC,iBAAyB;QAC9D,OAAO,QAAQ,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;IAC1D,CAAC;IAEM,KAAK,CAAC,mCAAmC,CAAC,SAAiB,EAAE,iBAAyB;QAC5F,OAAO,QAAQ,CAAC,wBAAwB,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;IACxE,CAAC;IAEM,KAAK,CAAC,6CAA6C,CAAC,eAAuB,EAAE,OAAiB,EAAE,QAAgB;QACtH,MAAM,QAAQ,CAAC,8BAA8B,CAAC,+BAA+B,CAAC,eAAe,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACxH,CAAC;IAEM,KAAK,CAAC,cAAc,CAAC,iBAAyB;QACpD,OAAO,QAAQ,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;IAChD,CAAC;IAEM,KAAK,CAAC,2CAA2C,CACvD,QAAgB,EAChB,OAAiB,EACjB,QAAgB,EAChB,eAAuB;QAEvB,MAAM,QAAQ,CAAC,4BAA4B,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE,+BAA+B,CAAC,eAAe,CAAC,CAAC,CAAC;IAChI,CAAC;CACD","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { isQuoteAttachment } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\n\nimport { deleteMessage } from '../../../../../../app/lib/server/functions/deleteMessage';\nimport { sendMessage } from '../../../../../../app/lib/server/functions/sendMessage';\nimport { updateMessage } from '../../../../../../app/lib/server/functions/updateMessage';\nimport { executeSetReaction } from '../../../../../../app/reactions/server/setReaction';\nimport { getURL } from '../../../../../../app/utils/server/getURL';\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\nimport type { FederatedRoom } from '../../../domain/FederatedRoom';\nimport type { FederatedUser } from '../../../domain/FederatedUser';\nimport { toInternalMessageFormat, toInternalQuoteMessageFormat } from '../converters/to-external-parser-formatter';\nimport { escapeExternalFederationEventId } from './federation-id-escape-helper';\n\nconst DEFAULT_EMOJI_TO_REACT_WHEN_RECEIVED_EMOJI_DOES_NOT_EXIST = ':grey_question:';\n\nexport class RocketChatMessageAdapter {\n\tpublic async sendMessage(\n\t\tuser: FederatedUser,\n\t\troom: FederatedRoom,\n\t\trawMessage: string,\n\t\texternalFormattedMessage: string,\n\t\texternalEventId: string,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\tmsg: toInternalMessageFormat({\n\t\t\t\t\trawMessage,\n\t\t\t\t\tformattedMessage: externalFormattedMessage,\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t\tsenderExternalId: user.getExternalId(),\n\t\t\t\t}),\n\t\t\t},\n\t\t\troom.getInternalReference(),\n\t\t);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\tuser: FederatedUser,\n\t\tfederatedRoom: FederatedRoom,\n\t\texternalFormattedText: string,\n\t\trawMessage: string,\n\t\texternalEventId: string,\n\t\tmessageToReplyTo: IMessage,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tconst room = federatedRoom.getInternalReference();\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\tmsg: await this.getMessageToReplyToWhenQuoting(\n\t\t\t\t\tfederatedRoom,\n\t\t\t\t\tmessageToReplyTo,\n\t\t\t\t\texternalFormattedText,\n\t\t\t\t\trawMessage,\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t\tuser,\n\t\t\t\t),\n\t\t\t},\n\t\t\troom,\n\t\t);\n\t}\n\n\tpublic async sendThreadMessage(\n\t\tuser: FederatedUser,\n\t\troom: FederatedRoom,\n\t\trawMessage: string,\n\t\texternalEventId: string,\n\t\tparentMessageId: string,\n\t\texternalFormattedMessage: string,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\tmsg: toInternalMessageFormat({\n\t\t\t\t\trawMessage,\n\t\t\t\t\tformattedMessage: externalFormattedMessage,\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t\tsenderExternalId: user.getExternalId(),\n\t\t\t\t}),\n\t\t\t\ttmid: parentMessageId,\n\t\t\t},\n\t\t\troom.getInternalReference(),\n\t\t);\n\t}\n\n\tpublic async sendThreadQuoteMessage(\n\t\tuser: FederatedUser,\n\t\tfederatedRoom: FederatedRoom,\n\t\trawMessage: string,\n\t\texternalEventId: string,\n\t\tmessageToReplyTo: IMessage,\n\t\thomeServerDomain: string,\n\t\tparentMessageId: string,\n\t\texternalFormattedText: string,\n\t): Promise<void> {\n\t\tconst room = federatedRoom.getInternalReference();\n\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\tmsg: await this.getMessageToReplyToWhenQuoting(\n\t\t\t\t\tfederatedRoom,\n\t\t\t\t\tmessageToReplyTo,\n\t\t\t\t\texternalFormattedText,\n\t\t\t\t\trawMessage,\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t\tuser,\n\t\t\t\t),\n\t\t\t\ttmid: parentMessageId,\n\t\t\t},\n\t\t\troom,\n\t\t);\n\t}\n\n\tpublic async editMessage(\n\t\tuser: FederatedUser,\n\t\tnewRawMessageText: string,\n\t\tnewExternalFormattedMessage: string,\n\t\toriginalMessage: IMessage,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tconst updatedMessage = {\n\t\t\t...originalMessage,\n\t\t\tmsg: toInternalMessageFormat({\n\t\t\t\trawMessage: newRawMessageText,\n\t\t\t\tformattedMessage: newExternalFormattedMessage,\n\t\t\t\thomeServerDomain,\n\t\t\t\tsenderExternalId: user.getExternalId(),\n\t\t\t}),\n\t\t};\n\t\tawait updateMessage(updatedMessage, user.getInternalReference(), originalMessage);\n\t}\n\n\tprivate async getMessageToReplyToWhenQuoting(\n\t\tfederatedRoom: FederatedRoom,\n\t\tmessageToReplyTo: IMessage,\n\t\texternalFormattedMessage: string,\n\t\trawMessage: string,\n\t\thomeServerDomain: string,\n\t\tsenderUser: FederatedUser,\n\t): Promise<string> {\n\t\tconst room = federatedRoom.getInternalReference();\n\t\tconst messageToReplyToUrl = getURL(\n\t\t\t`${roomCoordinator.getRouteLink(room.t as string, { rid: room._id, name: room.name })}?msg=${messageToReplyTo._id}`,\n\t\t\t{ full: true },\n\t\t);\n\n\t\treturn toInternalQuoteMessageFormat({\n\t\t\tmessageToReplyToUrl,\n\t\t\tformattedMessage: externalFormattedMessage,\n\t\t\trawMessage,\n\t\t\thomeServerDomain,\n\t\t\tsenderExternalId: senderUser.getExternalId(),\n\t\t});\n\t}\n\n\tpublic async getMessageToEditWhenReplyAndQuote(\n\t\teditedMessage: IMessage,\n\t\tnewExternalFormattedMessage: string,\n\t\tnewRawMessageText: string,\n\t\thomeServerDomain: string,\n\t\tsenderUser: FederatedUser,\n\t): Promise<string> {\n\t\tconst quotedMessageUrl = editedMessage.attachments?.filter(isQuoteAttachment)?.[0]?.message_link;\n\n\t\treturn toInternalQuoteMessageFormat({\n\t\t\tmessageToReplyToUrl: quotedMessageUrl || '',\n\t\t\tformattedMessage: newExternalFormattedMessage,\n\t\t\trawMessage: newRawMessageText,\n\t\t\thomeServerDomain,\n\t\t\tsenderExternalId: senderUser.getExternalId(),\n\t\t});\n\t}\n\n\tpublic async editQuotedMessage(\n\t\tuser: FederatedUser,\n\t\tnewRawMessageText: string,\n\t\tnewExternalFormattedMessage: string,\n\t\teditedMessage: IMessage,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tconst updatedMessage = {\n\t\t\t...editedMessage,\n\t\t\tmsg: await this.getMessageToEditWhenReplyAndQuote(\n\t\t\t\teditedMessage,\n\t\t\t\tnewExternalFormattedMessage,\n\t\t\t\tnewRawMessageText,\n\t\t\t\thomeServerDomain,\n\t\t\t\tuser,\n\t\t\t),\n\t\t};\n\t\tawait updateMessage(updatedMessage, user.getInternalReference(), editedMessage);\n\t}\n\n\tpublic async sendFileMessage(\n\t\tuser: FederatedUser,\n\t\troom: FederatedRoom,\n\t\tfiles: IMessage['files'],\n\t\tattachments: IMessage['attachments'],\n\t\texternalEventId: string,\n\t): Promise<void> {\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\trid: room.getInternalId(),\n\t\t\t\tts: new Date(),\n\t\t\t\tfile: (files || [])[0],\n\t\t\t\tfiles,\n\t\t\t\tattachments,\n\t\t\t},\n\t\t\troom.getInternalReference(),\n\t\t);\n\t}\n\n\tpublic async sendQuoteFileMessage(\n\t\tuser: FederatedUser,\n\t\tfederatedRoom: FederatedRoom,\n\t\tfiles: IMessage['files'],\n\t\tattachments: IMessage['attachments'],\n\t\texternalEventId: string,\n\t\tmessageToReplyTo: IMessage,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tconst room = federatedRoom.getInternalReference();\n\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\trid: federatedRoom.getInternalId(),\n\t\t\t\tts: new Date(),\n\t\t\t\tfile: (files || [])[0],\n\t\t\t\tfiles,\n\t\t\t\tattachments,\n\t\t\t\tmsg: await this.getMessageToReplyToWhenQuoting(federatedRoom, messageToReplyTo, '', '', homeServerDomain, user),\n\t\t\t},\n\t\t\troom,\n\t\t);\n\t}\n\n\tpublic async sendThreadFileMessage(\n\t\tuser: FederatedUser,\n\t\troom: FederatedRoom,\n\t\tfiles: IMessage['files'],\n\t\tattachments: IMessage['attachments'],\n\t\texternalEventId: string,\n\t\tparentMessageId: string,\n\t): Promise<void> {\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\trid: room.getInternalId(),\n\t\t\t\tts: new Date(),\n\t\t\t\tfile: (files || [])[0],\n\t\t\t\tfiles,\n\t\t\t\tattachments,\n\t\t\t\ttmid: parentMessageId,\n\t\t\t},\n\t\t\troom.getInternalReference(),\n\t\t);\n\t}\n\n\tpublic async sendThreadQuoteFileMessage(\n\t\tuser: FederatedUser,\n\t\tfederatedRoom: FederatedRoom,\n\t\tfiles: IMessage['files'],\n\t\tattachments: IMessage['attachments'],\n\t\texternalEventId: string,\n\t\tmessageToReplyTo: IMessage,\n\t\thomeServerDomain: string,\n\t\tparentMessageId: string,\n\t): Promise<void> {\n\t\tconst room = federatedRoom.getInternalReference();\n\t\tconst messageToReplyToUrl = getURL(\n\t\t\t`${roomCoordinator.getRouteLink(room.t as string, { rid: room._id, name: room.name })}?msg=${messageToReplyTo._id}`,\n\t\t\t{ full: true },\n\t\t);\n\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\trid: federatedRoom.getInternalId(),\n\t\t\t\tts: new Date(),\n\t\t\t\tfile: (files || [])[0],\n\t\t\t\tfiles,\n\t\t\t\tattachments,\n\t\t\t\tmsg: await toInternalQuoteMessageFormat({\n\t\t\t\t\tmessageToReplyToUrl,\n\t\t\t\t\trawMessage: '',\n\t\t\t\t\tsenderExternalId: user.getExternalId(),\n\t\t\t\t\tformattedMessage: '',\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t}),\n\t\t\t\ttmid: parentMessageId,\n\t\t\t},\n\t\t\troom,\n\t\t);\n\t}\n\n\tpublic async deleteMessage(message: IMessage, user: FederatedUser): Promise<void> {\n\t\tawait deleteMessage(message, user.getInternalReference());\n\t}\n\n\tpublic async reactToMessage(user: FederatedUser, message: IMessage, reaction: string, externalEventId: string): Promise<void> {\n\t\ttry {\n\t\t\tawait executeSetReaction(user.getInternalId(), reaction, message._id);\n\t\t\tuser.getUsername() &&\n\t\t\t\t(await Messages.setFederationReactionEventId(\n\t\t\t\t\tuser.getUsername() as string,\n\t\t\t\t\tmessage._id,\n\t\t\t\t\treaction,\n\t\t\t\t\tescapeExternalFederationEventId(externalEventId),\n\t\t\t\t));\n\t\t} catch (error: any) {\n\t\t\tif (error?.message?.includes('Invalid emoji provided.')) {\n\t\t\t\tawait executeSetReaction(user.getInternalId(), DEFAULT_EMOJI_TO_REACT_WHEN_RECEIVED_EMOJI_DOES_NOT_EXIST, message._id);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async unreactToMessage(user: FederatedUser, message: IMessage, reaction: string, externalEventId: string): Promise<void> {\n\t\tawait executeSetReaction(user.getInternalId(), reaction, message._id);\n\t\tawait Messages.unsetFederationReactionEventId(escapeExternalFederationEventId(externalEventId), message._id, reaction);\n\t}\n\n\tpublic async findOneByFederationIdOnReactions(federationEventId: string, user: FederatedUser): Promise<IMessage | null | undefined> {\n\t\treturn (\n\t\t\t(user.getUsername() &&\n\t\t\t\tMessages.findOneByFederationIdAndUsernameOnReactions(\n\t\t\t\t\tescapeExternalFederationEventId(federationEventId),\n\t\t\t\t\tuser.getUsername() as string,\n\t\t\t\t)) ||\n\t\t\tundefined\n\t\t);\n\t}\n\n\tpublic async getMessageByFederationId(federationEventId: string): Promise<IMessage | null> {\n\t\treturn Messages.findOneByFederationId(federationEventId);\n\t}\n\n\tpublic async setExternalFederationEventOnMessage(messageId: string, federationEventId: string): Promise<void> {\n\t\treturn Messages.setFederationEventIdById(messageId, federationEventId);\n\t}\n\n\tpublic async unsetExternalFederationEventOnMessageReaction(externalEventId: string, message: IMessage, reaction: string): Promise<void> {\n\t\tawait Messages.unsetFederationReactionEventId(escapeExternalFederationEventId(externalEventId), message._id, reaction);\n\t}\n\n\tpublic async getMessageById(internalMessageId: string): Promise<IMessage | null> {\n\t\treturn Messages.findOneById(internalMessageId);\n\t}\n\n\tpublic async setExternalFederationEventOnMessageReaction(\n\t\tusername: string,\n\t\tmessage: IMessage,\n\t\treaction: string,\n\t\texternalEventId: string,\n\t): Promise<void> {\n\t\tawait Messages.setFederationReactionEventId(username, message._id, reaction, escapeExternalFederationEventId(externalEventId));\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/adapters/Message.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/infrastructure/rocket-chat/adapters/Message.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/rocket-chat/adapters/Message.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/rocket-chat/adapters/Message.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,iBAAiB,EAAE,MAAM,2BAA2B,CAAC;AAC9D,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAE/C,OAAO,EAAE,aAAa,EAAE,MAAM,0DAA0D,CAAC;AACzF,OAAO,EAAE,WAAW,EAAE,MAAM,wDAAwD,CAAC;AACrF,OAAO,EAAE,aAAa,EAAE,MAAM,0DAA0D,CAAC;AACzF,OAAO,EAAE,kBAAkB,EAAE,MAAM,oDAAoD,CAAC;AACxF,OAAO,EAAE,MAAM,EAAE,MAAM,2CAA2C,CAAC;AACnE,OAAO,EAAE,eAAe,EAAE,MAAM,0CAA0C,CAAC;AAG3E,OAAO,EAAE,uBAAuB,EAAE,4BAA4B,EAAE,MAAM,4CAA4C,CAAC;AACnH,OAAO,EAAE,+BAA+B,EAAE,MAAM,+BAA+B,CAAC;AAEhF,MAAM,yDAAyD,GAAG,iBAAiB,CAAC;AAEpF,MAAM,OAAO,wBAAwB;IAC7B,KAAK,CAAC,WAAW,CACvB,IAAmB,EACnB,IAAmB,EACnB,UAAkB,EAClB,wBAAgC,EAChC,eAAuB,EACvB,gBAAwB;QAExB,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,uBAAuB,CAAC;gBAC5B,UAAU;gBACV,gBAAgB,EAAE,wBAAwB;gBAC1C,gBAAgB;gBAChB,gBAAgB,EAAE,IAAI,CAAC,aAAa,EAAE;aACtC,CAAC;SACF,EACD,IAAI,CAAC,oBAAoB,EAAE,CAC3B,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAC5B,IAAmB,EACnB,aAA4B,EAC5B,qBAA6B,EAC7B,UAAkB,EAClB,eAAuB,EACvB,gBAA0B,EAC1B,gBAAwB;QAExB,MAAM,IAAI,GAAG,aAAa,CAAC,oBAAoB,EAAE,CAAC;QAClD,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,MAAM,IAAI,CAAC,8BAA8B,CAC7C,aAAa,EACb,gBAAgB,EAChB,qBAAqB,EACrB,UAAU,EACV,gBAAgB,EAChB,IAAI,CACJ;SACD,EACD,IAAI,CACJ,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAC7B,IAAmB,EACnB,IAAmB,EACnB,UAAkB,EAClB,eAAuB,EACvB,eAAuB,EACvB,wBAAgC,EAChC,gBAAwB;QAExB,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,uBAAuB,CAAC;gBAC5B,UAAU;gBACV,gBAAgB,EAAE,wBAAwB;gBAC1C,gBAAgB;gBAChB,gBAAgB,EAAE,IAAI,CAAC,aAAa,EAAE;aACtC,CAAC;YACF,IAAI,EAAE,eAAe;SACrB,EACD,IAAI,CAAC,oBAAoB,EAAE,CAC3B,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,sBAAsB,CAClC,IAAmB,EACnB,aAA4B,EAC5B,UAAkB,EAClB,eAAuB,EACvB,gBAA0B,EAC1B,gBAAwB,EACxB,eAAuB,EACvB,qBAA6B;QAE7B,MAAM,IAAI,GAAG,aAAa,CAAC,oBAAoB,EAAE,CAAC;QAElD,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,MAAM,IAAI,CAAC,8BAA8B,CAC7C,aAAa,EACb,gBAAgB,EAChB,qBAAqB,EACrB,UAAU,EACV,gBAAgB,EAChB,IAAI,CACJ;YACD,IAAI,EAAE,eAAe;SACrB,EACD,IAAI,CACJ,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,WAAW,CACvB,IAAmB,EACnB,iBAAyB,EACzB,2BAAmC,EACnC,eAAyB,EACzB,gBAAwB;QAExB,MAAM,cAAc,GAAG;YACtB,GAAG,eAAe;YAClB,GAAG,EAAE,uBAAuB,CAAC;gBAC5B,UAAU,EAAE,iBAAiB;gBAC7B,gBAAgB,EAAE,2BAA2B;gBAC7C,gBAAgB;gBAChB,gBAAgB,EAAE,IAAI,CAAC,aAAa,EAAE;aACtC,CAAC;SACF,CAAC;QACF,MAAM,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,oBAAoB,EAAE,EAAE,eAAe,CAAC,CAAC;IACnF,CAAC;IAEO,KAAK,CAAC,8BAA8B,CAC3C,aAA4B,EAC5B,gBAA0B,EAC1B,wBAAgC,EAChC,UAAkB,EAClB,gBAAwB,EACxB,UAAyB;QAEzB,MAAM,IAAI,GAAG,aAAa,CAAC,oBAAoB,EAAE,CAAC;QAClD,MAAM,mBAAmB,GAAG,MAAM,CACjC,GAAG,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAW,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,QAAQ,gBAAgB,CAAC,GAAG,EAAE,EACnH,EAAE,IAAI,EAAE,IAAI,EAAE,CACd,CAAC;QAEF,OAAO,4BAA4B,CAAC;YACnC,mBAAmB;YACnB,gBAAgB,EAAE,wBAAwB;YAC1C,UAAU;YACV,gBAAgB;YAChB,gBAAgB,EAAE,UAAU,CAAC,aAAa,EAAE;SAC5C,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,iCAAiC,CAC7C,aAAuB,EACvB,2BAAmC,EACnC,iBAAyB,EACzB,gBAAwB,EACxB,UAAyB;QAEzB,MAAM,gBAAgB,GAAG,aAAa,CAAC,WAAW,EAAE,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC;QAEjG,OAAO,4BAA4B,CAAC;YACnC,mBAAmB,EAAE,gBAAgB,IAAI,EAAE;YAC3C,gBAAgB,EAAE,2BAA2B;YAC7C,UAAU,EAAE,iBAAiB;YAC7B,gBAAgB;YAChB,gBAAgB,EAAE,UAAU,CAAC,aAAa,EAAE;SAC5C,CAAC,CAAC;IACJ,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAC7B,IAAmB,EACnB,iBAAyB,EACzB,2BAAmC,EACnC,aAAuB,EACvB,gBAAwB;QAExB,MAAM,cAAc,GAAG;YACtB,GAAG,aAAa;YAChB,GAAG,EAAE,MAAM,IAAI,CAAC,iCAAiC,CAChD,aAAa,EACb,2BAA2B,EAC3B,iBAAiB,EACjB,gBAAgB,EAChB,IAAI,CACJ;SACD,CAAC;QACF,MAAM,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,oBAAoB,EAAE,EAAE,aAAa,CAAC,CAAC;IACjF,CAAC;IAEM,KAAK,CAAC,eAAe,CAC3B,IAAmB,EACnB,IAAmB,EACnB,KAAwB,EACxB,WAAoC,EACpC,eAAuB;QAEvB,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE;YACzB,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,KAAK;YACL,WAAW;SACX,EACD,IAAI,CAAC,oBAAoB,EAAE,CAC3B,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,oBAAoB,CAChC,IAAmB,EACnB,aAA4B,EAC5B,KAAwB,EACxB,WAAoC,EACpC,eAAuB,EACvB,gBAA0B,EAC1B,gBAAwB;QAExB,MAAM,IAAI,GAAG,aAAa,CAAC,oBAAoB,EAAE,CAAC;QAElD,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,aAAa,CAAC,aAAa,EAAE;YAClC,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,KAAK;YACL,WAAW;YACX,GAAG,EAAE,MAAM,IAAI,CAAC,8BAA8B,CAAC,aAAa,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,gBAAgB,EAAE,IAAI,CAAC;SAC/G,EACD,IAAI,CACJ,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,qBAAqB,CACjC,IAAmB,EACnB,IAAmB,EACnB,KAAwB,EACxB,WAAoC,EACpC,eAAuB,EACvB,eAAuB;QAEvB,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE;YACzB,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,KAAK;YACL,WAAW;YACX,IAAI,EAAE,eAAe;SACrB,EACD,IAAI,CAAC,oBAAoB,EAAE,CAC3B,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,0BAA0B,CACtC,IAAmB,EACnB,aAA4B,EAC5B,KAAwB,EACxB,WAAoC,EACpC,eAAuB,EACvB,gBAA0B,EAC1B,gBAAwB,EACxB,eAAuB;QAEvB,MAAM,IAAI,GAAG,aAAa,CAAC,oBAAoB,EAAE,CAAC;QAClD,MAAM,mBAAmB,GAAG,MAAM,CACjC,GAAG,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAW,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,QAAQ,gBAAgB,CAAC,GAAG,EAAE,EACnH,EAAE,IAAI,EAAE,IAAI,EAAE,CACd,CAAC;QAEF,MAAM,WAAW,CAChB,IAAI,CAAC,oBAAoB,EAAE,EAC3B;YACC,UAAU,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE;YACxC,GAAG,EAAE,aAAa,CAAC,aAAa,EAAE;YAClC,EAAE,EAAE,IAAI,IAAI,EAAE;YACd,IAAI,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtB,KAAK;YACL,WAAW;YACX,GAAG,EAAE,MAAM,4BAA4B,CAAC;gBACvC,mBAAmB;gBACnB,UAAU,EAAE,EAAE;gBACd,gBAAgB,EAAE,IAAI,CAAC,aAAa,EAAE;gBACtC,gBAAgB,EAAE,EAAE;gBACpB,gBAAgB;aAChB,CAAC;YACF,IAAI,EAAE,eAAe;SACrB,EACD,IAAI,CACJ,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,aAAa,CAAC,OAAiB,EAAE,IAAmB;QAChE,MAAM,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;IAC3D,CAAC;IAEM,KAAK,CAAC,cAAc,CAAC,IAAmB,EAAE,OAAiB,EAAE,QAAgB,EAAE,eAAuB;QAC5G,IAAI,CAAC;YACJ,MAAM,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YACtE,IAAI,CAAC,WAAW,EAAE;gBACjB,CAAC,MAAM,QAAQ,CAAC,4BAA4B,CAC3C,IAAI,CAAC,WAAW,EAAY,EAC5B,OAAO,CAAC,GAAG,EACX,QAAQ,EACR,+BAA+B,CAAC,eAAe,CAAC,CAChD,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACrB,IAAI,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,yBAAyB,CAAC,EAAE,CAAC;gBACzD,MAAM,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,yDAAyD,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;YACxH,CAAC;QACF,CAAC;IACF,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAAC,IAAmB,EAAE,OAAiB,EAAE,QAAgB,EAAE,eAAuB;QAC9G,MAAM,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;QACtE,MAAM,QAAQ,CAAC,8BAA8B,CAAC,+BAA+B,CAAC,eAAe,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACxH,CAAC;IAEM,KAAK,CAAC,gCAAgC,CAAC,iBAAyB,EAAE,IAAmB;QAC3F,OAAO,CACN,CAAC,IAAI,CAAC,WAAW,EAAE;YAClB,QAAQ,CAAC,2CAA2C,CACnD,+BAA+B,CAAC,iBAAiB,CAAC,EAClD,IAAI,CAAC,WAAW,EAAY,CAC5B,CAAC;YACH,SAAS,CACT,CAAC;IACH,CAAC;IAEM,KAAK,CAAC,wBAAwB,CAAC,iBAAyB;QAC9D,OAAO,QAAQ,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;IAC1D,CAAC;IAEM,KAAK,CAAC,mCAAmC,CAAC,SAAiB,EAAE,iBAAyB;QAC5F,OAAO,QAAQ,CAAC,wBAAwB,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;IACxE,CAAC;IAEM,KAAK,CAAC,6CAA6C,CAAC,eAAuB,EAAE,OAAiB,EAAE,QAAgB;QACtH,MAAM,QAAQ,CAAC,8BAA8B,CAAC,+BAA+B,CAAC,eAAe,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACxH,CAAC;IAEM,KAAK,CAAC,cAAc,CAAC,iBAAyB;QACpD,OAAO,QAAQ,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;IAChD,CAAC;IAEM,KAAK,CAAC,2CAA2C,CACvD,QAAgB,EAChB,OAAiB,EACjB,QAAgB,EAChB,eAAuB;QAEvB,MAAM,QAAQ,CAAC,4BAA4B,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE,+BAA+B,CAAC,eAAe,CAAC,CAAC,CAAC;IAChI,CAAC;CACD","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { isQuoteAttachment } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\n\nimport { deleteMessage } from '../../../../../../app/lib/server/functions/deleteMessage';\nimport { sendMessage } from '../../../../../../app/lib/server/functions/sendMessage';\nimport { updateMessage } from '../../../../../../app/lib/server/functions/updateMessage';\nimport { executeSetReaction } from '../../../../../../app/reactions/server/setReaction';\nimport { getURL } from '../../../../../../app/utils/server/getURL';\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\nimport type { FederatedRoom } from '../../../domain/FederatedRoom';\nimport type { FederatedUser } from '../../../domain/FederatedUser';\nimport { toInternalMessageFormat, toInternalQuoteMessageFormat } from '../converters/to-external-parser-formatter';\nimport { escapeExternalFederationEventId } from './federation-id-escape-helper';\n\nconst DEFAULT_EMOJI_TO_REACT_WHEN_RECEIVED_EMOJI_DOES_NOT_EXIST = ':grey_question:';\n\nexport class RocketChatMessageAdapter {\n\tpublic async sendMessage(\n\t\tuser: FederatedUser,\n\t\troom: FederatedRoom,\n\t\trawMessage: string,\n\t\texternalFormattedMessage: string,\n\t\texternalEventId: string,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\tmsg: toInternalMessageFormat({\n\t\t\t\t\trawMessage,\n\t\t\t\t\tformattedMessage: externalFormattedMessage,\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t\tsenderExternalId: user.getExternalId(),\n\t\t\t\t}),\n\t\t\t},\n\t\t\troom.getInternalReference(),\n\t\t);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\tuser: FederatedUser,\n\t\tfederatedRoom: FederatedRoom,\n\t\texternalFormattedText: string,\n\t\trawMessage: string,\n\t\texternalEventId: string,\n\t\tmessageToReplyTo: IMessage,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tconst room = federatedRoom.getInternalReference();\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\tmsg: await this.getMessageToReplyToWhenQuoting(\n\t\t\t\t\tfederatedRoom,\n\t\t\t\t\tmessageToReplyTo,\n\t\t\t\t\texternalFormattedText,\n\t\t\t\t\trawMessage,\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t\tuser,\n\t\t\t\t),\n\t\t\t},\n\t\t\troom,\n\t\t);\n\t}\n\n\tpublic async sendThreadMessage(\n\t\tuser: FederatedUser,\n\t\troom: FederatedRoom,\n\t\trawMessage: string,\n\t\texternalEventId: string,\n\t\tparentMessageId: string,\n\t\texternalFormattedMessage: string,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\tmsg: toInternalMessageFormat({\n\t\t\t\t\trawMessage,\n\t\t\t\t\tformattedMessage: externalFormattedMessage,\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t\tsenderExternalId: user.getExternalId(),\n\t\t\t\t}),\n\t\t\t\ttmid: parentMessageId,\n\t\t\t},\n\t\t\troom.getInternalReference(),\n\t\t);\n\t}\n\n\tpublic async sendThreadQuoteMessage(\n\t\tuser: FederatedUser,\n\t\tfederatedRoom: FederatedRoom,\n\t\trawMessage: string,\n\t\texternalEventId: string,\n\t\tmessageToReplyTo: IMessage,\n\t\thomeServerDomain: string,\n\t\tparentMessageId: string,\n\t\texternalFormattedText: string,\n\t): Promise<void> {\n\t\tconst room = federatedRoom.getInternalReference();\n\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\tmsg: await this.getMessageToReplyToWhenQuoting(\n\t\t\t\t\tfederatedRoom,\n\t\t\t\t\tmessageToReplyTo,\n\t\t\t\t\texternalFormattedText,\n\t\t\t\t\trawMessage,\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t\tuser,\n\t\t\t\t),\n\t\t\t\ttmid: parentMessageId,\n\t\t\t},\n\t\t\troom,\n\t\t);\n\t}\n\n\tpublic async editMessage(\n\t\tuser: FederatedUser,\n\t\tnewRawMessageText: string,\n\t\tnewExternalFormattedMessage: string,\n\t\toriginalMessage: IMessage,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tconst updatedMessage = {\n\t\t\t...originalMessage,\n\t\t\tmsg: toInternalMessageFormat({\n\t\t\t\trawMessage: newRawMessageText,\n\t\t\t\tformattedMessage: newExternalFormattedMessage,\n\t\t\t\thomeServerDomain,\n\t\t\t\tsenderExternalId: user.getExternalId(),\n\t\t\t}),\n\t\t};\n\t\tawait updateMessage(updatedMessage, user.getInternalReference(), originalMessage);\n\t}\n\n\tprivate async getMessageToReplyToWhenQuoting(\n\t\tfederatedRoom: FederatedRoom,\n\t\tmessageToReplyTo: IMessage,\n\t\texternalFormattedMessage: string,\n\t\trawMessage: string,\n\t\thomeServerDomain: string,\n\t\tsenderUser: FederatedUser,\n\t): Promise<string> {\n\t\tconst room = federatedRoom.getInternalReference();\n\t\tconst messageToReplyToUrl = getURL(\n\t\t\t`${roomCoordinator.getRouteLink(room.t as string, { rid: room._id, name: room.name })}?msg=${messageToReplyTo._id}`,\n\t\t\t{ full: true },\n\t\t);\n\n\t\treturn toInternalQuoteMessageFormat({\n\t\t\tmessageToReplyToUrl,\n\t\t\tformattedMessage: externalFormattedMessage,\n\t\t\trawMessage,\n\t\t\thomeServerDomain,\n\t\t\tsenderExternalId: senderUser.getExternalId(),\n\t\t});\n\t}\n\n\tpublic async getMessageToEditWhenReplyAndQuote(\n\t\teditedMessage: IMessage,\n\t\tnewExternalFormattedMessage: string,\n\t\tnewRawMessageText: string,\n\t\thomeServerDomain: string,\n\t\tsenderUser: FederatedUser,\n\t): Promise<string> {\n\t\tconst quotedMessageUrl = editedMessage.attachments?.filter(isQuoteAttachment)?.[0]?.message_link;\n\n\t\treturn toInternalQuoteMessageFormat({\n\t\t\tmessageToReplyToUrl: quotedMessageUrl || '',\n\t\t\tformattedMessage: newExternalFormattedMessage,\n\t\t\trawMessage: newRawMessageText,\n\t\t\thomeServerDomain,\n\t\t\tsenderExternalId: senderUser.getExternalId(),\n\t\t});\n\t}\n\n\tpublic async editQuotedMessage(\n\t\tuser: FederatedUser,\n\t\tnewRawMessageText: string,\n\t\tnewExternalFormattedMessage: string,\n\t\teditedMessage: IMessage,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tconst updatedMessage = {\n\t\t\t...editedMessage,\n\t\t\tmsg: await this.getMessageToEditWhenReplyAndQuote(\n\t\t\t\teditedMessage,\n\t\t\t\tnewExternalFormattedMessage,\n\t\t\t\tnewRawMessageText,\n\t\t\t\thomeServerDomain,\n\t\t\t\tuser,\n\t\t\t),\n\t\t};\n\t\tawait updateMessage(updatedMessage, user.getInternalReference(), editedMessage);\n\t}\n\n\tpublic async sendFileMessage(\n\t\tuser: FederatedUser,\n\t\troom: FederatedRoom,\n\t\tfiles: IMessage['files'],\n\t\tattachments: IMessage['attachments'],\n\t\texternalEventId: string,\n\t): Promise<void> {\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\trid: room.getInternalId(),\n\t\t\t\tts: new Date(),\n\t\t\t\tfile: (files || [])[0],\n\t\t\t\tfiles,\n\t\t\t\tattachments,\n\t\t\t},\n\t\t\troom.getInternalReference(),\n\t\t);\n\t}\n\n\tpublic async sendQuoteFileMessage(\n\t\tuser: FederatedUser,\n\t\tfederatedRoom: FederatedRoom,\n\t\tfiles: IMessage['files'],\n\t\tattachments: IMessage['attachments'],\n\t\texternalEventId: string,\n\t\tmessageToReplyTo: IMessage,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tconst room = federatedRoom.getInternalReference();\n\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\trid: federatedRoom.getInternalId(),\n\t\t\t\tts: new Date(),\n\t\t\t\tfile: (files || [])[0],\n\t\t\t\tfiles,\n\t\t\t\tattachments,\n\t\t\t\tmsg: await this.getMessageToReplyToWhenQuoting(federatedRoom, messageToReplyTo, '', '', homeServerDomain, user),\n\t\t\t},\n\t\t\troom,\n\t\t);\n\t}\n\n\tpublic async sendThreadFileMessage(\n\t\tuser: FederatedUser,\n\t\troom: FederatedRoom,\n\t\tfiles: IMessage['files'],\n\t\tattachments: IMessage['attachments'],\n\t\texternalEventId: string,\n\t\tparentMessageId: string,\n\t): Promise<void> {\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\trid: room.getInternalId(),\n\t\t\t\tts: new Date(),\n\t\t\t\tfile: (files || [])[0],\n\t\t\t\tfiles,\n\t\t\t\tattachments,\n\t\t\t\ttmid: parentMessageId,\n\t\t\t},\n\t\t\troom.getInternalReference(),\n\t\t);\n\t}\n\n\tpublic async sendThreadQuoteFileMessage(\n\t\tuser: FederatedUser,\n\t\tfederatedRoom: FederatedRoom,\n\t\tfiles: IMessage['files'],\n\t\tattachments: IMessage['attachments'],\n\t\texternalEventId: string,\n\t\tmessageToReplyTo: IMessage,\n\t\thomeServerDomain: string,\n\t\tparentMessageId: string,\n\t): Promise<void> {\n\t\tconst room = federatedRoom.getInternalReference();\n\t\tconst messageToReplyToUrl = getURL(\n\t\t\t`${roomCoordinator.getRouteLink(room.t as string, { rid: room._id, name: room.name })}?msg=${messageToReplyTo._id}`,\n\t\t\t{ full: true },\n\t\t);\n\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\trid: federatedRoom.getInternalId(),\n\t\t\t\tts: new Date(),\n\t\t\t\tfile: (files || [])[0],\n\t\t\t\tfiles,\n\t\t\t\tattachments,\n\t\t\t\tmsg: await toInternalQuoteMessageFormat({\n\t\t\t\t\tmessageToReplyToUrl,\n\t\t\t\t\trawMessage: '',\n\t\t\t\t\tsenderExternalId: user.getExternalId(),\n\t\t\t\t\tformattedMessage: '',\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t}),\n\t\t\t\ttmid: parentMessageId,\n\t\t\t},\n\t\t\troom,\n\t\t);\n\t}\n\n\tpublic async deleteMessage(message: IMessage, user: FederatedUser): Promise<void> {\n\t\tawait deleteMessage(message, user.getInternalReference());\n\t}\n\n\tpublic async reactToMessage(user: FederatedUser, message: IMessage, reaction: string, externalEventId: string): Promise<void> {\n\t\ttry {\n\t\t\tawait executeSetReaction(user.getInternalId(), reaction, message._id);\n\t\t\tuser.getUsername() &&\n\t\t\t\t(await Messages.setFederationReactionEventId(\n\t\t\t\t\tuser.getUsername() as string,\n\t\t\t\t\tmessage._id,\n\t\t\t\t\treaction,\n\t\t\t\t\tescapeExternalFederationEventId(externalEventId),\n\t\t\t\t));\n\t\t} catch (error: any) {\n\t\t\tif (error?.message?.includes('Invalid emoji provided.')) {\n\t\t\t\tawait executeSetReaction(user.getInternalId(), DEFAULT_EMOJI_TO_REACT_WHEN_RECEIVED_EMOJI_DOES_NOT_EXIST, message._id);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async unreactToMessage(user: FederatedUser, message: IMessage, reaction: string, externalEventId: string): Promise<void> {\n\t\tawait executeSetReaction(user.getInternalId(), reaction, message._id);\n\t\tawait Messages.unsetFederationReactionEventId(escapeExternalFederationEventId(externalEventId), message._id, reaction);\n\t}\n\n\tpublic async findOneByFederationIdOnReactions(federationEventId: string, user: FederatedUser): Promise<IMessage | null | undefined> {\n\t\treturn (\n\t\t\t(user.getUsername() &&\n\t\t\t\tMessages.findOneByFederationIdAndUsernameOnReactions(\n\t\t\t\t\tescapeExternalFederationEventId(federationEventId),\n\t\t\t\t\tuser.getUsername() as string,\n\t\t\t\t)) ||\n\t\t\tundefined\n\t\t);\n\t}\n\n\tpublic async getMessageByFederationId(federationEventId: string): Promise<IMessage | null> {\n\t\treturn Messages.findOneByFederationId(federationEventId);\n\t}\n\n\tpublic async setExternalFederationEventOnMessage(messageId: string, federationEventId: string): Promise<void> {\n\t\treturn Messages.setFederationEventIdById(messageId, federationEventId);\n\t}\n\n\tpublic async unsetExternalFederationEventOnMessageReaction(externalEventId: string, message: IMessage, reaction: string): Promise<void> {\n\t\tawait Messages.unsetFederationReactionEventId(escapeExternalFederationEventId(externalEventId), message._id, reaction);\n\t}\n\n\tpublic async getMessageById(internalMessageId: string): Promise<IMessage | null> {\n\t\treturn Messages.findOneById(internalMessageId);\n\t}\n\n\tpublic async setExternalFederationEventOnMessageReaction(\n\t\tusername: string,\n\t\tmessage: IMessage,\n\t\treaction: string,\n\t\texternalEventId: string,\n\t): Promise<void> {\n\t\tawait Messages.setFederationReactionEventId(username, message._id, reaction, escapeExternalFederationEventId(externalEventId));\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      RocketChatMessageAdapter: () => RocketChatMessageAdapter\n    });\n    let isQuoteAttachment;\n    module.link(\"@rocket.chat/core-typings\", {\n      isQuoteAttachment(v) {\n        isQuoteAttachment = v;\n      }\n    }, 0);\n    let Messages;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      }\n    }, 1);\n    let deleteMessage;\n    module.link(\"../../../../../../app/lib/server/functions/deleteMessage\", {\n      deleteMessage(v) {\n        deleteMessage = v;\n      }\n    }, 2);\n    let sendMessage;\n    module.link(\"../../../../../../app/lib/server/functions/sendMessage\", {\n      sendMessage(v) {\n        sendMessage = v;\n      }\n    }, 3);\n    let updateMessage;\n    module.link(\"../../../../../../app/lib/server/functions/updateMessage\", {\n      updateMessage(v) {\n        updateMessage = v;\n      }\n    }, 4);\n    let executeSetReaction;\n    module.link(\"../../../../../../app/reactions/server/setReaction\", {\n      executeSetReaction(v) {\n        executeSetReaction = v;\n      }\n    }, 5);\n    let getURL;\n    module.link(\"../../../../../../app/utils/server/getURL\", {\n      getURL(v) {\n        getURL = v;\n      }\n    }, 6);\n    let roomCoordinator;\n    module.link(\"../../../../../lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 7);\n    let toInternalMessageFormat, toInternalQuoteMessageFormat;\n    module.link(\"../converters/to-external-parser-formatter\", {\n      toInternalMessageFormat(v) {\n        toInternalMessageFormat = v;\n      },\n      toInternalQuoteMessageFormat(v) {\n        toInternalQuoteMessageFormat = v;\n      }\n    }, 8);\n    let escapeExternalFederationEventId;\n    module.link(\"./federation-id-escape-helper\", {\n      escapeExternalFederationEventId(v) {\n        escapeExternalFederationEventId = v;\n      }\n    }, 9);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const DEFAULT_EMOJI_TO_REACT_WHEN_RECEIVED_EMOJI_DOES_NOT_EXIST = ':grey_question:';\n    class RocketChatMessageAdapter {\n      async sendMessage(user, room, rawMessage, externalFormattedMessage, externalEventId, homeServerDomain) {\n        await sendMessage(user.getInternalReference(), {\n          federation: {\n            eventId: externalEventId\n          },\n          msg: toInternalMessageFormat({\n            rawMessage,\n            formattedMessage: externalFormattedMessage,\n            homeServerDomain,\n            senderExternalId: user.getExternalId()\n          })\n        }, room.getInternalReference());\n      }\n      async sendQuoteMessage(user, federatedRoom, externalFormattedText, rawMessage, externalEventId, messageToReplyTo, homeServerDomain) {\n        const room = federatedRoom.getInternalReference();\n        await sendMessage(user.getInternalReference(), {\n          federation: {\n            eventId: externalEventId\n          },\n          msg: await this.getMessageToReplyToWhenQuoting(federatedRoom, messageToReplyTo, externalFormattedText, rawMessage, homeServerDomain, user)\n        }, room);\n      }\n      async sendThreadMessage(user, room, rawMessage, externalEventId, parentMessageId, externalFormattedMessage, homeServerDomain) {\n        await sendMessage(user.getInternalReference(), {\n          federation: {\n            eventId: externalEventId\n          },\n          msg: toInternalMessageFormat({\n            rawMessage,\n            formattedMessage: externalFormattedMessage,\n            homeServerDomain,\n            senderExternalId: user.getExternalId()\n          }),\n          tmid: parentMessageId\n        }, room.getInternalReference());\n      }\n      async sendThreadQuoteMessage(user, federatedRoom, rawMessage, externalEventId, messageToReplyTo, homeServerDomain, parentMessageId, externalFormattedText) {\n        const room = federatedRoom.getInternalReference();\n        await sendMessage(user.getInternalReference(), {\n          federation: {\n            eventId: externalEventId\n          },\n          msg: await this.getMessageToReplyToWhenQuoting(federatedRoom, messageToReplyTo, externalFormattedText, rawMessage, homeServerDomain, user),\n          tmid: parentMessageId\n        }, room);\n      }\n      async editMessage(user, newRawMessageText, newExternalFormattedMessage, originalMessage, homeServerDomain) {\n        const updatedMessage = _objectSpread(_objectSpread({}, originalMessage), {}, {\n          msg: toInternalMessageFormat({\n            rawMessage: newRawMessageText,\n            formattedMessage: newExternalFormattedMessage,\n            homeServerDomain,\n            senderExternalId: user.getExternalId()\n          })\n        });\n        await updateMessage(updatedMessage, user.getInternalReference(), originalMessage);\n      }\n      async getMessageToReplyToWhenQuoting(federatedRoom, messageToReplyTo, externalFormattedMessage, rawMessage, homeServerDomain, senderUser) {\n        const room = federatedRoom.getInternalReference();\n        const messageToReplyToUrl = getURL(\"\".concat(roomCoordinator.getRouteLink(room.t, {\n          rid: room._id,\n          name: room.name\n        }), \"?msg=\").concat(messageToReplyTo._id), {\n          full: true\n        });\n        return toInternalQuoteMessageFormat({\n          messageToReplyToUrl,\n          formattedMessage: externalFormattedMessage,\n          rawMessage,\n          homeServerDomain,\n          senderExternalId: senderUser.getExternalId()\n        });\n      }\n      async getMessageToEditWhenReplyAndQuote(editedMessage, newExternalFormattedMessage, newRawMessageText, homeServerDomain, senderUser) {\n        var _editedMessage$attach, _editedMessage$attach2, _editedMessage$attach3;\n        const quotedMessageUrl = (_editedMessage$attach = editedMessage.attachments) === null || _editedMessage$attach === void 0 ? void 0 : (_editedMessage$attach2 = _editedMessage$attach.filter(isQuoteAttachment)) === null || _editedMessage$attach2 === void 0 ? void 0 : (_editedMessage$attach3 = _editedMessage$attach2[0]) === null || _editedMessage$attach3 === void 0 ? void 0 : _editedMessage$attach3.message_link;\n        return toInternalQuoteMessageFormat({\n          messageToReplyToUrl: quotedMessageUrl || '',\n          formattedMessage: newExternalFormattedMessage,\n          rawMessage: newRawMessageText,\n          homeServerDomain,\n          senderExternalId: senderUser.getExternalId()\n        });\n      }\n      async editQuotedMessage(user, newRawMessageText, newExternalFormattedMessage, editedMessage, homeServerDomain) {\n        const updatedMessage = _objectSpread(_objectSpread({}, editedMessage), {}, {\n          msg: await this.getMessageToEditWhenReplyAndQuote(editedMessage, newExternalFormattedMessage, newRawMessageText, homeServerDomain, user)\n        });\n        await updateMessage(updatedMessage, user.getInternalReference(), editedMessage);\n      }\n      async sendFileMessage(user, room, files, attachments, externalEventId) {\n        await sendMessage(user.getInternalReference(), {\n          federation: {\n            eventId: externalEventId\n          },\n          rid: room.getInternalId(),\n          ts: new Date(),\n          file: (files || [])[0],\n          files,\n          attachments\n        }, room.getInternalReference());\n      }\n      async sendQuoteFileMessage(user, federatedRoom, files, attachments, externalEventId, messageToReplyTo, homeServerDomain) {\n        const room = federatedRoom.getInternalReference();\n        await sendMessage(user.getInternalReference(), {\n          federation: {\n            eventId: externalEventId\n          },\n          rid: federatedRoom.getInternalId(),\n          ts: new Date(),\n          file: (files || [])[0],\n          files,\n          attachments,\n          msg: await this.getMessageToReplyToWhenQuoting(federatedRoom, messageToReplyTo, '', '', homeServerDomain, user)\n        }, room);\n      }\n      async sendThreadFileMessage(user, room, files, attachments, externalEventId, parentMessageId) {\n        await sendMessage(user.getInternalReference(), {\n          federation: {\n            eventId: externalEventId\n          },\n          rid: room.getInternalId(),\n          ts: new Date(),\n          file: (files || [])[0],\n          files,\n          attachments,\n          tmid: parentMessageId\n        }, room.getInternalReference());\n      }\n      async sendThreadQuoteFileMessage(user, federatedRoom, files, attachments, externalEventId, messageToReplyTo, homeServerDomain, parentMessageId) {\n        const room = federatedRoom.getInternalReference();\n        const messageToReplyToUrl = getURL(\"\".concat(roomCoordinator.getRouteLink(room.t, {\n          rid: room._id,\n          name: room.name\n        }), \"?msg=\").concat(messageToReplyTo._id), {\n          full: true\n        });\n        await sendMessage(user.getInternalReference(), {\n          federation: {\n            eventId: externalEventId\n          },\n          rid: federatedRoom.getInternalId(),\n          ts: new Date(),\n          file: (files || [])[0],\n          files,\n          attachments,\n          msg: await toInternalQuoteMessageFormat({\n            messageToReplyToUrl,\n            rawMessage: '',\n            senderExternalId: user.getExternalId(),\n            formattedMessage: '',\n            homeServerDomain\n          }),\n          tmid: parentMessageId\n        }, room);\n      }\n      async deleteMessage(message, user) {\n        await deleteMessage(message, user.getInternalReference());\n      }\n      async reactToMessage(user, message, reaction, externalEventId) {\n        try {\n          await executeSetReaction(user.getInternalId(), reaction, message._id);\n          user.getUsername() && (await Messages.setFederationReactionEventId(user.getUsername(), message._id, reaction, escapeExternalFederationEventId(externalEventId)));\n        } catch (error) {\n          var _error$message;\n          if (error !== null && error !== void 0 && (_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('Invalid emoji provided.')) {\n            await executeSetReaction(user.getInternalId(), DEFAULT_EMOJI_TO_REACT_WHEN_RECEIVED_EMOJI_DOES_NOT_EXIST, message._id);\n          }\n        }\n      }\n      async unreactToMessage(user, message, reaction, externalEventId) {\n        await executeSetReaction(user.getInternalId(), reaction, message._id);\n        await Messages.unsetFederationReactionEventId(escapeExternalFederationEventId(externalEventId), message._id, reaction);\n      }\n      async findOneByFederationIdOnReactions(federationEventId, user) {\n        return user.getUsername() && Messages.findOneByFederationIdAndUsernameOnReactions(escapeExternalFederationEventId(federationEventId), user.getUsername()) || undefined;\n      }\n      async getMessageByFederationId(federationEventId) {\n        return Messages.findOneByFederationId(federationEventId);\n      }\n      async setExternalFederationEventOnMessage(messageId, federationEventId) {\n        return Messages.setFederationEventIdById(messageId, federationEventId);\n      }\n      async unsetExternalFederationEventOnMessageReaction(externalEventId, message, reaction) {\n        await Messages.unsetFederationReactionEventId(escapeExternalFederationEventId(externalEventId), message._id, reaction);\n      }\n      async getMessageById(internalMessageId) {\n        return Messages.findOneById(internalMessageId);\n      }\n      async setExternalFederationEventOnMessageReaction(username, message, reaction, externalEventId) {\n        await Messages.setFederationReactionEventId(username, message._id, reaction, escapeExternalFederationEventId(externalEventId));\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","RocketChatMessageAdapter","isQuoteAttachment","Messages","deleteMessage","sendMessage","updateMessage","executeSetReaction","getURL","roomCoordinator","toInternalMessageFormat","toInternalQuoteMessageFormat","escapeExternalFederationEventId","__reifyWaitForDeps__","DEFAULT_EMOJI_TO_REACT_WHEN_RECEIVED_EMOJI_DOES_NOT_EXIST","user","room","rawMessage","externalFormattedMessage","externalEventId","homeServerDomain","getInternalReference","federation","eventId","msg","formattedMessage","senderExternalId","getExternalId","sendQuoteMessage","federatedRoom","externalFormattedText","messageToReplyTo","getMessageToReplyToWhenQuoting","sendThreadMessage","parentMessageId","tmid","sendThreadQuoteMessage","editMessage","newRawMessageText","newExternalFormattedMessage","originalMessage","updatedMessage","senderUser","messageToReplyToUrl","concat","getRouteLink","t","rid","_id","name","full","getMessageToEditWhenReplyAndQuote","editedMessage","_editedMessage$attach","_editedMessage$attach2","_editedMessage$attach3","quotedMessageUrl","attachments","filter","message_link","editQuotedMessage","sendFileMessage","files","getInternalId","ts","Date","file","sendQuoteFileMessage","sendThreadFileMessage","sendThreadQuoteFileMessage","message","reactToMessage","reaction","getUsername","setFederationReactionEventId","error","_error$message","includes","unreactToMessage","unsetFederationReactionEventId","findOneByFederationIdOnReactions","federationEventId","findOneByFederationIdAndUsernameOnReactions","undefined","getMessageByFederationId","findOneByFederationId","setExternalFederationEventOnMessage","messageId","setFederationEventIdById","unsetExternalFederationEventOnMessageReaction","getMessageById","internalMessageId","findOneById","setExternalFederationEventOnMessageReaction","username","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/federation/infrastructure/rocket-chat/adapters/Message.ts"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { isQuoteAttachment } from '@rocket.chat/core-typings';\nimport { Messages } from '@rocket.chat/models';\n\nimport { deleteMessage } from '../../../../../../app/lib/server/functions/deleteMessage';\nimport { sendMessage } from '../../../../../../app/lib/server/functions/sendMessage';\nimport { updateMessage } from '../../../../../../app/lib/server/functions/updateMessage';\nimport { executeSetReaction } from '../../../../../../app/reactions/server/setReaction';\nimport { getURL } from '../../../../../../app/utils/server/getURL';\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\nimport type { FederatedRoom } from '../../../domain/FederatedRoom';\nimport type { FederatedUser } from '../../../domain/FederatedUser';\nimport { toInternalMessageFormat, toInternalQuoteMessageFormat } from '../converters/to-external-parser-formatter';\nimport { escapeExternalFederationEventId } from './federation-id-escape-helper';\n\nconst DEFAULT_EMOJI_TO_REACT_WHEN_RECEIVED_EMOJI_DOES_NOT_EXIST = ':grey_question:';\n\nexport class RocketChatMessageAdapter {\n\tpublic async sendMessage(\n\t\tuser: FederatedUser,\n\t\troom: FederatedRoom,\n\t\trawMessage: string,\n\t\texternalFormattedMessage: string,\n\t\texternalEventId: string,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\tmsg: toInternalMessageFormat({\n\t\t\t\t\trawMessage,\n\t\t\t\t\tformattedMessage: externalFormattedMessage,\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t\tsenderExternalId: user.getExternalId(),\n\t\t\t\t}),\n\t\t\t},\n\t\t\troom.getInternalReference(),\n\t\t);\n\t}\n\n\tpublic async sendQuoteMessage(\n\t\tuser: FederatedUser,\n\t\tfederatedRoom: FederatedRoom,\n\t\texternalFormattedText: string,\n\t\trawMessage: string,\n\t\texternalEventId: string,\n\t\tmessageToReplyTo: IMessage,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tconst room = federatedRoom.getInternalReference();\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\tmsg: await this.getMessageToReplyToWhenQuoting(\n\t\t\t\t\tfederatedRoom,\n\t\t\t\t\tmessageToReplyTo,\n\t\t\t\t\texternalFormattedText,\n\t\t\t\t\trawMessage,\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t\tuser,\n\t\t\t\t),\n\t\t\t},\n\t\t\troom,\n\t\t);\n\t}\n\n\tpublic async sendThreadMessage(\n\t\tuser: FederatedUser,\n\t\troom: FederatedRoom,\n\t\trawMessage: string,\n\t\texternalEventId: string,\n\t\tparentMessageId: string,\n\t\texternalFormattedMessage: string,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\tmsg: toInternalMessageFormat({\n\t\t\t\t\trawMessage,\n\t\t\t\t\tformattedMessage: externalFormattedMessage,\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t\tsenderExternalId: user.getExternalId(),\n\t\t\t\t}),\n\t\t\t\ttmid: parentMessageId,\n\t\t\t},\n\t\t\troom.getInternalReference(),\n\t\t);\n\t}\n\n\tpublic async sendThreadQuoteMessage(\n\t\tuser: FederatedUser,\n\t\tfederatedRoom: FederatedRoom,\n\t\trawMessage: string,\n\t\texternalEventId: string,\n\t\tmessageToReplyTo: IMessage,\n\t\thomeServerDomain: string,\n\t\tparentMessageId: string,\n\t\texternalFormattedText: string,\n\t): Promise<void> {\n\t\tconst room = federatedRoom.getInternalReference();\n\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\tmsg: await this.getMessageToReplyToWhenQuoting(\n\t\t\t\t\tfederatedRoom,\n\t\t\t\t\tmessageToReplyTo,\n\t\t\t\t\texternalFormattedText,\n\t\t\t\t\trawMessage,\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t\tuser,\n\t\t\t\t),\n\t\t\t\ttmid: parentMessageId,\n\t\t\t},\n\t\t\troom,\n\t\t);\n\t}\n\n\tpublic async editMessage(\n\t\tuser: FederatedUser,\n\t\tnewRawMessageText: string,\n\t\tnewExternalFormattedMessage: string,\n\t\toriginalMessage: IMessage,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tconst updatedMessage = {\n\t\t\t...originalMessage,\n\t\t\tmsg: toInternalMessageFormat({\n\t\t\t\trawMessage: newRawMessageText,\n\t\t\t\tformattedMessage: newExternalFormattedMessage,\n\t\t\t\thomeServerDomain,\n\t\t\t\tsenderExternalId: user.getExternalId(),\n\t\t\t}),\n\t\t};\n\t\tawait updateMessage(updatedMessage, user.getInternalReference(), originalMessage);\n\t}\n\n\tprivate async getMessageToReplyToWhenQuoting(\n\t\tfederatedRoom: FederatedRoom,\n\t\tmessageToReplyTo: IMessage,\n\t\texternalFormattedMessage: string,\n\t\trawMessage: string,\n\t\thomeServerDomain: string,\n\t\tsenderUser: FederatedUser,\n\t): Promise<string> {\n\t\tconst room = federatedRoom.getInternalReference();\n\t\tconst messageToReplyToUrl = getURL(\n\t\t\t`${roomCoordinator.getRouteLink(room.t as string, { rid: room._id, name: room.name })}?msg=${messageToReplyTo._id}`,\n\t\t\t{ full: true },\n\t\t);\n\n\t\treturn toInternalQuoteMessageFormat({\n\t\t\tmessageToReplyToUrl,\n\t\t\tformattedMessage: externalFormattedMessage,\n\t\t\trawMessage,\n\t\t\thomeServerDomain,\n\t\t\tsenderExternalId: senderUser.getExternalId(),\n\t\t});\n\t}\n\n\tpublic async getMessageToEditWhenReplyAndQuote(\n\t\teditedMessage: IMessage,\n\t\tnewExternalFormattedMessage: string,\n\t\tnewRawMessageText: string,\n\t\thomeServerDomain: string,\n\t\tsenderUser: FederatedUser,\n\t): Promise<string> {\n\t\tconst quotedMessageUrl = editedMessage.attachments?.filter(isQuoteAttachment)?.[0]?.message_link;\n\n\t\treturn toInternalQuoteMessageFormat({\n\t\t\tmessageToReplyToUrl: quotedMessageUrl || '',\n\t\t\tformattedMessage: newExternalFormattedMessage,\n\t\t\trawMessage: newRawMessageText,\n\t\t\thomeServerDomain,\n\t\t\tsenderExternalId: senderUser.getExternalId(),\n\t\t});\n\t}\n\n\tpublic async editQuotedMessage(\n\t\tuser: FederatedUser,\n\t\tnewRawMessageText: string,\n\t\tnewExternalFormattedMessage: string,\n\t\teditedMessage: IMessage,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tconst updatedMessage = {\n\t\t\t...editedMessage,\n\t\t\tmsg: await this.getMessageToEditWhenReplyAndQuote(\n\t\t\t\teditedMessage,\n\t\t\t\tnewExternalFormattedMessage,\n\t\t\t\tnewRawMessageText,\n\t\t\t\thomeServerDomain,\n\t\t\t\tuser,\n\t\t\t),\n\t\t};\n\t\tawait updateMessage(updatedMessage, user.getInternalReference(), editedMessage);\n\t}\n\n\tpublic async sendFileMessage(\n\t\tuser: FederatedUser,\n\t\troom: FederatedRoom,\n\t\tfiles: IMessage['files'],\n\t\tattachments: IMessage['attachments'],\n\t\texternalEventId: string,\n\t): Promise<void> {\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\trid: room.getInternalId(),\n\t\t\t\tts: new Date(),\n\t\t\t\tfile: (files || [])[0],\n\t\t\t\tfiles,\n\t\t\t\tattachments,\n\t\t\t},\n\t\t\troom.getInternalReference(),\n\t\t);\n\t}\n\n\tpublic async sendQuoteFileMessage(\n\t\tuser: FederatedUser,\n\t\tfederatedRoom: FederatedRoom,\n\t\tfiles: IMessage['files'],\n\t\tattachments: IMessage['attachments'],\n\t\texternalEventId: string,\n\t\tmessageToReplyTo: IMessage,\n\t\thomeServerDomain: string,\n\t): Promise<void> {\n\t\tconst room = federatedRoom.getInternalReference();\n\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\trid: federatedRoom.getInternalId(),\n\t\t\t\tts: new Date(),\n\t\t\t\tfile: (files || [])[0],\n\t\t\t\tfiles,\n\t\t\t\tattachments,\n\t\t\t\tmsg: await this.getMessageToReplyToWhenQuoting(federatedRoom, messageToReplyTo, '', '', homeServerDomain, user),\n\t\t\t},\n\t\t\troom,\n\t\t);\n\t}\n\n\tpublic async sendThreadFileMessage(\n\t\tuser: FederatedUser,\n\t\troom: FederatedRoom,\n\t\tfiles: IMessage['files'],\n\t\tattachments: IMessage['attachments'],\n\t\texternalEventId: string,\n\t\tparentMessageId: string,\n\t): Promise<void> {\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\trid: room.getInternalId(),\n\t\t\t\tts: new Date(),\n\t\t\t\tfile: (files || [])[0],\n\t\t\t\tfiles,\n\t\t\t\tattachments,\n\t\t\t\ttmid: parentMessageId,\n\t\t\t},\n\t\t\troom.getInternalReference(),\n\t\t);\n\t}\n\n\tpublic async sendThreadQuoteFileMessage(\n\t\tuser: FederatedUser,\n\t\tfederatedRoom: FederatedRoom,\n\t\tfiles: IMessage['files'],\n\t\tattachments: IMessage['attachments'],\n\t\texternalEventId: string,\n\t\tmessageToReplyTo: IMessage,\n\t\thomeServerDomain: string,\n\t\tparentMessageId: string,\n\t): Promise<void> {\n\t\tconst room = federatedRoom.getInternalReference();\n\t\tconst messageToReplyToUrl = getURL(\n\t\t\t`${roomCoordinator.getRouteLink(room.t as string, { rid: room._id, name: room.name })}?msg=${messageToReplyTo._id}`,\n\t\t\t{ full: true },\n\t\t);\n\n\t\tawait sendMessage(\n\t\t\tuser.getInternalReference(),\n\t\t\t{\n\t\t\t\tfederation: { eventId: externalEventId },\n\t\t\t\trid: federatedRoom.getInternalId(),\n\t\t\t\tts: new Date(),\n\t\t\t\tfile: (files || [])[0],\n\t\t\t\tfiles,\n\t\t\t\tattachments,\n\t\t\t\tmsg: await toInternalQuoteMessageFormat({\n\t\t\t\t\tmessageToReplyToUrl,\n\t\t\t\t\trawMessage: '',\n\t\t\t\t\tsenderExternalId: user.getExternalId(),\n\t\t\t\t\tformattedMessage: '',\n\t\t\t\t\thomeServerDomain,\n\t\t\t\t}),\n\t\t\t\ttmid: parentMessageId,\n\t\t\t},\n\t\t\troom,\n\t\t);\n\t}\n\n\tpublic async deleteMessage(message: IMessage, user: FederatedUser): Promise<void> {\n\t\tawait deleteMessage(message, user.getInternalReference());\n\t}\n\n\tpublic async reactToMessage(user: FederatedUser, message: IMessage, reaction: string, externalEventId: string): Promise<void> {\n\t\ttry {\n\t\t\tawait executeSetReaction(user.getInternalId(), reaction, message._id);\n\t\t\tuser.getUsername() &&\n\t\t\t\t(await Messages.setFederationReactionEventId(\n\t\t\t\t\tuser.getUsername() as string,\n\t\t\t\t\tmessage._id,\n\t\t\t\t\treaction,\n\t\t\t\t\tescapeExternalFederationEventId(externalEventId),\n\t\t\t\t));\n\t\t} catch (error: any) {\n\t\t\tif (error?.message?.includes('Invalid emoji provided.')) {\n\t\t\t\tawait executeSetReaction(user.getInternalId(), DEFAULT_EMOJI_TO_REACT_WHEN_RECEIVED_EMOJI_DOES_NOT_EXIST, message._id);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async unreactToMessage(user: FederatedUser, message: IMessage, reaction: string, externalEventId: string): Promise<void> {\n\t\tawait executeSetReaction(user.getInternalId(), reaction, message._id);\n\t\tawait Messages.unsetFederationReactionEventId(escapeExternalFederationEventId(externalEventId), message._id, reaction);\n\t}\n\n\tpublic async findOneByFederationIdOnReactions(federationEventId: string, user: FederatedUser): Promise<IMessage | null | undefined> {\n\t\treturn (\n\t\t\t(user.getUsername() &&\n\t\t\t\tMessages.findOneByFederationIdAndUsernameOnReactions(\n\t\t\t\t\tescapeExternalFederationEventId(federationEventId),\n\t\t\t\t\tuser.getUsername() as string,\n\t\t\t\t)) ||\n\t\t\tundefined\n\t\t);\n\t}\n\n\tpublic async getMessageByFederationId(federationEventId: string): Promise<IMessage | null> {\n\t\treturn Messages.findOneByFederationId(federationEventId);\n\t}\n\n\tpublic async setExternalFederationEventOnMessage(messageId: string, federationEventId: string): Promise<void> {\n\t\treturn Messages.setFederationEventIdById(messageId, federationEventId);\n\t}\n\n\tpublic async unsetExternalFederationEventOnMessageReaction(externalEventId: string, message: IMessage, reaction: string): Promise<void> {\n\t\tawait Messages.unsetFederationReactionEventId(escapeExternalFederationEventId(externalEventId), message._id, reaction);\n\t}\n\n\tpublic async getMessageById(internalMessageId: string): Promise<IMessage | null> {\n\t\treturn Messages.findOneById(internalMessageId);\n\t}\n\n\tpublic async setExternalFederationEventOnMessageReaction(\n\t\tusername: string,\n\t\tmessage: IMessage,\n\t\treaction: string,\n\t\texternalEventId: string,\n\t): Promise<void> {\n\t\tawait Messages.setFederationReactionEventId(username, message._id, reaction, escapeExternalFederationEventId(externalEventId));\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0f46e4305528e376315e40d398f29e549f96ad65"}
