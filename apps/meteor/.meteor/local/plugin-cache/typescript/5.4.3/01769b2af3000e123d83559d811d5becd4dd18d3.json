{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/settings.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/settings.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/settings.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/settings.ts","sourceRoot":"","sources":["app/api/server/v1/settings.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n\tFacebookOAuthConfiguration,\n\tISetting,\n\tISettingColor,\n\tTwitterOAuthConfiguration,\n\tOAuthConfiguration,\n} from '@rocket.chat/core-typings';\nimport { isSettingAction, isSettingColor } from '@rocket.chat/core-typings';\nimport { LoginServiceConfiguration as LoginServiceConfigurationModel, Settings } from '@rocket.chat/models';\nimport { isSettingsUpdatePropDefault, isSettingsUpdatePropsActions, isSettingsUpdatePropsColor } from '@rocket.chat/rest-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { FindOptions } from 'mongodb';\nimport _ from 'underscore';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { disableCustomScripts } from '../../../lib/server/functions/disableCustomScripts';\nimport { notifyOnSettingChanged, notifyOnSettingChangedById } from '../../../lib/server/lib/notifyListener';\nimport { SettingsEvents, settings } from '../../../settings/server';\nimport { setValue } from '../../../settings/server/raw';\nimport { API } from '../api';\nimport type { ResultFor } from '../definition';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nasync function fetchSettings(\n\tquery: Parameters<typeof Settings.find>[0],\n\tsort: FindOptions<ISetting>['sort'],\n\toffset: FindOptions<ISetting>['skip'],\n\tcount: FindOptions<ISetting>['limit'],\n\tfields: FindOptions<ISetting>['projection'],\n): Promise<{ settings: ISetting[]; totalCount: number }> {\n\tconst { cursor, totalCount } = Settings.findPaginated(query || {}, {\n\t\tsort: sort || { _id: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t\tprojection: { _id: 1, value: 1, enterprise: 1, invalidValue: 1, modules: 1, ...fields },\n\t});\n\n\tconst [settings, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\tSettingsEvents.emit('fetch-settings', settings);\n\treturn { settings, totalCount: total };\n}\n\n// settings endpoints\nAPI.v1.addRoute(\n\t'settings.public',\n\t{ authRequired: false },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields, query } = await this.parseJsonQuery();\n\n\t\t\tconst ourQuery = {\n\t\t\t\t...query,\n\t\t\t\thidden: { $ne: true },\n\t\t\t\tpublic: true,\n\t\t\t};\n\n\t\t\tconst { settings, totalCount: total } = await fetchSettings(ourQuery, sort, offset, count, fields);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tsettings,\n\t\t\t\tcount: settings.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings.oauth',\n\t{ authRequired: false },\n\t{\n\t\tasync get() {\n\t\t\tconst oAuthServicesEnabled = await LoginServiceConfigurationModel.find({}, { projection: { secret: 0 } }).toArray();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tservices: oAuthServicesEnabled.map((service) => {\n\t\t\t\t\tif (!service) {\n\t\t\t\t\t\treturn service;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((service as OAuthConfiguration).custom || (service.service && ['saml', 'cas', 'wordpress'].includes(service.service))) {\n\t\t\t\t\t\treturn { ...service };\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t_id: service._id,\n\t\t\t\t\t\tname: service.service,\n\t\t\t\t\t\tclientId:\n\t\t\t\t\t\t\t(service as FacebookOAuthConfiguration).appId ||\n\t\t\t\t\t\t\t(service as OAuthConfiguration).clientId ||\n\t\t\t\t\t\t\t(service as TwitterOAuthConfiguration).consumerKey,\n\t\t\t\t\t\tbuttonLabelText: service.buttonLabelText || '',\n\t\t\t\t\t\tbuttonColor: service.buttonColor || '',\n\t\t\t\t\t\tbuttonLabelColor: service.buttonLabelColor || '',\n\t\t\t\t\t\tcustom: false,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings.addCustomOAuth',\n\t{ authRequired: true, twoFactorRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tif (!this.bodyParams.name?.trim()) {\n\t\t\t\tthrow new Meteor.Error('error-name-param-not-provided', 'The parameter \"name\" is required');\n\t\t\t}\n\n\t\t\tawait Meteor.callAsync('addOAuthService', this.bodyParams.name, this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields, query } = await this.parseJsonQuery();\n\n\t\t\tlet ourQuery: Parameters<typeof Settings.find>[0] = {\n\t\t\t\thidden: { $ne: true },\n\t\t\t};\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'view-privileged-setting'))) {\n\t\t\t\tourQuery.public = true;\n\t\t\t}\n\n\t\t\tourQuery = Object.assign({}, query, ourQuery);\n\n\t\t\tconst { settings, totalCount: total } = await fetchSettings(ourQuery, sort, offset, count, fields);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tsettings,\n\t\t\t\tcount: settings.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings/:_id',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-privileged-setting'], operation: 'hasAll' },\n\t\t\tPOST: { permissions: ['edit-privileged-setting'], operation: 'hasAll' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst setting = await Settings.findOneNotHiddenById(this.urlParams._id);\n\t\t\tif (!setting) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\t\t\treturn API.v1.success(_.pick(setting, '_id', 'value'));\n\t\t},\n\t\tpost: {\n\t\t\ttwoFactorRequired: true,\n\t\t\tasync action(): Promise<ResultFor<'POST', '/v1/settings/:_id'>> {\n\t\t\t\tif (typeof this.urlParams._id !== 'string') {\n\t\t\t\t\tthrow new Meteor.Error('error-id-param-not-provided', 'The parameter \"id\" is required');\n\t\t\t\t}\n\n\t\t\t\t// Disable custom scripts in cloud trials to prevent phishing campaigns\n\t\t\t\tif (disableCustomScripts() && /^Custom_Script_/.test(this.urlParams._id)) {\n\t\t\t\t\treturn API.v1.unauthorized();\n\t\t\t\t}\n\n\t\t\t\t// allow special handling of particular setting types\n\t\t\t\tconst setting = await Settings.findOneNotHiddenById(this.urlParams._id);\n\n\t\t\t\tif (!setting) {\n\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingAction(setting) && isSettingsUpdatePropsActions(this.bodyParams) && this.bodyParams.execute) {\n\t\t\t\t\t// execute the configured method\n\t\t\t\t\tawait Meteor.callAsync(setting.value);\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingColor(setting) && isSettingsUpdatePropsColor(this.bodyParams)) {\n\t\t\t\t\tconst updateOptionsPromise = Settings.updateOptionsById<ISettingColor>(this.urlParams._id, { editor: this.bodyParams.editor });\n\t\t\t\t\tconst updateValuePromise = Settings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value);\n\n\t\t\t\t\tconst [updateOptionsResult, updateValueResult] = await Promise.all([updateOptionsPromise, updateValuePromise]);\n\n\t\t\t\t\tif (updateOptionsResult.modifiedCount || updateValueResult.modifiedCount) {\n\t\t\t\t\t\tawait notifyOnSettingChangedById(this.urlParams._id);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingsUpdatePropDefault(this.bodyParams)) {\n\t\t\t\t\tconst { matchedCount } = await Settings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value);\n\t\t\t\t\tif (!matchedCount) {\n\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst s = await Settings.findOneNotHiddenById(this.urlParams._id);\n\t\t\t\t\tif (!s) {\n\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t}\n\n\t\t\t\t\tsettings.set(s);\n\t\t\t\t\tsetValue(this.urlParams._id, this.bodyParams.value);\n\n\t\t\t\t\tawait notifyOnSettingChanged(s);\n\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\treturn API.v1.failure();\n\t\t\t},\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'service.configurations',\n\t{ authRequired: false },\n\t{\n\t\tasync get() {\n\t\t\treturn API.v1.success({\n\t\t\t\tconfigurations: await LoginServiceConfigurationModel.find({}, { projection: { secret: 0 } }).toArray(),\n\t\t\t});\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/settings.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/settings.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/settings.ts","sourceRoot":"","sources":["app/api/server/v1/settings.ts"],"names":[],"mappings":"AAOA,OAAO,EAAE,eAAe,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAC5E,OAAO,EAAE,yBAAyB,IAAI,8BAA8B,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC5G,OAAO,EAAE,2BAA2B,EAAE,4BAA4B,EAAE,0BAA0B,EAAE,MAAM,2BAA2B,CAAC;AAClI,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,CAAC,MAAM,YAAY,CAAC;AAE3B,OAAO,EAAE,kBAAkB,EAAE,MAAM,uDAAuD,CAAC;AAC3F,OAAO,EAAE,oBAAoB,EAAE,MAAM,oDAAoD,CAAC;AAC1F,OAAO,EAAE,sBAAsB,EAAE,0BAA0B,EAAE,MAAM,wCAAwC,CAAC;AAC5G,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAE7B,OAAO,EAAE,kBAAkB,EAAE,MAAM,+BAA+B,CAAC;AAEnE,KAAK,UAAU,aAAa,CAC3B,KAA0C,EAC1C,IAAmC,EACnC,MAAqC,EACrC,KAAqC,EACrC,MAA2C;IAE3C,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE,EAAE;QAClE,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE;QACxB,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,KAAK;QACZ,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,MAAM,EAAE;KACvF,CAAC,CAAC;IAEH,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;IAE5E,cAAc,CAAC,IAAI,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;IAChD,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;AACxC,CAAC;AAED,qBAAqB;AACrB,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,iBAAiB,EACjB,EAAE,YAAY,EAAE,KAAK,EAAE,EACvB;IACC,KAAK,CAAC,GAAG;QACR,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5D,MAAM,QAAQ,GAAG;YAChB,GAAG,KAAK;YACR,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;YACrB,MAAM,EAAE,IAAI;SACZ,CAAC;QAEF,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,MAAM,aAAa,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAEnG,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,QAAQ;YACR,KAAK,EAAE,QAAQ,CAAC,MAAM;YACtB,MAAM;YACN,KAAK;SACL,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,gBAAgB,EAChB,EAAE,YAAY,EAAE,KAAK,EAAE,EACvB;IACC,KAAK,CAAC,GAAG;QACR,MAAM,oBAAoB,GAAG,MAAM,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QAEpH,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,QAAQ,EAAE,oBAAoB,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC9C,IAAI,CAAC,OAAO,EAAE,CAAC;oBACd,OAAO,OAAO,CAAC;gBAChB,CAAC;gBAED,IAAK,OAA8B,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;oBAC3H,OAAO,EAAE,GAAG,OAAO,EAAE,CAAC;gBACvB,CAAC;gBAED,OAAO;oBACN,GAAG,EAAE,OAAO,CAAC,GAAG;oBAChB,IAAI,EAAE,OAAO,CAAC,OAAO;oBACrB,QAAQ,EACN,OAAsC,CAAC,KAAK;wBAC5C,OAA8B,CAAC,QAAQ;wBACvC,OAAqC,CAAC,WAAW;oBACnD,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,EAAE;oBAC9C,WAAW,EAAE,OAAO,CAAC,WAAW,IAAI,EAAE;oBACtC,gBAAgB,EAAE,OAAO,CAAC,gBAAgB,IAAI,EAAE;oBAChD,MAAM,EAAE,KAAK;iBACb,CAAC;YACH,CAAC,CAAC;SACF,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,yBAAyB,EACzB,EAAE,YAAY,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAC/C;IACC,KAAK,CAAC,IAAI;QACT,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;YACnC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,+BAA+B,EAAE,kCAAkC,CAAC,CAAC;QAC7F,CAAC;QAED,MAAM,MAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE7E,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,UAAU,EACV,EAAE,YAAY,EAAE,IAAI,EAAE,EACtB;IACC,KAAK,CAAC,GAAG;QACR,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5D,IAAI,QAAQ,GAAwC;YACnD,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;SACrB,CAAC;QAEF,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,yBAAyB,CAAC,CAAC,EAAE,CAAC;YACzE,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;QACxB,CAAC;QAED,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAE9C,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,GAAG,MAAM,aAAa,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAEnG,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,QAAQ;YACR,KAAK,EAAE,QAAQ,CAAC,MAAM;YACtB,MAAM;YACN,KAAK;SACL,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,eAAe,EACf;IACC,YAAY,EAAE,IAAI;IAClB,mBAAmB,EAAE;QACpB,GAAG,EAAE,EAAE,WAAW,EAAE,CAAC,yBAAyB,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE;QACtE,IAAI,EAAE,EAAE,WAAW,EAAE,CAAC,yBAAyB,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE;KACvE;CACD,EACD;IACC,KAAK,CAAC,GAAG;QACR,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACxE,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QACzB,CAAC;QACD,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;IACxD,CAAC;IACD,IAAI,EAAE;QACL,iBAAiB,EAAE,IAAI;QACvB,KAAK,CAAC,MAAM;YACX,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,QAAQ,EAAE,CAAC;gBAC5C,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,gCAAgC,CAAC,CAAC;YACzF,CAAC;YAED,uEAAuE;YACvE,IAAI,oBAAoB,EAAE,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC1E,OAAO,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;YAC9B,CAAC;YAED,qDAAqD;YACrD,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAExE,IAAI,CAAC,OAAO,EAAE,CAAC;gBACd,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;YACzB,CAAC;YAED,IAAI,eAAe,CAAC,OAAO,CAAC,IAAI,4BAA4B,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;gBAC1G,gCAAgC;gBAChC,MAAM,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACtC,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;YACzB,CAAC;YAED,IAAI,cAAc,CAAC,OAAO,CAAC,IAAI,0BAA0B,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;gBAC5E,MAAM,oBAAoB,GAAG,QAAQ,CAAC,iBAAiB,CAAgB,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;gBAC/H,MAAM,kBAAkB,GAAG,QAAQ,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAExG,MAAM,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,CAAC,CAAC;gBAE/G,IAAI,mBAAmB,CAAC,aAAa,IAAI,iBAAiB,CAAC,aAAa,EAAE,CAAC;oBAC1E,MAAM,0BAA0B,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBACtD,CAAC;gBAED,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;YACzB,CAAC;YAED,IAAI,2BAA2B,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;gBAClD,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,QAAQ,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC5G,IAAI,CAAC,YAAY,EAAE,CAAC;oBACnB,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;gBACzB,CAAC;gBAED,MAAM,CAAC,GAAG,MAAM,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAClE,IAAI,CAAC,CAAC,EAAE,CAAC;oBACR,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;gBACzB,CAAC;gBAED,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAChB,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAEpD,MAAM,sBAAsB,CAAC,CAAC,CAAC,CAAC;gBAEhC,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;YACzB,CAAC;YAED,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;QACzB,CAAC;KACD;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,wBAAwB,EACxB,EAAE,YAAY,EAAE,KAAK,EAAE,EACvB;IACC,KAAK,CAAC,GAAG;QACR,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC;YACrB,cAAc,EAAE,MAAM,8BAA8B,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE;SACtG,CAAC,CAAC;IACJ,CAAC;CACD,CACD,CAAC","sourcesContent":["import type {\n\tFacebookOAuthConfiguration,\n\tISetting,\n\tISettingColor,\n\tTwitterOAuthConfiguration,\n\tOAuthConfiguration,\n} from '@rocket.chat/core-typings';\nimport { isSettingAction, isSettingColor } from '@rocket.chat/core-typings';\nimport { LoginServiceConfiguration as LoginServiceConfigurationModel, Settings } from '@rocket.chat/models';\nimport { isSettingsUpdatePropDefault, isSettingsUpdatePropsActions, isSettingsUpdatePropsColor } from '@rocket.chat/rest-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { FindOptions } from 'mongodb';\nimport _ from 'underscore';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { disableCustomScripts } from '../../../lib/server/functions/disableCustomScripts';\nimport { notifyOnSettingChanged, notifyOnSettingChangedById } from '../../../lib/server/lib/notifyListener';\nimport { SettingsEvents, settings } from '../../../settings/server';\nimport { setValue } from '../../../settings/server/raw';\nimport { API } from '../api';\nimport type { ResultFor } from '../definition';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nasync function fetchSettings(\n\tquery: Parameters<typeof Settings.find>[0],\n\tsort: FindOptions<ISetting>['sort'],\n\toffset: FindOptions<ISetting>['skip'],\n\tcount: FindOptions<ISetting>['limit'],\n\tfields: FindOptions<ISetting>['projection'],\n): Promise<{ settings: ISetting[]; totalCount: number }> {\n\tconst { cursor, totalCount } = Settings.findPaginated(query || {}, {\n\t\tsort: sort || { _id: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t\tprojection: { _id: 1, value: 1, enterprise: 1, invalidValue: 1, modules: 1, ...fields },\n\t});\n\n\tconst [settings, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\tSettingsEvents.emit('fetch-settings', settings);\n\treturn { settings, totalCount: total };\n}\n\n// settings endpoints\nAPI.v1.addRoute(\n\t'settings.public',\n\t{ authRequired: false },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields, query } = await this.parseJsonQuery();\n\n\t\t\tconst ourQuery = {\n\t\t\t\t...query,\n\t\t\t\thidden: { $ne: true },\n\t\t\t\tpublic: true,\n\t\t\t};\n\n\t\t\tconst { settings, totalCount: total } = await fetchSettings(ourQuery, sort, offset, count, fields);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tsettings,\n\t\t\t\tcount: settings.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings.oauth',\n\t{ authRequired: false },\n\t{\n\t\tasync get() {\n\t\t\tconst oAuthServicesEnabled = await LoginServiceConfigurationModel.find({}, { projection: { secret: 0 } }).toArray();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tservices: oAuthServicesEnabled.map((service) => {\n\t\t\t\t\tif (!service) {\n\t\t\t\t\t\treturn service;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((service as OAuthConfiguration).custom || (service.service && ['saml', 'cas', 'wordpress'].includes(service.service))) {\n\t\t\t\t\t\treturn { ...service };\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t_id: service._id,\n\t\t\t\t\t\tname: service.service,\n\t\t\t\t\t\tclientId:\n\t\t\t\t\t\t\t(service as FacebookOAuthConfiguration).appId ||\n\t\t\t\t\t\t\t(service as OAuthConfiguration).clientId ||\n\t\t\t\t\t\t\t(service as TwitterOAuthConfiguration).consumerKey,\n\t\t\t\t\t\tbuttonLabelText: service.buttonLabelText || '',\n\t\t\t\t\t\tbuttonColor: service.buttonColor || '',\n\t\t\t\t\t\tbuttonLabelColor: service.buttonLabelColor || '',\n\t\t\t\t\t\tcustom: false,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings.addCustomOAuth',\n\t{ authRequired: true, twoFactorRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tif (!this.bodyParams.name?.trim()) {\n\t\t\t\tthrow new Meteor.Error('error-name-param-not-provided', 'The parameter \"name\" is required');\n\t\t\t}\n\n\t\t\tawait Meteor.callAsync('addOAuthService', this.bodyParams.name, this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields, query } = await this.parseJsonQuery();\n\n\t\t\tlet ourQuery: Parameters<typeof Settings.find>[0] = {\n\t\t\t\thidden: { $ne: true },\n\t\t\t};\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'view-privileged-setting'))) {\n\t\t\t\tourQuery.public = true;\n\t\t\t}\n\n\t\t\tourQuery = Object.assign({}, query, ourQuery);\n\n\t\t\tconst { settings, totalCount: total } = await fetchSettings(ourQuery, sort, offset, count, fields);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tsettings,\n\t\t\t\tcount: settings.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings/:_id',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-privileged-setting'], operation: 'hasAll' },\n\t\t\tPOST: { permissions: ['edit-privileged-setting'], operation: 'hasAll' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst setting = await Settings.findOneNotHiddenById(this.urlParams._id);\n\t\t\tif (!setting) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\t\t\treturn API.v1.success(_.pick(setting, '_id', 'value'));\n\t\t},\n\t\tpost: {\n\t\t\ttwoFactorRequired: true,\n\t\t\tasync action(): Promise<ResultFor<'POST', '/v1/settings/:_id'>> {\n\t\t\t\tif (typeof this.urlParams._id !== 'string') {\n\t\t\t\t\tthrow new Meteor.Error('error-id-param-not-provided', 'The parameter \"id\" is required');\n\t\t\t\t}\n\n\t\t\t\t// Disable custom scripts in cloud trials to prevent phishing campaigns\n\t\t\t\tif (disableCustomScripts() && /^Custom_Script_/.test(this.urlParams._id)) {\n\t\t\t\t\treturn API.v1.unauthorized();\n\t\t\t\t}\n\n\t\t\t\t// allow special handling of particular setting types\n\t\t\t\tconst setting = await Settings.findOneNotHiddenById(this.urlParams._id);\n\n\t\t\t\tif (!setting) {\n\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingAction(setting) && isSettingsUpdatePropsActions(this.bodyParams) && this.bodyParams.execute) {\n\t\t\t\t\t// execute the configured method\n\t\t\t\t\tawait Meteor.callAsync(setting.value);\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingColor(setting) && isSettingsUpdatePropsColor(this.bodyParams)) {\n\t\t\t\t\tconst updateOptionsPromise = Settings.updateOptionsById<ISettingColor>(this.urlParams._id, { editor: this.bodyParams.editor });\n\t\t\t\t\tconst updateValuePromise = Settings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value);\n\n\t\t\t\t\tconst [updateOptionsResult, updateValueResult] = await Promise.all([updateOptionsPromise, updateValuePromise]);\n\n\t\t\t\t\tif (updateOptionsResult.modifiedCount || updateValueResult.modifiedCount) {\n\t\t\t\t\t\tawait notifyOnSettingChangedById(this.urlParams._id);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingsUpdatePropDefault(this.bodyParams)) {\n\t\t\t\t\tconst { matchedCount } = await Settings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value);\n\t\t\t\t\tif (!matchedCount) {\n\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst s = await Settings.findOneNotHiddenById(this.urlParams._id);\n\t\t\t\t\tif (!s) {\n\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t}\n\n\t\t\t\t\tsettings.set(s);\n\t\t\t\t\tsetValue(this.urlParams._id, this.bodyParams.value);\n\n\t\t\t\t\tawait notifyOnSettingChanged(s);\n\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\treturn API.v1.failure();\n\t\t\t},\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'service.configurations',\n\t{ authRequired: false },\n\t{\n\t\tasync get() {\n\t\t\treturn API.v1.success({\n\t\t\t\tconfigurations: await LoginServiceConfigurationModel.find({}, { projection: { secret: 0 } }).toArray(),\n\t\t\t});\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let isSettingAction, isSettingColor;\n    module.link(\"@rocket.chat/core-typings\", {\n      isSettingAction(v) {\n        isSettingAction = v;\n      },\n      isSettingColor(v) {\n        isSettingColor = v;\n      }\n    }, 0);\n    let LoginServiceConfigurationModel, Settings;\n    module.link(\"@rocket.chat/models\", {\n      LoginServiceConfiguration(v) {\n        LoginServiceConfigurationModel = v;\n      },\n      Settings(v) {\n        Settings = v;\n      }\n    }, 1);\n    let isSettingsUpdatePropDefault, isSettingsUpdatePropsActions, isSettingsUpdatePropsColor;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isSettingsUpdatePropDefault(v) {\n        isSettingsUpdatePropDefault = v;\n      },\n      isSettingsUpdatePropsActions(v) {\n        isSettingsUpdatePropsActions = v;\n      },\n      isSettingsUpdatePropsColor(v) {\n        isSettingsUpdatePropsColor = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let _;\n    module.link(\"underscore\", {\n      default(v) {\n        _ = v;\n      }\n    }, 4);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 5);\n    let disableCustomScripts;\n    module.link(\"../../../lib/server/functions/disableCustomScripts\", {\n      disableCustomScripts(v) {\n        disableCustomScripts = v;\n      }\n    }, 6);\n    let notifyOnSettingChanged, notifyOnSettingChangedById;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnSettingChanged(v) {\n        notifyOnSettingChanged = v;\n      },\n      notifyOnSettingChangedById(v) {\n        notifyOnSettingChangedById = v;\n      }\n    }, 7);\n    let SettingsEvents, settings;\n    module.link(\"../../../settings/server\", {\n      SettingsEvents(v) {\n        SettingsEvents = v;\n      },\n      settings(v) {\n        settings = v;\n      }\n    }, 8);\n    let setValue;\n    module.link(\"../../../settings/server/raw\", {\n      setValue(v) {\n        setValue = v;\n      }\n    }, 9);\n    let API;\n    module.link(\"../api\", {\n      API(v) {\n        API = v;\n      }\n    }, 10);\n    let getPaginationItems;\n    module.link(\"../helpers/getPaginationItems\", {\n      getPaginationItems(v) {\n        getPaginationItems = v;\n      }\n    }, 11);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function fetchSettings(query, sort, offset, count, fields) {\n      const {\n        cursor,\n        totalCount\n      } = Settings.findPaginated(query || {}, {\n        sort: sort || {\n          _id: 1\n        },\n        skip: offset,\n        limit: count,\n        projection: _objectSpread({\n          _id: 1,\n          value: 1,\n          enterprise: 1,\n          invalidValue: 1,\n          modules: 1\n        }, fields)\n      });\n      const [settings, total] = await Promise.all([cursor.toArray(), totalCount]);\n      SettingsEvents.emit('fetch-settings', settings);\n      return {\n        settings,\n        totalCount: total\n      };\n    }\n    // settings endpoints\n    API.v1.addRoute('settings.public', {\n      authRequired: false\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort,\n          fields,\n          query\n        } = await this.parseJsonQuery();\n        const ourQuery = _objectSpread(_objectSpread({}, query), {}, {\n          hidden: {\n            $ne: true\n          },\n          public: true\n        });\n        const {\n          settings,\n          totalCount: total\n        } = await fetchSettings(ourQuery, sort, offset, count, fields);\n        return API.v1.success({\n          settings,\n          count: settings.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('settings.oauth', {\n      authRequired: false\n    }, {\n      async get() {\n        const oAuthServicesEnabled = await LoginServiceConfigurationModel.find({}, {\n          projection: {\n            secret: 0\n          }\n        }).toArray();\n        return API.v1.success({\n          services: oAuthServicesEnabled.map(service => {\n            if (!service) {\n              return service;\n            }\n            if (service.custom || service.service && ['saml', 'cas', 'wordpress'].includes(service.service)) {\n              return _objectSpread({}, service);\n            }\n            return {\n              _id: service._id,\n              name: service.service,\n              clientId: service.appId || service.clientId || service.consumerKey,\n              buttonLabelText: service.buttonLabelText || '',\n              buttonColor: service.buttonColor || '',\n              buttonLabelColor: service.buttonLabelColor || '',\n              custom: false\n            };\n          })\n        });\n      }\n    });\n    API.v1.addRoute('settings.addCustomOAuth', {\n      authRequired: true,\n      twoFactorRequired: true\n    }, {\n      async post() {\n        var _this$bodyParams$name;\n        if (!((_this$bodyParams$name = this.bodyParams.name) !== null && _this$bodyParams$name !== void 0 && _this$bodyParams$name.trim())) {\n          throw new Meteor.Error('error-name-param-not-provided', 'The parameter \"name\" is required');\n        }\n        await Meteor.callAsync('addOAuthService', this.bodyParams.name, this.userId);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('settings', {\n      authRequired: true\n    }, {\n      async get() {\n        const {\n          offset,\n          count\n        } = await getPaginationItems(this.queryParams);\n        const {\n          sort,\n          fields,\n          query\n        } = await this.parseJsonQuery();\n        let ourQuery = {\n          hidden: {\n            $ne: true\n          }\n        };\n        if (!(await hasPermissionAsync(this.userId, 'view-privileged-setting'))) {\n          ourQuery.public = true;\n        }\n        ourQuery = Object.assign({}, query, ourQuery);\n        const {\n          settings,\n          totalCount: total\n        } = await fetchSettings(ourQuery, sort, offset, count, fields);\n        return API.v1.success({\n          settings,\n          count: settings.length,\n          offset,\n          total\n        });\n      }\n    });\n    API.v1.addRoute('settings/:_id', {\n      authRequired: true,\n      permissionsRequired: {\n        GET: {\n          permissions: ['view-privileged-setting'],\n          operation: 'hasAll'\n        },\n        POST: {\n          permissions: ['edit-privileged-setting'],\n          operation: 'hasAll'\n        }\n      }\n    }, {\n      async get() {\n        const setting = await Settings.findOneNotHiddenById(this.urlParams._id);\n        if (!setting) {\n          return API.v1.failure();\n        }\n        return API.v1.success(_.pick(setting, '_id', 'value'));\n      },\n      post: {\n        twoFactorRequired: true,\n        async action() {\n          if (typeof this.urlParams._id !== 'string') {\n            throw new Meteor.Error('error-id-param-not-provided', 'The parameter \"id\" is required');\n          }\n          // Disable custom scripts in cloud trials to prevent phishing campaigns\n          if (disableCustomScripts() && /^Custom_Script_/.test(this.urlParams._id)) {\n            return API.v1.unauthorized();\n          }\n          // allow special handling of particular setting types\n          const setting = await Settings.findOneNotHiddenById(this.urlParams._id);\n          if (!setting) {\n            return API.v1.failure();\n          }\n          if (isSettingAction(setting) && isSettingsUpdatePropsActions(this.bodyParams) && this.bodyParams.execute) {\n            // execute the configured method\n            await Meteor.callAsync(setting.value);\n            return API.v1.success();\n          }\n          if (isSettingColor(setting) && isSettingsUpdatePropsColor(this.bodyParams)) {\n            const updateOptionsPromise = Settings.updateOptionsById(this.urlParams._id, {\n              editor: this.bodyParams.editor\n            });\n            const updateValuePromise = Settings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value);\n            const [updateOptionsResult, updateValueResult] = await Promise.all([updateOptionsPromise, updateValuePromise]);\n            if (updateOptionsResult.modifiedCount || updateValueResult.modifiedCount) {\n              await notifyOnSettingChangedById(this.urlParams._id);\n            }\n            return API.v1.success();\n          }\n          if (isSettingsUpdatePropDefault(this.bodyParams)) {\n            const {\n              matchedCount\n            } = await Settings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value);\n            if (!matchedCount) {\n              return API.v1.failure();\n            }\n            const s = await Settings.findOneNotHiddenById(this.urlParams._id);\n            if (!s) {\n              return API.v1.failure();\n            }\n            settings.set(s);\n            setValue(this.urlParams._id, this.bodyParams.value);\n            await notifyOnSettingChanged(s);\n            return API.v1.success();\n          }\n          return API.v1.failure();\n        }\n      }\n    });\n    API.v1.addRoute('service.configurations', {\n      authRequired: false\n    }, {\n      async get() {\n        return API.v1.success({\n          configurations: await LoginServiceConfigurationModel.find({}, {\n            projection: {\n              secret: 0\n            }\n          }).toArray()\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","isSettingAction","isSettingColor","LoginServiceConfigurationModel","Settings","LoginServiceConfiguration","isSettingsUpdatePropDefault","isSettingsUpdatePropsActions","isSettingsUpdatePropsColor","Meteor","_","hasPermissionAsync","disableCustomScripts","notifyOnSettingChanged","notifyOnSettingChangedById","SettingsEvents","settings","setValue","API","getPaginationItems","__reifyWaitForDeps__","fetchSettings","query","sort","offset","count","fields","cursor","totalCount","findPaginated","_id","skip","limit","projection","value","enterprise","invalidValue","modules","total","Promise","all","toArray","emit","v1","addRoute","authRequired","get","queryParams","parseJsonQuery","ourQuery","hidden","$ne","public","success","length","oAuthServicesEnabled","find","secret","services","map","service","custom","includes","name","clientId","appId","consumerKey","buttonLabelText","buttonColor","buttonLabelColor","twoFactorRequired","post","_this$bodyParams$name","bodyParams","trim","Error","callAsync","userId","Object","assign","permissionsRequired","GET","permissions","operation","POST","setting","findOneNotHiddenById","urlParams","failure","pick","action","test","unauthorized","execute","updateOptionsPromise","updateOptionsById","editor","updateValuePromise","updateValueNotHiddenById","updateOptionsResult","updateValueResult","modifiedCount","matchedCount","s","set","configurations","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/v1/settings.ts"],"sourcesContent":["import type {\n\tFacebookOAuthConfiguration,\n\tISetting,\n\tISettingColor,\n\tTwitterOAuthConfiguration,\n\tOAuthConfiguration,\n} from '@rocket.chat/core-typings';\nimport { isSettingAction, isSettingColor } from '@rocket.chat/core-typings';\nimport { LoginServiceConfiguration as LoginServiceConfigurationModel, Settings } from '@rocket.chat/models';\nimport { isSettingsUpdatePropDefault, isSettingsUpdatePropsActions, isSettingsUpdatePropsColor } from '@rocket.chat/rest-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { FindOptions } from 'mongodb';\nimport _ from 'underscore';\n\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { disableCustomScripts } from '../../../lib/server/functions/disableCustomScripts';\nimport { notifyOnSettingChanged, notifyOnSettingChangedById } from '../../../lib/server/lib/notifyListener';\nimport { SettingsEvents, settings } from '../../../settings/server';\nimport { setValue } from '../../../settings/server/raw';\nimport { API } from '../api';\nimport type { ResultFor } from '../definition';\nimport { getPaginationItems } from '../helpers/getPaginationItems';\n\nasync function fetchSettings(\n\tquery: Parameters<typeof Settings.find>[0],\n\tsort: FindOptions<ISetting>['sort'],\n\toffset: FindOptions<ISetting>['skip'],\n\tcount: FindOptions<ISetting>['limit'],\n\tfields: FindOptions<ISetting>['projection'],\n): Promise<{ settings: ISetting[]; totalCount: number }> {\n\tconst { cursor, totalCount } = Settings.findPaginated(query || {}, {\n\t\tsort: sort || { _id: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t\tprojection: { _id: 1, value: 1, enterprise: 1, invalidValue: 1, modules: 1, ...fields },\n\t});\n\n\tconst [settings, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\tSettingsEvents.emit('fetch-settings', settings);\n\treturn { settings, totalCount: total };\n}\n\n// settings endpoints\nAPI.v1.addRoute(\n\t'settings.public',\n\t{ authRequired: false },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields, query } = await this.parseJsonQuery();\n\n\t\t\tconst ourQuery = {\n\t\t\t\t...query,\n\t\t\t\thidden: { $ne: true },\n\t\t\t\tpublic: true,\n\t\t\t};\n\n\t\t\tconst { settings, totalCount: total } = await fetchSettings(ourQuery, sort, offset, count, fields);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tsettings,\n\t\t\t\tcount: settings.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings.oauth',\n\t{ authRequired: false },\n\t{\n\t\tasync get() {\n\t\t\tconst oAuthServicesEnabled = await LoginServiceConfigurationModel.find({}, { projection: { secret: 0 } }).toArray();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tservices: oAuthServicesEnabled.map((service) => {\n\t\t\t\t\tif (!service) {\n\t\t\t\t\t\treturn service;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((service as OAuthConfiguration).custom || (service.service && ['saml', 'cas', 'wordpress'].includes(service.service))) {\n\t\t\t\t\t\treturn { ...service };\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t_id: service._id,\n\t\t\t\t\t\tname: service.service,\n\t\t\t\t\t\tclientId:\n\t\t\t\t\t\t\t(service as FacebookOAuthConfiguration).appId ||\n\t\t\t\t\t\t\t(service as OAuthConfiguration).clientId ||\n\t\t\t\t\t\t\t(service as TwitterOAuthConfiguration).consumerKey,\n\t\t\t\t\t\tbuttonLabelText: service.buttonLabelText || '',\n\t\t\t\t\t\tbuttonColor: service.buttonColor || '',\n\t\t\t\t\t\tbuttonLabelColor: service.buttonLabelColor || '',\n\t\t\t\t\t\tcustom: false,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings.addCustomOAuth',\n\t{ authRequired: true, twoFactorRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tif (!this.bodyParams.name?.trim()) {\n\t\t\t\tthrow new Meteor.Error('error-name-param-not-provided', 'The parameter \"name\" is required');\n\t\t\t}\n\n\t\t\tawait Meteor.callAsync('addOAuthService', this.bodyParams.name, this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst { offset, count } = await getPaginationItems(this.queryParams);\n\t\t\tconst { sort, fields, query } = await this.parseJsonQuery();\n\n\t\t\tlet ourQuery: Parameters<typeof Settings.find>[0] = {\n\t\t\t\thidden: { $ne: true },\n\t\t\t};\n\n\t\t\tif (!(await hasPermissionAsync(this.userId, 'view-privileged-setting'))) {\n\t\t\t\tourQuery.public = true;\n\t\t\t}\n\n\t\t\tourQuery = Object.assign({}, query, ourQuery);\n\n\t\t\tconst { settings, totalCount: total } = await fetchSettings(ourQuery, sort, offset, count, fields);\n\n\t\t\treturn API.v1.success({\n\t\t\t\tsettings,\n\t\t\t\tcount: settings.length,\n\t\t\t\toffset,\n\t\t\t\ttotal,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'settings/:_id',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: {\n\t\t\tGET: { permissions: ['view-privileged-setting'], operation: 'hasAll' },\n\t\t\tPOST: { permissions: ['edit-privileged-setting'], operation: 'hasAll' },\n\t\t},\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst setting = await Settings.findOneNotHiddenById(this.urlParams._id);\n\t\t\tif (!setting) {\n\t\t\t\treturn API.v1.failure();\n\t\t\t}\n\t\t\treturn API.v1.success(_.pick(setting, '_id', 'value'));\n\t\t},\n\t\tpost: {\n\t\t\ttwoFactorRequired: true,\n\t\t\tasync action(): Promise<ResultFor<'POST', '/v1/settings/:_id'>> {\n\t\t\t\tif (typeof this.urlParams._id !== 'string') {\n\t\t\t\t\tthrow new Meteor.Error('error-id-param-not-provided', 'The parameter \"id\" is required');\n\t\t\t\t}\n\n\t\t\t\t// Disable custom scripts in cloud trials to prevent phishing campaigns\n\t\t\t\tif (disableCustomScripts() && /^Custom_Script_/.test(this.urlParams._id)) {\n\t\t\t\t\treturn API.v1.unauthorized();\n\t\t\t\t}\n\n\t\t\t\t// allow special handling of particular setting types\n\t\t\t\tconst setting = await Settings.findOneNotHiddenById(this.urlParams._id);\n\n\t\t\t\tif (!setting) {\n\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingAction(setting) && isSettingsUpdatePropsActions(this.bodyParams) && this.bodyParams.execute) {\n\t\t\t\t\t// execute the configured method\n\t\t\t\t\tawait Meteor.callAsync(setting.value);\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingColor(setting) && isSettingsUpdatePropsColor(this.bodyParams)) {\n\t\t\t\t\tconst updateOptionsPromise = Settings.updateOptionsById<ISettingColor>(this.urlParams._id, { editor: this.bodyParams.editor });\n\t\t\t\t\tconst updateValuePromise = Settings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value);\n\n\t\t\t\t\tconst [updateOptionsResult, updateValueResult] = await Promise.all([updateOptionsPromise, updateValuePromise]);\n\n\t\t\t\t\tif (updateOptionsResult.modifiedCount || updateValueResult.modifiedCount) {\n\t\t\t\t\t\tawait notifyOnSettingChangedById(this.urlParams._id);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\tif (isSettingsUpdatePropDefault(this.bodyParams)) {\n\t\t\t\t\tconst { matchedCount } = await Settings.updateValueNotHiddenById(this.urlParams._id, this.bodyParams.value);\n\t\t\t\t\tif (!matchedCount) {\n\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst s = await Settings.findOneNotHiddenById(this.urlParams._id);\n\t\t\t\t\tif (!s) {\n\t\t\t\t\t\treturn API.v1.failure();\n\t\t\t\t\t}\n\n\t\t\t\t\tsettings.set(s);\n\t\t\t\t\tsetValue(this.urlParams._id, this.bodyParams.value);\n\n\t\t\t\t\tawait notifyOnSettingChanged(s);\n\n\t\t\t\t\treturn API.v1.success();\n\t\t\t\t}\n\n\t\t\t\treturn API.v1.failure();\n\t\t\t},\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'service.configurations',\n\t{ authRequired: false },\n\t{\n\t\tasync get() {\n\t\t\treturn API.v1.success({\n\t\t\t\tconfigurations: await LoginServiceConfigurationModel.find({}, { projection: { secret: 0 } }).toArray(),\n\t\t\t});\n\t\t},\n\t},\n);\n"],"mappings":";;;IAOA,IAAAA,aAAS;IAAAC,MAAe,CAAAC,IAAE,uCAAsB;MAAAC,OAA4BA,CAAAC,CAAA;QAAAJ,aAAA,GAAAI,CAAA;MAAA;IAAA;IAA5E,IAAAC,eAAS,EAAAC,cAAiB;IAAAL,MAAc,CAAEC,IAAA,4BAAM,EAA2B;MAACG,gBAAAD,CAAA;QAAAC,eAAA,GAAAD,CAAA;MAAA;MAAAE,eAAAF,CAAA;QAAAE,cAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,8BAAA,EAAAC,QAAA;IAAAP,MAAA,CAAAC,IAAA;MAAAO,0BAAAL,CAAA;QAAAG,8BAAA,GAAAH,CAAA;MAAA;MAAAI,SAAAJ,CAAA;QAAAI,QAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAM,2BAAA,EAAAC,4BAAA,EAAAC,0BAAA;IAAAX,MAAA,CAAAC,IAAA;MAAAQ,4BAAAN,CAAA;QAAAM,2BAAA,GAAAN,CAAA;MAAA;MAAAO,6BAAAP,CAAA;QAAAO,4BAAA,GAAAP,CAAA;MAAA;MAAAQ,2BAAAR,CAAA;QAAAQ,0BAAA,GAAAR,CAAA;MAAA;IAAA;IAAA,IAAAS,MAAA;IAAAZ,MAAA,CAAAC,IAAA;MAAAW,OAAAT,CAAA;QAAAS,MAAA,GAAAT,CAAA;MAAA;IAAA;IAAA,IAAAU,CAAA;IAAAb,MAAA,CAAAC,IAAA;MAAAC,QAAAC,CAAA;QAAAU,CAAA,GAAAV,CAAA;MAAA;IAAA;IAAA,IAAAW,kBAAA;IAAAd,MAAA,CAAAC,IAAA;MAAAa,mBAAAX,CAAA;QAAAW,kBAAA,GAAAX,CAAA;MAAA;IAAA;IAAA,IAAAY,oBAAA;IAAAf,MAAA,CAAAC,IAAA;MAAAc,qBAAAZ,CAAA;QAAAY,oBAAA,GAAAZ,CAAA;MAAA;IAAA;IAAA,IAAAa,sBAAA,EAAAC,0BAAA;IAAAjB,MAAA,CAAAC,IAAA;MAAAe,uBAAAb,CAAA;QAAAa,sBAAA,GAAAb,CAAA;MAAA;MAAAc,2BAAAd,CAAA;QAAAc,0BAAA,GAAAd,CAAA;MAAA;IAAA;IAAA,IAAAe,cAAA,EAAAC,QAAA;IAAAnB,MAAA,CAAAC,IAAA;MAAAiB,eAAAf,CAAA;QAAAe,cAAA,GAAAf,CAAA;MAAA;MAAAgB,SAAAhB,CAAA;QAAAgB,QAAA,GAAAhB,CAAA;MAAA;IAAA;IAAA,IAAAiB,QAAA;IAAApB,MAAA,CAAAC,IAAA;MAAAmB,SAAAjB,CAAA;QAAAiB,QAAA,GAAAjB,CAAA;MAAA;IAAA;IAAA,IAAAkB,GAAA;IAAArB,MAAA,CAAAC,IAAA;MAAAoB,IAAAlB,CAAA;QAAAkB,GAAA,GAAAlB,CAAA;MAAA;IAAA;IAAA,IAAAmB,kBAAA;IAAAtB,MAAA,CAAAC,IAAA;MAAAqB,mBAAAnB,CAAA;QAAAmB,kBAAA,GAAAnB,CAAA;MAAA;IAAA;IAAA,IAAAoB,oBAAA,WAAAA,oBAAA;IAgB5E,eAAeC,aAAaA,CAC3BC,KAA0C,EAC1CC,IAAmC,EACnCC,MAAqC,EACrCC,KAAqC,EACrCC,MAA2C;MAE3C,MAAM;QAAEC,MAAM;QAAEC;MAAU,CAAE,GAAGxB,QAAQ,CAACyB,aAAa,CAACP,KAAK,IAAI,EAAE,EAAE;QAClEC,IAAI,EAAEA,IAAI,IAAI;UAAEO,GAAG,EAAE;QAAC,CAAE;QACxBC,IAAI,EAAEP,MAAM;QACZQ,KAAK,EAAEP,KAAK;QACZQ,UAAU,EAAArC,aAAA;UAAIkC,GAAG,EAAE,CAAC;UAAEI,KAAK,EAAE,CAAC;UAAEC,UAAU,EAAE,CAAC;UAAEC,YAAY,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAC,GAAKX,MAAM;OACrF,CAAC;MAEF,MAAM,CAACV,QAAQ,EAAEsB,KAAK,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAACb,MAAM,CAACc,OAAO,EAAE,EAAEb,UAAU,CAAC,CAAC;MAE3Eb,cAAc,CAAC2B,IAAI,CAAC,gBAAgB,EAAE1B,QAAQ,CAAC;MAC/C,OAAO;QAAEA,QAAQ;QAAEY,UAAU,EAAEU;MAAK,CAAE;IACvC;IAEA;IACApB,GAAG,CAACyB,EAAE,CAACC,QAAQ,CACd,iBAAiB,EACjB;MAAEC,YAAY,EAAE;IAAK,CAAE,EACvB;MACC,MAAMC,GAAGA,CAAA;QACR,MAAM;UAAEtB,MAAM;UAAEC;QAAK,CAAE,GAAG,MAAMN,kBAAkB,CAAC,IAAI,CAAC4B,WAAW,CAAC;QACpE,MAAM;UAAExB,IAAI;UAAEG,MAAM;UAAEJ;QAAK,CAAE,GAAG,MAAM,IAAI,CAAC0B,cAAc,EAAE;QAE3D,MAAMC,QAAQ,GAAArD,aAAA,CAAAA,aAAA,KACV0B,KAAK;UACR4B,MAAM,EAAE;YAAEC,GAAG,EAAE;UAAI,CAAE;UACrBC,MAAM,EAAE;QAAI,EACZ;QAED,MAAM;UAAEpC,QAAQ;UAAEY,UAAU,EAAEU;QAAK,CAAE,GAAG,MAAMjB,aAAa,CAAC4B,QAAQ,EAAE1B,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,CAAC;QAElG,OAAOR,GAAG,CAACyB,EAAE,CAACU,OAAO,CAAC;UACrBrC,QAAQ;UACRS,KAAK,EAAET,QAAQ,CAACsC,MAAM;UACtB9B,MAAM;UACNc;SACA,CAAC;MACH;KACA,CACD;IAEDpB,GAAG,CAACyB,EAAE,CAACC,QAAQ,CACd,gBAAgB,EAChB;MAAEC,YAAY,EAAE;IAAK,CAAE,EACvB;MACC,MAAMC,GAAGA,CAAA;QACR,MAAMS,oBAAoB,GAAG,MAAMpD,8BAA8B,CAACqD,IAAI,CAAC,EAAE,EAAE;UAAEvB,UAAU,EAAE;YAAEwB,MAAM,EAAE;UAAC;QAAE,CAAE,CAAC,CAAChB,OAAO,EAAE;QAEnH,OAAOvB,GAAG,CAACyB,EAAE,CAACU,OAAO,CAAC;UACrBK,QAAQ,EAAEH,oBAAoB,CAACI,GAAG,CAAEC,OAAO,IAAI;YAC9C,IAAI,CAACA,OAAO,EAAE;cACb,OAAOA,OAAO;YACf;YAEA,IAAKA,OAA8B,CAACC,MAAM,IAAKD,OAAO,CAACA,OAAO,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC,CAACE,QAAQ,CAACF,OAAO,CAACA,OAAO,CAAE,EAAE;cAC1H,OAAAhE,aAAA,KAAYgE,OAAO;YACpB;YAEA,OAAO;cACN9B,GAAG,EAAE8B,OAAO,CAAC9B,GAAG;cAChBiC,IAAI,EAAEH,OAAO,CAACA,OAAO;cACrBI,QAAQ,EACNJ,OAAsC,CAACK,KAAK,IAC5CL,OAA8B,CAACI,QAAQ,IACvCJ,OAAqC,CAACM,WAAW;cACnDC,eAAe,EAAEP,OAAO,CAACO,eAAe,IAAI,EAAE;cAC9CC,WAAW,EAAER,OAAO,CAACQ,WAAW,IAAI,EAAE;cACtCC,gBAAgB,EAAET,OAAO,CAACS,gBAAgB,IAAI,EAAE;cAChDR,MAAM,EAAE;aACR;UACF,CAAC;SACD,CAAC;MACH;KACA,CACD;IAED3C,GAAG,CAACyB,EAAE,CAACC,QAAQ,CACd,yBAAyB,EACzB;MAAEC,YAAY,EAAE,IAAI;MAAEyB,iBAAiB,EAAE;IAAI,CAAE,EAC/C;MACC,MAAMC,IAAIA,CAAA;QAAA,IAAAC,qBAAA;QACT,IAAI,GAAAA,qBAAA,GAAC,IAAI,CAACC,UAAU,CAACV,IAAI,cAAAS,qBAAA,eAApBA,qBAAA,CAAsBE,IAAI,EAAE,GAAE;UAClC,MAAM,IAAIjE,MAAM,CAACkE,KAAK,CAAC,+BAA+B,EAAE,kCAAkC,CAAC;QAC5F;QAEA,MAAMlE,MAAM,CAACmE,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAACH,UAAU,CAACV,IAAI,EAAE,IAAI,CAACc,MAAM,CAAC;QAE5E,OAAO3D,GAAG,CAACyB,EAAE,CAACU,OAAO,EAAE;MACxB;KACA,CACD;IAEDnC,GAAG,CAACyB,EAAE,CAACC,QAAQ,CACd,UAAU,EACV;MAAEC,YAAY,EAAE;IAAI,CAAE,EACtB;MACC,MAAMC,GAAGA,CAAA;QACR,MAAM;UAAEtB,MAAM;UAAEC;QAAK,CAAE,GAAG,MAAMN,kBAAkB,CAAC,IAAI,CAAC4B,WAAW,CAAC;QACpE,MAAM;UAAExB,IAAI;UAAEG,MAAM;UAAEJ;QAAK,CAAE,GAAG,MAAM,IAAI,CAAC0B,cAAc,EAAE;QAE3D,IAAIC,QAAQ,GAAwC;UACnDC,MAAM,EAAE;YAAEC,GAAG,EAAE;UAAI;SACnB;QAED,IAAI,EAAE,MAAMxC,kBAAkB,CAAC,IAAI,CAACkE,MAAM,EAAE,yBAAyB,CAAC,CAAC,EAAE;UACxE5B,QAAQ,CAACG,MAAM,GAAG,IAAI;QACvB;QAEAH,QAAQ,GAAG6B,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEzD,KAAK,EAAE2B,QAAQ,CAAC;QAE7C,MAAM;UAAEjC,QAAQ;UAAEY,UAAU,EAAEU;QAAK,CAAE,GAAG,MAAMjB,aAAa,CAAC4B,QAAQ,EAAE1B,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,CAAC;QAElG,OAAOR,GAAG,CAACyB,EAAE,CAACU,OAAO,CAAC;UACrBrC,QAAQ;UACRS,KAAK,EAAET,QAAQ,CAACsC,MAAM;UACtB9B,MAAM;UACNc;SACA,CAAC;MACH;KACA,CACD;IAEDpB,GAAG,CAACyB,EAAE,CAACC,QAAQ,CACd,eAAe,EACf;MACCC,YAAY,EAAE,IAAI;MAClBmC,mBAAmB,EAAE;QACpBC,GAAG,EAAE;UAAEC,WAAW,EAAE,CAAC,yBAAyB,CAAC;UAAEC,SAAS,EAAE;QAAQ,CAAE;QACtEC,IAAI,EAAE;UAAEF,WAAW,EAAE,CAAC,yBAAyB,CAAC;UAAEC,SAAS,EAAE;QAAQ;;KAEtE,EACD;MACC,MAAMrC,GAAGA,CAAA;QACR,MAAMuC,OAAO,GAAG,MAAMjF,QAAQ,CAACkF,oBAAoB,CAAC,IAAI,CAACC,SAAS,CAACzD,GAAG,CAAC;QACvE,IAAI,CAACuD,OAAO,EAAE;UACb,OAAOnE,GAAG,CAACyB,EAAE,CAAC6C,OAAO,EAAE;QACxB;QACA,OAAOtE,GAAG,CAACyB,EAAE,CAACU,OAAO,CAAC3C,CAAC,CAAC+E,IAAI,CAACJ,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;MACvD,CAAC;MACDd,IAAI,EAAE;QACLD,iBAAiB,EAAE,IAAI;QACvB,MAAMoB,MAAMA,CAAA;UACX,IAAI,OAAO,IAAI,CAACH,SAAS,CAACzD,GAAG,KAAK,QAAQ,EAAE;YAC3C,MAAM,IAAIrB,MAAM,CAACkE,KAAK,CAAC,6BAA6B,EAAE,gCAAgC,CAAC;UACxF;UAEA;UACA,IAAI/D,oBAAoB,EAAE,IAAI,iBAAiB,CAAC+E,IAAI,CAAC,IAAI,CAACJ,SAAS,CAACzD,GAAG,CAAC,EAAE;YACzE,OAAOZ,GAAG,CAACyB,EAAE,CAACiD,YAAY,EAAE;UAC7B;UAEA;UACA,MAAMP,OAAO,GAAG,MAAMjF,QAAQ,CAACkF,oBAAoB,CAAC,IAAI,CAACC,SAAS,CAACzD,GAAG,CAAC;UAEvE,IAAI,CAACuD,OAAO,EAAE;YACb,OAAOnE,GAAG,CAACyB,EAAE,CAAC6C,OAAO,EAAE;UACxB;UAEA,IAAIvF,eAAe,CAACoF,OAAO,CAAC,IAAI9E,4BAA4B,CAAC,IAAI,CAACkE,UAAU,CAAC,IAAI,IAAI,CAACA,UAAU,CAACoB,OAAO,EAAE;YACzG;YACA,MAAMpF,MAAM,CAACmE,SAAS,CAACS,OAAO,CAACnD,KAAK,CAAC;YACrC,OAAOhB,GAAG,CAACyB,EAAE,CAACU,OAAO,EAAE;UACxB;UAEA,IAAInD,cAAc,CAACmF,OAAO,CAAC,IAAI7E,0BAA0B,CAAC,IAAI,CAACiE,UAAU,CAAC,EAAE;YAC3E,MAAMqB,oBAAoB,GAAG1F,QAAQ,CAAC2F,iBAAiB,CAAgB,IAAI,CAACR,SAAS,CAACzD,GAAG,EAAE;cAAEkE,MAAM,EAAE,IAAI,CAACvB,UAAU,CAACuB;YAAM,CAAE,CAAC;YAC9H,MAAMC,kBAAkB,GAAG7F,QAAQ,CAAC8F,wBAAwB,CAAC,IAAI,CAACX,SAAS,CAACzD,GAAG,EAAE,IAAI,CAAC2C,UAAU,CAACvC,KAAK,CAAC;YAEvG,MAAM,CAACiE,mBAAmB,EAAEC,iBAAiB,CAAC,GAAG,MAAM7D,OAAO,CAACC,GAAG,CAAC,CAACsD,oBAAoB,EAAEG,kBAAkB,CAAC,CAAC;YAE9G,IAAIE,mBAAmB,CAACE,aAAa,IAAID,iBAAiB,CAACC,aAAa,EAAE;cACzE,MAAMvF,0BAA0B,CAAC,IAAI,CAACyE,SAAS,CAACzD,GAAG,CAAC;YACrD;YAEA,OAAOZ,GAAG,CAACyB,EAAE,CAACU,OAAO,EAAE;UACxB;UAEA,IAAI/C,2BAA2B,CAAC,IAAI,CAACmE,UAAU,CAAC,EAAE;YACjD,MAAM;cAAE6B;YAAY,CAAE,GAAG,MAAMlG,QAAQ,CAAC8F,wBAAwB,CAAC,IAAI,CAACX,SAAS,CAACzD,GAAG,EAAE,IAAI,CAAC2C,UAAU,CAACvC,KAAK,CAAC;YAC3G,IAAI,CAACoE,YAAY,EAAE;cAClB,OAAOpF,GAAG,CAACyB,EAAE,CAAC6C,OAAO,EAAE;YACxB;YAEA,MAAMe,CAAC,GAAG,MAAMnG,QAAQ,CAACkF,oBAAoB,CAAC,IAAI,CAACC,SAAS,CAACzD,GAAG,CAAC;YACjE,IAAI,CAACyE,CAAC,EAAE;cACP,OAAOrF,GAAG,CAACyB,EAAE,CAAC6C,OAAO,EAAE;YACxB;YAEAxE,QAAQ,CAACwF,GAAG,CAACD,CAAC,CAAC;YACftF,QAAQ,CAAC,IAAI,CAACsE,SAAS,CAACzD,GAAG,EAAE,IAAI,CAAC2C,UAAU,CAACvC,KAAK,CAAC;YAEnD,MAAMrB,sBAAsB,CAAC0F,CAAC,CAAC;YAE/B,OAAOrF,GAAG,CAACyB,EAAE,CAACU,OAAO,EAAE;UACxB;UAEA,OAAOnC,GAAG,CAACyB,EAAE,CAAC6C,OAAO,EAAE;QACxB;;KAED,CACD;IAEDtE,GAAG,CAACyB,EAAE,CAACC,QAAQ,CACd,wBAAwB,EACxB;MAAEC,YAAY,EAAE;IAAK,CAAE,EACvB;MACC,MAAMC,GAAGA,CAAA;QACR,OAAO5B,GAAG,CAACyB,EAAE,CAACU,OAAO,CAAC;UACrBoD,cAAc,EAAE,MAAMtG,8BAA8B,CAACqD,IAAI,CAAC,EAAE,EAAE;YAAEvB,UAAU,EAAE;cAAEwB,MAAM,EAAE;YAAC;UAAE,CAAE,CAAC,CAAChB,OAAO;SACpG,CAAC;MACH;KACA,CACD;IAACiE,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"01769b2af3000e123d83559d811d5becd4dd18d3"}
