{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/models/raw/ReadReceipts.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/models/raw/ReadReceipts.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/models/raw/ReadReceipts.ts","inputSourceMap":{"version":3,"file":"ee/server/models/raw/ReadReceipts.ts","sourceRoot":"","sources":["ee/server/models/raw/ReadReceipts.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser, IMessage, ReadReceipt, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IReadReceiptsModel } from '@rocket.chat/model-typings';\nimport type { Collection, FindCursor, Db, IndexDescription, DeleteResult, Filter, UpdateResult, Document } from 'mongodb';\n\nimport { otrSystemMessages } from '../../../../app/otr/lib/constants';\nimport { BaseRaw } from '../../../../server/models/raw/BaseRaw';\n\nexport class ReadReceiptsRaw extends BaseRaw<ReadReceipt> implements IReadReceiptsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ReadReceipt>>) {\n\t\tsuper(db, 'read_receipts', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { roomId: 1, userId: 1, messageId: 1 }, unique: true }, { key: { messageId: 1 } }, { key: { userId: 1 } }];\n\t}\n\n\tfindByMessageId(messageId: string): FindCursor<ReadReceipt> {\n\t\treturn this.find({ messageId });\n\t}\n\n\tremoveByUserId(userId: string): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ userId });\n\t}\n\n\tremoveByRoomId(roomId: string): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ roomId });\n\t}\n\n\tremoveByRoomIds(roomIds: string[]): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ roomId: { $in: roomIds } });\n\t}\n\n\tremoveByMessageId(messageId: string): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ messageId });\n\t}\n\n\tremoveByMessageIds(messageIds: string[]): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ messageId: { $in: messageIds } });\n\t}\n\n\tremoveOTRReceiptsUntilDate(roomId: string, until: Date): Promise<DeleteResult> {\n\t\tconst query = {\n\t\t\troomId,\n\t\t\tt: {\n\t\t\t\t$in: [\n\t\t\t\t\t'otr',\n\t\t\t\t\totrSystemMessages.USER_JOINED_OTR,\n\t\t\t\t\totrSystemMessages.USER_REQUESTED_OTR_KEY_REFRESH,\n\t\t\t\t\totrSystemMessages.USER_KEY_REFRESHED_SUCCESSFULLY,\n\t\t\t\t],\n\t\t\t},\n\t\t\tts: { $lte: until },\n\t\t};\n\t\treturn this.col.deleteMany(query);\n\t}\n\n\tasync removeByIdPinnedTimestampLimitAndUsers(\n\t\troomId: string,\n\t\tignorePinned: boolean,\n\t\tignoreDiscussion: boolean,\n\t\tts: Filter<IMessage>['ts'],\n\t\tusers: IUser['_id'][],\n\t\tignoreThreads: boolean,\n\t): Promise<DeleteResult> {\n\t\tconst query: Filter<ReadReceipt> = {\n\t\t\troomId,\n\t\t\tts,\n\t\t};\n\n\t\tif (ignorePinned) {\n\t\t\tquery.pinned = { $ne: true };\n\t\t}\n\n\t\tif (ignoreDiscussion) {\n\t\t\tquery.drid = { $exists: false };\n\t\t}\n\n\t\tif (ignoreThreads) {\n\t\t\tquery.tmid = { $exists: false };\n\t\t}\n\n\t\tif (users.length) {\n\t\t\tquery.userId = { $in: users };\n\t\t}\n\n\t\treturn this.deleteMany(query);\n\t}\n\n\tsetPinnedByMessageId(messageId: string, pinned = true): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany({ messageId }, { $set: { pinned } });\n\t}\n\n\tsetAsThreadById(messageId: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany({ messageId }, { $set: { tmid: messageId } });\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/models/raw/ReadReceipts.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/models/raw/ReadReceipts.ts","inputSourceMap":{"version":3,"file":"ee/server/models/raw/ReadReceipts.ts","sourceRoot":"","sources":["ee/server/models/raw/ReadReceipts.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser, IMessage, ReadReceipt, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IReadReceiptsModel } from '@rocket.chat/model-typings';\nimport type { Collection, FindCursor, Db, IndexDescription, DeleteResult, Filter, UpdateResult, Document } from 'mongodb';\n\nimport { otrSystemMessages } from '../../../../app/otr/lib/constants';\nimport { BaseRaw } from '../../../../server/models/raw/BaseRaw';\n\nexport class ReadReceiptsRaw extends BaseRaw<ReadReceipt> implements IReadReceiptsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ReadReceipt>>) {\n\t\tsuper(db, 'read_receipts', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { roomId: 1, userId: 1, messageId: 1 }, unique: true }, { key: { messageId: 1 } }, { key: { userId: 1 } }];\n\t}\n\n\tfindByMessageId(messageId: string): FindCursor<ReadReceipt> {\n\t\treturn this.find({ messageId });\n\t}\n\n\tremoveByUserId(userId: string): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ userId });\n\t}\n\n\tremoveByRoomId(roomId: string): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ roomId });\n\t}\n\n\tremoveByRoomIds(roomIds: string[]): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ roomId: { $in: roomIds } });\n\t}\n\n\tremoveByMessageId(messageId: string): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ messageId });\n\t}\n\n\tremoveByMessageIds(messageIds: string[]): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ messageId: { $in: messageIds } });\n\t}\n\n\tremoveOTRReceiptsUntilDate(roomId: string, until: Date): Promise<DeleteResult> {\n\t\tconst query = {\n\t\t\troomId,\n\t\t\tt: {\n\t\t\t\t$in: [\n\t\t\t\t\t'otr',\n\t\t\t\t\totrSystemMessages.USER_JOINED_OTR,\n\t\t\t\t\totrSystemMessages.USER_REQUESTED_OTR_KEY_REFRESH,\n\t\t\t\t\totrSystemMessages.USER_KEY_REFRESHED_SUCCESSFULLY,\n\t\t\t\t],\n\t\t\t},\n\t\t\tts: { $lte: until },\n\t\t};\n\t\treturn this.col.deleteMany(query);\n\t}\n\n\tasync removeByIdPinnedTimestampLimitAndUsers(\n\t\troomId: string,\n\t\tignorePinned: boolean,\n\t\tignoreDiscussion: boolean,\n\t\tts: Filter<IMessage>['ts'],\n\t\tusers: IUser['_id'][],\n\t\tignoreThreads: boolean,\n\t): Promise<DeleteResult> {\n\t\tconst query: Filter<ReadReceipt> = {\n\t\t\troomId,\n\t\t\tts,\n\t\t};\n\n\t\tif (ignorePinned) {\n\t\t\tquery.pinned = { $ne: true };\n\t\t}\n\n\t\tif (ignoreDiscussion) {\n\t\t\tquery.drid = { $exists: false };\n\t\t}\n\n\t\tif (ignoreThreads) {\n\t\t\tquery.tmid = { $exists: false };\n\t\t}\n\n\t\tif (users.length) {\n\t\t\tquery.userId = { $in: users };\n\t\t}\n\n\t\treturn this.deleteMany(query);\n\t}\n\n\tsetPinnedByMessageId(messageId: string, pinned = true): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany({ messageId }, { $set: { pinned } });\n\t}\n\n\tsetAsThreadById(messageId: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany({ messageId }, { $set: { tmid: messageId } });\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      ReadReceiptsRaw: () => ReadReceiptsRaw\n    });\n    let otrSystemMessages;\n    module.link(\"../../../../app/otr/lib/constants\", {\n      otrSystemMessages(v) {\n        otrSystemMessages = v;\n      }\n    }, 0);\n    let BaseRaw;\n    module.link(\"../../../../server/models/raw/BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class ReadReceiptsRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'read_receipts', trash);\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            roomId: 1,\n            userId: 1,\n            messageId: 1\n          },\n          unique: true\n        }, {\n          key: {\n            messageId: 1\n          }\n        }, {\n          key: {\n            userId: 1\n          }\n        }];\n      }\n      findByMessageId(messageId) {\n        return this.find({\n          messageId\n        });\n      }\n      removeByUserId(userId) {\n        return this.deleteMany({\n          userId\n        });\n      }\n      removeByRoomId(roomId) {\n        return this.deleteMany({\n          roomId\n        });\n      }\n      removeByRoomIds(roomIds) {\n        return this.deleteMany({\n          roomId: {\n            $in: roomIds\n          }\n        });\n      }\n      removeByMessageId(messageId) {\n        return this.deleteMany({\n          messageId\n        });\n      }\n      removeByMessageIds(messageIds) {\n        return this.deleteMany({\n          messageId: {\n            $in: messageIds\n          }\n        });\n      }\n      removeOTRReceiptsUntilDate(roomId, until) {\n        const query = {\n          roomId,\n          t: {\n            $in: ['otr', otrSystemMessages.USER_JOINED_OTR, otrSystemMessages.USER_REQUESTED_OTR_KEY_REFRESH, otrSystemMessages.USER_KEY_REFRESHED_SUCCESSFULLY]\n          },\n          ts: {\n            $lte: until\n          }\n        };\n        return this.col.deleteMany(query);\n      }\n      async removeByIdPinnedTimestampLimitAndUsers(roomId, ignorePinned, ignoreDiscussion, ts, users, ignoreThreads) {\n        const query = {\n          roomId,\n          ts\n        };\n        if (ignorePinned) {\n          query.pinned = {\n            $ne: true\n          };\n        }\n        if (ignoreDiscussion) {\n          query.drid = {\n            $exists: false\n          };\n        }\n        if (ignoreThreads) {\n          query.tmid = {\n            $exists: false\n          };\n        }\n        if (users.length) {\n          query.userId = {\n            $in: users\n          };\n        }\n        return this.deleteMany(query);\n      }\n      setPinnedByMessageId(messageId) {\n        let pinned = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        return this.updateMany({\n          messageId\n        }, {\n          $set: {\n            pinned\n          }\n        });\n      }\n      setAsThreadById(messageId) {\n        return this.updateMany({\n          messageId\n        }, {\n          $set: {\n            tmid: messageId\n          }\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","ReadReceiptsRaw","otrSystemMessages","link","v","BaseRaw","__reifyWaitForDeps__","constructor","db","trash","modelIndexes","key","roomId","userId","messageId","unique","findByMessageId","find","removeByUserId","deleteMany","removeByRoomId","removeByRoomIds","roomIds","$in","removeByMessageId","removeByMessageIds","messageIds","removeOTRReceiptsUntilDate","until","query","t","USER_JOINED_OTR","USER_REQUESTED_OTR_KEY_REFRESH","USER_KEY_REFRESHED_SUCCESSFULLY","ts","$lte","col","removeByIdPinnedTimestampLimitAndUsers","ignorePinned","ignoreDiscussion","users","ignoreThreads","pinned","$ne","drid","$exists","tmid","length","setPinnedByMessageId","arguments","undefined","updateMany","$set","setAsThreadById","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/models/raw/ReadReceipts.ts"],"sourcesContent":["import type { IUser, IMessage, ReadReceipt, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IReadReceiptsModel } from '@rocket.chat/model-typings';\nimport type { Collection, FindCursor, Db, IndexDescription, DeleteResult, Filter, UpdateResult, Document } from 'mongodb';\n\nimport { otrSystemMessages } from '../../../../app/otr/lib/constants';\nimport { BaseRaw } from '../../../../server/models/raw/BaseRaw';\n\nexport class ReadReceiptsRaw extends BaseRaw<ReadReceipt> implements IReadReceiptsModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ReadReceipt>>) {\n\t\tsuper(db, 'read_receipts', trash);\n\t}\n\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [{ key: { roomId: 1, userId: 1, messageId: 1 }, unique: true }, { key: { messageId: 1 } }, { key: { userId: 1 } }];\n\t}\n\n\tfindByMessageId(messageId: string): FindCursor<ReadReceipt> {\n\t\treturn this.find({ messageId });\n\t}\n\n\tremoveByUserId(userId: string): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ userId });\n\t}\n\n\tremoveByRoomId(roomId: string): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ roomId });\n\t}\n\n\tremoveByRoomIds(roomIds: string[]): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ roomId: { $in: roomIds } });\n\t}\n\n\tremoveByMessageId(messageId: string): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ messageId });\n\t}\n\n\tremoveByMessageIds(messageIds: string[]): Promise<DeleteResult> {\n\t\treturn this.deleteMany({ messageId: { $in: messageIds } });\n\t}\n\n\tremoveOTRReceiptsUntilDate(roomId: string, until: Date): Promise<DeleteResult> {\n\t\tconst query = {\n\t\t\troomId,\n\t\t\tt: {\n\t\t\t\t$in: [\n\t\t\t\t\t'otr',\n\t\t\t\t\totrSystemMessages.USER_JOINED_OTR,\n\t\t\t\t\totrSystemMessages.USER_REQUESTED_OTR_KEY_REFRESH,\n\t\t\t\t\totrSystemMessages.USER_KEY_REFRESHED_SUCCESSFULLY,\n\t\t\t\t],\n\t\t\t},\n\t\t\tts: { $lte: until },\n\t\t};\n\t\treturn this.col.deleteMany(query);\n\t}\n\n\tasync removeByIdPinnedTimestampLimitAndUsers(\n\t\troomId: string,\n\t\tignorePinned: boolean,\n\t\tignoreDiscussion: boolean,\n\t\tts: Filter<IMessage>['ts'],\n\t\tusers: IUser['_id'][],\n\t\tignoreThreads: boolean,\n\t): Promise<DeleteResult> {\n\t\tconst query: Filter<ReadReceipt> = {\n\t\t\troomId,\n\t\t\tts,\n\t\t};\n\n\t\tif (ignorePinned) {\n\t\t\tquery.pinned = { $ne: true };\n\t\t}\n\n\t\tif (ignoreDiscussion) {\n\t\t\tquery.drid = { $exists: false };\n\t\t}\n\n\t\tif (ignoreThreads) {\n\t\t\tquery.tmid = { $exists: false };\n\t\t}\n\n\t\tif (users.length) {\n\t\t\tquery.userId = { $in: users };\n\t\t}\n\n\t\treturn this.deleteMany(query);\n\t}\n\n\tsetPinnedByMessageId(messageId: string, pinned = true): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany({ messageId }, { $set: { pinned } });\n\t}\n\n\tsetAsThreadById(messageId: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany({ messageId }, { $set: { tmid: messageId } });\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ae70a9171a5411959c8de00267cf737c3586eebf"}
