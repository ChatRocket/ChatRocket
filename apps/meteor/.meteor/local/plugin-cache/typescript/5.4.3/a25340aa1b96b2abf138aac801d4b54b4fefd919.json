{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIconManager.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIconManager.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIconManager.ts","inputSourceMap":{"version":3,"file":"client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIconManager.ts","sourceRoot":"","sources":["client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIconManager.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,SAAS,MAAM,WAAW,CAAC;AAElC,OAAO,EAAE,GAAG,EAAE,MAAM,+CAA+C,CAAC;AAEpE,MAAM,0BAA0B,GAAG,IAAI,CAAC,KAAM,SAAQ,OAAO;IAC5D,KAAK,GAAG,IAAI,GAAG,EAAkB,CAAC;IAElC;QACC,KAAK,EAAE,CAAC;IACT,CAAC;IAEM,GAAG,CAAC,KAAa,EAAE,IAAY;QACrC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,OAAO;QACR,CAAC;QAED,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC;YACxC,OAAO,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC;QAC3B,CAAC;QACD,0GAA0G;QAE1G,GAAG,CAAC,IAAI;aACN,IAAI,CAAC,gBAAgB,KAAK,0BAA0B,IAAI,EAAE,EAAE,KAAK,CAAC;aAClE,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE;YACvB,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,IAAY,EAAE,EAAE;gBACrC,IAAI,CAAC,KAAK,CAAC,GAAG,CACb,GAAG,KAAK,IAAI,IAAI,EAAE,EAClB,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE;oBACxB,WAAW,EAAE,CAAC,IAAI,CAAC;oBACnB,SAAS,EAAE,4BAA4B;oBACvC,YAAY,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;iBAC7C,CAAC;qBACA,OAAO,CAAC,MAAM,EAAE,eAAe,KAAK,IAAI,IAAI,GAAG,CAAC;qBAChD,OAAO,CAAC,QAAQ,EAAE,WAAW,CAAC,CAChC,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACpB,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YACrB,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;CACD,CAAC,EAAE,CAAC;AAEL,eAAe,0BAA0B,CAAC","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport DOMPurify from 'dompurify';\n\nimport { sdk } from '../../../../../app/utils/client/lib/SDKClient';\n\nconst OmnichannelRoomIconManager = new (class extends Emitter {\n\ticons = new Map<string, string>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tpublic get(appId: string, icon: string): string | undefined {\n\t\tif (!appId || !icon) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.icons.has(`${appId}-${icon}`)) {\n\t\t\treturn `${appId}-${icon}`;\n\t\t}\n\t\t// TODO: update the apps icons to send JSON instead of a string. This will allow us to use APIClient.get()\n\n\t\tsdk.rest\n\t\t\t.send(`/apps/public/${appId}/get-sidebar-icon?icon=${icon}`, 'GET')\n\t\t\t.then((response: any) => {\n\t\t\t\tresponse.text().then((text: string) => {\n\t\t\t\t\tthis.icons.set(\n\t\t\t\t\t\t`${appId}-${icon}`,\n\t\t\t\t\t\tDOMPurify.sanitize(text, {\n\t\t\t\t\t\t\tFORBID_ATTR: ['id'],\n\t\t\t\t\t\t\tNAMESPACE: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t\t\tUSE_PROFILES: { svg: true, svgFilters: true },\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.replace(`<svg`, `<symbol id=\"${appId}-${icon}\"`)\n\t\t\t\t\t\t\t.replace(`</svg>`, '</symbol>'),\n\t\t\t\t\t);\n\t\t\t\t\tthis.emit('change');\n\t\t\t\t\tthis.emit(`${appId}-${icon}`);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error: any) => {\n\t\t\t\tconsole.error('error from get-sidebar-icon', error);\n\t\t\t});\n\t}\n})();\n\nexport default OmnichannelRoomIconManager;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIconManager.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIconManager.ts","inputSourceMap":{"version":3,"file":"client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIconManager.ts","sourceRoot":"","sources":["client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIconManager.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,SAAS,MAAM,WAAW,CAAC;AAElC,OAAO,EAAE,GAAG,EAAE,MAAM,+CAA+C,CAAC;AAEpE,MAAM,0BAA0B,GAAG,IAAI,CAAC,KAAM,SAAQ,OAAO;IAC5D,KAAK,GAAG,IAAI,GAAG,EAAkB,CAAC;IAElC;QACC,KAAK,EAAE,CAAC;IACT,CAAC;IAEM,GAAG,CAAC,KAAa,EAAE,IAAY;QACrC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;YACrB,OAAO;QACR,CAAC;QAED,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC;YACxC,OAAO,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC;QAC3B,CAAC;QACD,0GAA0G;QAE1G,GAAG,CAAC,IAAI;aACN,IAAI,CAAC,gBAAgB,KAAK,0BAA0B,IAAI,EAAE,EAAE,KAAK,CAAC;aAClE,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE;YACvB,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,IAAY,EAAE,EAAE;gBACrC,IAAI,CAAC,KAAK,CAAC,GAAG,CACb,GAAG,KAAK,IAAI,IAAI,EAAE,EAClB,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE;oBACxB,WAAW,EAAE,CAAC,IAAI,CAAC;oBACnB,SAAS,EAAE,4BAA4B;oBACvC,YAAY,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;iBAC7C,CAAC;qBACA,OAAO,CAAC,MAAM,EAAE,eAAe,KAAK,IAAI,IAAI,GAAG,CAAC;qBAChD,OAAO,CAAC,QAAQ,EAAE,WAAW,CAAC,CAChC,CAAC;gBACF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACpB,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,EAAE,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YACrB,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;CACD,CAAC,EAAE,CAAC;AAEL,eAAe,0BAA0B,CAAC","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport DOMPurify from 'dompurify';\n\nimport { sdk } from '../../../../../app/utils/client/lib/SDKClient';\n\nconst OmnichannelRoomIconManager = new (class extends Emitter {\n\ticons = new Map<string, string>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tpublic get(appId: string, icon: string): string | undefined {\n\t\tif (!appId || !icon) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.icons.has(`${appId}-${icon}`)) {\n\t\t\treturn `${appId}-${icon}`;\n\t\t}\n\t\t// TODO: update the apps icons to send JSON instead of a string. This will allow us to use APIClient.get()\n\n\t\tsdk.rest\n\t\t\t.send(`/apps/public/${appId}/get-sidebar-icon?icon=${icon}`, 'GET')\n\t\t\t.then((response: any) => {\n\t\t\t\tresponse.text().then((text: string) => {\n\t\t\t\t\tthis.icons.set(\n\t\t\t\t\t\t`${appId}-${icon}`,\n\t\t\t\t\t\tDOMPurify.sanitize(text, {\n\t\t\t\t\t\t\tFORBID_ATTR: ['id'],\n\t\t\t\t\t\t\tNAMESPACE: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t\t\tUSE_PROFILES: { svg: true, svgFilters: true },\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.replace(`<svg`, `<symbol id=\"${appId}-${icon}\"`)\n\t\t\t\t\t\t\t.replace(`</svg>`, '</symbol>'),\n\t\t\t\t\t);\n\t\t\t\t\tthis.emit('change');\n\t\t\t\t\tthis.emit(`${appId}-${icon}`);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error: any) => {\n\t\t\t\tconsole.error('error from get-sidebar-icon', error);\n\t\t\t});\n\t}\n})();\n\nexport default OmnichannelRoomIconManager;\n"]}}},"code":"let Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n}, 0);\nlet DOMPurify;\nmodule.link(\"dompurify\", {\n  default(v) {\n    DOMPurify = v;\n  }\n}, 1);\nlet sdk;\nmodule.link(\"../../../../../app/utils/client/lib/SDKClient\", {\n  sdk(v) {\n    sdk = v;\n  }\n}, 2);\nconst OmnichannelRoomIconManager = new class extends Emitter {\n  constructor() {\n    super();\n    this.icons = new Map();\n  }\n  get(appId, icon) {\n    if (!appId || !icon) {\n      return;\n    }\n    if (this.icons.has(\"\".concat(appId, \"-\").concat(icon))) {\n      return \"\".concat(appId, \"-\").concat(icon);\n    }\n    // TODO: update the apps icons to send JSON instead of a string. This will allow us to use APIClient.get()\n    sdk.rest.send(\"/apps/public/\".concat(appId, \"/get-sidebar-icon?icon=\").concat(icon), 'GET').then(response => {\n      response.text().then(text => {\n        this.icons.set(\"\".concat(appId, \"-\").concat(icon), DOMPurify.sanitize(text, {\n          FORBID_ATTR: ['id'],\n          NAMESPACE: 'http://www.w3.org/2000/svg',\n          USE_PROFILES: {\n            svg: true,\n            svgFilters: true\n          }\n        }).replace(\"<svg\", \"<symbol id=\\\"\".concat(appId, \"-\").concat(icon, \"\\\"\")).replace(\"</svg>\", '</symbol>'));\n        this.emit('change');\n        this.emit(\"\".concat(appId, \"-\").concat(icon));\n      });\n    }).catch(error => {\n      console.error('error from get-sidebar-icon', error);\n    });\n  }\n}();\nmodule.exportDefault(OmnichannelRoomIconManager);","map":{"version":3,"names":["Emitter","module","link","v","DOMPurify","default","sdk","OmnichannelRoomIconManager","constructor","icons","Map","get","appId","icon","has","concat","rest","send","then","response","text","set","sanitize","FORBID_ATTR","NAMESPACE","USE_PROFILES","svg","svgFilters","replace","emit","catch","error","console","exportDefault"],"sources":["client/components/RoomIcon/OmnichannelRoomIcon/lib/OmnichannelRoomIconManager.ts"],"sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport DOMPurify from 'dompurify';\n\nimport { sdk } from '../../../../../app/utils/client/lib/SDKClient';\n\nconst OmnichannelRoomIconManager = new (class extends Emitter {\n\ticons = new Map<string, string>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tpublic get(appId: string, icon: string): string | undefined {\n\t\tif (!appId || !icon) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.icons.has(`${appId}-${icon}`)) {\n\t\t\treturn `${appId}-${icon}`;\n\t\t}\n\t\t// TODO: update the apps icons to send JSON instead of a string. This will allow us to use APIClient.get()\n\n\t\tsdk.rest\n\t\t\t.send(`/apps/public/${appId}/get-sidebar-icon?icon=${icon}`, 'GET')\n\t\t\t.then((response: any) => {\n\t\t\t\tresponse.text().then((text: string) => {\n\t\t\t\t\tthis.icons.set(\n\t\t\t\t\t\t`${appId}-${icon}`,\n\t\t\t\t\t\tDOMPurify.sanitize(text, {\n\t\t\t\t\t\t\tFORBID_ATTR: ['id'],\n\t\t\t\t\t\t\tNAMESPACE: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t\t\tUSE_PROFILES: { svg: true, svgFilters: true },\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.replace(`<svg`, `<symbol id=\"${appId}-${icon}\"`)\n\t\t\t\t\t\t\t.replace(`</svg>`, '</symbol>'),\n\t\t\t\t\t);\n\t\t\t\t\tthis.emit('change');\n\t\t\t\t\tthis.emit(`${appId}-${icon}`);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error: any) => {\n\t\t\t\tconsole.error('error from get-sidebar-icon', error);\n\t\t\t});\n\t}\n})();\n\nexport default OmnichannelRoomIconManager;\n"],"mappings":"AAAA,IAAAA,OAAS;AAAAC,MAAS,CAAAC,IAAA,CAAM,sBAAsB,EAAC;EAAAF,QAAAG,CAAA;IAAAH,OAAA,GAAAG,CAAA;EAAA;AAAA;AAAA,IAAAC,SAAA;AAAAH,MAAA,CAAAC,IAAA;EAAAG,QAAAF,CAAA;IAAAC,SAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAG,GAAA;AAAAL,MAAA,CAAAC,IAAA;EAAAI,IAAAH,CAAA;IAAAG,GAAA,GAAAH,CAAA;EAAA;AAAA;AAK/C,MAAMI,0BAA0B,GAAG,IAAK,cAAcP,OAAO;EAG5DQ,YAAA;IACC,KAAK,EAAE;IAAC,KAHTC,KAAK,GAAG,IAAIC,GAAG,EAAkB;EAIjC;EAEOC,GAAGA,CAACC,KAAa,EAAEC,IAAY;IACrC,IAAI,CAACD,KAAK,IAAI,CAACC,IAAI,EAAE;MACpB;IACD;IAEA,IAAI,IAAI,CAACJ,KAAK,CAACK,GAAG,IAAAC,MAAA,CAAIH,KAAK,OAAAG,MAAA,CAAIF,IAAI,CAAE,CAAC,EAAE;MACvC,UAAAE,MAAA,CAAUH,KAAK,OAAAG,MAAA,CAAIF,IAAI;IACxB;IACA;IAEAP,GAAG,CAACU,IAAI,CACNC,IAAI,iBAAAF,MAAA,CAAiBH,KAAK,6BAAAG,MAAA,CAA0BF,IAAI,GAAI,KAAK,CAAC,CAClEK,IAAI,CAAEC,QAAa,IAAI;MACvBA,QAAQ,CAACC,IAAI,EAAE,CAACF,IAAI,CAAEE,IAAY,IAAI;QACrC,IAAI,CAACX,KAAK,CAACY,GAAG,IAAAN,MAAA,CACVH,KAAK,OAAAG,MAAA,CAAIF,IAAI,GAChBT,SAAS,CAACkB,QAAQ,CAACF,IAAI,EAAE;UACxBG,WAAW,EAAE,CAAC,IAAI,CAAC;UACnBC,SAAS,EAAE,4BAA4B;UACvCC,YAAY,EAAE;YAAEC,GAAG,EAAE,IAAI;YAAEC,UAAU,EAAE;UAAI;SAC3C,CAAC,CACAC,OAAO,yBAAAb,MAAA,CAAwBH,KAAK,OAAAG,MAAA,CAAIF,IAAI,OAAG,CAAC,CAChDe,OAAO,WAAW,WAAW,CAAC,CAChC;QACD,IAAI,CAACC,IAAI,CAAC,QAAQ,CAAC;QACnB,IAAI,CAACA,IAAI,IAAAd,MAAA,CAAIH,KAAK,OAAAG,MAAA,CAAIF,IAAI,CAAE,CAAC;MAC9B,CAAC,CAAC;IACH,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAU,IAAI;MACrBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACJ;CACA,CAAC,CAAE;AA5CJ9B,MAAA,CAAOgC,aAAW,CA8CH1B,0BA9CS","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a25340aa1b96b2abf138aac801d4b54b4fefd919"}
