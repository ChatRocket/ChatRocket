{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/v1/agent.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/livechat/server/api/v1/agent.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/v1/agent.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/v1/agent.ts","sourceRoot":"","sources":["app/livechat/server/api/v1/agent.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatAgent } from '@rocket.chat/core-typings';\nimport { ILivechatAgentStatus } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport { isGETAgentNextToken, isPOSTLivechatAgentStatusProps } from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../api/server';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { Livechat as LivechatTyped } from '../../lib/LivechatTyped';\nimport { RoutingManager } from '../../lib/RoutingManager';\nimport { getRequiredDepartment } from '../../lib/departmentsLib';\nimport { findRoom, findGuest, findAgent, findOpenRoom } from '../lib/livechat';\n\nAPI.v1.addRoute('livechat/agent.info/:rid/:token', {\n\tasync get() {\n\t\tconst visitor = await findGuest(this.urlParams.token);\n\t\tif (!visitor) {\n\t\t\tthrow new Error('invalid-token');\n\t\t}\n\n\t\tconst room = await findRoom(this.urlParams.token, this.urlParams.rid);\n\t\tif (!room) {\n\t\t\tthrow new Error('invalid-room');\n\t\t}\n\n\t\tconst agent = room?.servedBy && (await findAgent(room.servedBy._id));\n\t\tif (!agent) {\n\t\t\tthrow new Error('invalid-agent');\n\t\t}\n\n\t\treturn API.v1.success({ agent });\n\t},\n});\n\nAPI.v1.addRoute(\n\t'livechat/agent.next/:token',\n\t{ validateParams: isGETAgentNextToken },\n\t{\n\t\tasync get() {\n\t\t\tconst { token } = this.urlParams;\n\t\t\tconst room = await findOpenRoom(token);\n\t\t\tif (room) {\n\t\t\t\treturn API.v1.success();\n\t\t\t}\n\n\t\t\tlet { department } = this.queryParams;\n\t\t\tif (!department) {\n\t\t\t\tconst requireDepartment = await getRequiredDepartment();\n\t\t\t\tif (requireDepartment) {\n\t\t\t\t\tdepartment = requireDepartment._id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst agentData = await RoutingManager.getNextAgent(department);\n\t\t\tif (!agentData) {\n\t\t\t\tthrow new Error('agent-not-found');\n\t\t\t}\n\n\t\t\tconst agent = await findAgent(agentData.agentId);\n\t\t\tif (!agent) {\n\t\t\t\tthrow new Error('invalid-agent');\n\t\t\t}\n\n\t\t\treturn API.v1.success({ agent });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/agent.status',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isPOSTLivechatAgentStatusProps },\n\t{\n\t\tasync post() {\n\t\t\tconst { status, agentId: inputAgentId } = this.bodyParams;\n\n\t\t\tconst agentId = inputAgentId || this.userId;\n\n\t\t\tconst agent = await Users.findOneAgentById<Pick<ILivechatAgent, 'status' | 'statusLivechat' | 'active'>>(agentId, {\n\t\t\t\tprojection: {\n\t\t\t\t\tstatus: 1,\n\t\t\t\t\tstatusLivechat: 1,\n\t\t\t\t\tactive: 1,\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (!agent) {\n\t\t\t\treturn API.v1.notFound('Agent not found');\n\t\t\t}\n\n\t\t\tif (!agent.active) {\n\t\t\t\treturn API.v1.failure('error-user-deactivated');\n\t\t\t}\n\n\t\t\tconst newStatus: ILivechatAgentStatus =\n\t\t\t\tstatus ||\n\t\t\t\t(agent.statusLivechat === ILivechatAgentStatus.AVAILABLE ? ILivechatAgentStatus.NOT_AVAILABLE : ILivechatAgentStatus.AVAILABLE);\n\t\t\tif (newStatus === agent.statusLivechat) {\n\t\t\t\treturn API.v1.success({ status: agent.statusLivechat });\n\t\t\t}\n\n\t\t\tconst canChangeStatus = await LivechatTyped.allowAgentChangeServiceStatus(newStatus, agentId);\n\n\t\t\tif (agentId !== this.userId) {\n\t\t\t\tif (!(await hasPermissionAsync(this.userId, 'manage-livechat-agents'))) {\n\t\t\t\t\treturn API.v1.forbidden();\n\t\t\t\t}\n\n\t\t\t\t// Silent fail for admins when BH is closed\n\t\t\t\t// Next version we'll update this to return an error\n\t\t\t\t// And update the FE accordingly\n\t\t\t\tif (canChangeStatus) {\n\t\t\t\t\tawait LivechatTyped.setUserStatusLivechat(agentId, newStatus);\n\t\t\t\t\treturn API.v1.success({ status: newStatus });\n\t\t\t\t}\n\n\t\t\t\treturn API.v1.success({ status: agent.statusLivechat });\n\t\t\t}\n\n\t\t\tif (!canChangeStatus) {\n\t\t\t\treturn API.v1.failure('error-business-hours-are-closed');\n\t\t\t}\n\n\t\t\tawait LivechatTyped.setUserStatusLivechat(agentId, newStatus);\n\n\t\t\treturn API.v1.success({ status: newStatus });\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/livechat/server/api/v1/agent.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/livechat/server/api/v1/agent.ts","inputSourceMap":{"version":3,"file":"app/livechat/server/api/v1/agent.ts","sourceRoot":"","sources":["app/livechat/server/api/v1/agent.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatAgent } from '@rocket.chat/core-typings';\nimport { ILivechatAgentStatus } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport { isGETAgentNextToken, isPOSTLivechatAgentStatusProps } from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../api/server';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { Livechat as LivechatTyped } from '../../lib/LivechatTyped';\nimport { RoutingManager } from '../../lib/RoutingManager';\nimport { getRequiredDepartment } from '../../lib/departmentsLib';\nimport { findRoom, findGuest, findAgent, findOpenRoom } from '../lib/livechat';\n\nAPI.v1.addRoute('livechat/agent.info/:rid/:token', {\n\tasync get() {\n\t\tconst visitor = await findGuest(this.urlParams.token);\n\t\tif (!visitor) {\n\t\t\tthrow new Error('invalid-token');\n\t\t}\n\n\t\tconst room = await findRoom(this.urlParams.token, this.urlParams.rid);\n\t\tif (!room) {\n\t\t\tthrow new Error('invalid-room');\n\t\t}\n\n\t\tconst agent = room?.servedBy && (await findAgent(room.servedBy._id));\n\t\tif (!agent) {\n\t\t\tthrow new Error('invalid-agent');\n\t\t}\n\n\t\treturn API.v1.success({ agent });\n\t},\n});\n\nAPI.v1.addRoute(\n\t'livechat/agent.next/:token',\n\t{ validateParams: isGETAgentNextToken },\n\t{\n\t\tasync get() {\n\t\t\tconst { token } = this.urlParams;\n\t\t\tconst room = await findOpenRoom(token);\n\t\t\tif (room) {\n\t\t\t\treturn API.v1.success();\n\t\t\t}\n\n\t\t\tlet { department } = this.queryParams;\n\t\t\tif (!department) {\n\t\t\t\tconst requireDepartment = await getRequiredDepartment();\n\t\t\t\tif (requireDepartment) {\n\t\t\t\t\tdepartment = requireDepartment._id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst agentData = await RoutingManager.getNextAgent(department);\n\t\t\tif (!agentData) {\n\t\t\t\tthrow new Error('agent-not-found');\n\t\t\t}\n\n\t\t\tconst agent = await findAgent(agentData.agentId);\n\t\t\tif (!agent) {\n\t\t\t\tthrow new Error('invalid-agent');\n\t\t\t}\n\n\t\t\treturn API.v1.success({ agent });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/agent.status',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isPOSTLivechatAgentStatusProps },\n\t{\n\t\tasync post() {\n\t\t\tconst { status, agentId: inputAgentId } = this.bodyParams;\n\n\t\t\tconst agentId = inputAgentId || this.userId;\n\n\t\t\tconst agent = await Users.findOneAgentById<Pick<ILivechatAgent, 'status' | 'statusLivechat' | 'active'>>(agentId, {\n\t\t\t\tprojection: {\n\t\t\t\t\tstatus: 1,\n\t\t\t\t\tstatusLivechat: 1,\n\t\t\t\t\tactive: 1,\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (!agent) {\n\t\t\t\treturn API.v1.notFound('Agent not found');\n\t\t\t}\n\n\t\t\tif (!agent.active) {\n\t\t\t\treturn API.v1.failure('error-user-deactivated');\n\t\t\t}\n\n\t\t\tconst newStatus: ILivechatAgentStatus =\n\t\t\t\tstatus ||\n\t\t\t\t(agent.statusLivechat === ILivechatAgentStatus.AVAILABLE ? ILivechatAgentStatus.NOT_AVAILABLE : ILivechatAgentStatus.AVAILABLE);\n\t\t\tif (newStatus === agent.statusLivechat) {\n\t\t\t\treturn API.v1.success({ status: agent.statusLivechat });\n\t\t\t}\n\n\t\t\tconst canChangeStatus = await LivechatTyped.allowAgentChangeServiceStatus(newStatus, agentId);\n\n\t\t\tif (agentId !== this.userId) {\n\t\t\t\tif (!(await hasPermissionAsync(this.userId, 'manage-livechat-agents'))) {\n\t\t\t\t\treturn API.v1.forbidden();\n\t\t\t\t}\n\n\t\t\t\t// Silent fail for admins when BH is closed\n\t\t\t\t// Next version we'll update this to return an error\n\t\t\t\t// And update the FE accordingly\n\t\t\t\tif (canChangeStatus) {\n\t\t\t\t\tawait LivechatTyped.setUserStatusLivechat(agentId, newStatus);\n\t\t\t\t\treturn API.v1.success({ status: newStatus });\n\t\t\t\t}\n\n\t\t\t\treturn API.v1.success({ status: agent.statusLivechat });\n\t\t\t}\n\n\t\t\tif (!canChangeStatus) {\n\t\t\t\treturn API.v1.failure('error-business-hours-are-closed');\n\t\t\t}\n\n\t\t\tawait LivechatTyped.setUserStatusLivechat(agentId, newStatus);\n\n\t\t\treturn API.v1.success({ status: newStatus });\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let ILivechatAgentStatus;\n    module.link(\"@rocket.chat/core-typings\", {\n      ILivechatAgentStatus(v) {\n        ILivechatAgentStatus = v;\n      }\n    }, 0);\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let isGETAgentNextToken, isPOSTLivechatAgentStatusProps;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isGETAgentNextToken(v) {\n        isGETAgentNextToken = v;\n      },\n      isPOSTLivechatAgentStatusProps(v) {\n        isPOSTLivechatAgentStatusProps = v;\n      }\n    }, 2);\n    let API;\n    module.link(\"../../../../api/server\", {\n      API(v) {\n        API = v;\n      }\n    }, 3);\n    let hasPermissionAsync;\n    module.link(\"../../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 4);\n    let LivechatTyped;\n    module.link(\"../../lib/LivechatTyped\", {\n      Livechat(v) {\n        LivechatTyped = v;\n      }\n    }, 5);\n    let RoutingManager;\n    module.link(\"../../lib/RoutingManager\", {\n      RoutingManager(v) {\n        RoutingManager = v;\n      }\n    }, 6);\n    let getRequiredDepartment;\n    module.link(\"../../lib/departmentsLib\", {\n      getRequiredDepartment(v) {\n        getRequiredDepartment = v;\n      }\n    }, 7);\n    let findRoom, findGuest, findAgent, findOpenRoom;\n    module.link(\"../lib/livechat\", {\n      findRoom(v) {\n        findRoom = v;\n      },\n      findGuest(v) {\n        findGuest = v;\n      },\n      findAgent(v) {\n        findAgent = v;\n      },\n      findOpenRoom(v) {\n        findOpenRoom = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('livechat/agent.info/:rid/:token', {\n      async get() {\n        const visitor = await findGuest(this.urlParams.token);\n        if (!visitor) {\n          throw new Error('invalid-token');\n        }\n        const room = await findRoom(this.urlParams.token, this.urlParams.rid);\n        if (!room) {\n          throw new Error('invalid-room');\n        }\n        const agent = (room === null || room === void 0 ? void 0 : room.servedBy) && (await findAgent(room.servedBy._id));\n        if (!agent) {\n          throw new Error('invalid-agent');\n        }\n        return API.v1.success({\n          agent\n        });\n      }\n    });\n    API.v1.addRoute('livechat/agent.next/:token', {\n      validateParams: isGETAgentNextToken\n    }, {\n      async get() {\n        const {\n          token\n        } = this.urlParams;\n        const room = await findOpenRoom(token);\n        if (room) {\n          return API.v1.success();\n        }\n        let {\n          department\n        } = this.queryParams;\n        if (!department) {\n          const requireDepartment = await getRequiredDepartment();\n          if (requireDepartment) {\n            department = requireDepartment._id;\n          }\n        }\n        const agentData = await RoutingManager.getNextAgent(department);\n        if (!agentData) {\n          throw new Error('agent-not-found');\n        }\n        const agent = await findAgent(agentData.agentId);\n        if (!agent) {\n          throw new Error('invalid-agent');\n        }\n        return API.v1.success({\n          agent\n        });\n      }\n    });\n    API.v1.addRoute('livechat/agent.status', {\n      authRequired: true,\n      permissionsRequired: ['view-l-room'],\n      validateParams: isPOSTLivechatAgentStatusProps\n    }, {\n      async post() {\n        const {\n          status,\n          agentId: inputAgentId\n        } = this.bodyParams;\n        const agentId = inputAgentId || this.userId;\n        const agent = await Users.findOneAgentById(agentId, {\n          projection: {\n            status: 1,\n            statusLivechat: 1,\n            active: 1\n          }\n        });\n        if (!agent) {\n          return API.v1.notFound('Agent not found');\n        }\n        if (!agent.active) {\n          return API.v1.failure('error-user-deactivated');\n        }\n        const newStatus = status || (agent.statusLivechat === ILivechatAgentStatus.AVAILABLE ? ILivechatAgentStatus.NOT_AVAILABLE : ILivechatAgentStatus.AVAILABLE);\n        if (newStatus === agent.statusLivechat) {\n          return API.v1.success({\n            status: agent.statusLivechat\n          });\n        }\n        const canChangeStatus = await LivechatTyped.allowAgentChangeServiceStatus(newStatus, agentId);\n        if (agentId !== this.userId) {\n          if (!(await hasPermissionAsync(this.userId, 'manage-livechat-agents'))) {\n            return API.v1.forbidden();\n          }\n          // Silent fail for admins when BH is closed\n          // Next version we'll update this to return an error\n          // And update the FE accordingly\n          if (canChangeStatus) {\n            await LivechatTyped.setUserStatusLivechat(agentId, newStatus);\n            return API.v1.success({\n              status: newStatus\n            });\n          }\n          return API.v1.success({\n            status: agent.statusLivechat\n          });\n        }\n        if (!canChangeStatus) {\n          return API.v1.failure('error-business-hours-are-closed');\n        }\n        await LivechatTyped.setUserStatusLivechat(agentId, newStatus);\n        return API.v1.success({\n          status: newStatus\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["ILivechatAgentStatus","module","link","v","Users","isGETAgentNextToken","isPOSTLivechatAgentStatusProps","API","hasPermissionAsync","LivechatTyped","Livechat","RoutingManager","getRequiredDepartment","findRoom","findGuest","findAgent","findOpenRoom","__reifyWaitForDeps__","v1","addRoute","get","visitor","urlParams","token","Error","room","rid","agent","servedBy","_id","success","validateParams","department","queryParams","requireDepartment","agentData","getNextAgent","agentId","authRequired","permissionsRequired","post","status","inputAgentId","bodyParams","userId","findOneAgentById","projection","statusLivechat","active","notFound","failure","newStatus","AVAILABLE","NOT_AVAILABLE","canChangeStatus","allowAgentChangeServiceStatus","forbidden","setUserStatusLivechat","__reify_async_result__","_reifyError","self","async"],"sources":["app/livechat/server/api/v1/agent.ts"],"sourcesContent":["import type { ILivechatAgent } from '@rocket.chat/core-typings';\nimport { ILivechatAgentStatus } from '@rocket.chat/core-typings';\nimport { Users } from '@rocket.chat/models';\nimport { isGETAgentNextToken, isPOSTLivechatAgentStatusProps } from '@rocket.chat/rest-typings';\n\nimport { API } from '../../../../api/server';\nimport { hasPermissionAsync } from '../../../../authorization/server/functions/hasPermission';\nimport { Livechat as LivechatTyped } from '../../lib/LivechatTyped';\nimport { RoutingManager } from '../../lib/RoutingManager';\nimport { getRequiredDepartment } from '../../lib/departmentsLib';\nimport { findRoom, findGuest, findAgent, findOpenRoom } from '../lib/livechat';\n\nAPI.v1.addRoute('livechat/agent.info/:rid/:token', {\n\tasync get() {\n\t\tconst visitor = await findGuest(this.urlParams.token);\n\t\tif (!visitor) {\n\t\t\tthrow new Error('invalid-token');\n\t\t}\n\n\t\tconst room = await findRoom(this.urlParams.token, this.urlParams.rid);\n\t\tif (!room) {\n\t\t\tthrow new Error('invalid-room');\n\t\t}\n\n\t\tconst agent = room?.servedBy && (await findAgent(room.servedBy._id));\n\t\tif (!agent) {\n\t\t\tthrow new Error('invalid-agent');\n\t\t}\n\n\t\treturn API.v1.success({ agent });\n\t},\n});\n\nAPI.v1.addRoute(\n\t'livechat/agent.next/:token',\n\t{ validateParams: isGETAgentNextToken },\n\t{\n\t\tasync get() {\n\t\t\tconst { token } = this.urlParams;\n\t\t\tconst room = await findOpenRoom(token);\n\t\t\tif (room) {\n\t\t\t\treturn API.v1.success();\n\t\t\t}\n\n\t\t\tlet { department } = this.queryParams;\n\t\t\tif (!department) {\n\t\t\t\tconst requireDepartment = await getRequiredDepartment();\n\t\t\t\tif (requireDepartment) {\n\t\t\t\t\tdepartment = requireDepartment._id;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst agentData = await RoutingManager.getNextAgent(department);\n\t\t\tif (!agentData) {\n\t\t\t\tthrow new Error('agent-not-found');\n\t\t\t}\n\n\t\t\tconst agent = await findAgent(agentData.agentId);\n\t\t\tif (!agent) {\n\t\t\t\tthrow new Error('invalid-agent');\n\t\t\t}\n\n\t\t\treturn API.v1.success({ agent });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'livechat/agent.status',\n\t{ authRequired: true, permissionsRequired: ['view-l-room'], validateParams: isPOSTLivechatAgentStatusProps },\n\t{\n\t\tasync post() {\n\t\t\tconst { status, agentId: inputAgentId } = this.bodyParams;\n\n\t\t\tconst agentId = inputAgentId || this.userId;\n\n\t\t\tconst agent = await Users.findOneAgentById<Pick<ILivechatAgent, 'status' | 'statusLivechat' | 'active'>>(agentId, {\n\t\t\t\tprojection: {\n\t\t\t\t\tstatus: 1,\n\t\t\t\t\tstatusLivechat: 1,\n\t\t\t\t\tactive: 1,\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (!agent) {\n\t\t\t\treturn API.v1.notFound('Agent not found');\n\t\t\t}\n\n\t\t\tif (!agent.active) {\n\t\t\t\treturn API.v1.failure('error-user-deactivated');\n\t\t\t}\n\n\t\t\tconst newStatus: ILivechatAgentStatus =\n\t\t\t\tstatus ||\n\t\t\t\t(agent.statusLivechat === ILivechatAgentStatus.AVAILABLE ? ILivechatAgentStatus.NOT_AVAILABLE : ILivechatAgentStatus.AVAILABLE);\n\t\t\tif (newStatus === agent.statusLivechat) {\n\t\t\t\treturn API.v1.success({ status: agent.statusLivechat });\n\t\t\t}\n\n\t\t\tconst canChangeStatus = await LivechatTyped.allowAgentChangeServiceStatus(newStatus, agentId);\n\n\t\t\tif (agentId !== this.userId) {\n\t\t\t\tif (!(await hasPermissionAsync(this.userId, 'manage-livechat-agents'))) {\n\t\t\t\t\treturn API.v1.forbidden();\n\t\t\t\t}\n\n\t\t\t\t// Silent fail for admins when BH is closed\n\t\t\t\t// Next version we'll update this to return an error\n\t\t\t\t// And update the FE accordingly\n\t\t\t\tif (canChangeStatus) {\n\t\t\t\t\tawait LivechatTyped.setUserStatusLivechat(agentId, newStatus);\n\t\t\t\t\treturn API.v1.success({ status: newStatus });\n\t\t\t\t}\n\n\t\t\t\treturn API.v1.success({ status: agent.statusLivechat });\n\t\t\t}\n\n\t\t\tif (!canChangeStatus) {\n\t\t\t\treturn API.v1.failure('error-business-hours-are-closed');\n\t\t\t}\n\n\t\t\tawait LivechatTyped.setUserStatusLivechat(agentId, newStatus);\n\n\t\t\treturn API.v1.success({ status: newStatus });\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d9a3c8760f2d8a037d164c82babfd52ad75ceec8"}
