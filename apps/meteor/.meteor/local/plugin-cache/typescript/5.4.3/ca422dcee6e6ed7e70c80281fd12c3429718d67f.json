{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useOpenRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/views/room/hooks/useOpenRoom.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useOpenRoom.ts","inputSourceMap":{"version":3,"file":"client/views/room/hooks/useOpenRoom.ts","sourceRoot":"","sources":["client/views/room/hooks/useOpenRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, RoomType } from '@rocket.chat/core-typings';\nimport { useMethod, useRoute, useSetting, useUser } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useRef } from 'react';\n\nimport { roomFields } from '../../../../lib/publishFields';\nimport { omit } from '../../../../lib/utils/omit';\nimport { NotAuthorizedError } from '../../../lib/errors/NotAuthorizedError';\nimport { OldUrlRoomError } from '../../../lib/errors/OldUrlRoomError';\nimport { RoomNotFoundError } from '../../../lib/errors/RoomNotFoundError';\nimport { queryClient } from '../../../lib/queryClient';\n\nexport function useOpenRoom({ type, reference }: { type: RoomType; reference: string }) {\n\tconst user = useUser();\n\tconst allowAnonymousRead = useSetting<boolean>('Accounts_AllowAnonymousRead') ?? true;\n\tconst getRoomByTypeAndName = useMethod('getRoomByTypeAndName');\n\tconst createDirectMessage = useMethod('createDirectMessage');\n\tconst openRoom = useMethod('openRoom');\n\tconst directRoute = useRoute('direct');\n\n\tconst unsubscribeFromRoomOpenedEvent = useRef<() => void>(() => undefined);\n\n\treturn useQuery(\n\t\t// we need to add uid and username here because `user` is not loaded all at once (see UserProvider -> Meteor.user())\n\t\t['rooms', { reference, type }, { uid: user?._id, username: user?.username }] as const,\n\t\tasync (): Promise<{ rid: IRoom['_id'] }> => {\n\t\t\tif ((user && !user.username) || (!user && !allowAnonymousRead)) {\n\t\t\t\tthrow new NotAuthorizedError();\n\t\t\t}\n\n\t\t\tlet roomData;\n\t\t\ttry {\n\t\t\t\troomData = await getRoomByTypeAndName(type, reference);\n\t\t\t} catch (error) {\n\t\t\t\tif (type !== 'd') {\n\t\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { rid } = await createDirectMessage(...reference.split(', '));\n\t\t\t\t\tconst { ChatSubscription } = await import('../../../../app/models/client');\n\t\t\t\t\tconst { waitUntilFind } = await import('../../../lib/utils/waitUntilFind');\n\t\t\t\t\tawait waitUntilFind(() => ChatSubscription.findOne({ rid }));\n\t\t\t\t\tdirectRoute.push({ rid }, (prev) => prev);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t\t}\n\n\t\t\t\tthrow new OldUrlRoomError(undefined, { type, reference });\n\t\t\t}\n\n\t\t\tif (!roomData._id) {\n\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t}\n\n\t\t\tconst $set: any = {};\n\t\t\tconst $unset: any = {};\n\n\t\t\tfor (const key of Object.keys(roomFields)) {\n\t\t\t\tif (key in roomData) {\n\t\t\t\t\t$set[key] = roomData[key as keyof typeof roomData];\n\t\t\t\t} else {\n\t\t\t\t\t$unset[key] = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst { ChatRoom, ChatSubscription } = await import('../../../../app/models/client');\n\n\t\t\tChatRoom.upsert({ _id: roomData._id }, { $set, $unset });\n\t\t\tconst room = ChatRoom.findOne({ _id: roomData._id });\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new TypeError('room is undefined');\n\t\t\t}\n\n\t\t\tconst { LegacyRoomManager } = await import('../../../../app/ui-utils/client');\n\n\t\t\tif (reference !== undefined && room._id !== reference && type === 'd') {\n\t\t\t\t// Redirect old url using username to rid\n\t\t\t\tawait LegacyRoomManager.close(type + reference);\n\t\t\t\tdirectRoute.push({ rid: room._id }, (prev) => prev);\n\t\t\t\tthrow new OldUrlRoomError(undefined, { rid: room._id });\n\t\t\t}\n\n\t\t\tconst { RoomManager } = await import('../../../lib/RoomManager');\n\t\t\tconst { fireGlobalEvent } = await import('../../../lib/utils/fireGlobalEvent');\n\n\t\t\tunsubscribeFromRoomOpenedEvent.current();\n\t\t\tunsubscribeFromRoomOpenedEvent.current = RoomManager.once('opened', () => fireGlobalEvent('room-opened', omit(room, 'usernames')));\n\n\t\t\tLegacyRoomManager.open({ typeName: type + reference, rid: room._id });\n\n\t\t\tif (room._id === RoomManager.opened) {\n\t\t\t\treturn { rid: room._id };\n\t\t\t}\n\n\t\t\t// update user's room subscription\n\t\t\tconst sub = ChatSubscription.findOne({ rid: room._id });\n\t\t\tif (sub && !sub.open) {\n\t\t\t\tawait openRoom(room._id);\n\t\t\t}\n\t\t\treturn { rid: room._id };\n\t\t},\n\t\t{\n\t\t\tretry: 0,\n\t\t\tonError: async (error) => {\n\t\t\t\tif (['l', 'v'].includes(type) && error instanceof RoomNotFoundError) {\n\t\t\t\t\tconst { ChatRoom } = await import('../../../../app/models/client');\n\n\t\t\t\t\tChatRoom.remove(reference);\n\t\t\t\t\tqueryClient.removeQueries(['rooms', reference]);\n\t\t\t\t\tqueryClient.removeQueries(['/v1/rooms.info', reference]);\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t);\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/room/hooks/useOpenRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/room/hooks/useOpenRoom.ts","inputSourceMap":{"version":3,"file":"client/views/room/hooks/useOpenRoom.ts","sourceRoot":"","sources":["client/views/room/hooks/useOpenRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRoom, RoomType } from '@rocket.chat/core-typings';\nimport { useMethod, useRoute, useSetting, useUser } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useRef } from 'react';\n\nimport { roomFields } from '../../../../lib/publishFields';\nimport { omit } from '../../../../lib/utils/omit';\nimport { NotAuthorizedError } from '../../../lib/errors/NotAuthorizedError';\nimport { OldUrlRoomError } from '../../../lib/errors/OldUrlRoomError';\nimport { RoomNotFoundError } from '../../../lib/errors/RoomNotFoundError';\nimport { queryClient } from '../../../lib/queryClient';\n\nexport function useOpenRoom({ type, reference }: { type: RoomType; reference: string }) {\n\tconst user = useUser();\n\tconst allowAnonymousRead = useSetting<boolean>('Accounts_AllowAnonymousRead') ?? true;\n\tconst getRoomByTypeAndName = useMethod('getRoomByTypeAndName');\n\tconst createDirectMessage = useMethod('createDirectMessage');\n\tconst openRoom = useMethod('openRoom');\n\tconst directRoute = useRoute('direct');\n\n\tconst unsubscribeFromRoomOpenedEvent = useRef<() => void>(() => undefined);\n\n\treturn useQuery(\n\t\t// we need to add uid and username here because `user` is not loaded all at once (see UserProvider -> Meteor.user())\n\t\t['rooms', { reference, type }, { uid: user?._id, username: user?.username }] as const,\n\t\tasync (): Promise<{ rid: IRoom['_id'] }> => {\n\t\t\tif ((user && !user.username) || (!user && !allowAnonymousRead)) {\n\t\t\t\tthrow new NotAuthorizedError();\n\t\t\t}\n\n\t\t\tlet roomData;\n\t\t\ttry {\n\t\t\t\troomData = await getRoomByTypeAndName(type, reference);\n\t\t\t} catch (error) {\n\t\t\t\tif (type !== 'd') {\n\t\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { rid } = await createDirectMessage(...reference.split(', '));\n\t\t\t\t\tconst { ChatSubscription } = await import('../../../../app/models/client');\n\t\t\t\t\tconst { waitUntilFind } = await import('../../../lib/utils/waitUntilFind');\n\t\t\t\t\tawait waitUntilFind(() => ChatSubscription.findOne({ rid }));\n\t\t\t\t\tdirectRoute.push({ rid }, (prev) => prev);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t\t}\n\n\t\t\t\tthrow new OldUrlRoomError(undefined, { type, reference });\n\t\t\t}\n\n\t\t\tif (!roomData._id) {\n\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t}\n\n\t\t\tconst $set: any = {};\n\t\t\tconst $unset: any = {};\n\n\t\t\tfor (const key of Object.keys(roomFields)) {\n\t\t\t\tif (key in roomData) {\n\t\t\t\t\t$set[key] = roomData[key as keyof typeof roomData];\n\t\t\t\t} else {\n\t\t\t\t\t$unset[key] = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst { ChatRoom, ChatSubscription } = await import('../../../../app/models/client');\n\n\t\t\tChatRoom.upsert({ _id: roomData._id }, { $set, $unset });\n\t\t\tconst room = ChatRoom.findOne({ _id: roomData._id });\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new TypeError('room is undefined');\n\t\t\t}\n\n\t\t\tconst { LegacyRoomManager } = await import('../../../../app/ui-utils/client');\n\n\t\t\tif (reference !== undefined && room._id !== reference && type === 'd') {\n\t\t\t\t// Redirect old url using username to rid\n\t\t\t\tawait LegacyRoomManager.close(type + reference);\n\t\t\t\tdirectRoute.push({ rid: room._id }, (prev) => prev);\n\t\t\t\tthrow new OldUrlRoomError(undefined, { rid: room._id });\n\t\t\t}\n\n\t\t\tconst { RoomManager } = await import('../../../lib/RoomManager');\n\t\t\tconst { fireGlobalEvent } = await import('../../../lib/utils/fireGlobalEvent');\n\n\t\t\tunsubscribeFromRoomOpenedEvent.current();\n\t\t\tunsubscribeFromRoomOpenedEvent.current = RoomManager.once('opened', () => fireGlobalEvent('room-opened', omit(room, 'usernames')));\n\n\t\t\tLegacyRoomManager.open({ typeName: type + reference, rid: room._id });\n\n\t\t\tif (room._id === RoomManager.opened) {\n\t\t\t\treturn { rid: room._id };\n\t\t\t}\n\n\t\t\t// update user's room subscription\n\t\t\tconst sub = ChatSubscription.findOne({ rid: room._id });\n\t\t\tif (sub && !sub.open) {\n\t\t\t\tawait openRoom(room._id);\n\t\t\t}\n\t\t\treturn { rid: room._id };\n\t\t},\n\t\t{\n\t\t\tretry: 0,\n\t\t\tonError: async (error) => {\n\t\t\t\tif (['l', 'v'].includes(type) && error instanceof RoomNotFoundError) {\n\t\t\t\t\tconst { ChatRoom } = await import('../../../../app/models/client');\n\n\t\t\t\t\tChatRoom.remove(reference);\n\t\t\t\t\tqueryClient.removeQueries(['rooms', reference]);\n\t\t\t\t\tqueryClient.removeQueries(['/v1/rooms.info', reference]);\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t);\n}\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _toConsumableArray;\nmodule.link(\"@babel/runtime/helpers/toConsumableArray\", {\n  default: function (v) {\n    _toConsumableArray = v;\n  }\n}, 1);\nmodule.export({\n  useOpenRoom: function () {\n    return useOpenRoom;\n  }\n});\nvar useMethod, useRoute, useSetting, useUser;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useMethod: function (v) {\n    useMethod = v;\n  },\n  useRoute: function (v) {\n    useRoute = v;\n  },\n  useSetting: function (v) {\n    useSetting = v;\n  },\n  useUser: function (v) {\n    useUser = v;\n  }\n}, 0);\nvar useQuery;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery: function (v) {\n    useQuery = v;\n  }\n}, 1);\nvar useRef;\nmodule.link(\"react\", {\n  useRef: function (v) {\n    useRef = v;\n  }\n}, 2);\nvar roomFields;\nmodule.link(\"../../../../lib/publishFields\", {\n  roomFields: function (v) {\n    roomFields = v;\n  }\n}, 3);\nvar omit;\nmodule.link(\"../../../../lib/utils/omit\", {\n  omit: function (v) {\n    omit = v;\n  }\n}, 4);\nvar NotAuthorizedError;\nmodule.link(\"../../../lib/errors/NotAuthorizedError\", {\n  NotAuthorizedError: function (v) {\n    NotAuthorizedError = v;\n  }\n}, 5);\nvar OldUrlRoomError;\nmodule.link(\"../../../lib/errors/OldUrlRoomError\", {\n  OldUrlRoomError: function (v) {\n    OldUrlRoomError = v;\n  }\n}, 6);\nvar RoomNotFoundError;\nmodule.link(\"../../../lib/errors/RoomNotFoundError\", {\n  RoomNotFoundError: function (v) {\n    RoomNotFoundError = v;\n  }\n}, 7);\nvar queryClient;\nmodule.link(\"../../../lib/queryClient\", {\n  queryClient: function (v) {\n    queryClient = v;\n  }\n}, 8);\nfunction useOpenRoom(_ref) {\n  var _useSetting;\n  var type = _ref.type,\n    reference = _ref.reference;\n  var user = useUser();\n  var allowAnonymousRead = (_useSetting = useSetting('Accounts_AllowAnonymousRead')) !== null && _useSetting !== void 0 ? _useSetting : true;\n  var getRoomByTypeAndName = useMethod('getRoomByTypeAndName');\n  var createDirectMessage = useMethod('createDirectMessage');\n  var openRoom = useMethod('openRoom');\n  var directRoute = useRoute('direct');\n  var unsubscribeFromRoomOpenedEvent = useRef(function () {\n    return undefined;\n  });\n  return useQuery(\n  // we need to add uid and username here because `user` is not loaded all at once (see UserProvider -> Meteor.user())\n  ['rooms', {\n    reference: reference,\n    type: type\n  }, {\n    uid: user === null || user === void 0 ? void 0 : user._id,\n    username: user === null || user === void 0 ? void 0 : user.username\n  }], function () {\n    function _callee() {\n      var roomData, _await$createDirectMe, rid, _await$module$dynamic, _ChatSubscription, _await$module$dynamic2, waitUntilFind, $set, $unset, _i, _Object$keys, key, _await$module$dynamic3, ChatRoom, ChatSubscription, room, _await$module$dynamic4, LegacyRoomManager, _await$module$dynamic5, RoomManager, _await$module$dynamic6, fireGlobalEvent, sub;\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(user && !user.username || !user && !allowAnonymousRead)) {\n                _context.next = 2;\n                break;\n              }\n              throw new NotAuthorizedError();\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(getRoomByTypeAndName(type, reference));\n            case 5:\n              roomData = _context.sent;\n              _context.next = 34;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              if (!(type !== 'd')) {\n                _context.next = 12;\n                break;\n              }\n              throw new RoomNotFoundError(undefined, {\n                type: type,\n                reference: reference\n              });\n            case 12:\n              _context.prev = 12;\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(createDirectMessage.apply(void 0, _toConsumableArray(reference.split(', '))));\n            case 15:\n              _await$createDirectMe = _context.sent;\n              rid = _await$createDirectMe.rid;\n              _context.next = 19;\n              return _regeneratorRuntime.awrap(module.dynamicImport('../../../../app/models/client'));\n            case 19:\n              _await$module$dynamic = _context.sent;\n              _ChatSubscription = _await$module$dynamic.ChatSubscription;\n              _context.next = 23;\n              return _regeneratorRuntime.awrap(module.dynamicImport('../../../lib/utils/waitUntilFind'));\n            case 23:\n              _await$module$dynamic2 = _context.sent;\n              waitUntilFind = _await$module$dynamic2.waitUntilFind;\n              _context.next = 27;\n              return _regeneratorRuntime.awrap(waitUntilFind(function () {\n                return _ChatSubscription.findOne({\n                  rid: rid\n                });\n              }));\n            case 27:\n              directRoute.push({\n                rid: rid\n              }, function (prev) {\n                return prev;\n              });\n              _context.next = 33;\n              break;\n            case 30:\n              _context.prev = 30;\n              _context.t1 = _context[\"catch\"](12);\n              throw new RoomNotFoundError(undefined, {\n                type: type,\n                reference: reference\n              });\n            case 33:\n              throw new OldUrlRoomError(undefined, {\n                type: type,\n                reference: reference\n              });\n            case 34:\n              if (roomData._id) {\n                _context.next = 36;\n                break;\n              }\n              throw new RoomNotFoundError(undefined, {\n                type: type,\n                reference: reference\n              });\n            case 36:\n              $set = {};\n              $unset = {};\n              for (_i = 0, _Object$keys = Object.keys(roomFields); _i < _Object$keys.length; _i++) {\n                key = _Object$keys[_i];\n                if (key in roomData) {\n                  $set[key] = roomData[key];\n                } else {\n                  $unset[key] = '';\n                }\n              }\n              _context.next = 41;\n              return _regeneratorRuntime.awrap(module.dynamicImport('../../../../app/models/client'));\n            case 41:\n              _await$module$dynamic3 = _context.sent;\n              ChatRoom = _await$module$dynamic3.ChatRoom;\n              ChatSubscription = _await$module$dynamic3.ChatSubscription;\n              ChatRoom.upsert({\n                _id: roomData._id\n              }, {\n                $set: $set,\n                $unset: $unset\n              });\n              room = ChatRoom.findOne({\n                _id: roomData._id\n              });\n              if (room) {\n                _context.next = 48;\n                break;\n              }\n              throw new TypeError('room is undefined');\n            case 48:\n              _context.next = 50;\n              return _regeneratorRuntime.awrap(module.dynamicImport('../../../../app/ui-utils/client'));\n            case 50:\n              _await$module$dynamic4 = _context.sent;\n              LegacyRoomManager = _await$module$dynamic4.LegacyRoomManager;\n              if (!(reference !== undefined && room._id !== reference && type === 'd')) {\n                _context.next = 57;\n                break;\n              }\n              _context.next = 55;\n              return _regeneratorRuntime.awrap(LegacyRoomManager.close(type + reference));\n            case 55:\n              directRoute.push({\n                rid: room._id\n              }, function (prev) {\n                return prev;\n              });\n              throw new OldUrlRoomError(undefined, {\n                rid: room._id\n              });\n            case 57:\n              _context.next = 59;\n              return _regeneratorRuntime.awrap(module.dynamicImport('../../../lib/RoomManager'));\n            case 59:\n              _await$module$dynamic5 = _context.sent;\n              RoomManager = _await$module$dynamic5.RoomManager;\n              _context.next = 63;\n              return _regeneratorRuntime.awrap(module.dynamicImport('../../../lib/utils/fireGlobalEvent'));\n            case 63:\n              _await$module$dynamic6 = _context.sent;\n              fireGlobalEvent = _await$module$dynamic6.fireGlobalEvent;\n              unsubscribeFromRoomOpenedEvent.current();\n              unsubscribeFromRoomOpenedEvent.current = RoomManager.once('opened', function () {\n                return fireGlobalEvent('room-opened', omit(room, 'usernames'));\n              });\n              LegacyRoomManager.open({\n                typeName: type + reference,\n                rid: room._id\n              });\n              if (!(room._id === RoomManager.opened)) {\n                _context.next = 70;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                rid: room._id\n              });\n            case 70:\n              // update user's room subscription\n              sub = ChatSubscription.findOne({\n                rid: room._id\n              });\n              if (!(sub && !sub.open)) {\n                _context.next = 74;\n                break;\n              }\n              _context.next = 74;\n              return _regeneratorRuntime.awrap(openRoom(room._id));\n            case 74:\n              return _context.abrupt(\"return\", {\n                rid: room._id\n              });\n            case 75:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return _callee$;\n      }(), null, null, [[2, 8], [12, 30]], Promise);\n    }\n    return _callee;\n  }(), {\n    retry: 0,\n    onError: function () {\n      function _callee2(error) {\n        var _await$module$dynamic7, ChatRoom;\n        return _regeneratorRuntime.async(function () {\n          function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(['l', 'v'].includes(type) && error instanceof RoomNotFoundError)) {\n                  _context2.next = 8;\n                  break;\n                }\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(module.dynamicImport('../../../../app/models/client'));\n              case 3:\n                _await$module$dynamic7 = _context2.sent;\n                ChatRoom = _await$module$dynamic7.ChatRoom;\n                ChatRoom.remove(reference);\n                queryClient.removeQueries(['rooms', reference]);\n                queryClient.removeQueries(['/v1/rooms.info', reference]);\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n          return _callee2$;\n        }(), null, null, null, Promise);\n      }\n      return _callee2;\n    }()\n  });\n}","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_toConsumableArray","export","useOpenRoom","useMethod","useRoute","useSetting","useUser","useQuery","useRef","roomFields","omit","NotAuthorizedError","OldUrlRoomError","RoomNotFoundError","queryClient","_ref","_useSetting","type","reference","user","allowAnonymousRead","getRoomByTypeAndName","createDirectMessage","openRoom","directRoute","unsubscribeFromRoomOpenedEvent","undefined","uid","_id","username","_callee","roomData","_await$createDirectMe","rid","_await$module$dynamic","_ChatSubscription","_await$module$dynamic2","waitUntilFind","$set","$unset","_i","_Object$keys","key","_await$module$dynamic3","ChatRoom","ChatSubscription","room","_await$module$dynamic4","LegacyRoomManager","_await$module$dynamic5","RoomManager","_await$module$dynamic6","fireGlobalEvent","sub","async","_callee$","_context","prev","next","awrap","sent","t0","apply","split","dynamicImport","findOne","push","t1","Object","keys","length","upsert","TypeError","close","current","once","open","typeName","opened","abrupt","stop","Promise","retry","onError","_callee2","error","_await$module$dynamic7","_callee2$","_context2","includes","remove","removeQueries"],"sources":["client/views/room/hooks/useOpenRoom.ts"],"sourcesContent":["import type { IRoom, RoomType } from '@rocket.chat/core-typings';\nimport { useMethod, useRoute, useSetting, useUser } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useRef } from 'react';\n\nimport { roomFields } from '../../../../lib/publishFields';\nimport { omit } from '../../../../lib/utils/omit';\nimport { NotAuthorizedError } from '../../../lib/errors/NotAuthorizedError';\nimport { OldUrlRoomError } from '../../../lib/errors/OldUrlRoomError';\nimport { RoomNotFoundError } from '../../../lib/errors/RoomNotFoundError';\nimport { queryClient } from '../../../lib/queryClient';\n\nexport function useOpenRoom({ type, reference }: { type: RoomType; reference: string }) {\n\tconst user = useUser();\n\tconst allowAnonymousRead = useSetting<boolean>('Accounts_AllowAnonymousRead') ?? true;\n\tconst getRoomByTypeAndName = useMethod('getRoomByTypeAndName');\n\tconst createDirectMessage = useMethod('createDirectMessage');\n\tconst openRoom = useMethod('openRoom');\n\tconst directRoute = useRoute('direct');\n\n\tconst unsubscribeFromRoomOpenedEvent = useRef<() => void>(() => undefined);\n\n\treturn useQuery(\n\t\t// we need to add uid and username here because `user` is not loaded all at once (see UserProvider -> Meteor.user())\n\t\t['rooms', { reference, type }, { uid: user?._id, username: user?.username }] as const,\n\t\tasync (): Promise<{ rid: IRoom['_id'] }> => {\n\t\t\tif ((user && !user.username) || (!user && !allowAnonymousRead)) {\n\t\t\t\tthrow new NotAuthorizedError();\n\t\t\t}\n\n\t\t\tlet roomData;\n\t\t\ttry {\n\t\t\t\troomData = await getRoomByTypeAndName(type, reference);\n\t\t\t} catch (error) {\n\t\t\t\tif (type !== 'd') {\n\t\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { rid } = await createDirectMessage(...reference.split(', '));\n\t\t\t\t\tconst { ChatSubscription } = await import('../../../../app/models/client');\n\t\t\t\t\tconst { waitUntilFind } = await import('../../../lib/utils/waitUntilFind');\n\t\t\t\t\tawait waitUntilFind(() => ChatSubscription.findOne({ rid }));\n\t\t\t\t\tdirectRoute.push({ rid }, (prev) => prev);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t\t}\n\n\t\t\t\tthrow new OldUrlRoomError(undefined, { type, reference });\n\t\t\t}\n\n\t\t\tif (!roomData._id) {\n\t\t\t\tthrow new RoomNotFoundError(undefined, { type, reference });\n\t\t\t}\n\n\t\t\tconst $set: any = {};\n\t\t\tconst $unset: any = {};\n\n\t\t\tfor (const key of Object.keys(roomFields)) {\n\t\t\t\tif (key in roomData) {\n\t\t\t\t\t$set[key] = roomData[key as keyof typeof roomData];\n\t\t\t\t} else {\n\t\t\t\t\t$unset[key] = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst { ChatRoom, ChatSubscription } = await import('../../../../app/models/client');\n\n\t\t\tChatRoom.upsert({ _id: roomData._id }, { $set, $unset });\n\t\t\tconst room = ChatRoom.findOne({ _id: roomData._id });\n\n\t\t\tif (!room) {\n\t\t\t\tthrow new TypeError('room is undefined');\n\t\t\t}\n\n\t\t\tconst { LegacyRoomManager } = await import('../../../../app/ui-utils/client');\n\n\t\t\tif (reference !== undefined && room._id !== reference && type === 'd') {\n\t\t\t\t// Redirect old url using username to rid\n\t\t\t\tawait LegacyRoomManager.close(type + reference);\n\t\t\t\tdirectRoute.push({ rid: room._id }, (prev) => prev);\n\t\t\t\tthrow new OldUrlRoomError(undefined, { rid: room._id });\n\t\t\t}\n\n\t\t\tconst { RoomManager } = await import('../../../lib/RoomManager');\n\t\t\tconst { fireGlobalEvent } = await import('../../../lib/utils/fireGlobalEvent');\n\n\t\t\tunsubscribeFromRoomOpenedEvent.current();\n\t\t\tunsubscribeFromRoomOpenedEvent.current = RoomManager.once('opened', () => fireGlobalEvent('room-opened', omit(room, 'usernames')));\n\n\t\t\tLegacyRoomManager.open({ typeName: type + reference, rid: room._id });\n\n\t\t\tif (room._id === RoomManager.opened) {\n\t\t\t\treturn { rid: room._id };\n\t\t\t}\n\n\t\t\t// update user's room subscription\n\t\t\tconst sub = ChatSubscription.findOne({ rid: room._id });\n\t\t\tif (sub && !sub.open) {\n\t\t\t\tawait openRoom(room._id);\n\t\t\t}\n\t\t\treturn { rid: room._id };\n\t\t},\n\t\t{\n\t\t\tretry: 0,\n\t\t\tonError: async (error) => {\n\t\t\t\tif (['l', 'v'].includes(type) && error instanceof RoomNotFoundError) {\n\t\t\t\t\tconst { ChatRoom } = await import('../../../../app/models/client');\n\n\t\t\t\t\tChatRoom.remove(reference);\n\t\t\t\t\tqueryClient.removeQueries(['rooms', reference]);\n\t\t\t\t\tqueryClient.removeQueries(['/v1/rooms.info', reference]);\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"ca422dcee6e6ed7e70c80281fd12c3429718d67f"}
