{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/2fa/server/methods/validateTempToken.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/2fa/server/methods/validateTempToken.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/2fa/server/methods/validateTempToken.ts","inputSourceMap":{"version":3,"file":"app/2fa/server/methods/validateTempToken.ts","sourceRoot":"","sources":["app/2fa/server/methods/validateTempToken.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,uBAAuB,EAAE,MAAM,wCAAwC,CAAC;AACjF,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AASnC,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,uBAAuB,CAAC,SAAS;QACtC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC1C,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACrF,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC5D,MAAM,EAAE,uBAAuB;aAC/B,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;YACtC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC;YAClC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU;YACrC,KAAK,EAAE,SAAS;SAChB,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,EAAE,CAAC;YACf,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAEpD,MAAM,KAAK,CAAC,qCAAqC,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QAEtG,yDAAyD;QACzD,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,WAAW,IAAI,EAAE,CAAC;QAC1E,IAAI,UAAU,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC/B,MAAM,WAAW,GAAG,QAAQ,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YAEzD,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,KAAK,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YAE9F,IAAI,aAAa,GAAG,CAAC,EAAE,CAAC;gBACvB,qGAAqG;gBACrG,yDAAyD;gBACzD,KAAK,uBAAuB,CAAC,KAAK,IAAI,EAAE;oBACvC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;wBAClB,OAAO;oBACR,CAAC;oBACD,MAAM,UAAU,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,6BAA6B,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;oBAC9G,OAAO;wBACN,YAAY,EAAE,SAAS;wBACvB,EAAE,EAAE,IAAI,CAAC,MAAM;wBACf,IAAI,EAAE,EAAE,6BAA6B,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE;qBAClF,CAAC;gBACH,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAED,OAAO,EAAE,KAAK,EAAE,CAAC;IAClB,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { notifyOnUserChangeAsync } from '../../../lib/server/lib/notifyListener';\nimport { TOTP } from '../lib/totp';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'2fa:validateTempToken': (userToken: string) => { codes: string[] } | undefined;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync '2fa:validateTempToken'(userToken) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('not-authorized');\n\t\t}\n\n\t\tconst user = await Users.findOneById(userId, { projection: { 'services.totp': 1 } });\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: '2fa:validateTempToken',\n\t\t\t});\n\t\t}\n\n\t\tif (!user.services?.totp?.tempSecret) {\n\t\t\tthrow new Meteor.Error('invalid-totp');\n\t\t}\n\n\t\tconst verified = await TOTP.verify({\n\t\t\tsecret: user.services.totp.tempSecret,\n\t\t\ttoken: userToken,\n\t\t});\n\t\tif (!verified) {\n\t\t\tthrow new Meteor.Error('invalid-totp');\n\t\t}\n\n\t\tconst { codes, hashedCodes } = TOTP.generateCodes();\n\n\t\tawait Users.enable2FAAndSetSecretAndCodesByUserId(userId, user.services.totp.tempSecret, hashedCodes);\n\n\t\t// Once the TOTP is validated we logout all other clients\n\t\tconst { 'x-auth-token': xAuthToken } = this.connection?.httpHeaders ?? {};\n\t\tif (xAuthToken && this.userId) {\n\t\t\tconst hashedToken = Accounts._hashLoginToken(xAuthToken);\n\n\t\t\tconst { modifiedCount } = await Users.removeNonPATLoginTokensExcept(this.userId, hashedToken);\n\n\t\t\tif (modifiedCount > 0) {\n\t\t\t\t// TODO this can be optmized so places that care about loginTokens being removed are invoked directly\n\t\t\t\t// instead of having to listen to every watch.users event\n\t\t\t\tvoid notifyOnUserChangeAsync(async () => {\n\t\t\t\t\tif (!this.userId) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst userTokens = await Users.findOneById(this.userId, { projection: { 'services.resume.loginTokens': 1 } });\n\t\t\t\t\treturn {\n\t\t\t\t\t\tclientAction: 'updated',\n\t\t\t\t\t\tid: this.userId,\n\t\t\t\t\t\tdiff: { 'services.resume.loginTokens': userTokens?.services?.resume?.loginTokens },\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn { codes };\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/2fa/server/methods/validateTempToken.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/2fa/server/methods/validateTempToken.ts","inputSourceMap":{"version":3,"file":"app/2fa/server/methods/validateTempToken.ts","sourceRoot":"","sources":["app/2fa/server/methods/validateTempToken.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,uBAAuB,EAAE,MAAM,wCAAwC,CAAC;AACjF,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AASnC,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,uBAAuB,CAAC,SAAS;QACtC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,EAAE,CAAC;YACb,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC1C,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACrF,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC5D,MAAM,EAAE,uBAAuB;aAC/B,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;YACtC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC;YAClC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU;YACrC,KAAK,EAAE,SAAS;SAChB,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,EAAE,CAAC;YACf,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QACxC,CAAC;QAED,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAEpD,MAAM,KAAK,CAAC,qCAAqC,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QAEtG,yDAAyD;QACzD,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,WAAW,IAAI,EAAE,CAAC;QAC1E,IAAI,UAAU,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAC/B,MAAM,WAAW,GAAG,QAAQ,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YAEzD,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,KAAK,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YAE9F,IAAI,aAAa,GAAG,CAAC,EAAE,CAAC;gBACvB,qGAAqG;gBACrG,yDAAyD;gBACzD,KAAK,uBAAuB,CAAC,KAAK,IAAI,EAAE;oBACvC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;wBAClB,OAAO;oBACR,CAAC;oBACD,MAAM,UAAU,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,6BAA6B,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;oBAC9G,OAAO;wBACN,YAAY,EAAE,SAAS;wBACvB,EAAE,EAAE,IAAI,CAAC,MAAM;wBACf,IAAI,EAAE,EAAE,6BAA6B,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE;qBAClF,CAAC;gBACH,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAED,OAAO,EAAE,KAAK,EAAE,CAAC;IAClB,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { notifyOnUserChangeAsync } from '../../../lib/server/lib/notifyListener';\nimport { TOTP } from '../lib/totp';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'2fa:validateTempToken': (userToken: string) => { codes: string[] } | undefined;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync '2fa:validateTempToken'(userToken) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('not-authorized');\n\t\t}\n\n\t\tconst user = await Users.findOneById(userId, { projection: { 'services.totp': 1 } });\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: '2fa:validateTempToken',\n\t\t\t});\n\t\t}\n\n\t\tif (!user.services?.totp?.tempSecret) {\n\t\t\tthrow new Meteor.Error('invalid-totp');\n\t\t}\n\n\t\tconst verified = await TOTP.verify({\n\t\t\tsecret: user.services.totp.tempSecret,\n\t\t\ttoken: userToken,\n\t\t});\n\t\tif (!verified) {\n\t\t\tthrow new Meteor.Error('invalid-totp');\n\t\t}\n\n\t\tconst { codes, hashedCodes } = TOTP.generateCodes();\n\n\t\tawait Users.enable2FAAndSetSecretAndCodesByUserId(userId, user.services.totp.tempSecret, hashedCodes);\n\n\t\t// Once the TOTP is validated we logout all other clients\n\t\tconst { 'x-auth-token': xAuthToken } = this.connection?.httpHeaders ?? {};\n\t\tif (xAuthToken && this.userId) {\n\t\t\tconst hashedToken = Accounts._hashLoginToken(xAuthToken);\n\n\t\t\tconst { modifiedCount } = await Users.removeNonPATLoginTokensExcept(this.userId, hashedToken);\n\n\t\t\tif (modifiedCount > 0) {\n\t\t\t\t// TODO this can be optmized so places that care about loginTokens being removed are invoked directly\n\t\t\t\t// instead of having to listen to every watch.users event\n\t\t\t\tvoid notifyOnUserChangeAsync(async () => {\n\t\t\t\t\tif (!this.userId) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst userTokens = await Users.findOneById(this.userId, { projection: { 'services.resume.loginTokens': 1 } });\n\t\t\t\t\treturn {\n\t\t\t\t\t\tclientAction: 'updated',\n\t\t\t\t\t\tid: this.userId,\n\t\t\t\t\t\tdiff: { 'services.resume.loginTokens': userTokens?.services?.resume?.loginTokens },\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn { codes };\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 1);\n    let notifyOnUserChangeAsync;\n    module.link(\"../../../lib/server/lib/notifyListener\", {\n      notifyOnUserChangeAsync(v) {\n        notifyOnUserChangeAsync = v;\n      }\n    }, 2);\n    let TOTP;\n    module.link(\"../lib/totp\", {\n      TOTP(v) {\n        TOTP = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    Meteor.methods({\n      async '2fa:validateTempToken'(userToken) {\n        var _user$services, _user$services$totp, _this$connection$http, _this$connection;\n        const userId = Meteor.userId();\n        if (!userId) {\n          throw new Meteor.Error('not-authorized');\n        }\n        const user = await Users.findOneById(userId, {\n          projection: {\n            'services.totp': 1\n          }\n        });\n        if (!user) {\n          throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n            method: '2fa:validateTempToken'\n          });\n        }\n        if (!((_user$services = user.services) !== null && _user$services !== void 0 && (_user$services$totp = _user$services.totp) !== null && _user$services$totp !== void 0 && _user$services$totp.tempSecret)) {\n          throw new Meteor.Error('invalid-totp');\n        }\n        const verified = await TOTP.verify({\n          secret: user.services.totp.tempSecret,\n          token: userToken\n        });\n        if (!verified) {\n          throw new Meteor.Error('invalid-totp');\n        }\n        const {\n          codes,\n          hashedCodes\n        } = TOTP.generateCodes();\n        await Users.enable2FAAndSetSecretAndCodesByUserId(userId, user.services.totp.tempSecret, hashedCodes);\n        // Once the TOTP is validated we logout all other clients\n        const {\n          'x-auth-token': xAuthToken\n        } = (_this$connection$http = (_this$connection = this.connection) === null || _this$connection === void 0 ? void 0 : _this$connection.httpHeaders) !== null && _this$connection$http !== void 0 ? _this$connection$http : {};\n        if (xAuthToken && this.userId) {\n          const hashedToken = Accounts._hashLoginToken(xAuthToken);\n          const {\n            modifiedCount\n          } = await Users.removeNonPATLoginTokensExcept(this.userId, hashedToken);\n          if (modifiedCount > 0) {\n            // TODO this can be optmized so places that care about loginTokens being removed are invoked directly\n            // instead of having to listen to every watch.users event\n            void notifyOnUserChangeAsync(async () => {\n              var _userTokens$services, _userTokens$services$;\n              if (!this.userId) {\n                return;\n              }\n              const userTokens = await Users.findOneById(this.userId, {\n                projection: {\n                  'services.resume.loginTokens': 1\n                }\n              });\n              return {\n                clientAction: 'updated',\n                id: this.userId,\n                diff: {\n                  'services.resume.loginTokens': userTokens === null || userTokens === void 0 ? void 0 : (_userTokens$services = userTokens.services) === null || _userTokens$services === void 0 ? void 0 : (_userTokens$services$ = _userTokens$services.resume) === null || _userTokens$services$ === void 0 ? void 0 : _userTokens$services$.loginTokens\n                }\n              };\n            });\n          }\n        }\n        return {\n          codes\n        };\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Users","module","link","v","Meteor","notifyOnUserChangeAsync","TOTP","__reifyWaitForDeps__","methods","2fa:validateTempToken","userToken","_user$services","_user$services$totp","_this$connection$http","_this$connection","userId","Error","user","findOneById","projection","method","services","totp","tempSecret","verified","verify","secret","token","codes","hashedCodes","generateCodes","enable2FAAndSetSecretAndCodesByUserId","xAuthToken","connection","httpHeaders","hashedToken","Accounts","_hashLoginToken","modifiedCount","removeNonPATLoginTokensExcept","_userTokens$services","_userTokens$services$","userTokens","clientAction","id","diff","resume","loginTokens","__reify_async_result__","_reifyError","self","async"],"sources":["app/2fa/server/methods/validateTempToken.ts"],"sourcesContent":["import type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Users } from '@rocket.chat/models';\nimport { Meteor } from 'meteor/meteor';\n\nimport { notifyOnUserChangeAsync } from '../../../lib/server/lib/notifyListener';\nimport { TOTP } from '../lib/totp';\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\t'2fa:validateTempToken': (userToken: string) => { codes: string[] } | undefined;\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync '2fa:validateTempToken'(userToken) {\n\t\tconst userId = Meteor.userId();\n\t\tif (!userId) {\n\t\t\tthrow new Meteor.Error('not-authorized');\n\t\t}\n\n\t\tconst user = await Users.findOneById(userId, { projection: { 'services.totp': 1 } });\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: '2fa:validateTempToken',\n\t\t\t});\n\t\t}\n\n\t\tif (!user.services?.totp?.tempSecret) {\n\t\t\tthrow new Meteor.Error('invalid-totp');\n\t\t}\n\n\t\tconst verified = await TOTP.verify({\n\t\t\tsecret: user.services.totp.tempSecret,\n\t\t\ttoken: userToken,\n\t\t});\n\t\tif (!verified) {\n\t\t\tthrow new Meteor.Error('invalid-totp');\n\t\t}\n\n\t\tconst { codes, hashedCodes } = TOTP.generateCodes();\n\n\t\tawait Users.enable2FAAndSetSecretAndCodesByUserId(userId, user.services.totp.tempSecret, hashedCodes);\n\n\t\t// Once the TOTP is validated we logout all other clients\n\t\tconst { 'x-auth-token': xAuthToken } = this.connection?.httpHeaders ?? {};\n\t\tif (xAuthToken && this.userId) {\n\t\t\tconst hashedToken = Accounts._hashLoginToken(xAuthToken);\n\n\t\t\tconst { modifiedCount } = await Users.removeNonPATLoginTokensExcept(this.userId, hashedToken);\n\n\t\t\tif (modifiedCount > 0) {\n\t\t\t\t// TODO this can be optmized so places that care about loginTokens being removed are invoked directly\n\t\t\t\t// instead of having to listen to every watch.users event\n\t\t\t\tvoid notifyOnUserChangeAsync(async () => {\n\t\t\t\t\tif (!this.userId) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst userTokens = await Users.findOneById(this.userId, { projection: { 'services.resume.loginTokens': 1 } });\n\t\t\t\t\treturn {\n\t\t\t\t\t\tclientAction: 'updated',\n\t\t\t\t\t\tid: this.userId,\n\t\t\t\t\t\tdiff: { 'services.resume.loginTokens': userTokens?.services?.resume?.loginTokens },\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn { codes };\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6ccf3794e01d9fc630127ab7643c73fd091edd7d"}
