{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/Omnichannel/hooks/useAvailableAgentsList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/components/Omnichannel/hooks/useAvailableAgentsList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/Omnichannel/hooks/useAvailableAgentsList.ts","inputSourceMap":{"version":3,"file":"client/components/Omnichannel/hooks/useAvailableAgentsList.ts","sourceRoot":"","sources":["client/components/Omnichannel/hooks/useAvailableAgentsList.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE9C,OAAO,EAAE,uBAAuB,EAAE,MAAM,8CAA8C,CAAC;AACvF,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAC;AAC7E,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAO3D,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACrC,OAA0B,EAMzB,EAAE;IACH,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,UAAU,EAAkB,CAAC,CAAC;IACnF,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,UAAU,EAAkB,CAAC,EAAE,EAAE,CAAC,CAAC;IAErF,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,EAAE,kCAAkC,CAAC,CAAC;IAEzE,qBAAqB,CAAC,GAAG,EAAE;QAC1B,OAAO,IAAI,MAAM,EAAE,CAAC;IACrB,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEtB,MAAM,SAAS,GAAG,WAAW,CAC5B,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;QACpB,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,CAAC;YACzC,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC;YAC3C,GAAG,CAAC,OAAO,CAAC,gBAAgB,IAAI,EAAE,gBAAgB,EAAE,OAAO,CAAC,gBAAgB,EAAE,CAAC;YAC/E,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,GAAG,GAAG,KAAK;YAClB,IAAI,EAAE,eAAe;SACrB,CAAC,CAAC;QAEH,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAU,EAAE,EAAE;YACvC,KAAK,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAC9C,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC;YAC7B,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;YACxB,OAAO,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,OAAO;YACN,KAAK;YACL,SAAS,EAAE,KAAK;SAChB,CAAC;IACH,CAAC,EACD,CAAC,SAAS,EAAE,OAAO,CAAC,gBAAgB,EAAE,OAAO,CAAC,IAAI,CAAC,CACnD,CAAC;IAEF,MAAM,EAAE,aAAa,EAAE,gBAAgB,EAAE,GAAG,uBAAuB,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;IAE9F,OAAO;QACN,MAAM;QACN,SAAS;QACT,aAAa;QACb,gBAAgB;KAChB,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { ILivechatAgent } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype AgentsListOptions = {\n\ttext: string;\n\tincludeExtension?: string;\n};\n\nexport const useAvailableAgentsList = (\n\toptions: AgentsListOptions,\n): {\n\titemsList: RecordList<ILivechatAgent>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatAgent>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatAgent>()), []);\n\n\tconst getAgents = useEndpoint('GET', '/v1/omnichannel/agents/available');\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { agents, total } = await getAgents({\n\t\t\t\t...(options.text && { text: options.text }),\n\t\t\t\t...(options.includeExtension && { includeExtension: options.includeExtension }),\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t});\n\n\t\t\tconst items = agents.map((agent: any) => {\n\t\t\t\tagent._updatedAt = new Date(agent._updatedAt);\n\t\t\t\tagent.label = agent.username;\n\t\t\t\tagent.value = agent._id;\n\t\t\t\treturn agent;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getAgents, options.includeExtension, options.text],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/components/Omnichannel/hooks/useAvailableAgentsList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/components/Omnichannel/hooks/useAvailableAgentsList.ts","inputSourceMap":{"version":3,"file":"client/components/Omnichannel/hooks/useAvailableAgentsList.ts","sourceRoot":"","sources":["client/components/Omnichannel/hooks/useAvailableAgentsList.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE9C,OAAO,EAAE,uBAAuB,EAAE,MAAM,8CAA8C,CAAC;AACvF,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAC;AAC7E,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAO3D,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACrC,OAA0B,EAMzB,EAAE;IACH,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,UAAU,EAAkB,CAAC,CAAC;IACnF,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,UAAU,EAAkB,CAAC,EAAE,EAAE,CAAC,CAAC;IAErF,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,EAAE,kCAAkC,CAAC,CAAC;IAEzE,qBAAqB,CAAC,GAAG,EAAE;QAC1B,OAAO,IAAI,MAAM,EAAE,CAAC;IACrB,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IAEtB,MAAM,SAAS,GAAG,WAAW,CAC5B,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE;QACpB,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,CAAC;YACzC,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC;YAC3C,GAAG,CAAC,OAAO,CAAC,gBAAgB,IAAI,EAAE,gBAAgB,EAAE,OAAO,CAAC,gBAAgB,EAAE,CAAC;YAC/E,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,GAAG,GAAG,KAAK;YAClB,IAAI,EAAE,eAAe;SACrB,CAAC,CAAC;QAEH,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAU,EAAE,EAAE;YACvC,KAAK,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAC9C,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC;YAC7B,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;YACxB,OAAO,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,OAAO;YACN,KAAK;YACL,SAAS,EAAE,KAAK;SAChB,CAAC;IACH,CAAC,EACD,CAAC,SAAS,EAAE,OAAO,CAAC,gBAAgB,EAAE,OAAO,CAAC,IAAI,CAAC,CACnD,CAAC;IAEF,MAAM,EAAE,aAAa,EAAE,gBAAgB,EAAE,GAAG,uBAAuB,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;IAE9F,OAAO;QACN,MAAM;QACN,SAAS;QACT,aAAa;QACb,gBAAgB;KAChB,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { ILivechatAgent } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype AgentsListOptions = {\n\ttext: string;\n\tincludeExtension?: string;\n};\n\nexport const useAvailableAgentsList = (\n\toptions: AgentsListOptions,\n): {\n\titemsList: RecordList<ILivechatAgent>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatAgent>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatAgent>()), []);\n\n\tconst getAgents = useEndpoint('GET', '/v1/omnichannel/agents/available');\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { agents, total } = await getAgents({\n\t\t\t\t...(options.text && { text: options.text }),\n\t\t\t\t...(options.includeExtension && { includeExtension: options.includeExtension }),\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t});\n\n\t\t\tconst items = agents.map((agent: any) => {\n\t\t\t\tagent._updatedAt = new Date(agent._updatedAt);\n\t\t\t\tagent.label = agent.username;\n\t\t\t\tagent.value = agent._id;\n\t\t\t\treturn agent;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getAgents, options.includeExtension, options.text],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  useAvailableAgentsList: () => useAvailableAgentsList\n});\nlet useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n}, 0);\nlet useCallback, useState;\nmodule.link(\"react\", {\n  useCallback(v) {\n    useCallback = v;\n  },\n  useState(v) {\n    useState = v;\n  }\n}, 1);\nlet useScrollableRecordList;\nmodule.link(\"../../../hooks/lists/useScrollableRecordList\", {\n  useScrollableRecordList(v) {\n    useScrollableRecordList = v;\n  }\n}, 2);\nlet useComponentDidUpdate;\nmodule.link(\"../../../hooks/useComponentDidUpdate\", {\n  useComponentDidUpdate(v) {\n    useComponentDidUpdate = v;\n  }\n}, 3);\nlet RecordList;\nmodule.link(\"../../../lib/lists/RecordList\", {\n  RecordList(v) {\n    RecordList = v;\n  }\n}, 4);\nconst useAvailableAgentsList = options => {\n  const [itemsList, setItemsList] = useState(() => new RecordList());\n  const reload = useCallback(() => setItemsList(new RecordList()), []);\n  const getAgents = useEndpoint('GET', '/v1/omnichannel/agents/available');\n  useComponentDidUpdate(() => {\n    options && reload();\n  }, [options, reload]);\n  const fetchData = useCallback(async (start, end) => {\n    const {\n      agents,\n      total\n    } = await getAgents(_objectSpread(_objectSpread(_objectSpread({}, options.text && {\n      text: options.text\n    }), options.includeExtension && {\n      includeExtension: options.includeExtension\n    }), {}, {\n      offset: start,\n      count: end + start,\n      sort: \"{ \\\"name\\\": 1 }\"\n    }));\n    const items = agents.map(agent => {\n      agent._updatedAt = new Date(agent._updatedAt);\n      agent.label = agent.username;\n      agent.value = agent._id;\n      return agent;\n    });\n    return {\n      items,\n      itemCount: total\n    };\n  }, [getAgents, options.includeExtension, options.text]);\n  const {\n    loadMoreItems,\n    initialItemCount\n  } = useScrollableRecordList(itemsList, fetchData, 25);\n  return {\n    reload,\n    itemsList,\n    loadMoreItems,\n    initialItemCount\n  };\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","useAvailableAgentsList","useEndpoint","useCallback","useState","useScrollableRecordList","useComponentDidUpdate","RecordList","options","itemsList","setItemsList","reload","getAgents","fetchData","start","end","agents","total","text","includeExtension","offset","count","sort","items","map","agent","_updatedAt","Date","label","username","value","_id","itemCount","loadMoreItems","initialItemCount"],"sources":["client/components/Omnichannel/hooks/useAvailableAgentsList.ts"],"sourcesContent":["import type { ILivechatAgent } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype AgentsListOptions = {\n\ttext: string;\n\tincludeExtension?: string;\n};\n\nexport const useAvailableAgentsList = (\n\toptions: AgentsListOptions,\n): {\n\titemsList: RecordList<ILivechatAgent>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<ILivechatAgent>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<ILivechatAgent>()), []);\n\n\tconst getAgents = useEndpoint('GET', '/v1/omnichannel/agents/available');\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { agents, total } = await getAgents({\n\t\t\t\t...(options.text && { text: options.text }),\n\t\t\t\t...(options.includeExtension && { includeExtension: options.includeExtension }),\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t});\n\n\t\t\tconst items = agents.map((agent: any) => {\n\t\t\t\tagent._updatedAt = new Date(agent._updatedAt);\n\t\t\t\tagent.label = agent.username;\n\t\t\t\tagent.value = agent._id;\n\t\t\t\treturn agent;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getAgents, options.includeExtension, options.text],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n"],"mappings":"AACA,IAAAA,aAAS;AAAAC,MAAa,CAAAC,IAAM,uCAA2B;EAAAC,QAAAC,CAAA;IAAAJ,aAAA,GAAAI,CAAA;EAAA;AAAA;AAAvDH,MAAA,CAAOI,MAAE;EAAAC,sBAAmB,EAAAA,CAAA,KAAAA;AAA2B;AAAA,IAAAC,WAAA;AAAAN,MAAA,CAAAC,IAAA;EAAAK,YAAAH,CAAA;IAAAG,WAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAI,WAAA,EAAAC,QAAA;AAAAR,MAAA,CAAAC,IAAA;EAAAM,YAAAJ,CAAA;IAAAI,WAAA,GAAAJ,CAAA;EAAA;EAAAK,SAAAL,CAAA;IAAAK,QAAA,GAAAL,CAAA;EAAA;AAAA;AAAA,IAAAM,uBAAA;AAAAT,MAAA,CAAAC,IAAA;EAAAQ,wBAAAN,CAAA;IAAAM,uBAAA,GAAAN,CAAA;EAAA;AAAA;AAAA,IAAAO,qBAAA;AAAAV,MAAA,CAAAC,IAAA;EAAAS,sBAAAP,CAAA;IAAAO,qBAAA,GAAAP,CAAA;EAAA;AAAA;AAAA,IAAAQ,UAAA;AAAAX,MAAA,CAAAC,IAAA;EAAAU,WAAAR,CAAA;IAAAQ,UAAA,GAAAR,CAAA;EAAA;AAAA;AAYhD,MAAME,sBAAsB,GAClCO,OAA0B,IAMvB;EACH,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,MAAM,IAAIG,UAAU,EAAkB,CAAC;EAClF,MAAMI,MAAM,GAAGR,WAAW,CAAC,MAAMO,YAAY,CAAC,IAAIH,UAAU,EAAkB,CAAC,EAAE,EAAE,CAAC;EAEpF,MAAMK,SAAS,GAAGV,WAAW,CAAC,KAAK,EAAE,kCAAkC,CAAC;EAExEI,qBAAqB,CAAC,MAAK;IAC1BE,OAAO,IAAIG,MAAM,EAAE;EACpB,CAAC,EAAE,CAACH,OAAO,EAAEG,MAAM,CAAC,CAAC;EAErB,MAAME,SAAS,GAAGV,WAAW,CAC5B,OAAOW,KAAK,EAAEC,GAAG,KAAI;IACpB,MAAM;MAAEC,MAAM;MAAEC;IAAK,CAAE,GAAG,MAAML,SAAS,CAAAjB,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACpCa,OAAO,CAACU,IAAI,IAAI;MAAEA,IAAI,EAAEV,OAAO,CAACU;IAAI,CAAE,GACtCV,OAAO,CAACW,gBAAgB,IAAI;MAAEA,gBAAgB,EAAEX,OAAO,CAACW;IAAgB,CAAE;MAC9EC,MAAM,EAAEN,KAAK;MACbO,KAAK,EAAEN,GAAG,GAAGD,KAAK;MAClBQ,IAAI;IAAiB,EACrB,CAAC;IAEF,MAAMC,KAAK,GAAGP,MAAM,CAACQ,GAAG,CAAEC,KAAU,IAAI;MACvCA,KAAK,CAACC,UAAU,GAAG,IAAIC,IAAI,CAACF,KAAK,CAACC,UAAU,CAAC;MAC7CD,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACI,QAAQ;MAC5BJ,KAAK,CAACK,KAAK,GAAGL,KAAK,CAACM,GAAG;MACvB,OAAON,KAAK;IACb,CAAC,CAAC;IAEF,OAAO;MACNF,KAAK;MACLS,SAAS,EAAEf;KACX;EACF,CAAC,EACD,CAACL,SAAS,EAAEJ,OAAO,CAACW,gBAAgB,EAAEX,OAAO,CAACU,IAAI,CAAC,CACnD;EAED,MAAM;IAAEe,aAAa;IAAEC;EAAgB,CAAE,GAAG7B,uBAAuB,CAACI,SAAS,EAAEI,SAAS,EAAE,EAAE,CAAC;EAE7F,OAAO;IACNF,MAAM;IACNF,SAAS;IACTwB,aAAa;IACbC;GACA;AACF,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"dae424d5ed613a2994551eb45bd69f800b14ebf3"}
