{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/lib/messages.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/lib/messages.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/lib/messages.ts","inputSourceMap":{"version":3,"file":"app/api/server/lib/messages.ts","sourceRoot":"","sources":["app/api/server/lib/messages.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { Rooms, Messages, Users } from '@rocket.chat/models';\nimport type { FindOptions } from 'mongodb';\n\nimport { canAccessRoomAsync } from '../../../authorization/server/functions/canAccessRoom';\n\nexport async function findMentionedMessages({\n\tuid,\n\troomId,\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\troomId: string;\n\tpagination: { offset: number; count: number; sort: FindOptions<IMessage>['sort'] };\n}): Promise<{\n\tmessages: IMessage[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n}> {\n\tconst room = await Rooms.findOneById(roomId);\n\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\tconst user = await Users.findOneById<Pick<IUser, 'username'>>(uid, { projection: { username: 1 } });\n\tif (!user) {\n\t\tthrow new Error('invalid-user');\n\t}\n\n\tconst { cursor, totalCount } = Messages.findPaginatedVisibleByMentionAndRoomId(user.username, roomId, {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tmessages,\n\t\tcount: messages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findStarredMessages({\n\tuid,\n\troomId,\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\troomId: string;\n\tpagination: { offset: number; count: number; sort: FindOptions<IMessage>['sort'] };\n}): Promise<{\n\tmessages: IMessage[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n}> {\n\tconst room = await Rooms.findOneById(roomId);\n\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\tconst user = await Users.findOneById<Pick<IUser, 'username'>>(uid, { projection: { username: 1 } });\n\tif (!user) {\n\t\tthrow new Error('invalid-user');\n\t}\n\n\tconst { cursor, totalCount } = Messages.findStarredByUserAtRoom(uid, roomId, {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tmessages,\n\t\tcount: messages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDiscussionsFromRoom({\n\tuid,\n\troomId,\n\ttext,\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\troomId: string;\n\ttext: string;\n\tpagination: { offset: number; count: number; sort: FindOptions<IMessage>['sort'] };\n}): Promise<{\n\tmessages: IMessage[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n}> {\n\tconst room = await Rooms.findOneById(roomId);\n\n\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tconst { cursor, totalCount } = await Messages.findDiscussionsByRoomAndText(roomId, text, {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tmessages,\n\t\tcount: messages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/lib/messages.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/lib/messages.ts","inputSourceMap":{"version":3,"file":"app/api/server/lib/messages.ts","sourceRoot":"","sources":["app/api/server/lib/messages.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAG7D,OAAO,EAAE,kBAAkB,EAAE,MAAM,uDAAuD,CAAC;AAE3F,MAAM,CAAC,KAAK,UAAU,qBAAqB,CAAC,EAC3C,GAAG,EACH,MAAM,EACN,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAKnC;IAMA,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC7C,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QAC9D,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;IACtC,CAAC;IACD,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAA0B,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACpG,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;IACjC,CAAC;IAED,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC,sCAAsC,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE;QACrG,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE;QACxB,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,KAAK;KACZ,CAAC,CAAC;IAEH,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;IAE5E,OAAO;QACN,QAAQ;QACR,KAAK,EAAE,QAAQ,CAAC,MAAM;QACtB,MAAM;QACN,KAAK;KACL,CAAC;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,mBAAmB,CAAC,EACzC,GAAG,EACH,MAAM,EACN,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAKnC;IAMA,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC7C,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QAC9D,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;IACtC,CAAC;IACD,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAA0B,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACpG,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;IACjC,CAAC;IAED,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC,uBAAuB,CAAC,GAAG,EAAE,MAAM,EAAE;QAC5E,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE;QACxB,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,KAAK;KACZ,CAAC,CAAC;IAEH,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;IAE5E,OAAO;QACN,QAAQ;QACR,KAAK,EAAE,QAAQ,CAAC,MAAM;QACtB,MAAM;QACN,KAAK;KACL,CAAC;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAAC,EAC7C,GAAG,EACH,MAAM,EACN,IAAI,EACJ,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAMnC;IAMA,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAE7C,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;QAC9D,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;IACtC,CAAC;IAED,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,QAAQ,CAAC,4BAA4B,CAAC,MAAM,EAAE,IAAI,EAAE;QACxF,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE;QACxB,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,KAAK;KACZ,CAAC,CAAC;IAEH,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;IAE5E,OAAO;QACN,QAAQ;QACR,KAAK,EAAE,QAAQ,CAAC,MAAM;QACtB,MAAM;QACN,KAAK;KACL,CAAC;AACH,CAAC","sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { Rooms, Messages, Users } from '@rocket.chat/models';\nimport type { FindOptions } from 'mongodb';\n\nimport { canAccessRoomAsync } from '../../../authorization/server/functions/canAccessRoom';\n\nexport async function findMentionedMessages({\n\tuid,\n\troomId,\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\troomId: string;\n\tpagination: { offset: number; count: number; sort: FindOptions<IMessage>['sort'] };\n}): Promise<{\n\tmessages: IMessage[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n}> {\n\tconst room = await Rooms.findOneById(roomId);\n\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\tconst user = await Users.findOneById<Pick<IUser, 'username'>>(uid, { projection: { username: 1 } });\n\tif (!user) {\n\t\tthrow new Error('invalid-user');\n\t}\n\n\tconst { cursor, totalCount } = Messages.findPaginatedVisibleByMentionAndRoomId(user.username, roomId, {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tmessages,\n\t\tcount: messages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findStarredMessages({\n\tuid,\n\troomId,\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\troomId: string;\n\tpagination: { offset: number; count: number; sort: FindOptions<IMessage>['sort'] };\n}): Promise<{\n\tmessages: IMessage[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n}> {\n\tconst room = await Rooms.findOneById(roomId);\n\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\tconst user = await Users.findOneById<Pick<IUser, 'username'>>(uid, { projection: { username: 1 } });\n\tif (!user) {\n\t\tthrow new Error('invalid-user');\n\t}\n\n\tconst { cursor, totalCount } = Messages.findStarredByUserAtRoom(uid, roomId, {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tmessages,\n\t\tcount: messages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDiscussionsFromRoom({\n\tuid,\n\troomId,\n\ttext,\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\troomId: string;\n\ttext: string;\n\tpagination: { offset: number; count: number; sort: FindOptions<IMessage>['sort'] };\n}): Promise<{\n\tmessages: IMessage[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n}> {\n\tconst room = await Rooms.findOneById(roomId);\n\n\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tconst { cursor, totalCount } = await Messages.findDiscussionsByRoomAndText(roomId, text, {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tmessages,\n\t\tcount: messages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      findMentionedMessages: () => findMentionedMessages,\n      findStarredMessages: () => findStarredMessages,\n      findDiscussionsFromRoom: () => findDiscussionsFromRoom\n    });\n    let Rooms, Messages, Users;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Messages(v) {\n        Messages = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let canAccessRoomAsync;\n    module.link(\"../../../authorization/server/functions/canAccessRoom\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 1);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function findMentionedMessages(_ref) {\n      let {\n        uid,\n        roomId,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref;\n      const room = await Rooms.findOneById(roomId);\n      if (!room || !(await canAccessRoomAsync(room, {\n        _id: uid\n      }))) {\n        throw new Error('error-not-allowed');\n      }\n      const user = await Users.findOneById(uid, {\n        projection: {\n          username: 1\n        }\n      });\n      if (!user) {\n        throw new Error('invalid-user');\n      }\n      const {\n        cursor,\n        totalCount\n      } = Messages.findPaginatedVisibleByMentionAndRoomId(user.username, roomId, {\n        sort: sort || {\n          ts: -1\n        },\n        skip: offset,\n        limit: count\n      });\n      const [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        messages,\n        count: messages.length,\n        offset,\n        total\n      };\n    }\n    async function findStarredMessages(_ref2) {\n      let {\n        uid,\n        roomId,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref2;\n      const room = await Rooms.findOneById(roomId);\n      if (!room || !(await canAccessRoomAsync(room, {\n        _id: uid\n      }))) {\n        throw new Error('error-not-allowed');\n      }\n      const user = await Users.findOneById(uid, {\n        projection: {\n          username: 1\n        }\n      });\n      if (!user) {\n        throw new Error('invalid-user');\n      }\n      const {\n        cursor,\n        totalCount\n      } = Messages.findStarredByUserAtRoom(uid, roomId, {\n        sort: sort || {\n          ts: -1\n        },\n        skip: offset,\n        limit: count\n      });\n      const [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        messages,\n        count: messages.length,\n        offset,\n        total\n      };\n    }\n    async function findDiscussionsFromRoom(_ref3) {\n      let {\n        uid,\n        roomId,\n        text,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref3;\n      const room = await Rooms.findOneById(roomId);\n      if (!room || !(await canAccessRoomAsync(room, {\n        _id: uid\n      }))) {\n        throw new Error('error-not-allowed');\n      }\n      const {\n        cursor,\n        totalCount\n      } = await Messages.findDiscussionsByRoomAndText(roomId, text, {\n        sort: sort || {\n          ts: -1\n        },\n        skip: offset,\n        limit: count\n      });\n      const [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        messages,\n        count: messages.length,\n        offset,\n        total\n      };\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","findMentionedMessages","findStarredMessages","findDiscussionsFromRoom","Rooms","Messages","Users","link","v","canAccessRoomAsync","__reifyWaitForDeps__","_ref","uid","roomId","pagination","offset","count","sort","room","findOneById","_id","Error","user","projection","username","cursor","totalCount","findPaginatedVisibleByMentionAndRoomId","ts","skip","limit","messages","total","Promise","all","toArray","length","_ref2","findStarredByUserAtRoom","_ref3","text","findDiscussionsByRoomAndText","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/lib/messages.ts"],"sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { Rooms, Messages, Users } from '@rocket.chat/models';\nimport type { FindOptions } from 'mongodb';\n\nimport { canAccessRoomAsync } from '../../../authorization/server/functions/canAccessRoom';\n\nexport async function findMentionedMessages({\n\tuid,\n\troomId,\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\troomId: string;\n\tpagination: { offset: number; count: number; sort: FindOptions<IMessage>['sort'] };\n}): Promise<{\n\tmessages: IMessage[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n}> {\n\tconst room = await Rooms.findOneById(roomId);\n\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\tconst user = await Users.findOneById<Pick<IUser, 'username'>>(uid, { projection: { username: 1 } });\n\tif (!user) {\n\t\tthrow new Error('invalid-user');\n\t}\n\n\tconst { cursor, totalCount } = Messages.findPaginatedVisibleByMentionAndRoomId(user.username, roomId, {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tmessages,\n\t\tcount: messages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findStarredMessages({\n\tuid,\n\troomId,\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\troomId: string;\n\tpagination: { offset: number; count: number; sort: FindOptions<IMessage>['sort'] };\n}): Promise<{\n\tmessages: IMessage[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n}> {\n\tconst room = await Rooms.findOneById(roomId);\n\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\tconst user = await Users.findOneById<Pick<IUser, 'username'>>(uid, { projection: { username: 1 } });\n\tif (!user) {\n\t\tthrow new Error('invalid-user');\n\t}\n\n\tconst { cursor, totalCount } = Messages.findStarredByUserAtRoom(uid, roomId, {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tmessages,\n\t\tcount: messages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport async function findDiscussionsFromRoom({\n\tuid,\n\troomId,\n\ttext,\n\tpagination: { offset, count, sort },\n}: {\n\tuid: string;\n\troomId: string;\n\ttext: string;\n\tpagination: { offset: number; count: number; sort: FindOptions<IMessage>['sort'] };\n}): Promise<{\n\tmessages: IMessage[];\n\tcount: number;\n\toffset: number;\n\ttotal: number;\n}> {\n\tconst room = await Rooms.findOneById(roomId);\n\n\tif (!room || !(await canAccessRoomAsync(room, { _id: uid }))) {\n\t\tthrow new Error('error-not-allowed');\n\t}\n\n\tconst { cursor, totalCount } = await Messages.findDiscussionsByRoomAndText(roomId, text, {\n\t\tsort: sort || { ts: -1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [messages, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tmessages,\n\t\tcount: messages.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"58ff878cfef3542ed789e214a8300030170c50fb"}
