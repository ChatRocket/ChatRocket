{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/lib/processDirectEmail.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/lib/processDirectEmail.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/lib/processDirectEmail.ts","inputSourceMap":{"version":3,"file":"app/lib/server/lib/processDirectEmail.ts","sourceRoot":"","sources":["app/lib/server/lib/processDirectEmail.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { Messages, Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport type { ParsedMail } from 'mailparser';\nimport moment from 'moment';\n\nimport { canAccessRoomAsync } from '../../../authorization/server';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { metrics } from '../../../metrics/server';\nimport { settings } from '../../../settings/server';\nimport { sendMessage } from '../functions/sendMessage';\n\nconst isParsedEmail = (email: ParsedMail): email is Required<ParsedMail> => 'date' in email && 'html' in email;\n\nexport const processDirectEmail = async function (email: ParsedMail): Promise<void> {\n\tif (!isParsedEmail(email)) {\n\t\treturn;\n\t}\n\n\tconst to = Array.isArray(email.to) ? email.to.find((email) => email.text) : email.to;\n\tconst mid = to?.text.split('@')[0].split('+')[1];\n\n\tif (!mid) {\n\t\treturn;\n\t}\n\n\tconst ts = new Date(email.date);\n\n\tconst tsDiff = Math.abs(moment(ts).diff(new Date()));\n\n\tlet msg = email.text.split('\\n\\n').join('\\n');\n\n\tif (msg && msg.length > (settings.get('Message_MaxAllowedSize') as number)) {\n\t\treturn;\n\t}\n\tconst emailAdress = email.from.value[0].address;\n\tif (!emailAdress) {\n\t\treturn;\n\t}\n\n\tconst user = await Users.findOneByEmailAddress(emailAdress, {\n\t\tprojection: {\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t},\n\t});\n\n\tif (!user?.username) {\n\t\t// user not found\n\t\treturn;\n\t}\n\n\tconst prevMessage = await Messages.findOneById(mid, {\n\t\trid: 1,\n\t\tu: 1,\n\t});\n\n\tif (!prevMessage) {\n\t\t// message doesn't exist anymore\n\t\treturn;\n\t}\n\n\tconst roomInfo = await Rooms.findOneById(prevMessage.rid);\n\n\tif (!roomInfo) {\n\t\t// room doesn't exist anymore\n\t\treturn;\n\t}\n\n\tconst room = await canAccessRoomAsync(roomInfo, user);\n\tif (!room) {\n\t\treturn;\n\t}\n\n\t// check mention\n\tif (msg.indexOf(`@${prevMessage.u.username}`) === -1 && roomInfo.t !== 'd') {\n\t\tmsg = `@${prevMessage.u.username} ${msg}`;\n\t}\n\n\t// reply message link WE HA THREADS KNOW DONT NEED TO QUOTE THE previous message\n\t// let prevMessageLink = `[ ](${ Meteor.absoluteUrl().replace(/\\/$/, '') }`;\n\t// if (roomInfo.t === 'c') {\n\t// \tprevMessageLink += `/channel/${ roomInfo.name }?msg=${ mid }) `;\n\t// } else if (roomInfo.t === 'd') {\n\t// \tprevMessageLink += `/direct/${ prevMessage.u.username }?msg=${ mid }) `;\n\t// } else if (roomInfo.t === 'p') {\n\t// \tprevMessageLink += `/group/${ roomInfo.name }?msg=${ mid }) `;\n\t// }\n\t// // add reply message link\n\t// msg = prevMessageLink + msg;\n\n\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(prevMessage.rid, user._id);\n\tif (subscription && (subscription.blocked || subscription.blocker)) {\n\t\t// room is blocked\n\t\treturn;\n\t}\n\n\tif ((roomInfo.muted || []).includes(user.username || '')) {\n\t\t// user is muted\n\t\treturn;\n\t}\n\n\t// room is readonly\n\tif (roomInfo.ro === true) {\n\t\tif (!(await hasPermissionAsync(user._id, 'post-readonly', roomInfo._id))) {\n\t\t\t// Check if the user was manually unmuted\n\t\t\tif (!(roomInfo.unmuted || []).includes(user.username || '')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tmetrics.messagesSent.inc(); // TODO This line needs to be moved to it's proper place. See the comments on: https://github.com/RocketChat/Rocket.Chat/pull/5736\n\n\tconst message: Pick<IMessage, 'ts' | 'msg' | 'groupable' | 'rid' | 'sentByEmail' | 'tmid'> = {\n\t\tts: tsDiff < 10000 ? ts : new Date(),\n\t\tmsg,\n\t\tsentByEmail: true,\n\t\tgroupable: false,\n\t\ttmid: mid,\n\t\trid: prevMessage.rid,\n\t};\n\n\treturn sendMessage(user, message, roomInfo);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/lib/processDirectEmail.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/lib/processDirectEmail.ts","inputSourceMap":{"version":3,"file":"app/lib/server/lib/processDirectEmail.ts","sourceRoot":"","sources":["app/lib/server/lib/processDirectEmail.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5E,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,OAAO,EAAE,kBAAkB,EAAE,MAAM,+BAA+B,CAAC;AACnE,OAAO,EAAE,kBAAkB,EAAE,MAAM,uDAAuD,CAAC;AAC3F,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAEvD,MAAM,aAAa,GAAG,CAAC,KAAiB,EAAiC,EAAE,CAAC,MAAM,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,CAAC;AAE/G,MAAM,CAAC,MAAM,kBAAkB,GAAG,KAAK,WAAW,KAAiB;IAClE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;QAC3B,OAAO;IACR,CAAC;IAED,MAAM,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;IACrF,MAAM,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEjD,IAAI,CAAC,GAAG,EAAE,CAAC;QACV,OAAO;IACR,CAAC;IAED,MAAM,EAAE,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAEhC,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;IAErD,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE9C,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAI,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAY,EAAE,CAAC;QAC5E,OAAO;IACR,CAAC;IACD,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;IAChD,IAAI,CAAC,WAAW,EAAE,CAAC;QAClB,OAAO;IACR,CAAC;IAED,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,qBAAqB,CAAC,WAAW,EAAE;QAC3D,UAAU,EAAE;YACX,QAAQ,EAAE,CAAC;YACX,IAAI,EAAE,CAAC;SACP;KACD,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC;QACrB,iBAAiB;QACjB,OAAO;IACR,CAAC;IAED,MAAM,WAAW,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE;QACnD,GAAG,EAAE,CAAC;QACN,CAAC,EAAE,CAAC;KACJ,CAAC,CAAC;IAEH,IAAI,CAAC,WAAW,EAAE,CAAC;QAClB,gCAAgC;QAChC,OAAO;IACR,CAAC;IAED,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAE1D,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,6BAA6B;QAC7B,OAAO;IACR,CAAC;IAED,MAAM,IAAI,GAAG,MAAM,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACtD,IAAI,CAAC,IAAI,EAAE,CAAC;QACX,OAAO;IACR,CAAC;IAED,gBAAgB;IAChB,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;QAC5E,GAAG,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,QAAQ,IAAI,GAAG,EAAE,CAAC;IAC3C,CAAC;IAED,gFAAgF;IAChF,4EAA4E;IAC5E,4BAA4B;IAC5B,oEAAoE;IACpE,mCAAmC;IACnC,4EAA4E;IAC5E,mCAAmC;IACnC,kEAAkE;IAClE,IAAI;IACJ,4BAA4B;IAC5B,+BAA+B;IAE/B,MAAM,YAAY,GAAG,MAAM,aAAa,CAAC,wBAAwB,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7F,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC;QACpE,kBAAkB;QAClB,OAAO;IACR,CAAC;IAED,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE,CAAC;QAC1D,gBAAgB;QAChB,OAAO;IACR,CAAC;IAED,mBAAmB;IACnB,IAAI,QAAQ,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,CAAC,MAAM,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YAC1E,yCAAyC;YACzC,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE,CAAC;gBAC7D,OAAO;YACR,CAAC;QACF,CAAC;IACF,CAAC;IAED,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,kIAAkI;IAE9J,MAAM,OAAO,GAAgF;QAC5F,EAAE,EAAE,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;QACpC,GAAG;QACH,WAAW,EAAE,IAAI;QACjB,SAAS,EAAE,KAAK;QAChB,IAAI,EAAE,GAAG;QACT,GAAG,EAAE,WAAW,CAAC,GAAG;KACpB,CAAC;IAEF,OAAO,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC7C,CAAC,CAAC","sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { Messages, Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport type { ParsedMail } from 'mailparser';\nimport moment from 'moment';\n\nimport { canAccessRoomAsync } from '../../../authorization/server';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { metrics } from '../../../metrics/server';\nimport { settings } from '../../../settings/server';\nimport { sendMessage } from '../functions/sendMessage';\n\nconst isParsedEmail = (email: ParsedMail): email is Required<ParsedMail> => 'date' in email && 'html' in email;\n\nexport const processDirectEmail = async function (email: ParsedMail): Promise<void> {\n\tif (!isParsedEmail(email)) {\n\t\treturn;\n\t}\n\n\tconst to = Array.isArray(email.to) ? email.to.find((email) => email.text) : email.to;\n\tconst mid = to?.text.split('@')[0].split('+')[1];\n\n\tif (!mid) {\n\t\treturn;\n\t}\n\n\tconst ts = new Date(email.date);\n\n\tconst tsDiff = Math.abs(moment(ts).diff(new Date()));\n\n\tlet msg = email.text.split('\\n\\n').join('\\n');\n\n\tif (msg && msg.length > (settings.get('Message_MaxAllowedSize') as number)) {\n\t\treturn;\n\t}\n\tconst emailAdress = email.from.value[0].address;\n\tif (!emailAdress) {\n\t\treturn;\n\t}\n\n\tconst user = await Users.findOneByEmailAddress(emailAdress, {\n\t\tprojection: {\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t},\n\t});\n\n\tif (!user?.username) {\n\t\t// user not found\n\t\treturn;\n\t}\n\n\tconst prevMessage = await Messages.findOneById(mid, {\n\t\trid: 1,\n\t\tu: 1,\n\t});\n\n\tif (!prevMessage) {\n\t\t// message doesn't exist anymore\n\t\treturn;\n\t}\n\n\tconst roomInfo = await Rooms.findOneById(prevMessage.rid);\n\n\tif (!roomInfo) {\n\t\t// room doesn't exist anymore\n\t\treturn;\n\t}\n\n\tconst room = await canAccessRoomAsync(roomInfo, user);\n\tif (!room) {\n\t\treturn;\n\t}\n\n\t// check mention\n\tif (msg.indexOf(`@${prevMessage.u.username}`) === -1 && roomInfo.t !== 'd') {\n\t\tmsg = `@${prevMessage.u.username} ${msg}`;\n\t}\n\n\t// reply message link WE HA THREADS KNOW DONT NEED TO QUOTE THE previous message\n\t// let prevMessageLink = `[ ](${ Meteor.absoluteUrl().replace(/\\/$/, '') }`;\n\t// if (roomInfo.t === 'c') {\n\t// \tprevMessageLink += `/channel/${ roomInfo.name }?msg=${ mid }) `;\n\t// } else if (roomInfo.t === 'd') {\n\t// \tprevMessageLink += `/direct/${ prevMessage.u.username }?msg=${ mid }) `;\n\t// } else if (roomInfo.t === 'p') {\n\t// \tprevMessageLink += `/group/${ roomInfo.name }?msg=${ mid }) `;\n\t// }\n\t// // add reply message link\n\t// msg = prevMessageLink + msg;\n\n\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(prevMessage.rid, user._id);\n\tif (subscription && (subscription.blocked || subscription.blocker)) {\n\t\t// room is blocked\n\t\treturn;\n\t}\n\n\tif ((roomInfo.muted || []).includes(user.username || '')) {\n\t\t// user is muted\n\t\treturn;\n\t}\n\n\t// room is readonly\n\tif (roomInfo.ro === true) {\n\t\tif (!(await hasPermissionAsync(user._id, 'post-readonly', roomInfo._id))) {\n\t\t\t// Check if the user was manually unmuted\n\t\t\tif (!(roomInfo.unmuted || []).includes(user.username || '')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tmetrics.messagesSent.inc(); // TODO This line needs to be moved to it's proper place. See the comments on: https://github.com/RocketChat/Rocket.Chat/pull/5736\n\n\tconst message: Pick<IMessage, 'ts' | 'msg' | 'groupable' | 'rid' | 'sentByEmail' | 'tmid'> = {\n\t\tts: tsDiff < 10000 ? ts : new Date(),\n\t\tmsg,\n\t\tsentByEmail: true,\n\t\tgroupable: false,\n\t\ttmid: mid,\n\t\trid: prevMessage.rid,\n\t};\n\n\treturn sendMessage(user, message, roomInfo);\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      processDirectEmail: () => processDirectEmail\n    });\n    let Messages, Subscriptions, Users, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 0);\n    let moment;\n    module.link(\"moment\", {\n      default(v) {\n        moment = v;\n      }\n    }, 1);\n    let canAccessRoomAsync;\n    module.link(\"../../../authorization/server\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      }\n    }, 2);\n    let hasPermissionAsync;\n    module.link(\"../../../authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 3);\n    let metrics;\n    module.link(\"../../../metrics/server\", {\n      metrics(v) {\n        metrics = v;\n      }\n    }, 4);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 5);\n    let sendMessage;\n    module.link(\"../functions/sendMessage\", {\n      sendMessage(v) {\n        sendMessage = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const isParsedEmail = email => 'date' in email && 'html' in email;\n    const processDirectEmail = async function (email) {\n      if (!isParsedEmail(email)) {\n        return;\n      }\n      const to = Array.isArray(email.to) ? email.to.find(email => email.text) : email.to;\n      const mid = to === null || to === void 0 ? void 0 : to.text.split('@')[0].split('+')[1];\n      if (!mid) {\n        return;\n      }\n      const ts = new Date(email.date);\n      const tsDiff = Math.abs(moment(ts).diff(new Date()));\n      let msg = email.text.split('\\n\\n').join('\\n');\n      if (msg && msg.length > settings.get('Message_MaxAllowedSize')) {\n        return;\n      }\n      const emailAdress = email.from.value[0].address;\n      if (!emailAdress) {\n        return;\n      }\n      const user = await Users.findOneByEmailAddress(emailAdress, {\n        projection: {\n          username: 1,\n          name: 1\n        }\n      });\n      if (!(user !== null && user !== void 0 && user.username)) {\n        // user not found\n        return;\n      }\n      const prevMessage = await Messages.findOneById(mid, {\n        rid: 1,\n        u: 1\n      });\n      if (!prevMessage) {\n        // message doesn't exist anymore\n        return;\n      }\n      const roomInfo = await Rooms.findOneById(prevMessage.rid);\n      if (!roomInfo) {\n        // room doesn't exist anymore\n        return;\n      }\n      const room = await canAccessRoomAsync(roomInfo, user);\n      if (!room) {\n        return;\n      }\n      // check mention\n      if (msg.indexOf(\"@\".concat(prevMessage.u.username)) === -1 && roomInfo.t !== 'd') {\n        msg = \"@\".concat(prevMessage.u.username, \" \").concat(msg);\n      }\n      // reply message link WE HA THREADS KNOW DONT NEED TO QUOTE THE previous message\n      // let prevMessageLink = `[ ](${ Meteor.absoluteUrl().replace(/\\/$/, '') }`;\n      // if (roomInfo.t === 'c') {\n      // \tprevMessageLink += `/channel/${ roomInfo.name }?msg=${ mid }) `;\n      // } else if (roomInfo.t === 'd') {\n      // \tprevMessageLink += `/direct/${ prevMessage.u.username }?msg=${ mid }) `;\n      // } else if (roomInfo.t === 'p') {\n      // \tprevMessageLink += `/group/${ roomInfo.name }?msg=${ mid }) `;\n      // }\n      // // add reply message link\n      // msg = prevMessageLink + msg;\n      const subscription = await Subscriptions.findOneByRoomIdAndUserId(prevMessage.rid, user._id);\n      if (subscription && (subscription.blocked || subscription.blocker)) {\n        // room is blocked\n        return;\n      }\n      if ((roomInfo.muted || []).includes(user.username || '')) {\n        // user is muted\n        return;\n      }\n      // room is readonly\n      if (roomInfo.ro === true) {\n        if (!(await hasPermissionAsync(user._id, 'post-readonly', roomInfo._id))) {\n          // Check if the user was manually unmuted\n          if (!(roomInfo.unmuted || []).includes(user.username || '')) {\n            return;\n          }\n        }\n      }\n      metrics.messagesSent.inc(); // TODO This line needs to be moved to it's proper place. See the comments on: https://github.com/RocketChat/Rocket.Chat/pull/5736\n      const message = {\n        ts: tsDiff < 10000 ? ts : new Date(),\n        msg,\n        sentByEmail: true,\n        groupable: false,\n        tmid: mid,\n        rid: prevMessage.rid\n      };\n      return sendMessage(user, message, roomInfo);\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","processDirectEmail","Messages","Subscriptions","Users","Rooms","link","v","moment","default","canAccessRoomAsync","hasPermissionAsync","metrics","settings","sendMessage","__reifyWaitForDeps__","isParsedEmail","email","to","Array","isArray","find","text","mid","split","ts","Date","date","tsDiff","Math","abs","diff","msg","join","length","get","emailAdress","from","value","address","user","findOneByEmailAddress","projection","username","name","prevMessage","findOneById","rid","u","roomInfo","room","indexOf","concat","t","subscription","findOneByRoomIdAndUserId","_id","blocked","blocker","muted","includes","ro","unmuted","messagesSent","inc","message","sentByEmail","groupable","tmid","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/lib/processDirectEmail.ts"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { Messages, Subscriptions, Users, Rooms } from '@rocket.chat/models';\nimport type { ParsedMail } from 'mailparser';\nimport moment from 'moment';\n\nimport { canAccessRoomAsync } from '../../../authorization/server';\nimport { hasPermissionAsync } from '../../../authorization/server/functions/hasPermission';\nimport { metrics } from '../../../metrics/server';\nimport { settings } from '../../../settings/server';\nimport { sendMessage } from '../functions/sendMessage';\n\nconst isParsedEmail = (email: ParsedMail): email is Required<ParsedMail> => 'date' in email && 'html' in email;\n\nexport const processDirectEmail = async function (email: ParsedMail): Promise<void> {\n\tif (!isParsedEmail(email)) {\n\t\treturn;\n\t}\n\n\tconst to = Array.isArray(email.to) ? email.to.find((email) => email.text) : email.to;\n\tconst mid = to?.text.split('@')[0].split('+')[1];\n\n\tif (!mid) {\n\t\treturn;\n\t}\n\n\tconst ts = new Date(email.date);\n\n\tconst tsDiff = Math.abs(moment(ts).diff(new Date()));\n\n\tlet msg = email.text.split('\\n\\n').join('\\n');\n\n\tif (msg && msg.length > (settings.get('Message_MaxAllowedSize') as number)) {\n\t\treturn;\n\t}\n\tconst emailAdress = email.from.value[0].address;\n\tif (!emailAdress) {\n\t\treturn;\n\t}\n\n\tconst user = await Users.findOneByEmailAddress(emailAdress, {\n\t\tprojection: {\n\t\t\tusername: 1,\n\t\t\tname: 1,\n\t\t},\n\t});\n\n\tif (!user?.username) {\n\t\t// user not found\n\t\treturn;\n\t}\n\n\tconst prevMessage = await Messages.findOneById(mid, {\n\t\trid: 1,\n\t\tu: 1,\n\t});\n\n\tif (!prevMessage) {\n\t\t// message doesn't exist anymore\n\t\treturn;\n\t}\n\n\tconst roomInfo = await Rooms.findOneById(prevMessage.rid);\n\n\tif (!roomInfo) {\n\t\t// room doesn't exist anymore\n\t\treturn;\n\t}\n\n\tconst room = await canAccessRoomAsync(roomInfo, user);\n\tif (!room) {\n\t\treturn;\n\t}\n\n\t// check mention\n\tif (msg.indexOf(`@${prevMessage.u.username}`) === -1 && roomInfo.t !== 'd') {\n\t\tmsg = `@${prevMessage.u.username} ${msg}`;\n\t}\n\n\t// reply message link WE HA THREADS KNOW DONT NEED TO QUOTE THE previous message\n\t// let prevMessageLink = `[ ](${ Meteor.absoluteUrl().replace(/\\/$/, '') }`;\n\t// if (roomInfo.t === 'c') {\n\t// \tprevMessageLink += `/channel/${ roomInfo.name }?msg=${ mid }) `;\n\t// } else if (roomInfo.t === 'd') {\n\t// \tprevMessageLink += `/direct/${ prevMessage.u.username }?msg=${ mid }) `;\n\t// } else if (roomInfo.t === 'p') {\n\t// \tprevMessageLink += `/group/${ roomInfo.name }?msg=${ mid }) `;\n\t// }\n\t// // add reply message link\n\t// msg = prevMessageLink + msg;\n\n\tconst subscription = await Subscriptions.findOneByRoomIdAndUserId(prevMessage.rid, user._id);\n\tif (subscription && (subscription.blocked || subscription.blocker)) {\n\t\t// room is blocked\n\t\treturn;\n\t}\n\n\tif ((roomInfo.muted || []).includes(user.username || '')) {\n\t\t// user is muted\n\t\treturn;\n\t}\n\n\t// room is readonly\n\tif (roomInfo.ro === true) {\n\t\tif (!(await hasPermissionAsync(user._id, 'post-readonly', roomInfo._id))) {\n\t\t\t// Check if the user was manually unmuted\n\t\t\tif (!(roomInfo.unmuted || []).includes(user.username || '')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tmetrics.messagesSent.inc(); // TODO This line needs to be moved to it's proper place. See the comments on: https://github.com/RocketChat/Rocket.Chat/pull/5736\n\n\tconst message: Pick<IMessage, 'ts' | 'msg' | 'groupable' | 'rid' | 'sentByEmail' | 'tmid'> = {\n\t\tts: tsDiff < 10000 ? ts : new Date(),\n\t\tmsg,\n\t\tsentByEmail: true,\n\t\tgroupable: false,\n\t\ttmid: mid,\n\t\trid: prevMessage.rid,\n\t};\n\n\treturn sendMessage(user, message, roomInfo);\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"099a35f82f20ef908921dbe03996dbbb670a2a4a"}
