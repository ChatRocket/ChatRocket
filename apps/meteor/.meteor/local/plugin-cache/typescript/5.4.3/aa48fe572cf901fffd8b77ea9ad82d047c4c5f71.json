{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","inputSourceMap":{"version":3,"file":"client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","sourceRoot":"","sources":["client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAE7E,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAO3C,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAAC,EAAE,OAAO,GAAG,IAAI,EAAE,GAAG,OAAO,KAA+C,EAAE,EAAE,EAAE;IAClI,MAAM,GAAG,GAAG,SAAS,EAAE,CAAC;IAExB,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,sBAAsB,CAAU,EAAE,EAAE,CAAC,CAAC;IAEhF,MAAM,aAAa,GAAG,WAAW,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;IAErE,MAAM,iBAAiB,GAAG,QAAQ,CAAC;QAClC,QAAQ;QACR,OAAO,EAAE,KAAK,IAA0C,EAAE;YACzD,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,aAAa,EAAE,CAAC;YAC3C,OAAO,QAAQ,CAAC;QACjB,CAAC;QACD,OAAO,EAAE,CAAC,CAAC,GAAG,IAAI,OAAO;QACzB,SAAS,EAAE,QAAQ;QACnB,GAAG,OAAO;KACV,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IAErC,MAAM,qBAAqB,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;IAEvD,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YACtB,OAAO;QACR,CAAC;QAED,OAAO,qBAAqB,CAAC,GAAG,GAAG,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;YACnE,QAAQ,IAAI,EAAE,CAAC;gBACd,KAAK,SAAS;oBACb,WAAW,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;oBACxC,MAAM;gBAEP,KAAK,SAAS;oBACb,WAAW,CAAC,YAAY,CAA8B,QAAQ,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE;wBAC5E,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC;oBACnE,CAAC,CAAC,CAAC;oBACH,MAAM;YACR,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,qBAAqB,CAAC,CAAC,CAAC;IAEjE,OAAO,iBAAiB,CAAC;AAC1B,CAAC,CAAC","sourcesContent":["import type { IWebdavAccountIntegration } from '@rocket.chat/core-typings';\nimport { useUserId, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryOptions } from '@tanstack/react-query';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useEffect, useMemo } from 'react';\n\ntype UseWebDAVAccountIntegrationsQueryOptions = Omit<\n\tUseQueryOptions<IWebdavAccountIntegration[], unknown, IWebdavAccountIntegration[], readonly ['webdav', 'account-integrations']>,\n\t'queryKey' | 'queryFn'\n>;\n\nexport const useWebDAVAccountIntegrationsQuery = ({ enabled = true, ...options }: UseWebDAVAccountIntegrationsQueryOptions = {}) => {\n\tconst uid = useUserId();\n\n\tconst queryKey = useMemo(() => ['webdav', 'account-integrations'] as const, []);\n\n\tconst getMyAccounts = useEndpoint('GET', '/v1/webdav.getMyAccounts');\n\n\tconst integrationsQuery = useQuery({\n\t\tqueryKey,\n\t\tqueryFn: async (): Promise<IWebdavAccountIntegration[]> => {\n\t\t\tconst { accounts } = await getMyAccounts();\n\t\t\treturn accounts;\n\t\t},\n\t\tenabled: !!uid && enabled,\n\t\tstaleTime: Infinity,\n\t\t...options,\n\t});\n\n\tconst queryClient = useQueryClient();\n\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\n\tuseEffect(() => {\n\t\tif (!uid || !enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn subscribeToNotifyUser(`${uid}/webdav`, ({ type, account }) => {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'changed':\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'removed':\n\t\t\t\t\tqueryClient.setQueryData<IWebdavAccountIntegration[]>(queryKey, (old = []) => {\n\t\t\t\t\t\treturn old.filter((oldAccount) => oldAccount._id !== account._id);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}, [enabled, queryClient, queryKey, uid, subscribeToNotifyUser]);\n\n\treturn integrationsQuery;\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","inputSourceMap":{"version":3,"file":"client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts","sourceRoot":"","sources":["client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAE7E,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAO3C,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAAC,EAAE,OAAO,GAAG,IAAI,EAAE,GAAG,OAAO,KAA+C,EAAE,EAAE,EAAE;IAClI,MAAM,GAAG,GAAG,SAAS,EAAE,CAAC;IAExB,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE,sBAAsB,CAAU,EAAE,EAAE,CAAC,CAAC;IAEhF,MAAM,aAAa,GAAG,WAAW,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;IAErE,MAAM,iBAAiB,GAAG,QAAQ,CAAC;QAClC,QAAQ;QACR,OAAO,EAAE,KAAK,IAA0C,EAAE;YACzD,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,aAAa,EAAE,CAAC;YAC3C,OAAO,QAAQ,CAAC;QACjB,CAAC;QACD,OAAO,EAAE,CAAC,CAAC,GAAG,IAAI,OAAO;QACzB,SAAS,EAAE,QAAQ;QACnB,GAAG,OAAO;KACV,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IAErC,MAAM,qBAAqB,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;IAEvD,SAAS,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YACtB,OAAO;QACR,CAAC;QAED,OAAO,qBAAqB,CAAC,GAAG,GAAG,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;YACnE,QAAQ,IAAI,EAAE,CAAC;gBACd,KAAK,SAAS;oBACb,WAAW,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;oBACxC,MAAM;gBAEP,KAAK,SAAS;oBACb,WAAW,CAAC,YAAY,CAA8B,QAAQ,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE;wBAC5E,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC;oBACnE,CAAC,CAAC,CAAC;oBACH,MAAM;YACR,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,EAAE,qBAAqB,CAAC,CAAC,CAAC;IAEjE,OAAO,iBAAiB,CAAC;AAC1B,CAAC,CAAC","sourcesContent":["import type { IWebdavAccountIntegration } from '@rocket.chat/core-typings';\nimport { useUserId, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryOptions } from '@tanstack/react-query';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useEffect, useMemo } from 'react';\n\ntype UseWebDAVAccountIntegrationsQueryOptions = Omit<\n\tUseQueryOptions<IWebdavAccountIntegration[], unknown, IWebdavAccountIntegration[], readonly ['webdav', 'account-integrations']>,\n\t'queryKey' | 'queryFn'\n>;\n\nexport const useWebDAVAccountIntegrationsQuery = ({ enabled = true, ...options }: UseWebDAVAccountIntegrationsQueryOptions = {}) => {\n\tconst uid = useUserId();\n\n\tconst queryKey = useMemo(() => ['webdav', 'account-integrations'] as const, []);\n\n\tconst getMyAccounts = useEndpoint('GET', '/v1/webdav.getMyAccounts');\n\n\tconst integrationsQuery = useQuery({\n\t\tqueryKey,\n\t\tqueryFn: async (): Promise<IWebdavAccountIntegration[]> => {\n\t\t\tconst { accounts } = await getMyAccounts();\n\t\t\treturn accounts;\n\t\t},\n\t\tenabled: !!uid && enabled,\n\t\tstaleTime: Infinity,\n\t\t...options,\n\t});\n\n\tconst queryClient = useQueryClient();\n\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\n\tuseEffect(() => {\n\t\tif (!uid || !enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn subscribeToNotifyUser(`${uid}/webdav`, ({ type, account }) => {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'changed':\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'removed':\n\t\t\t\t\tqueryClient.setQueryData<IWebdavAccountIntegration[]>(queryKey, (old = []) => {\n\t\t\t\t\t\treturn old.filter((oldAccount) => oldAccount._id !== account._id);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}, [enabled, queryClient, queryKey, uid, subscribeToNotifyUser]);\n\n\treturn integrationsQuery;\n};\n"]}}},"code":"const _excluded = [\"enabled\"];\nlet _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nlet _objectWithoutProperties;\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n}, 1);\nmodule.export({\n  useWebDAVAccountIntegrationsQuery: () => useWebDAVAccountIntegrationsQuery\n});\nlet useUserId, useEndpoint, useStream;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useUserId(v) {\n    useUserId = v;\n  },\n  useEndpoint(v) {\n    useEndpoint = v;\n  },\n  useStream(v) {\n    useStream = v;\n  }\n}, 0);\nlet useQuery, useQueryClient;\nmodule.link(\"@tanstack/react-query\", {\n  useQuery(v) {\n    useQuery = v;\n  },\n  useQueryClient(v) {\n    useQueryClient = v;\n  }\n}, 1);\nlet useEffect, useMemo;\nmodule.link(\"react\", {\n  useEffect(v) {\n    useEffect = v;\n  },\n  useMemo(v) {\n    useMemo = v;\n  }\n}, 2);\nconst useWebDAVAccountIntegrationsQuery = function () {\n  let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n      enabled = true\n    } = _ref,\n    options = _objectWithoutProperties(_ref, _excluded);\n  const uid = useUserId();\n  const queryKey = useMemo(() => ['webdav', 'account-integrations'], []);\n  const getMyAccounts = useEndpoint('GET', '/v1/webdav.getMyAccounts');\n  const integrationsQuery = useQuery(_objectSpread({\n    queryKey,\n    queryFn: async () => {\n      const {\n        accounts\n      } = await getMyAccounts();\n      return accounts;\n    },\n    enabled: !!uid && enabled,\n    staleTime: Infinity\n  }, options));\n  const queryClient = useQueryClient();\n  const subscribeToNotifyUser = useStream('notify-user');\n  useEffect(() => {\n    if (!uid || !enabled) {\n      return;\n    }\n    return subscribeToNotifyUser(\"\".concat(uid, \"/webdav\"), _ref2 => {\n      let {\n        type,\n        account\n      } = _ref2;\n      switch (type) {\n        case 'changed':\n          queryClient.invalidateQueries(queryKey);\n          break;\n        case 'removed':\n          queryClient.setQueryData(queryKey, function () {\n            let old = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            return old.filter(oldAccount => oldAccount._id !== account._id);\n          });\n          break;\n      }\n    });\n  }, [enabled, queryClient, queryKey, uid, subscribeToNotifyUser]);\n  return integrationsQuery;\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","export","useWebDAVAccountIntegrationsQuery","useUserId","useEndpoint","useStream","useQuery","useQueryClient","useEffect","useMemo","_ref","arguments","length","undefined","enabled","options","_excluded","uid","queryKey","getMyAccounts","integrationsQuery","queryFn","accounts","staleTime","Infinity","queryClient","subscribeToNotifyUser","concat","_ref2","type","account","invalidateQueries","setQueryData","old","filter","oldAccount","_id"],"sources":["client/hooks/webdav/useWebDAVAccountIntegrationsQuery.ts"],"sourcesContent":["import type { IWebdavAccountIntegration } from '@rocket.chat/core-typings';\nimport { useUserId, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryOptions } from '@tanstack/react-query';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useEffect, useMemo } from 'react';\n\ntype UseWebDAVAccountIntegrationsQueryOptions = Omit<\n\tUseQueryOptions<IWebdavAccountIntegration[], unknown, IWebdavAccountIntegration[], readonly ['webdav', 'account-integrations']>,\n\t'queryKey' | 'queryFn'\n>;\n\nexport const useWebDAVAccountIntegrationsQuery = ({ enabled = true, ...options }: UseWebDAVAccountIntegrationsQueryOptions = {}) => {\n\tconst uid = useUserId();\n\n\tconst queryKey = useMemo(() => ['webdav', 'account-integrations'] as const, []);\n\n\tconst getMyAccounts = useEndpoint('GET', '/v1/webdav.getMyAccounts');\n\n\tconst integrationsQuery = useQuery({\n\t\tqueryKey,\n\t\tqueryFn: async (): Promise<IWebdavAccountIntegration[]> => {\n\t\t\tconst { accounts } = await getMyAccounts();\n\t\t\treturn accounts;\n\t\t},\n\t\tenabled: !!uid && enabled,\n\t\tstaleTime: Infinity,\n\t\t...options,\n\t});\n\n\tconst queryClient = useQueryClient();\n\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\n\tuseEffect(() => {\n\t\tif (!uid || !enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn subscribeToNotifyUser(`${uid}/webdav`, ({ type, account }) => {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'changed':\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'removed':\n\t\t\t\t\tqueryClient.setQueryData<IWebdavAccountIntegration[]>(queryKey, (old = []) => {\n\t\t\t\t\t\treturn old.filter((oldAccount) => oldAccount._id !== account._id);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}, [enabled, queryClient, queryKey, uid, subscribeToNotifyUser]);\n\n\treturn integrationsQuery;\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"aa48fe572cf901fffd8b77ea9ad82d047c4c5f71"}
