{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/chats/readStateManager.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/chats/readStateManager.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/chats/readStateManager.ts","inputSourceMap":{"version":3,"file":"client/lib/chats/readStateManager.ts","sourceRoot":"","sources":["client/lib/chats/readStateManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { ChatMessage } from '../../../app/models/client';\nimport { LegacyRoomManager } from '../../../app/ui-utils/client/lib/LegacyRoomManager';\nimport { RoomHistoryManager } from '../../../app/ui-utils/client/lib/RoomHistoryManager';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { withDebouncing } from '../../../lib/utils/highOrderFunctions';\n\nexport class ReadStateManager extends Emitter {\n\tprivate rid: IRoom['_id'];\n\n\tprivate firstUnreadRecordId?: IMessage['_id'];\n\n\tprivate subscription?: ISubscription;\n\n\tpublic constructor(rid: IRoom['_id']) {\n\t\tsuper();\n\t\tthis.rid = rid;\n\t}\n\n\tpublic getRid() {\n\t\treturn this.rid;\n\t}\n\n\t// TODO: Use ref to get unreadMark\n\t// private unreadMark?: HTMLElement;\n\tprivate get unreadMark() {\n\t\treturn document.querySelector<HTMLElement>('.rcx-message-divider--unread');\n\t}\n\n\tpublic onUnreadStateChange = (callback: () => void): (() => void) => {\n\t\treturn this.on('unread-state-change', callback);\n\t};\n\n\tpublic getFirstUnreadRecordId = () => {\n\t\treturn this.firstUnreadRecordId;\n\t};\n\n\tpublic updateSubscription(subscription?: ISubscription) {\n\t\tif (!subscription) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUpdate = !this.subscription;\n\n\t\tthis.subscription = subscription;\n\t\tLegacyRoomManager.getOpenedRoomByRid(this.rid)?.unreadSince.set(this.subscription.ls);\n\n\t\tconst { unread, alert } = this.subscription;\n\t\tif (!unread && !alert) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate) {\n\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\treturn;\n\t\t}\n\n\t\tif (document.hasFocus() && this.firstUnreadRecordId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateFirstUnreadRecordId();\n\t}\n\n\tprivate updateFirstUnreadRecordId() {\n\t\tif (!this.subscription?.ls) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUnreadRecord = ChatMessage.findOne(\n\t\t\t{\n\t\t\t\t'rid': this.subscription.rid,\n\t\t\t\t'ts': {\n\t\t\t\t\t$gt: this.subscription.ls,\n\t\t\t\t},\n\t\t\t\t'u._id': {\n\t\t\t\t\t$ne: Meteor.userId() ?? undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tts: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.setFirstUnreadRecordId(firstUnreadRecord?._id);\n\n\t\tRoomHistoryManager.once('loaded-messages', () => this.updateFirstUnreadRecordId());\n\t}\n\n\tprivate setFirstUnreadRecordId(firstUnreadRecordId: string | undefined) {\n\t\tthis.firstUnreadRecordId = firstUnreadRecordId;\n\t\tthis.emit('unread-state-change', this.firstUnreadRecordId);\n\t}\n\n\tpublic clearUnreadMark() {\n\t\tthis.setFirstUnreadRecordId(undefined);\n\t}\n\n\tpublic handleWindowEvents = (): (() => void) => {\n\t\tconst handleWindowFocus = () => {\n\t\t\tthis.attemptMarkAsRead();\n\t\t};\n\n\t\tconst handleWindowKeyUp = (event: KeyboardEvent) => {\n\t\t\tif (event.key === 'Escape') {\n\t\t\t\tthis.markAsRead();\n\t\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('focus', handleWindowFocus);\n\t\twindow.addEventListener('keyup', handleWindowKeyUp);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('focus', handleWindowFocus);\n\t\t\twindow.removeEventListener('keyup', handleWindowKeyUp);\n\t\t};\n\t};\n\n\tprivate isUnreadMarkVisible(): boolean {\n\t\tif (!this.unreadMark) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.unreadMark.offsetTop > (this.unreadMark.offsetParent?.scrollTop || 0);\n\t}\n\n\t// This will only mark as read if the unread mark is visible\n\tpublic attemptMarkAsRead() {\n\t\tconst { alert, unread } = this.subscription || {};\n\t\tif (!alert && unread === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!document.hasFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.unreadMark && !this.isUnreadMarkVisible()) {\n\t\t\treturn;\n\t\t}\n\t\t// if there are unloaded unread messages, don't mark as read\n\t\tif (RoomHistoryManager.getRoom(this.rid).unreadNotLoaded.get() > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.markAsRead();\n\t}\n\n\tpublic debouncedMarkAsRead = withDebouncing({ wait: 1000 })(() => {\n\t\ttry {\n\t\t\treturn this.markAsRead();\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t});\n\n\t// this will always mark as read.\n\tpublic async markAsRead() {\n\t\tif (!this.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn sdk.rest.post('/v1/subscriptions.read', { rid: this.rid }).then(() => {\n\t\t\tRoomHistoryManager.getRoom(this.rid).unreadNotLoaded.set(0);\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/chats/readStateManager.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/chats/readStateManager.ts","inputSourceMap":{"version":3,"file":"client/lib/chats/readStateManager.ts","sourceRoot":"","sources":["client/lib/chats/readStateManager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { ChatMessage } from '../../../app/models/client';\nimport { LegacyRoomManager } from '../../../app/ui-utils/client/lib/LegacyRoomManager';\nimport { RoomHistoryManager } from '../../../app/ui-utils/client/lib/RoomHistoryManager';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { withDebouncing } from '../../../lib/utils/highOrderFunctions';\n\nexport class ReadStateManager extends Emitter {\n\tprivate rid: IRoom['_id'];\n\n\tprivate firstUnreadRecordId?: IMessage['_id'];\n\n\tprivate subscription?: ISubscription;\n\n\tpublic constructor(rid: IRoom['_id']) {\n\t\tsuper();\n\t\tthis.rid = rid;\n\t}\n\n\tpublic getRid() {\n\t\treturn this.rid;\n\t}\n\n\t// TODO: Use ref to get unreadMark\n\t// private unreadMark?: HTMLElement;\n\tprivate get unreadMark() {\n\t\treturn document.querySelector<HTMLElement>('.rcx-message-divider--unread');\n\t}\n\n\tpublic onUnreadStateChange = (callback: () => void): (() => void) => {\n\t\treturn this.on('unread-state-change', callback);\n\t};\n\n\tpublic getFirstUnreadRecordId = () => {\n\t\treturn this.firstUnreadRecordId;\n\t};\n\n\tpublic updateSubscription(subscription?: ISubscription) {\n\t\tif (!subscription) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUpdate = !this.subscription;\n\n\t\tthis.subscription = subscription;\n\t\tLegacyRoomManager.getOpenedRoomByRid(this.rid)?.unreadSince.set(this.subscription.ls);\n\n\t\tconst { unread, alert } = this.subscription;\n\t\tif (!unread && !alert) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate) {\n\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\treturn;\n\t\t}\n\n\t\tif (document.hasFocus() && this.firstUnreadRecordId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateFirstUnreadRecordId();\n\t}\n\n\tprivate updateFirstUnreadRecordId() {\n\t\tif (!this.subscription?.ls) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUnreadRecord = ChatMessage.findOne(\n\t\t\t{\n\t\t\t\t'rid': this.subscription.rid,\n\t\t\t\t'ts': {\n\t\t\t\t\t$gt: this.subscription.ls,\n\t\t\t\t},\n\t\t\t\t'u._id': {\n\t\t\t\t\t$ne: Meteor.userId() ?? undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tts: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.setFirstUnreadRecordId(firstUnreadRecord?._id);\n\n\t\tRoomHistoryManager.once('loaded-messages', () => this.updateFirstUnreadRecordId());\n\t}\n\n\tprivate setFirstUnreadRecordId(firstUnreadRecordId: string | undefined) {\n\t\tthis.firstUnreadRecordId = firstUnreadRecordId;\n\t\tthis.emit('unread-state-change', this.firstUnreadRecordId);\n\t}\n\n\tpublic clearUnreadMark() {\n\t\tthis.setFirstUnreadRecordId(undefined);\n\t}\n\n\tpublic handleWindowEvents = (): (() => void) => {\n\t\tconst handleWindowFocus = () => {\n\t\t\tthis.attemptMarkAsRead();\n\t\t};\n\n\t\tconst handleWindowKeyUp = (event: KeyboardEvent) => {\n\t\t\tif (event.key === 'Escape') {\n\t\t\t\tthis.markAsRead();\n\t\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('focus', handleWindowFocus);\n\t\twindow.addEventListener('keyup', handleWindowKeyUp);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('focus', handleWindowFocus);\n\t\t\twindow.removeEventListener('keyup', handleWindowKeyUp);\n\t\t};\n\t};\n\n\tprivate isUnreadMarkVisible(): boolean {\n\t\tif (!this.unreadMark) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.unreadMark.offsetTop > (this.unreadMark.offsetParent?.scrollTop || 0);\n\t}\n\n\t// This will only mark as read if the unread mark is visible\n\tpublic attemptMarkAsRead() {\n\t\tconst { alert, unread } = this.subscription || {};\n\t\tif (!alert && unread === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!document.hasFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.unreadMark && !this.isUnreadMarkVisible()) {\n\t\t\treturn;\n\t\t}\n\t\t// if there are unloaded unread messages, don't mark as read\n\t\tif (RoomHistoryManager.getRoom(this.rid).unreadNotLoaded.get() > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.markAsRead();\n\t}\n\n\tpublic debouncedMarkAsRead = withDebouncing({ wait: 1000 })(() => {\n\t\ttry {\n\t\t\treturn this.markAsRead();\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t});\n\n\t// this will always mark as read.\n\tpublic async markAsRead() {\n\t\tif (!this.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn sdk.rest.post('/v1/subscriptions.read', { rid: this.rid }).then(() => {\n\t\t\tRoomHistoryManager.getRoom(this.rid).unreadNotLoaded.set(0);\n\t\t});\n\t}\n}\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _createClass;\nmodule.link(\"@babel/runtime/helpers/createClass\", {\n  default: function (v) {\n    _createClass = v;\n  }\n}, 1);\nvar _inheritsLoose;\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 2);\nmodule.export({\n  ReadStateManager: function () {\n    return ReadStateManager;\n  }\n});\nvar Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter: function (v) {\n    Emitter = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar ChatMessage;\nmodule.link(\"../../../app/models/client\", {\n  ChatMessage: function (v) {\n    ChatMessage = v;\n  }\n}, 2);\nvar LegacyRoomManager;\nmodule.link(\"../../../app/ui-utils/client/lib/LegacyRoomManager\", {\n  LegacyRoomManager: function (v) {\n    LegacyRoomManager = v;\n  }\n}, 3);\nvar RoomHistoryManager;\nmodule.link(\"../../../app/ui-utils/client/lib/RoomHistoryManager\", {\n  RoomHistoryManager: function (v) {\n    RoomHistoryManager = v;\n  }\n}, 4);\nvar sdk;\nmodule.link(\"../../../app/utils/client/lib/SDKClient\", {\n  sdk: function (v) {\n    sdk = v;\n  }\n}, 5);\nvar withDebouncing;\nmodule.link(\"../../../lib/utils/highOrderFunctions\", {\n  withDebouncing: function (v) {\n    withDebouncing = v;\n  }\n}, 6);\nvar ReadStateManager = /*#__PURE__*/function (_Emitter) {\n  function ReadStateManager(rid) {\n    var _this;\n    _this = _Emitter.call(this) || this;\n    _this.rid = void 0;\n    _this.firstUnreadRecordId = void 0;\n    _this.subscription = void 0;\n    _this.onUnreadStateChange = function (callback) {\n      return _this.on('unread-state-change', callback);\n    };\n    _this.getFirstUnreadRecordId = function () {\n      return _this.firstUnreadRecordId;\n    };\n    _this.handleWindowEvents = function () {\n      var handleWindowFocus = function () {\n        _this.attemptMarkAsRead();\n      };\n      var handleWindowKeyUp = function (event) {\n        if (event.key === 'Escape') {\n          _this.markAsRead();\n          _this.updateFirstUnreadRecordId();\n        }\n      };\n      window.addEventListener('focus', handleWindowFocus);\n      window.addEventListener('keyup', handleWindowKeyUp);\n      return function () {\n        window.removeEventListener('focus', handleWindowFocus);\n        window.removeEventListener('keyup', handleWindowKeyUp);\n      };\n    };\n    _this.debouncedMarkAsRead = withDebouncing({\n      wait: 1000\n    })(function () {\n      try {\n        return _this.markAsRead();\n      } catch (e) {\n        console.error(e);\n      }\n    });\n    _this.rid = rid;\n    return _this;\n  }\n  _inheritsLoose(ReadStateManager, _Emitter);\n  var _proto = ReadStateManager.prototype;\n  _proto.getRid = function () {\n    function getRid() {\n      return this.rid;\n    }\n    return getRid;\n  }() // TODO: Use ref to get unreadMark\n  // private unreadMark?: HTMLElement;\n  ;\n  _proto.updateSubscription = function () {\n    function updateSubscription(subscription) {\n      var _LegacyRoomManager$ge;\n      if (!subscription) {\n        return;\n      }\n      var firstUpdate = !this.subscription;\n      this.subscription = subscription;\n      (_LegacyRoomManager$ge = LegacyRoomManager.getOpenedRoomByRid(this.rid)) === null || _LegacyRoomManager$ge === void 0 ? void 0 : _LegacyRoomManager$ge.unreadSince.set(this.subscription.ls);\n      var _this$subscription = this.subscription,\n        unread = _this$subscription.unread,\n        alert = _this$subscription.alert;\n      if (!unread && !alert) {\n        return;\n      }\n      if (firstUpdate) {\n        this.updateFirstUnreadRecordId();\n        return;\n      }\n      if (document.hasFocus() && this.firstUnreadRecordId) {\n        return;\n      }\n      this.updateFirstUnreadRecordId();\n    }\n    return updateSubscription;\n  }();\n  _proto.updateFirstUnreadRecordId = function () {\n    function updateFirstUnreadRecordId() {\n      var _this$subscription2,\n        _Meteor$userId,\n        _this2 = this;\n      if (!((_this$subscription2 = this.subscription) !== null && _this$subscription2 !== void 0 && _this$subscription2.ls)) {\n        return;\n      }\n      var firstUnreadRecord = ChatMessage.findOne({\n        'rid': this.subscription.rid,\n        'ts': {\n          $gt: this.subscription.ls\n        },\n        'u._id': {\n          $ne: (_Meteor$userId = Meteor.userId()) !== null && _Meteor$userId !== void 0 ? _Meteor$userId : undefined\n        }\n      }, {\n        sort: {\n          ts: 1\n        }\n      });\n      this.setFirstUnreadRecordId(firstUnreadRecord === null || firstUnreadRecord === void 0 ? void 0 : firstUnreadRecord._id);\n      RoomHistoryManager.once('loaded-messages', function () {\n        return _this2.updateFirstUnreadRecordId();\n      });\n    }\n    return updateFirstUnreadRecordId;\n  }();\n  _proto.setFirstUnreadRecordId = function () {\n    function setFirstUnreadRecordId(firstUnreadRecordId) {\n      this.firstUnreadRecordId = firstUnreadRecordId;\n      this.emit('unread-state-change', this.firstUnreadRecordId);\n    }\n    return setFirstUnreadRecordId;\n  }();\n  _proto.clearUnreadMark = function () {\n    function clearUnreadMark() {\n      this.setFirstUnreadRecordId(undefined);\n    }\n    return clearUnreadMark;\n  }();\n  _proto.isUnreadMarkVisible = function () {\n    function isUnreadMarkVisible() {\n      var _this$unreadMark$offs;\n      if (!this.unreadMark) {\n        return false;\n      }\n      return this.unreadMark.offsetTop > (((_this$unreadMark$offs = this.unreadMark.offsetParent) === null || _this$unreadMark$offs === void 0 ? void 0 : _this$unreadMark$offs.scrollTop) || 0);\n    }\n    return isUnreadMarkVisible;\n  }() // This will only mark as read if the unread mark is visible\n  ;\n  _proto.attemptMarkAsRead = function () {\n    function attemptMarkAsRead() {\n      var _ref = this.subscription || {},\n        alert = _ref.alert,\n        unread = _ref.unread;\n      if (!alert && unread === 0) {\n        return;\n      }\n      if (!document.hasFocus()) {\n        return;\n      }\n      if (this.unreadMark && !this.isUnreadMarkVisible()) {\n        return;\n      }\n      // if there are unloaded unread messages, don't mark as read\n      if (RoomHistoryManager.getRoom(this.rid).unreadNotLoaded.get() > 0) {\n        return;\n      }\n      return this.markAsRead();\n    }\n    return attemptMarkAsRead;\n  }();\n  // this will always mark as read.\n  _proto.markAsRead = function () {\n    function markAsRead() {\n      var _this3 = this;\n      return _regeneratorRuntime.async(function () {\n        function markAsRead$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (this.rid) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              return _context.abrupt(\"return\", sdk.rest.post('/v1/subscriptions.read', {\n                rid: this.rid\n              }).then(function () {\n                RoomHistoryManager.getRoom(_this3.rid).unreadNotLoaded.set(0);\n              }));\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return markAsRead$;\n      }(), null, this, null, Promise);\n    }\n    return markAsRead;\n  }();\n  return _createClass(ReadStateManager, [{\n    key: \"unreadMark\",\n    get: function () {\n      return document.querySelector('.rcx-message-divider--unread');\n    }\n  }]);\n}(Emitter);","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_createClass","_inheritsLoose","export","ReadStateManager","Emitter","Meteor","ChatMessage","LegacyRoomManager","RoomHistoryManager","sdk","withDebouncing","_Emitter","rid","_this","call","firstUnreadRecordId","subscription","onUnreadStateChange","callback","on","getFirstUnreadRecordId","handleWindowEvents","handleWindowFocus","attemptMarkAsRead","handleWindowKeyUp","event","key","markAsRead","updateFirstUnreadRecordId","window","addEventListener","removeEventListener","debouncedMarkAsRead","wait","e","console","error","_proto","prototype","getRid","updateSubscription","_LegacyRoomManager$ge","firstUpdate","getOpenedRoomByRid","unreadSince","set","ls","_this$subscription","unread","alert","document","hasFocus","_this$subscription2","_Meteor$userId","_this2","firstUnreadRecord","findOne","$gt","$ne","userId","undefined","sort","ts","setFirstUnreadRecordId","_id","once","emit","clearUnreadMark","isUnreadMarkVisible","_this$unreadMark$offs","unreadMark","offsetTop","offsetParent","scrollTop","_ref","getRoom","unreadNotLoaded","get","_this3","async","markAsRead$","_context","prev","next","abrupt","rest","post","then","stop","Promise","querySelector"],"sources":["client/lib/chats/readStateManager.ts"],"sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { ChatMessage } from '../../../app/models/client';\nimport { LegacyRoomManager } from '../../../app/ui-utils/client/lib/LegacyRoomManager';\nimport { RoomHistoryManager } from '../../../app/ui-utils/client/lib/RoomHistoryManager';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { withDebouncing } from '../../../lib/utils/highOrderFunctions';\n\nexport class ReadStateManager extends Emitter {\n\tprivate rid: IRoom['_id'];\n\n\tprivate firstUnreadRecordId?: IMessage['_id'];\n\n\tprivate subscription?: ISubscription;\n\n\tpublic constructor(rid: IRoom['_id']) {\n\t\tsuper();\n\t\tthis.rid = rid;\n\t}\n\n\tpublic getRid() {\n\t\treturn this.rid;\n\t}\n\n\t// TODO: Use ref to get unreadMark\n\t// private unreadMark?: HTMLElement;\n\tprivate get unreadMark() {\n\t\treturn document.querySelector<HTMLElement>('.rcx-message-divider--unread');\n\t}\n\n\tpublic onUnreadStateChange = (callback: () => void): (() => void) => {\n\t\treturn this.on('unread-state-change', callback);\n\t};\n\n\tpublic getFirstUnreadRecordId = () => {\n\t\treturn this.firstUnreadRecordId;\n\t};\n\n\tpublic updateSubscription(subscription?: ISubscription) {\n\t\tif (!subscription) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUpdate = !this.subscription;\n\n\t\tthis.subscription = subscription;\n\t\tLegacyRoomManager.getOpenedRoomByRid(this.rid)?.unreadSince.set(this.subscription.ls);\n\n\t\tconst { unread, alert } = this.subscription;\n\t\tif (!unread && !alert) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate) {\n\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\treturn;\n\t\t}\n\n\t\tif (document.hasFocus() && this.firstUnreadRecordId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateFirstUnreadRecordId();\n\t}\n\n\tprivate updateFirstUnreadRecordId() {\n\t\tif (!this.subscription?.ls) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUnreadRecord = ChatMessage.findOne(\n\t\t\t{\n\t\t\t\t'rid': this.subscription.rid,\n\t\t\t\t'ts': {\n\t\t\t\t\t$gt: this.subscription.ls,\n\t\t\t\t},\n\t\t\t\t'u._id': {\n\t\t\t\t\t$ne: Meteor.userId() ?? undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tts: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.setFirstUnreadRecordId(firstUnreadRecord?._id);\n\n\t\tRoomHistoryManager.once('loaded-messages', () => this.updateFirstUnreadRecordId());\n\t}\n\n\tprivate setFirstUnreadRecordId(firstUnreadRecordId: string | undefined) {\n\t\tthis.firstUnreadRecordId = firstUnreadRecordId;\n\t\tthis.emit('unread-state-change', this.firstUnreadRecordId);\n\t}\n\n\tpublic clearUnreadMark() {\n\t\tthis.setFirstUnreadRecordId(undefined);\n\t}\n\n\tpublic handleWindowEvents = (): (() => void) => {\n\t\tconst handleWindowFocus = () => {\n\t\t\tthis.attemptMarkAsRead();\n\t\t};\n\n\t\tconst handleWindowKeyUp = (event: KeyboardEvent) => {\n\t\t\tif (event.key === 'Escape') {\n\t\t\t\tthis.markAsRead();\n\t\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('focus', handleWindowFocus);\n\t\twindow.addEventListener('keyup', handleWindowKeyUp);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('focus', handleWindowFocus);\n\t\t\twindow.removeEventListener('keyup', handleWindowKeyUp);\n\t\t};\n\t};\n\n\tprivate isUnreadMarkVisible(): boolean {\n\t\tif (!this.unreadMark) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.unreadMark.offsetTop > (this.unreadMark.offsetParent?.scrollTop || 0);\n\t}\n\n\t// This will only mark as read if the unread mark is visible\n\tpublic attemptMarkAsRead() {\n\t\tconst { alert, unread } = this.subscription || {};\n\t\tif (!alert && unread === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!document.hasFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.unreadMark && !this.isUnreadMarkVisible()) {\n\t\t\treturn;\n\t\t}\n\t\t// if there are unloaded unread messages, don't mark as read\n\t\tif (RoomHistoryManager.getRoom(this.rid).unreadNotLoaded.get() > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.markAsRead();\n\t}\n\n\tpublic debouncedMarkAsRead = withDebouncing({ wait: 1000 })(() => {\n\t\ttry {\n\t\t\treturn this.markAsRead();\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t});\n\n\t// this will always mark as read.\n\tpublic async markAsRead() {\n\t\tif (!this.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn sdk.rest.post('/v1/subscriptions.read', { rid: this.rid }).then(() => {\n\t\t\tRoomHistoryManager.getRoom(this.rid).unreadNotLoaded.set(0);\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f0f6a7b1abba949ec2f4bc7412648ea1d57bed5c"}
