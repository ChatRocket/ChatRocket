{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/server/lib/FileUpload.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/file-upload/server/lib/FileUpload.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/server/lib/FileUpload.ts","inputSourceMap":{"version":3,"file":"app/file-upload/server/lib/FileUpload.ts","sourceRoot":"","sources":["app/file-upload/server/lib/FileUpload.ts"],"names":[],"mappings":"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","sourcesContent":["import { Buffer } from 'buffer';\nimport type { WriteStream } from 'fs';\nimport fs from 'fs';\nimport { unlink, rename, writeFile } from 'fs/promises';\nimport type * as http from 'http';\nimport type * as https from 'https';\nimport stream from 'stream';\nimport URL from 'url';\n\nimport { hashLoginToken } from '@rocket.chat/account-utils';\nimport { Apps, AppEvents } from '@rocket.chat/apps';\nimport { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { isE2EEUpload, type IUpload } from '@rocket.chat/core-typings';\nimport { Users, Avatars, UserDataFiles, Uploads, Settings, Subscriptions, Messages, Rooms } from '@rocket.chat/models';\nimport type { NextFunction } from 'connect';\nimport filesize from 'filesize';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { Cookies } from 'meteor/ostrio:cookies';\nimport type { OptionalId } from 'mongodb';\nimport sharp from 'sharp';\nimport type { WritableStreamBuffer } from 'stream-buffers';\nimport streamBuffers from 'stream-buffers';\n\nimport { streamToBuffer } from './streamToBuffer';\nimport { i18n } from '../../../../server/lib/i18n';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\nimport { UploadFS } from '../../../../server/ufs';\nimport { ufsComplete } from '../../../../server/ufs/ufs-methods';\nimport type { Store, StoreOptions } from '../../../../server/ufs/ufs-store';\nimport { canAccessRoomAsync, canAccessRoomIdAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport { settings } from '../../../settings/server';\nimport { mime } from '../../../utils/lib/mimeTypes';\nimport { isValidJWT, generateJWT } from '../../../utils/server/lib/JWTHelper';\nimport { fileUploadIsValidContentType } from '../../../utils/server/restrictions';\n\nconst cookie = new Cookies();\nlet maxFileSize = 0;\n\nsettings.watch('FileUpload_MaxFileSize', async (value: string) => {\n\ttry {\n\t\tmaxFileSize = parseInt(value);\n\t} catch (e) {\n\t\tmaxFileSize = (await Settings.findOneById('FileUpload_MaxFileSize'))?.packageValue as number;\n\t}\n});\n\nconst handlers: Record<string, FileUploadClass> = {};\n\nconst defaults: Record<string, () => Partial<StoreOptions>> = {\n\tUploads() {\n\t\treturn {\n\t\t\tcollection: Uploads,\n\t\t\tfilter: new UploadFS.Filter({\n\t\t\t\tonCheck: FileUpload.validateFileUpload,\n\t\t\t}),\n\t\t\tgetPath(file: IUpload) {\n\t\t\t\treturn `${settings.get('uniqueID')}/uploads/${file.rid}/${file.userId}/${file._id}`;\n\t\t\t},\n\t\t\tonValidate: FileUpload.uploadsOnValidate,\n\t\t\tasync onRead(_fileId: string, file: IUpload, req: http.IncomingMessage, res: http.ServerResponse) {\n\t\t\t\t// Deprecated: Remove support to usf path\n\t\t\t\tif (!(await FileUpload.requestCanAccessFiles(req, file))) {\n\t\t\t\t\tres.writeHead(403);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tres.setHeader('content-disposition', `attachment; filename=\"${encodeURIComponent(file.name || '')}\"`);\n\t\t\t\treturn true;\n\t\t\t},\n\t\t};\n\t},\n\n\tAvatars() {\n\t\treturn {\n\t\t\tcollection: Avatars,\n\t\t\tfilter: new UploadFS.Filter({\n\t\t\t\tonCheck: FileUpload.validateAvatarUpload,\n\t\t\t}),\n\t\t\tgetPath(file: IUpload) {\n\t\t\t\tconst avatarFile = file.rid ? `room-${file.rid}` : file.userId;\n\t\t\t\treturn `${settings.get('uniqueID')}/avatars/${avatarFile}`;\n\t\t\t},\n\t\t\tonValidate: FileUpload.avatarsOnValidate,\n\t\t\tonFinishUpload: FileUpload.avatarsOnFinishUpload,\n\t\t};\n\t},\n\n\tUserDataFiles() {\n\t\treturn {\n\t\t\tcollection: UserDataFiles,\n\t\t\tgetPath(file: IUpload) {\n\t\t\t\treturn `${settings.get('uniqueID')}/uploads/userData/${file.userId}`;\n\t\t\t},\n\t\t\tonValidate: FileUpload.uploadsOnValidate,\n\t\t\tasync onRead(_fileId: string, file: IUpload, req: http.IncomingMessage, res: http.ServerResponse) {\n\t\t\t\tif (!(await FileUpload.requestCanAccessFiles(req))) {\n\t\t\t\t\tres.writeHead(403);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tres.setHeader('content-disposition', `attachment; filename=\"${encodeURIComponent(file.name || '')}\"`);\n\t\t\t\treturn true;\n\t\t\t},\n\t\t};\n\t},\n};\n\nexport const FileUpload = {\n\thandlers,\n\n\tgetPath(path = '') {\n\t\treturn `/file-upload/${path}`;\n\t},\n\n\tconfigureUploadsStore(store: string, name: string, options: any) {\n\t\tconst type = name.split(':').pop();\n\t\tif (!type || !(type in FileUpload.defaults)) {\n\t\t\tthrow new Error('Store type undefined');\n\t\t}\n\t\tconst stores = UploadFS.getStores();\n\t\tdelete stores[name];\n\n\t\treturn new UploadFS.store[store](\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t},\n\t\t\t\toptions,\n\t\t\t\tFileUpload.defaults[type](),\n\t\t\t),\n\t\t);\n\t},\n\n\tasync validateFileUpload(file: IUpload, content?: Buffer) {\n\t\tif (!Match.test(file.rid, String)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// livechat users can upload files but they don't have an userId\n\t\tconst user = (file.userId && (await Users.findOne(file.userId))) || undefined;\n\n\t\tconst room = await Rooms.findOneById(file.rid);\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\t\tconst directMessageAllowed = settings.get('FileUpload_Enabled_Direct');\n\t\tconst fileUploadAllowed = settings.get('FileUpload_Enabled');\n\t\tif (user?.type !== 'app' && (await canAccessRoomAsync(room, user, file)) !== true) {\n\t\t\treturn false;\n\t\t}\n\t\tconst language = user?.language || 'en';\n\t\tif (!fileUploadAllowed) {\n\t\t\tconst reason = i18n.t('FileUpload_Disabled', { lng: language });\n\t\t\tthrow new Meteor.Error('error-file-upload-disabled', reason);\n\t\t}\n\n\t\tif (!directMessageAllowed && room.t === 'd') {\n\t\t\tconst reason = i18n.t('File_not_allowed_direct_messages', { lng: language });\n\t\t\tthrow new Meteor.Error('error-direct-message-file-upload-not-allowed', reason);\n\t\t}\n\n\t\t// -1 maxFileSize means there is no limit\n\t\tif (maxFileSize > -1 && (file.size || 0) > maxFileSize) {\n\t\t\tconst reason = i18n.t('File_exceeds_allowed_size_of_bytes', {\n\t\t\t\tsize: filesize(maxFileSize),\n\t\t\t\tlng: language,\n\t\t\t});\n\t\t\tthrow new Meteor.Error('error-file-too-large', reason);\n\t\t}\n\n\t\tif (!settings.get('E2E_Enable_Encrypt_Files') && isE2EEUpload(file)) {\n\t\t\tconst reason = i18n.t('Encrypted_file_not_allowed', { lng: language });\n\t\t\tthrow new Meteor.Error('error-invalid-file-type', reason);\n\t\t}\n\n\t\t// E2EE files should be of type application/octet-stream. no information about them should be disclosed on upload if they are encrypted\n\t\tif (isE2EEUpload(file)) {\n\t\t\tfile.type = 'application/octet-stream';\n\t\t}\n\n\t\t// E2EE files are of type application/octet-stream, which is whitelisted for E2EE files\n\t\tif (!fileUploadIsValidContentType(file?.type, isE2EEUpload(file) ? 'application/octet-stream' : undefined)) {\n\t\t\tconst reason = i18n.t('File_type_is_not_accepted', { lng: language });\n\t\t\tthrow new Meteor.Error('error-invalid-file-type', reason);\n\t\t}\n\n\t\t// App IPreFileUpload event hook\n\t\ttry {\n\t\t\tawait Apps.self?.triggerEvent(AppEvents.IPreFileUpload, { file, content: content || Buffer.from([]) });\n\t\t} catch (error: any) {\n\t\t\tif (error.name === AppsEngineException.name) {\n\t\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tasync validateAvatarUpload(file: IUpload) {\n\t\tif (!Match.test(file.rid, String) && !Match.test(file.userId, String)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst user = file.uid ? await Users.findOne(file.uid, { projection: { language: 1 } }) : null;\n\t\tconst language = user?.language || 'en';\n\n\t\t// accept only images\n\t\tif (!/^image\\//.test(file.type || '')) {\n\t\t\tconst reason = i18n.t('File_type_is_not_accepted', { lng: language });\n\t\t\tthrow new Meteor.Error('error-invalid-file-type', reason);\n\t\t}\n\n\t\t// -1 maxFileSize means there is no limit\n\t\tif (maxFileSize > -1 && (file.size || 0) > maxFileSize) {\n\t\t\tconst reason = i18n.t('File_exceeds_allowed_size_of_bytes', {\n\t\t\t\tsize: filesize(maxFileSize),\n\t\t\t\tlng: language,\n\t\t\t});\n\t\t\tthrow new Meteor.Error('error-file-too-large', reason);\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tdefaults,\n\n\tasync avatarsOnValidate(this: Store, file: IUpload) {\n\t\tif (settings.get('Accounts_AvatarResize') !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tempFilePath = UploadFS.getTempFilePath(file._id);\n\n\t\tconst height = settings.get('Accounts_AvatarSize') as number;\n\t\tconst width = height as number;\n\n\t\tconst s = sharp(tempFilePath);\n\t\tif (settings.get('FileUpload_RotateImages') === true) {\n\t\t\ts.rotate();\n\t\t}\n\n\t\tconst metadata = await s.metadata();\n\t\t// if (!metadata) {\n\t\t// \tmetadata = {};\n\t\t// }\n\n\t\tconst { data, info } = await s\n\t\t\t.resize({\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tfit: metadata.hasAlpha ? sharp.fit.contain : sharp.fit.cover,\n\t\t\t\tbackground: { r: 255, g: 255, b: 255, alpha: metadata.hasAlpha ? 0 : 1 },\n\t\t\t})\n\t\t\t// Use buffer to get the result in memory then replace the existing file\n\t\t\t// There is no option to override a file using this library\n\t\t\t//\n\t\t\t// BY THE SHARP DOCUMENTATION:\n\t\t\t// toBuffer: Write output to a Buffer. JPEG, PNG, WebP, TIFF and RAW output are supported.\n\t\t\t// By default, the format will match the input image, except GIF and SVG input which become PNG output.\n\t\t\t.toBuffer({ resolveWithObject: true });\n\n\t\ttry {\n\t\t\tawait writeFile(tempFilePath, data);\n\t\t} catch (err: any) {\n\t\t\tSystemLogger.error(err);\n\t\t}\n\n\t\tawait this.getCollection().updateOne(\n\t\t\t{ _id: file._id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tsize: info.size,\n\t\t\t\t\t...(['gif', 'svg'].includes(metadata.format || '') ? { type: 'image/png' } : {}),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t},\n\n\tasync resizeImagePreview(fileParam: IUpload) {\n\t\tlet file = await Uploads.findOneById(fileParam._id);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\tfile = FileUpload.addExtensionTo(file);\n\t\tconst image = await FileUpload.getStore('Uploads')._store.getReadStream(file._id, file);\n\n\t\tconst transformer = sharp().resize({ width: 32, height: 32, fit: 'inside' }).jpeg().blur();\n\t\tconst result = transformer.toBuffer().then((out) => out.toString('base64'));\n\t\timage.pipe(transformer);\n\t\treturn result;\n\t},\n\n\tasync extractMetadata(file: IUpload) {\n\t\treturn sharp(await FileUpload.getBuffer(file)).metadata();\n\t},\n\n\tasync createImageThumbnail(fileParam: IUpload) {\n\t\tif (!settings.get('Message_Attachments_Thumbnails_Enabled')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = settings.get('Message_Attachments_Thumbnails_Width') as number;\n\t\tconst height = settings.get('Message_Attachments_Thumbnails_Height') as number;\n\n\t\tif (fileParam.identify?.size && fileParam.identify.size.height < height && fileParam.identify?.size.width < width) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet file = await Uploads.findOneById(fileParam._id);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tfile = FileUpload.addExtensionTo(file);\n\t\tconst store = FileUpload.getStore('Uploads');\n\t\tconst image = await store._store.getReadStream(file._id, file);\n\n\t\tlet transformer = sharp().resize({ width, height, fit: 'inside' });\n\n\t\tif (file.type === 'image/svg+xml') {\n\t\t\ttransformer = transformer.png();\n\t\t}\n\t\tconst result = transformer.toBuffer({ resolveWithObject: true }).then(({ data, info: { width, height, format } }) => ({\n\t\t\tdata,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tthumbFileType: (mime.lookup(format) as string) || '',\n\t\t\tthumbFileName: file?.name as string,\n\t\t\toriginalFileId: file?._id as string,\n\t\t}));\n\t\timage.pipe(transformer);\n\n\t\treturn result;\n\t},\n\n\tasync uploadImageThumbnail(\n\t\t{ thumbFileName, thumbFileType, originalFileId }: { thumbFileName: string; thumbFileType: string; originalFileId: string },\n\t\tbuffer: Buffer,\n\t\trid: string,\n\t\tuserId: string,\n\t) {\n\t\tconst store = FileUpload.getStore('Uploads');\n\t\tconst details = {\n\t\t\tname: `thumb-${thumbFileName}`,\n\t\t\tsize: buffer.length,\n\t\t\ttype: thumbFileType,\n\t\t\toriginalFileId,\n\t\t\ttypeGroup: 'thumb',\n\t\t\tuploadedAt: new Date(),\n\t\t\t_updatedAt: new Date(),\n\t\t\trid,\n\t\t\tuserId,\n\t\t};\n\n\t\treturn store.insert(details, buffer);\n\t},\n\n\tasync uploadsOnValidate(this: Store, file: IUpload) {\n\t\tif (!file.type || !/^image\\/((x-windows-)?bmp|p?jpeg|png|gif|webp)$/.test(file.type)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tmpFile = UploadFS.getTempFilePath(file._id);\n\n\t\tconst s = sharp(tmpFile);\n\t\tconst metadata = await s.metadata();\n\t\t// if (err != null) {\n\t\t// \tSystemLogger.error(err);\n\t\t// \treturn fut.return();\n\t\t// }\n\n\t\tconst rotated = typeof metadata.orientation !== 'undefined' && metadata.orientation !== 1;\n\t\tconst width = rotated ? metadata.height : metadata.width;\n\t\tconst height = rotated ? metadata.width : metadata.height;\n\n\t\tconst identify = {\n\t\t\tformat: metadata.format,\n\t\t\tsize:\n\t\t\t\twidth != null && height != null\n\t\t\t\t\t? {\n\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined,\n\t\t};\n\n\t\tconst reorientation = async () => {\n\t\t\tif (!rotated || settings.get('FileUpload_RotateImages') !== true) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait s.rotate().toFile(`${tmpFile}.tmp`);\n\n\t\t\tawait unlink(tmpFile);\n\n\t\t\tawait rename(`${tmpFile}.tmp`, tmpFile);\n\t\t\t// SystemLogger.error(err);\n\t\t};\n\n\t\tawait reorientation();\n\n\t\tconst { size } = await fs.lstatSync(tmpFile);\n\t\tawait this.getCollection().updateOne(\n\t\t\t{ _id: file._id },\n\t\t\t{\n\t\t\t\t$set: { size, identify },\n\t\t\t},\n\t\t);\n\t},\n\n\tasync avatarsOnFinishUpload(file: IUpload) {\n\t\tif (file.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!file.userId) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n\t\t}\n\n\t\t// update file record to match user's username\n\t\tconst user = await Users.findOneById(file.userId);\n\t\tif (!user?.username) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n\t\t}\n\t\tconst oldAvatar = await Avatars.findOneByName(user.username);\n\t\tif (oldAvatar) {\n\t\t\tawait Avatars.deleteFile(oldAvatar._id);\n\t\t}\n\t\tawait Avatars.updateFileNameById(file._id, user.username);\n\t},\n\n\tasync requestCanAccessFiles({ headers = {}, url }: http.IncomingMessage, file?: IUpload) {\n\t\tif (!url || !settings.get('FileUpload_ProtectFiles')) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst { query } = URL.parse(url, true);\n\t\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\t\tlet { rc_uid, rc_token, rc_rid, rc_room_type } = query as Record<string, string | undefined>;\n\t\tconst { token } = query;\n\n\t\tif (!rc_uid && headers.cookie) {\n\t\t\trc_uid = cookie.get('rc_uid', headers.cookie);\n\t\t\trc_token = cookie.get('rc_token', headers.cookie);\n\t\t\trc_rid = cookie.get('rc_rid', headers.cookie);\n\t\t\trc_room_type = cookie.get('rc_room_type', headers.cookie);\n\t\t}\n\n\t\tconst isAuthorizedByRoom = async () =>\n\t\t\trc_room_type &&\n\t\t\troomCoordinator\n\t\t\t\t.getRoomDirectives(rc_room_type)\n\t\t\t\t.canAccessUploadedFile({ rc_uid: rc_uid || '', rc_rid: rc_rid || '', rc_token: rc_token || '' });\n\n\t\tconst isAuthorizedByJWT = () =>\n\t\t\tsettings.get('FileUpload_Enable_json_web_token_for_files') &&\n\t\t\ttoken &&\n\t\t\tisValidJWT(token as string, settings.get('FileUpload_json_web_token_secret_for_files'));\n\n\t\tif ((await isAuthorizedByRoom()) || isAuthorizedByJWT()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst uid = rc_uid || (headers['x-user-id'] as string);\n\t\tconst authToken = rc_token || (headers['x-auth-token'] as string);\n\n\t\tconst user = uid && authToken && (await Users.findOneByIdAndLoginToken(uid, hashLoginToken(authToken), { projection: { _id: 1 } }));\n\n\t\tif (!user) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!file?.rid) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst fileUploadRestrictedToMembers = settings.get<boolean>('FileUpload_Restrict_to_room_members');\n\t\tconst fileUploadRestrictToUsersWhoCanAccessRoom = settings.get<boolean>('FileUpload_Restrict_to_users_who_can_access_room');\n\n\t\tif (!fileUploadRestrictToUsersWhoCanAccessRoom && !fileUploadRestrictedToMembers) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (fileUploadRestrictedToMembers && !fileUploadRestrictToUsersWhoCanAccessRoom) {\n\t\t\tconst sub = await Subscriptions.findOneByRoomIdAndUserId(file.rid, user._id, { projection: { _id: 1 } });\n\t\t\treturn !!sub;\n\t\t}\n\n\t\tif (fileUploadRestrictToUsersWhoCanAccessRoom && !fileUploadRestrictedToMembers) {\n\t\t\treturn canAccessRoomIdAsync(file.rid, user._id);\n\t\t}\n\n\t\treturn false;\n\t},\n\n\taddExtensionTo(file: IUpload) {\n\t\tif (mime.lookup(file.name || '') === file.type) {\n\t\t\treturn file;\n\t\t}\n\n\t\t// This file type can be pretty much anything, so it's better if we don't mess with the file extension\n\t\tif (file.type !== 'application/octet-stream') {\n\t\t\tconst ext = mime.extension(file.type || '');\n\t\t\tif (ext && new RegExp(`\\\\.${ext}$`, 'i').test(file.name || '') === false) {\n\t\t\t\tfile.name = `${file.name}.${ext}`;\n\t\t\t}\n\t\t}\n\n\t\treturn file;\n\t},\n\n\tgetStore(modelName: string) {\n\t\tconst storageType = settings.get('FileUpload_Storage_Type');\n\t\tconst handlerName = `${storageType}:${modelName}`;\n\n\t\treturn this.getStoreByName(handlerName);\n\t},\n\n\tgetStoreByName(handlerName?: string) {\n\t\tif (!handlerName) {\n\t\t\tSystemLogger.error(`Empty Upload handler does not exists`);\n\t\t\tthrow new Error(`Empty Upload handler does not exists`);\n\t\t}\n\n\t\tif (this.handlers[handlerName] == null) {\n\t\t\tSystemLogger.error(`Upload handler \"${handlerName}\" does not exists`);\n\t\t}\n\t\treturn this.handlers[handlerName];\n\t},\n\n\tget(file: IUpload, req: http.IncomingMessage, res: http.ServerResponse, next: NextFunction) {\n\t\tconst store = this.getStoreByName(file.store);\n\t\tif (store?.get) {\n\t\t\treturn store.get(file, req, res, next);\n\t\t}\n\t\tres.writeHead(404);\n\t\tres.end();\n\t},\n\n\tasync getBuffer(file: IUpload): Promise<Buffer> {\n\t\tconst store = this.getStoreByName(file.store);\n\n\t\tif (!store?.get) {\n\t\t\tthrow new Error('Store is invalid');\n\t\t}\n\n\t\tconst buffer = new streamBuffers.WritableStreamBuffer({\n\t\t\tinitialSize: file.size,\n\t\t});\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tbuffer.on('finish', () => {\n\t\t\t\tconst contents = buffer.getContents();\n\t\t\t\tif (contents === false) {\n\t\t\t\t\treturn reject();\n\t\t\t\t}\n\t\t\t\tresolve(contents);\n\t\t\t});\n\n\t\t\tvoid store.copy?.(file, buffer);\n\t\t});\n\t},\n\n\tasync copy(file: IUpload, targetFile: string) {\n\t\tconst store = this.getStoreByName(file.store);\n\t\tconst out = fs.createWriteStream(targetFile);\n\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tif (store.copy) {\n\t\t\tawait store.copy(file, out);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\tredirectToFile(fileUrl: string, _req: http.IncomingMessage, res: http.ServerResponse) {\n\t\tres.removeHeader('Content-Length');\n\t\tres.removeHeader('Cache-Control');\n\t\tres.setHeader('Location', fileUrl);\n\t\tres.writeHead(302);\n\t\tres.end();\n\t},\n\n\tproxyFile(\n\t\tfileName: string,\n\t\tfileUrl: string,\n\t\tforceDownload: boolean,\n\t\trequest: typeof http | typeof https,\n\t\t_req: http.IncomingMessage,\n\t\tres: http.ServerResponse,\n\t) {\n\t\tres.setHeader('Content-Disposition', `${forceDownload ? 'attachment' : 'inline'}; filename=\"${encodeURI(fileName)}\"`);\n\n\t\trequest.get(fileUrl, (fileRes) => {\n\t\t\tif (fileRes.statusCode !== 200) {\n\t\t\t\tres.setHeader('x-rc-proxyfile-status', String(fileRes.statusCode));\n\t\t\t\tres.setHeader('content-length', 0);\n\t\t\t\tres.writeHead(500);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line prettier/prettier\n\t\t\tconst headersToProxy = ['age', 'cache-control', 'content-length', 'content-type', 'date', 'expired', 'last-modified'];\n\n\t\t\theadersToProxy.forEach((header) => {\n\t\t\t\tfileRes.headers[header] && res.setHeader(header, String(fileRes.headers[header]));\n\t\t\t});\n\n\t\t\tfileRes.pipe(res);\n\t\t});\n\t},\n\n\tgenerateJWTToFileUrls({ rid, userId, fileId }: { rid: string; userId: string; fileId: string }) {\n\t\tif (!settings.get('FileUpload_ProtectFiles') || !settings.get('FileUpload_Enable_json_web_token_for_files')) {\n\t\t\treturn;\n\t\t}\n\t\treturn generateJWT(\n\t\t\t{\n\t\t\t\trid,\n\t\t\t\tuserId,\n\t\t\t\tfileId,\n\t\t\t},\n\t\t\tsettings.get('FileUpload_json_web_token_secret_for_files'),\n\t\t);\n\t},\n\n\tasync removeFilesByRoomId(rid: string) {\n\t\tif (typeof rid !== 'string' || rid.trim().length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst cursor = Messages.find(\n\t\t\t{\n\t\t\t\trid,\n\t\t\t\t'file._id': {\n\t\t\t\t\t$exists: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tprojection: {\n\t\t\t\t\t'file._id': 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tfor await (const document of cursor) {\n\t\t\tif (document.file) {\n\t\t\t\tawait FileUpload.getStore('Uploads').deleteById(document.file._id);\n\t\t\t}\n\t\t}\n\t},\n};\n\ntype FileUploadClassOptions = {\n\tname: string;\n\tmodel?: typeof Avatars | typeof Uploads | typeof UserDataFiles;\n\tstore?: Store;\n\tget: (file: IUpload, req: http.IncomingMessage, res: http.ServerResponse, next: NextFunction) => Promise<void>;\n\tinsert?: () => Promise<IUpload>;\n\tgetStore?: () => Store;\n\tcopy?: (file: IUpload, out: WriteStream | WritableStreamBuffer) => Promise<void>;\n};\n\nexport class FileUploadClass {\n\tpublic name: FileUploadClassOptions['name'];\n\n\tpublic model: typeof Avatars | typeof Uploads | typeof UserDataFiles;\n\n\tpublic _store: Store;\n\n\tpublic get: FileUploadClassOptions['get'];\n\n\tpublic copy: FileUploadClassOptions['copy'];\n\n\tconstructor({ name, model, store, get, insert, getStore, copy }: FileUploadClassOptions) {\n\t\tthis.name = name;\n\t\tthis.model = model || this.getModelFromName();\n\t\tthis._store = store || UploadFS.getStore(name);\n\t\tthis.get = get;\n\t\tthis.copy = copy;\n\n\t\tif (insert) {\n\t\t\tthis.insert = insert;\n\t\t}\n\n\t\tif (getStore) {\n\t\t\tthis.getStore = getStore;\n\t\t}\n\n\t\tFileUpload.handlers[name] = this;\n\t}\n\n\tgetStore() {\n\t\treturn this._store;\n\t}\n\n\tget store() {\n\t\treturn this.getStore();\n\t}\n\n\tset store(store) {\n\t\tthis._store = store;\n\t}\n\n\tgetModelFromName(): typeof this.model {\n\t\tconst modelsAvailable: Record<string, typeof this.model> = {\n\t\t\tAvatars,\n\t\t\tUploads,\n\t\t\tUserDataFiles,\n\t\t};\n\t\tconst modelName = this.name.split(':')[1];\n\t\tif (!modelsAvailable[modelName]) {\n\t\t\tthrow new Error('Invalid Model for FileUpload');\n\t\t}\n\t\treturn modelsAvailable[modelName];\n\t}\n\n\tasync delete(fileId: string) {\n\t\t// TODO: Remove this method\n\t\tif (this.store?.delete) {\n\t\t\tawait this.store.delete(fileId);\n\t\t}\n\n\t\treturn this.model.deleteFile(fileId);\n\t}\n\n\tasync deleteById(fileId: string) {\n\t\tconst file = await this.model.findOneById(fileId);\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = FileUpload.getStoreByName(file.store);\n\n\t\treturn store.delete(file._id);\n\t}\n\n\tasync deleteByName(fileName: string) {\n\t\tconst file = await this.model.findOneByName(fileName);\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = FileUpload.getStoreByName(file.store);\n\n\t\treturn store.delete(file._id);\n\t}\n\n\tasync deleteByRoomId(rid: string) {\n\t\tconst file = await this.model.findOneByRoomId(rid);\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = FileUpload.getStoreByName(file.store);\n\n\t\treturn store.delete(file._id);\n\t}\n\n\tasync _doInsert(fileData: OptionalId<IUpload>, streamOrBuffer: ReadableStream | stream | Buffer): Promise<IUpload> {\n\t\tconst fileId = await this.store.create(fileData);\n\t\tconst tmpFile = UploadFS.getTempFilePath(fileId);\n\n\t\ttry {\n\t\t\tif (streamOrBuffer instanceof stream) {\n\t\t\t\tstreamOrBuffer.pipe(fs.createWriteStream(tmpFile));\n\t\t\t} else if (streamOrBuffer instanceof Buffer) {\n\t\t\t\tfs.writeFileSync(tmpFile, streamOrBuffer);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Invalid file type');\n\t\t\t}\n\n\t\t\tconst file = await ufsComplete(fileId, this.name);\n\n\t\t\treturn file;\n\t\t} catch (e: any) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tasync insert(fileData: OptionalId<IUpload>, streamOrBuffer: ReadableStream | stream.Readable | Buffer) {\n\t\tif (streamOrBuffer instanceof stream) {\n\t\t\tstreamOrBuffer = await streamToBuffer(streamOrBuffer);\n\t\t}\n\n\t\tif (streamOrBuffer instanceof Uint8Array) {\n\t\t\t// Services compat :)\n\t\t\tstreamOrBuffer = Buffer.from(streamOrBuffer);\n\t\t}\n\n\t\t// Check if the fileData matches store filter\n\t\tconst filter = this.store.getFilter();\n\t\tif (filter?.check) {\n\t\t\tawait filter.check(fileData, streamOrBuffer);\n\t\t}\n\n\t\treturn this._doInsert(fileData, streamOrBuffer);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/file-upload/server/lib/FileUpload.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/file-upload/server/lib/FileUpload.ts","inputSourceMap":{"version":3,"file":"app/file-upload/server/lib/FileUpload.ts","sourceRoot":"","sources":["app/file-upload/server/lib/FileUpload.ts"],"names":[],"mappings":"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","sourcesContent":["import { Buffer } from 'buffer';\nimport type { WriteStream } from 'fs';\nimport fs from 'fs';\nimport { unlink, rename, writeFile } from 'fs/promises';\nimport type * as http from 'http';\nimport type * as https from 'https';\nimport stream from 'stream';\nimport URL from 'url';\n\nimport { hashLoginToken } from '@rocket.chat/account-utils';\nimport { Apps, AppEvents } from '@rocket.chat/apps';\nimport { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { isE2EEUpload, type IUpload } from '@rocket.chat/core-typings';\nimport { Users, Avatars, UserDataFiles, Uploads, Settings, Subscriptions, Messages, Rooms } from '@rocket.chat/models';\nimport type { NextFunction } from 'connect';\nimport filesize from 'filesize';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { Cookies } from 'meteor/ostrio:cookies';\nimport type { OptionalId } from 'mongodb';\nimport sharp from 'sharp';\nimport type { WritableStreamBuffer } from 'stream-buffers';\nimport streamBuffers from 'stream-buffers';\n\nimport { streamToBuffer } from './streamToBuffer';\nimport { i18n } from '../../../../server/lib/i18n';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\nimport { UploadFS } from '../../../../server/ufs';\nimport { ufsComplete } from '../../../../server/ufs/ufs-methods';\nimport type { Store, StoreOptions } from '../../../../server/ufs/ufs-store';\nimport { canAccessRoomAsync, canAccessRoomIdAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport { settings } from '../../../settings/server';\nimport { mime } from '../../../utils/lib/mimeTypes';\nimport { isValidJWT, generateJWT } from '../../../utils/server/lib/JWTHelper';\nimport { fileUploadIsValidContentType } from '../../../utils/server/restrictions';\n\nconst cookie = new Cookies();\nlet maxFileSize = 0;\n\nsettings.watch('FileUpload_MaxFileSize', async (value: string) => {\n\ttry {\n\t\tmaxFileSize = parseInt(value);\n\t} catch (e) {\n\t\tmaxFileSize = (await Settings.findOneById('FileUpload_MaxFileSize'))?.packageValue as number;\n\t}\n});\n\nconst handlers: Record<string, FileUploadClass> = {};\n\nconst defaults: Record<string, () => Partial<StoreOptions>> = {\n\tUploads() {\n\t\treturn {\n\t\t\tcollection: Uploads,\n\t\t\tfilter: new UploadFS.Filter({\n\t\t\t\tonCheck: FileUpload.validateFileUpload,\n\t\t\t}),\n\t\t\tgetPath(file: IUpload) {\n\t\t\t\treturn `${settings.get('uniqueID')}/uploads/${file.rid}/${file.userId}/${file._id}`;\n\t\t\t},\n\t\t\tonValidate: FileUpload.uploadsOnValidate,\n\t\t\tasync onRead(_fileId: string, file: IUpload, req: http.IncomingMessage, res: http.ServerResponse) {\n\t\t\t\t// Deprecated: Remove support to usf path\n\t\t\t\tif (!(await FileUpload.requestCanAccessFiles(req, file))) {\n\t\t\t\t\tres.writeHead(403);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tres.setHeader('content-disposition', `attachment; filename=\"${encodeURIComponent(file.name || '')}\"`);\n\t\t\t\treturn true;\n\t\t\t},\n\t\t};\n\t},\n\n\tAvatars() {\n\t\treturn {\n\t\t\tcollection: Avatars,\n\t\t\tfilter: new UploadFS.Filter({\n\t\t\t\tonCheck: FileUpload.validateAvatarUpload,\n\t\t\t}),\n\t\t\tgetPath(file: IUpload) {\n\t\t\t\tconst avatarFile = file.rid ? `room-${file.rid}` : file.userId;\n\t\t\t\treturn `${settings.get('uniqueID')}/avatars/${avatarFile}`;\n\t\t\t},\n\t\t\tonValidate: FileUpload.avatarsOnValidate,\n\t\t\tonFinishUpload: FileUpload.avatarsOnFinishUpload,\n\t\t};\n\t},\n\n\tUserDataFiles() {\n\t\treturn {\n\t\t\tcollection: UserDataFiles,\n\t\t\tgetPath(file: IUpload) {\n\t\t\t\treturn `${settings.get('uniqueID')}/uploads/userData/${file.userId}`;\n\t\t\t},\n\t\t\tonValidate: FileUpload.uploadsOnValidate,\n\t\t\tasync onRead(_fileId: string, file: IUpload, req: http.IncomingMessage, res: http.ServerResponse) {\n\t\t\t\tif (!(await FileUpload.requestCanAccessFiles(req))) {\n\t\t\t\t\tres.writeHead(403);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tres.setHeader('content-disposition', `attachment; filename=\"${encodeURIComponent(file.name || '')}\"`);\n\t\t\t\treturn true;\n\t\t\t},\n\t\t};\n\t},\n};\n\nexport const FileUpload = {\n\thandlers,\n\n\tgetPath(path = '') {\n\t\treturn `/file-upload/${path}`;\n\t},\n\n\tconfigureUploadsStore(store: string, name: string, options: any) {\n\t\tconst type = name.split(':').pop();\n\t\tif (!type || !(type in FileUpload.defaults)) {\n\t\t\tthrow new Error('Store type undefined');\n\t\t}\n\t\tconst stores = UploadFS.getStores();\n\t\tdelete stores[name];\n\n\t\treturn new UploadFS.store[store](\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t},\n\t\t\t\toptions,\n\t\t\t\tFileUpload.defaults[type](),\n\t\t\t),\n\t\t);\n\t},\n\n\tasync validateFileUpload(file: IUpload, content?: Buffer) {\n\t\tif (!Match.test(file.rid, String)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// livechat users can upload files but they don't have an userId\n\t\tconst user = (file.userId && (await Users.findOne(file.userId))) || undefined;\n\n\t\tconst room = await Rooms.findOneById(file.rid);\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\t\tconst directMessageAllowed = settings.get('FileUpload_Enabled_Direct');\n\t\tconst fileUploadAllowed = settings.get('FileUpload_Enabled');\n\t\tif (user?.type !== 'app' && (await canAccessRoomAsync(room, user, file)) !== true) {\n\t\t\treturn false;\n\t\t}\n\t\tconst language = user?.language || 'en';\n\t\tif (!fileUploadAllowed) {\n\t\t\tconst reason = i18n.t('FileUpload_Disabled', { lng: language });\n\t\t\tthrow new Meteor.Error('error-file-upload-disabled', reason);\n\t\t}\n\n\t\tif (!directMessageAllowed && room.t === 'd') {\n\t\t\tconst reason = i18n.t('File_not_allowed_direct_messages', { lng: language });\n\t\t\tthrow new Meteor.Error('error-direct-message-file-upload-not-allowed', reason);\n\t\t}\n\n\t\t// -1 maxFileSize means there is no limit\n\t\tif (maxFileSize > -1 && (file.size || 0) > maxFileSize) {\n\t\t\tconst reason = i18n.t('File_exceeds_allowed_size_of_bytes', {\n\t\t\t\tsize: filesize(maxFileSize),\n\t\t\t\tlng: language,\n\t\t\t});\n\t\t\tthrow new Meteor.Error('error-file-too-large', reason);\n\t\t}\n\n\t\tif (!settings.get('E2E_Enable_Encrypt_Files') && isE2EEUpload(file)) {\n\t\t\tconst reason = i18n.t('Encrypted_file_not_allowed', { lng: language });\n\t\t\tthrow new Meteor.Error('error-invalid-file-type', reason);\n\t\t}\n\n\t\t// E2EE files should be of type application/octet-stream. no information about them should be disclosed on upload if they are encrypted\n\t\tif (isE2EEUpload(file)) {\n\t\t\tfile.type = 'application/octet-stream';\n\t\t}\n\n\t\t// E2EE files are of type application/octet-stream, which is whitelisted for E2EE files\n\t\tif (!fileUploadIsValidContentType(file?.type, isE2EEUpload(file) ? 'application/octet-stream' : undefined)) {\n\t\t\tconst reason = i18n.t('File_type_is_not_accepted', { lng: language });\n\t\t\tthrow new Meteor.Error('error-invalid-file-type', reason);\n\t\t}\n\n\t\t// App IPreFileUpload event hook\n\t\ttry {\n\t\t\tawait Apps.self?.triggerEvent(AppEvents.IPreFileUpload, { file, content: content || Buffer.from([]) });\n\t\t} catch (error: any) {\n\t\t\tif (error.name === AppsEngineException.name) {\n\t\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tasync validateAvatarUpload(file: IUpload) {\n\t\tif (!Match.test(file.rid, String) && !Match.test(file.userId, String)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst user = file.uid ? await Users.findOne(file.uid, { projection: { language: 1 } }) : null;\n\t\tconst language = user?.language || 'en';\n\n\t\t// accept only images\n\t\tif (!/^image\\//.test(file.type || '')) {\n\t\t\tconst reason = i18n.t('File_type_is_not_accepted', { lng: language });\n\t\t\tthrow new Meteor.Error('error-invalid-file-type', reason);\n\t\t}\n\n\t\t// -1 maxFileSize means there is no limit\n\t\tif (maxFileSize > -1 && (file.size || 0) > maxFileSize) {\n\t\t\tconst reason = i18n.t('File_exceeds_allowed_size_of_bytes', {\n\t\t\t\tsize: filesize(maxFileSize),\n\t\t\t\tlng: language,\n\t\t\t});\n\t\t\tthrow new Meteor.Error('error-file-too-large', reason);\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tdefaults,\n\n\tasync avatarsOnValidate(this: Store, file: IUpload) {\n\t\tif (settings.get('Accounts_AvatarResize') !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tempFilePath = UploadFS.getTempFilePath(file._id);\n\n\t\tconst height = settings.get('Accounts_AvatarSize') as number;\n\t\tconst width = height as number;\n\n\t\tconst s = sharp(tempFilePath);\n\t\tif (settings.get('FileUpload_RotateImages') === true) {\n\t\t\ts.rotate();\n\t\t}\n\n\t\tconst metadata = await s.metadata();\n\t\t// if (!metadata) {\n\t\t// \tmetadata = {};\n\t\t// }\n\n\t\tconst { data, info } = await s\n\t\t\t.resize({\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tfit: metadata.hasAlpha ? sharp.fit.contain : sharp.fit.cover,\n\t\t\t\tbackground: { r: 255, g: 255, b: 255, alpha: metadata.hasAlpha ? 0 : 1 },\n\t\t\t})\n\t\t\t// Use buffer to get the result in memory then replace the existing file\n\t\t\t// There is no option to override a file using this library\n\t\t\t//\n\t\t\t// BY THE SHARP DOCUMENTATION:\n\t\t\t// toBuffer: Write output to a Buffer. JPEG, PNG, WebP, TIFF and RAW output are supported.\n\t\t\t// By default, the format will match the input image, except GIF and SVG input which become PNG output.\n\t\t\t.toBuffer({ resolveWithObject: true });\n\n\t\ttry {\n\t\t\tawait writeFile(tempFilePath, data);\n\t\t} catch (err: any) {\n\t\t\tSystemLogger.error(err);\n\t\t}\n\n\t\tawait this.getCollection().updateOne(\n\t\t\t{ _id: file._id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tsize: info.size,\n\t\t\t\t\t...(['gif', 'svg'].includes(metadata.format || '') ? { type: 'image/png' } : {}),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t},\n\n\tasync resizeImagePreview(fileParam: IUpload) {\n\t\tlet file = await Uploads.findOneById(fileParam._id);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\tfile = FileUpload.addExtensionTo(file);\n\t\tconst image = await FileUpload.getStore('Uploads')._store.getReadStream(file._id, file);\n\n\t\tconst transformer = sharp().resize({ width: 32, height: 32, fit: 'inside' }).jpeg().blur();\n\t\tconst result = transformer.toBuffer().then((out) => out.toString('base64'));\n\t\timage.pipe(transformer);\n\t\treturn result;\n\t},\n\n\tasync extractMetadata(file: IUpload) {\n\t\treturn sharp(await FileUpload.getBuffer(file)).metadata();\n\t},\n\n\tasync createImageThumbnail(fileParam: IUpload) {\n\t\tif (!settings.get('Message_Attachments_Thumbnails_Enabled')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = settings.get('Message_Attachments_Thumbnails_Width') as number;\n\t\tconst height = settings.get('Message_Attachments_Thumbnails_Height') as number;\n\n\t\tif (fileParam.identify?.size && fileParam.identify.size.height < height && fileParam.identify?.size.width < width) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet file = await Uploads.findOneById(fileParam._id);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tfile = FileUpload.addExtensionTo(file);\n\t\tconst store = FileUpload.getStore('Uploads');\n\t\tconst image = await store._store.getReadStream(file._id, file);\n\n\t\tlet transformer = sharp().resize({ width, height, fit: 'inside' });\n\n\t\tif (file.type === 'image/svg+xml') {\n\t\t\ttransformer = transformer.png();\n\t\t}\n\t\tconst result = transformer.toBuffer({ resolveWithObject: true }).then(({ data, info: { width, height, format } }) => ({\n\t\t\tdata,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tthumbFileType: (mime.lookup(format) as string) || '',\n\t\t\tthumbFileName: file?.name as string,\n\t\t\toriginalFileId: file?._id as string,\n\t\t}));\n\t\timage.pipe(transformer);\n\n\t\treturn result;\n\t},\n\n\tasync uploadImageThumbnail(\n\t\t{ thumbFileName, thumbFileType, originalFileId }: { thumbFileName: string; thumbFileType: string; originalFileId: string },\n\t\tbuffer: Buffer,\n\t\trid: string,\n\t\tuserId: string,\n\t) {\n\t\tconst store = FileUpload.getStore('Uploads');\n\t\tconst details = {\n\t\t\tname: `thumb-${thumbFileName}`,\n\t\t\tsize: buffer.length,\n\t\t\ttype: thumbFileType,\n\t\t\toriginalFileId,\n\t\t\ttypeGroup: 'thumb',\n\t\t\tuploadedAt: new Date(),\n\t\t\t_updatedAt: new Date(),\n\t\t\trid,\n\t\t\tuserId,\n\t\t};\n\n\t\treturn store.insert(details, buffer);\n\t},\n\n\tasync uploadsOnValidate(this: Store, file: IUpload) {\n\t\tif (!file.type || !/^image\\/((x-windows-)?bmp|p?jpeg|png|gif|webp)$/.test(file.type)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tmpFile = UploadFS.getTempFilePath(file._id);\n\n\t\tconst s = sharp(tmpFile);\n\t\tconst metadata = await s.metadata();\n\t\t// if (err != null) {\n\t\t// \tSystemLogger.error(err);\n\t\t// \treturn fut.return();\n\t\t// }\n\n\t\tconst rotated = typeof metadata.orientation !== 'undefined' && metadata.orientation !== 1;\n\t\tconst width = rotated ? metadata.height : metadata.width;\n\t\tconst height = rotated ? metadata.width : metadata.height;\n\n\t\tconst identify = {\n\t\t\tformat: metadata.format,\n\t\t\tsize:\n\t\t\t\twidth != null && height != null\n\t\t\t\t\t? {\n\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined,\n\t\t};\n\n\t\tconst reorientation = async () => {\n\t\t\tif (!rotated || settings.get('FileUpload_RotateImages') !== true) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait s.rotate().toFile(`${tmpFile}.tmp`);\n\n\t\t\tawait unlink(tmpFile);\n\n\t\t\tawait rename(`${tmpFile}.tmp`, tmpFile);\n\t\t\t// SystemLogger.error(err);\n\t\t};\n\n\t\tawait reorientation();\n\n\t\tconst { size } = await fs.lstatSync(tmpFile);\n\t\tawait this.getCollection().updateOne(\n\t\t\t{ _id: file._id },\n\t\t\t{\n\t\t\t\t$set: { size, identify },\n\t\t\t},\n\t\t);\n\t},\n\n\tasync avatarsOnFinishUpload(file: IUpload) {\n\t\tif (file.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!file.userId) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n\t\t}\n\n\t\t// update file record to match user's username\n\t\tconst user = await Users.findOneById(file.userId);\n\t\tif (!user?.username) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n\t\t}\n\t\tconst oldAvatar = await Avatars.findOneByName(user.username);\n\t\tif (oldAvatar) {\n\t\t\tawait Avatars.deleteFile(oldAvatar._id);\n\t\t}\n\t\tawait Avatars.updateFileNameById(file._id, user.username);\n\t},\n\n\tasync requestCanAccessFiles({ headers = {}, url }: http.IncomingMessage, file?: IUpload) {\n\t\tif (!url || !settings.get('FileUpload_ProtectFiles')) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst { query } = URL.parse(url, true);\n\t\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\t\tlet { rc_uid, rc_token, rc_rid, rc_room_type } = query as Record<string, string | undefined>;\n\t\tconst { token } = query;\n\n\t\tif (!rc_uid && headers.cookie) {\n\t\t\trc_uid = cookie.get('rc_uid', headers.cookie);\n\t\t\trc_token = cookie.get('rc_token', headers.cookie);\n\t\t\trc_rid = cookie.get('rc_rid', headers.cookie);\n\t\t\trc_room_type = cookie.get('rc_room_type', headers.cookie);\n\t\t}\n\n\t\tconst isAuthorizedByRoom = async () =>\n\t\t\trc_room_type &&\n\t\t\troomCoordinator\n\t\t\t\t.getRoomDirectives(rc_room_type)\n\t\t\t\t.canAccessUploadedFile({ rc_uid: rc_uid || '', rc_rid: rc_rid || '', rc_token: rc_token || '' });\n\n\t\tconst isAuthorizedByJWT = () =>\n\t\t\tsettings.get('FileUpload_Enable_json_web_token_for_files') &&\n\t\t\ttoken &&\n\t\t\tisValidJWT(token as string, settings.get('FileUpload_json_web_token_secret_for_files'));\n\n\t\tif ((await isAuthorizedByRoom()) || isAuthorizedByJWT()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst uid = rc_uid || (headers['x-user-id'] as string);\n\t\tconst authToken = rc_token || (headers['x-auth-token'] as string);\n\n\t\tconst user = uid && authToken && (await Users.findOneByIdAndLoginToken(uid, hashLoginToken(authToken), { projection: { _id: 1 } }));\n\n\t\tif (!user) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!file?.rid) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst fileUploadRestrictedToMembers = settings.get<boolean>('FileUpload_Restrict_to_room_members');\n\t\tconst fileUploadRestrictToUsersWhoCanAccessRoom = settings.get<boolean>('FileUpload_Restrict_to_users_who_can_access_room');\n\n\t\tif (!fileUploadRestrictToUsersWhoCanAccessRoom && !fileUploadRestrictedToMembers) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (fileUploadRestrictedToMembers && !fileUploadRestrictToUsersWhoCanAccessRoom) {\n\t\t\tconst sub = await Subscriptions.findOneByRoomIdAndUserId(file.rid, user._id, { projection: { _id: 1 } });\n\t\t\treturn !!sub;\n\t\t}\n\n\t\tif (fileUploadRestrictToUsersWhoCanAccessRoom && !fileUploadRestrictedToMembers) {\n\t\t\treturn canAccessRoomIdAsync(file.rid, user._id);\n\t\t}\n\n\t\treturn false;\n\t},\n\n\taddExtensionTo(file: IUpload) {\n\t\tif (mime.lookup(file.name || '') === file.type) {\n\t\t\treturn file;\n\t\t}\n\n\t\t// This file type can be pretty much anything, so it's better if we don't mess with the file extension\n\t\tif (file.type !== 'application/octet-stream') {\n\t\t\tconst ext = mime.extension(file.type || '');\n\t\t\tif (ext && new RegExp(`\\\\.${ext}$`, 'i').test(file.name || '') === false) {\n\t\t\t\tfile.name = `${file.name}.${ext}`;\n\t\t\t}\n\t\t}\n\n\t\treturn file;\n\t},\n\n\tgetStore(modelName: string) {\n\t\tconst storageType = settings.get('FileUpload_Storage_Type');\n\t\tconst handlerName = `${storageType}:${modelName}`;\n\n\t\treturn this.getStoreByName(handlerName);\n\t},\n\n\tgetStoreByName(handlerName?: string) {\n\t\tif (!handlerName) {\n\t\t\tSystemLogger.error(`Empty Upload handler does not exists`);\n\t\t\tthrow new Error(`Empty Upload handler does not exists`);\n\t\t}\n\n\t\tif (this.handlers[handlerName] == null) {\n\t\t\tSystemLogger.error(`Upload handler \"${handlerName}\" does not exists`);\n\t\t}\n\t\treturn this.handlers[handlerName];\n\t},\n\n\tget(file: IUpload, req: http.IncomingMessage, res: http.ServerResponse, next: NextFunction) {\n\t\tconst store = this.getStoreByName(file.store);\n\t\tif (store?.get) {\n\t\t\treturn store.get(file, req, res, next);\n\t\t}\n\t\tres.writeHead(404);\n\t\tres.end();\n\t},\n\n\tasync getBuffer(file: IUpload): Promise<Buffer> {\n\t\tconst store = this.getStoreByName(file.store);\n\n\t\tif (!store?.get) {\n\t\t\tthrow new Error('Store is invalid');\n\t\t}\n\n\t\tconst buffer = new streamBuffers.WritableStreamBuffer({\n\t\t\tinitialSize: file.size,\n\t\t});\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tbuffer.on('finish', () => {\n\t\t\t\tconst contents = buffer.getContents();\n\t\t\t\tif (contents === false) {\n\t\t\t\t\treturn reject();\n\t\t\t\t}\n\t\t\t\tresolve(contents);\n\t\t\t});\n\n\t\t\tvoid store.copy?.(file, buffer);\n\t\t});\n\t},\n\n\tasync copy(file: IUpload, targetFile: string) {\n\t\tconst store = this.getStoreByName(file.store);\n\t\tconst out = fs.createWriteStream(targetFile);\n\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tif (store.copy) {\n\t\t\tawait store.copy(file, out);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\tredirectToFile(fileUrl: string, _req: http.IncomingMessage, res: http.ServerResponse) {\n\t\tres.removeHeader('Content-Length');\n\t\tres.removeHeader('Cache-Control');\n\t\tres.setHeader('Location', fileUrl);\n\t\tres.writeHead(302);\n\t\tres.end();\n\t},\n\n\tproxyFile(\n\t\tfileName: string,\n\t\tfileUrl: string,\n\t\tforceDownload: boolean,\n\t\trequest: typeof http | typeof https,\n\t\t_req: http.IncomingMessage,\n\t\tres: http.ServerResponse,\n\t) {\n\t\tres.setHeader('Content-Disposition', `${forceDownload ? 'attachment' : 'inline'}; filename=\"${encodeURI(fileName)}\"`);\n\n\t\trequest.get(fileUrl, (fileRes) => {\n\t\t\tif (fileRes.statusCode !== 200) {\n\t\t\t\tres.setHeader('x-rc-proxyfile-status', String(fileRes.statusCode));\n\t\t\t\tres.setHeader('content-length', 0);\n\t\t\t\tres.writeHead(500);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line prettier/prettier\n\t\t\tconst headersToProxy = ['age', 'cache-control', 'content-length', 'content-type', 'date', 'expired', 'last-modified'];\n\n\t\t\theadersToProxy.forEach((header) => {\n\t\t\t\tfileRes.headers[header] && res.setHeader(header, String(fileRes.headers[header]));\n\t\t\t});\n\n\t\t\tfileRes.pipe(res);\n\t\t});\n\t},\n\n\tgenerateJWTToFileUrls({ rid, userId, fileId }: { rid: string; userId: string; fileId: string }) {\n\t\tif (!settings.get('FileUpload_ProtectFiles') || !settings.get('FileUpload_Enable_json_web_token_for_files')) {\n\t\t\treturn;\n\t\t}\n\t\treturn generateJWT(\n\t\t\t{\n\t\t\t\trid,\n\t\t\t\tuserId,\n\t\t\t\tfileId,\n\t\t\t},\n\t\t\tsettings.get('FileUpload_json_web_token_secret_for_files'),\n\t\t);\n\t},\n\n\tasync removeFilesByRoomId(rid: string) {\n\t\tif (typeof rid !== 'string' || rid.trim().length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst cursor = Messages.find(\n\t\t\t{\n\t\t\t\trid,\n\t\t\t\t'file._id': {\n\t\t\t\t\t$exists: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tprojection: {\n\t\t\t\t\t'file._id': 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tfor await (const document of cursor) {\n\t\t\tif (document.file) {\n\t\t\t\tawait FileUpload.getStore('Uploads').deleteById(document.file._id);\n\t\t\t}\n\t\t}\n\t},\n};\n\ntype FileUploadClassOptions = {\n\tname: string;\n\tmodel?: typeof Avatars | typeof Uploads | typeof UserDataFiles;\n\tstore?: Store;\n\tget: (file: IUpload, req: http.IncomingMessage, res: http.ServerResponse, next: NextFunction) => Promise<void>;\n\tinsert?: () => Promise<IUpload>;\n\tgetStore?: () => Store;\n\tcopy?: (file: IUpload, out: WriteStream | WritableStreamBuffer) => Promise<void>;\n};\n\nexport class FileUploadClass {\n\tpublic name: FileUploadClassOptions['name'];\n\n\tpublic model: typeof Avatars | typeof Uploads | typeof UserDataFiles;\n\n\tpublic _store: Store;\n\n\tpublic get: FileUploadClassOptions['get'];\n\n\tpublic copy: FileUploadClassOptions['copy'];\n\n\tconstructor({ name, model, store, get, insert, getStore, copy }: FileUploadClassOptions) {\n\t\tthis.name = name;\n\t\tthis.model = model || this.getModelFromName();\n\t\tthis._store = store || UploadFS.getStore(name);\n\t\tthis.get = get;\n\t\tthis.copy = copy;\n\n\t\tif (insert) {\n\t\t\tthis.insert = insert;\n\t\t}\n\n\t\tif (getStore) {\n\t\t\tthis.getStore = getStore;\n\t\t}\n\n\t\tFileUpload.handlers[name] = this;\n\t}\n\n\tgetStore() {\n\t\treturn this._store;\n\t}\n\n\tget store() {\n\t\treturn this.getStore();\n\t}\n\n\tset store(store) {\n\t\tthis._store = store;\n\t}\n\n\tgetModelFromName(): typeof this.model {\n\t\tconst modelsAvailable: Record<string, typeof this.model> = {\n\t\t\tAvatars,\n\t\t\tUploads,\n\t\t\tUserDataFiles,\n\t\t};\n\t\tconst modelName = this.name.split(':')[1];\n\t\tif (!modelsAvailable[modelName]) {\n\t\t\tthrow new Error('Invalid Model for FileUpload');\n\t\t}\n\t\treturn modelsAvailable[modelName];\n\t}\n\n\tasync delete(fileId: string) {\n\t\t// TODO: Remove this method\n\t\tif (this.store?.delete) {\n\t\t\tawait this.store.delete(fileId);\n\t\t}\n\n\t\treturn this.model.deleteFile(fileId);\n\t}\n\n\tasync deleteById(fileId: string) {\n\t\tconst file = await this.model.findOneById(fileId);\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = FileUpload.getStoreByName(file.store);\n\n\t\treturn store.delete(file._id);\n\t}\n\n\tasync deleteByName(fileName: string) {\n\t\tconst file = await this.model.findOneByName(fileName);\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = FileUpload.getStoreByName(file.store);\n\n\t\treturn store.delete(file._id);\n\t}\n\n\tasync deleteByRoomId(rid: string) {\n\t\tconst file = await this.model.findOneByRoomId(rid);\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = FileUpload.getStoreByName(file.store);\n\n\t\treturn store.delete(file._id);\n\t}\n\n\tasync _doInsert(fileData: OptionalId<IUpload>, streamOrBuffer: ReadableStream | stream | Buffer): Promise<IUpload> {\n\t\tconst fileId = await this.store.create(fileData);\n\t\tconst tmpFile = UploadFS.getTempFilePath(fileId);\n\n\t\ttry {\n\t\t\tif (streamOrBuffer instanceof stream) {\n\t\t\t\tstreamOrBuffer.pipe(fs.createWriteStream(tmpFile));\n\t\t\t} else if (streamOrBuffer instanceof Buffer) {\n\t\t\t\tfs.writeFileSync(tmpFile, streamOrBuffer);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Invalid file type');\n\t\t\t}\n\n\t\t\tconst file = await ufsComplete(fileId, this.name);\n\n\t\t\treturn file;\n\t\t} catch (e: any) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tasync insert(fileData: OptionalId<IUpload>, streamOrBuffer: ReadableStream | stream.Readable | Buffer) {\n\t\tif (streamOrBuffer instanceof stream) {\n\t\t\tstreamOrBuffer = await streamToBuffer(streamOrBuffer);\n\t\t}\n\n\t\tif (streamOrBuffer instanceof Uint8Array) {\n\t\t\t// Services compat :)\n\t\t\tstreamOrBuffer = Buffer.from(streamOrBuffer);\n\t\t}\n\n\t\t// Check if the fileData matches store filter\n\t\tconst filter = this.store.getFilter();\n\t\tif (filter?.check) {\n\t\t\tawait filter.check(fileData, streamOrBuffer);\n\t\t}\n\n\t\treturn this._doInsert(fileData, streamOrBuffer);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      FileUpload: () => FileUpload,\n      FileUploadClass: () => FileUploadClass\n    });\n    let Buffer;\n    module.link(\"buffer\", {\n      Buffer(v) {\n        Buffer = v;\n      }\n    }, 0);\n    let fs;\n    module.link(\"fs\", {\n      default(v) {\n        fs = v;\n      }\n    }, 1);\n    let unlink, rename, writeFile;\n    module.link(\"fs/promises\", {\n      unlink(v) {\n        unlink = v;\n      },\n      rename(v) {\n        rename = v;\n      },\n      writeFile(v) {\n        writeFile = v;\n      }\n    }, 2);\n    let stream;\n    module.link(\"stream\", {\n      default(v) {\n        stream = v;\n      }\n    }, 3);\n    let URL;\n    module.link(\"url\", {\n      default(v) {\n        URL = v;\n      }\n    }, 4);\n    let hashLoginToken;\n    module.link(\"@rocket.chat/account-utils\", {\n      hashLoginToken(v) {\n        hashLoginToken = v;\n      }\n    }, 5);\n    let Apps, AppEvents;\n    module.link(\"@rocket.chat/apps\", {\n      Apps(v) {\n        Apps = v;\n      },\n      AppEvents(v) {\n        AppEvents = v;\n      }\n    }, 6);\n    let AppsEngineException;\n    module.link(\"@rocket.chat/apps-engine/definition/exceptions\", {\n      AppsEngineException(v) {\n        AppsEngineException = v;\n      }\n    }, 7);\n    let isE2EEUpload;\n    module.link(\"@rocket.chat/core-typings\", {\n      isE2EEUpload(v) {\n        isE2EEUpload = v;\n      }\n    }, 8);\n    let Users, Avatars, UserDataFiles, Uploads, Settings, Subscriptions, Messages, Rooms;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      },\n      Avatars(v) {\n        Avatars = v;\n      },\n      UserDataFiles(v) {\n        UserDataFiles = v;\n      },\n      Uploads(v) {\n        Uploads = v;\n      },\n      Settings(v) {\n        Settings = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Messages(v) {\n        Messages = v;\n      },\n      Rooms(v) {\n        Rooms = v;\n      }\n    }, 9);\n    let filesize;\n    module.link(\"filesize\", {\n      default(v) {\n        filesize = v;\n      }\n    }, 10);\n    let Match;\n    module.link(\"meteor/check\", {\n      Match(v) {\n        Match = v;\n      }\n    }, 11);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 12);\n    let Cookies;\n    module.link(\"meteor/ostrio:cookies\", {\n      Cookies(v) {\n        Cookies = v;\n      }\n    }, 13);\n    let sharp;\n    module.link(\"sharp\", {\n      default(v) {\n        sharp = v;\n      }\n    }, 14);\n    let streamBuffers;\n    module.link(\"stream-buffers\", {\n      default(v) {\n        streamBuffers = v;\n      }\n    }, 15);\n    let streamToBuffer;\n    module.link(\"./streamToBuffer\", {\n      streamToBuffer(v) {\n        streamToBuffer = v;\n      }\n    }, 16);\n    let i18n;\n    module.link(\"../../../../server/lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 17);\n    let SystemLogger;\n    module.link(\"../../../../server/lib/logger/system\", {\n      SystemLogger(v) {\n        SystemLogger = v;\n      }\n    }, 18);\n    let roomCoordinator;\n    module.link(\"../../../../server/lib/rooms/roomCoordinator\", {\n      roomCoordinator(v) {\n        roomCoordinator = v;\n      }\n    }, 19);\n    let UploadFS;\n    module.link(\"../../../../server/ufs\", {\n      UploadFS(v) {\n        UploadFS = v;\n      }\n    }, 20);\n    let ufsComplete;\n    module.link(\"../../../../server/ufs/ufs-methods\", {\n      ufsComplete(v) {\n        ufsComplete = v;\n      }\n    }, 21);\n    let canAccessRoomAsync, canAccessRoomIdAsync;\n    module.link(\"../../../authorization/server/functions/canAccessRoom\", {\n      canAccessRoomAsync(v) {\n        canAccessRoomAsync = v;\n      },\n      canAccessRoomIdAsync(v) {\n        canAccessRoomIdAsync = v;\n      }\n    }, 22);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 23);\n    let mime;\n    module.link(\"../../../utils/lib/mimeTypes\", {\n      mime(v) {\n        mime = v;\n      }\n    }, 24);\n    let isValidJWT, generateJWT;\n    module.link(\"../../../utils/server/lib/JWTHelper\", {\n      isValidJWT(v) {\n        isValidJWT = v;\n      },\n      generateJWT(v) {\n        generateJWT = v;\n      }\n    }, 25);\n    let fileUploadIsValidContentType;\n    module.link(\"../../../utils/server/restrictions\", {\n      fileUploadIsValidContentType(v) {\n        fileUploadIsValidContentType = v;\n      }\n    }, 26);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const cookie = new Cookies();\n    let maxFileSize = 0;\n    settings.watch('FileUpload_MaxFileSize', async value => {\n      try {\n        maxFileSize = parseInt(value);\n      } catch (e) {\n        var _await$Settings$findO;\n        maxFileSize = (_await$Settings$findO = await Settings.findOneById('FileUpload_MaxFileSize')) === null || _await$Settings$findO === void 0 ? void 0 : _await$Settings$findO.packageValue;\n      }\n    });\n    const handlers = {};\n    const defaults = {\n      Uploads() {\n        return {\n          collection: Uploads,\n          filter: new UploadFS.Filter({\n            onCheck: FileUpload.validateFileUpload\n          }),\n          getPath(file) {\n            return \"\".concat(settings.get('uniqueID'), \"/uploads/\").concat(file.rid, \"/\").concat(file.userId, \"/\").concat(file._id);\n          },\n          onValidate: FileUpload.uploadsOnValidate,\n          async onRead(_fileId, file, req, res) {\n            // Deprecated: Remove support to usf path\n            if (!(await FileUpload.requestCanAccessFiles(req, file))) {\n              res.writeHead(403);\n              return false;\n            }\n            res.setHeader('content-disposition', \"attachment; filename=\\\"\".concat(encodeURIComponent(file.name || ''), \"\\\"\"));\n            return true;\n          }\n        };\n      },\n      Avatars() {\n        return {\n          collection: Avatars,\n          filter: new UploadFS.Filter({\n            onCheck: FileUpload.validateAvatarUpload\n          }),\n          getPath(file) {\n            const avatarFile = file.rid ? \"room-\".concat(file.rid) : file.userId;\n            return \"\".concat(settings.get('uniqueID'), \"/avatars/\").concat(avatarFile);\n          },\n          onValidate: FileUpload.avatarsOnValidate,\n          onFinishUpload: FileUpload.avatarsOnFinishUpload\n        };\n      },\n      UserDataFiles() {\n        return {\n          collection: UserDataFiles,\n          getPath(file) {\n            return \"\".concat(settings.get('uniqueID'), \"/uploads/userData/\").concat(file.userId);\n          },\n          onValidate: FileUpload.uploadsOnValidate,\n          async onRead(_fileId, file, req, res) {\n            if (!(await FileUpload.requestCanAccessFiles(req))) {\n              res.writeHead(403);\n              return false;\n            }\n            res.setHeader('content-disposition', \"attachment; filename=\\\"\".concat(encodeURIComponent(file.name || ''), \"\\\"\"));\n            return true;\n          }\n        };\n      }\n    };\n    const FileUpload = {\n      handlers,\n      getPath() {\n        let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        return \"/file-upload/\".concat(path);\n      },\n      configureUploadsStore(store, name, options) {\n        const type = name.split(':').pop();\n        if (!type || !(type in FileUpload.defaults)) {\n          throw new Error('Store type undefined');\n        }\n        const stores = UploadFS.getStores();\n        delete stores[name];\n        return new UploadFS.store[store](Object.assign({\n          name\n        }, options, FileUpload.defaults[type]()));\n      },\n      async validateFileUpload(file, content) {\n        if (!Match.test(file.rid, String)) {\n          return false;\n        }\n        // livechat users can upload files but they don't have an userId\n        const user = file.userId && (await Users.findOne(file.userId)) || undefined;\n        const room = await Rooms.findOneById(file.rid);\n        if (!room) {\n          return false;\n        }\n        const directMessageAllowed = settings.get('FileUpload_Enabled_Direct');\n        const fileUploadAllowed = settings.get('FileUpload_Enabled');\n        if ((user === null || user === void 0 ? void 0 : user.type) !== 'app' && (await canAccessRoomAsync(room, user, file)) !== true) {\n          return false;\n        }\n        const language = (user === null || user === void 0 ? void 0 : user.language) || 'en';\n        if (!fileUploadAllowed) {\n          const reason = i18n.t('FileUpload_Disabled', {\n            lng: language\n          });\n          throw new Meteor.Error('error-file-upload-disabled', reason);\n        }\n        if (!directMessageAllowed && room.t === 'd') {\n          const reason = i18n.t('File_not_allowed_direct_messages', {\n            lng: language\n          });\n          throw new Meteor.Error('error-direct-message-file-upload-not-allowed', reason);\n        }\n        // -1 maxFileSize means there is no limit\n        if (maxFileSize > -1 && (file.size || 0) > maxFileSize) {\n          const reason = i18n.t('File_exceeds_allowed_size_of_bytes', {\n            size: filesize(maxFileSize),\n            lng: language\n          });\n          throw new Meteor.Error('error-file-too-large', reason);\n        }\n        if (!settings.get('E2E_Enable_Encrypt_Files') && isE2EEUpload(file)) {\n          const reason = i18n.t('Encrypted_file_not_allowed', {\n            lng: language\n          });\n          throw new Meteor.Error('error-invalid-file-type', reason);\n        }\n        // E2EE files should be of type application/octet-stream. no information about them should be disclosed on upload if they are encrypted\n        if (isE2EEUpload(file)) {\n          file.type = 'application/octet-stream';\n        }\n        // E2EE files are of type application/octet-stream, which is whitelisted for E2EE files\n        if (!fileUploadIsValidContentType(file === null || file === void 0 ? void 0 : file.type, isE2EEUpload(file) ? 'application/octet-stream' : undefined)) {\n          const reason = i18n.t('File_type_is_not_accepted', {\n            lng: language\n          });\n          throw new Meteor.Error('error-invalid-file-type', reason);\n        }\n        // App IPreFileUpload event hook\n        try {\n          var _Apps$self;\n          await ((_Apps$self = Apps.self) === null || _Apps$self === void 0 ? void 0 : _Apps$self.triggerEvent(AppEvents.IPreFileUpload, {\n            file,\n            content: content || Buffer.from([])\n          }));\n        } catch (error) {\n          if (error.name === AppsEngineException.name) {\n            throw new Meteor.Error('error-app-prevented', error.message);\n          }\n          throw error;\n        }\n        return true;\n      },\n      async validateAvatarUpload(file) {\n        if (!Match.test(file.rid, String) && !Match.test(file.userId, String)) {\n          return false;\n        }\n        const user = file.uid ? await Users.findOne(file.uid, {\n          projection: {\n            language: 1\n          }\n        }) : null;\n        const language = (user === null || user === void 0 ? void 0 : user.language) || 'en';\n        // accept only images\n        if (!/^image\\//.test(file.type || '')) {\n          const reason = i18n.t('File_type_is_not_accepted', {\n            lng: language\n          });\n          throw new Meteor.Error('error-invalid-file-type', reason);\n        }\n        // -1 maxFileSize means there is no limit\n        if (maxFileSize > -1 && (file.size || 0) > maxFileSize) {\n          const reason = i18n.t('File_exceeds_allowed_size_of_bytes', {\n            size: filesize(maxFileSize),\n            lng: language\n          });\n          throw new Meteor.Error('error-file-too-large', reason);\n        }\n        return true;\n      },\n      defaults,\n      async avatarsOnValidate(file) {\n        if (settings.get('Accounts_AvatarResize') !== true) {\n          return;\n        }\n        const tempFilePath = UploadFS.getTempFilePath(file._id);\n        const height = settings.get('Accounts_AvatarSize');\n        const width = height;\n        const s = sharp(tempFilePath);\n        if (settings.get('FileUpload_RotateImages') === true) {\n          s.rotate();\n        }\n        const metadata = await s.metadata();\n        // if (!metadata) {\n        // \tmetadata = {};\n        // }\n        const {\n          data,\n          info\n        } = await s.resize({\n          width,\n          height,\n          fit: metadata.hasAlpha ? sharp.fit.contain : sharp.fit.cover,\n          background: {\n            r: 255,\n            g: 255,\n            b: 255,\n            alpha: metadata.hasAlpha ? 0 : 1\n          }\n        })\n        // Use buffer to get the result in memory then replace the existing file\n        // There is no option to override a file using this library\n        //\n        // BY THE SHARP DOCUMENTATION:\n        // toBuffer: Write output to a Buffer. JPEG, PNG, WebP, TIFF and RAW output are supported.\n        // By default, the format will match the input image, except GIF and SVG input which become PNG output.\n        .toBuffer({\n          resolveWithObject: true\n        });\n        try {\n          await writeFile(tempFilePath, data);\n        } catch (err) {\n          SystemLogger.error(err);\n        }\n        await this.getCollection().updateOne({\n          _id: file._id\n        }, {\n          $set: _objectSpread({\n            size: info.size\n          }, ['gif', 'svg'].includes(metadata.format || '') ? {\n            type: 'image/png'\n          } : {})\n        });\n      },\n      async resizeImagePreview(fileParam) {\n        let file = await Uploads.findOneById(fileParam._id);\n        if (!file) {\n          return;\n        }\n        file = FileUpload.addExtensionTo(file);\n        const image = await FileUpload.getStore('Uploads')._store.getReadStream(file._id, file);\n        const transformer = sharp().resize({\n          width: 32,\n          height: 32,\n          fit: 'inside'\n        }).jpeg().blur();\n        const result = transformer.toBuffer().then(out => out.toString('base64'));\n        image.pipe(transformer);\n        return result;\n      },\n      async extractMetadata(file) {\n        return sharp(await FileUpload.getBuffer(file)).metadata();\n      },\n      async createImageThumbnail(fileParam) {\n        var _fileParam$identify, _fileParam$identify2;\n        if (!settings.get('Message_Attachments_Thumbnails_Enabled')) {\n          return;\n        }\n        const width = settings.get('Message_Attachments_Thumbnails_Width');\n        const height = settings.get('Message_Attachments_Thumbnails_Height');\n        if ((_fileParam$identify = fileParam.identify) !== null && _fileParam$identify !== void 0 && _fileParam$identify.size && fileParam.identify.size.height < height && ((_fileParam$identify2 = fileParam.identify) === null || _fileParam$identify2 === void 0 ? void 0 : _fileParam$identify2.size.width) < width) {\n          return;\n        }\n        let file = await Uploads.findOneById(fileParam._id);\n        if (!file) {\n          return;\n        }\n        file = FileUpload.addExtensionTo(file);\n        const store = FileUpload.getStore('Uploads');\n        const image = await store._store.getReadStream(file._id, file);\n        let transformer = sharp().resize({\n          width,\n          height,\n          fit: 'inside'\n        });\n        if (file.type === 'image/svg+xml') {\n          transformer = transformer.png();\n        }\n        const result = transformer.toBuffer({\n          resolveWithObject: true\n        }).then(_ref => {\n          var _file, _file2;\n          let {\n            data,\n            info: {\n              width,\n              height,\n              format\n            }\n          } = _ref;\n          return {\n            data,\n            width,\n            height,\n            thumbFileType: mime.lookup(format) || '',\n            thumbFileName: (_file = file) === null || _file === void 0 ? void 0 : _file.name,\n            originalFileId: (_file2 = file) === null || _file2 === void 0 ? void 0 : _file2._id\n          };\n        });\n        image.pipe(transformer);\n        return result;\n      },\n      async uploadImageThumbnail(_ref2, buffer, rid, userId) {\n        let {\n          thumbFileName,\n          thumbFileType,\n          originalFileId\n        } = _ref2;\n        const store = FileUpload.getStore('Uploads');\n        const details = {\n          name: \"thumb-\".concat(thumbFileName),\n          size: buffer.length,\n          type: thumbFileType,\n          originalFileId,\n          typeGroup: 'thumb',\n          uploadedAt: new Date(),\n          _updatedAt: new Date(),\n          rid,\n          userId\n        };\n        return store.insert(details, buffer);\n      },\n      async uploadsOnValidate(file) {\n        if (!file.type || !/^image\\/((x-windows-)?bmp|p?jpeg|png|gif|webp)$/.test(file.type)) {\n          return;\n        }\n        const tmpFile = UploadFS.getTempFilePath(file._id);\n        const s = sharp(tmpFile);\n        const metadata = await s.metadata();\n        // if (err != null) {\n        // \tSystemLogger.error(err);\n        // \treturn fut.return();\n        // }\n        const rotated = typeof metadata.orientation !== 'undefined' && metadata.orientation !== 1;\n        const width = rotated ? metadata.height : metadata.width;\n        const height = rotated ? metadata.width : metadata.height;\n        const identify = {\n          format: metadata.format,\n          size: width != null && height != null ? {\n            width,\n            height\n          } : undefined\n        };\n        const reorientation = async () => {\n          if (!rotated || settings.get('FileUpload_RotateImages') !== true) {\n            return;\n          }\n          await s.rotate().toFile(\"\".concat(tmpFile, \".tmp\"));\n          await unlink(tmpFile);\n          await rename(\"\".concat(tmpFile, \".tmp\"), tmpFile);\n          // SystemLogger.error(err);\n        };\n        await reorientation();\n        const {\n          size\n        } = await fs.lstatSync(tmpFile);\n        await this.getCollection().updateOne({\n          _id: file._id\n        }, {\n          $set: {\n            size,\n            identify\n          }\n        });\n      },\n      async avatarsOnFinishUpload(file) {\n        if (file.rid) {\n          return;\n        }\n        if (!file.userId) {\n          throw new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n        }\n        // update file record to match user's username\n        const user = await Users.findOneById(file.userId);\n        if (!(user !== null && user !== void 0 && user.username)) {\n          throw new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n        }\n        const oldAvatar = await Avatars.findOneByName(user.username);\n        if (oldAvatar) {\n          await Avatars.deleteFile(oldAvatar._id);\n        }\n        await Avatars.updateFileNameById(file._id, user.username);\n      },\n      async requestCanAccessFiles(_ref3, file) {\n        let {\n          headers = {},\n          url\n        } = _ref3;\n        if (!url || !settings.get('FileUpload_ProtectFiles')) {\n          return true;\n        }\n        const {\n          query\n        } = URL.parse(url, true);\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        let {\n          rc_uid,\n          rc_token,\n          rc_rid,\n          rc_room_type\n        } = query;\n        const {\n          token\n        } = query;\n        if (!rc_uid && headers.cookie) {\n          rc_uid = cookie.get('rc_uid', headers.cookie);\n          rc_token = cookie.get('rc_token', headers.cookie);\n          rc_rid = cookie.get('rc_rid', headers.cookie);\n          rc_room_type = cookie.get('rc_room_type', headers.cookie);\n        }\n        const isAuthorizedByRoom = async () => rc_room_type && roomCoordinator.getRoomDirectives(rc_room_type).canAccessUploadedFile({\n          rc_uid: rc_uid || '',\n          rc_rid: rc_rid || '',\n          rc_token: rc_token || ''\n        });\n        const isAuthorizedByJWT = () => settings.get('FileUpload_Enable_json_web_token_for_files') && token && isValidJWT(token, settings.get('FileUpload_json_web_token_secret_for_files'));\n        if ((await isAuthorizedByRoom()) || isAuthorizedByJWT()) {\n          return true;\n        }\n        const uid = rc_uid || headers['x-user-id'];\n        const authToken = rc_token || headers['x-auth-token'];\n        const user = uid && authToken && (await Users.findOneByIdAndLoginToken(uid, hashLoginToken(authToken), {\n          projection: {\n            _id: 1\n          }\n        }));\n        if (!user) {\n          return false;\n        }\n        if (!(file !== null && file !== void 0 && file.rid)) {\n          return true;\n        }\n        const fileUploadRestrictedToMembers = settings.get('FileUpload_Restrict_to_room_members');\n        const fileUploadRestrictToUsersWhoCanAccessRoom = settings.get('FileUpload_Restrict_to_users_who_can_access_room');\n        if (!fileUploadRestrictToUsersWhoCanAccessRoom && !fileUploadRestrictedToMembers) {\n          return true;\n        }\n        if (fileUploadRestrictedToMembers && !fileUploadRestrictToUsersWhoCanAccessRoom) {\n          const sub = await Subscriptions.findOneByRoomIdAndUserId(file.rid, user._id, {\n            projection: {\n              _id: 1\n            }\n          });\n          return !!sub;\n        }\n        if (fileUploadRestrictToUsersWhoCanAccessRoom && !fileUploadRestrictedToMembers) {\n          return canAccessRoomIdAsync(file.rid, user._id);\n        }\n        return false;\n      },\n      addExtensionTo(file) {\n        if (mime.lookup(file.name || '') === file.type) {\n          return file;\n        }\n        // This file type can be pretty much anything, so it's better if we don't mess with the file extension\n        if (file.type !== 'application/octet-stream') {\n          const ext = mime.extension(file.type || '');\n          if (ext && new RegExp(\"\\\\.\".concat(ext, \"$\"), 'i').test(file.name || '') === false) {\n            file.name = \"\".concat(file.name, \".\").concat(ext);\n          }\n        }\n        return file;\n      },\n      getStore(modelName) {\n        const storageType = settings.get('FileUpload_Storage_Type');\n        const handlerName = \"\".concat(storageType, \":\").concat(modelName);\n        return this.getStoreByName(handlerName);\n      },\n      getStoreByName(handlerName) {\n        if (!handlerName) {\n          SystemLogger.error(\"Empty Upload handler does not exists\");\n          throw new Error(\"Empty Upload handler does not exists\");\n        }\n        if (this.handlers[handlerName] == null) {\n          SystemLogger.error(\"Upload handler \\\"\".concat(handlerName, \"\\\" does not exists\"));\n        }\n        return this.handlers[handlerName];\n      },\n      get(file, req, res, next) {\n        const store = this.getStoreByName(file.store);\n        if (store !== null && store !== void 0 && store.get) {\n          return store.get(file, req, res, next);\n        }\n        res.writeHead(404);\n        res.end();\n      },\n      async getBuffer(file) {\n        const store = this.getStoreByName(file.store);\n        if (!(store !== null && store !== void 0 && store.get)) {\n          throw new Error('Store is invalid');\n        }\n        const buffer = new streamBuffers.WritableStreamBuffer({\n          initialSize: file.size\n        });\n        return new Promise((resolve, reject) => {\n          var _store$copy;\n          buffer.on('finish', () => {\n            const contents = buffer.getContents();\n            if (contents === false) {\n              return reject();\n            }\n            resolve(contents);\n          });\n          void ((_store$copy = store.copy) === null || _store$copy === void 0 ? void 0 : _store$copy.call(store, file, buffer));\n        });\n      },\n      async copy(file, targetFile) {\n        const store = this.getStoreByName(file.store);\n        const out = fs.createWriteStream(targetFile);\n        file = FileUpload.addExtensionTo(file);\n        if (store.copy) {\n          await store.copy(file, out);\n          return true;\n        }\n        return false;\n      },\n      redirectToFile(fileUrl, _req, res) {\n        res.removeHeader('Content-Length');\n        res.removeHeader('Cache-Control');\n        res.setHeader('Location', fileUrl);\n        res.writeHead(302);\n        res.end();\n      },\n      proxyFile(fileName, fileUrl, forceDownload, request, _req, res) {\n        res.setHeader('Content-Disposition', \"\".concat(forceDownload ? 'attachment' : 'inline', \"; filename=\\\"\").concat(encodeURI(fileName), \"\\\"\"));\n        request.get(fileUrl, fileRes => {\n          if (fileRes.statusCode !== 200) {\n            res.setHeader('x-rc-proxyfile-status', String(fileRes.statusCode));\n            res.setHeader('content-length', 0);\n            res.writeHead(500);\n            res.end();\n            return;\n          }\n          // eslint-disable-next-line prettier/prettier\n          const headersToProxy = ['age', 'cache-control', 'content-length', 'content-type', 'date', 'expired', 'last-modified'];\n          headersToProxy.forEach(header => {\n            fileRes.headers[header] && res.setHeader(header, String(fileRes.headers[header]));\n          });\n          fileRes.pipe(res);\n        });\n      },\n      generateJWTToFileUrls(_ref4) {\n        let {\n          rid,\n          userId,\n          fileId\n        } = _ref4;\n        if (!settings.get('FileUpload_ProtectFiles') || !settings.get('FileUpload_Enable_json_web_token_for_files')) {\n          return;\n        }\n        return generateJWT({\n          rid,\n          userId,\n          fileId\n        }, settings.get('FileUpload_json_web_token_secret_for_files'));\n      },\n      async removeFilesByRoomId(rid) {\n        if (typeof rid !== 'string' || rid.trim().length === 0) {\n          return;\n        }\n        const cursor = Messages.find({\n          rid,\n          'file._id': {\n            $exists: true\n          }\n        }, {\n          projection: {\n            'file._id': 1\n          }\n        });\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(cursor), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const document = _step.value;\n            {\n              if (document.file) {\n                await FileUpload.getStore('Uploads').deleteById(document.file._id);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    };\n    class FileUploadClass {\n      constructor(_ref5) {\n        let {\n          name,\n          model,\n          store,\n          get,\n          insert,\n          getStore,\n          copy\n        } = _ref5;\n        this.name = void 0;\n        this.model = void 0;\n        this._store = void 0;\n        this.get = void 0;\n        this.copy = void 0;\n        this.name = name;\n        this.model = model || this.getModelFromName();\n        this._store = store || UploadFS.getStore(name);\n        this.get = get;\n        this.copy = copy;\n        if (insert) {\n          this.insert = insert;\n        }\n        if (getStore) {\n          this.getStore = getStore;\n        }\n        FileUpload.handlers[name] = this;\n      }\n      getStore() {\n        return this._store;\n      }\n      get store() {\n        return this.getStore();\n      }\n      set store(store) {\n        this._store = store;\n      }\n      getModelFromName() {\n        const modelsAvailable = {\n          Avatars,\n          Uploads,\n          UserDataFiles\n        };\n        const modelName = this.name.split(':')[1];\n        if (!modelsAvailable[modelName]) {\n          throw new Error('Invalid Model for FileUpload');\n        }\n        return modelsAvailable[modelName];\n      }\n      async delete(fileId) {\n        var _this$store;\n        // TODO: Remove this method\n        if ((_this$store = this.store) !== null && _this$store !== void 0 && _this$store.delete) {\n          await this.store.delete(fileId);\n        }\n        return this.model.deleteFile(fileId);\n      }\n      async deleteById(fileId) {\n        const file = await this.model.findOneById(fileId);\n        if (!file) {\n          return;\n        }\n        const store = FileUpload.getStoreByName(file.store);\n        return store.delete(file._id);\n      }\n      async deleteByName(fileName) {\n        const file = await this.model.findOneByName(fileName);\n        if (!file) {\n          return;\n        }\n        const store = FileUpload.getStoreByName(file.store);\n        return store.delete(file._id);\n      }\n      async deleteByRoomId(rid) {\n        const file = await this.model.findOneByRoomId(rid);\n        if (!file) {\n          return;\n        }\n        const store = FileUpload.getStoreByName(file.store);\n        return store.delete(file._id);\n      }\n      async _doInsert(fileData, streamOrBuffer) {\n        const fileId = await this.store.create(fileData);\n        const tmpFile = UploadFS.getTempFilePath(fileId);\n        try {\n          if (streamOrBuffer instanceof stream) {\n            streamOrBuffer.pipe(fs.createWriteStream(tmpFile));\n          } else if (streamOrBuffer instanceof Buffer) {\n            fs.writeFileSync(tmpFile, streamOrBuffer);\n          } else {\n            throw new Error('Invalid file type');\n          }\n          const file = await ufsComplete(fileId, this.name);\n          return file;\n        } catch (e) {\n          throw e;\n        }\n      }\n      async insert(fileData, streamOrBuffer) {\n        if (streamOrBuffer instanceof stream) {\n          streamOrBuffer = await streamToBuffer(streamOrBuffer);\n        }\n        if (streamOrBuffer instanceof Uint8Array) {\n          // Services compat :)\n          streamOrBuffer = Buffer.from(streamOrBuffer);\n        }\n        // Check if the fileData matches store filter\n        const filter = this.store.getFilter();\n        if (filter !== null && filter !== void 0 && filter.check) {\n          await filter.check(fileData, streamOrBuffer);\n        }\n        return this._doInsert(fileData, streamOrBuffer);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","FileUpload","FileUploadClass","Buffer","fs","unlink","rename","writeFile","stream","URL","hashLoginToken","Apps","AppEvents","AppsEngineException","isE2EEUpload","Users","Avatars","UserDataFiles","Uploads","Settings","Subscriptions","Messages","Rooms","filesize","Match","Meteor","Cookies","sharp","streamBuffers","streamToBuffer","i18n","SystemLogger","roomCoordinator","UploadFS","ufsComplete","canAccessRoomAsync","canAccessRoomIdAsync","settings","mime","isValidJWT","generateJWT","fileUploadIsValidContentType","__reifyWaitForDeps__","cookie","maxFileSize","watch","value","parseInt","e","_await$Settings$findO","findOneById","packageValue","handlers","defaults","collection","filter","Filter","onCheck","validateFileUpload","getPath","file","concat","get","rid","userId","_id","onValidate","uploadsOnValidate","onRead","_fileId","req","res","requestCanAccessFiles","writeHead","setHeader","encodeURIComponent","name","validateAvatarUpload","avatarFile","avatarsOnValidate","onFinishUpload","avatarsOnFinishUpload","path","arguments","length","undefined","configureUploadsStore","store","options","type","split","pop","Error","stores","getStores","Object","assign","content","test","String","user","findOne","room","directMessageAllowed","fileUploadAllowed","language","reason","t","lng","size","_Apps$self","self","triggerEvent","IPreFileUpload","from","error","message","uid","projection","tempFilePath","getTempFilePath","height","width","s","rotate","metadata","data","info","resize","fit","hasAlpha","contain","cover","background","r","g","b","alpha","toBuffer","resolveWithObject","err","getCollection","updateOne","$set","includes","format","resizeImagePreview","fileParam","addExtensionTo","image","getStore","_store","getReadStream","transformer","jpeg","blur","result","then","out","toString","pipe","extractMetadata","getBuffer","createImageThumbnail","_fileParam$identify","_fileParam$identify2","identify","png","_ref","_file","_file2","thumbFileType","lookup","thumbFileName","originalFileId","uploadImageThumbnail","_ref2","buffer","details","typeGroup","uploadedAt","Date","_updatedAt","insert","tmpFile","rotated","orientation","reorientation","toFile","lstatSync","username","oldAvatar","findOneByName","deleteFile","updateFileNameById","_ref3","headers","url","query","parse","rc_uid","rc_token","rc_rid","rc_room_type","token","isAuthorizedByRoom","getRoomDirectives","canAccessUploadedFile","isAuthorizedByJWT","authToken","findOneByIdAndLoginToken","fileUploadRestrictedToMembers","fileUploadRestrictToUsersWhoCanAccessRoom","sub","findOneByRoomIdAndUserId","ext","extension","RegExp","modelName","storageType","handlerName","getStoreByName","next","end","WritableStreamBuffer","initialSize","Promise","resolve","reject","_store$copy","on","contents","getContents","copy","call","targetFile","createWriteStream","redirectToFile","fileUrl","_req","removeHeader","proxyFile","fileName","forceDownload","request","encodeURI","fileRes","statusCode","headersToProxy","forEach","header","generateJWTToFileUrls","_ref4","fileId","removeFilesByRoomId","trim","cursor","find","$exists","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","done","document","deleteById","return","constructor","_ref5","model","getModelFromName","modelsAvailable","delete","_this$store","deleteByName","deleteByRoomId","findOneByRoomId","_doInsert","fileData","streamOrBuffer","create","writeFileSync","Uint8Array","getFilter","check","__reify_async_result__","_reifyError","async"],"sources":["app/file-upload/server/lib/FileUpload.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport type { WriteStream } from 'fs';\nimport fs from 'fs';\nimport { unlink, rename, writeFile } from 'fs/promises';\nimport type * as http from 'http';\nimport type * as https from 'https';\nimport stream from 'stream';\nimport URL from 'url';\n\nimport { hashLoginToken } from '@rocket.chat/account-utils';\nimport { Apps, AppEvents } from '@rocket.chat/apps';\nimport { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { isE2EEUpload, type IUpload } from '@rocket.chat/core-typings';\nimport { Users, Avatars, UserDataFiles, Uploads, Settings, Subscriptions, Messages, Rooms } from '@rocket.chat/models';\nimport type { NextFunction } from 'connect';\nimport filesize from 'filesize';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { Cookies } from 'meteor/ostrio:cookies';\nimport type { OptionalId } from 'mongodb';\nimport sharp from 'sharp';\nimport type { WritableStreamBuffer } from 'stream-buffers';\nimport streamBuffers from 'stream-buffers';\n\nimport { streamToBuffer } from './streamToBuffer';\nimport { i18n } from '../../../../server/lib/i18n';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\nimport { UploadFS } from '../../../../server/ufs';\nimport { ufsComplete } from '../../../../server/ufs/ufs-methods';\nimport type { Store, StoreOptions } from '../../../../server/ufs/ufs-store';\nimport { canAccessRoomAsync, canAccessRoomIdAsync } from '../../../authorization/server/functions/canAccessRoom';\nimport { settings } from '../../../settings/server';\nimport { mime } from '../../../utils/lib/mimeTypes';\nimport { isValidJWT, generateJWT } from '../../../utils/server/lib/JWTHelper';\nimport { fileUploadIsValidContentType } from '../../../utils/server/restrictions';\n\nconst cookie = new Cookies();\nlet maxFileSize = 0;\n\nsettings.watch('FileUpload_MaxFileSize', async (value: string) => {\n\ttry {\n\t\tmaxFileSize = parseInt(value);\n\t} catch (e) {\n\t\tmaxFileSize = (await Settings.findOneById('FileUpload_MaxFileSize'))?.packageValue as number;\n\t}\n});\n\nconst handlers: Record<string, FileUploadClass> = {};\n\nconst defaults: Record<string, () => Partial<StoreOptions>> = {\n\tUploads() {\n\t\treturn {\n\t\t\tcollection: Uploads,\n\t\t\tfilter: new UploadFS.Filter({\n\t\t\t\tonCheck: FileUpload.validateFileUpload,\n\t\t\t}),\n\t\t\tgetPath(file: IUpload) {\n\t\t\t\treturn `${settings.get('uniqueID')}/uploads/${file.rid}/${file.userId}/${file._id}`;\n\t\t\t},\n\t\t\tonValidate: FileUpload.uploadsOnValidate,\n\t\t\tasync onRead(_fileId: string, file: IUpload, req: http.IncomingMessage, res: http.ServerResponse) {\n\t\t\t\t// Deprecated: Remove support to usf path\n\t\t\t\tif (!(await FileUpload.requestCanAccessFiles(req, file))) {\n\t\t\t\t\tres.writeHead(403);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tres.setHeader('content-disposition', `attachment; filename=\"${encodeURIComponent(file.name || '')}\"`);\n\t\t\t\treturn true;\n\t\t\t},\n\t\t};\n\t},\n\n\tAvatars() {\n\t\treturn {\n\t\t\tcollection: Avatars,\n\t\t\tfilter: new UploadFS.Filter({\n\t\t\t\tonCheck: FileUpload.validateAvatarUpload,\n\t\t\t}),\n\t\t\tgetPath(file: IUpload) {\n\t\t\t\tconst avatarFile = file.rid ? `room-${file.rid}` : file.userId;\n\t\t\t\treturn `${settings.get('uniqueID')}/avatars/${avatarFile}`;\n\t\t\t},\n\t\t\tonValidate: FileUpload.avatarsOnValidate,\n\t\t\tonFinishUpload: FileUpload.avatarsOnFinishUpload,\n\t\t};\n\t},\n\n\tUserDataFiles() {\n\t\treturn {\n\t\t\tcollection: UserDataFiles,\n\t\t\tgetPath(file: IUpload) {\n\t\t\t\treturn `${settings.get('uniqueID')}/uploads/userData/${file.userId}`;\n\t\t\t},\n\t\t\tonValidate: FileUpload.uploadsOnValidate,\n\t\t\tasync onRead(_fileId: string, file: IUpload, req: http.IncomingMessage, res: http.ServerResponse) {\n\t\t\t\tif (!(await FileUpload.requestCanAccessFiles(req))) {\n\t\t\t\t\tres.writeHead(403);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tres.setHeader('content-disposition', `attachment; filename=\"${encodeURIComponent(file.name || '')}\"`);\n\t\t\t\treturn true;\n\t\t\t},\n\t\t};\n\t},\n};\n\nexport const FileUpload = {\n\thandlers,\n\n\tgetPath(path = '') {\n\t\treturn `/file-upload/${path}`;\n\t},\n\n\tconfigureUploadsStore(store: string, name: string, options: any) {\n\t\tconst type = name.split(':').pop();\n\t\tif (!type || !(type in FileUpload.defaults)) {\n\t\t\tthrow new Error('Store type undefined');\n\t\t}\n\t\tconst stores = UploadFS.getStores();\n\t\tdelete stores[name];\n\n\t\treturn new UploadFS.store[store](\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t},\n\t\t\t\toptions,\n\t\t\t\tFileUpload.defaults[type](),\n\t\t\t),\n\t\t);\n\t},\n\n\tasync validateFileUpload(file: IUpload, content?: Buffer) {\n\t\tif (!Match.test(file.rid, String)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// livechat users can upload files but they don't have an userId\n\t\tconst user = (file.userId && (await Users.findOne(file.userId))) || undefined;\n\n\t\tconst room = await Rooms.findOneById(file.rid);\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\t\tconst directMessageAllowed = settings.get('FileUpload_Enabled_Direct');\n\t\tconst fileUploadAllowed = settings.get('FileUpload_Enabled');\n\t\tif (user?.type !== 'app' && (await canAccessRoomAsync(room, user, file)) !== true) {\n\t\t\treturn false;\n\t\t}\n\t\tconst language = user?.language || 'en';\n\t\tif (!fileUploadAllowed) {\n\t\t\tconst reason = i18n.t('FileUpload_Disabled', { lng: language });\n\t\t\tthrow new Meteor.Error('error-file-upload-disabled', reason);\n\t\t}\n\n\t\tif (!directMessageAllowed && room.t === 'd') {\n\t\t\tconst reason = i18n.t('File_not_allowed_direct_messages', { lng: language });\n\t\t\tthrow new Meteor.Error('error-direct-message-file-upload-not-allowed', reason);\n\t\t}\n\n\t\t// -1 maxFileSize means there is no limit\n\t\tif (maxFileSize > -1 && (file.size || 0) > maxFileSize) {\n\t\t\tconst reason = i18n.t('File_exceeds_allowed_size_of_bytes', {\n\t\t\t\tsize: filesize(maxFileSize),\n\t\t\t\tlng: language,\n\t\t\t});\n\t\t\tthrow new Meteor.Error('error-file-too-large', reason);\n\t\t}\n\n\t\tif (!settings.get('E2E_Enable_Encrypt_Files') && isE2EEUpload(file)) {\n\t\t\tconst reason = i18n.t('Encrypted_file_not_allowed', { lng: language });\n\t\t\tthrow new Meteor.Error('error-invalid-file-type', reason);\n\t\t}\n\n\t\t// E2EE files should be of type application/octet-stream. no information about them should be disclosed on upload if they are encrypted\n\t\tif (isE2EEUpload(file)) {\n\t\t\tfile.type = 'application/octet-stream';\n\t\t}\n\n\t\t// E2EE files are of type application/octet-stream, which is whitelisted for E2EE files\n\t\tif (!fileUploadIsValidContentType(file?.type, isE2EEUpload(file) ? 'application/octet-stream' : undefined)) {\n\t\t\tconst reason = i18n.t('File_type_is_not_accepted', { lng: language });\n\t\t\tthrow new Meteor.Error('error-invalid-file-type', reason);\n\t\t}\n\n\t\t// App IPreFileUpload event hook\n\t\ttry {\n\t\t\tawait Apps.self?.triggerEvent(AppEvents.IPreFileUpload, { file, content: content || Buffer.from([]) });\n\t\t} catch (error: any) {\n\t\t\tif (error.name === AppsEngineException.name) {\n\t\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tasync validateAvatarUpload(file: IUpload) {\n\t\tif (!Match.test(file.rid, String) && !Match.test(file.userId, String)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst user = file.uid ? await Users.findOne(file.uid, { projection: { language: 1 } }) : null;\n\t\tconst language = user?.language || 'en';\n\n\t\t// accept only images\n\t\tif (!/^image\\//.test(file.type || '')) {\n\t\t\tconst reason = i18n.t('File_type_is_not_accepted', { lng: language });\n\t\t\tthrow new Meteor.Error('error-invalid-file-type', reason);\n\t\t}\n\n\t\t// -1 maxFileSize means there is no limit\n\t\tif (maxFileSize > -1 && (file.size || 0) > maxFileSize) {\n\t\t\tconst reason = i18n.t('File_exceeds_allowed_size_of_bytes', {\n\t\t\t\tsize: filesize(maxFileSize),\n\t\t\t\tlng: language,\n\t\t\t});\n\t\t\tthrow new Meteor.Error('error-file-too-large', reason);\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tdefaults,\n\n\tasync avatarsOnValidate(this: Store, file: IUpload) {\n\t\tif (settings.get('Accounts_AvatarResize') !== true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tempFilePath = UploadFS.getTempFilePath(file._id);\n\n\t\tconst height = settings.get('Accounts_AvatarSize') as number;\n\t\tconst width = height as number;\n\n\t\tconst s = sharp(tempFilePath);\n\t\tif (settings.get('FileUpload_RotateImages') === true) {\n\t\t\ts.rotate();\n\t\t}\n\n\t\tconst metadata = await s.metadata();\n\t\t// if (!metadata) {\n\t\t// \tmetadata = {};\n\t\t// }\n\n\t\tconst { data, info } = await s\n\t\t\t.resize({\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tfit: metadata.hasAlpha ? sharp.fit.contain : sharp.fit.cover,\n\t\t\t\tbackground: { r: 255, g: 255, b: 255, alpha: metadata.hasAlpha ? 0 : 1 },\n\t\t\t})\n\t\t\t// Use buffer to get the result in memory then replace the existing file\n\t\t\t// There is no option to override a file using this library\n\t\t\t//\n\t\t\t// BY THE SHARP DOCUMENTATION:\n\t\t\t// toBuffer: Write output to a Buffer. JPEG, PNG, WebP, TIFF and RAW output are supported.\n\t\t\t// By default, the format will match the input image, except GIF and SVG input which become PNG output.\n\t\t\t.toBuffer({ resolveWithObject: true });\n\n\t\ttry {\n\t\t\tawait writeFile(tempFilePath, data);\n\t\t} catch (err: any) {\n\t\t\tSystemLogger.error(err);\n\t\t}\n\n\t\tawait this.getCollection().updateOne(\n\t\t\t{ _id: file._id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tsize: info.size,\n\t\t\t\t\t...(['gif', 'svg'].includes(metadata.format || '') ? { type: 'image/png' } : {}),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t},\n\n\tasync resizeImagePreview(fileParam: IUpload) {\n\t\tlet file = await Uploads.findOneById(fileParam._id);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\tfile = FileUpload.addExtensionTo(file);\n\t\tconst image = await FileUpload.getStore('Uploads')._store.getReadStream(file._id, file);\n\n\t\tconst transformer = sharp().resize({ width: 32, height: 32, fit: 'inside' }).jpeg().blur();\n\t\tconst result = transformer.toBuffer().then((out) => out.toString('base64'));\n\t\timage.pipe(transformer);\n\t\treturn result;\n\t},\n\n\tasync extractMetadata(file: IUpload) {\n\t\treturn sharp(await FileUpload.getBuffer(file)).metadata();\n\t},\n\n\tasync createImageThumbnail(fileParam: IUpload) {\n\t\tif (!settings.get('Message_Attachments_Thumbnails_Enabled')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = settings.get('Message_Attachments_Thumbnails_Width') as number;\n\t\tconst height = settings.get('Message_Attachments_Thumbnails_Height') as number;\n\n\t\tif (fileParam.identify?.size && fileParam.identify.size.height < height && fileParam.identify?.size.width < width) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet file = await Uploads.findOneById(fileParam._id);\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tfile = FileUpload.addExtensionTo(file);\n\t\tconst store = FileUpload.getStore('Uploads');\n\t\tconst image = await store._store.getReadStream(file._id, file);\n\n\t\tlet transformer = sharp().resize({ width, height, fit: 'inside' });\n\n\t\tif (file.type === 'image/svg+xml') {\n\t\t\ttransformer = transformer.png();\n\t\t}\n\t\tconst result = transformer.toBuffer({ resolveWithObject: true }).then(({ data, info: { width, height, format } }) => ({\n\t\t\tdata,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tthumbFileType: (mime.lookup(format) as string) || '',\n\t\t\tthumbFileName: file?.name as string,\n\t\t\toriginalFileId: file?._id as string,\n\t\t}));\n\t\timage.pipe(transformer);\n\n\t\treturn result;\n\t},\n\n\tasync uploadImageThumbnail(\n\t\t{ thumbFileName, thumbFileType, originalFileId }: { thumbFileName: string; thumbFileType: string; originalFileId: string },\n\t\tbuffer: Buffer,\n\t\trid: string,\n\t\tuserId: string,\n\t) {\n\t\tconst store = FileUpload.getStore('Uploads');\n\t\tconst details = {\n\t\t\tname: `thumb-${thumbFileName}`,\n\t\t\tsize: buffer.length,\n\t\t\ttype: thumbFileType,\n\t\t\toriginalFileId,\n\t\t\ttypeGroup: 'thumb',\n\t\t\tuploadedAt: new Date(),\n\t\t\t_updatedAt: new Date(),\n\t\t\trid,\n\t\t\tuserId,\n\t\t};\n\n\t\treturn store.insert(details, buffer);\n\t},\n\n\tasync uploadsOnValidate(this: Store, file: IUpload) {\n\t\tif (!file.type || !/^image\\/((x-windows-)?bmp|p?jpeg|png|gif|webp)$/.test(file.type)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tmpFile = UploadFS.getTempFilePath(file._id);\n\n\t\tconst s = sharp(tmpFile);\n\t\tconst metadata = await s.metadata();\n\t\t// if (err != null) {\n\t\t// \tSystemLogger.error(err);\n\t\t// \treturn fut.return();\n\t\t// }\n\n\t\tconst rotated = typeof metadata.orientation !== 'undefined' && metadata.orientation !== 1;\n\t\tconst width = rotated ? metadata.height : metadata.width;\n\t\tconst height = rotated ? metadata.width : metadata.height;\n\n\t\tconst identify = {\n\t\t\tformat: metadata.format,\n\t\t\tsize:\n\t\t\t\twidth != null && height != null\n\t\t\t\t\t? {\n\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined,\n\t\t};\n\n\t\tconst reorientation = async () => {\n\t\t\tif (!rotated || settings.get('FileUpload_RotateImages') !== true) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait s.rotate().toFile(`${tmpFile}.tmp`);\n\n\t\t\tawait unlink(tmpFile);\n\n\t\t\tawait rename(`${tmpFile}.tmp`, tmpFile);\n\t\t\t// SystemLogger.error(err);\n\t\t};\n\n\t\tawait reorientation();\n\n\t\tconst { size } = await fs.lstatSync(tmpFile);\n\t\tawait this.getCollection().updateOne(\n\t\t\t{ _id: file._id },\n\t\t\t{\n\t\t\t\t$set: { size, identify },\n\t\t\t},\n\t\t);\n\t},\n\n\tasync avatarsOnFinishUpload(file: IUpload) {\n\t\tif (file.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!file.userId) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n\t\t}\n\n\t\t// update file record to match user's username\n\t\tconst user = await Users.findOneById(file.userId);\n\t\tif (!user?.username) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Change avatar is not allowed');\n\t\t}\n\t\tconst oldAvatar = await Avatars.findOneByName(user.username);\n\t\tif (oldAvatar) {\n\t\t\tawait Avatars.deleteFile(oldAvatar._id);\n\t\t}\n\t\tawait Avatars.updateFileNameById(file._id, user.username);\n\t},\n\n\tasync requestCanAccessFiles({ headers = {}, url }: http.IncomingMessage, file?: IUpload) {\n\t\tif (!url || !settings.get('FileUpload_ProtectFiles')) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst { query } = URL.parse(url, true);\n\t\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\t\tlet { rc_uid, rc_token, rc_rid, rc_room_type } = query as Record<string, string | undefined>;\n\t\tconst { token } = query;\n\n\t\tif (!rc_uid && headers.cookie) {\n\t\t\trc_uid = cookie.get('rc_uid', headers.cookie);\n\t\t\trc_token = cookie.get('rc_token', headers.cookie);\n\t\t\trc_rid = cookie.get('rc_rid', headers.cookie);\n\t\t\trc_room_type = cookie.get('rc_room_type', headers.cookie);\n\t\t}\n\n\t\tconst isAuthorizedByRoom = async () =>\n\t\t\trc_room_type &&\n\t\t\troomCoordinator\n\t\t\t\t.getRoomDirectives(rc_room_type)\n\t\t\t\t.canAccessUploadedFile({ rc_uid: rc_uid || '', rc_rid: rc_rid || '', rc_token: rc_token || '' });\n\n\t\tconst isAuthorizedByJWT = () =>\n\t\t\tsettings.get('FileUpload_Enable_json_web_token_for_files') &&\n\t\t\ttoken &&\n\t\t\tisValidJWT(token as string, settings.get('FileUpload_json_web_token_secret_for_files'));\n\n\t\tif ((await isAuthorizedByRoom()) || isAuthorizedByJWT()) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst uid = rc_uid || (headers['x-user-id'] as string);\n\t\tconst authToken = rc_token || (headers['x-auth-token'] as string);\n\n\t\tconst user = uid && authToken && (await Users.findOneByIdAndLoginToken(uid, hashLoginToken(authToken), { projection: { _id: 1 } }));\n\n\t\tif (!user) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!file?.rid) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst fileUploadRestrictedToMembers = settings.get<boolean>('FileUpload_Restrict_to_room_members');\n\t\tconst fileUploadRestrictToUsersWhoCanAccessRoom = settings.get<boolean>('FileUpload_Restrict_to_users_who_can_access_room');\n\n\t\tif (!fileUploadRestrictToUsersWhoCanAccessRoom && !fileUploadRestrictedToMembers) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (fileUploadRestrictedToMembers && !fileUploadRestrictToUsersWhoCanAccessRoom) {\n\t\t\tconst sub = await Subscriptions.findOneByRoomIdAndUserId(file.rid, user._id, { projection: { _id: 1 } });\n\t\t\treturn !!sub;\n\t\t}\n\n\t\tif (fileUploadRestrictToUsersWhoCanAccessRoom && !fileUploadRestrictedToMembers) {\n\t\t\treturn canAccessRoomIdAsync(file.rid, user._id);\n\t\t}\n\n\t\treturn false;\n\t},\n\n\taddExtensionTo(file: IUpload) {\n\t\tif (mime.lookup(file.name || '') === file.type) {\n\t\t\treturn file;\n\t\t}\n\n\t\t// This file type can be pretty much anything, so it's better if we don't mess with the file extension\n\t\tif (file.type !== 'application/octet-stream') {\n\t\t\tconst ext = mime.extension(file.type || '');\n\t\t\tif (ext && new RegExp(`\\\\.${ext}$`, 'i').test(file.name || '') === false) {\n\t\t\t\tfile.name = `${file.name}.${ext}`;\n\t\t\t}\n\t\t}\n\n\t\treturn file;\n\t},\n\n\tgetStore(modelName: string) {\n\t\tconst storageType = settings.get('FileUpload_Storage_Type');\n\t\tconst handlerName = `${storageType}:${modelName}`;\n\n\t\treturn this.getStoreByName(handlerName);\n\t},\n\n\tgetStoreByName(handlerName?: string) {\n\t\tif (!handlerName) {\n\t\t\tSystemLogger.error(`Empty Upload handler does not exists`);\n\t\t\tthrow new Error(`Empty Upload handler does not exists`);\n\t\t}\n\n\t\tif (this.handlers[handlerName] == null) {\n\t\t\tSystemLogger.error(`Upload handler \"${handlerName}\" does not exists`);\n\t\t}\n\t\treturn this.handlers[handlerName];\n\t},\n\n\tget(file: IUpload, req: http.IncomingMessage, res: http.ServerResponse, next: NextFunction) {\n\t\tconst store = this.getStoreByName(file.store);\n\t\tif (store?.get) {\n\t\t\treturn store.get(file, req, res, next);\n\t\t}\n\t\tres.writeHead(404);\n\t\tres.end();\n\t},\n\n\tasync getBuffer(file: IUpload): Promise<Buffer> {\n\t\tconst store = this.getStoreByName(file.store);\n\n\t\tif (!store?.get) {\n\t\t\tthrow new Error('Store is invalid');\n\t\t}\n\n\t\tconst buffer = new streamBuffers.WritableStreamBuffer({\n\t\t\tinitialSize: file.size,\n\t\t});\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tbuffer.on('finish', () => {\n\t\t\t\tconst contents = buffer.getContents();\n\t\t\t\tif (contents === false) {\n\t\t\t\t\treturn reject();\n\t\t\t\t}\n\t\t\t\tresolve(contents);\n\t\t\t});\n\n\t\t\tvoid store.copy?.(file, buffer);\n\t\t});\n\t},\n\n\tasync copy(file: IUpload, targetFile: string) {\n\t\tconst store = this.getStoreByName(file.store);\n\t\tconst out = fs.createWriteStream(targetFile);\n\n\t\tfile = FileUpload.addExtensionTo(file);\n\n\t\tif (store.copy) {\n\t\t\tawait store.copy(file, out);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\tredirectToFile(fileUrl: string, _req: http.IncomingMessage, res: http.ServerResponse) {\n\t\tres.removeHeader('Content-Length');\n\t\tres.removeHeader('Cache-Control');\n\t\tres.setHeader('Location', fileUrl);\n\t\tres.writeHead(302);\n\t\tres.end();\n\t},\n\n\tproxyFile(\n\t\tfileName: string,\n\t\tfileUrl: string,\n\t\tforceDownload: boolean,\n\t\trequest: typeof http | typeof https,\n\t\t_req: http.IncomingMessage,\n\t\tres: http.ServerResponse,\n\t) {\n\t\tres.setHeader('Content-Disposition', `${forceDownload ? 'attachment' : 'inline'}; filename=\"${encodeURI(fileName)}\"`);\n\n\t\trequest.get(fileUrl, (fileRes) => {\n\t\t\tif (fileRes.statusCode !== 200) {\n\t\t\t\tres.setHeader('x-rc-proxyfile-status', String(fileRes.statusCode));\n\t\t\t\tres.setHeader('content-length', 0);\n\t\t\t\tres.writeHead(500);\n\t\t\t\tres.end();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line prettier/prettier\n\t\t\tconst headersToProxy = ['age', 'cache-control', 'content-length', 'content-type', 'date', 'expired', 'last-modified'];\n\n\t\t\theadersToProxy.forEach((header) => {\n\t\t\t\tfileRes.headers[header] && res.setHeader(header, String(fileRes.headers[header]));\n\t\t\t});\n\n\t\t\tfileRes.pipe(res);\n\t\t});\n\t},\n\n\tgenerateJWTToFileUrls({ rid, userId, fileId }: { rid: string; userId: string; fileId: string }) {\n\t\tif (!settings.get('FileUpload_ProtectFiles') || !settings.get('FileUpload_Enable_json_web_token_for_files')) {\n\t\t\treturn;\n\t\t}\n\t\treturn generateJWT(\n\t\t\t{\n\t\t\t\trid,\n\t\t\t\tuserId,\n\t\t\t\tfileId,\n\t\t\t},\n\t\t\tsettings.get('FileUpload_json_web_token_secret_for_files'),\n\t\t);\n\t},\n\n\tasync removeFilesByRoomId(rid: string) {\n\t\tif (typeof rid !== 'string' || rid.trim().length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst cursor = Messages.find(\n\t\t\t{\n\t\t\t\trid,\n\t\t\t\t'file._id': {\n\t\t\t\t\t$exists: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tprojection: {\n\t\t\t\t\t'file._id': 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tfor await (const document of cursor) {\n\t\t\tif (document.file) {\n\t\t\t\tawait FileUpload.getStore('Uploads').deleteById(document.file._id);\n\t\t\t}\n\t\t}\n\t},\n};\n\ntype FileUploadClassOptions = {\n\tname: string;\n\tmodel?: typeof Avatars | typeof Uploads | typeof UserDataFiles;\n\tstore?: Store;\n\tget: (file: IUpload, req: http.IncomingMessage, res: http.ServerResponse, next: NextFunction) => Promise<void>;\n\tinsert?: () => Promise<IUpload>;\n\tgetStore?: () => Store;\n\tcopy?: (file: IUpload, out: WriteStream | WritableStreamBuffer) => Promise<void>;\n};\n\nexport class FileUploadClass {\n\tpublic name: FileUploadClassOptions['name'];\n\n\tpublic model: typeof Avatars | typeof Uploads | typeof UserDataFiles;\n\n\tpublic _store: Store;\n\n\tpublic get: FileUploadClassOptions['get'];\n\n\tpublic copy: FileUploadClassOptions['copy'];\n\n\tconstructor({ name, model, store, get, insert, getStore, copy }: FileUploadClassOptions) {\n\t\tthis.name = name;\n\t\tthis.model = model || this.getModelFromName();\n\t\tthis._store = store || UploadFS.getStore(name);\n\t\tthis.get = get;\n\t\tthis.copy = copy;\n\n\t\tif (insert) {\n\t\t\tthis.insert = insert;\n\t\t}\n\n\t\tif (getStore) {\n\t\t\tthis.getStore = getStore;\n\t\t}\n\n\t\tFileUpload.handlers[name] = this;\n\t}\n\n\tgetStore() {\n\t\treturn this._store;\n\t}\n\n\tget store() {\n\t\treturn this.getStore();\n\t}\n\n\tset store(store) {\n\t\tthis._store = store;\n\t}\n\n\tgetModelFromName(): typeof this.model {\n\t\tconst modelsAvailable: Record<string, typeof this.model> = {\n\t\t\tAvatars,\n\t\t\tUploads,\n\t\t\tUserDataFiles,\n\t\t};\n\t\tconst modelName = this.name.split(':')[1];\n\t\tif (!modelsAvailable[modelName]) {\n\t\t\tthrow new Error('Invalid Model for FileUpload');\n\t\t}\n\t\treturn modelsAvailable[modelName];\n\t}\n\n\tasync delete(fileId: string) {\n\t\t// TODO: Remove this method\n\t\tif (this.store?.delete) {\n\t\t\tawait this.store.delete(fileId);\n\t\t}\n\n\t\treturn this.model.deleteFile(fileId);\n\t}\n\n\tasync deleteById(fileId: string) {\n\t\tconst file = await this.model.findOneById(fileId);\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = FileUpload.getStoreByName(file.store);\n\n\t\treturn store.delete(file._id);\n\t}\n\n\tasync deleteByName(fileName: string) {\n\t\tconst file = await this.model.findOneByName(fileName);\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = FileUpload.getStoreByName(file.store);\n\n\t\treturn store.delete(file._id);\n\t}\n\n\tasync deleteByRoomId(rid: string) {\n\t\tconst file = await this.model.findOneByRoomId(rid);\n\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = FileUpload.getStoreByName(file.store);\n\n\t\treturn store.delete(file._id);\n\t}\n\n\tasync _doInsert(fileData: OptionalId<IUpload>, streamOrBuffer: ReadableStream | stream | Buffer): Promise<IUpload> {\n\t\tconst fileId = await this.store.create(fileData);\n\t\tconst tmpFile = UploadFS.getTempFilePath(fileId);\n\n\t\ttry {\n\t\t\tif (streamOrBuffer instanceof stream) {\n\t\t\t\tstreamOrBuffer.pipe(fs.createWriteStream(tmpFile));\n\t\t\t} else if (streamOrBuffer instanceof Buffer) {\n\t\t\t\tfs.writeFileSync(tmpFile, streamOrBuffer);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Invalid file type');\n\t\t\t}\n\n\t\t\tconst file = await ufsComplete(fileId, this.name);\n\n\t\t\treturn file;\n\t\t} catch (e: any) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tasync insert(fileData: OptionalId<IUpload>, streamOrBuffer: ReadableStream | stream.Readable | Buffer) {\n\t\tif (streamOrBuffer instanceof stream) {\n\t\t\tstreamOrBuffer = await streamToBuffer(streamOrBuffer);\n\t\t}\n\n\t\tif (streamOrBuffer instanceof Uint8Array) {\n\t\t\t// Services compat :)\n\t\t\tstreamOrBuffer = Buffer.from(streamOrBuffer);\n\t\t}\n\n\t\t// Check if the fileData matches store filter\n\t\tconst filter = this.store.getFilter();\n\t\tif (filter?.check) {\n\t\t\tawait filter.check(fileData, streamOrBuffer);\n\t\t}\n\n\t\treturn this._doInsert(fileData, streamOrBuffer);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f903ac76364b165194fe47398551728786739d8c"}
