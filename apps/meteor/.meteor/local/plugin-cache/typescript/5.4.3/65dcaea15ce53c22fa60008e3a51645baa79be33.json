{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/useWorkspaceInfo.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/hooks/useWorkspaceInfo.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/useWorkspaceInfo.ts","inputSourceMap":{"version":3,"file":"client/hooks/useWorkspaceInfo.ts","sourceRoot":"","sources":["client/hooks/useWorkspaceInfo.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IStats, IWorkspaceInfo, Serialized } from '@rocket.chat/core-typings';\nimport type { IInstance } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useMutation, useQueries, useQueryClient } from '@tanstack/react-query';\n\nexport const useWorkspaceInfo = ({ refreshStatistics }: { refreshStatistics?: boolean } = {}) => {\n\tconst getStatistics = useEndpoint('GET', '/v1/statistics');\n\tconst getInstances = useEndpoint('GET', '/v1/instances.get');\n\tconst getServerInfo = useEndpoint('GET', '/info');\n\n\treturn useQueries({\n\t\tqueries: [\n\t\t\t{\n\t\t\t\tqueryKey: ['info', 'serverInfo'],\n\t\t\t\tqueryFn: async () => {\n\t\t\t\t\tconst data = await getServerInfo();\n\n\t\t\t\t\tif (!('minimumClientVersions' in data)) {\n\t\t\t\t\t\tthrow new Error('Invalid server info');\n\t\t\t\t\t}\n\t\t\t\t\tif (!('info' in data)) {\n\t\t\t\t\t\tthrow new Error('Invalid server info');\n\t\t\t\t\t}\n\t\t\t\t\tif (!('version' in data)) {\n\t\t\t\t\t\tthrow new Error('Invalid server info');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn data as IWorkspaceInfo;\n\t\t\t\t},\n\t\t\t\tstaleTime: Infinity,\n\t\t\t\tkeepPreviousData: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tqueryKey: ['info', 'instances'],\n\t\t\t\tqueryFn: () => getInstances(),\n\t\t\t\tstaleTime: Infinity,\n\t\t\t\tkeepPreviousData: true,\n\t\t\t\tselect({ instances }: Serialized<{ instances: IInstance[] }>) {\n\t\t\t\t\treturn instances.map((instance) => ({\n\t\t\t\t\t\t...instance,\n\t\t\t\t\t\t...(instance.instanceRecord && {\n\t\t\t\t\t\t\tinstanceRecord: {\n\t\t\t\t\t\t\t\t...instance.instanceRecord,\n\t\t\t\t\t\t\t\t_createdAt: new Date(instance.instanceRecord._createdAt),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t})) as IInstance[];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tqueryKey: ['info', 'statistics'],\n\t\t\t\tqueryFn: () => getStatistics({ refresh: refreshStatistics ? 'true' : 'false' }),\n\t\t\t\tstaleTime: Infinity,\n\t\t\t\tkeepPreviousData: true,\n\t\t\t\tselect: (data: Serialized<IStats>) => ({\n\t\t\t\t\t...data,\n\t\t\t\t\tlastMessageSentAt: data.lastMessageSentAt ? new Date(data.lastMessageSentAt) : undefined,\n\t\t\t\t}),\n\t\t\t},\n\t\t],\n\t});\n};\n\nexport const useRefreshStatistics = () => {\n\tconst queryClient = useQueryClient();\n\treturn useMutation({\n\t\tmutationFn: () => queryClient.invalidateQueries(['info', 'statistics']),\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/hooks/useWorkspaceInfo.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/hooks/useWorkspaceInfo.ts","inputSourceMap":{"version":3,"file":"client/hooks/useWorkspaceInfo.ts","sourceRoot":"","sources":["client/hooks/useWorkspaceInfo.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IStats, IWorkspaceInfo, Serialized } from '@rocket.chat/core-typings';\nimport type { IInstance } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useMutation, useQueries, useQueryClient } from '@tanstack/react-query';\n\nexport const useWorkspaceInfo = ({ refreshStatistics }: { refreshStatistics?: boolean } = {}) => {\n\tconst getStatistics = useEndpoint('GET', '/v1/statistics');\n\tconst getInstances = useEndpoint('GET', '/v1/instances.get');\n\tconst getServerInfo = useEndpoint('GET', '/info');\n\n\treturn useQueries({\n\t\tqueries: [\n\t\t\t{\n\t\t\t\tqueryKey: ['info', 'serverInfo'],\n\t\t\t\tqueryFn: async () => {\n\t\t\t\t\tconst data = await getServerInfo();\n\n\t\t\t\t\tif (!('minimumClientVersions' in data)) {\n\t\t\t\t\t\tthrow new Error('Invalid server info');\n\t\t\t\t\t}\n\t\t\t\t\tif (!('info' in data)) {\n\t\t\t\t\t\tthrow new Error('Invalid server info');\n\t\t\t\t\t}\n\t\t\t\t\tif (!('version' in data)) {\n\t\t\t\t\t\tthrow new Error('Invalid server info');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn data as IWorkspaceInfo;\n\t\t\t\t},\n\t\t\t\tstaleTime: Infinity,\n\t\t\t\tkeepPreviousData: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tqueryKey: ['info', 'instances'],\n\t\t\t\tqueryFn: () => getInstances(),\n\t\t\t\tstaleTime: Infinity,\n\t\t\t\tkeepPreviousData: true,\n\t\t\t\tselect({ instances }: Serialized<{ instances: IInstance[] }>) {\n\t\t\t\t\treturn instances.map((instance) => ({\n\t\t\t\t\t\t...instance,\n\t\t\t\t\t\t...(instance.instanceRecord && {\n\t\t\t\t\t\t\tinstanceRecord: {\n\t\t\t\t\t\t\t\t...instance.instanceRecord,\n\t\t\t\t\t\t\t\t_createdAt: new Date(instance.instanceRecord._createdAt),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t})) as IInstance[];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tqueryKey: ['info', 'statistics'],\n\t\t\t\tqueryFn: () => getStatistics({ refresh: refreshStatistics ? 'true' : 'false' }),\n\t\t\t\tstaleTime: Infinity,\n\t\t\t\tkeepPreviousData: true,\n\t\t\t\tselect: (data: Serialized<IStats>) => ({\n\t\t\t\t\t...data,\n\t\t\t\t\tlastMessageSentAt: data.lastMessageSentAt ? new Date(data.lastMessageSentAt) : undefined,\n\t\t\t\t}),\n\t\t\t},\n\t\t],\n\t});\n};\n\nexport const useRefreshStatistics = () => {\n\tconst queryClient = useQueryClient();\n\treturn useMutation({\n\t\tmutationFn: () => queryClient.invalidateQueries(['info', 'statistics']),\n\t});\n};\n"]}}},"code":"var _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nvar _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 1);\nmodule.export({\n  useWorkspaceInfo: function () {\n    return useWorkspaceInfo;\n  },\n  useRefreshStatistics: function () {\n    return useRefreshStatistics;\n  }\n});\nvar useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useEndpoint: function (v) {\n    useEndpoint = v;\n  }\n}, 0);\nvar useMutation, useQueries, useQueryClient;\nmodule.link(\"@tanstack/react-query\", {\n  useMutation: function (v) {\n    useMutation = v;\n  },\n  useQueries: function (v) {\n    useQueries = v;\n  },\n  useQueryClient: function (v) {\n    useQueryClient = v;\n  }\n}, 1);\nvar useWorkspaceInfo = function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    refreshStatistics = _ref.refreshStatistics;\n  var getStatistics = useEndpoint('GET', '/v1/statistics');\n  var getInstances = useEndpoint('GET', '/v1/instances.get');\n  var getServerInfo = useEndpoint('GET', '/info');\n  return useQueries({\n    queries: [{\n      queryKey: ['info', 'serverInfo'],\n      queryFn: function () {\n        function _callee() {\n          var data;\n          return _regeneratorRuntime.async(function () {\n            function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _regeneratorRuntime.awrap(getServerInfo());\n                case 2:\n                  data = _context.sent;\n                  if ('minimumClientVersions' in data) {\n                    _context.next = 5;\n                    break;\n                  }\n                  throw new Error('Invalid server info');\n                case 5:\n                  if ('info' in data) {\n                    _context.next = 7;\n                    break;\n                  }\n                  throw new Error('Invalid server info');\n                case 7:\n                  if ('version' in data) {\n                    _context.next = 9;\n                    break;\n                  }\n                  throw new Error('Invalid server info');\n                case 9:\n                  return _context.abrupt(\"return\", data);\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n            return _callee$;\n          }(), null, null, null, Promise);\n        }\n        return _callee;\n      }(),\n      staleTime: Infinity,\n      keepPreviousData: true\n    }, {\n      queryKey: ['info', 'instances'],\n      queryFn: function () {\n        return getInstances();\n      },\n      staleTime: Infinity,\n      keepPreviousData: true,\n      select: function (_ref2) {\n        var instances = _ref2.instances;\n        return instances.map(function (instance) {\n          return _objectSpread(_objectSpread({}, instance), instance.instanceRecord && {\n            instanceRecord: _objectSpread(_objectSpread({}, instance.instanceRecord), {}, {\n              _createdAt: new Date(instance.instanceRecord._createdAt)\n            })\n          });\n        });\n      }\n    }, {\n      queryKey: ['info', 'statistics'],\n      queryFn: function () {\n        return getStatistics({\n          refresh: refreshStatistics ? 'true' : 'false'\n        });\n      },\n      staleTime: Infinity,\n      keepPreviousData: true,\n      select: function (data) {\n        return _objectSpread(_objectSpread({}, data), {}, {\n          lastMessageSentAt: data.lastMessageSentAt ? new Date(data.lastMessageSentAt) : undefined\n        });\n      }\n    }]\n  });\n};\nvar useRefreshStatistics = function () {\n  var queryClient = useQueryClient();\n  return useMutation({\n    mutationFn: function () {\n      return queryClient.invalidateQueries(['info', 'statistics']);\n    }\n  });\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","_regeneratorRuntime","export","useWorkspaceInfo","useRefreshStatistics","useEndpoint","useMutation","useQueries","useQueryClient","_ref","arguments","length","undefined","refreshStatistics","getStatistics","getInstances","getServerInfo","queries","queryKey","queryFn","_callee","data","async","_callee$","_context","prev","next","awrap","sent","Error","abrupt","stop","Promise","staleTime","Infinity","keepPreviousData","select","_ref2","instances","map","instance","instanceRecord","_createdAt","Date","refresh","lastMessageSentAt","queryClient","mutationFn","invalidateQueries"],"sources":["client/hooks/useWorkspaceInfo.ts"],"sourcesContent":["import type { IStats, IWorkspaceInfo, Serialized } from '@rocket.chat/core-typings';\nimport type { IInstance } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useMutation, useQueries, useQueryClient } from '@tanstack/react-query';\n\nexport const useWorkspaceInfo = ({ refreshStatistics }: { refreshStatistics?: boolean } = {}) => {\n\tconst getStatistics = useEndpoint('GET', '/v1/statistics');\n\tconst getInstances = useEndpoint('GET', '/v1/instances.get');\n\tconst getServerInfo = useEndpoint('GET', '/info');\n\n\treturn useQueries({\n\t\tqueries: [\n\t\t\t{\n\t\t\t\tqueryKey: ['info', 'serverInfo'],\n\t\t\t\tqueryFn: async () => {\n\t\t\t\t\tconst data = await getServerInfo();\n\n\t\t\t\t\tif (!('minimumClientVersions' in data)) {\n\t\t\t\t\t\tthrow new Error('Invalid server info');\n\t\t\t\t\t}\n\t\t\t\t\tif (!('info' in data)) {\n\t\t\t\t\t\tthrow new Error('Invalid server info');\n\t\t\t\t\t}\n\t\t\t\t\tif (!('version' in data)) {\n\t\t\t\t\t\tthrow new Error('Invalid server info');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn data as IWorkspaceInfo;\n\t\t\t\t},\n\t\t\t\tstaleTime: Infinity,\n\t\t\t\tkeepPreviousData: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tqueryKey: ['info', 'instances'],\n\t\t\t\tqueryFn: () => getInstances(),\n\t\t\t\tstaleTime: Infinity,\n\t\t\t\tkeepPreviousData: true,\n\t\t\t\tselect({ instances }: Serialized<{ instances: IInstance[] }>) {\n\t\t\t\t\treturn instances.map((instance) => ({\n\t\t\t\t\t\t...instance,\n\t\t\t\t\t\t...(instance.instanceRecord && {\n\t\t\t\t\t\t\tinstanceRecord: {\n\t\t\t\t\t\t\t\t...instance.instanceRecord,\n\t\t\t\t\t\t\t\t_createdAt: new Date(instance.instanceRecord._createdAt),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t})) as IInstance[];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tqueryKey: ['info', 'statistics'],\n\t\t\t\tqueryFn: () => getStatistics({ refresh: refreshStatistics ? 'true' : 'false' }),\n\t\t\t\tstaleTime: Infinity,\n\t\t\t\tkeepPreviousData: true,\n\t\t\t\tselect: (data: Serialized<IStats>) => ({\n\t\t\t\t\t...data,\n\t\t\t\t\tlastMessageSentAt: data.lastMessageSentAt ? new Date(data.lastMessageSentAt) : undefined,\n\t\t\t\t}),\n\t\t\t},\n\t\t],\n\t});\n};\n\nexport const useRefreshStatistics = () => {\n\tconst queryClient = useQueryClient();\n\treturn useMutation({\n\t\tmutationFn: () => queryClient.invalidateQueries(['info', 'statistics']),\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"65dcaea15ce53c22fa60008e3a51645baa79be33"}
