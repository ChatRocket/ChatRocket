{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/messageBox.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-utils/client/lib/messageBox.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/messageBox.ts","inputSourceMap":{"version":3,"file":"app/ui-utils/client/lib/messageBox.ts","sourceRoot":"","sources":["app/ui-utils/client/lib/messageBox.ts"],"names":[],"mappings":"AAcA,MAAM,iBAAiB;IACtB,OAAO,GAA4C,IAAI,GAAG,EAAE,CAAC;IAE7D,GAAG,CAAC,KAAqB,EAAE,KAAqB,EAAE,MAAuC;QACxF,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;YACjC,OAAO;QACR,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC7B,CAAC;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;QAEvF,IAAI,YAAY,EAAE,CAAC;YAClB,OAAO;QACR,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,MAAM,CAAC,KAAqB,EAAE,UAAkB;QAC/C,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YACxC,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QACxG,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAMD,GAAG,CAAC,KAAsB;QACzB,IAAI,CAAC,KAAK,EAAE,CAAC;YACZ,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CACxC,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE;gBACzB,MAAM,eAAe,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;gBAC5F,IAAI,eAAe,CAAC,MAAM,EAAE,CAAC;oBAC5B,GAAG,CAAC,KAAK,CAAC,GAAG,eAAe,CAAC;gBAC9B,CAAC;gBACD,OAAO,GAAG,CAAC;YACZ,CAAC,EACD,EAAgD,CAChD,CAAC;QACH,CAAC;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,OAAO,CAAC,EAA0B;QACjC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aAChC,IAAI,EAAE;aACN,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACxC,CAAC;CACD;AAED,MAAM,CAAC,MAAM,UAAU,GAAG;IACzB,OAAO,EAAE,IAAI,iBAAiB,EAAE;CACvB,CAAC","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\n\nimport type { ChatAPI } from '../../../../client/lib/chats/ChatAPI';\n\nexport type MessageBoxAction = {\n\tlabel: TranslationKey;\n\tid: string;\n\ticon: IconName;\n\taction: (params: { rid: IRoom['_id']; tmid?: IMessage['_id']; event: Event; chat: ChatAPI }) => void;\n\tcondition?: () => boolean;\n};\n\nclass MessageBoxActions {\n\tactions: Map<TranslationKey, MessageBoxAction[]> = new Map();\n\n\tadd(group: TranslationKey, label: TranslationKey, config: Omit<MessageBoxAction, 'label'>) {\n\t\tif (!group && !label && !config) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.actions.has(group)) {\n\t\t\tthis.actions.set(group, []);\n\t\t}\n\n\t\tconst actionExists = this.actions.get(group)?.find((action) => action.label === label);\n\n\t\tif (actionExists) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.actions.get(group)?.push({ ...config, label });\n\t}\n\n\tremove(group: TranslationKey, expression: RegExp) {\n\t\tif (!group || !this.actions.get(group)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.actions.set(group, this.actions.get(group)?.filter((action) => !expression.test(action.id)) || []);\n\t\treturn this.actions.get(group);\n\t}\n\n\tget(): Record<TranslationKey, MessageBoxAction[]>;\n\n\tget(group: TranslationKey): MessageBoxAction[];\n\n\tget(group?: TranslationKey) {\n\t\tif (!group) {\n\t\t\treturn [...this.actions.entries()].reduce<Record<TranslationKey, MessageBoxAction[]>>(\n\t\t\t\t(ret, [group, actions]) => {\n\t\t\t\t\tconst filteredActions = actions.filter((action) => !action.condition || action.condition());\n\t\t\t\t\tif (filteredActions.length) {\n\t\t\t\t\t\tret[group] = filteredActions;\n\t\t\t\t\t}\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\t{} as Record<TranslationKey, MessageBoxAction[]>,\n\t\t\t);\n\t\t}\n\n\t\treturn this.actions.get(group)?.filter((action) => !action.condition || action.condition());\n\t}\n\n\tgetById(id: MessageBoxAction['id']) {\n\t\treturn Object.values(this.actions)\n\t\t\t.flat()\n\t\t\t.filter((action) => action.id === id);\n\t}\n}\n\nexport const messageBox = {\n\tactions: new MessageBoxActions(),\n} as const;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/messageBox.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/messageBox.ts","inputSourceMap":{"version":3,"file":"app/ui-utils/client/lib/messageBox.ts","sourceRoot":"","sources":["app/ui-utils/client/lib/messageBox.ts"],"names":[],"mappings":"AAcA,MAAM,iBAAiB;IACtB,OAAO,GAA4C,IAAI,GAAG,EAAE,CAAC;IAE7D,GAAG,CAAC,KAAqB,EAAE,KAAqB,EAAE,MAAuC;QACxF,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;YACjC,OAAO;QACR,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAC7B,CAAC;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;QAEvF,IAAI,YAAY,EAAE,CAAC;YAClB,OAAO;QACR,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,MAAM,CAAC,KAAqB,EAAE,UAAkB;QAC/C,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;YACxC,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QACxG,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAMD,GAAG,CAAC,KAAsB;QACzB,IAAI,CAAC,KAAK,EAAE,CAAC;YACZ,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CACxC,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE;gBACzB,MAAM,eAAe,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;gBAC5F,IAAI,eAAe,CAAC,MAAM,EAAE,CAAC;oBAC5B,GAAG,CAAC,KAAK,CAAC,GAAG,eAAe,CAAC;gBAC9B,CAAC;gBACD,OAAO,GAAG,CAAC;YACZ,CAAC,EACD,EAAgD,CAChD,CAAC;QACH,CAAC;QAED,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;IAC7F,CAAC;IAED,OAAO,CAAC,EAA0B;QACjC,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aAChC,IAAI,EAAE;aACN,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACxC,CAAC;CACD;AAED,MAAM,CAAC,MAAM,UAAU,GAAG;IACzB,OAAO,EAAE,IAAI,iBAAiB,EAAE;CACvB,CAAC","sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\n\nimport type { ChatAPI } from '../../../../client/lib/chats/ChatAPI';\n\nexport type MessageBoxAction = {\n\tlabel: TranslationKey;\n\tid: string;\n\ticon: IconName;\n\taction: (params: { rid: IRoom['_id']; tmid?: IMessage['_id']; event: Event; chat: ChatAPI }) => void;\n\tcondition?: () => boolean;\n};\n\nclass MessageBoxActions {\n\tactions: Map<TranslationKey, MessageBoxAction[]> = new Map();\n\n\tadd(group: TranslationKey, label: TranslationKey, config: Omit<MessageBoxAction, 'label'>) {\n\t\tif (!group && !label && !config) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.actions.has(group)) {\n\t\t\tthis.actions.set(group, []);\n\t\t}\n\n\t\tconst actionExists = this.actions.get(group)?.find((action) => action.label === label);\n\n\t\tif (actionExists) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.actions.get(group)?.push({ ...config, label });\n\t}\n\n\tremove(group: TranslationKey, expression: RegExp) {\n\t\tif (!group || !this.actions.get(group)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.actions.set(group, this.actions.get(group)?.filter((action) => !expression.test(action.id)) || []);\n\t\treturn this.actions.get(group);\n\t}\n\n\tget(): Record<TranslationKey, MessageBoxAction[]>;\n\n\tget(group: TranslationKey): MessageBoxAction[];\n\n\tget(group?: TranslationKey) {\n\t\tif (!group) {\n\t\t\treturn [...this.actions.entries()].reduce<Record<TranslationKey, MessageBoxAction[]>>(\n\t\t\t\t(ret, [group, actions]) => {\n\t\t\t\t\tconst filteredActions = actions.filter((action) => !action.condition || action.condition());\n\t\t\t\t\tif (filteredActions.length) {\n\t\t\t\t\t\tret[group] = filteredActions;\n\t\t\t\t\t}\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\t{} as Record<TranslationKey, MessageBoxAction[]>,\n\t\t\t);\n\t\t}\n\n\t\treturn this.actions.get(group)?.filter((action) => !action.condition || action.condition());\n\t}\n\n\tgetById(id: MessageBoxAction['id']) {\n\t\treturn Object.values(this.actions)\n\t\t\t.flat()\n\t\t\t.filter((action) => action.id === id);\n\t}\n}\n\nexport const messageBox = {\n\tactions: new MessageBoxActions(),\n} as const;\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  messageBox: () => messageBox\n});\nclass MessageBoxActions {\n  constructor() {\n    this.actions = new Map();\n  }\n  add(group, label, config) {\n    var _this$actions$get, _this$actions$get2;\n    if (!group && !label && !config) {\n      return;\n    }\n    if (!this.actions.has(group)) {\n      this.actions.set(group, []);\n    }\n    const actionExists = (_this$actions$get = this.actions.get(group)) === null || _this$actions$get === void 0 ? void 0 : _this$actions$get.find(action => action.label === label);\n    if (actionExists) {\n      return;\n    }\n    (_this$actions$get2 = this.actions.get(group)) === null || _this$actions$get2 === void 0 ? void 0 : _this$actions$get2.push(_objectSpread(_objectSpread({}, config), {}, {\n      label\n    }));\n  }\n  remove(group, expression) {\n    var _this$actions$get3;\n    if (!group || !this.actions.get(group)) {\n      return false;\n    }\n    this.actions.set(group, ((_this$actions$get3 = this.actions.get(group)) === null || _this$actions$get3 === void 0 ? void 0 : _this$actions$get3.filter(action => !expression.test(action.id))) || []);\n    return this.actions.get(group);\n  }\n  get(group) {\n    var _this$actions$get4;\n    if (!group) {\n      return [...this.actions.entries()].reduce((ret, _ref) => {\n        let [group, actions] = _ref;\n        const filteredActions = actions.filter(action => !action.condition || action.condition());\n        if (filteredActions.length) {\n          ret[group] = filteredActions;\n        }\n        return ret;\n      }, {});\n    }\n    return (_this$actions$get4 = this.actions.get(group)) === null || _this$actions$get4 === void 0 ? void 0 : _this$actions$get4.filter(action => !action.condition || action.condition());\n  }\n  getById(id) {\n    return Object.values(this.actions).flat().filter(action => action.id === id);\n  }\n}\nconst messageBox = {\n  actions: new MessageBoxActions()\n};","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","messageBox","MessageBoxActions","constructor","actions","Map","add","group","label","config","_this$actions$get","_this$actions$get2","has","set","actionExists","get","find","action","push","remove","expression","_this$actions$get3","filter","test","id","_this$actions$get4","entries","reduce","ret","_ref","filteredActions","condition","length","getById","Object","values","flat"],"sources":["app/ui-utils/client/lib/messageBox.ts"],"sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\n\nimport type { ChatAPI } from '../../../../client/lib/chats/ChatAPI';\n\nexport type MessageBoxAction = {\n\tlabel: TranslationKey;\n\tid: string;\n\ticon: IconName;\n\taction: (params: { rid: IRoom['_id']; tmid?: IMessage['_id']; event: Event; chat: ChatAPI }) => void;\n\tcondition?: () => boolean;\n};\n\nclass MessageBoxActions {\n\tactions: Map<TranslationKey, MessageBoxAction[]> = new Map();\n\n\tadd(group: TranslationKey, label: TranslationKey, config: Omit<MessageBoxAction, 'label'>) {\n\t\tif (!group && !label && !config) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.actions.has(group)) {\n\t\t\tthis.actions.set(group, []);\n\t\t}\n\n\t\tconst actionExists = this.actions.get(group)?.find((action) => action.label === label);\n\n\t\tif (actionExists) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.actions.get(group)?.push({ ...config, label });\n\t}\n\n\tremove(group: TranslationKey, expression: RegExp) {\n\t\tif (!group || !this.actions.get(group)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.actions.set(group, this.actions.get(group)?.filter((action) => !expression.test(action.id)) || []);\n\t\treturn this.actions.get(group);\n\t}\n\n\tget(): Record<TranslationKey, MessageBoxAction[]>;\n\n\tget(group: TranslationKey): MessageBoxAction[];\n\n\tget(group?: TranslationKey) {\n\t\tif (!group) {\n\t\t\treturn [...this.actions.entries()].reduce<Record<TranslationKey, MessageBoxAction[]>>(\n\t\t\t\t(ret, [group, actions]) => {\n\t\t\t\t\tconst filteredActions = actions.filter((action) => !action.condition || action.condition());\n\t\t\t\t\tif (filteredActions.length) {\n\t\t\t\t\t\tret[group] = filteredActions;\n\t\t\t\t\t}\n\t\t\t\t\treturn ret;\n\t\t\t\t},\n\t\t\t\t{} as Record<TranslationKey, MessageBoxAction[]>,\n\t\t\t);\n\t\t}\n\n\t\treturn this.actions.get(group)?.filter((action) => !action.condition || action.condition());\n\t}\n\n\tgetById(id: MessageBoxAction['id']) {\n\t\treturn Object.values(this.actions)\n\t\t\t.flat()\n\t\t\t.filter((action) => action.id === id);\n\t}\n}\n\nexport const messageBox = {\n\tactions: new MessageBoxActions(),\n} as const;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0033470cc3254ce2b62a1f16525576c302f2243a"}
