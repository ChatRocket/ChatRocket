{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/MessageAction.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"app/ui-utils/client/lib/MessageAction.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/MessageAction.ts","inputSourceMap":{"version":3,"file":"app/ui-utils/client/lib/MessageAction.ts","sourceRoot":"","sources":["app/ui-utils/client/lib/MessageAction.ts"],"names":[],"mappings":"AAGA,OAAO,GAAG,MAAM,KAAK,CAAC;AAmEtB,MAAM,aAAa;IACX,OAAO,GAA2D,EAAE,CAAC;IAErE,SAAS,CAAC,MAA2B;QAC3C,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC;YACjB,OAAO;QACR,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACnB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;QACvB,CAAC;QAED,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC;YACtB,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QACtF,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;IAClC,CAAC;IAEM,YAAY,CAAC,EAA6B;QAChD,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACzB,CAAC;IAEM,KAAK,CAAC,MAAM,CAClB,KAAkC,EAClC,OAA6B,EAC7B,KAAyB;QAEzB,OAAO,CACN,MAAM,OAAO,CAAC,GAAG,CAChB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aACzB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;aAC/C,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;aAC1H,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aACvE,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YACrB,OAAO,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,MAAM,CAAC,SAAS,CAAC,EAAE,GAAG,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAU,CAAC;QAChG,CAAC,CAAC,CACH,CACD;aACC,MAAM,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC;aACpC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;CACD;AAED,MAAM,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAC;AAErC,OAAO,EAAE,QAAQ,IAAI,aAAa,EAAE,CAAC","sourcesContent":["import type { IMessage, IUser, ISubscription, IRoom, SettingValue, ITranslatedMessage } from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport mem from 'mem';\nimport type { ContextType } from 'react';\n\nimport type { AutoTranslateOptions } from '../../../../client/views/room/MessageList/hooks/useAutoTranslate';\nimport type { ChatContext } from '../../../../client/views/room/contexts/ChatContext';\nimport type { RoomToolboxContextValue } from '../../../../client/views/room/contexts/RoomToolboxContext';\n\ntype MessageActionGroup = 'message' | 'menu';\n\nexport type MessageActionContext =\n\t| 'message'\n\t| 'threads'\n\t| 'message-mobile'\n\t| 'pinned'\n\t| 'direct'\n\t| 'starred'\n\t| 'mentions'\n\t| 'federated'\n\t| 'videoconf'\n\t| 'search'\n\t| 'videoconf-threads';\n\ntype MessageActionType = 'communication' | 'interaction' | 'duplication' | 'apps' | 'management';\n\nexport type MessageActionConditionProps = {\n\tmessage: IMessage;\n\tuser: IUser | undefined;\n\troom: IRoom;\n\tsubscription?: ISubscription;\n\tcontext?: MessageActionContext;\n\tsettings: { [key: string]: SettingValue };\n\tchat: ContextType<typeof ChatContext>;\n};\n\nexport type MessageActionConfig = {\n\tid: string;\n\ticon: IconName;\n\tvariant?: 'danger' | 'success' | 'warning';\n\tlabel: TranslationKey;\n\torder?: number;\n\t/* @deprecated */\n\tcolor?: string;\n\trole?: string;\n\tgroup?: MessageActionGroup | MessageActionGroup[];\n\tcontext?: MessageActionContext[];\n\taction: (\n\t\tthis: any,\n\t\te: Pick<Event, 'preventDefault' | 'stopPropagation' | 'currentTarget'> | undefined,\n\t\t{\n\t\t\tmessage,\n\t\t\ttabbar,\n\t\t\troom,\n\t\t\tchat,\n\t\t\tautoTranslateOptions,\n\t\t}: {\n\t\t\tmessage: IMessage & Partial<ITranslatedMessage>;\n\t\t\ttabbar: RoomToolboxContextValue;\n\t\t\troom?: IRoom;\n\t\t\tchat: ContextType<typeof ChatContext>;\n\t\t\tautoTranslateOptions?: AutoTranslateOptions;\n\t\t},\n\t) => any;\n\tcondition?: (props: MessageActionConditionProps) => Promise<boolean> | boolean;\n\ttype?: MessageActionType;\n\tdisabled?: (props: MessageActionConditionProps) => boolean;\n};\n\nclass MessageAction {\n\tpublic buttons: Record<MessageActionConfig['id'], MessageActionConfig> = {};\n\n\tpublic addButton(config: MessageActionConfig): void {\n\t\tif (!config?.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!config.group) {\n\t\t\tconfig.group = 'menu';\n\t\t}\n\n\t\tif (config.condition) {\n\t\t\tconfig.condition = mem(config.condition, { maxAge: 1000, cacheKey: JSON.stringify });\n\t\t}\n\n\t\tthis.buttons[config.id] = config;\n\t}\n\n\tpublic removeButton(id: MessageActionConfig['id']): void {\n\t\tdelete this.buttons[id];\n\t}\n\n\tpublic async getAll(\n\t\tprops: MessageActionConditionProps,\n\t\tcontext: MessageActionContext,\n\t\tgroup: MessageActionGroup,\n\t): Promise<MessageActionConfig[]> {\n\t\treturn (\n\t\t\tawait Promise.all(\n\t\t\t\tObject.values(this.buttons)\n\t\t\t\t\t.sort((a, b) => (a.order ?? 0) - (b.order ?? 0))\n\t\t\t\t\t.filter((button) => !button.group || (Array.isArray(button.group) ? button.group.includes(group) : button.group === group))\n\t\t\t\t\t.filter((button) => !button.context || button.context.includes(context))\n\t\t\t\t\t.map(async (button) => {\n\t\t\t\t\t\treturn [button, !button.condition || (await button.condition({ ...props, context }))] as const;\n\t\t\t\t\t}),\n\t\t\t)\n\t\t)\n\t\t\t.filter(([, condition]) => condition)\n\t\t\t.map(([button]) => button);\n\t}\n}\n\nconst instance = new MessageAction();\n\nexport { instance as MessageAction };\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/ui-utils/client/lib/MessageAction.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/ui-utils/client/lib/MessageAction.ts","inputSourceMap":{"version":3,"file":"app/ui-utils/client/lib/MessageAction.ts","sourceRoot":"","sources":["app/ui-utils/client/lib/MessageAction.ts"],"names":[],"mappings":"AAGA,OAAO,GAAG,MAAM,KAAK,CAAC;AAmEtB,MAAM,aAAa;IACX,OAAO,GAA2D,EAAE,CAAC;IAErE,SAAS,CAAC,MAA2B;QAC3C,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC;YACjB,OAAO;QACR,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACnB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;QACvB,CAAC;QAED,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC;YACtB,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QACtF,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;IAClC,CAAC;IAEM,YAAY,CAAC,EAA6B;QAChD,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACzB,CAAC;IAEM,KAAK,CAAC,MAAM,CAClB,KAAkC,EAClC,OAA6B,EAC7B,KAAyB;QAEzB,OAAO,CACN,MAAM,OAAO,CAAC,GAAG,CAChB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aACzB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;aAC/C,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;aAC1H,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aACvE,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YACrB,OAAO,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC,MAAM,MAAM,CAAC,SAAS,CAAC,EAAE,GAAG,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAU,CAAC;QAChG,CAAC,CAAC,CACH,CACD;aACC,MAAM,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC;aACpC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;CACD;AAED,MAAM,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAC;AAErC,OAAO,EAAE,QAAQ,IAAI,aAAa,EAAE,CAAC","sourcesContent":["import type { IMessage, IUser, ISubscription, IRoom, SettingValue, ITranslatedMessage } from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport mem from 'mem';\nimport type { ContextType } from 'react';\n\nimport type { AutoTranslateOptions } from '../../../../client/views/room/MessageList/hooks/useAutoTranslate';\nimport type { ChatContext } from '../../../../client/views/room/contexts/ChatContext';\nimport type { RoomToolboxContextValue } from '../../../../client/views/room/contexts/RoomToolboxContext';\n\ntype MessageActionGroup = 'message' | 'menu';\n\nexport type MessageActionContext =\n\t| 'message'\n\t| 'threads'\n\t| 'message-mobile'\n\t| 'pinned'\n\t| 'direct'\n\t| 'starred'\n\t| 'mentions'\n\t| 'federated'\n\t| 'videoconf'\n\t| 'search'\n\t| 'videoconf-threads';\n\ntype MessageActionType = 'communication' | 'interaction' | 'duplication' | 'apps' | 'management';\n\nexport type MessageActionConditionProps = {\n\tmessage: IMessage;\n\tuser: IUser | undefined;\n\troom: IRoom;\n\tsubscription?: ISubscription;\n\tcontext?: MessageActionContext;\n\tsettings: { [key: string]: SettingValue };\n\tchat: ContextType<typeof ChatContext>;\n};\n\nexport type MessageActionConfig = {\n\tid: string;\n\ticon: IconName;\n\tvariant?: 'danger' | 'success' | 'warning';\n\tlabel: TranslationKey;\n\torder?: number;\n\t/* @deprecated */\n\tcolor?: string;\n\trole?: string;\n\tgroup?: MessageActionGroup | MessageActionGroup[];\n\tcontext?: MessageActionContext[];\n\taction: (\n\t\tthis: any,\n\t\te: Pick<Event, 'preventDefault' | 'stopPropagation' | 'currentTarget'> | undefined,\n\t\t{\n\t\t\tmessage,\n\t\t\ttabbar,\n\t\t\troom,\n\t\t\tchat,\n\t\t\tautoTranslateOptions,\n\t\t}: {\n\t\t\tmessage: IMessage & Partial<ITranslatedMessage>;\n\t\t\ttabbar: RoomToolboxContextValue;\n\t\t\troom?: IRoom;\n\t\t\tchat: ContextType<typeof ChatContext>;\n\t\t\tautoTranslateOptions?: AutoTranslateOptions;\n\t\t},\n\t) => any;\n\tcondition?: (props: MessageActionConditionProps) => Promise<boolean> | boolean;\n\ttype?: MessageActionType;\n\tdisabled?: (props: MessageActionConditionProps) => boolean;\n};\n\nclass MessageAction {\n\tpublic buttons: Record<MessageActionConfig['id'], MessageActionConfig> = {};\n\n\tpublic addButton(config: MessageActionConfig): void {\n\t\tif (!config?.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!config.group) {\n\t\t\tconfig.group = 'menu';\n\t\t}\n\n\t\tif (config.condition) {\n\t\t\tconfig.condition = mem(config.condition, { maxAge: 1000, cacheKey: JSON.stringify });\n\t\t}\n\n\t\tthis.buttons[config.id] = config;\n\t}\n\n\tpublic removeButton(id: MessageActionConfig['id']): void {\n\t\tdelete this.buttons[id];\n\t}\n\n\tpublic async getAll(\n\t\tprops: MessageActionConditionProps,\n\t\tcontext: MessageActionContext,\n\t\tgroup: MessageActionGroup,\n\t): Promise<MessageActionConfig[]> {\n\t\treturn (\n\t\t\tawait Promise.all(\n\t\t\t\tObject.values(this.buttons)\n\t\t\t\t\t.sort((a, b) => (a.order ?? 0) - (b.order ?? 0))\n\t\t\t\t\t.filter((button) => !button.group || (Array.isArray(button.group) ? button.group.includes(group) : button.group === group))\n\t\t\t\t\t.filter((button) => !button.context || button.context.includes(context))\n\t\t\t\t\t.map(async (button) => {\n\t\t\t\t\t\treturn [button, !button.condition || (await button.condition({ ...props, context }))] as const;\n\t\t\t\t\t}),\n\t\t\t)\n\t\t)\n\t\t\t.filter(([, condition]) => condition)\n\t\t\t.map(([button]) => button);\n\t}\n}\n\nconst instance = new MessageAction();\n\nexport { instance as MessageAction };\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  MessageAction: () => instance\n});\nlet mem;\nmodule.link(\"mem\", {\n  default(v) {\n    mem = v;\n  }\n}, 0);\nclass MessageAction {\n  constructor() {\n    this.buttons = {};\n  }\n  addButton(config) {\n    if (!(config !== null && config !== void 0 && config.id)) {\n      return;\n    }\n    if (!config.group) {\n      config.group = 'menu';\n    }\n    if (config.condition) {\n      config.condition = mem(config.condition, {\n        maxAge: 1000,\n        cacheKey: JSON.stringify\n      });\n    }\n    this.buttons[config.id] = config;\n  }\n  removeButton(id) {\n    delete this.buttons[id];\n  }\n  async getAll(props, context, group) {\n    return (await Promise.all(Object.values(this.buttons).sort((a, b) => {\n      var _a$order, _b$order;\n      return ((_a$order = a.order) !== null && _a$order !== void 0 ? _a$order : 0) - ((_b$order = b.order) !== null && _b$order !== void 0 ? _b$order : 0);\n    }).filter(button => !button.group || (Array.isArray(button.group) ? button.group.includes(group) : button.group === group)).filter(button => !button.context || button.context.includes(context)).map(async button => {\n      return [button, !button.condition || (await button.condition(_objectSpread(_objectSpread({}, props), {}, {\n        context\n      })))];\n    }))).filter(_ref => {\n      let [, condition] = _ref;\n      return condition;\n    }).map(_ref2 => {\n      let [button] = _ref2;\n      return button;\n    });\n  }\n}\nconst instance = new MessageAction();","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","MessageAction","instance","mem","constructor","buttons","addButton","config","id","group","condition","maxAge","cacheKey","JSON","stringify","removeButton","getAll","props","context","Promise","all","Object","values","sort","a","b","_a$order","_b$order","order","filter","button","Array","isArray","includes","map","_ref","_ref2"],"sources":["app/ui-utils/client/lib/MessageAction.ts"],"sourcesContent":["import type { IMessage, IUser, ISubscription, IRoom, SettingValue, ITranslatedMessage } from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport mem from 'mem';\nimport type { ContextType } from 'react';\n\nimport type { AutoTranslateOptions } from '../../../../client/views/room/MessageList/hooks/useAutoTranslate';\nimport type { ChatContext } from '../../../../client/views/room/contexts/ChatContext';\nimport type { RoomToolboxContextValue } from '../../../../client/views/room/contexts/RoomToolboxContext';\n\ntype MessageActionGroup = 'message' | 'menu';\n\nexport type MessageActionContext =\n\t| 'message'\n\t| 'threads'\n\t| 'message-mobile'\n\t| 'pinned'\n\t| 'direct'\n\t| 'starred'\n\t| 'mentions'\n\t| 'federated'\n\t| 'videoconf'\n\t| 'search'\n\t| 'videoconf-threads';\n\ntype MessageActionType = 'communication' | 'interaction' | 'duplication' | 'apps' | 'management';\n\nexport type MessageActionConditionProps = {\n\tmessage: IMessage;\n\tuser: IUser | undefined;\n\troom: IRoom;\n\tsubscription?: ISubscription;\n\tcontext?: MessageActionContext;\n\tsettings: { [key: string]: SettingValue };\n\tchat: ContextType<typeof ChatContext>;\n};\n\nexport type MessageActionConfig = {\n\tid: string;\n\ticon: IconName;\n\tvariant?: 'danger' | 'success' | 'warning';\n\tlabel: TranslationKey;\n\torder?: number;\n\t/* @deprecated */\n\tcolor?: string;\n\trole?: string;\n\tgroup?: MessageActionGroup | MessageActionGroup[];\n\tcontext?: MessageActionContext[];\n\taction: (\n\t\tthis: any,\n\t\te: Pick<Event, 'preventDefault' | 'stopPropagation' | 'currentTarget'> | undefined,\n\t\t{\n\t\t\tmessage,\n\t\t\ttabbar,\n\t\t\troom,\n\t\t\tchat,\n\t\t\tautoTranslateOptions,\n\t\t}: {\n\t\t\tmessage: IMessage & Partial<ITranslatedMessage>;\n\t\t\ttabbar: RoomToolboxContextValue;\n\t\t\troom?: IRoom;\n\t\t\tchat: ContextType<typeof ChatContext>;\n\t\t\tautoTranslateOptions?: AutoTranslateOptions;\n\t\t},\n\t) => any;\n\tcondition?: (props: MessageActionConditionProps) => Promise<boolean> | boolean;\n\ttype?: MessageActionType;\n\tdisabled?: (props: MessageActionConditionProps) => boolean;\n};\n\nclass MessageAction {\n\tpublic buttons: Record<MessageActionConfig['id'], MessageActionConfig> = {};\n\n\tpublic addButton(config: MessageActionConfig): void {\n\t\tif (!config?.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!config.group) {\n\t\t\tconfig.group = 'menu';\n\t\t}\n\n\t\tif (config.condition) {\n\t\t\tconfig.condition = mem(config.condition, { maxAge: 1000, cacheKey: JSON.stringify });\n\t\t}\n\n\t\tthis.buttons[config.id] = config;\n\t}\n\n\tpublic removeButton(id: MessageActionConfig['id']): void {\n\t\tdelete this.buttons[id];\n\t}\n\n\tpublic async getAll(\n\t\tprops: MessageActionConditionProps,\n\t\tcontext: MessageActionContext,\n\t\tgroup: MessageActionGroup,\n\t): Promise<MessageActionConfig[]> {\n\t\treturn (\n\t\t\tawait Promise.all(\n\t\t\t\tObject.values(this.buttons)\n\t\t\t\t\t.sort((a, b) => (a.order ?? 0) - (b.order ?? 0))\n\t\t\t\t\t.filter((button) => !button.group || (Array.isArray(button.group) ? button.group.includes(group) : button.group === group))\n\t\t\t\t\t.filter((button) => !button.context || button.context.includes(context))\n\t\t\t\t\t.map(async (button) => {\n\t\t\t\t\t\treturn [button, !button.condition || (await button.condition({ ...props, context }))] as const;\n\t\t\t\t\t}),\n\t\t\t)\n\t\t)\n\t\t\t.filter(([, condition]) => condition)\n\t\t\t.map(([button]) => button);\n\t}\n}\n\nconst instance = new MessageAction();\n\nexport { instance as MessageAction };\n"],"mappings":"AAGA,IAAAA,aAAgB;AAAAC,MAAM,CAAAC,IAAA;EAAAC,QAAAC,CAAA;IAAAJ,aAAA,GAAAI,CAAA;EAAA;AAAA;AAAtBH,MAAA,CAAOI,MAAG;EAAAC,aAAY,EAAAA,CAAA,KAAAC;AAAA;AAAA,IAAAC,GAAA;AAAAP,MAAA,CAAAC,IAAA;EAAAC,QAAAC,CAAA;IAAAI,GAAA,GAAAJ,CAAA;EAAA;AAAA;AAmEtB,MAAME,aAAa;EAAAG,YAAA;IAAA,KACXC,OAAO,GAA2D,EAAE;EAAA;EAEpEC,SAASA,CAACC,MAA2B;IAC3C,IAAI,EAACA,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEC,EAAE,GAAE;MAChB;IACD;IAEA,IAAI,CAACD,MAAM,CAACE,KAAK,EAAE;MAClBF,MAAM,CAACE,KAAK,GAAG,MAAM;IACtB;IAEA,IAAIF,MAAM,CAACG,SAAS,EAAE;MACrBH,MAAM,CAACG,SAAS,GAAGP,GAAG,CAACI,MAAM,CAACG,SAAS,EAAE;QAAEC,MAAM,EAAE,IAAI;QAAEC,QAAQ,EAAEC,IAAI,CAACC;MAAS,CAAE,CAAC;IACrF;IAEA,IAAI,CAACT,OAAO,CAACE,MAAM,CAACC,EAAE,CAAC,GAAGD,MAAM;EACjC;EAEOQ,YAAYA,CAACP,EAA6B;IAChD,OAAO,IAAI,CAACH,OAAO,CAACG,EAAE,CAAC;EACxB;EAEO,MAAMQ,MAAMA,CAClBC,KAAkC,EAClCC,OAA6B,EAC7BT,KAAyB;IAEzB,OAAO,CACN,MAAMU,OAAO,CAACC,GAAG,CAChBC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACjB,OAAO,CAAC,CACzBkB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC;MAAA,IAAAC,QAAA,EAAAC,QAAA;MAAA,OAAK,EAAAD,QAAA,GAACF,CAAC,CAACI,KAAK,cAAAF,QAAA,cAAAA,QAAA,GAAI,CAAC,MAAAC,QAAA,GAAKF,CAAC,CAACG,KAAK,cAAAD,QAAA,cAAAA,QAAA,GAAI,CAAC,CAAC;IAAA,EAAC,CAC/CE,MAAM,CAAEC,MAAM,IAAK,CAACA,MAAM,CAACrB,KAAK,KAAKsB,KAAK,CAACC,OAAO,CAACF,MAAM,CAACrB,KAAK,CAAC,GAAGqB,MAAM,CAACrB,KAAK,CAACwB,QAAQ,CAACxB,KAAK,CAAC,GAAGqB,MAAM,CAACrB,KAAK,KAAKA,KAAK,CAAC,CAAC,CAC1HoB,MAAM,CAAEC,MAAM,IAAK,CAACA,MAAM,CAACZ,OAAO,IAAIY,MAAM,CAACZ,OAAO,CAACe,QAAQ,CAACf,OAAO,CAAC,CAAC,CACvEgB,GAAG,CAAC,MAAOJ,MAAM,IAAI;MACrB,OAAO,CAACA,MAAM,EAAE,CAACA,MAAM,CAACpB,SAAS,KAAK,MAAMoB,MAAM,CAACpB,SAAS,CAAAf,aAAA,CAAAA,aAAA,KAAMsB,KAAK;QAAEC;MAAO,EAAE,CAAC,CAAC,CAAU;IAC/F,CAAC,CAAC,CACH,EAEAW,MAAM,CAACM,IAAA;MAAA,IAAC,GAAGzB,SAAS,CAAC,GAAAyB,IAAA;MAAA,OAAKzB,SAAS;IAAA,EAAC,CACpCwB,GAAG,CAACE,KAAA;MAAA,IAAC,CAACN,MAAM,CAAC,GAAAM,KAAA;MAAA,OAAKN,MAAM;IAAA,EAAC;EAC5B;;AAGD,MAAM5B,QAAQ,GAAG,IAAID,aAAa,EAAE","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d040cd64205540e5571c68ae6dee39be68c31756"}
