{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/client/helper.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/e2e/client/helper.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/client/helper.ts","inputSourceMap":{"version":3,"file":"app/e2e/client/helper.ts","sourceRoot":"","sources":["app/e2e/client/helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { Random } from '@rocket.chat/random';\nimport ByteBuffer from 'bytebuffer';\n\nexport function toString(thing: any) {\n\tif (typeof thing === 'string') {\n\t\treturn thing;\n\t}\n\n\treturn ByteBuffer.wrap(thing).toString('binary');\n}\n\nexport function toArrayBuffer(thing: any) {\n\tif (thing === undefined) {\n\t\treturn undefined;\n\t}\n\tif (typeof thing === 'object') {\n\t\tif (Object.getPrototypeOf(thing) === ArrayBuffer.prototype) {\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tif (typeof thing !== 'string') {\n\t\tthrow new Error(`Tried to convert a non-string of type ${typeof thing} to an array buffer`);\n\t}\n\n\treturn ByteBuffer.wrap(thing, 'binary').toArrayBuffer();\n}\n\nexport function joinVectorAndEcryptedData(vector: any, encryptedData: any) {\n\tconst cipherText = new Uint8Array(encryptedData);\n\tconst output = new Uint8Array(vector.length + cipherText.length);\n\toutput.set(vector, 0);\n\toutput.set(cipherText, vector.length);\n\treturn output;\n}\n\nexport function splitVectorAndEcryptedData(cipherText: any) {\n\tconst vector = cipherText.slice(0, 16);\n\tconst encryptedData = cipherText.slice(16);\n\n\treturn [vector, encryptedData];\n}\n\nexport async function encryptRSA(key: any, data: any) {\n\treturn crypto.subtle.encrypt({ name: 'RSA-OAEP' }, key, data);\n}\n\nexport async function encryptAES(vector: any, key: any, data: any) {\n\treturn crypto.subtle.encrypt({ name: 'AES-CBC', iv: vector }, key, data);\n}\n\nexport async function encryptAESCTR(vector: any, key: any, data: any) {\n\treturn crypto.subtle.encrypt({ name: 'AES-CTR', counter: vector, length: 64 }, key, data);\n}\n\nexport async function decryptRSA(key: any, data: any) {\n\treturn crypto.subtle.decrypt({ name: 'RSA-OAEP' }, key, data);\n}\n\nexport async function decryptAES(vector: any, key: any, data: any) {\n\treturn crypto.subtle.decrypt({ name: 'AES-CBC', iv: vector }, key, data);\n}\n\nexport async function generateAESKey() {\n\treturn crypto.subtle.generateKey({ name: 'AES-CBC', length: 128 }, true, ['encrypt', 'decrypt']);\n}\n\nexport async function generateAESCTRKey() {\n\treturn crypto.subtle.generateKey({ name: 'AES-CTR', length: 256 }, true, ['encrypt', 'decrypt']);\n}\n\nexport async function generateRSAKey() {\n\treturn crypto.subtle.generateKey(\n\t\t{\n\t\t\tname: 'RSA-OAEP',\n\t\t\tmodulusLength: 2048,\n\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n\t\t\thash: { name: 'SHA-256' },\n\t\t},\n\t\ttrue,\n\t\t['encrypt', 'decrypt'],\n\t);\n}\n\nexport async function exportJWKKey(key: any) {\n\treturn crypto.subtle.exportKey('jwk', key);\n}\n\nexport async function importRSAKey(keyData: any, keyUsages: ReadonlyArray<KeyUsage> = ['encrypt', 'decrypt']) {\n\treturn crypto.subtle.importKey(\n\t\t'jwk' as any,\n\t\tkeyData,\n\t\t{\n\t\t\tname: 'RSA-OAEP',\n\t\t\tmodulusLength: 2048,\n\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n\t\t\thash: { name: 'SHA-256' },\n\t\t} as any,\n\t\ttrue,\n\t\tkeyUsages,\n\t);\n}\n\nexport async function importAESKey(keyData: any, keyUsages: ReadonlyArray<KeyUsage> = ['encrypt', 'decrypt']) {\n\treturn crypto.subtle.importKey('jwk', keyData, { name: 'AES-CBC' }, true, keyUsages);\n}\n\nexport async function importRawKey(keyData: any, keyUsages: ReadonlyArray<KeyUsage> = ['deriveKey']) {\n\treturn crypto.subtle.importKey('raw', keyData, { name: 'PBKDF2' }, false, keyUsages);\n}\n\nexport async function deriveKey(salt: any, baseKey: any, keyUsages: ReadonlyArray<KeyUsage> = ['encrypt', 'decrypt']) {\n\tconst iterations = 1000;\n\tconst hash = 'SHA-256';\n\n\treturn crypto.subtle.deriveKey({ name: 'PBKDF2', salt, iterations, hash }, baseKey, { name: 'AES-CBC', length: 256 }, true, keyUsages);\n}\n\nexport async function readFileAsArrayBuffer(file: any) {\n\treturn new Promise<any>((resolve, reject) => {\n\t\tconst reader = new FileReader();\n\t\treader.onload = (evt) => {\n\t\t\tresolve(evt.target?.result);\n\t\t};\n\t\treader.onerror = (evt) => {\n\t\t\treject(evt);\n\t\t};\n\t\treader.readAsArrayBuffer(file);\n\t});\n}\n\nexport async function generateMnemonicPhrase(n: any, sep = ' ') {\n\tconst { default: wordList } = await import('./wordList');\n\tconst result = new Array(n);\n\tlet len = wordList.length;\n\tconst taken = new Array(len);\n\n\twhile (n--) {\n\t\tconst x = Math.floor(Random.fraction() * len);\n\t\tresult[n] = wordList[x in taken ? taken[x] : x];\n\t\ttaken[x] = --len in taken ? taken[len] : len;\n\t}\n\treturn result.join(sep);\n}\n\nexport async function createSha256HashFromText(data: any) {\n\tconst hash = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(data));\n\treturn Array.from(new Uint8Array(hash))\n\t\t.map((b) => b.toString(16).padStart(2, '0'))\n\t\t.join('');\n}\n\nexport async function sha256HashFromArrayBuffer(arrayBuffer: any) {\n\tconst hashArray = Array.from(new Uint8Array(await crypto.subtle.digest('SHA-256', arrayBuffer)));\n\treturn hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"production","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/e2e/client/helper.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/e2e/client/helper.ts","inputSourceMap":{"version":3,"file":"app/e2e/client/helper.ts","sourceRoot":"","sources":["app/e2e/client/helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { Random } from '@rocket.chat/random';\nimport ByteBuffer from 'bytebuffer';\n\nexport function toString(thing: any) {\n\tif (typeof thing === 'string') {\n\t\treturn thing;\n\t}\n\n\treturn ByteBuffer.wrap(thing).toString('binary');\n}\n\nexport function toArrayBuffer(thing: any) {\n\tif (thing === undefined) {\n\t\treturn undefined;\n\t}\n\tif (typeof thing === 'object') {\n\t\tif (Object.getPrototypeOf(thing) === ArrayBuffer.prototype) {\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tif (typeof thing !== 'string') {\n\t\tthrow new Error(`Tried to convert a non-string of type ${typeof thing} to an array buffer`);\n\t}\n\n\treturn ByteBuffer.wrap(thing, 'binary').toArrayBuffer();\n}\n\nexport function joinVectorAndEcryptedData(vector: any, encryptedData: any) {\n\tconst cipherText = new Uint8Array(encryptedData);\n\tconst output = new Uint8Array(vector.length + cipherText.length);\n\toutput.set(vector, 0);\n\toutput.set(cipherText, vector.length);\n\treturn output;\n}\n\nexport function splitVectorAndEcryptedData(cipherText: any) {\n\tconst vector = cipherText.slice(0, 16);\n\tconst encryptedData = cipherText.slice(16);\n\n\treturn [vector, encryptedData];\n}\n\nexport async function encryptRSA(key: any, data: any) {\n\treturn crypto.subtle.encrypt({ name: 'RSA-OAEP' }, key, data);\n}\n\nexport async function encryptAES(vector: any, key: any, data: any) {\n\treturn crypto.subtle.encrypt({ name: 'AES-CBC', iv: vector }, key, data);\n}\n\nexport async function encryptAESCTR(vector: any, key: any, data: any) {\n\treturn crypto.subtle.encrypt({ name: 'AES-CTR', counter: vector, length: 64 }, key, data);\n}\n\nexport async function decryptRSA(key: any, data: any) {\n\treturn crypto.subtle.decrypt({ name: 'RSA-OAEP' }, key, data);\n}\n\nexport async function decryptAES(vector: any, key: any, data: any) {\n\treturn crypto.subtle.decrypt({ name: 'AES-CBC', iv: vector }, key, data);\n}\n\nexport async function generateAESKey() {\n\treturn crypto.subtle.generateKey({ name: 'AES-CBC', length: 128 }, true, ['encrypt', 'decrypt']);\n}\n\nexport async function generateAESCTRKey() {\n\treturn crypto.subtle.generateKey({ name: 'AES-CTR', length: 256 }, true, ['encrypt', 'decrypt']);\n}\n\nexport async function generateRSAKey() {\n\treturn crypto.subtle.generateKey(\n\t\t{\n\t\t\tname: 'RSA-OAEP',\n\t\t\tmodulusLength: 2048,\n\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n\t\t\thash: { name: 'SHA-256' },\n\t\t},\n\t\ttrue,\n\t\t['encrypt', 'decrypt'],\n\t);\n}\n\nexport async function exportJWKKey(key: any) {\n\treturn crypto.subtle.exportKey('jwk', key);\n}\n\nexport async function importRSAKey(keyData: any, keyUsages: ReadonlyArray<KeyUsage> = ['encrypt', 'decrypt']) {\n\treturn crypto.subtle.importKey(\n\t\t'jwk' as any,\n\t\tkeyData,\n\t\t{\n\t\t\tname: 'RSA-OAEP',\n\t\t\tmodulusLength: 2048,\n\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n\t\t\thash: { name: 'SHA-256' },\n\t\t} as any,\n\t\ttrue,\n\t\tkeyUsages,\n\t);\n}\n\nexport async function importAESKey(keyData: any, keyUsages: ReadonlyArray<KeyUsage> = ['encrypt', 'decrypt']) {\n\treturn crypto.subtle.importKey('jwk', keyData, { name: 'AES-CBC' }, true, keyUsages);\n}\n\nexport async function importRawKey(keyData: any, keyUsages: ReadonlyArray<KeyUsage> = ['deriveKey']) {\n\treturn crypto.subtle.importKey('raw', keyData, { name: 'PBKDF2' }, false, keyUsages);\n}\n\nexport async function deriveKey(salt: any, baseKey: any, keyUsages: ReadonlyArray<KeyUsage> = ['encrypt', 'decrypt']) {\n\tconst iterations = 1000;\n\tconst hash = 'SHA-256';\n\n\treturn crypto.subtle.deriveKey({ name: 'PBKDF2', salt, iterations, hash }, baseKey, { name: 'AES-CBC', length: 256 }, true, keyUsages);\n}\n\nexport async function readFileAsArrayBuffer(file: any) {\n\treturn new Promise<any>((resolve, reject) => {\n\t\tconst reader = new FileReader();\n\t\treader.onload = (evt) => {\n\t\t\tresolve(evt.target?.result);\n\t\t};\n\t\treader.onerror = (evt) => {\n\t\t\treject(evt);\n\t\t};\n\t\treader.readAsArrayBuffer(file);\n\t});\n}\n\nexport async function generateMnemonicPhrase(n: any, sep = ' ') {\n\tconst { default: wordList } = await import('./wordList');\n\tconst result = new Array(n);\n\tlet len = wordList.length;\n\tconst taken = new Array(len);\n\n\twhile (n--) {\n\t\tconst x = Math.floor(Random.fraction() * len);\n\t\tresult[n] = wordList[x in taken ? taken[x] : x];\n\t\ttaken[x] = --len in taken ? taken[len] : len;\n\t}\n\treturn result.join(sep);\n}\n\nexport async function createSha256HashFromText(data: any) {\n\tconst hash = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(data));\n\treturn Array.from(new Uint8Array(hash))\n\t\t.map((b) => b.toString(16).padStart(2, '0'))\n\t\t.join('');\n}\n\nexport async function sha256HashFromArrayBuffer(arrayBuffer: any) {\n\tconst hashArray = Array.from(new Uint8Array(await crypto.subtle.digest('SHA-256', arrayBuffer)));\n\treturn hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n}\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar _typeof;\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 1);\nmodule.export({\n  toString: function () {\n    return toString;\n  },\n  toArrayBuffer: function () {\n    return toArrayBuffer;\n  },\n  joinVectorAndEcryptedData: function () {\n    return joinVectorAndEcryptedData;\n  },\n  splitVectorAndEcryptedData: function () {\n    return splitVectorAndEcryptedData;\n  },\n  encryptRSA: function () {\n    return encryptRSA;\n  },\n  encryptAES: function () {\n    return encryptAES;\n  },\n  encryptAESCTR: function () {\n    return encryptAESCTR;\n  },\n  decryptRSA: function () {\n    return decryptRSA;\n  },\n  decryptAES: function () {\n    return decryptAES;\n  },\n  generateAESKey: function () {\n    return generateAESKey;\n  },\n  generateAESCTRKey: function () {\n    return generateAESCTRKey;\n  },\n  generateRSAKey: function () {\n    return generateRSAKey;\n  },\n  exportJWKKey: function () {\n    return exportJWKKey;\n  },\n  importRSAKey: function () {\n    return importRSAKey;\n  },\n  importAESKey: function () {\n    return importAESKey;\n  },\n  importRawKey: function () {\n    return importRawKey;\n  },\n  deriveKey: function () {\n    return deriveKey;\n  },\n  readFileAsArrayBuffer: function () {\n    return readFileAsArrayBuffer;\n  },\n  generateMnemonicPhrase: function () {\n    return generateMnemonicPhrase;\n  },\n  createSha256HashFromText: function () {\n    return createSha256HashFromText;\n  },\n  sha256HashFromArrayBuffer: function () {\n    return sha256HashFromArrayBuffer;\n  }\n});\nvar Random;\nmodule.link(\"@rocket.chat/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 0);\nvar ByteBuffer;\nmodule.link(\"bytebuffer\", {\n  \"default\": function (v) {\n    ByteBuffer = v;\n  }\n}, 1);\nfunction toString(thing) {\n  if (typeof thing === 'string') {\n    return thing;\n  }\n  return ByteBuffer.wrap(thing).toString('binary');\n}\nfunction toArrayBuffer(thing) {\n  if (thing === undefined) {\n    return undefined;\n  }\n  if (_typeof(thing) === 'object') {\n    if (Object.getPrototypeOf(thing) === ArrayBuffer.prototype) {\n      return thing;\n    }\n  }\n  if (typeof thing !== 'string') {\n    throw new Error(\"Tried to convert a non-string of type \" + _typeof(thing) + \" to an array buffer\");\n  }\n  return ByteBuffer.wrap(thing, 'binary').toArrayBuffer();\n}\nfunction joinVectorAndEcryptedData(vector, encryptedData) {\n  var cipherText = new Uint8Array(encryptedData);\n  var output = new Uint8Array(vector.length + cipherText.length);\n  output.set(vector, 0);\n  output.set(cipherText, vector.length);\n  return output;\n}\nfunction splitVectorAndEcryptedData(cipherText) {\n  var vector = cipherText.slice(0, 16);\n  var encryptedData = cipherText.slice(16);\n  return [vector, encryptedData];\n}\nfunction encryptRSA(key, data) {\n  return _regeneratorRuntime.async(function () {\n    function encryptRSA$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", crypto.subtle.encrypt({\n            name: 'RSA-OAEP'\n          }, key, data));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n    return encryptRSA$;\n  }(), null, null, null, Promise);\n}\nfunction encryptAES(vector, key, data) {\n  return _regeneratorRuntime.async(function () {\n    function encryptAES$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", crypto.subtle.encrypt({\n            name: 'AES-CBC',\n            iv: vector\n          }, key, data));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n    return encryptAES$;\n  }(), null, null, null, Promise);\n}\nfunction encryptAESCTR(vector, key, data) {\n  return _regeneratorRuntime.async(function () {\n    function encryptAESCTR$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", crypto.subtle.encrypt({\n            name: 'AES-CTR',\n            counter: vector,\n            length: 64\n          }, key, data));\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n    return encryptAESCTR$;\n  }(), null, null, null, Promise);\n}\nfunction decryptRSA(key, data) {\n  return _regeneratorRuntime.async(function () {\n    function decryptRSA$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.abrupt(\"return\", crypto.subtle.decrypt({\n            name: 'RSA-OAEP'\n          }, key, data));\n        case 1:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n    return decryptRSA$;\n  }(), null, null, null, Promise);\n}\nfunction decryptAES(vector, key, data) {\n  return _regeneratorRuntime.async(function () {\n    function decryptAES$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          return _context5.abrupt(\"return\", crypto.subtle.decrypt({\n            name: 'AES-CBC',\n            iv: vector\n          }, key, data));\n        case 1:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n    return decryptAES$;\n  }(), null, null, null, Promise);\n}\nfunction generateAESKey() {\n  return _regeneratorRuntime.async(function () {\n    function generateAESKey$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          return _context6.abrupt(\"return\", crypto.subtle.generateKey({\n            name: 'AES-CBC',\n            length: 128\n          }, true, ['encrypt', 'decrypt']));\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n    return generateAESKey$;\n  }(), null, null, null, Promise);\n}\nfunction generateAESCTRKey() {\n  return _regeneratorRuntime.async(function () {\n    function generateAESCTRKey$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          return _context7.abrupt(\"return\", crypto.subtle.generateKey({\n            name: 'AES-CTR',\n            length: 256\n          }, true, ['encrypt', 'decrypt']));\n        case 1:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n    return generateAESCTRKey$;\n  }(), null, null, null, Promise);\n}\nfunction generateRSAKey() {\n  return _regeneratorRuntime.async(function () {\n    function generateRSAKey$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          return _context8.abrupt(\"return\", crypto.subtle.generateKey({\n            name: 'RSA-OAEP',\n            modulusLength: 2048,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n            hash: {\n              name: 'SHA-256'\n            }\n          }, true, ['encrypt', 'decrypt']));\n        case 1:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n    return generateRSAKey$;\n  }(), null, null, null, Promise);\n}\nfunction exportJWKKey(key) {\n  return _regeneratorRuntime.async(function () {\n    function exportJWKKey$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          return _context9.abrupt(\"return\", crypto.subtle.exportKey('jwk', key));\n        case 1:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n    return exportJWKKey$;\n  }(), null, null, null, Promise);\n}\nfunction importRSAKey(keyData) {\n  var keyUsages,\n    _args10 = arguments;\n  return _regeneratorRuntime.async(function () {\n    function importRSAKey$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          keyUsages = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : ['encrypt', 'decrypt'];\n          return _context10.abrupt(\"return\", crypto.subtle.importKey('jwk', keyData, {\n            name: 'RSA-OAEP',\n            modulusLength: 2048,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n            hash: {\n              name: 'SHA-256'\n            }\n          }, true, keyUsages));\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n    return importRSAKey$;\n  }(), null, null, null, Promise);\n}\nfunction importAESKey(keyData) {\n  var keyUsages,\n    _args11 = arguments;\n  return _regeneratorRuntime.async(function () {\n    function importAESKey$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          keyUsages = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : ['encrypt', 'decrypt'];\n          return _context11.abrupt(\"return\", crypto.subtle.importKey('jwk', keyData, {\n            name: 'AES-CBC'\n          }, true, keyUsages));\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n    return importAESKey$;\n  }(), null, null, null, Promise);\n}\nfunction importRawKey(keyData) {\n  var keyUsages,\n    _args12 = arguments;\n  return _regeneratorRuntime.async(function () {\n    function importRawKey$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          keyUsages = _args12.length > 1 && _args12[1] !== undefined ? _args12[1] : ['deriveKey'];\n          return _context12.abrupt(\"return\", crypto.subtle.importKey('raw', keyData, {\n            name: 'PBKDF2'\n          }, false, keyUsages));\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n    return importRawKey$;\n  }(), null, null, null, Promise);\n}\nfunction deriveKey(salt, baseKey) {\n  var keyUsages,\n    iterations,\n    hash,\n    _args13 = arguments;\n  return _regeneratorRuntime.async(function () {\n    function deriveKey$(_context13) {\n      while (1) switch (_context13.prev = _context13.next) {\n        case 0:\n          keyUsages = _args13.length > 2 && _args13[2] !== undefined ? _args13[2] : ['encrypt', 'decrypt'];\n          iterations = 1000;\n          hash = 'SHA-256';\n          return _context13.abrupt(\"return\", crypto.subtle.deriveKey({\n            name: 'PBKDF2',\n            salt: salt,\n            iterations: iterations,\n            hash: hash\n          }, baseKey, {\n            name: 'AES-CBC',\n            length: 256\n          }, true, keyUsages));\n        case 4:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n    return deriveKey$;\n  }(), null, null, null, Promise);\n}\nfunction readFileAsArrayBuffer(file) {\n  return _regeneratorRuntime.async(function () {\n    function readFileAsArrayBuffer$(_context14) {\n      while (1) switch (_context14.prev = _context14.next) {\n        case 0:\n          return _context14.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var reader = new FileReader();\n            reader.onload = function (evt) {\n              var _evt$target;\n              resolve((_evt$target = evt.target) === null || _evt$target === void 0 ? void 0 : _evt$target.result);\n            };\n            reader.onerror = function (evt) {\n              reject(evt);\n            };\n            reader.readAsArrayBuffer(file);\n          }));\n        case 1:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n    return readFileAsArrayBuffer$;\n  }(), null, null, null, Promise);\n}\nfunction generateMnemonicPhrase(n) {\n  var sep,\n    _await$module$dynamic,\n    wordList,\n    result,\n    len,\n    taken,\n    x,\n    _args15 = arguments;\n  return _regeneratorRuntime.async(function () {\n    function generateMnemonicPhrase$(_context15) {\n      while (1) switch (_context15.prev = _context15.next) {\n        case 0:\n          sep = _args15.length > 1 && _args15[1] !== undefined ? _args15[1] : ' ';\n          _context15.next = 3;\n          return _regeneratorRuntime.awrap(module.dynamicImport('./wordList'));\n        case 3:\n          _await$module$dynamic = _context15.sent;\n          wordList = _await$module$dynamic.default;\n          result = new Array(n);\n          len = wordList.length;\n          taken = new Array(len);\n          while (n--) {\n            x = Math.floor(Random.fraction() * len);\n            result[n] = wordList[x in taken ? taken[x] : x];\n            taken[x] = --len in taken ? taken[len] : len;\n          }\n          return _context15.abrupt(\"return\", result.join(sep));\n        case 10:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n    return generateMnemonicPhrase$;\n  }(), null, null, null, Promise);\n}\nfunction createSha256HashFromText(data) {\n  var hash;\n  return _regeneratorRuntime.async(function () {\n    function createSha256HashFromText$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return _regeneratorRuntime.awrap(crypto.subtle.digest('SHA-256', new TextEncoder().encode(data)));\n        case 2:\n          hash = _context16.sent;\n          return _context16.abrupt(\"return\", Array.from(new Uint8Array(hash)).map(function (b) {\n            return b.toString(16).padStart(2, '0');\n          }).join(''));\n        case 4:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n    return createSha256HashFromText$;\n  }(), null, null, null, Promise);\n}\nfunction sha256HashFromArrayBuffer(arrayBuffer) {\n  var hashArray;\n  return _regeneratorRuntime.async(function () {\n    function sha256HashFromArrayBuffer$(_context17) {\n      while (1) switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.t0 = Array;\n          _context17.t1 = Uint8Array;\n          _context17.next = 4;\n          return _regeneratorRuntime.awrap(crypto.subtle.digest('SHA-256', arrayBuffer));\n        case 4:\n          _context17.t2 = _context17.sent;\n          _context17.t3 = new _context17.t1(_context17.t2);\n          hashArray = _context17.t0.from.call(_context17.t0, _context17.t3);\n          return _context17.abrupt(\"return\", hashArray.map(function (b) {\n            return b.toString(16).padStart(2, '0');\n          }).join(''));\n        case 8:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n    return sha256HashFromArrayBuffer$;\n  }(), null, null, null, Promise);\n}","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","_typeof","export","toString","toArrayBuffer","joinVectorAndEcryptedData","splitVectorAndEcryptedData","encryptRSA","encryptAES","encryptAESCTR","decryptRSA","decryptAES","generateAESKey","generateAESCTRKey","generateRSAKey","exportJWKKey","importRSAKey","importAESKey","importRawKey","deriveKey","readFileAsArrayBuffer","generateMnemonicPhrase","createSha256HashFromText","sha256HashFromArrayBuffer","Random","ByteBuffer","thing","wrap","undefined","Object","getPrototypeOf","ArrayBuffer","prototype","Error","vector","encryptedData","cipherText","Uint8Array","output","length","set","slice","key","data","async","encryptRSA$","_context","prev","next","abrupt","crypto","subtle","encrypt","name","stop","Promise","encryptAES$","_context2","iv","encryptAESCTR$","_context3","counter","decryptRSA$","_context4","decrypt","decryptAES$","_context5","generateAESKey$","_context6","generateKey","generateAESCTRKey$","_context7","generateRSAKey$","_context8","modulusLength","publicExponent","hash","exportJWKKey$","_context9","exportKey","keyData","keyUsages","_args10","arguments","importRSAKey$","_context10","importKey","_args11","importAESKey$","_context11","_args12","importRawKey$","_context12","salt","baseKey","iterations","_args13","deriveKey$","_context13","file","readFileAsArrayBuffer$","_context14","resolve","reject","reader","FileReader","onload","evt","_evt$target","target","result","onerror","readAsArrayBuffer","n","sep","_await$module$dynamic","wordList","len","taken","x","_args15","generateMnemonicPhrase$","_context15","awrap","dynamicImport","sent","Array","Math","floor","fraction","join","createSha256HashFromText$","_context16","digest","TextEncoder","encode","from","map","b","padStart","arrayBuffer","hashArray","sha256HashFromArrayBuffer$","_context17","t0","t1","t2","t3","call"],"sources":["app/e2e/client/helper.ts"],"sourcesContent":["import { Random } from '@rocket.chat/random';\nimport ByteBuffer from 'bytebuffer';\n\nexport function toString(thing: any) {\n\tif (typeof thing === 'string') {\n\t\treturn thing;\n\t}\n\n\treturn ByteBuffer.wrap(thing).toString('binary');\n}\n\nexport function toArrayBuffer(thing: any) {\n\tif (thing === undefined) {\n\t\treturn undefined;\n\t}\n\tif (typeof thing === 'object') {\n\t\tif (Object.getPrototypeOf(thing) === ArrayBuffer.prototype) {\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tif (typeof thing !== 'string') {\n\t\tthrow new Error(`Tried to convert a non-string of type ${typeof thing} to an array buffer`);\n\t}\n\n\treturn ByteBuffer.wrap(thing, 'binary').toArrayBuffer();\n}\n\nexport function joinVectorAndEcryptedData(vector: any, encryptedData: any) {\n\tconst cipherText = new Uint8Array(encryptedData);\n\tconst output = new Uint8Array(vector.length + cipherText.length);\n\toutput.set(vector, 0);\n\toutput.set(cipherText, vector.length);\n\treturn output;\n}\n\nexport function splitVectorAndEcryptedData(cipherText: any) {\n\tconst vector = cipherText.slice(0, 16);\n\tconst encryptedData = cipherText.slice(16);\n\n\treturn [vector, encryptedData];\n}\n\nexport async function encryptRSA(key: any, data: any) {\n\treturn crypto.subtle.encrypt({ name: 'RSA-OAEP' }, key, data);\n}\n\nexport async function encryptAES(vector: any, key: any, data: any) {\n\treturn crypto.subtle.encrypt({ name: 'AES-CBC', iv: vector }, key, data);\n}\n\nexport async function encryptAESCTR(vector: any, key: any, data: any) {\n\treturn crypto.subtle.encrypt({ name: 'AES-CTR', counter: vector, length: 64 }, key, data);\n}\n\nexport async function decryptRSA(key: any, data: any) {\n\treturn crypto.subtle.decrypt({ name: 'RSA-OAEP' }, key, data);\n}\n\nexport async function decryptAES(vector: any, key: any, data: any) {\n\treturn crypto.subtle.decrypt({ name: 'AES-CBC', iv: vector }, key, data);\n}\n\nexport async function generateAESKey() {\n\treturn crypto.subtle.generateKey({ name: 'AES-CBC', length: 128 }, true, ['encrypt', 'decrypt']);\n}\n\nexport async function generateAESCTRKey() {\n\treturn crypto.subtle.generateKey({ name: 'AES-CTR', length: 256 }, true, ['encrypt', 'decrypt']);\n}\n\nexport async function generateRSAKey() {\n\treturn crypto.subtle.generateKey(\n\t\t{\n\t\t\tname: 'RSA-OAEP',\n\t\t\tmodulusLength: 2048,\n\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n\t\t\thash: { name: 'SHA-256' },\n\t\t},\n\t\ttrue,\n\t\t['encrypt', 'decrypt'],\n\t);\n}\n\nexport async function exportJWKKey(key: any) {\n\treturn crypto.subtle.exportKey('jwk', key);\n}\n\nexport async function importRSAKey(keyData: any, keyUsages: ReadonlyArray<KeyUsage> = ['encrypt', 'decrypt']) {\n\treturn crypto.subtle.importKey(\n\t\t'jwk' as any,\n\t\tkeyData,\n\t\t{\n\t\t\tname: 'RSA-OAEP',\n\t\t\tmodulusLength: 2048,\n\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n\t\t\thash: { name: 'SHA-256' },\n\t\t} as any,\n\t\ttrue,\n\t\tkeyUsages,\n\t);\n}\n\nexport async function importAESKey(keyData: any, keyUsages: ReadonlyArray<KeyUsage> = ['encrypt', 'decrypt']) {\n\treturn crypto.subtle.importKey('jwk', keyData, { name: 'AES-CBC' }, true, keyUsages);\n}\n\nexport async function importRawKey(keyData: any, keyUsages: ReadonlyArray<KeyUsage> = ['deriveKey']) {\n\treturn crypto.subtle.importKey('raw', keyData, { name: 'PBKDF2' }, false, keyUsages);\n}\n\nexport async function deriveKey(salt: any, baseKey: any, keyUsages: ReadonlyArray<KeyUsage> = ['encrypt', 'decrypt']) {\n\tconst iterations = 1000;\n\tconst hash = 'SHA-256';\n\n\treturn crypto.subtle.deriveKey({ name: 'PBKDF2', salt, iterations, hash }, baseKey, { name: 'AES-CBC', length: 256 }, true, keyUsages);\n}\n\nexport async function readFileAsArrayBuffer(file: any) {\n\treturn new Promise<any>((resolve, reject) => {\n\t\tconst reader = new FileReader();\n\t\treader.onload = (evt) => {\n\t\t\tresolve(evt.target?.result);\n\t\t};\n\t\treader.onerror = (evt) => {\n\t\t\treject(evt);\n\t\t};\n\t\treader.readAsArrayBuffer(file);\n\t});\n}\n\nexport async function generateMnemonicPhrase(n: any, sep = ' ') {\n\tconst { default: wordList } = await import('./wordList');\n\tconst result = new Array(n);\n\tlet len = wordList.length;\n\tconst taken = new Array(len);\n\n\twhile (n--) {\n\t\tconst x = Math.floor(Random.fraction() * len);\n\t\tresult[n] = wordList[x in taken ? taken[x] : x];\n\t\ttaken[x] = --len in taken ? taken[len] : len;\n\t}\n\treturn result.join(sep);\n}\n\nexport async function createSha256HashFromText(data: any) {\n\tconst hash = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(data));\n\treturn Array.from(new Uint8Array(hash))\n\t\t.map((b) => b.toString(16).padStart(2, '0'))\n\t\t.join('');\n}\n\nexport async function sha256HashFromArrayBuffer(arrayBuffer: any) {\n\tconst hashArray = Array.from(new Uint8Array(await crypto.subtle.digest('SHA-256', arrayBuffer)));\n\treturn hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"41c0a9228ba6893a3b04e1c2346d8903df271486"}
