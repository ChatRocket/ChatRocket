{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/archiveRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/lib/server/functions/archiveRoom.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/archiveRoom.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/archiveRoom.ts","sourceRoot":"","sources":["app/lib/server/functions/archiveRoom.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAE3D,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,mBAAmB,EAAE,mCAAmC,EAAE,MAAM,uBAAuB,CAAC;AAEjG,MAAM,CAAC,MAAM,WAAW,GAAG,KAAK,WAAW,GAAW,EAAE,IAAmB;IAC1E,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAE7B,MAAM,eAAe,GAAG,MAAM,aAAa,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IACjE,IAAI,eAAe,CAAC,aAAa,EAAE,CAAC;QACnC,KAAK,mCAAmC,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,OAAO,CAAC,iBAAiB,CAAC,eAAe,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAEhE,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAE1C,MAAM,SAAS,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAErD,IAAI,IAAI,EAAE,CAAC;QACV,KAAK,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;AACF,CAAC,CAAC","sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport type { IMessage } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { notifyOnRoomChanged, notifyOnSubscriptionChangedByRoomId } from '../lib/notifyListener';\n\nexport const archiveRoom = async function (rid: string, user: IMessage['u']): Promise<void> {\n\tawait Rooms.archiveById(rid);\n\n\tconst archiveResponse = await Subscriptions.archiveByRoomId(rid);\n\tif (archiveResponse.modifiedCount) {\n\t\tvoid notifyOnSubscriptionChangedByRoomId(rid);\n\t}\n\n\tawait Message.saveSystemMessage('room-archived', rid, '', user);\n\n\tconst room = await Rooms.findOneById(rid);\n\n\tawait callbacks.run('afterRoomArchived', room, user);\n\n\tif (room) {\n\t\tvoid notifyOnRoomChanged(room);\n\t}\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/server/functions/archiveRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/archiveRoom.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/archiveRoom.ts","sourceRoot":"","sources":["app/lib/server/functions/archiveRoom.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAE3D,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,mBAAmB,EAAE,mCAAmC,EAAE,MAAM,uBAAuB,CAAC;AAEjG,MAAM,CAAC,MAAM,WAAW,GAAG,KAAK,WAAW,GAAW,EAAE,IAAmB;IAC1E,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAE7B,MAAM,eAAe,GAAG,MAAM,aAAa,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IACjE,IAAI,eAAe,CAAC,aAAa,EAAE,CAAC;QACnC,KAAK,mCAAmC,CAAC,GAAG,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,OAAO,CAAC,iBAAiB,CAAC,eAAe,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAEhE,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAE1C,MAAM,SAAS,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAErD,IAAI,IAAI,EAAE,CAAC;QACV,KAAK,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;AACF,CAAC,CAAC","sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport type { IMessage } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { notifyOnRoomChanged, notifyOnSubscriptionChangedByRoomId } from '../lib/notifyListener';\n\nexport const archiveRoom = async function (rid: string, user: IMessage['u']): Promise<void> {\n\tawait Rooms.archiveById(rid);\n\n\tconst archiveResponse = await Subscriptions.archiveByRoomId(rid);\n\tif (archiveResponse.modifiedCount) {\n\t\tvoid notifyOnSubscriptionChangedByRoomId(rid);\n\t}\n\n\tawait Message.saveSystemMessage('room-archived', rid, '', user);\n\n\tconst room = await Rooms.findOneById(rid);\n\n\tawait callbacks.run('afterRoomArchived', room, user);\n\n\tif (room) {\n\t\tvoid notifyOnRoomChanged(room);\n\t}\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      archiveRoom: () => archiveRoom\n    });\n    let Message;\n    module.link(\"@rocket.chat/core-services\", {\n      Message(v) {\n        Message = v;\n      }\n    }, 0);\n    let Rooms, Subscriptions;\n    module.link(\"@rocket.chat/models\", {\n      Rooms(v) {\n        Rooms = v;\n      },\n      Subscriptions(v) {\n        Subscriptions = v;\n      }\n    }, 1);\n    let callbacks;\n    module.link(\"../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 2);\n    let notifyOnRoomChanged, notifyOnSubscriptionChangedByRoomId;\n    module.link(\"../lib/notifyListener\", {\n      notifyOnRoomChanged(v) {\n        notifyOnRoomChanged = v;\n      },\n      notifyOnSubscriptionChangedByRoomId(v) {\n        notifyOnSubscriptionChangedByRoomId = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const archiveRoom = async function (rid, user) {\n      await Rooms.archiveById(rid);\n      const archiveResponse = await Subscriptions.archiveByRoomId(rid);\n      if (archiveResponse.modifiedCount) {\n        void notifyOnSubscriptionChangedByRoomId(rid);\n      }\n      await Message.saveSystemMessage('room-archived', rid, '', user);\n      const room = await Rooms.findOneById(rid);\n      await callbacks.run('afterRoomArchived', room, user);\n      if (room) {\n        void notifyOnRoomChanged(room);\n      }\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","archiveRoom","Message","link","v","Rooms","Subscriptions","callbacks","notifyOnRoomChanged","notifyOnSubscriptionChangedByRoomId","__reifyWaitForDeps__","rid","user","archiveById","archiveResponse","archiveByRoomId","modifiedCount","saveSystemMessage","room","findOneById","run","__reify_async_result__","_reifyError","self","async"],"sources":["app/lib/server/functions/archiveRoom.ts"],"sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport type { IMessage } from '@rocket.chat/core-typings';\nimport { Rooms, Subscriptions } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { notifyOnRoomChanged, notifyOnSubscriptionChangedByRoomId } from '../lib/notifyListener';\n\nexport const archiveRoom = async function (rid: string, user: IMessage['u']): Promise<void> {\n\tawait Rooms.archiveById(rid);\n\n\tconst archiveResponse = await Subscriptions.archiveByRoomId(rid);\n\tif (archiveResponse.modifiedCount) {\n\t\tvoid notifyOnSubscriptionChangedByRoomId(rid);\n\t}\n\n\tawait Message.saveSystemMessage('room-archived', rid, '', user);\n\n\tconst room = await Rooms.findOneById(rid);\n\n\tawait callbacks.run('afterRoomArchived', room, user);\n\n\tif (room) {\n\t\tvoid notifyOnRoomChanged(room);\n\t}\n};\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAE;MAAAC,WAAe,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,OAA6B;IAAAH,MAAA,CAAAI,IAAA;MAAAD,QAAAE,CAAA;QAAAF,OAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,KAAA,EAAAC,aAAA;IAAAP,MAAA,CAAAI,IAAA;MAAAE,MAAAD,CAAA;QAAAC,KAAA,GAAAD,CAAA;MAAA;MAAAE,cAAAF,CAAA;QAAAE,aAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,SAAA;IAAAR,MAAA,CAAAI,IAAA;MAAAI,UAAAH,CAAA;QAAAG,SAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,mBAAA,EAAAC,mCAAA;IAAAV,MAAA,CAAAI,IAAA;MAAAK,oBAAAJ,CAAA;QAAAI,mBAAA,GAAAJ,CAAA;MAAA;MAAAK,oCAAAL,CAAA;QAAAK,mCAAA,GAAAL,CAAA;MAAA;IAAA;IAAA,IAAAM,oBAAA,WAAAA,oBAAA;IAO9C,MAAMT,WAAW,GAAG,eAAAA,CAAgBU,GAAW,EAAEC,IAAmB;MAC1E,MAAMP,KAAK,CAACQ,WAAW,CAACF,GAAG,CAAC;MAE5B,MAAMG,eAAe,GAAG,MAAMR,aAAa,CAACS,eAAe,CAACJ,GAAG,CAAC;MAChE,IAAIG,eAAe,CAACE,aAAa,EAAE;QAClC,KAAKP,mCAAmC,CAACE,GAAG,CAAC;MAC9C;MAEA,MAAMT,OAAO,CAACe,iBAAiB,CAAC,eAAe,EAAEN,GAAG,EAAE,EAAE,EAAEC,IAAI,CAAC;MAE/D,MAAMM,IAAI,GAAG,MAAMb,KAAK,CAACc,WAAW,CAACR,GAAG,CAAC;MAEzC,MAAMJ,SAAS,CAACa,GAAG,CAAC,mBAAmB,EAAEF,IAAI,EAAEN,IAAI,CAAC;MAEpD,IAAIM,IAAI,EAAE;QACT,KAAKV,mBAAmB,CAACU,IAAI,CAAC;MAC/B;IACD,CAAC;IAACG,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"fda44b31e68fb5a3f0a3b64d802c33cad2d10a08"}
