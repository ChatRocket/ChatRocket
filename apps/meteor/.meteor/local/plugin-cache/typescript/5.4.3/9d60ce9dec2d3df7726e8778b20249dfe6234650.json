{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/BaseUploadModel.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/BaseUploadModel.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/BaseUploadModel.ts","inputSourceMap":{"version":3,"file":"server/models/raw/BaseUploadModel.ts","sourceRoot":"","sources":["server/models/raw/BaseUploadModel.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUpload } from '@rocket.chat/core-typings';\nimport type { IBaseUploadsModel } from '@rocket.chat/model-typings';\nimport type {\n\tDeleteResult,\n\tIndexDescription,\n\tUpdateResult,\n\tDocument,\n\tInsertOneResult,\n\tWithId,\n\tFilter,\n\tFindOptions,\n\tFindCursor,\n} from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\ntype T = IUpload;\n\nexport abstract class BaseUploadModelRaw extends BaseRaw<T> implements IBaseUploadsModel<T> {\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { name: 1 }, sparse: true },\n\t\t\t{ key: { rid: 1 }, sparse: true },\n\t\t\t{ key: { expiresAt: 1 }, sparse: true },\n\t\t];\n\t}\n\n\tasync insertFileInit(userId: string, store: string, file: { name: string }, extra: object = {}): Promise<InsertOneResult<WithId<T>>> {\n\t\tconst fileData: Partial<T> = {\n\t\t\tuserId,\n\t\t\tstore,\n\t\t\tcomplete: false,\n\t\t\tuploading: true,\n\t\t\tprogress: 0,\n\t\t\textension: file.name.split('.').pop(),\n\t\t\tuploadedAt: new Date(),\n\t\t\t...file,\n\t\t\t...extra,\n\t\t};\n\n\t\tif (fileData.type) {\n\t\t\tfileData.typeGroup = fileData.type.split('/').shift();\n\t\t}\n\n\t\treturn this.insertOne(fileData);\n\t}\n\n\tupdateFileComplete(fileId: string, userId: string, file: object): Promise<Document | UpdateResult> | undefined {\n\t\tif (!fileId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst filter = {\n\t\t\t_id: fileId,\n\t\t\tuserId,\n\t\t};\n\n\t\tconst update: Filter<T> = {\n\t\t\t$set: {\n\t\t\t\tcomplete: true,\n\t\t\t\tuploading: false,\n\t\t\t\tprogress: 1,\n\t\t\t},\n\t\t};\n\n\t\tupdate.$set = Object.assign(file, update.$set);\n\n\t\tif (update.$set.type) {\n\t\t\tupdate.$set.typeGroup = update.$set.type.split('/').shift();\n\t\t}\n\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tconfirmTemporaryFile(fileId: string, userId: string): Promise<Document | UpdateResult> | undefined {\n\t\tif (!fileId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst filter = {\n\t\t\t_id: fileId,\n\t\t\tuserId,\n\t\t};\n\n\t\tconst update: Filter<T> = {\n\t\t\t$unset: {\n\t\t\t\texpiresAt: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tasync findOneByName(name: string): Promise<T | null> {\n\t\treturn this.findOne({ name });\n\t}\n\n\tasync findOneByRoomId(rid: string): Promise<T | null> {\n\t\treturn this.findOne({ rid });\n\t}\n\n\tfindExpiredTemporaryFiles(options?: FindOptions<T>): FindCursor<T> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\texpiresAt: {\n\t\t\t\t\t$lte: new Date(),\n\t\t\t\t},\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\t}\n\n\tasync updateFileNameById(fileId: string, name: string): Promise<Document | UpdateResult> {\n\t\tconst filter = { _id: fileId };\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tname,\n\t\t\t},\n\t\t};\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tasync deleteFile(fileId: string): Promise<DeleteResult> {\n\t\treturn this.deleteOne({ _id: fileId });\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/BaseUploadModel.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/BaseUploadModel.ts","inputSourceMap":{"version":3,"file":"server/models/raw/BaseUploadModel.ts","sourceRoot":"","sources":["server/models/raw/BaseUploadModel.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUpload } from '@rocket.chat/core-typings';\nimport type { IBaseUploadsModel } from '@rocket.chat/model-typings';\nimport type {\n\tDeleteResult,\n\tIndexDescription,\n\tUpdateResult,\n\tDocument,\n\tInsertOneResult,\n\tWithId,\n\tFilter,\n\tFindOptions,\n\tFindCursor,\n} from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\ntype T = IUpload;\n\nexport abstract class BaseUploadModelRaw extends BaseRaw<T> implements IBaseUploadsModel<T> {\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { name: 1 }, sparse: true },\n\t\t\t{ key: { rid: 1 }, sparse: true },\n\t\t\t{ key: { expiresAt: 1 }, sparse: true },\n\t\t];\n\t}\n\n\tasync insertFileInit(userId: string, store: string, file: { name: string }, extra: object = {}): Promise<InsertOneResult<WithId<T>>> {\n\t\tconst fileData: Partial<T> = {\n\t\t\tuserId,\n\t\t\tstore,\n\t\t\tcomplete: false,\n\t\t\tuploading: true,\n\t\t\tprogress: 0,\n\t\t\textension: file.name.split('.').pop(),\n\t\t\tuploadedAt: new Date(),\n\t\t\t...file,\n\t\t\t...extra,\n\t\t};\n\n\t\tif (fileData.type) {\n\t\t\tfileData.typeGroup = fileData.type.split('/').shift();\n\t\t}\n\n\t\treturn this.insertOne(fileData);\n\t}\n\n\tupdateFileComplete(fileId: string, userId: string, file: object): Promise<Document | UpdateResult> | undefined {\n\t\tif (!fileId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst filter = {\n\t\t\t_id: fileId,\n\t\t\tuserId,\n\t\t};\n\n\t\tconst update: Filter<T> = {\n\t\t\t$set: {\n\t\t\t\tcomplete: true,\n\t\t\t\tuploading: false,\n\t\t\t\tprogress: 1,\n\t\t\t},\n\t\t};\n\n\t\tupdate.$set = Object.assign(file, update.$set);\n\n\t\tif (update.$set.type) {\n\t\t\tupdate.$set.typeGroup = update.$set.type.split('/').shift();\n\t\t}\n\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tconfirmTemporaryFile(fileId: string, userId: string): Promise<Document | UpdateResult> | undefined {\n\t\tif (!fileId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst filter = {\n\t\t\t_id: fileId,\n\t\t\tuserId,\n\t\t};\n\n\t\tconst update: Filter<T> = {\n\t\t\t$unset: {\n\t\t\t\texpiresAt: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tasync findOneByName(name: string): Promise<T | null> {\n\t\treturn this.findOne({ name });\n\t}\n\n\tasync findOneByRoomId(rid: string): Promise<T | null> {\n\t\treturn this.findOne({ rid });\n\t}\n\n\tfindExpiredTemporaryFiles(options?: FindOptions<T>): FindCursor<T> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\texpiresAt: {\n\t\t\t\t\t$lte: new Date(),\n\t\t\t\t},\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\t}\n\n\tasync updateFileNameById(fileId: string, name: string): Promise<Document | UpdateResult> {\n\t\tconst filter = { _id: fileId };\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tname,\n\t\t\t},\n\t\t};\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tasync deleteFile(fileId: string): Promise<DeleteResult> {\n\t\treturn this.deleteOne({ _id: fileId });\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      BaseUploadModelRaw: () => BaseUploadModelRaw\n    });\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class BaseUploadModelRaw extends BaseRaw {\n      modelIndexes() {\n        return [{\n          key: {\n            name: 1\n          },\n          sparse: true\n        }, {\n          key: {\n            rid: 1\n          },\n          sparse: true\n        }, {\n          key: {\n            expiresAt: 1\n          },\n          sparse: true\n        }];\n      }\n      async insertFileInit(userId, store, file) {\n        let extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        const fileData = _objectSpread(_objectSpread({\n          userId,\n          store,\n          complete: false,\n          uploading: true,\n          progress: 0,\n          extension: file.name.split('.').pop(),\n          uploadedAt: new Date()\n        }, file), extra);\n        if (fileData.type) {\n          fileData.typeGroup = fileData.type.split('/').shift();\n        }\n        return this.insertOne(fileData);\n      }\n      updateFileComplete(fileId, userId, file) {\n        if (!fileId) {\n          return;\n        }\n        const filter = {\n          _id: fileId,\n          userId\n        };\n        const update = {\n          $set: {\n            complete: true,\n            uploading: false,\n            progress: 1\n          }\n        };\n        update.$set = Object.assign(file, update.$set);\n        if (update.$set.type) {\n          update.$set.typeGroup = update.$set.type.split('/').shift();\n        }\n        return this.updateOne(filter, update);\n      }\n      confirmTemporaryFile(fileId, userId) {\n        if (!fileId) {\n          return;\n        }\n        const filter = {\n          _id: fileId,\n          userId\n        };\n        const update = {\n          $unset: {\n            expiresAt: 1\n          }\n        };\n        return this.updateOne(filter, update);\n      }\n      async findOneByName(name) {\n        return this.findOne({\n          name\n        });\n      }\n      async findOneByRoomId(rid) {\n        return this.findOne({\n          rid\n        });\n      }\n      findExpiredTemporaryFiles(options) {\n        return this.find({\n          expiresAt: {\n            $lte: new Date()\n          }\n        }, options);\n      }\n      async updateFileNameById(fileId, name) {\n        const filter = {\n          _id: fileId\n        };\n        const update = {\n          $set: {\n            name\n          }\n        };\n        return this.updateOne(filter, update);\n      }\n      async deleteFile(fileId) {\n        return this.deleteOne({\n          _id: fileId\n        });\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","BaseUploadModelRaw","BaseRaw","__reifyWaitForDeps__","modelIndexes","key","name","sparse","rid","expiresAt","insertFileInit","userId","store","file","extra","arguments","length","undefined","fileData","complete","uploading","progress","extension","split","pop","uploadedAt","Date","type","typeGroup","shift","insertOne","updateFileComplete","fileId","filter","_id","update","$set","Object","assign","updateOne","confirmTemporaryFile","$unset","findOneByName","findOne","findOneByRoomId","findExpiredTemporaryFiles","options","find","$lte","updateFileNameById","deleteFile","deleteOne","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/BaseUploadModel.ts"],"sourcesContent":["import type { IUpload } from '@rocket.chat/core-typings';\nimport type { IBaseUploadsModel } from '@rocket.chat/model-typings';\nimport type {\n\tDeleteResult,\n\tIndexDescription,\n\tUpdateResult,\n\tDocument,\n\tInsertOneResult,\n\tWithId,\n\tFilter,\n\tFindOptions,\n\tFindCursor,\n} from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\n\ntype T = IUpload;\n\nexport abstract class BaseUploadModelRaw extends BaseRaw<T> implements IBaseUploadsModel<T> {\n\tprotected modelIndexes(): IndexDescription[] {\n\t\treturn [\n\t\t\t{ key: { name: 1 }, sparse: true },\n\t\t\t{ key: { rid: 1 }, sparse: true },\n\t\t\t{ key: { expiresAt: 1 }, sparse: true },\n\t\t];\n\t}\n\n\tasync insertFileInit(userId: string, store: string, file: { name: string }, extra: object = {}): Promise<InsertOneResult<WithId<T>>> {\n\t\tconst fileData: Partial<T> = {\n\t\t\tuserId,\n\t\t\tstore,\n\t\t\tcomplete: false,\n\t\t\tuploading: true,\n\t\t\tprogress: 0,\n\t\t\textension: file.name.split('.').pop(),\n\t\t\tuploadedAt: new Date(),\n\t\t\t...file,\n\t\t\t...extra,\n\t\t};\n\n\t\tif (fileData.type) {\n\t\t\tfileData.typeGroup = fileData.type.split('/').shift();\n\t\t}\n\n\t\treturn this.insertOne(fileData);\n\t}\n\n\tupdateFileComplete(fileId: string, userId: string, file: object): Promise<Document | UpdateResult> | undefined {\n\t\tif (!fileId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst filter = {\n\t\t\t_id: fileId,\n\t\t\tuserId,\n\t\t};\n\n\t\tconst update: Filter<T> = {\n\t\t\t$set: {\n\t\t\t\tcomplete: true,\n\t\t\t\tuploading: false,\n\t\t\t\tprogress: 1,\n\t\t\t},\n\t\t};\n\n\t\tupdate.$set = Object.assign(file, update.$set);\n\n\t\tif (update.$set.type) {\n\t\t\tupdate.$set.typeGroup = update.$set.type.split('/').shift();\n\t\t}\n\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tconfirmTemporaryFile(fileId: string, userId: string): Promise<Document | UpdateResult> | undefined {\n\t\tif (!fileId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst filter = {\n\t\t\t_id: fileId,\n\t\t\tuserId,\n\t\t};\n\n\t\tconst update: Filter<T> = {\n\t\t\t$unset: {\n\t\t\t\texpiresAt: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tasync findOneByName(name: string): Promise<T | null> {\n\t\treturn this.findOne({ name });\n\t}\n\n\tasync findOneByRoomId(rid: string): Promise<T | null> {\n\t\treturn this.findOne({ rid });\n\t}\n\n\tfindExpiredTemporaryFiles(options?: FindOptions<T>): FindCursor<T> {\n\t\treturn this.find(\n\t\t\t{\n\t\t\t\texpiresAt: {\n\t\t\t\t\t$lte: new Date(),\n\t\t\t\t},\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\t}\n\n\tasync updateFileNameById(fileId: string, name: string): Promise<Document | UpdateResult> {\n\t\tconst filter = { _id: fileId };\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tname,\n\t\t\t},\n\t\t};\n\t\treturn this.updateOne(filter, update);\n\t}\n\n\tasync deleteFile(fileId: string): Promise<DeleteResult> {\n\t\treturn this.deleteOne({ _id: fileId });\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9d60ce9dec2d3df7726e8778b20249dfe6234650"}
