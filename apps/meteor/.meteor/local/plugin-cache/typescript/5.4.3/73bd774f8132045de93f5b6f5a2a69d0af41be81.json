{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/webdav/server/methods/uploadFileToWebdav.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/webdav/server/methods/uploadFileToWebdav.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/webdav/server/methods/uploadFileToWebdav.ts","inputSourceMap":{"version":3,"file":"app/webdav/server/methods/uploadFileToWebdav.ts","sourceRoot":"","sources":["app/webdav/server/methods/uploadFileToWebdav.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AAGzD,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAE7C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,kBAAkB,EAAE,MAAM,2BAA2B,CAAC;AAE/D,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,eAAe,CAAC,CAAC;AAa3C,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,kBAAkB,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI;QACjD,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC;YACtB,MAAM,IAAI,WAAW,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC3D,MAAM,EAAE,oBAAoB;aAC5B,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,4BAA4B,CAAC,EAAE,CAAC;YACjD,MAAM,IAAI,WAAW,CAAC,mBAAmB,EAAE,gCAAgC,EAAE;gBAC5E,MAAM,EAAE,oBAAoB;aAC5B,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC;YACJ,MAAM,kBAAkB,CAAC,SAAS,EAAE,QAAQ,YAAY,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAC9G,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;QAC1B,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACrB,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,uBAAuB,EAAE,CAAC;gBACnG,MAAM,IAAI,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,wBAAwB,EAAE;oBAC3D,MAAM,EAAE,oBAAoB;iBAC5B,CAAC,CAAC;YACJ,CAAC;YAED,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAEpB,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACpB,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC;gBAClC,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;oBACpB,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC;gBAC/D,CAAC;gBACD,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;oBACpB,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC;gBAC7D,CAAC;gBACD,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;oBACpB,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,2BAA2B,EAAE,CAAC;gBACjE,CAAC;YACF,CAAC;YACD,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC;QACxD,CAAC;IACF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { MeteorError } from '@rocket.chat/core-services';\nimport type { IWebdavAccount } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Logger } from '@rocket.chat/logger';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../settings/server';\nimport { uploadFileToWebdav } from '../lib/uploadFileToWebdav';\n\nconst logger = new Logger('WebDAV_Upload');\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tuploadFileToWebdav(\n\t\t\taccountId: IWebdavAccount['_id'],\n\t\t\tfileData: string | Buffer | ArrayBuffer,\n\t\t\tname: string,\n\t\t): { success: boolean; message?: TranslationKey };\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync uploadFileToWebdav(accountId, fileData, name) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new MeteorError('error-invalid-user', 'Invalid User', {\n\t\t\t\tmethod: 'uploadFileToWebdav',\n\t\t\t});\n\t\t}\n\n\t\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\t\tthrow new MeteorError('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\t\tmethod: 'uploadFileToWebdav',\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tawait uploadFileToWebdav(accountId, fileData instanceof ArrayBuffer ? Buffer.from(fileData) : fileData, name);\n\t\t\treturn { success: true };\n\t\t} catch (error: any) {\n\t\t\tif (typeof error === 'object' && error instanceof Error && error.name === 'error-invalid-account') {\n\t\t\t\tthrow new MeteorError(error.name, 'Invalid WebDAV Account', {\n\t\t\t\t\tmethod: 'uploadFileToWebdav',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlogger.error(error);\n\n\t\t\tif (error.response) {\n\t\t\t\tconst { status } = error.response;\n\t\t\t\tif (status === 404) {\n\t\t\t\t\treturn { success: false, message: 'webdav-server-not-found' };\n\t\t\t\t}\n\t\t\t\tif (status === 401) {\n\t\t\t\t\treturn { success: false, message: 'error-invalid-account' };\n\t\t\t\t}\n\t\t\t\tif (status === 412) {\n\t\t\t\t\treturn { success: false, message: 'Duplicate_file_name_found' };\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { success: false, message: 'FileUpload_Error' };\n\t\t}\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/webdav/server/methods/uploadFileToWebdav.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/webdav/server/methods/uploadFileToWebdav.ts","inputSourceMap":{"version":3,"file":"app/webdav/server/methods/uploadFileToWebdav.ts","sourceRoot":"","sources":["app/webdav/server/methods/uploadFileToWebdav.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AAGzD,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAE7C,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,kBAAkB,EAAE,MAAM,2BAA2B,CAAC;AAE/D,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,eAAe,CAAC,CAAC;AAa3C,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,kBAAkB,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI;QACjD,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC;YACtB,MAAM,IAAI,WAAW,CAAC,oBAAoB,EAAE,cAAc,EAAE;gBAC3D,MAAM,EAAE,oBAAoB;aAC5B,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,4BAA4B,CAAC,EAAE,CAAC;YACjD,MAAM,IAAI,WAAW,CAAC,mBAAmB,EAAE,gCAAgC,EAAE;gBAC5E,MAAM,EAAE,oBAAoB;aAC5B,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC;YACJ,MAAM,kBAAkB,CAAC,SAAS,EAAE,QAAQ,YAAY,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAC9G,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;QAC1B,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACrB,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,uBAAuB,EAAE,CAAC;gBACnG,MAAM,IAAI,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,wBAAwB,EAAE;oBAC3D,MAAM,EAAE,oBAAoB;iBAC5B,CAAC,CAAC;YACJ,CAAC;YAED,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAEpB,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACpB,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC;gBAClC,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;oBACpB,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC;gBAC/D,CAAC;gBACD,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;oBACpB,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC;gBAC7D,CAAC;gBACD,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;oBACpB,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,2BAA2B,EAAE,CAAC;gBACjE,CAAC;YACF,CAAC;YACD,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC;QACxD,CAAC;IACF,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { MeteorError } from '@rocket.chat/core-services';\nimport type { IWebdavAccount } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Logger } from '@rocket.chat/logger';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../settings/server';\nimport { uploadFileToWebdav } from '../lib/uploadFileToWebdav';\n\nconst logger = new Logger('WebDAV_Upload');\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tuploadFileToWebdav(\n\t\t\taccountId: IWebdavAccount['_id'],\n\t\t\tfileData: string | Buffer | ArrayBuffer,\n\t\t\tname: string,\n\t\t): { success: boolean; message?: TranslationKey };\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync uploadFileToWebdav(accountId, fileData, name) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new MeteorError('error-invalid-user', 'Invalid User', {\n\t\t\t\tmethod: 'uploadFileToWebdav',\n\t\t\t});\n\t\t}\n\n\t\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\t\tthrow new MeteorError('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\t\tmethod: 'uploadFileToWebdav',\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tawait uploadFileToWebdav(accountId, fileData instanceof ArrayBuffer ? Buffer.from(fileData) : fileData, name);\n\t\t\treturn { success: true };\n\t\t} catch (error: any) {\n\t\t\tif (typeof error === 'object' && error instanceof Error && error.name === 'error-invalid-account') {\n\t\t\t\tthrow new MeteorError(error.name, 'Invalid WebDAV Account', {\n\t\t\t\t\tmethod: 'uploadFileToWebdav',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlogger.error(error);\n\n\t\t\tif (error.response) {\n\t\t\t\tconst { status } = error.response;\n\t\t\t\tif (status === 404) {\n\t\t\t\t\treturn { success: false, message: 'webdav-server-not-found' };\n\t\t\t\t}\n\t\t\t\tif (status === 401) {\n\t\t\t\t\treturn { success: false, message: 'error-invalid-account' };\n\t\t\t\t}\n\t\t\t\tif (status === 412) {\n\t\t\t\t\treturn { success: false, message: 'Duplicate_file_name_found' };\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { success: false, message: 'FileUpload_Error' };\n\t\t}\n\t},\n});\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let MeteorError;\n    module.link(\"@rocket.chat/core-services\", {\n      MeteorError(v) {\n        MeteorError = v;\n      }\n    }, 0);\n    let Logger;\n    module.link(\"@rocket.chat/logger\", {\n      Logger(v) {\n        Logger = v;\n      }\n    }, 1);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    let uploadFileToWebdav;\n    module.link(\"../lib/uploadFileToWebdav\", {\n      uploadFileToWebdav(v) {\n        uploadFileToWebdav = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const logger = new Logger('WebDAV_Upload');\n    Meteor.methods({\n      async uploadFileToWebdav(accountId, fileData, name) {\n        if (!Meteor.userId()) {\n          throw new MeteorError('error-invalid-user', 'Invalid User', {\n            method: 'uploadFileToWebdav'\n          });\n        }\n        if (!settings.get('Webdav_Integration_Enabled')) {\n          throw new MeteorError('error-not-allowed', 'WebDAV Integration Not Allowed', {\n            method: 'uploadFileToWebdav'\n          });\n        }\n        try {\n          await uploadFileToWebdav(accountId, fileData instanceof ArrayBuffer ? Buffer.from(fileData) : fileData, name);\n          return {\n            success: true\n          };\n        } catch (error) {\n          if (typeof error === 'object' && error instanceof Error && error.name === 'error-invalid-account') {\n            throw new MeteorError(error.name, 'Invalid WebDAV Account', {\n              method: 'uploadFileToWebdav'\n            });\n          }\n          logger.error(error);\n          if (error.response) {\n            const {\n              status\n            } = error.response;\n            if (status === 404) {\n              return {\n                success: false,\n                message: 'webdav-server-not-found'\n              };\n            }\n            if (status === 401) {\n              return {\n                success: false,\n                message: 'error-invalid-account'\n              };\n            }\n            if (status === 412) {\n              return {\n                success: false,\n                message: 'Duplicate_file_name_found'\n              };\n            }\n          }\n          return {\n            success: false,\n            message: 'FileUpload_Error'\n          };\n        }\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["MeteorError","module","link","v","Logger","Meteor","settings","uploadFileToWebdav","__reifyWaitForDeps__","logger","methods","accountId","fileData","name","userId","method","get","ArrayBuffer","Buffer","from","success","error","Error","response","status","message","__reify_async_result__","_reifyError","self","async"],"sources":["app/webdav/server/methods/uploadFileToWebdav.ts"],"sourcesContent":["import { MeteorError } from '@rocket.chat/core-services';\nimport type { IWebdavAccount } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Logger } from '@rocket.chat/logger';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { Meteor } from 'meteor/meteor';\n\nimport { settings } from '../../../settings/server';\nimport { uploadFileToWebdav } from '../lib/uploadFileToWebdav';\n\nconst logger = new Logger('WebDAV_Upload');\n\ndeclare module '@rocket.chat/ddp-client' {\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\tinterface ServerMethods {\n\t\tuploadFileToWebdav(\n\t\t\taccountId: IWebdavAccount['_id'],\n\t\t\tfileData: string | Buffer | ArrayBuffer,\n\t\t\tname: string,\n\t\t): { success: boolean; message?: TranslationKey };\n\t}\n}\n\nMeteor.methods<ServerMethods>({\n\tasync uploadFileToWebdav(accountId, fileData, name) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new MeteorError('error-invalid-user', 'Invalid User', {\n\t\t\t\tmethod: 'uploadFileToWebdav',\n\t\t\t});\n\t\t}\n\n\t\tif (!settings.get('Webdav_Integration_Enabled')) {\n\t\t\tthrow new MeteorError('error-not-allowed', 'WebDAV Integration Not Allowed', {\n\t\t\t\tmethod: 'uploadFileToWebdav',\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tawait uploadFileToWebdav(accountId, fileData instanceof ArrayBuffer ? Buffer.from(fileData) : fileData, name);\n\t\t\treturn { success: true };\n\t\t} catch (error: any) {\n\t\t\tif (typeof error === 'object' && error instanceof Error && error.name === 'error-invalid-account') {\n\t\t\t\tthrow new MeteorError(error.name, 'Invalid WebDAV Account', {\n\t\t\t\t\tmethod: 'uploadFileToWebdav',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlogger.error(error);\n\n\t\t\tif (error.response) {\n\t\t\t\tconst { status } = error.response;\n\t\t\t\tif (status === 404) {\n\t\t\t\t\treturn { success: false, message: 'webdav-server-not-found' };\n\t\t\t\t}\n\t\t\t\tif (status === 401) {\n\t\t\t\t\treturn { success: false, message: 'error-invalid-account' };\n\t\t\t\t}\n\t\t\t\tif (status === 412) {\n\t\t\t\t\treturn { success: false, message: 'Duplicate_file_name_found' };\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { success: false, message: 'FileUpload_Error' };\n\t\t}\n\t},\n});\n"],"mappings":";;;IAAA,IAAAA,WAAS;IAAAC,MAAa,CAAAC,IAAA,CAAM,4BAA4B,EAAC;MAAAF,YAAAG,CAAA;QAAAH,WAAA,GAAAG,CAAA;MAAA;IAAA;IAAA,IAAAC,MAAA;IAAAH,MAAA,CAAAC,IAAA;MAAAE,OAAAD,CAAA;QAAAC,MAAA,GAAAD,CAAA;MAAA;IAAA;IAAA,IAAAE,MAAA;IAAAJ,MAAA,CAAAC,IAAA;MAAAG,OAAAF,CAAA;QAAAE,MAAA,GAAAF,CAAA;MAAA;IAAA;IAAA,IAAAG,QAAA;IAAAL,MAAA,CAAAC,IAAA;MAAAI,SAAAH,CAAA;QAAAG,QAAA,GAAAH,CAAA;MAAA;IAAA;IAAA,IAAAI,kBAAA;IAAAN,MAAA,CAAAC,IAAA;MAAAK,mBAAAJ,CAAA;QAAAI,kBAAA,GAAAJ,CAAA;MAAA;IAAA;IAAA,IAAAK,oBAAA,WAAAA,oBAAA;IAUzD,MAAMC,MAAM,GAAG,IAAIL,MAAM,CAAC,eAAe,CAAC;IAa1CC,MAAM,CAACK,OAAO,CAAgB;MAC7B,MAAMH,kBAAkBA,CAACI,SAAS,EAAEC,QAAQ,EAAEC,IAAI;QACjD,IAAI,CAACR,MAAM,CAACS,MAAM,EAAE,EAAE;UACrB,MAAM,IAAId,WAAW,CAAC,oBAAoB,EAAE,cAAc,EAAE;YAC3De,MAAM,EAAE;WACR,CAAC;QACH;QAEA,IAAI,CAACT,QAAQ,CAACU,GAAG,CAAC,4BAA4B,CAAC,EAAE;UAChD,MAAM,IAAIhB,WAAW,CAAC,mBAAmB,EAAE,gCAAgC,EAAE;YAC5Ee,MAAM,EAAE;WACR,CAAC;QACH;QAEA,IAAI;UACH,MAAMR,kBAAkB,CAACI,SAAS,EAAEC,QAAQ,YAAYK,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACP,QAAQ,CAAC,GAAGA,QAAQ,EAAEC,IAAI,CAAC;UAC7G,OAAO;YAAEO,OAAO,EAAE;UAAI,CAAE;QACzB,CAAC,CAAC,OAAOC,KAAU,EAAE;UACpB,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,YAAYC,KAAK,IAAID,KAAK,CAACR,IAAI,KAAK,uBAAuB,EAAE;YAClG,MAAM,IAAIb,WAAW,CAACqB,KAAK,CAACR,IAAI,EAAE,wBAAwB,EAAE;cAC3DE,MAAM,EAAE;aACR,CAAC;UACH;UAEAN,MAAM,CAACY,KAAK,CAACA,KAAK,CAAC;UAEnB,IAAIA,KAAK,CAACE,QAAQ,EAAE;YACnB,MAAM;cAAEC;YAAM,CAAE,GAAGH,KAAK,CAACE,QAAQ;YACjC,IAAIC,MAAM,KAAK,GAAG,EAAE;cACnB,OAAO;gBAAEJ,OAAO,EAAE,KAAK;gBAAEK,OAAO,EAAE;cAAyB,CAAE;YAC9D;YACA,IAAID,MAAM,KAAK,GAAG,EAAE;cACnB,OAAO;gBAAEJ,OAAO,EAAE,KAAK;gBAAEK,OAAO,EAAE;cAAuB,CAAE;YAC5D;YACA,IAAID,MAAM,KAAK,GAAG,EAAE;cACnB,OAAO;gBAAEJ,OAAO,EAAE,KAAK;gBAAEK,OAAO,EAAE;cAA2B,CAAE;YAChE;UACD;UACA,OAAO;YAAEL,OAAO,EAAE,KAAK;YAAEK,OAAO,EAAE;UAAkB,CAAE;QACvD;MACD;KACA,CAAC;IAACC,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"73bd774f8132045de93f5b6f5a2a69d0af41be81"}
