{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/NavBarV2/NavBarOmnichannelToolbar/NavBarItemOmnichannelCallToggleReady.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/NavBarV2/NavBarOmnichannelToolbar/NavBarItemOmnichannelCallToggleReady.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/NavBarV2/NavBarOmnichannelToolbar/NavBarItemOmnichannelCallToggleReady.tsx","inputSourceMap":{"version":3,"file":"client/NavBarV2/NavBarOmnichannelToolbar/NavBarItemOmnichannelCallToggleReady.tsx","sourceRoot":"","sources":["client/NavBarV2/NavBarOmnichannelToolbar/NavBarItemOmnichannelCallToggleReady.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAEnD,OAAO,KAAK,EAAE,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AAC3C,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,OAAO,EAAE,aAAa,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAIjI,MAAM,oCAAoC,GAAG,CAAC,KAAgD,EAAE,EAAE;IACjG,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAE/B,MAAM,MAAM,GAAG,aAAa,EAAE,CAAC;IAC/B,MAAM,UAAU,GAAG,uBAAuB,EAAE,CAAC;IAC7C,MAAM,QAAQ,GAAG,qBAAqB,EAAE,CAAC;IAEzC,MAAM,aAAa,GAAG,oBAAoB,EAAE,CAAC;IAC7C,MAAM,UAAU,GAAG,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAChF,MAAM,MAAM,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAElD,MAAM,iBAAiB,GAAG,WAAW,CAAC,GAAS,EAAE;QAChD,IAAI,UAAU,EAAE,CAAC;YAChB,UAAU,EAAE,CAAC;YACb,OAAO;QACR,CAAC;QACD,QAAQ,EAAE,CAAC;IACZ,CAAC,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;IAEvC,MAAM,QAAQ,GAAG,GAAW,EAAE;QAC7B,IAAI,aAAa,KAAK,SAAS,EAAE,CAAC;YACjC,OAAO,CAAC,CAAC,+BAA+B,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI,MAAM,EAAE,CAAC;YACZ,OAAO,CAAC,CAAC,8BAA8B,CAAC,CAAC;QAC1C,CAAC;QAED,IAAI,UAAU,EAAE,CAAC;YAChB,OAAO,CAAC,CAAC,uBAAuB,CAAC,CAAC;QACnC,CAAC;QAED,OAAO,CAAC,CAAC,sBAAsB,CAAC,CAAC;IAClC,CAAC,CAAC;IAEF,MAAM,OAAO,GAAG,GAA+C,EAAE;QAChE,IAAI,aAAa,KAAK,SAAS,EAAE,CAAC;YACjC,OAAO,aAAa,CAAC;QACtB,CAAC;QACD,OAAO,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,gBAAgB,CAAC;IAChD,CAAC,CAAC;IAEF,OAAO,CACN,CAAC,UAAU,CACV,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,CAChB,QAAQ,CAAC,CAAC,MAAM,CAAC,CACjB,YAAY,CAAC,CAAC,UAAU,CAAC,CACzB,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAC7B,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC,CACzB,IAAI,KAAK,CAAC,CACV,OAAO,CAAC,CAAC,UAAU,CAAC,CACpB,OAAO,CAAC,CAAC,aAAa,KAAK,SAAS,CAAC,CACrC,OAAO,CAAC,CAAC,iBAAiB,CAAC,EAC1B,CACF,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,oCAAoC,CAAC","sourcesContent":["import { NavBarItem } from '@rocket.chat/fuselage';\nimport type { ComponentPropsWithoutRef } from 'react';\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useCallerInfo, useCallRegisterClient, useCallUnregisterClient, useVoipNetworkStatus } from '../../contexts/CallContext';\n\ntype NavBarItemOmnichannelCallToggleReadyProps = ComponentPropsWithoutRef<typeof NavBarItem>;\n\nconst NavBarItemOmnichannelCallToggleReady = (props: NavBarItemOmnichannelCallToggleReadyProps) => {\n\tconst { t } = useTranslation();\n\n\tconst caller = useCallerInfo();\n\tconst unregister = useCallUnregisterClient();\n\tconst register = useCallRegisterClient();\n\n\tconst networkStatus = useVoipNetworkStatus();\n\tconst registered = !['ERROR', 'INITIAL', 'UNREGISTERED'].includes(caller.state);\n\tconst inCall = ['IN_CALL'].includes(caller.state);\n\n\tconst onClickVoipButton = useCallback((): void => {\n\t\tif (registered) {\n\t\t\tunregister();\n\t\t\treturn;\n\t\t}\n\t\tregister();\n\t}, [registered, register, unregister]);\n\n\tconst getTitle = (): string => {\n\t\tif (networkStatus === 'offline') {\n\t\t\treturn t('Waiting_for_server_connection');\n\t\t}\n\n\t\tif (inCall) {\n\t\t\treturn t('Cannot_disable_while_on_call');\n\t\t}\n\n\t\tif (registered) {\n\t\t\treturn t('Turn_off_answer_calls');\n\t\t}\n\n\t\treturn t('Turn_on_answer_calls');\n\t};\n\n\tconst getIcon = (): 'phone-issue' | 'phone' | 'phone-disabled' => {\n\t\tif (networkStatus === 'offline') {\n\t\t\treturn 'phone-issue';\n\t\t}\n\t\treturn registered ? 'phone' : 'phone-disabled';\n\t};\n\n\treturn (\n\t\t<NavBarItem\n\t\t\ticon={getIcon()}\n\t\t\tdisabled={inCall}\n\t\t\taria-checked={registered}\n\t\t\taria-label={t('VoIP_Toggle')}\n\t\t\tdata-tooltip={getTitle()}\n\t\t\t{...props}\n\t\t\tsuccess={registered}\n\t\t\twarning={networkStatus === 'offline'}\n\t\t\tonClick={onClickVoipButton}\n\t\t/>\n\t);\n};\n\nexport default NavBarItemOmnichannelCallToggleReady;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/NavBarV2/NavBarOmnichannelToolbar/NavBarItemOmnichannelCallToggleReady.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/NavBarV2/NavBarOmnichannelToolbar/NavBarItemOmnichannelCallToggleReady.tsx","inputSourceMap":{"version":3,"file":"client/NavBarV2/NavBarOmnichannelToolbar/NavBarItemOmnichannelCallToggleReady.tsx","sourceRoot":"","sources":["client/NavBarV2/NavBarOmnichannelToolbar/NavBarItemOmnichannelCallToggleReady.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAEnD,OAAO,KAAK,EAAE,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AAC3C,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,OAAO,EAAE,aAAa,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAIjI,MAAM,oCAAoC,GAAG,CAAC,KAAgD,EAAE,EAAE;IACjG,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAE/B,MAAM,MAAM,GAAG,aAAa,EAAE,CAAC;IAC/B,MAAM,UAAU,GAAG,uBAAuB,EAAE,CAAC;IAC7C,MAAM,QAAQ,GAAG,qBAAqB,EAAE,CAAC;IAEzC,MAAM,aAAa,GAAG,oBAAoB,EAAE,CAAC;IAC7C,MAAM,UAAU,GAAG,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAChF,MAAM,MAAM,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAElD,MAAM,iBAAiB,GAAG,WAAW,CAAC,GAAS,EAAE;QAChD,IAAI,UAAU,EAAE,CAAC;YAChB,UAAU,EAAE,CAAC;YACb,OAAO;QACR,CAAC;QACD,QAAQ,EAAE,CAAC;IACZ,CAAC,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;IAEvC,MAAM,QAAQ,GAAG,GAAW,EAAE;QAC7B,IAAI,aAAa,KAAK,SAAS,EAAE,CAAC;YACjC,OAAO,CAAC,CAAC,+BAA+B,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI,MAAM,EAAE,CAAC;YACZ,OAAO,CAAC,CAAC,8BAA8B,CAAC,CAAC;QAC1C,CAAC;QAED,IAAI,UAAU,EAAE,CAAC;YAChB,OAAO,CAAC,CAAC,uBAAuB,CAAC,CAAC;QACnC,CAAC;QAED,OAAO,CAAC,CAAC,sBAAsB,CAAC,CAAC;IAClC,CAAC,CAAC;IAEF,MAAM,OAAO,GAAG,GAA+C,EAAE;QAChE,IAAI,aAAa,KAAK,SAAS,EAAE,CAAC;YACjC,OAAO,aAAa,CAAC;QACtB,CAAC;QACD,OAAO,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,gBAAgB,CAAC;IAChD,CAAC,CAAC;IAEF,OAAO,CACN,CAAC,UAAU,CACV,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,CAChB,QAAQ,CAAC,CAAC,MAAM,CAAC,CACjB,YAAY,CAAC,CAAC,UAAU,CAAC,CACzB,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAC7B,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC,CACzB,IAAI,KAAK,CAAC,CACV,OAAO,CAAC,CAAC,UAAU,CAAC,CACpB,OAAO,CAAC,CAAC,aAAa,KAAK,SAAS,CAAC,CACrC,OAAO,CAAC,CAAC,iBAAiB,CAAC,EAC1B,CACF,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,oCAAoC,CAAC","sourcesContent":["import { NavBarItem } from '@rocket.chat/fuselage';\nimport type { ComponentPropsWithoutRef } from 'react';\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useCallerInfo, useCallRegisterClient, useCallUnregisterClient, useVoipNetworkStatus } from '../../contexts/CallContext';\n\ntype NavBarItemOmnichannelCallToggleReadyProps = ComponentPropsWithoutRef<typeof NavBarItem>;\n\nconst NavBarItemOmnichannelCallToggleReady = (props: NavBarItemOmnichannelCallToggleReadyProps) => {\n\tconst { t } = useTranslation();\n\n\tconst caller = useCallerInfo();\n\tconst unregister = useCallUnregisterClient();\n\tconst register = useCallRegisterClient();\n\n\tconst networkStatus = useVoipNetworkStatus();\n\tconst registered = !['ERROR', 'INITIAL', 'UNREGISTERED'].includes(caller.state);\n\tconst inCall = ['IN_CALL'].includes(caller.state);\n\n\tconst onClickVoipButton = useCallback((): void => {\n\t\tif (registered) {\n\t\t\tunregister();\n\t\t\treturn;\n\t\t}\n\t\tregister();\n\t}, [registered, register, unregister]);\n\n\tconst getTitle = (): string => {\n\t\tif (networkStatus === 'offline') {\n\t\t\treturn t('Waiting_for_server_connection');\n\t\t}\n\n\t\tif (inCall) {\n\t\t\treturn t('Cannot_disable_while_on_call');\n\t\t}\n\n\t\tif (registered) {\n\t\t\treturn t('Turn_off_answer_calls');\n\t\t}\n\n\t\treturn t('Turn_on_answer_calls');\n\t};\n\n\tconst getIcon = (): 'phone-issue' | 'phone' | 'phone-disabled' => {\n\t\tif (networkStatus === 'offline') {\n\t\t\treturn 'phone-issue';\n\t\t}\n\t\treturn registered ? 'phone' : 'phone-disabled';\n\t};\n\n\treturn (\n\t\t<NavBarItem\n\t\t\ticon={getIcon()}\n\t\t\tdisabled={inCall}\n\t\t\taria-checked={registered}\n\t\t\taria-label={t('VoIP_Toggle')}\n\t\t\tdata-tooltip={getTitle()}\n\t\t\t{...props}\n\t\t\tsuccess={registered}\n\t\t\twarning={networkStatus === 'offline'}\n\t\t\tonClick={onClickVoipButton}\n\t\t/>\n\t);\n};\n\nexport default NavBarItemOmnichannelCallToggleReady;\n"]}}},"code":"let _extends;\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n}, 0);\nlet NavBarItem;\nmodule.link(\"@rocket.chat/fuselage\", {\n  NavBarItem(v) {\n    NavBarItem = v;\n  }\n}, 0);\nlet React, useCallback;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useCallback(v) {\n    useCallback = v;\n  }\n}, 1);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 2);\nlet useCallerInfo, useCallRegisterClient, useCallUnregisterClient, useVoipNetworkStatus;\nmodule.link(\"../../contexts/CallContext\", {\n  useCallerInfo(v) {\n    useCallerInfo = v;\n  },\n  useCallRegisterClient(v) {\n    useCallRegisterClient = v;\n  },\n  useCallUnregisterClient(v) {\n    useCallUnregisterClient = v;\n  },\n  useVoipNetworkStatus(v) {\n    useVoipNetworkStatus = v;\n  }\n}, 3);\nconst NavBarItemOmnichannelCallToggleReady = props => {\n  const {\n    t\n  } = useTranslation();\n  const caller = useCallerInfo();\n  const unregister = useCallUnregisterClient();\n  const register = useCallRegisterClient();\n  const networkStatus = useVoipNetworkStatus();\n  const registered = !['ERROR', 'INITIAL', 'UNREGISTERED'].includes(caller.state);\n  const inCall = ['IN_CALL'].includes(caller.state);\n  const onClickVoipButton = useCallback(() => {\n    if (registered) {\n      unregister();\n      return;\n    }\n    register();\n  }, [registered, register, unregister]);\n  const getTitle = () => {\n    if (networkStatus === 'offline') {\n      return t('Waiting_for_server_connection');\n    }\n    if (inCall) {\n      return t('Cannot_disable_while_on_call');\n    }\n    if (registered) {\n      return t('Turn_off_answer_calls');\n    }\n    return t('Turn_on_answer_calls');\n  };\n  const getIcon = () => {\n    if (networkStatus === 'offline') {\n      return 'phone-issue';\n    }\n    return registered ? 'phone' : 'phone-disabled';\n  };\n  return /*#__PURE__*/React.createElement(NavBarItem, _extends({\n    icon: getIcon(),\n    disabled: inCall,\n    \"aria-checked\": registered,\n    \"aria-label\": t('VoIP_Toggle'),\n    \"data-tooltip\": getTitle()\n  }, props, {\n    success: registered,\n    warning: networkStatus === 'offline',\n    onClick: onClickVoipButton\n  }));\n};\nmodule.exportDefault(NavBarItemOmnichannelCallToggleReady);","map":{"version":3,"names":["_extends","module","link","default","v","NavBarItem","React","useCallback","useTranslation","useCallerInfo","useCallRegisterClient","useCallUnregisterClient","useVoipNetworkStatus","NavBarItemOmnichannelCallToggleReady","props","t","caller","unregister","register","networkStatus","registered","includes","state","inCall","onClickVoipButton","getTitle","getIcon","createElement","icon","disabled","success","warning","onClick","exportDefault"],"sources":["client/NavBarV2/NavBarOmnichannelToolbar/NavBarItemOmnichannelCallToggleReady.tsx"],"sourcesContent":["import { NavBarItem } from '@rocket.chat/fuselage';\nimport type { ComponentPropsWithoutRef } from 'react';\nimport React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useCallerInfo, useCallRegisterClient, useCallUnregisterClient, useVoipNetworkStatus } from '../../contexts/CallContext';\n\ntype NavBarItemOmnichannelCallToggleReadyProps = ComponentPropsWithoutRef<typeof NavBarItem>;\n\nconst NavBarItemOmnichannelCallToggleReady = (props: NavBarItemOmnichannelCallToggleReadyProps) => {\n\tconst { t } = useTranslation();\n\n\tconst caller = useCallerInfo();\n\tconst unregister = useCallUnregisterClient();\n\tconst register = useCallRegisterClient();\n\n\tconst networkStatus = useVoipNetworkStatus();\n\tconst registered = !['ERROR', 'INITIAL', 'UNREGISTERED'].includes(caller.state);\n\tconst inCall = ['IN_CALL'].includes(caller.state);\n\n\tconst onClickVoipButton = useCallback((): void => {\n\t\tif (registered) {\n\t\t\tunregister();\n\t\t\treturn;\n\t\t}\n\t\tregister();\n\t}, [registered, register, unregister]);\n\n\tconst getTitle = (): string => {\n\t\tif (networkStatus === 'offline') {\n\t\t\treturn t('Waiting_for_server_connection');\n\t\t}\n\n\t\tif (inCall) {\n\t\t\treturn t('Cannot_disable_while_on_call');\n\t\t}\n\n\t\tif (registered) {\n\t\t\treturn t('Turn_off_answer_calls');\n\t\t}\n\n\t\treturn t('Turn_on_answer_calls');\n\t};\n\n\tconst getIcon = (): 'phone-issue' | 'phone' | 'phone-disabled' => {\n\t\tif (networkStatus === 'offline') {\n\t\t\treturn 'phone-issue';\n\t\t}\n\t\treturn registered ? 'phone' : 'phone-disabled';\n\t};\n\n\treturn (\n\t\t<NavBarItem\n\t\t\ticon={getIcon()}\n\t\t\tdisabled={inCall}\n\t\t\taria-checked={registered}\n\t\t\taria-label={t('VoIP_Toggle')}\n\t\t\tdata-tooltip={getTitle()}\n\t\t\t{...props}\n\t\t\tsuccess={registered}\n\t\t\twarning={networkStatus === 'offline'}\n\t\t\tonClick={onClickVoipButton}\n\t\t/>\n\t);\n};\n\nexport default NavBarItemOmnichannelCallToggleReady;\n"],"mappings":"AAAA,IAAAA,QAAS;AAAAC,MAAU,CAAAC,IAAE,iCAA8B;EAAAC,QAAAC,CAAA;IAAAJ,QAAA,GAAAI,CAAA;EAAA;AAAA;AAAnD,IAAAC,UAAS;AAAAJ,MAAY,CAAAC,IAAA,CAAM,uBAAuB,EAAC;EAAAG,WAAAD,CAAA;IAAAC,UAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,KAAA,EAAAC,WAAA;AAAAN,MAAA,CAAAC,IAAA;EAAAC,QAAAC,CAAA;IAAAE,KAAA,GAAAF,CAAA;EAAA;EAAAG,YAAAH,CAAA;IAAAG,WAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAI,cAAA;AAAAP,MAAA,CAAAC,IAAA;EAAAM,eAAAJ,CAAA;IAAAI,cAAA,GAAAJ,CAAA;EAAA;AAAA;AAAA,IAAAK,aAAA,EAAAC,qBAAA,EAAAC,uBAAA,EAAAC,oBAAA;AAAAX,MAAA,CAAAC,IAAA;EAAAO,cAAAL,CAAA;IAAAK,aAAA,GAAAL,CAAA;EAAA;EAAAM,sBAAAN,CAAA;IAAAM,qBAAA,GAAAN,CAAA;EAAA;EAAAO,wBAAAP,CAAA;IAAAO,uBAAA,GAAAP,CAAA;EAAA;EAAAQ,qBAAAR,CAAA;IAAAQ,oBAAA,GAAAR,CAAA;EAAA;AAAA;AASnD,MAAMS,oCAAoC,GAAIC,KAAgD,IAAI;EACjG,MAAM;IAAEC;EAAC,CAAE,GAAGP,cAAc,EAAE;EAE9B,MAAMQ,MAAM,GAAGP,aAAa,EAAE;EAC9B,MAAMQ,UAAU,GAAGN,uBAAuB,EAAE;EAC5C,MAAMO,QAAQ,GAAGR,qBAAqB,EAAE;EAExC,MAAMS,aAAa,GAAGP,oBAAoB,EAAE;EAC5C,MAAMQ,UAAU,GAAG,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,cAAc,CAAC,CAACC,QAAQ,CAACL,MAAM,CAACM,KAAK,CAAC;EAC/E,MAAMC,MAAM,GAAG,CAAC,SAAS,CAAC,CAACF,QAAQ,CAACL,MAAM,CAACM,KAAK,CAAC;EAEjD,MAAME,iBAAiB,GAAGjB,WAAW,CAAC,MAAW;IAChD,IAAIa,UAAU,EAAE;MACfH,UAAU,EAAE;MACZ;IACD;IACAC,QAAQ,EAAE;EACX,CAAC,EAAE,CAACE,UAAU,EAAEF,QAAQ,EAAED,UAAU,CAAC,CAAC;EAEtC,MAAMQ,QAAQ,GAAGA,CAAA,KAAa;IAC7B,IAAIN,aAAa,KAAK,SAAS,EAAE;MAChC,OAAOJ,CAAC,CAAC,+BAA+B,CAAC;IAC1C;IAEA,IAAIQ,MAAM,EAAE;MACX,OAAOR,CAAC,CAAC,8BAA8B,CAAC;IACzC;IAEA,IAAIK,UAAU,EAAE;MACf,OAAOL,CAAC,CAAC,uBAAuB,CAAC;IAClC;IAEA,OAAOA,CAAC,CAAC,sBAAsB,CAAC;EACjC,CAAC;EAED,MAAMW,OAAO,GAAGA,CAAA,KAAiD;IAChE,IAAIP,aAAa,KAAK,SAAS,EAAE;MAChC,OAAO,aAAa;IACrB;IACA,OAAOC,UAAU,GAAG,OAAO,GAAG,gBAAgB;EAC/C,CAAC;EAED,oBACCd,KAAA,CAAAqB,aAAA,CAACtB,UAAU,EAAAL,QAAA;IACV4B,IAAI,EAAEF,OAAO,EAAG;IAChBG,QAAQ,EAAEN,MAAO;IACjB,gBAAcH,UAAW;IACzB,cAAYL,CAAC,CAAC,aAAa,CAAE;IAC7B,gBAAcU,QAAQ;EAAG,GACrBX,KAAK;IACTgB,OAAO,EAAEV,UAAW;IACpBW,OAAO,EAAEZ,aAAa,KAAK,SAAU;IACrCa,OAAO,EAAER;EAAkB,GAC1B;AAEJ,CAAC;AAhEDvB,MAAA,CAAOgC,aAAY,CAkEJpB,oCAlEM","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"a204d2ce8ff5ba7b60d609c09d7e79712b6191ec"}
