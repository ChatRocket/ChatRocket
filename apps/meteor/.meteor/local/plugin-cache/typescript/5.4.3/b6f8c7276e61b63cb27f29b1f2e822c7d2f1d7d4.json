{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/api/licenses.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/server/api/licenses.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/api/licenses.ts","inputSourceMap":{"version":3,"file":"ee/server/api/licenses.ts","sourceRoot":"","sources":["ee/server/api/licenses.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,2BAA2B,CAAC;AAChE,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAErC,OAAO,EAAE,GAAG,EAAE,MAAM,6BAA6B,CAAC;AAClD,OAAO,EAAE,kBAAkB,EAAE,MAAM,2DAA2D,CAAC;AAC/F,OAAO,EAAE,0BAA0B,EAAE,MAAM,4CAA4C,CAAC;AAExF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,eAAe,EACf,EAAE,YAAY,EAAE,IAAI,EAAE,cAAc,EAAE,mBAAmB,EAAE,EAC3D;IACC,KAAK,CAAC,GAAG;QACR,MAAM,kBAAkB,GAAG,MAAM,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,yBAAyB,CAAC,CAAC;QAC5F,MAAM,iBAAiB,GAAG,kBAAkB,IAAI,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAErF,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,kBAAkB,EAAE,OAAO,EAAE,kBAAkB,EAAE,aAAa,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAErI,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;IACpC,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,cAAc,EACd,EAAE,YAAY,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,yBAAyB,CAAC,EAAE,EACxE;IACC,KAAK,CAAC,IAAI;QACT,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE;YACtB,OAAO,EAAE,MAAM;SACf,CAAC,CAAC;QAEH,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;YAC9C,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAC1C,CAAC;QAED,CAAC,MAAM,QAAQ,CAAC,eAAe,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC,CAAC,aAAa;YAC5E,KAAK,0BAA0B,CAAC,oBAAoB,CAAC,CAAC;QAEvD,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,yBAAyB,EACzB,EAAE,YAAY,EAAE,IAAI,EAAE,EACtB;IACC,KAAK,CAAC,GAAG;QACR,MAAM,cAAc,GAAG,OAAO,CAAC,iBAAiB,EAAE,CAAC;QACnD,MAAM,WAAW,GAAG,MAAM,KAAK,CAAC,uBAAuB,EAAE,CAAC;QAE1D,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,cAAc,EAAE,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;IACpG,CAAC;CACD,CACD,CAAC","sourcesContent":["import { License } from '@rocket.chat/license';\nimport { Settings, Users } from '@rocket.chat/models';\nimport { isLicensesInfoProps } from '@rocket.chat/rest-typings';\nimport { check } from 'meteor/check';\n\nimport { API } from '../../../app/api/server/api';\nimport { hasPermissionAsync } from '../../../app/authorization/server/functions/hasPermission';\nimport { notifyOnSettingChangedById } from '../../../app/lib/server/lib/notifyListener';\n\nAPI.v1.addRoute(\n\t'licenses.info',\n\t{ authRequired: true, validateParams: isLicensesInfoProps },\n\t{\n\t\tasync get() {\n\t\t\tconst unrestrictedAccess = await hasPermissionAsync(this.userId, 'view-privileged-setting');\n\t\t\tconst loadCurrentValues = unrestrictedAccess && Boolean(this.queryParams.loadValues);\n\n\t\t\tconst license = await License.getInfo({ limits: unrestrictedAccess, license: unrestrictedAccess, currentValues: loadCurrentValues });\n\n\t\t\treturn API.v1.success({ license });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'licenses.add',\n\t{ authRequired: true, permissionsRequired: ['edit-privileged-setting'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tlicense: String,\n\t\t\t});\n\n\t\t\tconst { license } = this.bodyParams;\n\t\t\tif (!(await License.validateFormat(license))) {\n\t\t\t\treturn API.v1.failure('Invalid license');\n\t\t\t}\n\n\t\t\t(await Settings.updateValueById('Enterprise_License', license)).modifiedCount &&\n\t\t\t\tvoid notifyOnSettingChangedById('Enterprise_License');\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'licenses.maxActiveUsers',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst maxActiveUsers = License.getMaxActiveUsers();\n\t\t\tconst activeUsers = await Users.getActiveLocalUserCount();\n\n\t\t\treturn API.v1.success({ maxActiveUsers: maxActiveUsers > 0 ? maxActiveUsers : null, activeUsers });\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/server/api/licenses.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/api/licenses.ts","inputSourceMap":{"version":3,"file":"ee/server/api/licenses.ts","sourceRoot":"","sources":["ee/server/api/licenses.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,mBAAmB,EAAE,MAAM,2BAA2B,CAAC;AAChE,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAErC,OAAO,EAAE,GAAG,EAAE,MAAM,6BAA6B,CAAC;AAClD,OAAO,EAAE,kBAAkB,EAAE,MAAM,2DAA2D,CAAC;AAC/F,OAAO,EAAE,0BAA0B,EAAE,MAAM,4CAA4C,CAAC;AAExF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,eAAe,EACf,EAAE,YAAY,EAAE,IAAI,EAAE,cAAc,EAAE,mBAAmB,EAAE,EAC3D;IACC,KAAK,CAAC,GAAG;QACR,MAAM,kBAAkB,GAAG,MAAM,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE,yBAAyB,CAAC,CAAC;QAC5F,MAAM,iBAAiB,GAAG,kBAAkB,IAAI,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAErF,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,kBAAkB,EAAE,OAAO,EAAE,kBAAkB,EAAE,aAAa,EAAE,iBAAiB,EAAE,CAAC,CAAC;QAErI,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;IACpC,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,cAAc,EACd,EAAE,YAAY,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,yBAAyB,CAAC,EAAE,EACxE;IACC,KAAK,CAAC,IAAI;QACT,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE;YACtB,OAAO,EAAE,MAAM;SACf,CAAC,CAAC;QAEH,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;YAC9C,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAC1C,CAAC;QAED,CAAC,MAAM,QAAQ,CAAC,eAAe,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC,CAAC,aAAa;YAC5E,KAAK,0BAA0B,CAAC,oBAAoB,CAAC,CAAC;QAEvD,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;CACD,CACD,CAAC;AAEF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,yBAAyB,EACzB,EAAE,YAAY,EAAE,IAAI,EAAE,EACtB;IACC,KAAK,CAAC,GAAG;QACR,MAAM,cAAc,GAAG,OAAO,CAAC,iBAAiB,EAAE,CAAC;QACnD,MAAM,WAAW,GAAG,MAAM,KAAK,CAAC,uBAAuB,EAAE,CAAC;QAE1D,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,cAAc,EAAE,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;IACpG,CAAC;CACD,CACD,CAAC","sourcesContent":["import { License } from '@rocket.chat/license';\nimport { Settings, Users } from '@rocket.chat/models';\nimport { isLicensesInfoProps } from '@rocket.chat/rest-typings';\nimport { check } from 'meteor/check';\n\nimport { API } from '../../../app/api/server/api';\nimport { hasPermissionAsync } from '../../../app/authorization/server/functions/hasPermission';\nimport { notifyOnSettingChangedById } from '../../../app/lib/server/lib/notifyListener';\n\nAPI.v1.addRoute(\n\t'licenses.info',\n\t{ authRequired: true, validateParams: isLicensesInfoProps },\n\t{\n\t\tasync get() {\n\t\t\tconst unrestrictedAccess = await hasPermissionAsync(this.userId, 'view-privileged-setting');\n\t\t\tconst loadCurrentValues = unrestrictedAccess && Boolean(this.queryParams.loadValues);\n\n\t\t\tconst license = await License.getInfo({ limits: unrestrictedAccess, license: unrestrictedAccess, currentValues: loadCurrentValues });\n\n\t\t\treturn API.v1.success({ license });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'licenses.add',\n\t{ authRequired: true, permissionsRequired: ['edit-privileged-setting'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tlicense: String,\n\t\t\t});\n\n\t\t\tconst { license } = this.bodyParams;\n\t\t\tif (!(await License.validateFormat(license))) {\n\t\t\t\treturn API.v1.failure('Invalid license');\n\t\t\t}\n\n\t\t\t(await Settings.updateValueById('Enterprise_License', license)).modifiedCount &&\n\t\t\t\tvoid notifyOnSettingChangedById('Enterprise_License');\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'licenses.maxActiveUsers',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst maxActiveUsers = License.getMaxActiveUsers();\n\t\t\tconst activeUsers = await Users.getActiveLocalUserCount();\n\n\t\t\treturn API.v1.success({ maxActiveUsers: maxActiveUsers > 0 ? maxActiveUsers : null, activeUsers });\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let License;\n    module.link(\"@rocket.chat/license\", {\n      License(v) {\n        License = v;\n      }\n    }, 0);\n    let Settings, Users;\n    module.link(\"@rocket.chat/models\", {\n      Settings(v) {\n        Settings = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 1);\n    let isLicensesInfoProps;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isLicensesInfoProps(v) {\n        isLicensesInfoProps = v;\n      }\n    }, 2);\n    let check;\n    module.link(\"meteor/check\", {\n      check(v) {\n        check = v;\n      }\n    }, 3);\n    let API;\n    module.link(\"../../../app/api/server/api\", {\n      API(v) {\n        API = v;\n      }\n    }, 4);\n    let hasPermissionAsync;\n    module.link(\"../../../app/authorization/server/functions/hasPermission\", {\n      hasPermissionAsync(v) {\n        hasPermissionAsync = v;\n      }\n    }, 5);\n    let notifyOnSettingChangedById;\n    module.link(\"../../../app/lib/server/lib/notifyListener\", {\n      notifyOnSettingChangedById(v) {\n        notifyOnSettingChangedById = v;\n      }\n    }, 6);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('licenses.info', {\n      authRequired: true,\n      validateParams: isLicensesInfoProps\n    }, {\n      async get() {\n        const unrestrictedAccess = await hasPermissionAsync(this.userId, 'view-privileged-setting');\n        const loadCurrentValues = unrestrictedAccess && Boolean(this.queryParams.loadValues);\n        const license = await License.getInfo({\n          limits: unrestrictedAccess,\n          license: unrestrictedAccess,\n          currentValues: loadCurrentValues\n        });\n        return API.v1.success({\n          license\n        });\n      }\n    });\n    API.v1.addRoute('licenses.add', {\n      authRequired: true,\n      permissionsRequired: ['edit-privileged-setting']\n    }, {\n      async post() {\n        check(this.bodyParams, {\n          license: String\n        });\n        const {\n          license\n        } = this.bodyParams;\n        if (!(await License.validateFormat(license))) {\n          return API.v1.failure('Invalid license');\n        }\n        (await Settings.updateValueById('Enterprise_License', license)).modifiedCount && void notifyOnSettingChangedById('Enterprise_License');\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('licenses.maxActiveUsers', {\n      authRequired: true\n    }, {\n      async get() {\n        const maxActiveUsers = License.getMaxActiveUsers();\n        const activeUsers = await Users.getActiveLocalUserCount();\n        return API.v1.success({\n          maxActiveUsers: maxActiveUsers > 0 ? maxActiveUsers : null,\n          activeUsers\n        });\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["License","module","link","v","Settings","Users","isLicensesInfoProps","check","API","hasPermissionAsync","notifyOnSettingChangedById","__reifyWaitForDeps__","v1","addRoute","authRequired","validateParams","get","unrestrictedAccess","userId","loadCurrentValues","Boolean","queryParams","loadValues","license","getInfo","limits","currentValues","success","permissionsRequired","post","bodyParams","String","validateFormat","failure","updateValueById","modifiedCount","maxActiveUsers","getMaxActiveUsers","activeUsers","getActiveLocalUserCount","__reify_async_result__","_reifyError","self","async"],"sources":["ee/server/api/licenses.ts"],"sourcesContent":["import { License } from '@rocket.chat/license';\nimport { Settings, Users } from '@rocket.chat/models';\nimport { isLicensesInfoProps } from '@rocket.chat/rest-typings';\nimport { check } from 'meteor/check';\n\nimport { API } from '../../../app/api/server/api';\nimport { hasPermissionAsync } from '../../../app/authorization/server/functions/hasPermission';\nimport { notifyOnSettingChangedById } from '../../../app/lib/server/lib/notifyListener';\n\nAPI.v1.addRoute(\n\t'licenses.info',\n\t{ authRequired: true, validateParams: isLicensesInfoProps },\n\t{\n\t\tasync get() {\n\t\t\tconst unrestrictedAccess = await hasPermissionAsync(this.userId, 'view-privileged-setting');\n\t\t\tconst loadCurrentValues = unrestrictedAccess && Boolean(this.queryParams.loadValues);\n\n\t\t\tconst license = await License.getInfo({ limits: unrestrictedAccess, license: unrestrictedAccess, currentValues: loadCurrentValues });\n\n\t\t\treturn API.v1.success({ license });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'licenses.add',\n\t{ authRequired: true, permissionsRequired: ['edit-privileged-setting'] },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.bodyParams, {\n\t\t\t\tlicense: String,\n\t\t\t});\n\n\t\t\tconst { license } = this.bodyParams;\n\t\t\tif (!(await License.validateFormat(license))) {\n\t\t\t\treturn API.v1.failure('Invalid license');\n\t\t\t}\n\n\t\t\t(await Settings.updateValueById('Enterprise_License', license)).modifiedCount &&\n\t\t\t\tvoid notifyOnSettingChangedById('Enterprise_License');\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'licenses.maxActiveUsers',\n\t{ authRequired: true },\n\t{\n\t\tasync get() {\n\t\t\tconst maxActiveUsers = License.getMaxActiveUsers();\n\t\t\tconst activeUsers = await Users.getActiveLocalUserCount();\n\n\t\t\treturn API.v1.success({ maxActiveUsers: maxActiveUsers > 0 ? maxActiveUsers : null, activeUsers });\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"b6f8c7276e61b63cb27f29b1f2e822c7d2f1d7d4"}
