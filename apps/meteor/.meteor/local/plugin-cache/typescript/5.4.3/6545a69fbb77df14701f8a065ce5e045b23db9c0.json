{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/LivechatDepartment.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/LivechatDepartment.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/LivechatDepartment.ts","inputSourceMap":{"version":3,"file":"server/models/raw/LivechatDepartment.ts","sourceRoot":"","sources":["server/models/raw/LivechatDepartment.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatDepartment, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ILivechatDepartmentModel } from '@rocket.chat/model-typings';\nimport { LivechatDepartmentAgents, LivechatUnitMonitors } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type {\n\tCollection,\n\tFindCursor,\n\tDb,\n\tFilter,\n\tFindOptions,\n\tUpdateResult,\n\tDocument,\n\tIndexDescription,\n\tDeleteResult,\n\tUpdateFilter,\n\tAggregationCursor,\n} from 'mongodb';\n\nimport { notifyOnLivechatDepartmentAgentChangedByDepartmentId } from '../../../app/lib/server/lib/notifyListener';\nimport { BaseRaw } from './BaseRaw';\n\nexport class LivechatDepartmentRaw extends BaseRaw<ILivechatDepartment> implements ILivechatDepartmentModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ILivechatDepartment>>) {\n\t\tsuper(db, 'livechat_department', trash);\n\t}\n\n\tunfilteredFind(_query: Filter<ILivechatDepartment>, _options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tunfilteredFindOne(_query: Filter<ILivechatDepartment>, _options: FindOptions<ILivechatDepartment>): Promise<ILivechatDepartment | null> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tunfilteredUpdate(\n\t\t_query: Filter<ILivechatDepartment>,\n\t\t_update: UpdateFilter<ILivechatDepartment>,\n\t\t_options: FindOptions<ILivechatDepartment>,\n\t): Promise<UpdateResult> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tunfilteredRemove(_query: Filter<ILivechatDepartment>): Promise<DeleteResult> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tremoveParentAndAncestorById(_id: string): Promise<Document | UpdateResult> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tprotected modelIndexes(): Array<IndexDescription> {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tname: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tbusinessHourId: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\ttype: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tnumAgents: 1,\n\t\t\t\t\tenabled: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tparentId: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tancestors: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tarchived: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t];\n\t}\n\n\tcountTotal(): Promise<number> {\n\t\treturn this.col.countDocuments();\n\t}\n\n\tfindInIds(departmentsIds: string[], options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = { _id: { $in: departmentsIds } };\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByNameRegexWithExceptionsAndConditions(\n\t\tsearchTerm: string,\n\t\texceptions: string[] = [],\n\t\tconditions: Filter<ILivechatDepartment> = {},\n\t\toptions: FindOptions<ILivechatDepartment> = {},\n\t): FindCursor<ILivechatDepartment> {\n\t\tif (!Array.isArray(exceptions)) {\n\t\t\texceptions = [exceptions];\n\t\t}\n\n\t\tconst nameRegex = new RegExp(`^${escapeRegExp(searchTerm).trim()}`, 'i');\n\n\t\tconst query = {\n\t\t\tname: nameRegex,\n\t\t\t_id: {\n\t\t\t\t$nin: exceptions,\n\t\t\t},\n\t\t\t...conditions,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByBusinessHourId(businessHourId: string, options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = { businessHourId };\n\t\treturn this.find(query, options);\n\t}\n\n\tcountByBusinessHourIdExcludingDepartmentId(businessHourId: string, departmentId: string): Promise<number> {\n\t\tconst query = { businessHourId, _id: { $ne: departmentId } };\n\t\treturn this.col.countDocuments(query);\n\t}\n\n\tfindEnabledByBusinessHourId(businessHourId: string, options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = { businessHourId, enabled: true };\n\t\treturn this.find(query, options);\n\t}\n\n\tfindActiveDepartmentsWithoutBusinessHour(options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = {\n\t\t\tenabled: true,\n\t\t\tbusinessHourId: { $exists: false },\n\t\t};\n\t\treturn this.find(query, options);\n\t}\n\n\tfindEnabledByListOfBusinessHourIdsAndDepartmentIds(\n\t\tbusinessHourIds: string[],\n\t\tdepartmentIds: string[],\n\t\toptions: FindOptions<ILivechatDepartment>,\n\t): FindCursor<ILivechatDepartment> {\n\t\tconst query: Filter<ILivechatDepartment> = {\n\t\t\tenabled: true,\n\t\t\tbusinessHourId: {\n\t\t\t\t$in: businessHourIds,\n\t\t\t},\n\t\t\t_id: {\n\t\t\t\t$in: departmentIds,\n\t\t\t},\n\t\t};\n\t\treturn this.find(query, options);\n\t}\n\n\tfindEnabledInIds(departmentsIds: string[], options?: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = { _id: { $in: departmentsIds }, enabled: true };\n\t\treturn this.find(query, options);\n\t}\n\n\taddBusinessHourToDepartmentsByIds(ids: string[] = [], businessHourId: string): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tbusinessHourId,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateMany(query, update);\n\t}\n\n\tremoveBusinessHourFromDepartmentsByIdsAndBusinessHourId(ids: string[] = [], businessHourId: string): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t\tbusinessHourId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$unset: {\n\t\t\t\tbusinessHourId: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateMany(query, update);\n\t}\n\n\tremoveBusinessHourFromDepartmentsByBusinessHourId(businessHourId: string): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tbusinessHourId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$unset: {\n\t\t\t\tbusinessHourId: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateMany(query, update);\n\t}\n\n\tunarchiveDepartment(_id: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { archived: false } });\n\t}\n\n\tarchiveDepartment(_id: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { archived: true, enabled: false } });\n\t}\n\n\taddDepartmentToUnit(_id: string, unitId: string, ancestors: string[]): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { parentId: unitId, ancestors } });\n\t}\n\n\tremoveDepartmentFromUnit(_id: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { parentId: null, ancestors: null } });\n\t}\n\n\tasync createOrUpdateDepartment(\n\t\t_id: string | null,\n\t\tdata: {\n\t\t\tenabled: boolean;\n\t\t\tname: string;\n\t\t\tdescription?: string;\n\t\t\tshowOnRegistration: boolean;\n\t\t\temail: string;\n\t\t\tshowOnOfflineForm: boolean;\n\t\t\trequestTagBeforeClosingChat?: boolean;\n\t\t\tchatClosingTags?: string[];\n\t\t\tfallbackForwardDepartment?: string;\n\t\t\tdepartmentsAllowedToForward?: string[];\n\t\t\ttype?: string;\n\t\t},\n\t): Promise<ILivechatDepartment> {\n\t\tconst current = _id ? await this.findOneById(_id) : null;\n\n\t\tconst record = {\n\t\t\t...data,\n\t\t} as ILivechatDepartment;\n\n\t\tif (_id) {\n\t\t\tawait this.updateOne({ _id }, { $set: record });\n\t\t} else {\n\t\t\t_id = (await this.insertOne(record)).insertedId;\n\t\t}\n\n\t\tif (current?.enabled !== data.enabled) {\n\t\t\tawait LivechatDepartmentAgents.setDepartmentEnabledByDepartmentId(_id, data.enabled);\n\t\t\tvoid notifyOnLivechatDepartmentAgentChangedByDepartmentId(_id, current ? 'updated' : 'inserted');\n\t\t}\n\n\t\tconst latestDept = await this.findOneById(_id);\n\t\tif (!latestDept) {\n\t\t\tthrow new Error(`Department ${_id} not found`);\n\t\t}\n\n\t\treturn latestDept;\n\t}\n\n\tunsetFallbackDepartmentByDepartmentId(departmentId: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany({ fallbackDepartment: departmentId }, { $unset: { fallbackDepartment: 1 } });\n\t}\n\n\tremoveDepartmentFromForwardListById(_departmentId: string): Promise<void> {\n\t\tthrow new Error('Method not implemented in Community Edition.');\n\t}\n\n\tupdateById(_id: string, update: Partial<ILivechatDepartment>): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, update);\n\t}\n\n\tupdateNumAgentsById(_id: string, numAgents: number): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { numAgents } });\n\t}\n\n\tdecreaseNumberOfAgentsByIds(_ids: string[]): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany({ _id: { $in: _ids } }, { $inc: { numAgents: -1 } });\n\t}\n\n\tfindEnabledWithAgents(projection: FindOptions<ILivechatDepartment>['projection'] = {}): FindCursor<ILivechatDepartment> {\n\t\tconst query = {\n\t\t\tnumAgents: { $gt: 0 },\n\t\t\tenabled: true,\n\t\t};\n\t\treturn this.find(query, projection && { projection });\n\t}\n\n\tasync findEnabledWithAgentsAndBusinessUnit(\n\t\t_: any,\n\t\tprojection: FindOptions<ILivechatDepartment>['projection'] = {},\n\t): Promise<FindCursor<ILivechatDepartment>> {\n\t\tconst query = {\n\t\t\tnumAgents: { $gt: 0 },\n\t\t\tenabled: true,\n\t\t};\n\t\treturn this.find(query, projection && { projection });\n\t}\n\n\tfindOneByIdOrName(_idOrName: string, options: FindOptions<ILivechatDepartment> = {}): Promise<ILivechatDepartment | null> {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindByUnitIds(unitIds: string[], options: FindOptions<ILivechatDepartment> = {}): FindCursor<ILivechatDepartment> {\n\t\tconst query = {\n\t\t\tparentId: {\n\t\t\t\t$exists: true,\n\t\t\t\t$in: unitIds,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tcountDepartmentsInUnit(unitId: string): Promise<number> {\n\t\treturn this.countDocuments({ parentId: unitId });\n\t}\n\n\tfindActiveByUnitIds(unitIds: string[], options: FindOptions<ILivechatDepartment> = {}): FindCursor<ILivechatDepartment> {\n\t\tconst query = {\n\t\t\tenabled: true,\n\t\t\tnumAgents: { $gt: 0 },\n\t\t\tparentId: {\n\t\t\t\t$exists: true,\n\t\t\t\t$in: unitIds,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindNotArchived(options: FindOptions<ILivechatDepartment> = {}): FindCursor<ILivechatDepartment> {\n\t\tconst query = { archived: { $ne: false } };\n\n\t\treturn this.find(query, options);\n\t}\n\n\tgetBusinessHoursWithDepartmentStatuses(): Promise<\n\t\t{\n\t\t\t_id: string;\n\t\t\tvalidDepartments: string[];\n\t\t\tinvalidDepartments: string[];\n\t\t}[]\n\t> {\n\t\treturn this.col\n\t\t\t.aggregate<{ _id: string; validDepartments: string[]; invalidDepartments: string[] }>([\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\tbusinessHourId: {\n\t\t\t\t\t\t\t$exists: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: '$businessHourId',\n\t\t\t\t\t\tvalidDepartments: {\n\t\t\t\t\t\t\t$push: {\n\t\t\t\t\t\t\t\t$cond: {\n\t\t\t\t\t\t\t\t\tif: {\n\t\t\t\t\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$eq: ['$enabled', true],\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$ne: ['$archived', true],\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tthen: '$_id',\n\t\t\t\t\t\t\t\t\telse: '$$REMOVE',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinvalidDepartments: {\n\t\t\t\t\t\t\t$push: {\n\t\t\t\t\t\t\t\t$cond: {\n\t\t\t\t\t\t\t\t\tif: {\n\t\t\t\t\t\t\t\t\t\t$or: [{ $eq: ['$enabled', false] }, { $eq: ['$archived', true] }],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tthen: '$_id',\n\t\t\t\t\t\t\t\t\telse: '$$REMOVE',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t])\n\t\t\t.toArray();\n\t}\n\n\tcheckIfMonitorIsMonitoringDepartmentById(monitorId: string, departmentId: string): Promise<boolean> {\n\t\tconst aggregation = [\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\t_id: departmentId,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$lookup: {\n\t\t\t\t\tfrom: LivechatUnitMonitors.getCollectionName(),\n\t\t\t\t\tlocalField: 'parentId',\n\t\t\t\t\tforeignField: 'unitId',\n\t\t\t\t\tas: 'monitors',\n\t\t\t\t\tpipeline: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$match: {\n\t\t\t\t\t\t\t\tmonitorId,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\tmonitors: {\n\t\t\t\t\t\t$exists: true,\n\t\t\t\t\t\t$ne: [],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$project: {\n\t\t\t\t\t_id: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\treturn this.col.aggregate(aggregation).hasNext();\n\t}\n\n\tcountArchived(): Promise<number> {\n\t\treturn this.col.countDocuments({ archived: true });\n\t}\n\n\tfindByParentId(_parentId: string, _options?: FindOptions<ILivechatDepartment> | undefined): FindCursor<ILivechatDepartment> {\n\t\tthrow new Error('Method not implemented in CE');\n\t}\n\n\tfindAgentsByBusinessHourId(_businessHourId: string): AggregationCursor<{ agentIds: string[] }> {\n\t\tthrow new Error('Method not implemented in CE');\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/LivechatDepartment.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/LivechatDepartment.ts","inputSourceMap":{"version":3,"file":"server/models/raw/LivechatDepartment.ts","sourceRoot":"","sources":["server/models/raw/LivechatDepartment.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ILivechatDepartment, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ILivechatDepartmentModel } from '@rocket.chat/model-typings';\nimport { LivechatDepartmentAgents, LivechatUnitMonitors } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type {\n\tCollection,\n\tFindCursor,\n\tDb,\n\tFilter,\n\tFindOptions,\n\tUpdateResult,\n\tDocument,\n\tIndexDescription,\n\tDeleteResult,\n\tUpdateFilter,\n\tAggregationCursor,\n} from 'mongodb';\n\nimport { notifyOnLivechatDepartmentAgentChangedByDepartmentId } from '../../../app/lib/server/lib/notifyListener';\nimport { BaseRaw } from './BaseRaw';\n\nexport class LivechatDepartmentRaw extends BaseRaw<ILivechatDepartment> implements ILivechatDepartmentModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ILivechatDepartment>>) {\n\t\tsuper(db, 'livechat_department', trash);\n\t}\n\n\tunfilteredFind(_query: Filter<ILivechatDepartment>, _options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tunfilteredFindOne(_query: Filter<ILivechatDepartment>, _options: FindOptions<ILivechatDepartment>): Promise<ILivechatDepartment | null> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tunfilteredUpdate(\n\t\t_query: Filter<ILivechatDepartment>,\n\t\t_update: UpdateFilter<ILivechatDepartment>,\n\t\t_options: FindOptions<ILivechatDepartment>,\n\t): Promise<UpdateResult> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tunfilteredRemove(_query: Filter<ILivechatDepartment>): Promise<DeleteResult> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tremoveParentAndAncestorById(_id: string): Promise<Document | UpdateResult> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tprotected modelIndexes(): Array<IndexDescription> {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tname: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tbusinessHourId: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\ttype: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tnumAgents: 1,\n\t\t\t\t\tenabled: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tparentId: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tancestors: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tarchived: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t];\n\t}\n\n\tcountTotal(): Promise<number> {\n\t\treturn this.col.countDocuments();\n\t}\n\n\tfindInIds(departmentsIds: string[], options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = { _id: { $in: departmentsIds } };\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByNameRegexWithExceptionsAndConditions(\n\t\tsearchTerm: string,\n\t\texceptions: string[] = [],\n\t\tconditions: Filter<ILivechatDepartment> = {},\n\t\toptions: FindOptions<ILivechatDepartment> = {},\n\t): FindCursor<ILivechatDepartment> {\n\t\tif (!Array.isArray(exceptions)) {\n\t\t\texceptions = [exceptions];\n\t\t}\n\n\t\tconst nameRegex = new RegExp(`^${escapeRegExp(searchTerm).trim()}`, 'i');\n\n\t\tconst query = {\n\t\t\tname: nameRegex,\n\t\t\t_id: {\n\t\t\t\t$nin: exceptions,\n\t\t\t},\n\t\t\t...conditions,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByBusinessHourId(businessHourId: string, options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = { businessHourId };\n\t\treturn this.find(query, options);\n\t}\n\n\tcountByBusinessHourIdExcludingDepartmentId(businessHourId: string, departmentId: string): Promise<number> {\n\t\tconst query = { businessHourId, _id: { $ne: departmentId } };\n\t\treturn this.col.countDocuments(query);\n\t}\n\n\tfindEnabledByBusinessHourId(businessHourId: string, options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = { businessHourId, enabled: true };\n\t\treturn this.find(query, options);\n\t}\n\n\tfindActiveDepartmentsWithoutBusinessHour(options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = {\n\t\t\tenabled: true,\n\t\t\tbusinessHourId: { $exists: false },\n\t\t};\n\t\treturn this.find(query, options);\n\t}\n\n\tfindEnabledByListOfBusinessHourIdsAndDepartmentIds(\n\t\tbusinessHourIds: string[],\n\t\tdepartmentIds: string[],\n\t\toptions: FindOptions<ILivechatDepartment>,\n\t): FindCursor<ILivechatDepartment> {\n\t\tconst query: Filter<ILivechatDepartment> = {\n\t\t\tenabled: true,\n\t\t\tbusinessHourId: {\n\t\t\t\t$in: businessHourIds,\n\t\t\t},\n\t\t\t_id: {\n\t\t\t\t$in: departmentIds,\n\t\t\t},\n\t\t};\n\t\treturn this.find(query, options);\n\t}\n\n\tfindEnabledInIds(departmentsIds: string[], options?: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = { _id: { $in: departmentsIds }, enabled: true };\n\t\treturn this.find(query, options);\n\t}\n\n\taddBusinessHourToDepartmentsByIds(ids: string[] = [], businessHourId: string): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tbusinessHourId,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateMany(query, update);\n\t}\n\n\tremoveBusinessHourFromDepartmentsByIdsAndBusinessHourId(ids: string[] = [], businessHourId: string): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t\tbusinessHourId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$unset: {\n\t\t\t\tbusinessHourId: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateMany(query, update);\n\t}\n\n\tremoveBusinessHourFromDepartmentsByBusinessHourId(businessHourId: string): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tbusinessHourId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$unset: {\n\t\t\t\tbusinessHourId: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateMany(query, update);\n\t}\n\n\tunarchiveDepartment(_id: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { archived: false } });\n\t}\n\n\tarchiveDepartment(_id: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { archived: true, enabled: false } });\n\t}\n\n\taddDepartmentToUnit(_id: string, unitId: string, ancestors: string[]): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { parentId: unitId, ancestors } });\n\t}\n\n\tremoveDepartmentFromUnit(_id: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { parentId: null, ancestors: null } });\n\t}\n\n\tasync createOrUpdateDepartment(\n\t\t_id: string | null,\n\t\tdata: {\n\t\t\tenabled: boolean;\n\t\t\tname: string;\n\t\t\tdescription?: string;\n\t\t\tshowOnRegistration: boolean;\n\t\t\temail: string;\n\t\t\tshowOnOfflineForm: boolean;\n\t\t\trequestTagBeforeClosingChat?: boolean;\n\t\t\tchatClosingTags?: string[];\n\t\t\tfallbackForwardDepartment?: string;\n\t\t\tdepartmentsAllowedToForward?: string[];\n\t\t\ttype?: string;\n\t\t},\n\t): Promise<ILivechatDepartment> {\n\t\tconst current = _id ? await this.findOneById(_id) : null;\n\n\t\tconst record = {\n\t\t\t...data,\n\t\t} as ILivechatDepartment;\n\n\t\tif (_id) {\n\t\t\tawait this.updateOne({ _id }, { $set: record });\n\t\t} else {\n\t\t\t_id = (await this.insertOne(record)).insertedId;\n\t\t}\n\n\t\tif (current?.enabled !== data.enabled) {\n\t\t\tawait LivechatDepartmentAgents.setDepartmentEnabledByDepartmentId(_id, data.enabled);\n\t\t\tvoid notifyOnLivechatDepartmentAgentChangedByDepartmentId(_id, current ? 'updated' : 'inserted');\n\t\t}\n\n\t\tconst latestDept = await this.findOneById(_id);\n\t\tif (!latestDept) {\n\t\t\tthrow new Error(`Department ${_id} not found`);\n\t\t}\n\n\t\treturn latestDept;\n\t}\n\n\tunsetFallbackDepartmentByDepartmentId(departmentId: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany({ fallbackDepartment: departmentId }, { $unset: { fallbackDepartment: 1 } });\n\t}\n\n\tremoveDepartmentFromForwardListById(_departmentId: string): Promise<void> {\n\t\tthrow new Error('Method not implemented in Community Edition.');\n\t}\n\n\tupdateById(_id: string, update: Partial<ILivechatDepartment>): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, update);\n\t}\n\n\tupdateNumAgentsById(_id: string, numAgents: number): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { numAgents } });\n\t}\n\n\tdecreaseNumberOfAgentsByIds(_ids: string[]): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany({ _id: { $in: _ids } }, { $inc: { numAgents: -1 } });\n\t}\n\n\tfindEnabledWithAgents(projection: FindOptions<ILivechatDepartment>['projection'] = {}): FindCursor<ILivechatDepartment> {\n\t\tconst query = {\n\t\t\tnumAgents: { $gt: 0 },\n\t\t\tenabled: true,\n\t\t};\n\t\treturn this.find(query, projection && { projection });\n\t}\n\n\tasync findEnabledWithAgentsAndBusinessUnit(\n\t\t_: any,\n\t\tprojection: FindOptions<ILivechatDepartment>['projection'] = {},\n\t): Promise<FindCursor<ILivechatDepartment>> {\n\t\tconst query = {\n\t\t\tnumAgents: { $gt: 0 },\n\t\t\tenabled: true,\n\t\t};\n\t\treturn this.find(query, projection && { projection });\n\t}\n\n\tfindOneByIdOrName(_idOrName: string, options: FindOptions<ILivechatDepartment> = {}): Promise<ILivechatDepartment | null> {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindByUnitIds(unitIds: string[], options: FindOptions<ILivechatDepartment> = {}): FindCursor<ILivechatDepartment> {\n\t\tconst query = {\n\t\t\tparentId: {\n\t\t\t\t$exists: true,\n\t\t\t\t$in: unitIds,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tcountDepartmentsInUnit(unitId: string): Promise<number> {\n\t\treturn this.countDocuments({ parentId: unitId });\n\t}\n\n\tfindActiveByUnitIds(unitIds: string[], options: FindOptions<ILivechatDepartment> = {}): FindCursor<ILivechatDepartment> {\n\t\tconst query = {\n\t\t\tenabled: true,\n\t\t\tnumAgents: { $gt: 0 },\n\t\t\tparentId: {\n\t\t\t\t$exists: true,\n\t\t\t\t$in: unitIds,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindNotArchived(options: FindOptions<ILivechatDepartment> = {}): FindCursor<ILivechatDepartment> {\n\t\tconst query = { archived: { $ne: false } };\n\n\t\treturn this.find(query, options);\n\t}\n\n\tgetBusinessHoursWithDepartmentStatuses(): Promise<\n\t\t{\n\t\t\t_id: string;\n\t\t\tvalidDepartments: string[];\n\t\t\tinvalidDepartments: string[];\n\t\t}[]\n\t> {\n\t\treturn this.col\n\t\t\t.aggregate<{ _id: string; validDepartments: string[]; invalidDepartments: string[] }>([\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\tbusinessHourId: {\n\t\t\t\t\t\t\t$exists: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: '$businessHourId',\n\t\t\t\t\t\tvalidDepartments: {\n\t\t\t\t\t\t\t$push: {\n\t\t\t\t\t\t\t\t$cond: {\n\t\t\t\t\t\t\t\t\tif: {\n\t\t\t\t\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$eq: ['$enabled', true],\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$ne: ['$archived', true],\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tthen: '$_id',\n\t\t\t\t\t\t\t\t\telse: '$$REMOVE',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinvalidDepartments: {\n\t\t\t\t\t\t\t$push: {\n\t\t\t\t\t\t\t\t$cond: {\n\t\t\t\t\t\t\t\t\tif: {\n\t\t\t\t\t\t\t\t\t\t$or: [{ $eq: ['$enabled', false] }, { $eq: ['$archived', true] }],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tthen: '$_id',\n\t\t\t\t\t\t\t\t\telse: '$$REMOVE',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t])\n\t\t\t.toArray();\n\t}\n\n\tcheckIfMonitorIsMonitoringDepartmentById(monitorId: string, departmentId: string): Promise<boolean> {\n\t\tconst aggregation = [\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\t_id: departmentId,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$lookup: {\n\t\t\t\t\tfrom: LivechatUnitMonitors.getCollectionName(),\n\t\t\t\t\tlocalField: 'parentId',\n\t\t\t\t\tforeignField: 'unitId',\n\t\t\t\t\tas: 'monitors',\n\t\t\t\t\tpipeline: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$match: {\n\t\t\t\t\t\t\t\tmonitorId,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\tmonitors: {\n\t\t\t\t\t\t$exists: true,\n\t\t\t\t\t\t$ne: [],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$project: {\n\t\t\t\t\t_id: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\treturn this.col.aggregate(aggregation).hasNext();\n\t}\n\n\tcountArchived(): Promise<number> {\n\t\treturn this.col.countDocuments({ archived: true });\n\t}\n\n\tfindByParentId(_parentId: string, _options?: FindOptions<ILivechatDepartment> | undefined): FindCursor<ILivechatDepartment> {\n\t\tthrow new Error('Method not implemented in CE');\n\t}\n\n\tfindAgentsByBusinessHourId(_businessHourId: string): AggregationCursor<{ agentIds: string[] }> {\n\t\tthrow new Error('Method not implemented in CE');\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      LivechatDepartmentRaw: () => LivechatDepartmentRaw\n    });\n    let LivechatDepartmentAgents, LivechatUnitMonitors;\n    module.link(\"@rocket.chat/models\", {\n      LivechatDepartmentAgents(v) {\n        LivechatDepartmentAgents = v;\n      },\n      LivechatUnitMonitors(v) {\n        LivechatUnitMonitors = v;\n      }\n    }, 0);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 1);\n    let notifyOnLivechatDepartmentAgentChangedByDepartmentId;\n    module.link(\"../../../app/lib/server/lib/notifyListener\", {\n      notifyOnLivechatDepartmentAgentChangedByDepartmentId(v) {\n        notifyOnLivechatDepartmentAgentChangedByDepartmentId = v;\n      }\n    }, 2);\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class LivechatDepartmentRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'livechat_department', trash);\n      }\n      unfilteredFind(_query, _options) {\n        throw new Error('Method not implemented.');\n      }\n      unfilteredFindOne(_query, _options) {\n        throw new Error('Method not implemented.');\n      }\n      unfilteredUpdate(_query, _update, _options) {\n        throw new Error('Method not implemented.');\n      }\n      unfilteredRemove(_query) {\n        throw new Error('Method not implemented.');\n      }\n      removeParentAndAncestorById(_id) {\n        throw new Error('Method not implemented.');\n      }\n      modelIndexes() {\n        return [{\n          key: {\n            name: 1\n          }\n        }, {\n          key: {\n            businessHourId: 1\n          },\n          sparse: true\n        }, {\n          key: {\n            type: 1\n          },\n          sparse: true\n        }, {\n          key: {\n            numAgents: 1,\n            enabled: 1\n          }\n        }, {\n          key: {\n            parentId: 1\n          },\n          sparse: true\n        }, {\n          key: {\n            ancestors: 1\n          },\n          sparse: true\n        }, {\n          key: {\n            archived: 1\n          },\n          sparse: true\n        }];\n      }\n      countTotal() {\n        return this.col.countDocuments();\n      }\n      findInIds(departmentsIds, options) {\n        const query = {\n          _id: {\n            $in: departmentsIds\n          }\n        };\n        return this.find(query, options);\n      }\n      findByNameRegexWithExceptionsAndConditions(searchTerm) {\n        let exceptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        let conditions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        if (!Array.isArray(exceptions)) {\n          exceptions = [exceptions];\n        }\n        const nameRegex = new RegExp(\"^\".concat(escapeRegExp(searchTerm).trim()), 'i');\n        const query = _objectSpread({\n          name: nameRegex,\n          _id: {\n            $nin: exceptions\n          }\n        }, conditions);\n        return this.find(query, options);\n      }\n      findByBusinessHourId(businessHourId, options) {\n        const query = {\n          businessHourId\n        };\n        return this.find(query, options);\n      }\n      countByBusinessHourIdExcludingDepartmentId(businessHourId, departmentId) {\n        const query = {\n          businessHourId,\n          _id: {\n            $ne: departmentId\n          }\n        };\n        return this.col.countDocuments(query);\n      }\n      findEnabledByBusinessHourId(businessHourId, options) {\n        const query = {\n          businessHourId,\n          enabled: true\n        };\n        return this.find(query, options);\n      }\n      findActiveDepartmentsWithoutBusinessHour(options) {\n        const query = {\n          enabled: true,\n          businessHourId: {\n            $exists: false\n          }\n        };\n        return this.find(query, options);\n      }\n      findEnabledByListOfBusinessHourIdsAndDepartmentIds(businessHourIds, departmentIds, options) {\n        const query = {\n          enabled: true,\n          businessHourId: {\n            $in: businessHourIds\n          },\n          _id: {\n            $in: departmentIds\n          }\n        };\n        return this.find(query, options);\n      }\n      findEnabledInIds(departmentsIds, options) {\n        const query = {\n          _id: {\n            $in: departmentsIds\n          },\n          enabled: true\n        };\n        return this.find(query, options);\n      }\n      addBusinessHourToDepartmentsByIds() {\n        let ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        let businessHourId = arguments.length > 1 ? arguments[1] : undefined;\n        const query = {\n          _id: {\n            $in: ids\n          }\n        };\n        const update = {\n          $set: {\n            businessHourId\n          }\n        };\n        return this.updateMany(query, update);\n      }\n      removeBusinessHourFromDepartmentsByIdsAndBusinessHourId() {\n        let ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        let businessHourId = arguments.length > 1 ? arguments[1] : undefined;\n        const query = {\n          _id: {\n            $in: ids\n          },\n          businessHourId\n        };\n        const update = {\n          $unset: {\n            businessHourId: 1\n          }\n        };\n        return this.updateMany(query, update);\n      }\n      removeBusinessHourFromDepartmentsByBusinessHourId(businessHourId) {\n        const query = {\n          businessHourId\n        };\n        const update = {\n          $unset: {\n            businessHourId: 1\n          }\n        };\n        return this.updateMany(query, update);\n      }\n      unarchiveDepartment(_id) {\n        return this.updateOne({\n          _id\n        }, {\n          $set: {\n            archived: false\n          }\n        });\n      }\n      archiveDepartment(_id) {\n        return this.updateOne({\n          _id\n        }, {\n          $set: {\n            archived: true,\n            enabled: false\n          }\n        });\n      }\n      addDepartmentToUnit(_id, unitId, ancestors) {\n        return this.updateOne({\n          _id\n        }, {\n          $set: {\n            parentId: unitId,\n            ancestors\n          }\n        });\n      }\n      removeDepartmentFromUnit(_id) {\n        return this.updateOne({\n          _id\n        }, {\n          $set: {\n            parentId: null,\n            ancestors: null\n          }\n        });\n      }\n      async createOrUpdateDepartment(_id, data) {\n        const current = _id ? await this.findOneById(_id) : null;\n        const record = _objectSpread({}, data);\n        if (_id) {\n          await this.updateOne({\n            _id\n          }, {\n            $set: record\n          });\n        } else {\n          _id = (await this.insertOne(record)).insertedId;\n        }\n        if ((current === null || current === void 0 ? void 0 : current.enabled) !== data.enabled) {\n          await LivechatDepartmentAgents.setDepartmentEnabledByDepartmentId(_id, data.enabled);\n          void notifyOnLivechatDepartmentAgentChangedByDepartmentId(_id, current ? 'updated' : 'inserted');\n        }\n        const latestDept = await this.findOneById(_id);\n        if (!latestDept) {\n          throw new Error(\"Department \".concat(_id, \" not found\"));\n        }\n        return latestDept;\n      }\n      unsetFallbackDepartmentByDepartmentId(departmentId) {\n        return this.updateMany({\n          fallbackDepartment: departmentId\n        }, {\n          $unset: {\n            fallbackDepartment: 1\n          }\n        });\n      }\n      removeDepartmentFromForwardListById(_departmentId) {\n        throw new Error('Method not implemented in Community Edition.');\n      }\n      updateById(_id, update) {\n        return this.updateOne({\n          _id\n        }, update);\n      }\n      updateNumAgentsById(_id, numAgents) {\n        return this.updateOne({\n          _id\n        }, {\n          $set: {\n            numAgents\n          }\n        });\n      }\n      decreaseNumberOfAgentsByIds(_ids) {\n        return this.updateMany({\n          _id: {\n            $in: _ids\n          }\n        }, {\n          $inc: {\n            numAgents: -1\n          }\n        });\n      }\n      findEnabledWithAgents() {\n        let projection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const query = {\n          numAgents: {\n            $gt: 0\n          },\n          enabled: true\n        };\n        return this.find(query, projection && {\n          projection\n        });\n      }\n      async findEnabledWithAgentsAndBusinessUnit(_) {\n        let projection = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const query = {\n          numAgents: {\n            $gt: 0\n          },\n          enabled: true\n        };\n        return this.find(query, projection && {\n          projection\n        });\n      }\n      findOneByIdOrName(_idOrName) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const query = {\n          $or: [{\n            _id: _idOrName\n          }, {\n            name: _idOrName\n          }]\n        };\n        return this.findOne(query, options);\n      }\n      findByUnitIds(unitIds) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const query = {\n          parentId: {\n            $exists: true,\n            $in: unitIds\n          }\n        };\n        return this.find(query, options);\n      }\n      countDepartmentsInUnit(unitId) {\n        return this.countDocuments({\n          parentId: unitId\n        });\n      }\n      findActiveByUnitIds(unitIds) {\n        let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        const query = {\n          enabled: true,\n          numAgents: {\n            $gt: 0\n          },\n          parentId: {\n            $exists: true,\n            $in: unitIds\n          }\n        };\n        return this.find(query, options);\n      }\n      findNotArchived() {\n        let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        const query = {\n          archived: {\n            $ne: false\n          }\n        };\n        return this.find(query, options);\n      }\n      getBusinessHoursWithDepartmentStatuses() {\n        return this.col.aggregate([{\n          $match: {\n            businessHourId: {\n              $exists: true\n            }\n          }\n        }, {\n          $group: {\n            _id: '$businessHourId',\n            validDepartments: {\n              $push: {\n                $cond: {\n                  if: {\n                    $or: [{\n                      $eq: ['$enabled', true]\n                    }, {\n                      $ne: ['$archived', true]\n                    }]\n                  },\n                  then: '$_id',\n                  else: '$$REMOVE'\n                }\n              }\n            },\n            invalidDepartments: {\n              $push: {\n                $cond: {\n                  if: {\n                    $or: [{\n                      $eq: ['$enabled', false]\n                    }, {\n                      $eq: ['$archived', true]\n                    }]\n                  },\n                  then: '$_id',\n                  else: '$$REMOVE'\n                }\n              }\n            }\n          }\n        }]).toArray();\n      }\n      checkIfMonitorIsMonitoringDepartmentById(monitorId, departmentId) {\n        const aggregation = [{\n          $match: {\n            enabled: true,\n            _id: departmentId\n          }\n        }, {\n          $lookup: {\n            from: LivechatUnitMonitors.getCollectionName(),\n            localField: 'parentId',\n            foreignField: 'unitId',\n            as: 'monitors',\n            pipeline: [{\n              $match: {\n                monitorId\n              }\n            }]\n          }\n        }, {\n          $match: {\n            monitors: {\n              $exists: true,\n              $ne: []\n            }\n          }\n        }, {\n          $project: {\n            _id: 1\n          }\n        }];\n        return this.col.aggregate(aggregation).hasNext();\n      }\n      countArchived() {\n        return this.col.countDocuments({\n          archived: true\n        });\n      }\n      findByParentId(_parentId, _options) {\n        throw new Error('Method not implemented in CE');\n      }\n      findAgentsByBusinessHourId(_businessHourId) {\n        throw new Error('Method not implemented in CE');\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","LivechatDepartmentRaw","LivechatDepartmentAgents","LivechatUnitMonitors","escapeRegExp","notifyOnLivechatDepartmentAgentChangedByDepartmentId","BaseRaw","__reifyWaitForDeps__","constructor","db","trash","unfilteredFind","_query","_options","Error","unfilteredFindOne","unfilteredUpdate","_update","unfilteredRemove","removeParentAndAncestorById","_id","modelIndexes","key","name","businessHourId","sparse","type","numAgents","enabled","parentId","ancestors","archived","countTotal","col","countDocuments","findInIds","departmentsIds","options","query","$in","find","findByNameRegexWithExceptionsAndConditions","searchTerm","exceptions","arguments","length","undefined","conditions","Array","isArray","nameRegex","RegExp","concat","trim","$nin","findByBusinessHourId","countByBusinessHourIdExcludingDepartmentId","departmentId","$ne","findEnabledByBusinessHourId","findActiveDepartmentsWithoutBusinessHour","$exists","findEnabledByListOfBusinessHourIdsAndDepartmentIds","businessHourIds","departmentIds","findEnabledInIds","addBusinessHourToDepartmentsByIds","ids","update","$set","updateMany","removeBusinessHourFromDepartmentsByIdsAndBusinessHourId","$unset","removeBusinessHourFromDepartmentsByBusinessHourId","unarchiveDepartment","updateOne","archiveDepartment","addDepartmentToUnit","unitId","removeDepartmentFromUnit","createOrUpdateDepartment","data","current","findOneById","record","insertOne","insertedId","setDepartmentEnabledByDepartmentId","latestDept","unsetFallbackDepartmentByDepartmentId","fallbackDepartment","removeDepartmentFromForwardListById","_departmentId","updateById","updateNumAgentsById","decreaseNumberOfAgentsByIds","_ids","$inc","findEnabledWithAgents","projection","$gt","findEnabledWithAgentsAndBusinessUnit","_","findOneByIdOrName","_idOrName","$or","findOne","findByUnitIds","unitIds","countDepartmentsInUnit","findActiveByUnitIds","findNotArchived","getBusinessHoursWithDepartmentStatuses","aggregate","$match","$group","validDepartments","$push","$cond","if","$eq","then","else","invalidDepartments","toArray","checkIfMonitorIsMonitoringDepartmentById","monitorId","aggregation","$lookup","from","getCollectionName","localField","foreignField","as","pipeline","monitors","$project","hasNext","countArchived","findByParentId","_parentId","findAgentsByBusinessHourId","_businessHourId","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/LivechatDepartment.ts"],"sourcesContent":["import type { ILivechatDepartment, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { ILivechatDepartmentModel } from '@rocket.chat/model-typings';\nimport { LivechatDepartmentAgents, LivechatUnitMonitors } from '@rocket.chat/models';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type {\n\tCollection,\n\tFindCursor,\n\tDb,\n\tFilter,\n\tFindOptions,\n\tUpdateResult,\n\tDocument,\n\tIndexDescription,\n\tDeleteResult,\n\tUpdateFilter,\n\tAggregationCursor,\n} from 'mongodb';\n\nimport { notifyOnLivechatDepartmentAgentChangedByDepartmentId } from '../../../app/lib/server/lib/notifyListener';\nimport { BaseRaw } from './BaseRaw';\n\nexport class LivechatDepartmentRaw extends BaseRaw<ILivechatDepartment> implements ILivechatDepartmentModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<ILivechatDepartment>>) {\n\t\tsuper(db, 'livechat_department', trash);\n\t}\n\n\tunfilteredFind(_query: Filter<ILivechatDepartment>, _options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tunfilteredFindOne(_query: Filter<ILivechatDepartment>, _options: FindOptions<ILivechatDepartment>): Promise<ILivechatDepartment | null> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tunfilteredUpdate(\n\t\t_query: Filter<ILivechatDepartment>,\n\t\t_update: UpdateFilter<ILivechatDepartment>,\n\t\t_options: FindOptions<ILivechatDepartment>,\n\t): Promise<UpdateResult> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tunfilteredRemove(_query: Filter<ILivechatDepartment>): Promise<DeleteResult> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tremoveParentAndAncestorById(_id: string): Promise<Document | UpdateResult> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tprotected modelIndexes(): Array<IndexDescription> {\n\t\treturn [\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tname: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tbusinessHourId: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\ttype: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tnumAgents: 1,\n\t\t\t\t\tenabled: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tparentId: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tancestors: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: {\n\t\t\t\t\tarchived: 1,\n\t\t\t\t},\n\t\t\t\tsparse: true,\n\t\t\t},\n\t\t];\n\t}\n\n\tcountTotal(): Promise<number> {\n\t\treturn this.col.countDocuments();\n\t}\n\n\tfindInIds(departmentsIds: string[], options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = { _id: { $in: departmentsIds } };\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByNameRegexWithExceptionsAndConditions(\n\t\tsearchTerm: string,\n\t\texceptions: string[] = [],\n\t\tconditions: Filter<ILivechatDepartment> = {},\n\t\toptions: FindOptions<ILivechatDepartment> = {},\n\t): FindCursor<ILivechatDepartment> {\n\t\tif (!Array.isArray(exceptions)) {\n\t\t\texceptions = [exceptions];\n\t\t}\n\n\t\tconst nameRegex = new RegExp(`^${escapeRegExp(searchTerm).trim()}`, 'i');\n\n\t\tconst query = {\n\t\t\tname: nameRegex,\n\t\t\t_id: {\n\t\t\t\t$nin: exceptions,\n\t\t\t},\n\t\t\t...conditions,\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindByBusinessHourId(businessHourId: string, options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = { businessHourId };\n\t\treturn this.find(query, options);\n\t}\n\n\tcountByBusinessHourIdExcludingDepartmentId(businessHourId: string, departmentId: string): Promise<number> {\n\t\tconst query = { businessHourId, _id: { $ne: departmentId } };\n\t\treturn this.col.countDocuments(query);\n\t}\n\n\tfindEnabledByBusinessHourId(businessHourId: string, options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = { businessHourId, enabled: true };\n\t\treturn this.find(query, options);\n\t}\n\n\tfindActiveDepartmentsWithoutBusinessHour(options: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = {\n\t\t\tenabled: true,\n\t\t\tbusinessHourId: { $exists: false },\n\t\t};\n\t\treturn this.find(query, options);\n\t}\n\n\tfindEnabledByListOfBusinessHourIdsAndDepartmentIds(\n\t\tbusinessHourIds: string[],\n\t\tdepartmentIds: string[],\n\t\toptions: FindOptions<ILivechatDepartment>,\n\t): FindCursor<ILivechatDepartment> {\n\t\tconst query: Filter<ILivechatDepartment> = {\n\t\t\tenabled: true,\n\t\t\tbusinessHourId: {\n\t\t\t\t$in: businessHourIds,\n\t\t\t},\n\t\t\t_id: {\n\t\t\t\t$in: departmentIds,\n\t\t\t},\n\t\t};\n\t\treturn this.find(query, options);\n\t}\n\n\tfindEnabledInIds(departmentsIds: string[], options?: FindOptions<ILivechatDepartment>): FindCursor<ILivechatDepartment> {\n\t\tconst query = { _id: { $in: departmentsIds }, enabled: true };\n\t\treturn this.find(query, options);\n\t}\n\n\taddBusinessHourToDepartmentsByIds(ids: string[] = [], businessHourId: string): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t};\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tbusinessHourId,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateMany(query, update);\n\t}\n\n\tremoveBusinessHourFromDepartmentsByIdsAndBusinessHourId(ids: string[] = [], businessHourId: string): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\t_id: { $in: ids },\n\t\t\tbusinessHourId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$unset: {\n\t\t\t\tbusinessHourId: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateMany(query, update);\n\t}\n\n\tremoveBusinessHourFromDepartmentsByBusinessHourId(businessHourId: string): Promise<Document | UpdateResult> {\n\t\tconst query = {\n\t\t\tbusinessHourId,\n\t\t};\n\n\t\tconst update = {\n\t\t\t$unset: {\n\t\t\t\tbusinessHourId: 1,\n\t\t\t},\n\t\t};\n\n\t\treturn this.updateMany(query, update);\n\t}\n\n\tunarchiveDepartment(_id: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { archived: false } });\n\t}\n\n\tarchiveDepartment(_id: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { archived: true, enabled: false } });\n\t}\n\n\taddDepartmentToUnit(_id: string, unitId: string, ancestors: string[]): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { parentId: unitId, ancestors } });\n\t}\n\n\tremoveDepartmentFromUnit(_id: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { parentId: null, ancestors: null } });\n\t}\n\n\tasync createOrUpdateDepartment(\n\t\t_id: string | null,\n\t\tdata: {\n\t\t\tenabled: boolean;\n\t\t\tname: string;\n\t\t\tdescription?: string;\n\t\t\tshowOnRegistration: boolean;\n\t\t\temail: string;\n\t\t\tshowOnOfflineForm: boolean;\n\t\t\trequestTagBeforeClosingChat?: boolean;\n\t\t\tchatClosingTags?: string[];\n\t\t\tfallbackForwardDepartment?: string;\n\t\t\tdepartmentsAllowedToForward?: string[];\n\t\t\ttype?: string;\n\t\t},\n\t): Promise<ILivechatDepartment> {\n\t\tconst current = _id ? await this.findOneById(_id) : null;\n\n\t\tconst record = {\n\t\t\t...data,\n\t\t} as ILivechatDepartment;\n\n\t\tif (_id) {\n\t\t\tawait this.updateOne({ _id }, { $set: record });\n\t\t} else {\n\t\t\t_id = (await this.insertOne(record)).insertedId;\n\t\t}\n\n\t\tif (current?.enabled !== data.enabled) {\n\t\t\tawait LivechatDepartmentAgents.setDepartmentEnabledByDepartmentId(_id, data.enabled);\n\t\t\tvoid notifyOnLivechatDepartmentAgentChangedByDepartmentId(_id, current ? 'updated' : 'inserted');\n\t\t}\n\n\t\tconst latestDept = await this.findOneById(_id);\n\t\tif (!latestDept) {\n\t\t\tthrow new Error(`Department ${_id} not found`);\n\t\t}\n\n\t\treturn latestDept;\n\t}\n\n\tunsetFallbackDepartmentByDepartmentId(departmentId: string): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany({ fallbackDepartment: departmentId }, { $unset: { fallbackDepartment: 1 } });\n\t}\n\n\tremoveDepartmentFromForwardListById(_departmentId: string): Promise<void> {\n\t\tthrow new Error('Method not implemented in Community Edition.');\n\t}\n\n\tupdateById(_id: string, update: Partial<ILivechatDepartment>): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, update);\n\t}\n\n\tupdateNumAgentsById(_id: string, numAgents: number): Promise<Document | UpdateResult> {\n\t\treturn this.updateOne({ _id }, { $set: { numAgents } });\n\t}\n\n\tdecreaseNumberOfAgentsByIds(_ids: string[]): Promise<Document | UpdateResult> {\n\t\treturn this.updateMany({ _id: { $in: _ids } }, { $inc: { numAgents: -1 } });\n\t}\n\n\tfindEnabledWithAgents(projection: FindOptions<ILivechatDepartment>['projection'] = {}): FindCursor<ILivechatDepartment> {\n\t\tconst query = {\n\t\t\tnumAgents: { $gt: 0 },\n\t\t\tenabled: true,\n\t\t};\n\t\treturn this.find(query, projection && { projection });\n\t}\n\n\tasync findEnabledWithAgentsAndBusinessUnit(\n\t\t_: any,\n\t\tprojection: FindOptions<ILivechatDepartment>['projection'] = {},\n\t): Promise<FindCursor<ILivechatDepartment>> {\n\t\tconst query = {\n\t\t\tnumAgents: { $gt: 0 },\n\t\t\tenabled: true,\n\t\t};\n\t\treturn this.find(query, projection && { projection });\n\t}\n\n\tfindOneByIdOrName(_idOrName: string, options: FindOptions<ILivechatDepartment> = {}): Promise<ILivechatDepartment | null> {\n\t\tconst query = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindByUnitIds(unitIds: string[], options: FindOptions<ILivechatDepartment> = {}): FindCursor<ILivechatDepartment> {\n\t\tconst query = {\n\t\t\tparentId: {\n\t\t\t\t$exists: true,\n\t\t\t\t$in: unitIds,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tcountDepartmentsInUnit(unitId: string): Promise<number> {\n\t\treturn this.countDocuments({ parentId: unitId });\n\t}\n\n\tfindActiveByUnitIds(unitIds: string[], options: FindOptions<ILivechatDepartment> = {}): FindCursor<ILivechatDepartment> {\n\t\tconst query = {\n\t\t\tenabled: true,\n\t\t\tnumAgents: { $gt: 0 },\n\t\t\tparentId: {\n\t\t\t\t$exists: true,\n\t\t\t\t$in: unitIds,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options);\n\t}\n\n\tfindNotArchived(options: FindOptions<ILivechatDepartment> = {}): FindCursor<ILivechatDepartment> {\n\t\tconst query = { archived: { $ne: false } };\n\n\t\treturn this.find(query, options);\n\t}\n\n\tgetBusinessHoursWithDepartmentStatuses(): Promise<\n\t\t{\n\t\t\t_id: string;\n\t\t\tvalidDepartments: string[];\n\t\t\tinvalidDepartments: string[];\n\t\t}[]\n\t> {\n\t\treturn this.col\n\t\t\t.aggregate<{ _id: string; validDepartments: string[]; invalidDepartments: string[] }>([\n\t\t\t\t{\n\t\t\t\t\t$match: {\n\t\t\t\t\t\tbusinessHourId: {\n\t\t\t\t\t\t\t$exists: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$group: {\n\t\t\t\t\t\t_id: '$businessHourId',\n\t\t\t\t\t\tvalidDepartments: {\n\t\t\t\t\t\t\t$push: {\n\t\t\t\t\t\t\t\t$cond: {\n\t\t\t\t\t\t\t\t\tif: {\n\t\t\t\t\t\t\t\t\t\t$or: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$eq: ['$enabled', true],\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t$ne: ['$archived', true],\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tthen: '$_id',\n\t\t\t\t\t\t\t\t\telse: '$$REMOVE',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinvalidDepartments: {\n\t\t\t\t\t\t\t$push: {\n\t\t\t\t\t\t\t\t$cond: {\n\t\t\t\t\t\t\t\t\tif: {\n\t\t\t\t\t\t\t\t\t\t$or: [{ $eq: ['$enabled', false] }, { $eq: ['$archived', true] }],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tthen: '$_id',\n\t\t\t\t\t\t\t\t\telse: '$$REMOVE',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t])\n\t\t\t.toArray();\n\t}\n\n\tcheckIfMonitorIsMonitoringDepartmentById(monitorId: string, departmentId: string): Promise<boolean> {\n\t\tconst aggregation = [\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\t_id: departmentId,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$lookup: {\n\t\t\t\t\tfrom: LivechatUnitMonitors.getCollectionName(),\n\t\t\t\t\tlocalField: 'parentId',\n\t\t\t\t\tforeignField: 'unitId',\n\t\t\t\t\tas: 'monitors',\n\t\t\t\t\tpipeline: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$match: {\n\t\t\t\t\t\t\t\tmonitorId,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\tmonitors: {\n\t\t\t\t\t\t$exists: true,\n\t\t\t\t\t\t$ne: [],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$project: {\n\t\t\t\t\t_id: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\treturn this.col.aggregate(aggregation).hasNext();\n\t}\n\n\tcountArchived(): Promise<number> {\n\t\treturn this.col.countDocuments({ archived: true });\n\t}\n\n\tfindByParentId(_parentId: string, _options?: FindOptions<ILivechatDepartment> | undefined): FindCursor<ILivechatDepartment> {\n\t\tthrow new Error('Method not implemented in CE');\n\t}\n\n\tfindAgentsByBusinessHourId(_businessHourId: string): AggregationCursor<{ agentIds: string[] }> {\n\t\tthrow new Error('Method not implemented in CE');\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6545a69fbb77df14701f8a065ce5e045b23db9c0"}
