{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/import.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/api/server/v1/import.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/import.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/import.ts","sourceRoot":"","sources":["app/api/server/v1/import.ts"],"names":[],"mappings":"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","sourcesContent":["import { Import } from '@rocket.chat/core-services';\nimport { Imports } from '@rocket.chat/models';\nimport {\n\tisUploadImportFileParamsPOST,\n\tisDownloadPublicImportFileParamsPOST,\n\tisStartImportParamsPOST,\n\tisGetImportFileDataParamsGET,\n\tisGetImportProgressParamsGET,\n\tisGetLatestImportOperationsParamsGET,\n\tisDownloadPendingFilesParamsPOST,\n\tisDownloadPendingAvatarsParamsPOST,\n\tisGetCurrentImportOperationParamsGET,\n\tisImportersListParamsGET,\n\tisImportAddUsersParamsPOST,\n} from '@rocket.chat/rest-typings';\nimport { Meteor } from 'meteor/meteor';\n\nimport { PendingAvatarImporter } from '../../../importer-pending-avatars/server/PendingAvatarImporter';\nimport { PendingFileImporter } from '../../../importer-pending-files/server/PendingFileImporter';\nimport { Importers } from '../../../importer/server';\nimport {\n\texecuteUploadImportFile,\n\texecuteDownloadPublicImportFile,\n\texecuteGetImportProgress,\n\texecuteGetImportFileData,\n\texecuteStartImport,\n\texecuteGetLatestImportOperations,\n} from '../../../importer/server/methods';\nimport { API } from '../api';\n\nAPI.v1.addRoute(\n\t'uploadImportFile',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isUploadImportFileParamsPOST,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { binaryContent, contentType, fileName, importerKey } = this.bodyParams;\n\n\t\t\treturn API.v1.success(await executeUploadImportFile(this.userId, binaryContent, contentType, fileName, importerKey));\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'downloadPublicImportFile',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isDownloadPublicImportFileParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { fileUrl, importerKey } = this.bodyParams;\n\t\t\tawait executeDownloadPublicImportFile(this.userId, fileUrl, importerKey);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'startImport',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isStartImportParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { input } = this.bodyParams;\n\n\t\t\tawait executeStartImport({ input }, this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'getImportFileData',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isGetImportFileDataParamsGET,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst result = await executeGetImportFileData();\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'getImportProgress',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isGetImportProgressParamsGET,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst result = await executeGetImportProgress();\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'getLatestImportOperations',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isGetLatestImportOperationsParamsGET,\n\t\tpermissionsRequired: ['view-import-operations'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst result = await executeGetLatestImportOperations();\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'downloadPendingFiles',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isDownloadPendingFilesParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst importer = Importers.get('pending-files');\n\t\t\tif (!importer) {\n\t\t\t\tthrow new Meteor.Error('error-importer-not-defined', 'The Pending File Importer was not found.', 'downloadPendingFiles');\n\t\t\t}\n\n\t\t\tconst operation = await Import.newOperation(this.userId, importer.name, importer.key);\n\t\t\tconst instance = new PendingFileImporter(importer, operation);\n\t\t\tconst count = await instance.prepareFileCount();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcount,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'downloadPendingAvatars',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isDownloadPendingAvatarsParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst importer = Importers.get('pending-avatars');\n\t\t\tif (!importer) {\n\t\t\t\tthrow new Meteor.Error('error-importer-not-defined', 'The Pending File Importer was not found.', 'downloadPendingAvatars');\n\t\t\t}\n\n\t\t\tconst operation = await Import.newOperation(this.userId, importer.name, importer.key);\n\t\t\tconst instance = new PendingAvatarImporter(importer, operation);\n\t\t\tconst count = await instance.prepareFileCount();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcount,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'getCurrentImportOperation',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isGetCurrentImportOperationParamsGET,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst operation = await Imports.findLastImport();\n\t\t\treturn API.v1.success({\n\t\t\t\toperation,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'importers.list',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isImportersListParamsGET,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst importers = Importers.getAllVisible().map(({ key, name }) => ({ key, name }));\n\n\t\t\treturn API.v1.success(importers);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.clear',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tawait Import.clear();\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.new',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst operation = await Import.newOperation(this.userId, 'api', 'api');\n\n\t\t\treturn API.v1.success({ operation });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.status',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst status = await Import.status();\n\n\t\t\treturn API.v1.success(status);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.addUsers',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isImportAddUsersParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { users } = this.bodyParams;\n\n\t\t\tawait Import.addUsers(users);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.run',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tawait Import.run(this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/api/server/v1/import.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/import.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/import.ts","sourceRoot":"","sources":["app/api/server/v1/import.ts"],"names":[],"mappings":"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","sourcesContent":["import { Import } from '@rocket.chat/core-services';\nimport { Imports } from '@rocket.chat/models';\nimport {\n\tisUploadImportFileParamsPOST,\n\tisDownloadPublicImportFileParamsPOST,\n\tisStartImportParamsPOST,\n\tisGetImportFileDataParamsGET,\n\tisGetImportProgressParamsGET,\n\tisGetLatestImportOperationsParamsGET,\n\tisDownloadPendingFilesParamsPOST,\n\tisDownloadPendingAvatarsParamsPOST,\n\tisGetCurrentImportOperationParamsGET,\n\tisImportersListParamsGET,\n\tisImportAddUsersParamsPOST,\n} from '@rocket.chat/rest-typings';\nimport { Meteor } from 'meteor/meteor';\n\nimport { PendingAvatarImporter } from '../../../importer-pending-avatars/server/PendingAvatarImporter';\nimport { PendingFileImporter } from '../../../importer-pending-files/server/PendingFileImporter';\nimport { Importers } from '../../../importer/server';\nimport {\n\texecuteUploadImportFile,\n\texecuteDownloadPublicImportFile,\n\texecuteGetImportProgress,\n\texecuteGetImportFileData,\n\texecuteStartImport,\n\texecuteGetLatestImportOperations,\n} from '../../../importer/server/methods';\nimport { API } from '../api';\n\nAPI.v1.addRoute(\n\t'uploadImportFile',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isUploadImportFileParamsPOST,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { binaryContent, contentType, fileName, importerKey } = this.bodyParams;\n\n\t\t\treturn API.v1.success(await executeUploadImportFile(this.userId, binaryContent, contentType, fileName, importerKey));\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'downloadPublicImportFile',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isDownloadPublicImportFileParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { fileUrl, importerKey } = this.bodyParams;\n\t\t\tawait executeDownloadPublicImportFile(this.userId, fileUrl, importerKey);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'startImport',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isStartImportParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { input } = this.bodyParams;\n\n\t\t\tawait executeStartImport({ input }, this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'getImportFileData',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isGetImportFileDataParamsGET,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst result = await executeGetImportFileData();\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'getImportProgress',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isGetImportProgressParamsGET,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst result = await executeGetImportProgress();\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'getLatestImportOperations',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isGetLatestImportOperationsParamsGET,\n\t\tpermissionsRequired: ['view-import-operations'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst result = await executeGetLatestImportOperations();\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'downloadPendingFiles',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isDownloadPendingFilesParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst importer = Importers.get('pending-files');\n\t\t\tif (!importer) {\n\t\t\t\tthrow new Meteor.Error('error-importer-not-defined', 'The Pending File Importer was not found.', 'downloadPendingFiles');\n\t\t\t}\n\n\t\t\tconst operation = await Import.newOperation(this.userId, importer.name, importer.key);\n\t\t\tconst instance = new PendingFileImporter(importer, operation);\n\t\t\tconst count = await instance.prepareFileCount();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcount,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'downloadPendingAvatars',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isDownloadPendingAvatarsParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst importer = Importers.get('pending-avatars');\n\t\t\tif (!importer) {\n\t\t\t\tthrow new Meteor.Error('error-importer-not-defined', 'The Pending File Importer was not found.', 'downloadPendingAvatars');\n\t\t\t}\n\n\t\t\tconst operation = await Import.newOperation(this.userId, importer.name, importer.key);\n\t\t\tconst instance = new PendingAvatarImporter(importer, operation);\n\t\t\tconst count = await instance.prepareFileCount();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcount,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'getCurrentImportOperation',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isGetCurrentImportOperationParamsGET,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst operation = await Imports.findLastImport();\n\t\t\treturn API.v1.success({\n\t\t\t\toperation,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'importers.list',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isImportersListParamsGET,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst importers = Importers.getAllVisible().map(({ key, name }) => ({ key, name }));\n\n\t\t\treturn API.v1.success(importers);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.clear',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tawait Import.clear();\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.new',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst operation = await Import.newOperation(this.userId, 'api', 'api');\n\n\t\t\treturn API.v1.success({ operation });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.status',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst status = await Import.status();\n\n\t\t\treturn API.v1.success(status);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.addUsers',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isImportAddUsersParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { users } = this.bodyParams;\n\n\t\t\tawait Import.addUsers(users);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.run',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tawait Import.run(this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Import;\n    module.link(\"@rocket.chat/core-services\", {\n      Import(v) {\n        Import = v;\n      }\n    }, 0);\n    let Imports;\n    module.link(\"@rocket.chat/models\", {\n      Imports(v) {\n        Imports = v;\n      }\n    }, 1);\n    let isUploadImportFileParamsPOST, isDownloadPublicImportFileParamsPOST, isStartImportParamsPOST, isGetImportFileDataParamsGET, isGetImportProgressParamsGET, isGetLatestImportOperationsParamsGET, isDownloadPendingFilesParamsPOST, isDownloadPendingAvatarsParamsPOST, isGetCurrentImportOperationParamsGET, isImportersListParamsGET, isImportAddUsersParamsPOST;\n    module.link(\"@rocket.chat/rest-typings\", {\n      isUploadImportFileParamsPOST(v) {\n        isUploadImportFileParamsPOST = v;\n      },\n      isDownloadPublicImportFileParamsPOST(v) {\n        isDownloadPublicImportFileParamsPOST = v;\n      },\n      isStartImportParamsPOST(v) {\n        isStartImportParamsPOST = v;\n      },\n      isGetImportFileDataParamsGET(v) {\n        isGetImportFileDataParamsGET = v;\n      },\n      isGetImportProgressParamsGET(v) {\n        isGetImportProgressParamsGET = v;\n      },\n      isGetLatestImportOperationsParamsGET(v) {\n        isGetLatestImportOperationsParamsGET = v;\n      },\n      isDownloadPendingFilesParamsPOST(v) {\n        isDownloadPendingFilesParamsPOST = v;\n      },\n      isDownloadPendingAvatarsParamsPOST(v) {\n        isDownloadPendingAvatarsParamsPOST = v;\n      },\n      isGetCurrentImportOperationParamsGET(v) {\n        isGetCurrentImportOperationParamsGET = v;\n      },\n      isImportersListParamsGET(v) {\n        isImportersListParamsGET = v;\n      },\n      isImportAddUsersParamsPOST(v) {\n        isImportAddUsersParamsPOST = v;\n      }\n    }, 2);\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 3);\n    let PendingAvatarImporter;\n    module.link(\"../../../importer-pending-avatars/server/PendingAvatarImporter\", {\n      PendingAvatarImporter(v) {\n        PendingAvatarImporter = v;\n      }\n    }, 4);\n    let PendingFileImporter;\n    module.link(\"../../../importer-pending-files/server/PendingFileImporter\", {\n      PendingFileImporter(v) {\n        PendingFileImporter = v;\n      }\n    }, 5);\n    let Importers;\n    module.link(\"../../../importer/server\", {\n      Importers(v) {\n        Importers = v;\n      }\n    }, 6);\n    let executeUploadImportFile, executeDownloadPublicImportFile, executeGetImportProgress, executeGetImportFileData, executeStartImport, executeGetLatestImportOperations;\n    module.link(\"../../../importer/server/methods\", {\n      executeUploadImportFile(v) {\n        executeUploadImportFile = v;\n      },\n      executeDownloadPublicImportFile(v) {\n        executeDownloadPublicImportFile = v;\n      },\n      executeGetImportProgress(v) {\n        executeGetImportProgress = v;\n      },\n      executeGetImportFileData(v) {\n        executeGetImportFileData = v;\n      },\n      executeStartImport(v) {\n        executeStartImport = v;\n      },\n      executeGetLatestImportOperations(v) {\n        executeGetLatestImportOperations = v;\n      }\n    }, 7);\n    let API;\n    module.link(\"../api\", {\n      API(v) {\n        API = v;\n      }\n    }, 8);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    API.v1.addRoute('uploadImportFile', {\n      authRequired: true,\n      validateParams: isUploadImportFileParamsPOST\n    }, {\n      async post() {\n        const {\n          binaryContent,\n          contentType,\n          fileName,\n          importerKey\n        } = this.bodyParams;\n        return API.v1.success(await executeUploadImportFile(this.userId, binaryContent, contentType, fileName, importerKey));\n      }\n    });\n    API.v1.addRoute('downloadPublicImportFile', {\n      authRequired: true,\n      validateParams: isDownloadPublicImportFileParamsPOST,\n      permissionsRequired: ['run-import']\n    }, {\n      async post() {\n        const {\n          fileUrl,\n          importerKey\n        } = this.bodyParams;\n        await executeDownloadPublicImportFile(this.userId, fileUrl, importerKey);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('startImport', {\n      authRequired: true,\n      validateParams: isStartImportParamsPOST,\n      permissionsRequired: ['run-import']\n    }, {\n      async post() {\n        const {\n          input\n        } = this.bodyParams;\n        await executeStartImport({\n          input\n        }, this.userId);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('getImportFileData', {\n      authRequired: true,\n      validateParams: isGetImportFileDataParamsGET,\n      permissionsRequired: ['run-import']\n    }, {\n      async get() {\n        const result = await executeGetImportFileData();\n        return API.v1.success(result);\n      }\n    });\n    API.v1.addRoute('getImportProgress', {\n      authRequired: true,\n      validateParams: isGetImportProgressParamsGET,\n      permissionsRequired: ['run-import']\n    }, {\n      async get() {\n        const result = await executeGetImportProgress();\n        return API.v1.success(result);\n      }\n    });\n    API.v1.addRoute('getLatestImportOperations', {\n      authRequired: true,\n      validateParams: isGetLatestImportOperationsParamsGET,\n      permissionsRequired: ['view-import-operations']\n    }, {\n      async get() {\n        const result = await executeGetLatestImportOperations();\n        return API.v1.success(result);\n      }\n    });\n    API.v1.addRoute('downloadPendingFiles', {\n      authRequired: true,\n      validateParams: isDownloadPendingFilesParamsPOST,\n      permissionsRequired: ['run-import']\n    }, {\n      async post() {\n        const importer = Importers.get('pending-files');\n        if (!importer) {\n          throw new Meteor.Error('error-importer-not-defined', 'The Pending File Importer was not found.', 'downloadPendingFiles');\n        }\n        const operation = await Import.newOperation(this.userId, importer.name, importer.key);\n        const instance = new PendingFileImporter(importer, operation);\n        const count = await instance.prepareFileCount();\n        return API.v1.success({\n          count\n        });\n      }\n    });\n    API.v1.addRoute('downloadPendingAvatars', {\n      authRequired: true,\n      validateParams: isDownloadPendingAvatarsParamsPOST,\n      permissionsRequired: ['run-import']\n    }, {\n      async post() {\n        const importer = Importers.get('pending-avatars');\n        if (!importer) {\n          throw new Meteor.Error('error-importer-not-defined', 'The Pending File Importer was not found.', 'downloadPendingAvatars');\n        }\n        const operation = await Import.newOperation(this.userId, importer.name, importer.key);\n        const instance = new PendingAvatarImporter(importer, operation);\n        const count = await instance.prepareFileCount();\n        return API.v1.success({\n          count\n        });\n      }\n    });\n    API.v1.addRoute('getCurrentImportOperation', {\n      authRequired: true,\n      validateParams: isGetCurrentImportOperationParamsGET,\n      permissionsRequired: ['run-import']\n    }, {\n      async get() {\n        const operation = await Imports.findLastImport();\n        return API.v1.success({\n          operation\n        });\n      }\n    });\n    API.v1.addRoute('importers.list', {\n      authRequired: true,\n      validateParams: isImportersListParamsGET,\n      permissionsRequired: ['run-import']\n    }, {\n      async get() {\n        const importers = Importers.getAllVisible().map(_ref => {\n          let {\n            key,\n            name\n          } = _ref;\n          return {\n            key,\n            name\n          };\n        });\n        return API.v1.success(importers);\n      }\n    });\n    API.v1.addRoute('import.clear', {\n      authRequired: true,\n      permissionsRequired: ['run-import']\n    }, {\n      async post() {\n        await Import.clear();\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('import.new', {\n      authRequired: true,\n      permissionsRequired: ['run-import']\n    }, {\n      async post() {\n        const operation = await Import.newOperation(this.userId, 'api', 'api');\n        return API.v1.success({\n          operation\n        });\n      }\n    });\n    API.v1.addRoute('import.status', {\n      authRequired: true,\n      permissionsRequired: ['run-import']\n    }, {\n      async get() {\n        const status = await Import.status();\n        return API.v1.success(status);\n      }\n    });\n    API.v1.addRoute('import.addUsers', {\n      authRequired: true,\n      validateParams: isImportAddUsersParamsPOST,\n      permissionsRequired: ['run-import']\n    }, {\n      async post() {\n        const {\n          users\n        } = this.bodyParams;\n        await Import.addUsers(users);\n        return API.v1.success();\n      }\n    });\n    API.v1.addRoute('import.run', {\n      authRequired: true,\n      permissionsRequired: ['run-import']\n    }, {\n      async post() {\n        await Import.run(this.userId);\n        return API.v1.success();\n      }\n    });\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Import","module","link","v","Imports","isUploadImportFileParamsPOST","isDownloadPublicImportFileParamsPOST","isStartImportParamsPOST","isGetImportFileDataParamsGET","isGetImportProgressParamsGET","isGetLatestImportOperationsParamsGET","isDownloadPendingFilesParamsPOST","isDownloadPendingAvatarsParamsPOST","isGetCurrentImportOperationParamsGET","isImportersListParamsGET","isImportAddUsersParamsPOST","Meteor","PendingAvatarImporter","PendingFileImporter","Importers","executeUploadImportFile","executeDownloadPublicImportFile","executeGetImportProgress","executeGetImportFileData","executeStartImport","executeGetLatestImportOperations","API","__reifyWaitForDeps__","v1","addRoute","authRequired","validateParams","post","binaryContent","contentType","fileName","importerKey","bodyParams","success","userId","permissionsRequired","fileUrl","input","get","result","importer","Error","operation","newOperation","name","key","instance","count","prepareFileCount","findLastImport","importers","getAllVisible","map","_ref","clear","status","users","addUsers","run","__reify_async_result__","_reifyError","self","async"],"sources":["app/api/server/v1/import.ts"],"sourcesContent":["import { Import } from '@rocket.chat/core-services';\nimport { Imports } from '@rocket.chat/models';\nimport {\n\tisUploadImportFileParamsPOST,\n\tisDownloadPublicImportFileParamsPOST,\n\tisStartImportParamsPOST,\n\tisGetImportFileDataParamsGET,\n\tisGetImportProgressParamsGET,\n\tisGetLatestImportOperationsParamsGET,\n\tisDownloadPendingFilesParamsPOST,\n\tisDownloadPendingAvatarsParamsPOST,\n\tisGetCurrentImportOperationParamsGET,\n\tisImportersListParamsGET,\n\tisImportAddUsersParamsPOST,\n} from '@rocket.chat/rest-typings';\nimport { Meteor } from 'meteor/meteor';\n\nimport { PendingAvatarImporter } from '../../../importer-pending-avatars/server/PendingAvatarImporter';\nimport { PendingFileImporter } from '../../../importer-pending-files/server/PendingFileImporter';\nimport { Importers } from '../../../importer/server';\nimport {\n\texecuteUploadImportFile,\n\texecuteDownloadPublicImportFile,\n\texecuteGetImportProgress,\n\texecuteGetImportFileData,\n\texecuteStartImport,\n\texecuteGetLatestImportOperations,\n} from '../../../importer/server/methods';\nimport { API } from '../api';\n\nAPI.v1.addRoute(\n\t'uploadImportFile',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isUploadImportFileParamsPOST,\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { binaryContent, contentType, fileName, importerKey } = this.bodyParams;\n\n\t\t\treturn API.v1.success(await executeUploadImportFile(this.userId, binaryContent, contentType, fileName, importerKey));\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'downloadPublicImportFile',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isDownloadPublicImportFileParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { fileUrl, importerKey } = this.bodyParams;\n\t\t\tawait executeDownloadPublicImportFile(this.userId, fileUrl, importerKey);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'startImport',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isStartImportParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { input } = this.bodyParams;\n\n\t\t\tawait executeStartImport({ input }, this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'getImportFileData',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isGetImportFileDataParamsGET,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst result = await executeGetImportFileData();\n\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'getImportProgress',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isGetImportProgressParamsGET,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst result = await executeGetImportProgress();\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'getLatestImportOperations',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isGetLatestImportOperationsParamsGET,\n\t\tpermissionsRequired: ['view-import-operations'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst result = await executeGetLatestImportOperations();\n\t\t\treturn API.v1.success(result);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'downloadPendingFiles',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isDownloadPendingFilesParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst importer = Importers.get('pending-files');\n\t\t\tif (!importer) {\n\t\t\t\tthrow new Meteor.Error('error-importer-not-defined', 'The Pending File Importer was not found.', 'downloadPendingFiles');\n\t\t\t}\n\n\t\t\tconst operation = await Import.newOperation(this.userId, importer.name, importer.key);\n\t\t\tconst instance = new PendingFileImporter(importer, operation);\n\t\t\tconst count = await instance.prepareFileCount();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcount,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'downloadPendingAvatars',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isDownloadPendingAvatarsParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst importer = Importers.get('pending-avatars');\n\t\t\tif (!importer) {\n\t\t\t\tthrow new Meteor.Error('error-importer-not-defined', 'The Pending File Importer was not found.', 'downloadPendingAvatars');\n\t\t\t}\n\n\t\t\tconst operation = await Import.newOperation(this.userId, importer.name, importer.key);\n\t\t\tconst instance = new PendingAvatarImporter(importer, operation);\n\t\t\tconst count = await instance.prepareFileCount();\n\n\t\t\treturn API.v1.success({\n\t\t\t\tcount,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'getCurrentImportOperation',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isGetCurrentImportOperationParamsGET,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst operation = await Imports.findLastImport();\n\t\t\treturn API.v1.success({\n\t\t\t\toperation,\n\t\t\t});\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'importers.list',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isImportersListParamsGET,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst importers = Importers.getAllVisible().map(({ key, name }) => ({ key, name }));\n\n\t\t\treturn API.v1.success(importers);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.clear',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tawait Import.clear();\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.new',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst operation = await Import.newOperation(this.userId, 'api', 'api');\n\n\t\t\treturn API.v1.success({ operation });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.status',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync get() {\n\t\t\tconst status = await Import.status();\n\n\t\t\treturn API.v1.success(status);\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.addUsers',\n\t{\n\t\tauthRequired: true,\n\t\tvalidateParams: isImportAddUsersParamsPOST,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tconst { users } = this.bodyParams;\n\n\t\t\tawait Import.addUsers(users);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'import.run',\n\t{\n\t\tauthRequired: true,\n\t\tpermissionsRequired: ['run-import'],\n\t},\n\t{\n\t\tasync post() {\n\t\t\tawait Import.run(this.userId);\n\n\t\t\treturn API.v1.success();\n\t\t},\n\t},\n);\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"493351dee93a2f82990b4c53c50b6db884d8c010"}
