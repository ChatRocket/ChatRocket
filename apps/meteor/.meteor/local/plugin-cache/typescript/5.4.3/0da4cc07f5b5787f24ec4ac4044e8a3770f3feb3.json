{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/emoji-emojione/server/lib.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/emoji-emojione/server/lib.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/emoji-emojione/server/lib.ts","inputSourceMap":{"version":3,"file":"app/emoji-emojione/server/lib.ts","sourceRoot":"","sources":["app/emoji-emojione/server/lib.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,KAAK,EAAE,MAAM,oBAAoB,CAAC;AAC3C,OAAO,EAAE,iBAAiB,EAAE,MAAM,0CAA0C,CAAC;AAC7E,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAEnD,MAAM,MAAM,GAAG,cAAc,EAAE,CAAC;AAEhC,KAAK,CAAC,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAe,CAAC;AACjD,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC7B,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IACjD,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;IACnE,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,GAAG,MAAM,CAAC,eAAiE,CAAC;IACnH,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;IAEnD,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC/C,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;IAC3D,oBAAoB;IACpB,4EAA4E;IAC5E,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAChD,IAAI,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC;YACtD,MAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YACvD,YAAY,CAAC,YAAY,GAAG,UAAU,CAAC;YACvC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC;YAE/B,IAAI,YAAY,CAAC,UAAU,EAAE,CAAC;gBAC7B,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAiB,EAAE,EAAE;oBACrD,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC;gBACtC,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;IACF,CAAC;IAED,sCAAsC;IACtC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;QACzB,IAAI,CAAC,MAAM,YAAY,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACpF,IAAI,MAAM,YAAY,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAY,EAAE,mBAAmB,CAAC,CAAC,EAAE,CAAC;gBACjG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,MAAM,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAY,EAAE,mBAAmB,CAAC,CAAC;YACzG,CAAC;iBAAM,CAAC;gBACP,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;YACtC,CAAC;QACF,CAAC;IACF,CAAC,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { emoji } from '../../emoji/server';\nimport { getUserPreference } from '../../utils/server/lib/getUserPreference';\nimport { getEmojiConfig } from '../lib/getEmojiConfig';\nimport { isSetNotNull } from '../lib/isSetNotNull';\n\nconst config = getEmojiConfig();\n\nemoji.packages.emojione = config.emojione as any;\nif (emoji.packages.emojione) {\n\temoji.packages.emojione.sprites = config.sprites;\n\temoji.packages.emojione.emojisByCategory = config.emojisByCategory;\n\temoji.packages.emojione.emojiCategories = config.emojiCategories as typeof emoji.packages.emojione.emojiCategories;\n\temoji.packages.emojione.toneList = config.toneList;\n\n\temoji.packages.emojione.render = config.render;\n\temoji.packages.emojione.renderPicker = config.renderPicker;\n\t// TODO: check types\n\t// RocketChat.emoji.list is the collection of emojis from all emoji packages\n\tfor (const key in config.emojione.emojioneList) {\n\t\tif (config.emojione.emojioneList.hasOwnProperty(key)) {\n\t\t\tconst currentEmoji = config.emojione.emojioneList[key];\n\t\t\tcurrentEmoji.emojiPackage = 'emojione';\n\t\t\temoji.list[key] = currentEmoji;\n\n\t\t\tif (currentEmoji.shortnames) {\n\t\t\t\tcurrentEmoji.shortnames.forEach((shortname: string) => {\n\t\t\t\t\temoji.list[shortname] = currentEmoji;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t// Additional settings -- ascii emojis\n\tMeteor.startup(async () => {\n\t\tif ((await isSetNotNull(() => emoji.packages.emojione)) && emoji.packages.emojione) {\n\t\t\tif (await isSetNotNull(() => getUserPreference(Meteor.userId() as string, 'convertAsciiEmoji'))) {\n\t\t\t\temoji.packages.emojione.ascii = await getUserPreference(Meteor.userId() as string, 'convertAsciiEmoji');\n\t\t\t} else {\n\t\t\t\temoji.packages.emojione.ascii = true;\n\t\t\t}\n\t\t}\n\t});\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/emoji-emojione/server/lib.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/emoji-emojione/server/lib.ts","inputSourceMap":{"version":3,"file":"app/emoji-emojione/server/lib.ts","sourceRoot":"","sources":["app/emoji-emojione/server/lib.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,KAAK,EAAE,MAAM,oBAAoB,CAAC;AAC3C,OAAO,EAAE,iBAAiB,EAAE,MAAM,0CAA0C,CAAC;AAC7E,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAEnD,MAAM,MAAM,GAAG,cAAc,EAAE,CAAC;AAEhC,KAAK,CAAC,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAe,CAAC;AACjD,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC7B,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IACjD,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;IACnE,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,GAAG,MAAM,CAAC,eAAiE,CAAC;IACnH,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;IAEnD,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC/C,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;IAC3D,oBAAoB;IACpB,4EAA4E;IAC5E,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAChD,IAAI,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC;YACtD,MAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YACvD,YAAY,CAAC,YAAY,GAAG,UAAU,CAAC;YACvC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC;YAE/B,IAAI,YAAY,CAAC,UAAU,EAAE,CAAC;gBAC7B,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAiB,EAAE,EAAE;oBACrD,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC;gBACtC,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;IACF,CAAC;IAED,sCAAsC;IACtC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;QACzB,IAAI,CAAC,MAAM,YAAY,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACpF,IAAI,MAAM,YAAY,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAY,EAAE,mBAAmB,CAAC,CAAC,EAAE,CAAC;gBACjG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,MAAM,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAY,EAAE,mBAAmB,CAAC,CAAC;YACzG,CAAC;iBAAM,CAAC;gBACP,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;YACtC,CAAC;QACF,CAAC;IACF,CAAC,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { emoji } from '../../emoji/server';\nimport { getUserPreference } from '../../utils/server/lib/getUserPreference';\nimport { getEmojiConfig } from '../lib/getEmojiConfig';\nimport { isSetNotNull } from '../lib/isSetNotNull';\n\nconst config = getEmojiConfig();\n\nemoji.packages.emojione = config.emojione as any;\nif (emoji.packages.emojione) {\n\temoji.packages.emojione.sprites = config.sprites;\n\temoji.packages.emojione.emojisByCategory = config.emojisByCategory;\n\temoji.packages.emojione.emojiCategories = config.emojiCategories as typeof emoji.packages.emojione.emojiCategories;\n\temoji.packages.emojione.toneList = config.toneList;\n\n\temoji.packages.emojione.render = config.render;\n\temoji.packages.emojione.renderPicker = config.renderPicker;\n\t// TODO: check types\n\t// RocketChat.emoji.list is the collection of emojis from all emoji packages\n\tfor (const key in config.emojione.emojioneList) {\n\t\tif (config.emojione.emojioneList.hasOwnProperty(key)) {\n\t\t\tconst currentEmoji = config.emojione.emojioneList[key];\n\t\t\tcurrentEmoji.emojiPackage = 'emojione';\n\t\t\temoji.list[key] = currentEmoji;\n\n\t\t\tif (currentEmoji.shortnames) {\n\t\t\t\tcurrentEmoji.shortnames.forEach((shortname: string) => {\n\t\t\t\t\temoji.list[shortname] = currentEmoji;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t// Additional settings -- ascii emojis\n\tMeteor.startup(async () => {\n\t\tif ((await isSetNotNull(() => emoji.packages.emojione)) && emoji.packages.emojione) {\n\t\t\tif (await isSetNotNull(() => getUserPreference(Meteor.userId() as string, 'convertAsciiEmoji'))) {\n\t\t\t\temoji.packages.emojione.ascii = await getUserPreference(Meteor.userId() as string, 'convertAsciiEmoji');\n\t\t\t} else {\n\t\t\t\temoji.packages.emojione.ascii = true;\n\t\t\t}\n\t\t}\n\t});\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let Meteor;\n    module.link(\"meteor/meteor\", {\n      Meteor(v) {\n        Meteor = v;\n      }\n    }, 0);\n    let emoji;\n    module.link(\"../../emoji/server\", {\n      emoji(v) {\n        emoji = v;\n      }\n    }, 1);\n    let getUserPreference;\n    module.link(\"../../utils/server/lib/getUserPreference\", {\n      getUserPreference(v) {\n        getUserPreference = v;\n      }\n    }, 2);\n    let getEmojiConfig;\n    module.link(\"../lib/getEmojiConfig\", {\n      getEmojiConfig(v) {\n        getEmojiConfig = v;\n      }\n    }, 3);\n    let isSetNotNull;\n    module.link(\"../lib/isSetNotNull\", {\n      isSetNotNull(v) {\n        isSetNotNull = v;\n      }\n    }, 4);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const config = getEmojiConfig();\n    emoji.packages.emojione = config.emojione;\n    if (emoji.packages.emojione) {\n      emoji.packages.emojione.sprites = config.sprites;\n      emoji.packages.emojione.emojisByCategory = config.emojisByCategory;\n      emoji.packages.emojione.emojiCategories = config.emojiCategories;\n      emoji.packages.emojione.toneList = config.toneList;\n      emoji.packages.emojione.render = config.render;\n      emoji.packages.emojione.renderPicker = config.renderPicker;\n      // TODO: check types\n      // RocketChat.emoji.list is the collection of emojis from all emoji packages\n      for (const key in config.emojione.emojioneList) {\n        if (config.emojione.emojioneList.hasOwnProperty(key)) {\n          const currentEmoji = config.emojione.emojioneList[key];\n          currentEmoji.emojiPackage = 'emojione';\n          emoji.list[key] = currentEmoji;\n          if (currentEmoji.shortnames) {\n            currentEmoji.shortnames.forEach(shortname => {\n              emoji.list[shortname] = currentEmoji;\n            });\n          }\n        }\n      }\n      // Additional settings -- ascii emojis\n      Meteor.startup(async () => {\n        if ((await isSetNotNull(() => emoji.packages.emojione)) && emoji.packages.emojione) {\n          if (await isSetNotNull(() => getUserPreference(Meteor.userId(), 'convertAsciiEmoji'))) {\n            emoji.packages.emojione.ascii = await getUserPreference(Meteor.userId(), 'convertAsciiEmoji');\n          } else {\n            emoji.packages.emojione.ascii = true;\n          }\n        }\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["Meteor","module","link","v","emoji","getUserPreference","getEmojiConfig","isSetNotNull","__reifyWaitForDeps__","config","packages","emojione","sprites","emojisByCategory","emojiCategories","toneList","render","renderPicker","key","emojioneList","hasOwnProperty","currentEmoji","emojiPackage","list","shortnames","forEach","shortname","startup","userId","ascii","__reify_async_result__","_reifyError","self","async"],"sources":["app/emoji-emojione/server/lib.ts"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { emoji } from '../../emoji/server';\nimport { getUserPreference } from '../../utils/server/lib/getUserPreference';\nimport { getEmojiConfig } from '../lib/getEmojiConfig';\nimport { isSetNotNull } from '../lib/isSetNotNull';\n\nconst config = getEmojiConfig();\n\nemoji.packages.emojione = config.emojione as any;\nif (emoji.packages.emojione) {\n\temoji.packages.emojione.sprites = config.sprites;\n\temoji.packages.emojione.emojisByCategory = config.emojisByCategory;\n\temoji.packages.emojione.emojiCategories = config.emojiCategories as typeof emoji.packages.emojione.emojiCategories;\n\temoji.packages.emojione.toneList = config.toneList;\n\n\temoji.packages.emojione.render = config.render;\n\temoji.packages.emojione.renderPicker = config.renderPicker;\n\t// TODO: check types\n\t// RocketChat.emoji.list is the collection of emojis from all emoji packages\n\tfor (const key in config.emojione.emojioneList) {\n\t\tif (config.emojione.emojioneList.hasOwnProperty(key)) {\n\t\t\tconst currentEmoji = config.emojione.emojioneList[key];\n\t\t\tcurrentEmoji.emojiPackage = 'emojione';\n\t\t\temoji.list[key] = currentEmoji;\n\n\t\t\tif (currentEmoji.shortnames) {\n\t\t\t\tcurrentEmoji.shortnames.forEach((shortname: string) => {\n\t\t\t\t\temoji.list[shortname] = currentEmoji;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t// Additional settings -- ascii emojis\n\tMeteor.startup(async () => {\n\t\tif ((await isSetNotNull(() => emoji.packages.emojione)) && emoji.packages.emojione) {\n\t\t\tif (await isSetNotNull(() => getUserPreference(Meteor.userId() as string, 'convertAsciiEmoji'))) {\n\t\t\t\temoji.packages.emojione.ascii = await getUserPreference(Meteor.userId() as string, 'convertAsciiEmoji');\n\t\t\t} else {\n\t\t\t\temoji.packages.emojione.ascii = true;\n\t\t\t}\n\t\t}\n\t});\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"0da4cc07f5b5787f24ec4ac4044e8a3770f3feb3"}
