{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/client/methods/sendMessage.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/lib/client/methods/sendMessage.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/client/methods/sendMessage.ts","inputSourceMap":{"version":3,"file":"app/lib/client/methods/sendMessage.ts","sourceRoot":"","sources":["app/lib/client/methods/sendMessage.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,uBAAuB,EAAE,MAAM,gDAAgD,CAAC;AACzF,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;AACpE,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,IAAI,EAAE,MAAM,mCAAmC,CAAC;AACzD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAC/D,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,CAAC,EAAE,MAAM,yBAAyB,CAAC;AAE5C,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,WAAW,CAAC,OAAO;QACxB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC;YACtC,OAAO,KAAK,CAAC;QACd,CAAC;QACD,MAAM,oBAAoB,GAAG,OAAO,CAAC,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;QACtF,IAAI,oBAAoB,EAAE,CAAC;YAC1B,OAAO,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC;QACpF,CAAC;QACD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,EAAkB,CAAC;QAC3C,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC;YACrB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC;QACzF,CAAC;QACD,OAAO,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,OAAO,CAAC,CAAC,GAAG;YACX,GAAG,EAAE,GAAG;YACR,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;SACrB,CAAC;QACF,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACpB,IAAI,QAAQ,CAAC,GAAG,CAAC,8BAA8B,CAAC,EAAE,CAAC;YAClD,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,CAAC;QAED,4DAA4D;QAC5D,MAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC3F,IAAI,IAAI,EAAE,SAAS,EAAE,CAAC;YACrB,OAAO;QACR,CAAC;QAED,MAAM,uBAAuB,CAAC,OAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;YACnE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC5B,OAAO,SAAS,CAAC,GAAG,CAAC,kBAAkB,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACJ,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Meteor } from 'meteor/meteor';\n\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\nimport { dispatchToastMessage } from '../../../../client/lib/toast';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { ChatMessage, ChatRoom } from '../../../models/client';\nimport { settings } from '../../../settings/client';\nimport { t } from '../../../utils/lib/i18n';\n\nMeteor.methods<ServerMethods>({\n\tasync sendMessage(message) {\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid || trim(message.msg) === '') {\n\t\t\treturn false;\n\t\t}\n\t\tconst messageAlreadyExists = message._id && ChatMessage.findOne({ _id: message._id });\n\t\tif (messageAlreadyExists) {\n\t\t\treturn dispatchToastMessage({ type: 'error', message: t('Message_Already_Sent') });\n\t\t}\n\t\tconst user = Meteor.user() as IUser | null;\n\t\tif (!user?.username) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'sendMessage' });\n\t\t}\n\t\tmessage.ts = new Date();\n\t\tmessage.u = {\n\t\t\t_id: uid,\n\t\t\tusername: user.username,\n\t\t\tname: user.name || '',\n\t\t};\n\t\tmessage.temp = true;\n\t\tif (settings.get('Message_Read_Receipt_Enabled')) {\n\t\t\tmessage.unread = true;\n\t\t}\n\n\t\t// If the room is federated, send the message to matrix only\n\t\tconst room = ChatRoom.findOne({ _id: message.rid }, { fields: { federated: 1, name: 1 } });\n\t\tif (room?.federated) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait onClientMessageReceived(message as IMessage).then((message) => {\n\t\t\tChatMessage.insert(message);\n\t\t\treturn callbacks.run('afterSaveMessage', message, { room });\n\t\t});\n\t},\n});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/lib/client/methods/sendMessage.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/client/methods/sendMessage.ts","inputSourceMap":{"version":3,"file":"app/lib/client/methods/sendMessage.ts","sourceRoot":"","sources":["app/lib/client/methods/sendMessage.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,uBAAuB,EAAE,MAAM,gDAAgD,CAAC;AACzF,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;AACpE,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,IAAI,EAAE,MAAM,mCAAmC,CAAC;AACzD,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAC/D,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,CAAC,EAAE,MAAM,yBAAyB,CAAC;AAE5C,MAAM,CAAC,OAAO,CAAgB;IAC7B,KAAK,CAAC,WAAW,CAAC,OAAO;QACxB,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC;YACtC,OAAO,KAAK,CAAC;QACd,CAAC;QACD,MAAM,oBAAoB,GAAG,OAAO,CAAC,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;QACtF,IAAI,oBAAoB,EAAE,CAAC;YAC1B,OAAO,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC;QACpF,CAAC;QACD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,EAAkB,CAAC;QAC3C,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC;YACrB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC;QACzF,CAAC;QACD,OAAO,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,OAAO,CAAC,CAAC,GAAG;YACX,GAAG,EAAE,GAAG;YACR,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;SACrB,CAAC;QACF,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACpB,IAAI,QAAQ,CAAC,GAAG,CAAC,8BAA8B,CAAC,EAAE,CAAC;YAClD,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,CAAC;QAED,4DAA4D;QAC5D,MAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC3F,IAAI,IAAI,EAAE,SAAS,EAAE,CAAC;YACrB,OAAO;QACR,CAAC;QAED,MAAM,uBAAuB,CAAC,OAAmB,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;YACnE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC5B,OAAO,SAAS,CAAC,GAAG,CAAC,kBAAkB,EAAE,OAAO,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACJ,CAAC;CACD,CAAC,CAAC","sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Meteor } from 'meteor/meteor';\n\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\nimport { dispatchToastMessage } from '../../../../client/lib/toast';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { ChatMessage, ChatRoom } from '../../../models/client';\nimport { settings } from '../../../settings/client';\nimport { t } from '../../../utils/lib/i18n';\n\nMeteor.methods<ServerMethods>({\n\tasync sendMessage(message) {\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid || trim(message.msg) === '') {\n\t\t\treturn false;\n\t\t}\n\t\tconst messageAlreadyExists = message._id && ChatMessage.findOne({ _id: message._id });\n\t\tif (messageAlreadyExists) {\n\t\t\treturn dispatchToastMessage({ type: 'error', message: t('Message_Already_Sent') });\n\t\t}\n\t\tconst user = Meteor.user() as IUser | null;\n\t\tif (!user?.username) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'sendMessage' });\n\t\t}\n\t\tmessage.ts = new Date();\n\t\tmessage.u = {\n\t\t\t_id: uid,\n\t\t\tusername: user.username,\n\t\t\tname: user.name || '',\n\t\t};\n\t\tmessage.temp = true;\n\t\tif (settings.get('Message_Read_Receipt_Enabled')) {\n\t\t\tmessage.unread = true;\n\t\t}\n\n\t\t// If the room is federated, send the message to matrix only\n\t\tconst room = ChatRoom.findOne({ _id: message.rid }, { fields: { federated: 1, name: 1 } });\n\t\tif (room?.federated) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait onClientMessageReceived(message as IMessage).then((message) => {\n\t\t\tChatMessage.insert(message);\n\t\t\treturn callbacks.run('afterSaveMessage', message, { room });\n\t\t});\n\t},\n});\n"]}}},"code":"var _regeneratorRuntime;\nmodule.link(\"@babel/runtime/regenerator\", {\n  default: function (v) {\n    _regeneratorRuntime = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar onClientMessageReceived;\nmodule.link(\"../../../../client/lib/onClientMessageReceived\", {\n  onClientMessageReceived: function (v) {\n    onClientMessageReceived = v;\n  }\n}, 1);\nvar dispatchToastMessage;\nmodule.link(\"../../../../client/lib/toast\", {\n  dispatchToastMessage: function (v) {\n    dispatchToastMessage = v;\n  }\n}, 2);\nvar callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks: function (v) {\n    callbacks = v;\n  }\n}, 3);\nvar trim;\nmodule.link(\"../../../../lib/utils/stringUtils\", {\n  trim: function (v) {\n    trim = v;\n  }\n}, 4);\nvar ChatMessage, ChatRoom;\nmodule.link(\"../../../models/client\", {\n  ChatMessage: function (v) {\n    ChatMessage = v;\n  },\n  ChatRoom: function (v) {\n    ChatRoom = v;\n  }\n}, 5);\nvar settings;\nmodule.link(\"../../../settings/client\", {\n  settings: function (v) {\n    settings = v;\n  }\n}, 6);\nvar t;\nmodule.link(\"../../../utils/lib/i18n\", {\n  t: function (v) {\n    t = v;\n  }\n}, 7);\nMeteor.methods({\n  sendMessage: function () {\n    function _callee(message) {\n      var uid, messageAlreadyExists, user, room;\n      return _regeneratorRuntime.async(function () {\n        function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              uid = Meteor.userId();\n              if (!(!uid || trim(message.msg) === '')) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", false);\n            case 3:\n              messageAlreadyExists = message._id && ChatMessage.findOne({\n                _id: message._id\n              });\n              if (!messageAlreadyExists) {\n                _context.next = 6;\n                break;\n              }\n              return _context.abrupt(\"return\", dispatchToastMessage({\n                type: 'error',\n                message: t('Message_Already_Sent')\n              }));\n            case 6:\n              user = Meteor.user();\n              if (user !== null && user !== void 0 && user.username) {\n                _context.next = 9;\n                break;\n              }\n              throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n                method: 'sendMessage'\n              });\n            case 9:\n              message.ts = new Date();\n              message.u = {\n                _id: uid,\n                username: user.username,\n                name: user.name || ''\n              };\n              message.temp = true;\n              if (settings.get('Message_Read_Receipt_Enabled')) {\n                message.unread = true;\n              }\n              // If the room is federated, send the message to matrix only\n              room = ChatRoom.findOne({\n                _id: message.rid\n              }, {\n                fields: {\n                  federated: 1,\n                  name: 1\n                }\n              });\n              if (!(room !== null && room !== void 0 && room.federated)) {\n                _context.next = 16;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 16:\n              _context.next = 18;\n              return _regeneratorRuntime.awrap(onClientMessageReceived(message).then(function (message) {\n                ChatMessage.insert(message);\n                return callbacks.run('afterSaveMessage', message, {\n                  room: room\n                });\n              }));\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n        return _callee$;\n      }(), null, null, null, Promise);\n    }\n    return _callee;\n  }()\n});","map":{"version":3,"names":["_regeneratorRuntime","module","link","default","v","Meteor","onClientMessageReceived","dispatchToastMessage","callbacks","trim","ChatMessage","ChatRoom","settings","t","methods","sendMessage","_callee","message","uid","messageAlreadyExists","user","room","async","_callee$","_context","prev","next","userId","msg","abrupt","_id","findOne","type","username","Error","method","ts","Date","u","name","temp","get","unread","rid","fields","federated","awrap","then","insert","run","stop","Promise"],"sources":["app/lib/client/methods/sendMessage.ts"],"sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ddp-client';\nimport { Meteor } from 'meteor/meteor';\n\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\nimport { dispatchToastMessage } from '../../../../client/lib/toast';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { ChatMessage, ChatRoom } from '../../../models/client';\nimport { settings } from '../../../settings/client';\nimport { t } from '../../../utils/lib/i18n';\n\nMeteor.methods<ServerMethods>({\n\tasync sendMessage(message) {\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid || trim(message.msg) === '') {\n\t\t\treturn false;\n\t\t}\n\t\tconst messageAlreadyExists = message._id && ChatMessage.findOne({ _id: message._id });\n\t\tif (messageAlreadyExists) {\n\t\t\treturn dispatchToastMessage({ type: 'error', message: t('Message_Already_Sent') });\n\t\t}\n\t\tconst user = Meteor.user() as IUser | null;\n\t\tif (!user?.username) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'sendMessage' });\n\t\t}\n\t\tmessage.ts = new Date();\n\t\tmessage.u = {\n\t\t\t_id: uid,\n\t\t\tusername: user.username,\n\t\t\tname: user.name || '',\n\t\t};\n\t\tmessage.temp = true;\n\t\tif (settings.get('Message_Read_Receipt_Enabled')) {\n\t\t\tmessage.unread = true;\n\t\t}\n\n\t\t// If the room is federated, send the message to matrix only\n\t\tconst room = ChatRoom.findOne({ _id: message.rid }, { fields: { federated: 1, name: 1 } });\n\t\tif (room?.federated) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait onClientMessageReceived(message as IMessage).then((message) => {\n\t\t\tChatMessage.insert(message);\n\t\t\treturn callbacks.run('afterSaveMessage', message, { room });\n\t\t});\n\t},\n});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e1c136dd36e26ebd803ea9c6b4e8f541cb627014"}
