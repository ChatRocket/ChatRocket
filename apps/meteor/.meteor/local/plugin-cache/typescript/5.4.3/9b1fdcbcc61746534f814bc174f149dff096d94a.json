{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/push/server/gcm.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"app/push/server/gcm.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/push/server/gcm.ts","inputSourceMap":{"version":3,"file":"app/push/server/gcm.ts","sourceRoot":"","sources":["app/push/server/gcm.ts"],"names":[],"mappings":"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","sourcesContent":["import EJSON from 'ejson';\nimport gcm from 'node-gcm';\n\nimport { logger } from './logger';\nimport type { NativeNotificationParameters } from './push';\n\n/**\n * @deprecated Use sendFCM instead, node-gcm is deprecated and google will remove it soon\n */\nexport const sendGCM = function ({ userTokens, notification, _replaceToken, _removeToken, options }: NativeNotificationParameters) {\n\t// Make sure userTokens are an array of strings\n\tif (typeof userTokens === 'string') {\n\t\tuserTokens = [userTokens];\n\t}\n\n\t// Check if any tokens in there to send\n\tif (!userTokens.length) {\n\t\tlogger.debug('sendGCM no push tokens found');\n\t\treturn;\n\t}\n\n\tlogger.debug('sendGCM', userTokens, notification);\n\n\t// Allow user to set payload\n\tconst data: Record<string, any> = notification.payload ? { ejson: EJSON.stringify(notification.payload) } : {};\n\n\tdata.title = notification.title;\n\tdata.message = notification.text;\n\n\t// Set image\n\tif (notification.gcm?.image != null) {\n\t\tdata.image = notification.gcm?.image;\n\t}\n\n\t// Set extra details\n\tif (notification.badge != null) {\n\t\tdata.msgcnt = notification.badge;\n\t}\n\tif (notification.sound != null) {\n\t\tdata.soundname = notification.sound;\n\t}\n\tif (notification.notId != null) {\n\t\tdata.notId = notification.notId;\n\t}\n\tif (notification.gcm?.style != null) {\n\t\tdata.style = notification.gcm?.style;\n\t}\n\n\tif (notification.contentAvailable != null) {\n\t\tdata['content-available'] = notification.contentAvailable;\n\t}\n\n\tconst message = new gcm.Message({\n\t\tcollapseKey: notification.from,\n\t\t// Requires delivery of real-time messages to users while device is in Doze or app is in App Standby.\n\t\t// https://developer.android.com/training/monitoring-device-state/doze-standby#exemption-cases\n\t\tpriority: 'high',\n\t\t//    delayWhileIdle: true,\n\t\t//    timeToLive: 4,\n\t\t//    restricted_package_name: 'dk.gi2.app'\n\t\tdata,\n\t});\n\n\tlogger.debug(`Create GCM Sender using \"${options.gcm.apiKey}\"`);\n\tconst sender = new gcm.Sender(options.gcm.apiKey);\n\n\tuserTokens.forEach((value) => logger.debug(`A:Send message to: ${value}`));\n\n\tconst userToken = userTokens.length === 1 ? userTokens[0] : null;\n\n\tsender.send(message, userTokens, 5, (err, result) => {\n\t\tif (err) {\n\t\t\tlogger.debug({ msg: 'ANDROID ERROR: result of sender', result });\n\t\t\treturn;\n\t\t}\n\n\t\tif (result === null) {\n\t\t\tlogger.debug('ANDROID: Result of sender is null');\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.debug({ msg: 'ANDROID: Result of sender', result });\n\n\t\tif (result.canonical_ids === 1 && userToken && result.results?.[0].registration_id) {\n\t\t\t// This is an old device, token is replaced\n\t\t\ttry {\n\t\t\t\t_replaceToken({ gcm: userToken }, { gcm: result.results[0].registration_id });\n\t\t\t} catch (err) {\n\t\t\t\tlogger.error({ msg: 'Error replacing token', err });\n\t\t\t}\n\t\t}\n\t\t// We cant send to that token - might not be registered\n\t\t// ask the user to remove the token from the list\n\t\tif (result.failure !== 0 && userToken) {\n\t\t\t// This is an old device, token is replaced\n\t\t\ttry {\n\t\t\t\t_removeToken({ gcm: userToken });\n\t\t\t} catch (err) {\n\t\t\t\tlogger.error({ msg: 'Error removing token', err });\n\t\t\t}\n\t\t}\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/push/server/gcm.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/push/server/gcm.ts","inputSourceMap":{"version":3,"file":"app/push/server/gcm.ts","sourceRoot":"","sources":["app/push/server/gcm.ts"],"names":[],"mappings":"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","sourcesContent":["import EJSON from 'ejson';\nimport gcm from 'node-gcm';\n\nimport { logger } from './logger';\nimport type { NativeNotificationParameters } from './push';\n\n/**\n * @deprecated Use sendFCM instead, node-gcm is deprecated and google will remove it soon\n */\nexport const sendGCM = function ({ userTokens, notification, _replaceToken, _removeToken, options }: NativeNotificationParameters) {\n\t// Make sure userTokens are an array of strings\n\tif (typeof userTokens === 'string') {\n\t\tuserTokens = [userTokens];\n\t}\n\n\t// Check if any tokens in there to send\n\tif (!userTokens.length) {\n\t\tlogger.debug('sendGCM no push tokens found');\n\t\treturn;\n\t}\n\n\tlogger.debug('sendGCM', userTokens, notification);\n\n\t// Allow user to set payload\n\tconst data: Record<string, any> = notification.payload ? { ejson: EJSON.stringify(notification.payload) } : {};\n\n\tdata.title = notification.title;\n\tdata.message = notification.text;\n\n\t// Set image\n\tif (notification.gcm?.image != null) {\n\t\tdata.image = notification.gcm?.image;\n\t}\n\n\t// Set extra details\n\tif (notification.badge != null) {\n\t\tdata.msgcnt = notification.badge;\n\t}\n\tif (notification.sound != null) {\n\t\tdata.soundname = notification.sound;\n\t}\n\tif (notification.notId != null) {\n\t\tdata.notId = notification.notId;\n\t}\n\tif (notification.gcm?.style != null) {\n\t\tdata.style = notification.gcm?.style;\n\t}\n\n\tif (notification.contentAvailable != null) {\n\t\tdata['content-available'] = notification.contentAvailable;\n\t}\n\n\tconst message = new gcm.Message({\n\t\tcollapseKey: notification.from,\n\t\t// Requires delivery of real-time messages to users while device is in Doze or app is in App Standby.\n\t\t// https://developer.android.com/training/monitoring-device-state/doze-standby#exemption-cases\n\t\tpriority: 'high',\n\t\t//    delayWhileIdle: true,\n\t\t//    timeToLive: 4,\n\t\t//    restricted_package_name: 'dk.gi2.app'\n\t\tdata,\n\t});\n\n\tlogger.debug(`Create GCM Sender using \"${options.gcm.apiKey}\"`);\n\tconst sender = new gcm.Sender(options.gcm.apiKey);\n\n\tuserTokens.forEach((value) => logger.debug(`A:Send message to: ${value}`));\n\n\tconst userToken = userTokens.length === 1 ? userTokens[0] : null;\n\n\tsender.send(message, userTokens, 5, (err, result) => {\n\t\tif (err) {\n\t\t\tlogger.debug({ msg: 'ANDROID ERROR: result of sender', result });\n\t\t\treturn;\n\t\t}\n\n\t\tif (result === null) {\n\t\t\tlogger.debug('ANDROID: Result of sender is null');\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.debug({ msg: 'ANDROID: Result of sender', result });\n\n\t\tif (result.canonical_ids === 1 && userToken && result.results?.[0].registration_id) {\n\t\t\t// This is an old device, token is replaced\n\t\t\ttry {\n\t\t\t\t_replaceToken({ gcm: userToken }, { gcm: result.results[0].registration_id });\n\t\t\t} catch (err) {\n\t\t\t\tlogger.error({ msg: 'Error replacing token', err });\n\t\t\t}\n\t\t}\n\t\t// We cant send to that token - might not be registered\n\t\t// ask the user to remove the token from the list\n\t\tif (result.failure !== 0 && userToken) {\n\t\t\t// This is an old device, token is replaced\n\t\t\ttry {\n\t\t\t\t_removeToken({ gcm: userToken });\n\t\t\t} catch (err) {\n\t\t\t\tlogger.error({ msg: 'Error removing token', err });\n\t\t\t}\n\t\t}\n\t});\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      sendGCM: () => sendGCM\n    });\n    let EJSON;\n    module.link(\"ejson\", {\n      default(v) {\n        EJSON = v;\n      }\n    }, 0);\n    let gcm;\n    module.link(\"node-gcm\", {\n      default(v) {\n        gcm = v;\n      }\n    }, 1);\n    let logger;\n    module.link(\"./logger\", {\n      logger(v) {\n        logger = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const sendGCM = function (_ref) {\n      var _notification$gcm, _notification$gcm3;\n      let {\n        userTokens,\n        notification,\n        _replaceToken,\n        _removeToken,\n        options\n      } = _ref;\n      // Make sure userTokens are an array of strings\n      if (typeof userTokens === 'string') {\n        userTokens = [userTokens];\n      }\n      // Check if any tokens in there to send\n      if (!userTokens.length) {\n        logger.debug('sendGCM no push tokens found');\n        return;\n      }\n      logger.debug('sendGCM', userTokens, notification);\n      // Allow user to set payload\n      const data = notification.payload ? {\n        ejson: EJSON.stringify(notification.payload)\n      } : {};\n      data.title = notification.title;\n      data.message = notification.text;\n      // Set image\n      if (((_notification$gcm = notification.gcm) === null || _notification$gcm === void 0 ? void 0 : _notification$gcm.image) != null) {\n        var _notification$gcm2;\n        data.image = (_notification$gcm2 = notification.gcm) === null || _notification$gcm2 === void 0 ? void 0 : _notification$gcm2.image;\n      }\n      // Set extra details\n      if (notification.badge != null) {\n        data.msgcnt = notification.badge;\n      }\n      if (notification.sound != null) {\n        data.soundname = notification.sound;\n      }\n      if (notification.notId != null) {\n        data.notId = notification.notId;\n      }\n      if (((_notification$gcm3 = notification.gcm) === null || _notification$gcm3 === void 0 ? void 0 : _notification$gcm3.style) != null) {\n        var _notification$gcm4;\n        data.style = (_notification$gcm4 = notification.gcm) === null || _notification$gcm4 === void 0 ? void 0 : _notification$gcm4.style;\n      }\n      if (notification.contentAvailable != null) {\n        data['content-available'] = notification.contentAvailable;\n      }\n      const message = new gcm.Message({\n        collapseKey: notification.from,\n        // Requires delivery of real-time messages to users while device is in Doze or app is in App Standby.\n        // https://developer.android.com/training/monitoring-device-state/doze-standby#exemption-cases\n        priority: 'high',\n        //    delayWhileIdle: true,\n        //    timeToLive: 4,\n        //    restricted_package_name: 'dk.gi2.app'\n        data\n      });\n      logger.debug(\"Create GCM Sender using \\\"\".concat(options.gcm.apiKey, \"\\\"\"));\n      const sender = new gcm.Sender(options.gcm.apiKey);\n      userTokens.forEach(value => logger.debug(\"A:Send message to: \".concat(value)));\n      const userToken = userTokens.length === 1 ? userTokens[0] : null;\n      sender.send(message, userTokens, 5, (err, result) => {\n        var _result$results;\n        if (err) {\n          logger.debug({\n            msg: 'ANDROID ERROR: result of sender',\n            result\n          });\n          return;\n        }\n        if (result === null) {\n          logger.debug('ANDROID: Result of sender is null');\n          return;\n        }\n        logger.debug({\n          msg: 'ANDROID: Result of sender',\n          result\n        });\n        if (result.canonical_ids === 1 && userToken && (_result$results = result.results) !== null && _result$results !== void 0 && _result$results[0].registration_id) {\n          // This is an old device, token is replaced\n          try {\n            _replaceToken({\n              gcm: userToken\n            }, {\n              gcm: result.results[0].registration_id\n            });\n          } catch (err) {\n            logger.error({\n              msg: 'Error replacing token',\n              err\n            });\n          }\n        }\n        // We cant send to that token - might not be registered\n        // ask the user to remove the token from the list\n        if (result.failure !== 0 && userToken) {\n          // This is an old device, token is replaced\n          try {\n            _removeToken({\n              gcm: userToken\n            });\n          } catch (err) {\n            logger.error({\n              msg: 'Error removing token',\n              err\n            });\n          }\n        }\n      });\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","sendGCM","EJSON","link","default","v","gcm","logger","__reifyWaitForDeps__","_ref","_notification$gcm","_notification$gcm3","userTokens","notification","_replaceToken","_removeToken","options","length","debug","data","payload","ejson","stringify","title","message","text","image","_notification$gcm2","badge","msgcnt","sound","soundname","notId","style","_notification$gcm4","contentAvailable","Message","collapseKey","from","priority","concat","apiKey","sender","Sender","forEach","value","userToken","send","err","result","_result$results","msg","canonical_ids","results","registration_id","error","failure","__reify_async_result__","_reifyError","self","async"],"sources":["app/push/server/gcm.ts"],"sourcesContent":["import EJSON from 'ejson';\nimport gcm from 'node-gcm';\n\nimport { logger } from './logger';\nimport type { NativeNotificationParameters } from './push';\n\n/**\n * @deprecated Use sendFCM instead, node-gcm is deprecated and google will remove it soon\n */\nexport const sendGCM = function ({ userTokens, notification, _replaceToken, _removeToken, options }: NativeNotificationParameters) {\n\t// Make sure userTokens are an array of strings\n\tif (typeof userTokens === 'string') {\n\t\tuserTokens = [userTokens];\n\t}\n\n\t// Check if any tokens in there to send\n\tif (!userTokens.length) {\n\t\tlogger.debug('sendGCM no push tokens found');\n\t\treturn;\n\t}\n\n\tlogger.debug('sendGCM', userTokens, notification);\n\n\t// Allow user to set payload\n\tconst data: Record<string, any> = notification.payload ? { ejson: EJSON.stringify(notification.payload) } : {};\n\n\tdata.title = notification.title;\n\tdata.message = notification.text;\n\n\t// Set image\n\tif (notification.gcm?.image != null) {\n\t\tdata.image = notification.gcm?.image;\n\t}\n\n\t// Set extra details\n\tif (notification.badge != null) {\n\t\tdata.msgcnt = notification.badge;\n\t}\n\tif (notification.sound != null) {\n\t\tdata.soundname = notification.sound;\n\t}\n\tif (notification.notId != null) {\n\t\tdata.notId = notification.notId;\n\t}\n\tif (notification.gcm?.style != null) {\n\t\tdata.style = notification.gcm?.style;\n\t}\n\n\tif (notification.contentAvailable != null) {\n\t\tdata['content-available'] = notification.contentAvailable;\n\t}\n\n\tconst message = new gcm.Message({\n\t\tcollapseKey: notification.from,\n\t\t// Requires delivery of real-time messages to users while device is in Doze or app is in App Standby.\n\t\t// https://developer.android.com/training/monitoring-device-state/doze-standby#exemption-cases\n\t\tpriority: 'high',\n\t\t//    delayWhileIdle: true,\n\t\t//    timeToLive: 4,\n\t\t//    restricted_package_name: 'dk.gi2.app'\n\t\tdata,\n\t});\n\n\tlogger.debug(`Create GCM Sender using \"${options.gcm.apiKey}\"`);\n\tconst sender = new gcm.Sender(options.gcm.apiKey);\n\n\tuserTokens.forEach((value) => logger.debug(`A:Send message to: ${value}`));\n\n\tconst userToken = userTokens.length === 1 ? userTokens[0] : null;\n\n\tsender.send(message, userTokens, 5, (err, result) => {\n\t\tif (err) {\n\t\t\tlogger.debug({ msg: 'ANDROID ERROR: result of sender', result });\n\t\t\treturn;\n\t\t}\n\n\t\tif (result === null) {\n\t\t\tlogger.debug('ANDROID: Result of sender is null');\n\t\t\treturn;\n\t\t}\n\n\t\tlogger.debug({ msg: 'ANDROID: Result of sender', result });\n\n\t\tif (result.canonical_ids === 1 && userToken && result.results?.[0].registration_id) {\n\t\t\t// This is an old device, token is replaced\n\t\t\ttry {\n\t\t\t\t_replaceToken({ gcm: userToken }, { gcm: result.results[0].registration_id });\n\t\t\t} catch (err) {\n\t\t\t\tlogger.error({ msg: 'Error replacing token', err });\n\t\t\t}\n\t\t}\n\t\t// We cant send to that token - might not be registered\n\t\t// ask the user to remove the token from the list\n\t\tif (result.failure !== 0 && userToken) {\n\t\t\t// This is an old device, token is replaced\n\t\t\ttry {\n\t\t\t\t_removeToken({ gcm: userToken });\n\t\t\t} catch (err) {\n\t\t\t\tlogger.error({ msg: 'Error removing token', err });\n\t\t\t}\n\t\t}\n\t});\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"9b1fdcbcc61746534f814bc174f149dff096d94a"}
