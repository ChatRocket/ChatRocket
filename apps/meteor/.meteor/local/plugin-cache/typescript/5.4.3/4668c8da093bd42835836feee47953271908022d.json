{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/setupWizard/steps/CloudAccountConfirmation.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/setupWizard/steps/CloudAccountConfirmation.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/setupWizard/steps/CloudAccountConfirmation.tsx","inputSourceMap":{"version":3,"file":"client/views/setupWizard/steps/CloudAccountConfirmation.tsx","sourceRoot":"","sources":["client/views/setupWizard/steps/CloudAccountConfirmation.tsx"],"names":[],"mappings":"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","sourcesContent":["import { AwaitingConfirmationPage } from '@rocket.chat/onboarding-ui';\nimport { useToastMessageDispatch, useSettingSetValue, useEndpoint } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useSetupWizardContext } from '../contexts/SetupWizardContext';\n\nconst setIntervalTime = (interval?: number): number => (interval ? interval * 1000 : 0);\n\nconst CloudAccountConfirmation = (): ReactElement => {\n\tconst {\n\t\tregisterServer,\n\t\tcurrentStep,\n\t\tmaxSteps,\n\t\tgoToStep,\n\t\tsetupWizardData: { registrationData },\n\t\tsaveWorkspaceData,\n\t} = useSetupWizardContext();\n\tconst setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\n\tconst cloudConfirmationPoll = useEndpoint('GET', '/v1/cloud.confirmationPoll');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst { t } = useTranslation();\n\n\tconst getConfirmation = useCallback(async () => {\n\t\ttry {\n\t\t\tif (registrationData.device_code) {\n\t\t\t\tconst { pollData } = await cloudConfirmationPoll({\n\t\t\t\t\tdeviceCode: registrationData.device_code,\n\t\t\t\t});\n\n\t\t\t\tif ('successful' in pollData && pollData.successful) {\n\t\t\t\t\tawait saveWorkspaceData();\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Your_workspace_is_ready') });\n\t\t\t\t\treturn setShowSetupWizard('completed');\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [cloudConfirmationPoll, registrationData.device_code, setShowSetupWizard, saveWorkspaceData, dispatchToastMessage, t]);\n\n\tuseEffect(() => {\n\t\tconst pollInterval = setInterval(() => getConfirmation(), setIntervalTime(registrationData.interval));\n\n\t\treturn (): void => clearInterval(pollInterval);\n\t}, [getConfirmation, registrationData.interval]);\n\n\treturn (\n\t\t<AwaitingConfirmationPage\n\t\t\tcurrentStep={currentStep}\n\t\t\tstepCount={maxSteps}\n\t\t\temailAddress={registrationData.cloudEmail}\n\t\t\tsecurityCode={registrationData.user_code}\n\t\t\tonResendEmailRequest={(): Promise<void> => registerServer({ email: registrationData.cloudEmail, resend: true })}\n\t\t\tonChangeEmailRequest={(): void => goToStep(3)}\n\t\t/>\n\t);\n};\n\nexport default CloudAccountConfirmation;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/setupWizard/steps/CloudAccountConfirmation.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/setupWizard/steps/CloudAccountConfirmation.tsx","inputSourceMap":{"version":3,"file":"client/views/setupWizard/steps/CloudAccountConfirmation.tsx","sourceRoot":"","sources":["client/views/setupWizard/steps/CloudAccountConfirmation.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,wBAAwB,EAAE,MAAM,4BAA4B,CAAC;AACtE,OAAO,EAAE,uBAAuB,EAAE,kBAAkB,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAEpG,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AACtD,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,OAAO,EAAE,qBAAqB,EAAE,MAAM,gCAAgC,CAAC;AAEvE,MAAM,eAAe,GAAG,CAAC,QAAiB,EAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAExF,MAAM,wBAAwB,GAAG,GAAiB,EAAE;IACnD,MAAM,EACL,cAAc,EACd,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,eAAe,EAAE,EAAE,gBAAgB,EAAE,EACrC,iBAAiB,GACjB,GAAG,qBAAqB,EAAE,CAAC;IAC5B,MAAM,kBAAkB,GAAG,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;IACnE,MAAM,qBAAqB,GAAG,WAAW,CAAC,KAAK,EAAE,4BAA4B,CAAC,CAAC;IAC/E,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAE/B,MAAM,eAAe,GAAG,WAAW,CAAC,KAAK,IAAI,EAAE;QAC9C,IAAI,CAAC;YACJ,IAAI,gBAAgB,CAAC,WAAW,EAAE,CAAC;gBAClC,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,qBAAqB,CAAC;oBAChD,UAAU,EAAE,gBAAgB,CAAC,WAAW;iBACxC,CAAC,CAAC;gBAEH,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,CAAC,UAAU,EAAE,CAAC;oBACrD,MAAM,iBAAiB,EAAE,CAAC;oBAC1B,oBAAoB,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC;oBACjF,OAAO,kBAAkB,CAAC,WAAW,CAAC,CAAC;gBACxC,CAAC;YACF,CAAC;QACF,CAAC;QAAC,OAAO,KAAc,EAAE,CAAC;YACzB,oBAAoB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACzD,CAAC;IACF,CAAC,EAAE,CAAC,qBAAqB,EAAE,gBAAgB,CAAC,WAAW,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,CAAC,CAAC,CAAC,CAAC;IAE1H,SAAS,CAAC,GAAG,EAAE;QACd,MAAM,YAAY,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,eAAe,EAAE,EAAE,eAAe,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEtG,OAAO,GAAS,EAAE,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IAChD,CAAC,EAAE,CAAC,eAAe,EAAE,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEjD,OAAO,CACN,CAAC,wBAAwB,CACxB,WAAW,CAAC,CAAC,WAAW,CAAC,CACzB,SAAS,CAAC,CAAC,QAAQ,CAAC,CACpB,YAAY,CAAC,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAC1C,YAAY,CAAC,CAAC,gBAAgB,CAAC,SAAS,CAAC,CACzC,oBAAoB,CAAC,CAAC,GAAkB,EAAE,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,gBAAgB,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAChH,oBAAoB,CAAC,CAAC,GAAS,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAC7C,CACF,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,wBAAwB,CAAC","sourcesContent":["import { AwaitingConfirmationPage } from '@rocket.chat/onboarding-ui';\nimport { useToastMessageDispatch, useSettingSetValue, useEndpoint } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useSetupWizardContext } from '../contexts/SetupWizardContext';\n\nconst setIntervalTime = (interval?: number): number => (interval ? interval * 1000 : 0);\n\nconst CloudAccountConfirmation = (): ReactElement => {\n\tconst {\n\t\tregisterServer,\n\t\tcurrentStep,\n\t\tmaxSteps,\n\t\tgoToStep,\n\t\tsetupWizardData: { registrationData },\n\t\tsaveWorkspaceData,\n\t} = useSetupWizardContext();\n\tconst setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\n\tconst cloudConfirmationPoll = useEndpoint('GET', '/v1/cloud.confirmationPoll');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst { t } = useTranslation();\n\n\tconst getConfirmation = useCallback(async () => {\n\t\ttry {\n\t\t\tif (registrationData.device_code) {\n\t\t\t\tconst { pollData } = await cloudConfirmationPoll({\n\t\t\t\t\tdeviceCode: registrationData.device_code,\n\t\t\t\t});\n\n\t\t\t\tif ('successful' in pollData && pollData.successful) {\n\t\t\t\t\tawait saveWorkspaceData();\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Your_workspace_is_ready') });\n\t\t\t\t\treturn setShowSetupWizard('completed');\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [cloudConfirmationPoll, registrationData.device_code, setShowSetupWizard, saveWorkspaceData, dispatchToastMessage, t]);\n\n\tuseEffect(() => {\n\t\tconst pollInterval = setInterval(() => getConfirmation(), setIntervalTime(registrationData.interval));\n\n\t\treturn (): void => clearInterval(pollInterval);\n\t}, [getConfirmation, registrationData.interval]);\n\n\treturn (\n\t\t<AwaitingConfirmationPage\n\t\t\tcurrentStep={currentStep}\n\t\t\tstepCount={maxSteps}\n\t\t\temailAddress={registrationData.cloudEmail}\n\t\t\tsecurityCode={registrationData.user_code}\n\t\t\tonResendEmailRequest={(): Promise<void> => registerServer({ email: registrationData.cloudEmail, resend: true })}\n\t\t\tonChangeEmailRequest={(): void => goToStep(3)}\n\t\t/>\n\t);\n};\n\nexport default CloudAccountConfirmation;\n"]}}},"code":"let AwaitingConfirmationPage;\nmodule.link(\"@rocket.chat/onboarding-ui\", {\n  AwaitingConfirmationPage(v) {\n    AwaitingConfirmationPage = v;\n  }\n}, 0);\nlet useToastMessageDispatch, useSettingSetValue, useEndpoint;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useToastMessageDispatch(v) {\n    useToastMessageDispatch = v;\n  },\n  useSettingSetValue(v) {\n    useSettingSetValue = v;\n  },\n  useEndpoint(v) {\n    useEndpoint = v;\n  }\n}, 1);\nlet React, useEffect, useCallback;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n  useEffect(v) {\n    useEffect = v;\n  },\n  useCallback(v) {\n    useCallback = v;\n  }\n}, 2);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 3);\nlet useSetupWizardContext;\nmodule.link(\"../contexts/SetupWizardContext\", {\n  useSetupWizardContext(v) {\n    useSetupWizardContext = v;\n  }\n}, 4);\nconst setIntervalTime = interval => interval ? interval * 1000 : 0;\nconst CloudAccountConfirmation = () => {\n  const {\n    registerServer,\n    currentStep,\n    maxSteps,\n    goToStep,\n    setupWizardData: {\n      registrationData\n    },\n    saveWorkspaceData\n  } = useSetupWizardContext();\n  const setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\n  const cloudConfirmationPoll = useEndpoint('GET', '/v1/cloud.confirmationPoll');\n  const dispatchToastMessage = useToastMessageDispatch();\n  const {\n    t\n  } = useTranslation();\n  const getConfirmation = useCallback(async () => {\n    try {\n      if (registrationData.device_code) {\n        const {\n          pollData\n        } = await cloudConfirmationPoll({\n          deviceCode: registrationData.device_code\n        });\n        if ('successful' in pollData && pollData.successful) {\n          await saveWorkspaceData();\n          dispatchToastMessage({\n            type: 'success',\n            message: t('Your_workspace_is_ready')\n          });\n          return setShowSetupWizard('completed');\n        }\n      }\n    } catch (error) {\n      dispatchToastMessage({\n        type: 'error',\n        message: error\n      });\n    }\n  }, [cloudConfirmationPoll, registrationData.device_code, setShowSetupWizard, saveWorkspaceData, dispatchToastMessage, t]);\n  useEffect(() => {\n    const pollInterval = setInterval(() => getConfirmation(), setIntervalTime(registrationData.interval));\n    return () => clearInterval(pollInterval);\n  }, [getConfirmation, registrationData.interval]);\n  return /*#__PURE__*/React.createElement(AwaitingConfirmationPage, {\n    currentStep: currentStep,\n    stepCount: maxSteps,\n    emailAddress: registrationData.cloudEmail,\n    securityCode: registrationData.user_code,\n    onResendEmailRequest: () => registerServer({\n      email: registrationData.cloudEmail,\n      resend: true\n    }),\n    onChangeEmailRequest: () => goToStep(3)\n  });\n};\nmodule.exportDefault(CloudAccountConfirmation);","map":{"version":3,"names":["AwaitingConfirmationPage","module","link","v","useToastMessageDispatch","useSettingSetValue","useEndpoint","React","useEffect","useCallback","default","useTranslation","useSetupWizardContext","setIntervalTime","interval","CloudAccountConfirmation","registerServer","currentStep","maxSteps","goToStep","setupWizardData","registrationData","saveWorkspaceData","setShowSetupWizard","cloudConfirmationPoll","dispatchToastMessage","t","getConfirmation","device_code","pollData","deviceCode","successful","type","message","error","pollInterval","setInterval","clearInterval","createElement","stepCount","emailAddress","cloudEmail","securityCode","user_code","onResendEmailRequest","email","resend","onChangeEmailRequest","exportDefault"],"sources":["client/views/setupWizard/steps/CloudAccountConfirmation.tsx"],"sourcesContent":["import { AwaitingConfirmationPage } from '@rocket.chat/onboarding-ui';\nimport { useToastMessageDispatch, useSettingSetValue, useEndpoint } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useSetupWizardContext } from '../contexts/SetupWizardContext';\n\nconst setIntervalTime = (interval?: number): number => (interval ? interval * 1000 : 0);\n\nconst CloudAccountConfirmation = (): ReactElement => {\n\tconst {\n\t\tregisterServer,\n\t\tcurrentStep,\n\t\tmaxSteps,\n\t\tgoToStep,\n\t\tsetupWizardData: { registrationData },\n\t\tsaveWorkspaceData,\n\t} = useSetupWizardContext();\n\tconst setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\n\tconst cloudConfirmationPoll = useEndpoint('GET', '/v1/cloud.confirmationPoll');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst { t } = useTranslation();\n\n\tconst getConfirmation = useCallback(async () => {\n\t\ttry {\n\t\t\tif (registrationData.device_code) {\n\t\t\t\tconst { pollData } = await cloudConfirmationPoll({\n\t\t\t\t\tdeviceCode: registrationData.device_code,\n\t\t\t\t});\n\n\t\t\t\tif ('successful' in pollData && pollData.successful) {\n\t\t\t\t\tawait saveWorkspaceData();\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Your_workspace_is_ready') });\n\t\t\t\t\treturn setShowSetupWizard('completed');\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [cloudConfirmationPoll, registrationData.device_code, setShowSetupWizard, saveWorkspaceData, dispatchToastMessage, t]);\n\n\tuseEffect(() => {\n\t\tconst pollInterval = setInterval(() => getConfirmation(), setIntervalTime(registrationData.interval));\n\n\t\treturn (): void => clearInterval(pollInterval);\n\t}, [getConfirmation, registrationData.interval]);\n\n\treturn (\n\t\t<AwaitingConfirmationPage\n\t\t\tcurrentStep={currentStep}\n\t\t\tstepCount={maxSteps}\n\t\t\temailAddress={registrationData.cloudEmail}\n\t\t\tsecurityCode={registrationData.user_code}\n\t\t\tonResendEmailRequest={(): Promise<void> => registerServer({ email: registrationData.cloudEmail, resend: true })}\n\t\t\tonChangeEmailRequest={(): void => goToStep(3)}\n\t\t/>\n\t);\n};\n\nexport default CloudAccountConfirmation;\n"],"mappings":"AAAA,IAAAA,wBAAS;AAAAC,MAA0B,CAAAC,IAAA,CAAM,4BAA4B,EAAC;EAAAF,yBAAAG,CAAA;IAAAH,wBAAA,GAAAG,CAAA;EAAA;AAAA;AAAA,IAAAC,uBAAA,EAAAC,kBAAA,EAAAC,WAAA;AAAAL,MAAA,CAAAC,IAAA;EAAAE,wBAAAD,CAAA;IAAAC,uBAAA,GAAAD,CAAA;EAAA;EAAAE,mBAAAF,CAAA;IAAAE,kBAAA,GAAAF,CAAA;EAAA;EAAAG,YAAAH,CAAA;IAAAG,WAAA,GAAAH,CAAA;EAAA;AAAA;AAAA,IAAAI,KAAA,EAAAC,SAAA,EAAAC,WAAA;AAAAR,MAAA,CAAAC,IAAA;EAAAQ,QAAAP,CAAA;IAAAI,KAAA,GAAAJ,CAAA;EAAA;EAAAK,UAAAL,CAAA;IAAAK,SAAA,GAAAL,CAAA;EAAA;EAAAM,YAAAN,CAAA;IAAAM,WAAA,GAAAN,CAAA;EAAA;AAAA;AAAA,IAAAQ,cAAA;AAAAV,MAAA,CAAAC,IAAA;EAAAS,eAAAR,CAAA;IAAAQ,cAAA,GAAAR,CAAA;EAAA;AAAA;AAAA,IAAAS,qBAAA;AAAAX,MAAA,CAAAC,IAAA;EAAAU,sBAAAT,CAAA;IAAAS,qBAAA,GAAAT,CAAA;EAAA;AAAA;AAQtE,MAAMU,eAAe,GAAIC,QAAiB,IAAcA,QAAQ,GAAGA,QAAQ,GAAG,IAAI,GAAG,CAAE;AAEvF,MAAMC,wBAAwB,GAAGA,CAAA,KAAmB;EACnD,MAAM;IACLC,cAAc;IACdC,WAAW;IACXC,QAAQ;IACRC,QAAQ;IACRC,eAAe,EAAE;MAAEC;IAAgB,CAAE;IACrCC;EAAiB,CACjB,GAAGV,qBAAqB,EAAE;EAC3B,MAAMW,kBAAkB,GAAGlB,kBAAkB,CAAC,mBAAmB,CAAC;EAClE,MAAMmB,qBAAqB,GAAGlB,WAAW,CAAC,KAAK,EAAE,4BAA4B,CAAC;EAC9E,MAAMmB,oBAAoB,GAAGrB,uBAAuB,EAAE;EACtD,MAAM;IAAEsB;EAAC,CAAE,GAAGf,cAAc,EAAE;EAE9B,MAAMgB,eAAe,GAAGlB,WAAW,CAAC,YAAW;IAC9C,IAAI;MACH,IAAIY,gBAAgB,CAACO,WAAW,EAAE;QACjC,MAAM;UAAEC;QAAQ,CAAE,GAAG,MAAML,qBAAqB,CAAC;UAChDM,UAAU,EAAET,gBAAgB,CAACO;SAC7B,CAAC;QAEF,IAAI,YAAY,IAAIC,QAAQ,IAAIA,QAAQ,CAACE,UAAU,EAAE;UACpD,MAAMT,iBAAiB,EAAE;UACzBG,oBAAoB,CAAC;YAAEO,IAAI,EAAE,SAAS;YAAEC,OAAO,EAAEP,CAAC,CAAC,yBAAyB;UAAC,CAAE,CAAC;UAChF,OAAOH,kBAAkB,CAAC,WAAW,CAAC;QACvC;MACD;IACD,CAAC,CAAC,OAAOW,KAAc,EAAE;MACxBT,oBAAoB,CAAC;QAAEO,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEC;MAAK,CAAE,CAAC;IACxD;EACD,CAAC,EAAE,CAACV,qBAAqB,EAAEH,gBAAgB,CAACO,WAAW,EAAEL,kBAAkB,EAAED,iBAAiB,EAAEG,oBAAoB,EAAEC,CAAC,CAAC,CAAC;EAEzHlB,SAAS,CAAC,MAAK;IACd,MAAM2B,YAAY,GAAGC,WAAW,CAAC,MAAMT,eAAe,EAAE,EAAEd,eAAe,CAACQ,gBAAgB,CAACP,QAAQ,CAAC,CAAC;IAErG,OAAO,MAAYuB,aAAa,CAACF,YAAY,CAAC;EAC/C,CAAC,EAAE,CAACR,eAAe,EAAEN,gBAAgB,CAACP,QAAQ,CAAC,CAAC;EAEhD,oBACCP,KAAA,CAAA+B,aAAA,CAACtC,wBAAwB;IACxBiB,WAAW,EAAEA,WAAY;IACzBsB,SAAS,EAAErB,QAAS;IACpBsB,YAAY,EAAEnB,gBAAgB,CAACoB,UAAW;IAC1CC,YAAY,EAAErB,gBAAgB,CAACsB,SAAU;IACzCC,oBAAoB,EAAEA,CAAA,KAAqB5B,cAAc,CAAC;MAAE6B,KAAK,EAAExB,gBAAgB,CAACoB,UAAU;MAAEK,MAAM,EAAE;IAAI,CAAE,CAAE;IAChHC,oBAAoB,EAAEA,CAAA,KAAY5B,QAAQ,CAAC,CAAC;EAAE,EAC7C;AAEJ,CAAC;AA1DDlB,MAAA,CAAO+C,aAAE,CA4DMjC,wBA5DN","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"4668c8da093bd42835836feee47953271908022d"}
