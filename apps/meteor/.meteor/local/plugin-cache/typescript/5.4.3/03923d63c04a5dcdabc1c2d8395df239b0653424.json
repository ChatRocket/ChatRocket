{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/slash-commands/action.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/infrastructure/rocket-chat/slash-commands/action.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/slash-commands/action.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/rocket-chat/slash-commands/action.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/rocket-chat/slash-commands/action.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,MAAM,CAAC,MAAM,0BAA0B,GAAG,CAAC,YAAoB,EAAU,EAAE,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;AAEjH,MAAM,+BAA+B,GAAG,KAAK,EAAE,YAAoB,EAAE,SAAiB,EAAiB,EAAE;IACxG,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACnD,MAAM,iBAAiB,GAAG,OAAO,EAAE,SAAS,KAAK,IAAI,IAAI,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC1F,MAAM,iCAAiC,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAC5F,IAAI,iCAAiC,EAAE,CAAC;QACvC,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;IAClE,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,KAAK,EACvC,eAAuB,EACvB,YAAgC,EAChC,IAAyB,EACzB,QAAmG,EACnG,aAA6B,EACb,EAAE;IAClB,IAAI,eAAe,KAAK,YAAY,IAAI,CAAC,YAAY,EAAE,CAAC;QACvD,OAAO;IACR,CAAC;IAED,MAAM,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC5D,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC;IAC3B,IAAI,CAAC,aAAa,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;QAC1C,OAAO;IACR,CAAC;IAED,MAAM,+BAA+B,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;IAEhE,MAAM,OAAO,GAAG,0BAA0B,CAAC,SAAS,CAAC,CAAC;IAEtD,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;IAE7B,MAAM,QAAQ,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AACzD,CAAC,CAAC","sourcesContent":["import { Users } from '@rocket.chat/models';\n\nexport const normalizeExternalInviteeId = (rawInviteeId: string): string => `@${rawInviteeId.replace(/@/g, '')}`;\n\nconst validateExternalInviteeIdFormat = async (rawInviteeId: string, inviterId: string): Promise<void> => {\n\tconst inviter = await Users.findOneById(inviterId);\n\tconst isInviterExternal = inviter?.federated === true || inviter?.username?.includes(':');\n\tconst localUserInvitingAnotherLocalUser = !rawInviteeId.includes(':') && !isInviterExternal;\n\tif (localUserInvitingAnotherLocalUser) {\n\t\tthrow new Error('Invalid userId format for federation command.');\n\t}\n};\n\nexport const executeSlashCommand = async (\n\tprovidedCommand: string,\n\tstringParams: string | undefined,\n\titem: Record<string, any>,\n\tcommands: Record<string, (currentUserId: string, roomId: string, invitee: string) => Promise<void>>,\n\tcurrentUserId?: string | null,\n): Promise<void> => {\n\tif (providedCommand !== 'federation' || !stringParams) {\n\t\treturn;\n\t}\n\n\tconst [command, ...params] = stringParams.trim().split(' ');\n\tconst [rawUserId] = params;\n\tif (!currentUserId || !commands[command]) {\n\t\treturn;\n\t}\n\n\tawait validateExternalInviteeIdFormat(rawUserId, currentUserId);\n\n\tconst invitee = normalizeExternalInviteeId(rawUserId);\n\n\tconst { rid: roomId } = item;\n\n\tawait commands[command](currentUserId, roomId, invitee);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/infrastructure/rocket-chat/slash-commands/action.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/infrastructure/rocket-chat/slash-commands/action.ts","inputSourceMap":{"version":3,"file":"server/services/federation/infrastructure/rocket-chat/slash-commands/action.ts","sourceRoot":"","sources":["server/services/federation/infrastructure/rocket-chat/slash-commands/action.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAE5C,MAAM,CAAC,MAAM,0BAA0B,GAAG,CAAC,YAAoB,EAAU,EAAE,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;AAEjH,MAAM,+BAA+B,GAAG,KAAK,EAAE,YAAoB,EAAE,SAAiB,EAAiB,EAAE;IACxG,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACnD,MAAM,iBAAiB,GAAG,OAAO,EAAE,SAAS,KAAK,IAAI,IAAI,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC1F,MAAM,iCAAiC,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAC5F,IAAI,iCAAiC,EAAE,CAAC;QACvC,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;IAClE,CAAC;AACF,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,KAAK,EACvC,eAAuB,EACvB,YAAgC,EAChC,IAAyB,EACzB,QAAmG,EACnG,aAA6B,EACb,EAAE;IAClB,IAAI,eAAe,KAAK,YAAY,IAAI,CAAC,YAAY,EAAE,CAAC;QACvD,OAAO;IACR,CAAC;IAED,MAAM,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC5D,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC;IAC3B,IAAI,CAAC,aAAa,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;QAC1C,OAAO;IACR,CAAC;IAED,MAAM,+BAA+B,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;IAEhE,MAAM,OAAO,GAAG,0BAA0B,CAAC,SAAS,CAAC,CAAC;IAEtD,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;IAE7B,MAAM,QAAQ,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AACzD,CAAC,CAAC","sourcesContent":["import { Users } from '@rocket.chat/models';\n\nexport const normalizeExternalInviteeId = (rawInviteeId: string): string => `@${rawInviteeId.replace(/@/g, '')}`;\n\nconst validateExternalInviteeIdFormat = async (rawInviteeId: string, inviterId: string): Promise<void> => {\n\tconst inviter = await Users.findOneById(inviterId);\n\tconst isInviterExternal = inviter?.federated === true || inviter?.username?.includes(':');\n\tconst localUserInvitingAnotherLocalUser = !rawInviteeId.includes(':') && !isInviterExternal;\n\tif (localUserInvitingAnotherLocalUser) {\n\t\tthrow new Error('Invalid userId format for federation command.');\n\t}\n};\n\nexport const executeSlashCommand = async (\n\tprovidedCommand: string,\n\tstringParams: string | undefined,\n\titem: Record<string, any>,\n\tcommands: Record<string, (currentUserId: string, roomId: string, invitee: string) => Promise<void>>,\n\tcurrentUserId?: string | null,\n): Promise<void> => {\n\tif (providedCommand !== 'federation' || !stringParams) {\n\t\treturn;\n\t}\n\n\tconst [command, ...params] = stringParams.trim().split(' ');\n\tconst [rawUserId] = params;\n\tif (!currentUserId || !commands[command]) {\n\t\treturn;\n\t}\n\n\tawait validateExternalInviteeIdFormat(rawUserId, currentUserId);\n\n\tconst invitee = normalizeExternalInviteeId(rawUserId);\n\n\tconst { rid: roomId } = item;\n\n\tawait commands[command](currentUserId, roomId, invitee);\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    module.export({\n      normalizeExternalInviteeId: () => normalizeExternalInviteeId,\n      executeSlashCommand: () => executeSlashCommand\n    });\n    let Users;\n    module.link(\"@rocket.chat/models\", {\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const normalizeExternalInviteeId = rawInviteeId => \"@\".concat(rawInviteeId.replace(/@/g, ''));\n    const validateExternalInviteeIdFormat = async (rawInviteeId, inviterId) => {\n      var _inviter$username;\n      const inviter = await Users.findOneById(inviterId);\n      const isInviterExternal = (inviter === null || inviter === void 0 ? void 0 : inviter.federated) === true || (inviter === null || inviter === void 0 ? void 0 : (_inviter$username = inviter.username) === null || _inviter$username === void 0 ? void 0 : _inviter$username.includes(':'));\n      const localUserInvitingAnotherLocalUser = !rawInviteeId.includes(':') && !isInviterExternal;\n      if (localUserInvitingAnotherLocalUser) {\n        throw new Error('Invalid userId format for federation command.');\n      }\n    };\n    const executeSlashCommand = async (providedCommand, stringParams, item, commands, currentUserId) => {\n      if (providedCommand !== 'federation' || !stringParams) {\n        return;\n      }\n      const [command, ...params] = stringParams.trim().split(' ');\n      const [rawUserId] = params;\n      if (!currentUserId || !commands[command]) {\n        return;\n      }\n      await validateExternalInviteeIdFormat(rawUserId, currentUserId);\n      const invitee = normalizeExternalInviteeId(rawUserId);\n      const {\n        rid: roomId\n      } = item;\n      await commands[command](currentUserId, roomId, invitee);\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","normalizeExternalInviteeId","executeSlashCommand","Users","link","v","__reifyWaitForDeps__","rawInviteeId","concat","replace","validateExternalInviteeIdFormat","inviterId","_inviter$username","inviter","findOneById","isInviterExternal","federated","username","includes","localUserInvitingAnotherLocalUser","Error","providedCommand","stringParams","item","commands","currentUserId","command","params","trim","split","rawUserId","invitee","rid","roomId","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/federation/infrastructure/rocket-chat/slash-commands/action.ts"],"sourcesContent":["import { Users } from '@rocket.chat/models';\n\nexport const normalizeExternalInviteeId = (rawInviteeId: string): string => `@${rawInviteeId.replace(/@/g, '')}`;\n\nconst validateExternalInviteeIdFormat = async (rawInviteeId: string, inviterId: string): Promise<void> => {\n\tconst inviter = await Users.findOneById(inviterId);\n\tconst isInviterExternal = inviter?.federated === true || inviter?.username?.includes(':');\n\tconst localUserInvitingAnotherLocalUser = !rawInviteeId.includes(':') && !isInviterExternal;\n\tif (localUserInvitingAnotherLocalUser) {\n\t\tthrow new Error('Invalid userId format for federation command.');\n\t}\n};\n\nexport const executeSlashCommand = async (\n\tprovidedCommand: string,\n\tstringParams: string | undefined,\n\titem: Record<string, any>,\n\tcommands: Record<string, (currentUserId: string, roomId: string, invitee: string) => Promise<void>>,\n\tcurrentUserId?: string | null,\n): Promise<void> => {\n\tif (providedCommand !== 'federation' || !stringParams) {\n\t\treturn;\n\t}\n\n\tconst [command, ...params] = stringParams.trim().split(' ');\n\tconst [rawUserId] = params;\n\tif (!currentUserId || !commands[command]) {\n\t\treturn;\n\t}\n\n\tawait validateExternalInviteeIdFormat(rawUserId, currentUserId);\n\n\tconst invitee = normalizeExternalInviteeId(rawUserId);\n\n\tconst { rid: roomId } = item;\n\n\tawait commands[command](currentUserId, roomId, invitee);\n};\n"],"mappings":";;;IAAAA,MAAA,CAAOC,MAAE,CAAK;MAAAC,0BAAQ,EAAAA,CAAA,KAAsBA,0BAAA;MAAAC,mBAAA,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,KAAA;IAAAJ,MAAA,CAAAK,IAAA;MAAAD,MAAAE,CAAA;QAAAF,KAAA,GAAAE,CAAA;MAAA;IAAA;IAAA,IAAAC,oBAAA,WAAAA,oBAAA;IAErC,MAAML,0BAA0B,GAAIM,YAAoB,QAAAC,MAAA,CAAiBD,YAAY,CAACE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAE;IAEhH,MAAMC,+BAA+B,GAAG,MAAAA,CAAOH,YAAoB,EAAEI,SAAiB,KAAmB;MAAA,IAAAC,iBAAA;MACxG,MAAMC,OAAO,GAAG,MAAMV,KAAK,CAACW,WAAW,CAACH,SAAS,CAAC;MAClD,MAAMI,iBAAiB,GAAG,CAAAF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,SAAS,MAAK,IAAI,KAAIH,OAAO,aAAPA,OAAO,wBAAAD,iBAAA,GAAPC,OAAO,CAAEI,QAAQ,cAAAL,iBAAA,uBAAjBA,iBAAA,CAAmBM,QAAQ,CAAC,GAAG,CAAC;MACzF,MAAMC,iCAAiC,GAAG,CAACZ,YAAY,CAACW,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACH,iBAAiB;MAC3F,IAAII,iCAAiC,EAAE;QACtC,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;MACjE;IACD,CAAC;IAEM,MAAMlB,mBAAmB,GAAG,MAAAA,CAClCmB,eAAuB,EACvBC,YAAgC,EAChCC,IAAyB,EACzBC,QAAmG,EACnGC,aAA6B,KACX;MAClB,IAAIJ,eAAe,KAAK,YAAY,IAAI,CAACC,YAAY,EAAE;QACtD;MACD;MAEA,MAAM,CAACI,OAAO,EAAE,GAAGC,MAAM,CAAC,GAAGL,YAAY,CAACM,IAAI,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;MAC3D,MAAM,CAACC,SAAS,CAAC,GAAGH,MAAM;MAC1B,IAAI,CAACF,aAAa,IAAI,CAACD,QAAQ,CAACE,OAAO,CAAC,EAAE;QACzC;MACD;MAEA,MAAMhB,+BAA+B,CAACoB,SAAS,EAAEL,aAAa,CAAC;MAE/D,MAAMM,OAAO,GAAG9B,0BAA0B,CAAC6B,SAAS,CAAC;MAErD,MAAM;QAAEE,GAAG,EAAEC;MAAM,CAAE,GAAGV,IAAI;MAE5B,MAAMC,QAAQ,CAACE,OAAO,CAAC,CAACD,aAAa,EAAEQ,MAAM,EAAEF,OAAO,CAAC;IACxD,CAAC;IAACG,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"03923d63c04a5dcdabc1c2d8395df239b0653424"}
