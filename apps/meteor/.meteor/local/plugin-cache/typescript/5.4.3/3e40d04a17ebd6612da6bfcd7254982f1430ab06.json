{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/directory/components/SourceField.tsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/omnichannel/directory/components/SourceField.tsx","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/directory/components/SourceField.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/directory/components/SourceField.tsx","sourceRoot":"","sources":["client/views/omnichannel/directory/components/SourceField.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,uBAAuB,CAAC;AAC5C,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,OAAO,EAAE,mBAAmB,EAAE,MAAM,qDAAqD,CAAC;AAC1F,OAAO,KAAK,MAAM,wBAAwB,CAAC;AAC3C,OAAO,IAAI,MAAM,uBAAuB,CAAC;AACzC,OAAO,KAAK,MAAM,wBAAwB,CAAC;AAM3C,MAAM,WAAW,GAAG,CAAC,EAAE,IAAI,EAAoB,EAAE,EAAE;IAClD,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAE/B,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IAE3E,qFAAqF;IACrF,wDAAwD;IACxD,MAAM,kBAAkB,GAOpB;QACH,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC;QACrB,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;QACjB,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC;QACb,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,oBAAoB,CAAC;QACjD,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,oBAAoB,CAAC;QACjD,KAAK,EAAE,CAAC,CAAC,oBAAoB,CAAC;KAC9B,CAAC;IAEF,MAAM,uBAAuB,GAOzB;QACH,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE;QACtB,GAAG,EAAE,CAAC,CAAC,UAAU,CAAC;QAClB,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,UAAU,CAAC;QACvC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,UAAU,CAAC;QACvC,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC;KACpB,CAAC;IAEF,OAAO,CACN,CAAC,KAAK,CACL;GAAA,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAC5B;GAAA,CAAC,IAAI,CACJ;IAAA,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CACtC;KAAA,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAC3E;KAAA,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CACpB;MAAA,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,UAAU,CACpD;KAAA,EAAE,KAAK,CACP;KAAA,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAC3C;IAAA,EAAE,GAAG,CACN;GAAA,EAAE,IAAI,CACP;EAAA,EAAE,KAAK,CAAC,CACR,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { Box } from '@rocket.chat/fuselage';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { OmnichannelRoomIcon } from '../../../../components/RoomIcon/OmnichannelRoomIcon';\nimport Field from '../../components/Field';\nimport Info from '../../components/Info';\nimport Label from '../../components/Label';\n\ntype SourceFieldProps = {\n\troom: IOmnichannelRoom;\n};\n\nconst SourceField = ({ room }: SourceFieldProps) => {\n\tconst { t } = useTranslation();\n\n\tconst roomSource = room.source.alias || room.source.id || room.source.type;\n\n\t// TODO: create a hook that gets the default types values (alias, icons, ids, etc...)\n\t// so we don't have to write this object again and again\n\tconst defaultTypesLabels: {\n\t\twidget: string;\n\t\temail: string;\n\t\tsms: string;\n\t\tapp: string;\n\t\tapi: string;\n\t\tother: string;\n\t} = {\n\t\twidget: t('Livechat'),\n\t\temail: t('Email'),\n\t\tsms: t('SMS'),\n\t\tapp: room.source.alias || t('Custom_Integration'),\n\t\tapi: room.source.alias || t('Custom_Integration'),\n\t\tother: t('Custom_Integration'),\n\t};\n\n\tconst defaultTypesVisitorData: {\n\t\twidget: string | undefined;\n\t\temail: string | undefined;\n\t\tsms: string;\n\t\tapp: string;\n\t\tapi: string;\n\t\tother: string;\n\t} = {\n\t\twidget: '',\n\t\temail: room?.source.id,\n\t\tsms: t('External'),\n\t\tapp: room.source.label || t('External'),\n\t\tapi: room.source.label || t('External'),\n\t\tother: t('External'),\n\t};\n\n\treturn (\n\t\t<Field>\n\t\t\t<Label>{t('Channel')}</Label>\n\t\t\t<Info>\n\t\t\t\t<Box display='flex' alignItems='center'>\n\t\t\t\t\t<OmnichannelRoomIcon source={room.source} status={room.v.status} size='x24' />\n\t\t\t\t\t<Label mi={8} mbe='0'>\n\t\t\t\t\t\t{defaultTypesLabels[room.source.type] || roomSource}\n\t\t\t\t\t</Label>\n\t\t\t\t\t{defaultTypesVisitorData[room.source.type]}\n\t\t\t\t</Box>\n\t\t\t</Info>\n\t\t</Field>\n\t);\n};\n\nexport default SourceField;\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/omnichannel/directory/components/SourceField.tsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/omnichannel/directory/components/SourceField.tsx","inputSourceMap":{"version":3,"file":"client/views/omnichannel/directory/components/SourceField.tsx","sourceRoot":"","sources":["client/views/omnichannel/directory/components/SourceField.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,MAAM,uBAAuB,CAAC;AAC5C,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE/C,OAAO,EAAE,mBAAmB,EAAE,MAAM,qDAAqD,CAAC;AAC1F,OAAO,KAAK,MAAM,wBAAwB,CAAC;AAC3C,OAAO,IAAI,MAAM,uBAAuB,CAAC;AACzC,OAAO,KAAK,MAAM,wBAAwB,CAAC;AAM3C,MAAM,WAAW,GAAG,CAAC,EAAE,IAAI,EAAoB,EAAE,EAAE;IAClD,MAAM,EAAE,CAAC,EAAE,GAAG,cAAc,EAAE,CAAC;IAE/B,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IAE3E,qFAAqF;IACrF,wDAAwD;IACxD,MAAM,kBAAkB,GAOpB;QACH,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC;QACrB,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC;QACjB,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC;QACb,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,oBAAoB,CAAC;QACjD,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,oBAAoB,CAAC;QACjD,KAAK,EAAE,CAAC,CAAC,oBAAoB,CAAC;KAC9B,CAAC;IAEF,MAAM,uBAAuB,GAOzB;QACH,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,EAAE;QACtB,GAAG,EAAE,CAAC,CAAC,UAAU,CAAC;QAClB,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,UAAU,CAAC;QACvC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC,UAAU,CAAC;QACvC,KAAK,EAAE,CAAC,CAAC,UAAU,CAAC;KACpB,CAAC;IAEF,OAAO,CACN,CAAC,KAAK,CACL;GAAA,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAC5B;GAAA,CAAC,IAAI,CACJ;IAAA,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CACtC;KAAA,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAC3E;KAAA,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CACpB;MAAA,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,UAAU,CACpD;KAAA,EAAE,KAAK,CACP;KAAA,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAC3C;IAAA,EAAE,GAAG,CACN;GAAA,EAAE,IAAI,CACP;EAAA,EAAE,KAAK,CAAC,CACR,CAAC;AACH,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC","sourcesContent":["import type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { Box } from '@rocket.chat/fuselage';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { OmnichannelRoomIcon } from '../../../../components/RoomIcon/OmnichannelRoomIcon';\nimport Field from '../../components/Field';\nimport Info from '../../components/Info';\nimport Label from '../../components/Label';\n\ntype SourceFieldProps = {\n\troom: IOmnichannelRoom;\n};\n\nconst SourceField = ({ room }: SourceFieldProps) => {\n\tconst { t } = useTranslation();\n\n\tconst roomSource = room.source.alias || room.source.id || room.source.type;\n\n\t// TODO: create a hook that gets the default types values (alias, icons, ids, etc...)\n\t// so we don't have to write this object again and again\n\tconst defaultTypesLabels: {\n\t\twidget: string;\n\t\temail: string;\n\t\tsms: string;\n\t\tapp: string;\n\t\tapi: string;\n\t\tother: string;\n\t} = {\n\t\twidget: t('Livechat'),\n\t\temail: t('Email'),\n\t\tsms: t('SMS'),\n\t\tapp: room.source.alias || t('Custom_Integration'),\n\t\tapi: room.source.alias || t('Custom_Integration'),\n\t\tother: t('Custom_Integration'),\n\t};\n\n\tconst defaultTypesVisitorData: {\n\t\twidget: string | undefined;\n\t\temail: string | undefined;\n\t\tsms: string;\n\t\tapp: string;\n\t\tapi: string;\n\t\tother: string;\n\t} = {\n\t\twidget: '',\n\t\temail: room?.source.id,\n\t\tsms: t('External'),\n\t\tapp: room.source.label || t('External'),\n\t\tapi: room.source.label || t('External'),\n\t\tother: t('External'),\n\t};\n\n\treturn (\n\t\t<Field>\n\t\t\t<Label>{t('Channel')}</Label>\n\t\t\t<Info>\n\t\t\t\t<Box display='flex' alignItems='center'>\n\t\t\t\t\t<OmnichannelRoomIcon source={room.source} status={room.v.status} size='x24' />\n\t\t\t\t\t<Label mi={8} mbe='0'>\n\t\t\t\t\t\t{defaultTypesLabels[room.source.type] || roomSource}\n\t\t\t\t\t</Label>\n\t\t\t\t\t{defaultTypesVisitorData[room.source.type]}\n\t\t\t\t</Box>\n\t\t\t</Info>\n\t\t</Field>\n\t);\n};\n\nexport default SourceField;\n"]}}},"code":"let Box;\nmodule.link(\"@rocket.chat/fuselage\", {\n  Box(v) {\n    Box = v;\n  }\n}, 0);\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n}, 1);\nlet useTranslation;\nmodule.link(\"react-i18next\", {\n  useTranslation(v) {\n    useTranslation = v;\n  }\n}, 2);\nlet OmnichannelRoomIcon;\nmodule.link(\"../../../../components/RoomIcon/OmnichannelRoomIcon\", {\n  OmnichannelRoomIcon(v) {\n    OmnichannelRoomIcon = v;\n  }\n}, 3);\nlet Field;\nmodule.link(\"../../components/Field\", {\n  default(v) {\n    Field = v;\n  }\n}, 4);\nlet Info;\nmodule.link(\"../../components/Info\", {\n  default(v) {\n    Info = v;\n  }\n}, 5);\nlet Label;\nmodule.link(\"../../components/Label\", {\n  default(v) {\n    Label = v;\n  }\n}, 6);\nconst SourceField = _ref => {\n  let {\n    room\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const roomSource = room.source.alias || room.source.id || room.source.type;\n  // TODO: create a hook that gets the default types values (alias, icons, ids, etc...)\n  // so we don't have to write this object again and again\n  const defaultTypesLabels = {\n    widget: t('Livechat'),\n    email: t('Email'),\n    sms: t('SMS'),\n    app: room.source.alias || t('Custom_Integration'),\n    api: room.source.alias || t('Custom_Integration'),\n    other: t('Custom_Integration')\n  };\n  const defaultTypesVisitorData = {\n    widget: '',\n    email: room === null || room === void 0 ? void 0 : room.source.id,\n    sms: t('External'),\n    app: room.source.label || t('External'),\n    api: room.source.label || t('External'),\n    other: t('External')\n  };\n  return /*#__PURE__*/React.createElement(Field, null, /*#__PURE__*/React.createElement(Label, null, t('Channel')), /*#__PURE__*/React.createElement(Info, null, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\"\n  }, /*#__PURE__*/React.createElement(OmnichannelRoomIcon, {\n    source: room.source,\n    status: room.v.status,\n    size: \"x24\"\n  }), /*#__PURE__*/React.createElement(Label, {\n    mi: 8,\n    mbe: \"0\"\n  }, defaultTypesLabels[room.source.type] || roomSource), defaultTypesVisitorData[room.source.type])));\n};\nmodule.exportDefault(SourceField);","map":{"version":3,"names":["Box","module","link","v","React","default","useTranslation","OmnichannelRoomIcon","Field","Info","Label","SourceField","_ref","room","t","roomSource","source","alias","id","type","defaultTypesLabels","widget","email","sms","app","api","other","defaultTypesVisitorData","label","createElement","display","alignItems","status","size","mi","mbe","exportDefault"],"sources":["client/views/omnichannel/directory/components/SourceField.tsx"],"sourcesContent":["import type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { Box } from '@rocket.chat/fuselage';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { OmnichannelRoomIcon } from '../../../../components/RoomIcon/OmnichannelRoomIcon';\nimport Field from '../../components/Field';\nimport Info from '../../components/Info';\nimport Label from '../../components/Label';\n\ntype SourceFieldProps = {\n\troom: IOmnichannelRoom;\n};\n\nconst SourceField = ({ room }: SourceFieldProps) => {\n\tconst { t } = useTranslation();\n\n\tconst roomSource = room.source.alias || room.source.id || room.source.type;\n\n\t// TODO: create a hook that gets the default types values (alias, icons, ids, etc...)\n\t// so we don't have to write this object again and again\n\tconst defaultTypesLabels: {\n\t\twidget: string;\n\t\temail: string;\n\t\tsms: string;\n\t\tapp: string;\n\t\tapi: string;\n\t\tother: string;\n\t} = {\n\t\twidget: t('Livechat'),\n\t\temail: t('Email'),\n\t\tsms: t('SMS'),\n\t\tapp: room.source.alias || t('Custom_Integration'),\n\t\tapi: room.source.alias || t('Custom_Integration'),\n\t\tother: t('Custom_Integration'),\n\t};\n\n\tconst defaultTypesVisitorData: {\n\t\twidget: string | undefined;\n\t\temail: string | undefined;\n\t\tsms: string;\n\t\tapp: string;\n\t\tapi: string;\n\t\tother: string;\n\t} = {\n\t\twidget: '',\n\t\temail: room?.source.id,\n\t\tsms: t('External'),\n\t\tapp: room.source.label || t('External'),\n\t\tapi: room.source.label || t('External'),\n\t\tother: t('External'),\n\t};\n\n\treturn (\n\t\t<Field>\n\t\t\t<Label>{t('Channel')}</Label>\n\t\t\t<Info>\n\t\t\t\t<Box display='flex' alignItems='center'>\n\t\t\t\t\t<OmnichannelRoomIcon source={room.source} status={room.v.status} size='x24' />\n\t\t\t\t\t<Label mi={8} mbe='0'>\n\t\t\t\t\t\t{defaultTypesLabels[room.source.type] || roomSource}\n\t\t\t\t\t</Label>\n\t\t\t\t\t{defaultTypesVisitorData[room.source.type]}\n\t\t\t\t</Box>\n\t\t\t</Info>\n\t\t</Field>\n\t);\n};\n\nexport default SourceField;\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"3e40d04a17ebd6612da6bfcd7254982f1430ab06"}
