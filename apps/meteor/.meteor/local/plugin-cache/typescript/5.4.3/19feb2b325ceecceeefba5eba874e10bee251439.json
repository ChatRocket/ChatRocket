{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/models/client/models/CachedChatRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"app/models/client/models/CachedChatRoom.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/models/client/models/CachedChatRoom.ts","inputSourceMap":{"version":3,"file":"app/models/client/models/CachedChatRoom.ts","sourceRoot":"","sources":["app/models/client/models/CachedChatRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelRoom, IRoom, IRoomWithRetentionPolicy } from '@rocket.chat/core-typings';\nimport { DEFAULT_SLA_CONFIG, LivechatPriorityWeight } from '@rocket.chat/core-typings';\n\nimport { CachedCollection } from '../../../ui-cached-collection/client/models/CachedCollection';\nimport { CachedChatSubscription } from './CachedChatSubscription';\n\nclass CachedChatRoom extends CachedCollection<IRoom> {\n\tconstructor() {\n\t\tsuper({ name: 'rooms' });\n\t}\n\n\tprotected handleLoadFromServer(record: IRoom) {\n\t\treturn this.mergeWithSubscription(record);\n\t}\n\n\tprotected handleReceived(record: IRoom) {\n\t\treturn this.mergeWithSubscription(record);\n\t}\n\n\tprotected handleSync(record: IRoom) {\n\t\treturn this.mergeWithSubscription(record);\n\t}\n\n\tprivate mergeWithSubscription(room: IRoom): IRoom {\n\t\tconst sub = CachedChatSubscription.collection.findOne({ rid: room._id });\n\t\tif (!sub) {\n\t\t\treturn room;\n\t\t}\n\n\t\tCachedChatSubscription.collection.update(\n\t\t\t{\n\t\t\t\trid: room._id,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tencrypted: room.encrypted,\n\t\t\t\t\tdescription: room.description,\n\t\t\t\t\tcl: room.cl,\n\t\t\t\t\ttopic: room.topic,\n\t\t\t\t\tannouncement: room.announcement,\n\t\t\t\t\tbroadcast: room.broadcast,\n\t\t\t\t\tarchived: room.archived,\n\t\t\t\t\tavatarETag: room.avatarETag,\n\t\t\t\t\tretention: (room as IRoomWithRetentionPolicy | undefined)?.retention,\n\t\t\t\t\tuids: room.uids,\n\t\t\t\t\tusernames: room.usernames,\n\t\t\t\t\tusersCount: room.usersCount,\n\t\t\t\t\tlastMessage: room.lastMessage,\n\t\t\t\t\tteamId: room.teamId,\n\t\t\t\t\tteamMain: room.teamMain,\n\t\t\t\t\tv: (room as IOmnichannelRoom | undefined)?.v,\n\t\t\t\t\ttranscriptRequest: (room as IOmnichannelRoom | undefined)?.transcriptRequest,\n\t\t\t\t\tservedBy: (room as IOmnichannelRoom | undefined)?.servedBy,\n\t\t\t\t\tonHold: (room as IOmnichannelRoom | undefined)?.onHold,\n\t\t\t\t\ttags: (room as IOmnichannelRoom | undefined)?.tags,\n\t\t\t\t\tclosedAt: (room as IOmnichannelRoom | undefined)?.closedAt,\n\t\t\t\t\tmetrics: (room as IOmnichannelRoom | undefined)?.metrics,\n\t\t\t\t\tmuted: room.muted,\n\t\t\t\t\twaitingResponse: (room as IOmnichannelRoom | undefined)?.waitingResponse,\n\t\t\t\t\tresponseBy: (room as IOmnichannelRoom | undefined)?.responseBy,\n\t\t\t\t\tpriorityId: (room as IOmnichannelRoom | undefined)?.priorityId,\n\t\t\t\t\tpriorityWeight: (room as IOmnichannelRoom | undefined)?.priorityWeight || LivechatPriorityWeight.NOT_SPECIFIED,\n\t\t\t\t\testimatedWaitingTimeQueue:\n\t\t\t\t\t\t(room as IOmnichannelRoom | undefined)?.estimatedWaitingTimeQueue || DEFAULT_SLA_CONFIG.ESTIMATED_WAITING_TIME_QUEUE,\n\t\t\t\t\tslaId: (room as IOmnichannelRoom | undefined)?.slaId,\n\t\t\t\t\tlivechatData: (room as IOmnichannelRoom | undefined)?.livechatData,\n\t\t\t\t\tdepartmentId: (room as IOmnichannelRoom | undefined)?.departmentId,\n\t\t\t\t\tts: room.ts,\n\t\t\t\t\tsource: (room as IOmnichannelRoom | undefined)?.source,\n\t\t\t\t\tqueuedAt: (room as IOmnichannelRoom | undefined)?.queuedAt,\n\t\t\t\t\tfederated: room.federated,\n\t\t\t\t\t...(() => {\n\t\t\t\t\t\tconst name = room.name || sub.name;\n\t\t\t\t\t\tconst fname = room.fname || sub.fname || name;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlowerCaseName: String(!room.prid ? name : fname).toLowerCase(),\n\t\t\t\t\t\t\tlowerCaseFName: String(fname).toLowerCase(),\n\t\t\t\t\t\t};\n\t\t\t\t\t})(),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tCachedChatSubscription.collection.update(\n\t\t\t{\n\t\t\t\trid: room._id,\n\t\t\t\tlm: { $lt: room.lm },\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tlm: room.lm,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\treturn room;\n\t}\n\n\tprotected deserializeFromCache(record: unknown) {\n\t\tconst deserialized = super.deserializeFromCache(record);\n\n\t\tif (deserialized?.lastMessage?._updatedAt) {\n\t\t\tdeserialized.lastMessage._updatedAt = new Date(deserialized.lastMessage._updatedAt);\n\t\t}\n\n\t\treturn deserialized;\n\t}\n}\n\nconst instance = new CachedChatRoom();\n\nexport {\n\t/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\n\tinstance as CachedChatRoom,\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/app/models/client/models/CachedChatRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/client/models/CachedChatRoom.ts","inputSourceMap":{"version":3,"file":"app/models/client/models/CachedChatRoom.ts","sourceRoot":"","sources":["app/models/client/models/CachedChatRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IOmnichannelRoom, IRoom, IRoomWithRetentionPolicy } from '@rocket.chat/core-typings';\nimport { DEFAULT_SLA_CONFIG, LivechatPriorityWeight } from '@rocket.chat/core-typings';\n\nimport { CachedCollection } from '../../../ui-cached-collection/client/models/CachedCollection';\nimport { CachedChatSubscription } from './CachedChatSubscription';\n\nclass CachedChatRoom extends CachedCollection<IRoom> {\n\tconstructor() {\n\t\tsuper({ name: 'rooms' });\n\t}\n\n\tprotected handleLoadFromServer(record: IRoom) {\n\t\treturn this.mergeWithSubscription(record);\n\t}\n\n\tprotected handleReceived(record: IRoom) {\n\t\treturn this.mergeWithSubscription(record);\n\t}\n\n\tprotected handleSync(record: IRoom) {\n\t\treturn this.mergeWithSubscription(record);\n\t}\n\n\tprivate mergeWithSubscription(room: IRoom): IRoom {\n\t\tconst sub = CachedChatSubscription.collection.findOne({ rid: room._id });\n\t\tif (!sub) {\n\t\t\treturn room;\n\t\t}\n\n\t\tCachedChatSubscription.collection.update(\n\t\t\t{\n\t\t\t\trid: room._id,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tencrypted: room.encrypted,\n\t\t\t\t\tdescription: room.description,\n\t\t\t\t\tcl: room.cl,\n\t\t\t\t\ttopic: room.topic,\n\t\t\t\t\tannouncement: room.announcement,\n\t\t\t\t\tbroadcast: room.broadcast,\n\t\t\t\t\tarchived: room.archived,\n\t\t\t\t\tavatarETag: room.avatarETag,\n\t\t\t\t\tretention: (room as IRoomWithRetentionPolicy | undefined)?.retention,\n\t\t\t\t\tuids: room.uids,\n\t\t\t\t\tusernames: room.usernames,\n\t\t\t\t\tusersCount: room.usersCount,\n\t\t\t\t\tlastMessage: room.lastMessage,\n\t\t\t\t\tteamId: room.teamId,\n\t\t\t\t\tteamMain: room.teamMain,\n\t\t\t\t\tv: (room as IOmnichannelRoom | undefined)?.v,\n\t\t\t\t\ttranscriptRequest: (room as IOmnichannelRoom | undefined)?.transcriptRequest,\n\t\t\t\t\tservedBy: (room as IOmnichannelRoom | undefined)?.servedBy,\n\t\t\t\t\tonHold: (room as IOmnichannelRoom | undefined)?.onHold,\n\t\t\t\t\ttags: (room as IOmnichannelRoom | undefined)?.tags,\n\t\t\t\t\tclosedAt: (room as IOmnichannelRoom | undefined)?.closedAt,\n\t\t\t\t\tmetrics: (room as IOmnichannelRoom | undefined)?.metrics,\n\t\t\t\t\tmuted: room.muted,\n\t\t\t\t\twaitingResponse: (room as IOmnichannelRoom | undefined)?.waitingResponse,\n\t\t\t\t\tresponseBy: (room as IOmnichannelRoom | undefined)?.responseBy,\n\t\t\t\t\tpriorityId: (room as IOmnichannelRoom | undefined)?.priorityId,\n\t\t\t\t\tpriorityWeight: (room as IOmnichannelRoom | undefined)?.priorityWeight || LivechatPriorityWeight.NOT_SPECIFIED,\n\t\t\t\t\testimatedWaitingTimeQueue:\n\t\t\t\t\t\t(room as IOmnichannelRoom | undefined)?.estimatedWaitingTimeQueue || DEFAULT_SLA_CONFIG.ESTIMATED_WAITING_TIME_QUEUE,\n\t\t\t\t\tslaId: (room as IOmnichannelRoom | undefined)?.slaId,\n\t\t\t\t\tlivechatData: (room as IOmnichannelRoom | undefined)?.livechatData,\n\t\t\t\t\tdepartmentId: (room as IOmnichannelRoom | undefined)?.departmentId,\n\t\t\t\t\tts: room.ts,\n\t\t\t\t\tsource: (room as IOmnichannelRoom | undefined)?.source,\n\t\t\t\t\tqueuedAt: (room as IOmnichannelRoom | undefined)?.queuedAt,\n\t\t\t\t\tfederated: room.federated,\n\t\t\t\t\t...(() => {\n\t\t\t\t\t\tconst name = room.name || sub.name;\n\t\t\t\t\t\tconst fname = room.fname || sub.fname || name;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlowerCaseName: String(!room.prid ? name : fname).toLowerCase(),\n\t\t\t\t\t\t\tlowerCaseFName: String(fname).toLowerCase(),\n\t\t\t\t\t\t};\n\t\t\t\t\t})(),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tCachedChatSubscription.collection.update(\n\t\t\t{\n\t\t\t\trid: room._id,\n\t\t\t\tlm: { $lt: room.lm },\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tlm: room.lm,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\treturn room;\n\t}\n\n\tprotected deserializeFromCache(record: unknown) {\n\t\tconst deserialized = super.deserializeFromCache(record);\n\n\t\tif (deserialized?.lastMessage?._updatedAt) {\n\t\t\tdeserialized.lastMessage._updatedAt = new Date(deserialized.lastMessage._updatedAt);\n\t\t}\n\n\t\treturn deserialized;\n\t}\n}\n\nconst instance = new CachedChatRoom();\n\nexport {\n\t/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\n\tinstance as CachedChatRoom,\n};\n"]}}},"code":"var _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nvar _inheritsLoose;\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  CachedChatRoom: function () {\n    return instance;\n  }\n});\nvar DEFAULT_SLA_CONFIG, LivechatPriorityWeight;\nmodule.link(\"@rocket.chat/core-typings\", {\n  DEFAULT_SLA_CONFIG: function (v) {\n    DEFAULT_SLA_CONFIG = v;\n  },\n  LivechatPriorityWeight: function (v) {\n    LivechatPriorityWeight = v;\n  }\n}, 0);\nvar CachedCollection;\nmodule.link(\"../../../ui-cached-collection/client/models/CachedCollection\", {\n  CachedCollection: function (v) {\n    CachedCollection = v;\n  }\n}, 1);\nvar CachedChatSubscription;\nmodule.link(\"./CachedChatSubscription\", {\n  CachedChatSubscription: function (v) {\n    CachedChatSubscription = v;\n  }\n}, 2);\nvar CachedChatRoom = /*#__PURE__*/function (_CachedCollection) {\n  function CachedChatRoom() {\n    return _CachedCollection.call(this, {\n      name: 'rooms'\n    }) || this;\n  }\n  _inheritsLoose(CachedChatRoom, _CachedCollection);\n  var _proto = CachedChatRoom.prototype;\n  _proto.handleLoadFromServer = function () {\n    function handleLoadFromServer(record) {\n      return this.mergeWithSubscription(record);\n    }\n    return handleLoadFromServer;\n  }();\n  _proto.handleReceived = function () {\n    function handleReceived(record) {\n      return this.mergeWithSubscription(record);\n    }\n    return handleReceived;\n  }();\n  _proto.handleSync = function () {\n    function handleSync(record) {\n      return this.mergeWithSubscription(record);\n    }\n    return handleSync;\n  }();\n  _proto.mergeWithSubscription = function () {\n    function mergeWithSubscription(room) {\n      var sub = CachedChatSubscription.collection.findOne({\n        rid: room._id\n      });\n      if (!sub) {\n        return room;\n      }\n      CachedChatSubscription.collection.update({\n        rid: room._id\n      }, {\n        $set: _objectSpread({\n          encrypted: room.encrypted,\n          description: room.description,\n          cl: room.cl,\n          topic: room.topic,\n          announcement: room.announcement,\n          broadcast: room.broadcast,\n          archived: room.archived,\n          avatarETag: room.avatarETag,\n          retention: room === null || room === void 0 ? void 0 : room.retention,\n          uids: room.uids,\n          usernames: room.usernames,\n          usersCount: room.usersCount,\n          lastMessage: room.lastMessage,\n          teamId: room.teamId,\n          teamMain: room.teamMain,\n          v: room === null || room === void 0 ? void 0 : room.v,\n          transcriptRequest: room === null || room === void 0 ? void 0 : room.transcriptRequest,\n          servedBy: room === null || room === void 0 ? void 0 : room.servedBy,\n          onHold: room === null || room === void 0 ? void 0 : room.onHold,\n          tags: room === null || room === void 0 ? void 0 : room.tags,\n          closedAt: room === null || room === void 0 ? void 0 : room.closedAt,\n          metrics: room === null || room === void 0 ? void 0 : room.metrics,\n          muted: room.muted,\n          waitingResponse: room === null || room === void 0 ? void 0 : room.waitingResponse,\n          responseBy: room === null || room === void 0 ? void 0 : room.responseBy,\n          priorityId: room === null || room === void 0 ? void 0 : room.priorityId,\n          priorityWeight: (room === null || room === void 0 ? void 0 : room.priorityWeight) || LivechatPriorityWeight.NOT_SPECIFIED,\n          estimatedWaitingTimeQueue: (room === null || room === void 0 ? void 0 : room.estimatedWaitingTimeQueue) || DEFAULT_SLA_CONFIG.ESTIMATED_WAITING_TIME_QUEUE,\n          slaId: room === null || room === void 0 ? void 0 : room.slaId,\n          livechatData: room === null || room === void 0 ? void 0 : room.livechatData,\n          departmentId: room === null || room === void 0 ? void 0 : room.departmentId,\n          ts: room.ts,\n          source: room === null || room === void 0 ? void 0 : room.source,\n          queuedAt: room === null || room === void 0 ? void 0 : room.queuedAt,\n          federated: room.federated\n        }, function () {\n          var name = room.name || sub.name;\n          var fname = room.fname || sub.fname || name;\n          return {\n            lowerCaseName: String(!room.prid ? name : fname).toLowerCase(),\n            lowerCaseFName: String(fname).toLowerCase()\n          };\n        }())\n      });\n      CachedChatSubscription.collection.update({\n        rid: room._id,\n        lm: {\n          $lt: room.lm\n        }\n      }, {\n        $set: {\n          lm: room.lm\n        }\n      });\n      return room;\n    }\n    return mergeWithSubscription;\n  }();\n  _proto.deserializeFromCache = function () {\n    function deserializeFromCache(record) {\n      var _deserialized$lastMes;\n      var deserialized = _CachedCollection.prototype.deserializeFromCache.call(this, record);\n      if (deserialized !== null && deserialized !== void 0 && (_deserialized$lastMes = deserialized.lastMessage) !== null && _deserialized$lastMes !== void 0 && _deserialized$lastMes._updatedAt) {\n        deserialized.lastMessage._updatedAt = new Date(deserialized.lastMessage._updatedAt);\n      }\n      return deserialized;\n    }\n    return deserializeFromCache;\n  }();\n  return CachedChatRoom;\n}(CachedCollection);\nvar instance = new CachedChatRoom();","map":{"version":3,"names":["_objectSpread","module","link","default","v","_inheritsLoose","export","CachedChatRoom","instance","DEFAULT_SLA_CONFIG","LivechatPriorityWeight","CachedCollection","CachedChatSubscription","_CachedCollection","call","name","_proto","prototype","handleLoadFromServer","record","mergeWithSubscription","handleReceived","handleSync","room","sub","collection","findOne","rid","_id","update","$set","encrypted","description","cl","topic","announcement","broadcast","archived","avatarETag","retention","uids","usernames","usersCount","lastMessage","teamId","teamMain","transcriptRequest","servedBy","onHold","tags","closedAt","metrics","muted","waitingResponse","responseBy","priorityId","priorityWeight","NOT_SPECIFIED","estimatedWaitingTimeQueue","ESTIMATED_WAITING_TIME_QUEUE","slaId","livechatData","departmentId","ts","source","queuedAt","federated","fname","lowerCaseName","String","prid","toLowerCase","lowerCaseFName","lm","$lt","deserializeFromCache","_deserialized$lastMes","deserialized","_updatedAt","Date"],"sources":["app/models/client/models/CachedChatRoom.ts"],"sourcesContent":["import type { IOmnichannelRoom, IRoom, IRoomWithRetentionPolicy } from '@rocket.chat/core-typings';\nimport { DEFAULT_SLA_CONFIG, LivechatPriorityWeight } from '@rocket.chat/core-typings';\n\nimport { CachedCollection } from '../../../ui-cached-collection/client/models/CachedCollection';\nimport { CachedChatSubscription } from './CachedChatSubscription';\n\nclass CachedChatRoom extends CachedCollection<IRoom> {\n\tconstructor() {\n\t\tsuper({ name: 'rooms' });\n\t}\n\n\tprotected handleLoadFromServer(record: IRoom) {\n\t\treturn this.mergeWithSubscription(record);\n\t}\n\n\tprotected handleReceived(record: IRoom) {\n\t\treturn this.mergeWithSubscription(record);\n\t}\n\n\tprotected handleSync(record: IRoom) {\n\t\treturn this.mergeWithSubscription(record);\n\t}\n\n\tprivate mergeWithSubscription(room: IRoom): IRoom {\n\t\tconst sub = CachedChatSubscription.collection.findOne({ rid: room._id });\n\t\tif (!sub) {\n\t\t\treturn room;\n\t\t}\n\n\t\tCachedChatSubscription.collection.update(\n\t\t\t{\n\t\t\t\trid: room._id,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tencrypted: room.encrypted,\n\t\t\t\t\tdescription: room.description,\n\t\t\t\t\tcl: room.cl,\n\t\t\t\t\ttopic: room.topic,\n\t\t\t\t\tannouncement: room.announcement,\n\t\t\t\t\tbroadcast: room.broadcast,\n\t\t\t\t\tarchived: room.archived,\n\t\t\t\t\tavatarETag: room.avatarETag,\n\t\t\t\t\tretention: (room as IRoomWithRetentionPolicy | undefined)?.retention,\n\t\t\t\t\tuids: room.uids,\n\t\t\t\t\tusernames: room.usernames,\n\t\t\t\t\tusersCount: room.usersCount,\n\t\t\t\t\tlastMessage: room.lastMessage,\n\t\t\t\t\tteamId: room.teamId,\n\t\t\t\t\tteamMain: room.teamMain,\n\t\t\t\t\tv: (room as IOmnichannelRoom | undefined)?.v,\n\t\t\t\t\ttranscriptRequest: (room as IOmnichannelRoom | undefined)?.transcriptRequest,\n\t\t\t\t\tservedBy: (room as IOmnichannelRoom | undefined)?.servedBy,\n\t\t\t\t\tonHold: (room as IOmnichannelRoom | undefined)?.onHold,\n\t\t\t\t\ttags: (room as IOmnichannelRoom | undefined)?.tags,\n\t\t\t\t\tclosedAt: (room as IOmnichannelRoom | undefined)?.closedAt,\n\t\t\t\t\tmetrics: (room as IOmnichannelRoom | undefined)?.metrics,\n\t\t\t\t\tmuted: room.muted,\n\t\t\t\t\twaitingResponse: (room as IOmnichannelRoom | undefined)?.waitingResponse,\n\t\t\t\t\tresponseBy: (room as IOmnichannelRoom | undefined)?.responseBy,\n\t\t\t\t\tpriorityId: (room as IOmnichannelRoom | undefined)?.priorityId,\n\t\t\t\t\tpriorityWeight: (room as IOmnichannelRoom | undefined)?.priorityWeight || LivechatPriorityWeight.NOT_SPECIFIED,\n\t\t\t\t\testimatedWaitingTimeQueue:\n\t\t\t\t\t\t(room as IOmnichannelRoom | undefined)?.estimatedWaitingTimeQueue || DEFAULT_SLA_CONFIG.ESTIMATED_WAITING_TIME_QUEUE,\n\t\t\t\t\tslaId: (room as IOmnichannelRoom | undefined)?.slaId,\n\t\t\t\t\tlivechatData: (room as IOmnichannelRoom | undefined)?.livechatData,\n\t\t\t\t\tdepartmentId: (room as IOmnichannelRoom | undefined)?.departmentId,\n\t\t\t\t\tts: room.ts,\n\t\t\t\t\tsource: (room as IOmnichannelRoom | undefined)?.source,\n\t\t\t\t\tqueuedAt: (room as IOmnichannelRoom | undefined)?.queuedAt,\n\t\t\t\t\tfederated: room.federated,\n\t\t\t\t\t...(() => {\n\t\t\t\t\t\tconst name = room.name || sub.name;\n\t\t\t\t\t\tconst fname = room.fname || sub.fname || name;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlowerCaseName: String(!room.prid ? name : fname).toLowerCase(),\n\t\t\t\t\t\t\tlowerCaseFName: String(fname).toLowerCase(),\n\t\t\t\t\t\t};\n\t\t\t\t\t})(),\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tCachedChatSubscription.collection.update(\n\t\t\t{\n\t\t\t\trid: room._id,\n\t\t\t\tlm: { $lt: room.lm },\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tlm: room.lm,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\treturn room;\n\t}\n\n\tprotected deserializeFromCache(record: unknown) {\n\t\tconst deserialized = super.deserializeFromCache(record);\n\n\t\tif (deserialized?.lastMessage?._updatedAt) {\n\t\t\tdeserialized.lastMessage._updatedAt = new Date(deserialized.lastMessage._updatedAt);\n\t\t}\n\n\t\treturn deserialized;\n\t}\n}\n\nconst instance = new CachedChatRoom();\n\nexport {\n\t/** @deprecated new code refer to Minimongo collections like this one; prefer fetching data from the REST API, listening to changes via streamer events, and storing the state in a Tanstack Query */\n\tinstance as CachedChatRoom,\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"19feb2b325ceecceeefba5eba874e10bee251439"}
