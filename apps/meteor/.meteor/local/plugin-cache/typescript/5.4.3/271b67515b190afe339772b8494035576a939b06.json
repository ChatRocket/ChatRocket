{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/audit/hooks/useAuditMutation.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/views/audit/hooks/useAuditMutation.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/audit/hooks/useAuditMutation.ts","inputSourceMap":{"version":3,"file":"client/views/audit/hooks/useAuditMutation.ts","sourceRoot":"","sources":["client/views/audit/hooks/useAuditMutation.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAIpD,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,IAAiC,EAAE,EAAE;IACrE,MAAM,gBAAgB,GAAG,SAAS,CAAC,kBAAkB,CAAC,CAAC;IACvD,MAAM,2BAA2B,GAAG,SAAS,CAAC,6BAA6B,CAAC,CAAC;IAE7E,OAAO,WAAW,CAAC,CAAC,OAAO,CAAU,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAe,EAAE,EAAE;QAC5G,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;YAClB,OAAO,2BAA2B,CAAC;gBAClC,IAAI;gBACJ,GAAG;gBACH,SAAS,EAAE,SAAS,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBACzC,OAAO,EAAE,SAAS,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE;gBACpC,KAAK;gBACL,OAAO,EAAE,EAAE;gBACX,KAAK,EAAE,EAAE;aACT,CAAC,CAAC;QACJ,CAAC;QAED,OAAO,gBAAgB,CAAC;YACvB,IAAI;YACJ,GAAG;YACH,SAAS,EAAE,SAAS,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACzC,OAAO,EAAE,SAAS,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE;YACpC,GAAG;YACH,KAAK;YACL,OAAO;YACP,KAAK;SACL,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { IAuditLog } from '@rocket.chat/core-typings';\nimport { useMethod } from '@rocket.chat/ui-contexts';\nimport { useMutation } from '@tanstack/react-query';\n\nimport type { AuditFields } from './useAuditForm';\n\nexport const useAuditMutation = (type: IAuditLog['fields']['type']) => {\n\tconst getAuditMessages = useMethod('auditGetMessages');\n\tconst getOmnichannelAuditMessages = useMethod('auditGetOmnichannelMessages');\n\n\treturn useMutation(['audit'] as const, async ({ msg, dateRange, rid, users, visitor, agent }: AuditFields) => {\n\t\tif (type === 'l') {\n\t\t\treturn getOmnichannelAuditMessages({\n\t\t\t\ttype,\n\t\t\t\tmsg,\n\t\t\t\tstartDate: dateRange.start ?? new Date(0),\n\t\t\t\tendDate: dateRange.end ?? new Date(),\n\t\t\t\tusers,\n\t\t\t\tvisitor: '',\n\t\t\t\tagent: '',\n\t\t\t});\n\t\t}\n\n\t\treturn getAuditMessages({\n\t\t\ttype,\n\t\t\tmsg,\n\t\t\tstartDate: dateRange.start ?? new Date(0),\n\t\t\tendDate: dateRange.end ?? new Date(),\n\t\t\trid,\n\t\t\tusers,\n\t\t\tvisitor,\n\t\t\tagent,\n\t\t});\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/views/audit/hooks/useAuditMutation.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/views/audit/hooks/useAuditMutation.ts","inputSourceMap":{"version":3,"file":"client/views/audit/hooks/useAuditMutation.ts","sourceRoot":"","sources":["client/views/audit/hooks/useAuditMutation.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAIpD,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,IAAiC,EAAE,EAAE;IACrE,MAAM,gBAAgB,GAAG,SAAS,CAAC,kBAAkB,CAAC,CAAC;IACvD,MAAM,2BAA2B,GAAG,SAAS,CAAC,6BAA6B,CAAC,CAAC;IAE7E,OAAO,WAAW,CAAC,CAAC,OAAO,CAAU,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAe,EAAE,EAAE;QAC5G,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;YAClB,OAAO,2BAA2B,CAAC;gBAClC,IAAI;gBACJ,GAAG;gBACH,SAAS,EAAE,SAAS,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBACzC,OAAO,EAAE,SAAS,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE;gBACpC,KAAK;gBACL,OAAO,EAAE,EAAE;gBACX,KAAK,EAAE,EAAE;aACT,CAAC,CAAC;QACJ,CAAC;QAED,OAAO,gBAAgB,CAAC;YACvB,IAAI;YACJ,GAAG;YACH,SAAS,EAAE,SAAS,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACzC,OAAO,EAAE,SAAS,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE;YACpC,GAAG;YACH,KAAK;YACL,OAAO;YACP,KAAK;SACL,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { IAuditLog } from '@rocket.chat/core-typings';\nimport { useMethod } from '@rocket.chat/ui-contexts';\nimport { useMutation } from '@tanstack/react-query';\n\nimport type { AuditFields } from './useAuditForm';\n\nexport const useAuditMutation = (type: IAuditLog['fields']['type']) => {\n\tconst getAuditMessages = useMethod('auditGetMessages');\n\tconst getOmnichannelAuditMessages = useMethod('auditGetOmnichannelMessages');\n\n\treturn useMutation(['audit'] as const, async ({ msg, dateRange, rid, users, visitor, agent }: AuditFields) => {\n\t\tif (type === 'l') {\n\t\t\treturn getOmnichannelAuditMessages({\n\t\t\t\ttype,\n\t\t\t\tmsg,\n\t\t\t\tstartDate: dateRange.start ?? new Date(0),\n\t\t\t\tendDate: dateRange.end ?? new Date(),\n\t\t\t\tusers,\n\t\t\t\tvisitor: '',\n\t\t\t\tagent: '',\n\t\t\t});\n\t\t}\n\n\t\treturn getAuditMessages({\n\t\t\ttype,\n\t\t\tmsg,\n\t\t\tstartDate: dateRange.start ?? new Date(0),\n\t\t\tendDate: dateRange.end ?? new Date(),\n\t\t\trid,\n\t\t\tusers,\n\t\t\tvisitor,\n\t\t\tagent,\n\t\t});\n\t});\n};\n"]}}},"code":"module.export({\n  useAuditMutation: () => useAuditMutation\n});\nlet useMethod;\nmodule.link(\"@rocket.chat/ui-contexts\", {\n  useMethod(v) {\n    useMethod = v;\n  }\n}, 0);\nlet useMutation;\nmodule.link(\"@tanstack/react-query\", {\n  useMutation(v) {\n    useMutation = v;\n  }\n}, 1);\nconst useAuditMutation = type => {\n  const getAuditMessages = useMethod('auditGetMessages');\n  const getOmnichannelAuditMessages = useMethod('auditGetOmnichannelMessages');\n  return useMutation(['audit'], async _ref => {\n    var _dateRange$start2, _dateRange$end2;\n    let {\n      msg,\n      dateRange,\n      rid,\n      users,\n      visitor,\n      agent\n    } = _ref;\n    if (type === 'l') {\n      var _dateRange$start, _dateRange$end;\n      return getOmnichannelAuditMessages({\n        type,\n        msg,\n        startDate: (_dateRange$start = dateRange.start) !== null && _dateRange$start !== void 0 ? _dateRange$start : new Date(0),\n        endDate: (_dateRange$end = dateRange.end) !== null && _dateRange$end !== void 0 ? _dateRange$end : new Date(),\n        users,\n        visitor: '',\n        agent: ''\n      });\n    }\n    return getAuditMessages({\n      type,\n      msg,\n      startDate: (_dateRange$start2 = dateRange.start) !== null && _dateRange$start2 !== void 0 ? _dateRange$start2 : new Date(0),\n      endDate: (_dateRange$end2 = dateRange.end) !== null && _dateRange$end2 !== void 0 ? _dateRange$end2 : new Date(),\n      rid,\n      users,\n      visitor,\n      agent\n    });\n  });\n};","map":{"version":3,"names":["module","export","useAuditMutation","useMethod","link","v","useMutation","type","getAuditMessages","getOmnichannelAuditMessages","_ref","_dateRange$start2","_dateRange$end2","msg","dateRange","rid","users","visitor","agent","_dateRange$start","_dateRange$end","startDate","start","Date","endDate","end"],"sources":["client/views/audit/hooks/useAuditMutation.ts"],"sourcesContent":["import type { IAuditLog } from '@rocket.chat/core-typings';\nimport { useMethod } from '@rocket.chat/ui-contexts';\nimport { useMutation } from '@tanstack/react-query';\n\nimport type { AuditFields } from './useAuditForm';\n\nexport const useAuditMutation = (type: IAuditLog['fields']['type']) => {\n\tconst getAuditMessages = useMethod('auditGetMessages');\n\tconst getOmnichannelAuditMessages = useMethod('auditGetOmnichannelMessages');\n\n\treturn useMutation(['audit'] as const, async ({ msg, dateRange, rid, users, visitor, agent }: AuditFields) => {\n\t\tif (type === 'l') {\n\t\t\treturn getOmnichannelAuditMessages({\n\t\t\t\ttype,\n\t\t\t\tmsg,\n\t\t\t\tstartDate: dateRange.start ?? new Date(0),\n\t\t\t\tendDate: dateRange.end ?? new Date(),\n\t\t\t\tusers,\n\t\t\t\tvisitor: '',\n\t\t\t\tagent: '',\n\t\t\t});\n\t\t}\n\n\t\treturn getAuditMessages({\n\t\t\ttype,\n\t\t\tmsg,\n\t\t\tstartDate: dateRange.start ?? new Date(0),\n\t\t\tendDate: dateRange.end ?? new Date(),\n\t\t\trid,\n\t\t\tusers,\n\t\t\tvisitor,\n\t\t\tagent,\n\t\t});\n\t});\n};\n"],"mappings":"AACAA,MAAA,CAAOC,MAAE;EAAAC,gBAAiB,EAAAA,CAAA,KAAAA;AAA0B,CAAC;AAAA,IAAAC,SAAA;AAAAH,MAAA,CAAAI,IAAA;EAAAD,UAAAE,CAAA;IAAAF,SAAA,GAAAE,CAAA;EAAA;AAAA;AAAA,IAAAC,WAAA;AAAAN,MAAA,CAAAI,IAAA;EAAAE,YAAAD,CAAA;IAAAC,WAAA,GAAAD,CAAA;EAAA;AAAA;AAK9C,MAAMH,gBAAgB,GAAIK,IAAiC,IAAI;EACrE,MAAMC,gBAAgB,GAAGL,SAAS,CAAC,kBAAkB,CAAC;EACtD,MAAMM,2BAA2B,GAAGN,SAAS,CAAC,6BAA6B,CAAC;EAE5E,OAAOG,WAAW,CAAC,CAAC,OAAO,CAAU,EAAE,MAAAI,IAAA,IAAsE;IAAA,IAAAC,iBAAA,EAAAC,eAAA;IAAA,IAA/D;MAAEC,GAAG;MAAEC,SAAS;MAAEC,GAAG;MAAEC,KAAK;MAAEC,OAAO;MAAEC;IAAK,CAAe,GAAAR,IAAA;IACxG,IAAIH,IAAI,KAAK,GAAG,EAAE;MAAA,IAAAY,gBAAA,EAAAC,cAAA;MACjB,OAAOX,2BAA2B,CAAC;QAClCF,IAAI;QACJM,GAAG;QACHQ,SAAS,GAAAF,gBAAA,GAAEL,SAAS,CAACQ,KAAK,cAAAH,gBAAA,cAAAA,gBAAA,GAAI,IAAII,IAAI,CAAC,CAAC,CAAC;QACzCC,OAAO,GAAAJ,cAAA,GAAEN,SAAS,CAACW,GAAG,cAAAL,cAAA,cAAAA,cAAA,GAAI,IAAIG,IAAI,EAAE;QACpCP,KAAK;QACLC,OAAO,EAAE,EAAE;QACXC,KAAK,EAAE;OACP,CAAC;IACH;IAEA,OAAOV,gBAAgB,CAAC;MACvBD,IAAI;MACJM,GAAG;MACHQ,SAAS,GAAAV,iBAAA,GAAEG,SAAS,CAACQ,KAAK,cAAAX,iBAAA,cAAAA,iBAAA,GAAI,IAAIY,IAAI,CAAC,CAAC,CAAC;MACzCC,OAAO,GAAAZ,eAAA,GAAEE,SAAS,CAACW,GAAG,cAAAb,eAAA,cAAAA,eAAA,GAAI,IAAIW,IAAI,EAAE;MACpCR,GAAG;MACHC,KAAK;MACLC,OAAO;MACPC;KACA,CAAC;EACH,CAAC,CAAC;AACH,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"271b67515b190afe339772b8494035576a939b06"}
