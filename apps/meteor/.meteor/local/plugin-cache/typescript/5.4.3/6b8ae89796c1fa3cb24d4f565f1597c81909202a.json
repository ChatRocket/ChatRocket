{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/minimongo/query.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/lib/minimongo/query.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/minimongo/query.ts","inputSourceMap":{"version":3,"file":"client/lib/minimongo/query.ts","sourceRoot":"","sources":["client/lib/minimongo/query.ts"],"names":[],"mappings":"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","sourcesContent":["import { compareBSONValues, getBSONType } from './bson';\nimport { equals, flatSome, isObject, some } from './comparisons';\nimport { createLookupFunction } from './lookups';\nimport type { BSONType, FieldExpression, Query } from './types';\n\nconst isArrayOfFields = <T>(values: unknown[]): values is T[] =>\n\tvalues.every((value) => ['number', 'string', 'symbol'].includes(typeof value));\n\nconst $in = <T extends string>(operand: T[], _options: undefined): ((value: T) => boolean) => {\n\tlet index: Record<T, T> | null = null;\n\tif (isArrayOfFields<T>(operand)) {\n\t\tindex = {} as Record<T, T>;\n\t\tfor (const operandElement of operand) {\n\t\t\tindex[operandElement] = operandElement;\n\t\t}\n\t}\n\n\treturn (value: T): boolean =>\n\t\tsome(value, (x) => {\n\t\t\tif (typeof x === 'string' && index !== null) {\n\t\t\t\treturn !!index[x];\n\t\t\t}\n\n\t\t\treturn operand.some((operandElement) => equals(operandElement, x));\n\t\t});\n};\n\nconst $nin = <T extends string>(operand: T[], _options: undefined): ((value: T) => boolean) => {\n\tconst isIn = $in(operand, undefined);\n\n\treturn (value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !isIn(value);\n\t};\n};\n\nconst $all =\n\t<T>(operand: T[], _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn operand.every((operandElement) => value.some((valueElement) => equals(operandElement, valueElement)));\n\t};\n\nconst $lt =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) < 0);\n\nconst $lte =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) <= 0);\n\nconst $gt =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) > 0);\n\nconst $gte =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) >= 0);\n\nconst $ne =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\t!some(value, (x) => equals(x, operand));\n\nconst $exists =\n\t<T>(operand: boolean, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\toperand === (value !== undefined);\n\nconst $mod =\n\t<T>([divisor, remainder]: [number, number], _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => Number(x) % divisor === remainder);\n\nconst $size =\n\t<T>(operand: number, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tArray.isArray(value) && operand === value.length;\n\nconst $type =\n\t<T>(operand: BSONType, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => getBSONType(x) === operand);\n\t};\n\nconst $regex = <T>(operand: string | RegExp, options: string): ((value: T) => boolean) => {\n\tlet regex: RegExp;\n\n\tif (options !== undefined) {\n\t\tconst regexSource = operand instanceof RegExp ? operand.source : operand;\n\t\tregex = new RegExp(regexSource, options);\n\t} else if (!(operand instanceof RegExp)) {\n\t\tregex = new RegExp(operand);\n\t}\n\n\treturn (value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => regex.test(String(x)));\n\t};\n};\n\nconst $elemMatch = <T>(operand: Query<T>, _options: undefined): ((value: T) => boolean) => {\n\tconst matcher = compileDocumentSelector(operand);\n\n\treturn (value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn value.some((x) => matcher(x));\n\t};\n};\n\nconst $not = <T>(operand: FieldExpression<T>, _options: undefined): ((value: T) => boolean) => {\n\tconst matcher = compileValueSelector(operand);\n\treturn (value: T): boolean => !matcher(value);\n};\n\nconst dummyOperator =\n\t<T>(_operand: unknown, _options: undefined): ((value: T) => boolean) =>\n\t(_value: T): boolean =>\n\t\ttrue;\n\nconst $options = dummyOperator;\nconst $near = dummyOperator;\nconst $geoIntersects = dummyOperator;\n\nconst valueOperators = {\n\t$in,\n\t$nin,\n\t$all,\n\t$lt,\n\t$lte,\n\t$gt,\n\t$gte,\n\t$ne,\n\t$exists,\n\t$mod,\n\t$size,\n\t$type,\n\t$regex,\n\t$elemMatch,\n\t$not,\n\t$options,\n\t$near,\n\t$geoIntersects,\n} as const;\n\nconst $and = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.every((f) => f(doc));\n};\n\nconst $or = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.some((f) => f(doc));\n};\n\nconst $nor = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.every((f) => !f(doc));\n};\n\nconst $where = <T>(selectorValue: string | ((doc: T) => boolean)): ((doc: T) => boolean) => {\n\tconst fn = selectorValue instanceof Function ? selectorValue : Function(`return ${selectorValue}`);\n\treturn (doc: T): boolean => !!fn.call(doc);\n};\n\nconst logicalOperators = {\n\t$and,\n\t$or,\n\t$nor,\n\t$where,\n} as const;\n\nconst isValueOperator = (operator: string): operator is keyof typeof valueOperators => operator in valueOperators;\n\nconst isLogicalOperator = (operator: string): operator is keyof typeof logicalOperators => operator in logicalOperators;\n\nconst hasValueOperators = <T>(valueSelector: FieldExpression<T>): boolean =>\n\tObject.keys(valueSelector).every((key) => key.slice(0, 1) === '$');\n\nconst compileUndefinedOrNullSelector =\n\t<T>(): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => x === undefined || x === null);\n\nconst compilePrimitiveSelector =\n\t<T>(primitive: T) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => x === primitive);\n\nconst compileRegexSelector =\n\t<T>(regex: RegExp) =>\n\t(value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => regex.test(String(x)));\n\t};\n\nconst compileArraySelector =\n\t<T>(expected: T) =>\n\t(value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn some(value, (x) => equals(expected, x));\n\t};\n\nconst compileValueOperatorsSelector = <T>(expression: FieldExpression<T>): ((value: T) => boolean) => {\n\tconst operatorFunctions: ((value: T) => boolean)[] = [];\n\tfor (const operator of Object.keys(expression) as (keyof FieldExpression<T>)[]) {\n\t\tif (!isValueOperator(operator)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst operand = expression[operator];\n\t\tconst operation = valueOperators[operator] as unknown as (operand: unknown, options: unknown) => (value: T) => boolean;\n\t\toperatorFunctions.push(operation(operand, expression.$options));\n\t}\n\treturn (value: T): boolean => operatorFunctions.every((f) => f(value));\n};\n\nconst compileValueSelector = <T>(valueSelector: FieldExpression<T>[keyof FieldExpression<T>]): ((value: T) => boolean) => {\n\tif (valueSelector === undefined || valueSelector === null) {\n\t\treturn compileUndefinedOrNullSelector();\n\t}\n\n\tif (!isObject(valueSelector)) {\n\t\treturn compilePrimitiveSelector(valueSelector as T);\n\t}\n\n\tif (valueSelector instanceof RegExp) {\n\t\treturn compileRegexSelector(valueSelector);\n\t}\n\n\tif (Array.isArray(valueSelector)) {\n\t\treturn compileArraySelector(valueSelector as unknown as T);\n\t}\n\n\tif (hasValueOperators<T>(valueSelector)) {\n\t\treturn compileValueOperatorsSelector(valueSelector);\n\t}\n\n\treturn (value: T): boolean => flatSome(value, (x) => equals(valueSelector, x as unknown as object));\n};\n\nexport const compileDocumentSelector = <T>(docSelector: Query<T> | FieldExpression<T>['$where'][]): ((doc: T) => boolean) => {\n\tconst perKeySelectors = Object.entries(docSelector).map(([key, subSelector]) => {\n\t\tif (subSelector === undefined) {\n\t\t\treturn (): boolean => true;\n\t\t}\n\n\t\tif (isLogicalOperator(key)) {\n\t\t\tswitch (key) {\n\t\t\t\tcase '$and':\n\t\t\t\t\treturn $and(subSelector);\n\n\t\t\t\tcase '$or':\n\t\t\t\t\treturn $or(subSelector);\n\n\t\t\t\tcase '$nor':\n\t\t\t\t\treturn $nor(subSelector);\n\n\t\t\t\tcase '$where':\n\t\t\t\t\treturn $where(subSelector);\n\t\t\t}\n\t\t}\n\n\t\tconst lookUpByIndex = createLookupFunction(key);\n\t\tconst valueSelectorFunc = compileValueSelector(subSelector);\n\t\treturn (doc: T): boolean => {\n\t\t\tconst branchValues = lookUpByIndex(doc);\n\t\t\treturn branchValues.some(valueSelectorFunc);\n\t\t};\n\t});\n\n\treturn (doc: T): boolean => perKeySelectors.every((f) => f(doc));\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"DoWhileStatement":{"exit":[null]},"ForInStatement":{"exit":[null]},"ForStatement":{"exit":[null]},"WhileStatement":{"exit":[null]},"ForOfStatement":{"exit":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/minimongo/query.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/minimongo/query.ts","inputSourceMap":{"version":3,"file":"client/lib/minimongo/query.ts","sourceRoot":"","sources":["client/lib/minimongo/query.ts"],"names":[],"mappings":"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","sourcesContent":["import { compareBSONValues, getBSONType } from './bson';\nimport { equals, flatSome, isObject, some } from './comparisons';\nimport { createLookupFunction } from './lookups';\nimport type { BSONType, FieldExpression, Query } from './types';\n\nconst isArrayOfFields = <T>(values: unknown[]): values is T[] =>\n\tvalues.every((value) => ['number', 'string', 'symbol'].includes(typeof value));\n\nconst $in = <T extends string>(operand: T[], _options: undefined): ((value: T) => boolean) => {\n\tlet index: Record<T, T> | null = null;\n\tif (isArrayOfFields<T>(operand)) {\n\t\tindex = {} as Record<T, T>;\n\t\tfor (const operandElement of operand) {\n\t\t\tindex[operandElement] = operandElement;\n\t\t}\n\t}\n\n\treturn (value: T): boolean =>\n\t\tsome(value, (x) => {\n\t\t\tif (typeof x === 'string' && index !== null) {\n\t\t\t\treturn !!index[x];\n\t\t\t}\n\n\t\t\treturn operand.some((operandElement) => equals(operandElement, x));\n\t\t});\n};\n\nconst $nin = <T extends string>(operand: T[], _options: undefined): ((value: T) => boolean) => {\n\tconst isIn = $in(operand, undefined);\n\n\treturn (value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !isIn(value);\n\t};\n};\n\nconst $all =\n\t<T>(operand: T[], _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn operand.every((operandElement) => value.some((valueElement) => equals(operandElement, valueElement)));\n\t};\n\nconst $lt =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) < 0);\n\nconst $lte =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) <= 0);\n\nconst $gt =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) > 0);\n\nconst $gte =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) >= 0);\n\nconst $ne =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\t!some(value, (x) => equals(x, operand));\n\nconst $exists =\n\t<T>(operand: boolean, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\toperand === (value !== undefined);\n\nconst $mod =\n\t<T>([divisor, remainder]: [number, number], _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => Number(x) % divisor === remainder);\n\nconst $size =\n\t<T>(operand: number, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tArray.isArray(value) && operand === value.length;\n\nconst $type =\n\t<T>(operand: BSONType, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => getBSONType(x) === operand);\n\t};\n\nconst $regex = <T>(operand: string | RegExp, options: string): ((value: T) => boolean) => {\n\tlet regex: RegExp;\n\n\tif (options !== undefined) {\n\t\tconst regexSource = operand instanceof RegExp ? operand.source : operand;\n\t\tregex = new RegExp(regexSource, options);\n\t} else if (!(operand instanceof RegExp)) {\n\t\tregex = new RegExp(operand);\n\t}\n\n\treturn (value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => regex.test(String(x)));\n\t};\n};\n\nconst $elemMatch = <T>(operand: Query<T>, _options: undefined): ((value: T) => boolean) => {\n\tconst matcher = compileDocumentSelector(operand);\n\n\treturn (value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn value.some((x) => matcher(x));\n\t};\n};\n\nconst $not = <T>(operand: FieldExpression<T>, _options: undefined): ((value: T) => boolean) => {\n\tconst matcher = compileValueSelector(operand);\n\treturn (value: T): boolean => !matcher(value);\n};\n\nconst dummyOperator =\n\t<T>(_operand: unknown, _options: undefined): ((value: T) => boolean) =>\n\t(_value: T): boolean =>\n\t\ttrue;\n\nconst $options = dummyOperator;\nconst $near = dummyOperator;\nconst $geoIntersects = dummyOperator;\n\nconst valueOperators = {\n\t$in,\n\t$nin,\n\t$all,\n\t$lt,\n\t$lte,\n\t$gt,\n\t$gte,\n\t$ne,\n\t$exists,\n\t$mod,\n\t$size,\n\t$type,\n\t$regex,\n\t$elemMatch,\n\t$not,\n\t$options,\n\t$near,\n\t$geoIntersects,\n} as const;\n\nconst $and = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.every((f) => f(doc));\n};\n\nconst $or = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.some((f) => f(doc));\n};\n\nconst $nor = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.every((f) => !f(doc));\n};\n\nconst $where = <T>(selectorValue: string | ((doc: T) => boolean)): ((doc: T) => boolean) => {\n\tconst fn = selectorValue instanceof Function ? selectorValue : Function(`return ${selectorValue}`);\n\treturn (doc: T): boolean => !!fn.call(doc);\n};\n\nconst logicalOperators = {\n\t$and,\n\t$or,\n\t$nor,\n\t$where,\n} as const;\n\nconst isValueOperator = (operator: string): operator is keyof typeof valueOperators => operator in valueOperators;\n\nconst isLogicalOperator = (operator: string): operator is keyof typeof logicalOperators => operator in logicalOperators;\n\nconst hasValueOperators = <T>(valueSelector: FieldExpression<T>): boolean =>\n\tObject.keys(valueSelector).every((key) => key.slice(0, 1) === '$');\n\nconst compileUndefinedOrNullSelector =\n\t<T>(): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => x === undefined || x === null);\n\nconst compilePrimitiveSelector =\n\t<T>(primitive: T) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => x === primitive);\n\nconst compileRegexSelector =\n\t<T>(regex: RegExp) =>\n\t(value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => regex.test(String(x)));\n\t};\n\nconst compileArraySelector =\n\t<T>(expected: T) =>\n\t(value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn some(value, (x) => equals(expected, x));\n\t};\n\nconst compileValueOperatorsSelector = <T>(expression: FieldExpression<T>): ((value: T) => boolean) => {\n\tconst operatorFunctions: ((value: T) => boolean)[] = [];\n\tfor (const operator of Object.keys(expression) as (keyof FieldExpression<T>)[]) {\n\t\tif (!isValueOperator(operator)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst operand = expression[operator];\n\t\tconst operation = valueOperators[operator] as unknown as (operand: unknown, options: unknown) => (value: T) => boolean;\n\t\toperatorFunctions.push(operation(operand, expression.$options));\n\t}\n\treturn (value: T): boolean => operatorFunctions.every((f) => f(value));\n};\n\nconst compileValueSelector = <T>(valueSelector: FieldExpression<T>[keyof FieldExpression<T>]): ((value: T) => boolean) => {\n\tif (valueSelector === undefined || valueSelector === null) {\n\t\treturn compileUndefinedOrNullSelector();\n\t}\n\n\tif (!isObject(valueSelector)) {\n\t\treturn compilePrimitiveSelector(valueSelector as T);\n\t}\n\n\tif (valueSelector instanceof RegExp) {\n\t\treturn compileRegexSelector(valueSelector);\n\t}\n\n\tif (Array.isArray(valueSelector)) {\n\t\treturn compileArraySelector(valueSelector as unknown as T);\n\t}\n\n\tif (hasValueOperators<T>(valueSelector)) {\n\t\treturn compileValueOperatorsSelector(valueSelector);\n\t}\n\n\treturn (value: T): boolean => flatSome(value, (x) => equals(valueSelector, x as unknown as object));\n};\n\nexport const compileDocumentSelector = <T>(docSelector: Query<T> | FieldExpression<T>['$where'][]): ((doc: T) => boolean) => {\n\tconst perKeySelectors = Object.entries(docSelector).map(([key, subSelector]) => {\n\t\tif (subSelector === undefined) {\n\t\t\treturn (): boolean => true;\n\t\t}\n\n\t\tif (isLogicalOperator(key)) {\n\t\t\tswitch (key) {\n\t\t\t\tcase '$and':\n\t\t\t\t\treturn $and(subSelector);\n\n\t\t\t\tcase '$or':\n\t\t\t\t\treturn $or(subSelector);\n\n\t\t\t\tcase '$nor':\n\t\t\t\t\treturn $nor(subSelector);\n\n\t\t\t\tcase '$where':\n\t\t\t\t\treturn $where(subSelector);\n\t\t\t}\n\t\t}\n\n\t\tconst lookUpByIndex = createLookupFunction(key);\n\t\tconst valueSelectorFunc = compileValueSelector(subSelector);\n\t\treturn (doc: T): boolean => {\n\t\t\tconst branchValues = lookUpByIndex(doc);\n\t\t\treturn branchValues.some(valueSelectorFunc);\n\t\t};\n\t});\n\n\treturn (doc: T): boolean => perKeySelectors.every((f) => f(doc));\n};\n"]}}},"code":"var _slicedToArray;\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 0);\nvar _createForOfIteratorHelperLoose;\nmodule.link(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\", {\n  default: function (v) {\n    _createForOfIteratorHelperLoose = v;\n  }\n}, 1);\nvar _typeof;\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 2);\nmodule.export({\n  compileDocumentSelector: function () {\n    return compileDocumentSelector;\n  }\n});\nvar compareBSONValues, getBSONType;\nmodule.link(\"./bson\", {\n  compareBSONValues: function (v) {\n    compareBSONValues = v;\n  },\n  getBSONType: function (v) {\n    getBSONType = v;\n  }\n}, 0);\nvar equals, flatSome, isObject, some;\nmodule.link(\"./comparisons\", {\n  equals: function (v) {\n    equals = v;\n  },\n  flatSome: function (v) {\n    flatSome = v;\n  },\n  isObject: function (v) {\n    isObject = v;\n  },\n  some: function (v) {\n    some = v;\n  }\n}, 1);\nvar createLookupFunction;\nmodule.link(\"./lookups\", {\n  createLookupFunction: function (v) {\n    createLookupFunction = v;\n  }\n}, 2);\nvar isArrayOfFields = function (values) {\n  return values.every(function (value) {\n    return ['number', 'string', 'symbol'].includes(_typeof(value));\n  });\n};\nvar $in = function (operand, _options) {\n  var index = null;\n  if (isArrayOfFields(operand)) {\n    index = {};\n    for (var _iterator = _createForOfIteratorHelperLoose(operand), _step; !(_step = _iterator()).done;) {\n      var operandElement = _step.value;\n      index[operandElement] = operandElement;\n    }\n  }\n  return function (value) {\n    return some(value, function (x) {\n      if (typeof x === 'string' && index !== null) {\n        return !!index[x];\n      }\n      return operand.some(function (operandElement) {\n        return equals(operandElement, x);\n      });\n    });\n  };\n};\nvar $nin = function (operand, _options) {\n  var isIn = $in(operand, undefined);\n  return function (value) {\n    if (value === undefined) {\n      return true;\n    }\n    return !isIn(value);\n  };\n};\nvar $all = function (operand, _options) {\n  return function (value) {\n    if (!Array.isArray(value)) {\n      return false;\n    }\n    return operand.every(function (operandElement) {\n      return value.some(function (valueElement) {\n        return equals(operandElement, valueElement);\n      });\n    });\n  };\n};\nvar $lt = function (operand, _options) {\n  return function (value) {\n    return flatSome(value, function (x) {\n      return compareBSONValues(x, operand) < 0;\n    });\n  };\n};\nvar $lte = function (operand, _options) {\n  return function (value) {\n    return flatSome(value, function (x) {\n      return compareBSONValues(x, operand) <= 0;\n    });\n  };\n};\nvar $gt = function (operand, _options) {\n  return function (value) {\n    return flatSome(value, function (x) {\n      return compareBSONValues(x, operand) > 0;\n    });\n  };\n};\nvar $gte = function (operand, _options) {\n  return function (value) {\n    return flatSome(value, function (x) {\n      return compareBSONValues(x, operand) >= 0;\n    });\n  };\n};\nvar $ne = function (operand, _options) {\n  return function (value) {\n    return !some(value, function (x) {\n      return equals(x, operand);\n    });\n  };\n};\nvar $exists = function (operand, _options) {\n  return function (value) {\n    return operand === (value !== undefined);\n  };\n};\nvar $mod = function (_ref, _options) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    divisor = _ref2[0],\n    remainder = _ref2[1];\n  return function (value) {\n    return flatSome(value, function (x) {\n      return Number(x) % divisor === remainder;\n    });\n  };\n};\nvar $size = function (operand, _options) {\n  return function (value) {\n    return Array.isArray(value) && operand === value.length;\n  };\n};\nvar $type = function (operand, _options) {\n  return function (value) {\n    if (value === undefined) {\n      return false;\n    }\n    return flatSome(value, function (x) {\n      return getBSONType(x) === operand;\n    });\n  };\n};\nvar $regex = function (operand, options) {\n  var regex;\n  if (options !== undefined) {\n    var regexSource = operand instanceof RegExp ? operand.source : operand;\n    regex = new RegExp(regexSource, options);\n  } else if (!(operand instanceof RegExp)) {\n    regex = new RegExp(operand);\n  }\n  return function (value) {\n    if (value === undefined) {\n      return false;\n    }\n    return flatSome(value, function (x) {\n      return regex.test(String(x));\n    });\n  };\n};\nvar $elemMatch = function (operand, _options) {\n  var matcher = compileDocumentSelector(operand);\n  return function (value) {\n    if (!Array.isArray(value)) {\n      return false;\n    }\n    return value.some(function (x) {\n      return matcher(x);\n    });\n  };\n};\nvar $not = function (operand, _options) {\n  var matcher = compileValueSelector(operand);\n  return function (value) {\n    return !matcher(value);\n  };\n};\nvar dummyOperator = function (_operand, _options) {\n  return function (_value) {\n    return true;\n  };\n};\nvar $options = dummyOperator;\nvar $near = dummyOperator;\nvar $geoIntersects = dummyOperator;\nvar valueOperators = {\n  $in: $in,\n  $nin: $nin,\n  $all: $all,\n  $lt: $lt,\n  $lte: $lte,\n  $gt: $gt,\n  $gte: $gte,\n  $ne: $ne,\n  $exists: $exists,\n  $mod: $mod,\n  $size: $size,\n  $type: $type,\n  $regex: $regex,\n  $elemMatch: $elemMatch,\n  $not: $not,\n  $options: $options,\n  $near: $near,\n  $geoIntersects: $geoIntersects\n};\nvar $and = function (subSelector) {\n  var subSelectorFunctions = subSelector.map(compileDocumentSelector);\n  return function (doc) {\n    return subSelectorFunctions.every(function (f) {\n      return f(doc);\n    });\n  };\n};\nvar $or = function (subSelector) {\n  var subSelectorFunctions = subSelector.map(compileDocumentSelector);\n  return function (doc) {\n    return subSelectorFunctions.some(function (f) {\n      return f(doc);\n    });\n  };\n};\nvar $nor = function (subSelector) {\n  var subSelectorFunctions = subSelector.map(compileDocumentSelector);\n  return function (doc) {\n    return subSelectorFunctions.every(function (f) {\n      return !f(doc);\n    });\n  };\n};\nvar $where = function (selectorValue) {\n  var fn = selectorValue instanceof Function ? selectorValue : Function(\"return \" + selectorValue);\n  return function (doc) {\n    return !!fn.call(doc);\n  };\n};\nvar logicalOperators = {\n  $and: $and,\n  $or: $or,\n  $nor: $nor,\n  $where: $where\n};\nvar isValueOperator = function (operator) {\n  return operator in valueOperators;\n};\nvar isLogicalOperator = function (operator) {\n  return operator in logicalOperators;\n};\nvar hasValueOperators = function (valueSelector) {\n  return Object.keys(valueSelector).every(function (key) {\n    return key.slice(0, 1) === '$';\n  });\n};\nvar compileUndefinedOrNullSelector = function () {\n  return function (value) {\n    return flatSome(value, function (x) {\n      return x === undefined || x === null;\n    });\n  };\n};\nvar compilePrimitiveSelector = function (primitive) {\n  return function (value) {\n    return flatSome(value, function (x) {\n      return x === primitive;\n    });\n  };\n};\nvar compileRegexSelector = function (regex) {\n  return function (value) {\n    if (value === undefined) {\n      return false;\n    }\n    return flatSome(value, function (x) {\n      return regex.test(String(x));\n    });\n  };\n};\nvar compileArraySelector = function (expected) {\n  return function (value) {\n    if (!Array.isArray(value)) {\n      return false;\n    }\n    return some(value, function (x) {\n      return equals(expected, x);\n    });\n  };\n};\nvar compileValueOperatorsSelector = function (expression) {\n  var operatorFunctions = [];\n  for (var _i = 0, _Object$keys = Object.keys(expression); _i < _Object$keys.length; _i++) {\n    var operator = _Object$keys[_i];\n    if (!isValueOperator(operator)) {\n      continue;\n    }\n    var operand = expression[operator];\n    var operation = valueOperators[operator];\n    operatorFunctions.push(operation(operand, expression.$options));\n  }\n  return function (value) {\n    return operatorFunctions.every(function (f) {\n      return f(value);\n    });\n  };\n};\nvar compileValueSelector = function (valueSelector) {\n  if (valueSelector === undefined || valueSelector === null) {\n    return compileUndefinedOrNullSelector();\n  }\n  if (!isObject(valueSelector)) {\n    return compilePrimitiveSelector(valueSelector);\n  }\n  if (valueSelector instanceof RegExp) {\n    return compileRegexSelector(valueSelector);\n  }\n  if (Array.isArray(valueSelector)) {\n    return compileArraySelector(valueSelector);\n  }\n  if (hasValueOperators(valueSelector)) {\n    return compileValueOperatorsSelector(valueSelector);\n  }\n  return function (value) {\n    return flatSome(value, function (x) {\n      return equals(valueSelector, x);\n    });\n  };\n};\nvar compileDocumentSelector = function (docSelector) {\n  var perKeySelectors = Object.entries(docSelector).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      key = _ref4[0],\n      subSelector = _ref4[1];\n    if (subSelector === undefined) {\n      return function () {\n        return true;\n      };\n    }\n    if (isLogicalOperator(key)) {\n      switch (key) {\n        case '$and':\n          return $and(subSelector);\n        case '$or':\n          return $or(subSelector);\n        case '$nor':\n          return $nor(subSelector);\n        case '$where':\n          return $where(subSelector);\n      }\n    }\n    var lookUpByIndex = createLookupFunction(key);\n    var valueSelectorFunc = compileValueSelector(subSelector);\n    return function (doc) {\n      var branchValues = lookUpByIndex(doc);\n      return branchValues.some(valueSelectorFunc);\n    };\n  });\n  return function (doc) {\n    return perKeySelectors.every(function (f) {\n      return f(doc);\n    });\n  };\n};","map":{"version":3,"names":["_slicedToArray","module","link","default","v","_createForOfIteratorHelperLoose","_typeof","export","compileDocumentSelector","compareBSONValues","getBSONType","equals","flatSome","isObject","some","createLookupFunction","isArrayOfFields","values","every","value","includes","$in","operand","_options","index","_iterator","_step","done","operandElement","x","$nin","isIn","undefined","$all","Array","isArray","valueElement","$lt","$lte","$gt","$gte","$ne","$exists","$mod","_ref","_ref2","divisor","remainder","Number","$size","length","$type","$regex","options","regex","regexSource","RegExp","source","test","String","$elemMatch","matcher","$not","compileValueSelector","dummyOperator","_operand","_value","$options","$near","$geoIntersects","valueOperators","$and","subSelector","subSelectorFunctions","map","doc","f","$or","$nor","$where","selectorValue","fn","Function","call","logicalOperators","isValueOperator","operator","isLogicalOperator","hasValueOperators","valueSelector","Object","keys","key","slice","compileUndefinedOrNullSelector","compilePrimitiveSelector","primitive","compileRegexSelector","compileArraySelector","expected","compileValueOperatorsSelector","expression","operatorFunctions","_i","_Object$keys","operation","push","docSelector","perKeySelectors","entries","_ref3","_ref4","lookUpByIndex","valueSelectorFunc","branchValues"],"sources":["client/lib/minimongo/query.ts"],"sourcesContent":["import { compareBSONValues, getBSONType } from './bson';\nimport { equals, flatSome, isObject, some } from './comparisons';\nimport { createLookupFunction } from './lookups';\nimport type { BSONType, FieldExpression, Query } from './types';\n\nconst isArrayOfFields = <T>(values: unknown[]): values is T[] =>\n\tvalues.every((value) => ['number', 'string', 'symbol'].includes(typeof value));\n\nconst $in = <T extends string>(operand: T[], _options: undefined): ((value: T) => boolean) => {\n\tlet index: Record<T, T> | null = null;\n\tif (isArrayOfFields<T>(operand)) {\n\t\tindex = {} as Record<T, T>;\n\t\tfor (const operandElement of operand) {\n\t\t\tindex[operandElement] = operandElement;\n\t\t}\n\t}\n\n\treturn (value: T): boolean =>\n\t\tsome(value, (x) => {\n\t\t\tif (typeof x === 'string' && index !== null) {\n\t\t\t\treturn !!index[x];\n\t\t\t}\n\n\t\t\treturn operand.some((operandElement) => equals(operandElement, x));\n\t\t});\n};\n\nconst $nin = <T extends string>(operand: T[], _options: undefined): ((value: T) => boolean) => {\n\tconst isIn = $in(operand, undefined);\n\n\treturn (value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !isIn(value);\n\t};\n};\n\nconst $all =\n\t<T>(operand: T[], _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn operand.every((operandElement) => value.some((valueElement) => equals(operandElement, valueElement)));\n\t};\n\nconst $lt =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) < 0);\n\nconst $lte =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) <= 0);\n\nconst $gt =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) > 0);\n\nconst $gte =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => compareBSONValues(x, operand) >= 0);\n\nconst $ne =\n\t<T>(operand: T, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\t!some(value, (x) => equals(x, operand));\n\nconst $exists =\n\t<T>(operand: boolean, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\toperand === (value !== undefined);\n\nconst $mod =\n\t<T>([divisor, remainder]: [number, number], _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => Number(x) % divisor === remainder);\n\nconst $size =\n\t<T>(operand: number, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tArray.isArray(value) && operand === value.length;\n\nconst $type =\n\t<T>(operand: BSONType, _options: undefined): ((value: T) => boolean) =>\n\t(value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => getBSONType(x) === operand);\n\t};\n\nconst $regex = <T>(operand: string | RegExp, options: string): ((value: T) => boolean) => {\n\tlet regex: RegExp;\n\n\tif (options !== undefined) {\n\t\tconst regexSource = operand instanceof RegExp ? operand.source : operand;\n\t\tregex = new RegExp(regexSource, options);\n\t} else if (!(operand instanceof RegExp)) {\n\t\tregex = new RegExp(operand);\n\t}\n\n\treturn (value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => regex.test(String(x)));\n\t};\n};\n\nconst $elemMatch = <T>(operand: Query<T>, _options: undefined): ((value: T) => boolean) => {\n\tconst matcher = compileDocumentSelector(operand);\n\n\treturn (value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn value.some((x) => matcher(x));\n\t};\n};\n\nconst $not = <T>(operand: FieldExpression<T>, _options: undefined): ((value: T) => boolean) => {\n\tconst matcher = compileValueSelector(operand);\n\treturn (value: T): boolean => !matcher(value);\n};\n\nconst dummyOperator =\n\t<T>(_operand: unknown, _options: undefined): ((value: T) => boolean) =>\n\t(_value: T): boolean =>\n\t\ttrue;\n\nconst $options = dummyOperator;\nconst $near = dummyOperator;\nconst $geoIntersects = dummyOperator;\n\nconst valueOperators = {\n\t$in,\n\t$nin,\n\t$all,\n\t$lt,\n\t$lte,\n\t$gt,\n\t$gte,\n\t$ne,\n\t$exists,\n\t$mod,\n\t$size,\n\t$type,\n\t$regex,\n\t$elemMatch,\n\t$not,\n\t$options,\n\t$near,\n\t$geoIntersects,\n} as const;\n\nconst $and = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.every((f) => f(doc));\n};\n\nconst $or = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.some((f) => f(doc));\n};\n\nconst $nor = <T>(subSelector: Query<T>[]): ((doc: T) => boolean) => {\n\tconst subSelectorFunctions = subSelector.map(compileDocumentSelector);\n\treturn (doc: T): boolean => subSelectorFunctions.every((f) => !f(doc));\n};\n\nconst $where = <T>(selectorValue: string | ((doc: T) => boolean)): ((doc: T) => boolean) => {\n\tconst fn = selectorValue instanceof Function ? selectorValue : Function(`return ${selectorValue}`);\n\treturn (doc: T): boolean => !!fn.call(doc);\n};\n\nconst logicalOperators = {\n\t$and,\n\t$or,\n\t$nor,\n\t$where,\n} as const;\n\nconst isValueOperator = (operator: string): operator is keyof typeof valueOperators => operator in valueOperators;\n\nconst isLogicalOperator = (operator: string): operator is keyof typeof logicalOperators => operator in logicalOperators;\n\nconst hasValueOperators = <T>(valueSelector: FieldExpression<T>): boolean =>\n\tObject.keys(valueSelector).every((key) => key.slice(0, 1) === '$');\n\nconst compileUndefinedOrNullSelector =\n\t<T>(): ((value: T) => boolean) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => x === undefined || x === null);\n\nconst compilePrimitiveSelector =\n\t<T>(primitive: T) =>\n\t(value: T): boolean =>\n\t\tflatSome(value, (x) => x === primitive);\n\nconst compileRegexSelector =\n\t<T>(regex: RegExp) =>\n\t(value: T): boolean => {\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn flatSome(value, (x) => regex.test(String(x)));\n\t};\n\nconst compileArraySelector =\n\t<T>(expected: T) =>\n\t(value: T): boolean => {\n\t\tif (!Array.isArray(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn some(value, (x) => equals(expected, x));\n\t};\n\nconst compileValueOperatorsSelector = <T>(expression: FieldExpression<T>): ((value: T) => boolean) => {\n\tconst operatorFunctions: ((value: T) => boolean)[] = [];\n\tfor (const operator of Object.keys(expression) as (keyof FieldExpression<T>)[]) {\n\t\tif (!isValueOperator(operator)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst operand = expression[operator];\n\t\tconst operation = valueOperators[operator] as unknown as (operand: unknown, options: unknown) => (value: T) => boolean;\n\t\toperatorFunctions.push(operation(operand, expression.$options));\n\t}\n\treturn (value: T): boolean => operatorFunctions.every((f) => f(value));\n};\n\nconst compileValueSelector = <T>(valueSelector: FieldExpression<T>[keyof FieldExpression<T>]): ((value: T) => boolean) => {\n\tif (valueSelector === undefined || valueSelector === null) {\n\t\treturn compileUndefinedOrNullSelector();\n\t}\n\n\tif (!isObject(valueSelector)) {\n\t\treturn compilePrimitiveSelector(valueSelector as T);\n\t}\n\n\tif (valueSelector instanceof RegExp) {\n\t\treturn compileRegexSelector(valueSelector);\n\t}\n\n\tif (Array.isArray(valueSelector)) {\n\t\treturn compileArraySelector(valueSelector as unknown as T);\n\t}\n\n\tif (hasValueOperators<T>(valueSelector)) {\n\t\treturn compileValueOperatorsSelector(valueSelector);\n\t}\n\n\treturn (value: T): boolean => flatSome(value, (x) => equals(valueSelector, x as unknown as object));\n};\n\nexport const compileDocumentSelector = <T>(docSelector: Query<T> | FieldExpression<T>['$where'][]): ((doc: T) => boolean) => {\n\tconst perKeySelectors = Object.entries(docSelector).map(([key, subSelector]) => {\n\t\tif (subSelector === undefined) {\n\t\t\treturn (): boolean => true;\n\t\t}\n\n\t\tif (isLogicalOperator(key)) {\n\t\t\tswitch (key) {\n\t\t\t\tcase '$and':\n\t\t\t\t\treturn $and(subSelector);\n\n\t\t\t\tcase '$or':\n\t\t\t\t\treturn $or(subSelector);\n\n\t\t\t\tcase '$nor':\n\t\t\t\t\treturn $nor(subSelector);\n\n\t\t\t\tcase '$where':\n\t\t\t\t\treturn $where(subSelector);\n\t\t\t}\n\t\t}\n\n\t\tconst lookUpByIndex = createLookupFunction(key);\n\t\tconst valueSelectorFunc = compileValueSelector(subSelector);\n\t\treturn (doc: T): boolean => {\n\t\t\tconst branchValues = lookUpByIndex(doc);\n\t\t\treturn branchValues.some(valueSelectorFunc);\n\t\t};\n\t});\n\n\treturn (doc: T): boolean => perKeySelectors.every((f) => f(doc));\n};\n"],"mappings":"AAAA,IAAAA,cAAS;AAAAC,MAAA,CAAiBC,IAAE,uCAA4B;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAJ,cAAA,GAAAI,CAAA;EAAA;AAAA;AAAA,IAAAC,+BAAA;AAAAJ,MAAA,CAAAC,IAAA;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAC,+BAAA,GAAAD,CAAA;EAAA;AAAA;AAAA,IAAAE,OAAA;AAAAL,MAAA,CAAAC,IAAA;EAAAC,OAAA,WAAAA,CAAAC,CAAA;IAAAE,OAAA,GAAAF,CAAA;EAAA;AAAA;AAAxDH,MAAA,CAAOM,MAAE;EAAAC,uBAAmB,EAAW,SAAAA,CAAA,EAAQ;IAAA,OAASA,uBAAA;EAAA;AAAA;AAAA,IAAAC,iBAAA,EAAAC,WAAA;AAAAT,MAAA,CAAAC,IAAA;EAAAO,iBAAA,WAAAA,CAAAL,CAAA;IAAAK,iBAAA,GAAAL,CAAA;EAAA;EAAAM,WAAA,WAAAA,CAAAN,CAAA;IAAAM,WAAA,GAAAN,CAAA;EAAA;AAAA;AAAA,IAAAO,MAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,IAAA;AAAAb,MAAA,CAAAC,IAAA;EAAAS,MAAA,WAAAA,CAAAP,CAAA;IAAAO,MAAA,GAAAP,CAAA;EAAA;EAAAQ,QAAA,WAAAA,CAAAR,CAAA;IAAAQ,QAAA,GAAAR,CAAA;EAAA;EAAAS,QAAA,WAAAA,CAAAT,CAAA;IAAAS,QAAA,GAAAT,CAAA;EAAA;EAAAU,IAAA,WAAAA,CAAAV,CAAA;IAAAU,IAAA,GAAAV,CAAA;EAAA;AAAA;AAAA,IAAAW,oBAAA;AAAAd,MAAA,CAAAC,IAAA;EAAAa,oBAAA,WAAAA,CAAAX,CAAA;IAAAW,oBAAA,GAAAX,CAAA;EAAA;AAAA;AAKxD,IAAMY,eAAe,GAAG,SAAAA,CAAIC,MAAiB;EAAA,OAC5CA,MAAM,CAACC,KAAK,CAAC,UAACC,KAAK;IAAA,OAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAAAd,OAAA,CAAQa,KAAK,EAAC;EAAA,EAAC;AAAA;AAE/E,IAAME,GAAG,GAAG,SAAAA,CAAmBC,OAAY,EAAEC,QAAmB,EAA6B;EAC5F,IAAIC,KAAK,GAAwB,IAAI;EACrC,IAAIR,eAAe,CAAIM,OAAO,CAAC,EAAE;IAChCE,KAAK,GAAG,EAAkB;IAC1B,SAAAC,SAAA,GAAApB,+BAAA,CAA6BiB,OAAO,GAAAI,KAAA,IAAAA,KAAA,GAAAD,SAAA,IAAAE,IAAA,GAAE;MAAA,IAA3BC,cAAc,GAAAF,KAAA,CAAAP,KAAA;MACxBK,KAAK,CAACI,cAAc,CAAC,GAAGA,cAAc;IACvC;EACD;EAEA,OAAO,UAACT,KAAQ;IAAA,OACfL,IAAI,CAACK,KAAK,EAAE,UAACU,CAAC,EAAI;MACjB,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAIL,KAAK,KAAK,IAAI,EAAE;QAC5C,OAAO,CAAC,CAACA,KAAK,CAACK,CAAC,CAAC;MAClB;MAEA,OAAOP,OAAO,CAACR,IAAI,CAAC,UAACc,cAAc;QAAA,OAAKjB,MAAM,CAACiB,cAAc,EAAEC,CAAC,CAAC;MAAA,EAAC;IACnE,CAAC,CAAC;EAAA;AACJ,CAAC;AAED,IAAMC,IAAI,GAAG,SAAAA,CAAmBR,OAAY,EAAEC,QAAmB,EAA6B;EAC7F,IAAMQ,IAAI,GAAGV,GAAG,CAACC,OAAO,EAAEU,SAAS,CAAC;EAEpC,OAAO,UAACb,KAAQ,EAAa;IAC5B,IAAIA,KAAK,KAAKa,SAAS,EAAE;MACxB,OAAO,IAAI;IACZ;IAEA,OAAO,CAACD,IAAI,CAACZ,KAAK,CAAC;EACpB,CAAC;AACF,CAAC;AAED,IAAMc,IAAI,GACT,SAAAA,CAAIX,OAAY,EAAEC,QAAmB;EAAA,OACrC,UAACJ,KAAQ,EAAa;IACrB,IAAI,CAACe,KAAK,CAACC,OAAO,CAAChB,KAAK,CAAC,EAAE;MAC1B,OAAO,KAAK;IACb;IAEA,OAAOG,OAAO,CAACJ,KAAK,CAAC,UAACU,cAAc;MAAA,OAAKT,KAAK,CAACL,IAAI,CAAC,UAACsB,YAAY;QAAA,OAAKzB,MAAM,CAACiB,cAAc,EAAEQ,YAAY,CAAC;MAAA,EAAC;IAAA,EAAC;EAC7G,CAAC;AAAA;AAEF,IAAMC,GAAG,GACR,SAAAA,CAAIf,OAAU,EAAEC,QAAmB;EAAA,OACnC,UAACJ,KAAQ;IAAA,OACRP,QAAQ,CAACO,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKpB,iBAAiB,CAACoB,CAAC,EAAEP,OAAO,CAAC,GAAG,CAAC;IAAA,EAAC;EAAA;AAAA;AAE3D,IAAMgB,IAAI,GACT,SAAAA,CAAIhB,OAAU,EAAEC,QAAmB;EAAA,OACnC,UAACJ,KAAQ;IAAA,OACRP,QAAQ,CAACO,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKpB,iBAAiB,CAACoB,CAAC,EAAEP,OAAO,CAAC,IAAI,CAAC;IAAA,EAAC;EAAA;AAAA;AAE5D,IAAMiB,GAAG,GACR,SAAAA,CAAIjB,OAAU,EAAEC,QAAmB;EAAA,OACnC,UAACJ,KAAQ;IAAA,OACRP,QAAQ,CAACO,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKpB,iBAAiB,CAACoB,CAAC,EAAEP,OAAO,CAAC,GAAG,CAAC;IAAA,EAAC;EAAA;AAAA;AAE3D,IAAMkB,IAAI,GACT,SAAAA,CAAIlB,OAAU,EAAEC,QAAmB;EAAA,OACnC,UAACJ,KAAQ;IAAA,OACRP,QAAQ,CAACO,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKpB,iBAAiB,CAACoB,CAAC,EAAEP,OAAO,CAAC,IAAI,CAAC;IAAA,EAAC;EAAA;AAAA;AAE5D,IAAMmB,GAAG,GACR,SAAAA,CAAInB,OAAU,EAAEC,QAAmB;EAAA,OACnC,UAACJ,KAAQ;IAAA,OACR,CAACL,IAAI,CAACK,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKlB,MAAM,CAACkB,CAAC,EAAEP,OAAO,CAAC;IAAA,EAAC;EAAA;AAAA;AAEzC,IAAMoB,OAAO,GACZ,SAAAA,CAAIpB,OAAgB,EAAEC,QAAmB;EAAA,OACzC,UAACJ,KAAQ;IAAA,OACRG,OAAO,MAAMH,KAAK,KAAKa,SAAS,CAAC;EAAA;AAAA;AAEnC,IAAMW,IAAI,GACT,SAAAA,CAAAC,IAAA,EAA4CrB,QAAmB;EAAA,IAAAsB,KAAA,GAAA7C,cAAA,CAAA4C,IAAA;IAA1DE,OAAO,GAAAD,KAAA;IAAEE,SAAS,GAAAF,KAAA;EAAA,OACvB,UAAC1B,KAAQ;IAAA,OACRP,QAAQ,CAACO,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKmB,MAAM,CAACnB,CAAC,CAAC,GAAGiB,OAAO,KAAKC,SAAS;IAAA,EAAC;EAAA;AAAA;AAE3D,IAAME,KAAK,GACV,SAAAA,CAAI3B,OAAe,EAAEC,QAAmB;EAAA,OACxC,UAACJ,KAAQ;IAAA,OACRe,KAAK,CAACC,OAAO,CAAChB,KAAK,CAAC,IAAIG,OAAO,KAAKH,KAAK,CAAC+B,MAAM;EAAA;AAAA;AAElD,IAAMC,KAAK,GACV,SAAAA,CAAI7B,OAAiB,EAAEC,QAAmB;EAAA,OAC1C,UAACJ,KAAQ,EAAa;IACrB,IAAIA,KAAK,KAAKa,SAAS,EAAE;MACxB,OAAO,KAAK;IACb;IAEA,OAAOpB,QAAQ,CAACO,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKnB,WAAW,CAACmB,CAAC,CAAC,KAAKP,OAAO;IAAA,EAAC;EAC1D,CAAC;AAAA;AAEF,IAAM8B,MAAM,GAAG,SAAAA,CAAI9B,OAAwB,EAAE+B,OAAe,EAA6B;EACxF,IAAIC,KAAa;EAEjB,IAAID,OAAO,KAAKrB,SAAS,EAAE;IAC1B,IAAMuB,WAAW,GAAGjC,OAAO,YAAYkC,MAAM,GAAGlC,OAAO,CAACmC,MAAM,GAAGnC,OAAO;IACxEgC,KAAK,GAAG,IAAIE,MAAM,CAACD,WAAW,EAAEF,OAAO,CAAC;EACzC,CAAC,MAAM,IAAI,EAAE/B,OAAO,YAAYkC,MAAM,CAAC,EAAE;IACxCF,KAAK,GAAG,IAAIE,MAAM,CAAClC,OAAO,CAAC;EAC5B;EAEA,OAAO,UAACH,KAAQ,EAAa;IAC5B,IAAIA,KAAK,KAAKa,SAAS,EAAE;MACxB,OAAO,KAAK;IACb;IAEA,OAAOpB,QAAQ,CAACO,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKyB,KAAK,CAACI,IAAI,CAACC,MAAM,CAAC9B,CAAC,CAAC,CAAC;IAAA,EAAC;EACrD,CAAC;AACF,CAAC;AAED,IAAM+B,UAAU,GAAG,SAAAA,CAAItC,OAAiB,EAAEC,QAAmB,EAA6B;EACzF,IAAMsC,OAAO,GAAGrD,uBAAuB,CAACc,OAAO,CAAC;EAEhD,OAAO,UAACH,KAAQ,EAAa;IAC5B,IAAI,CAACe,KAAK,CAACC,OAAO,CAAChB,KAAK,CAAC,EAAE;MAC1B,OAAO,KAAK;IACb;IAEA,OAAOA,KAAK,CAACL,IAAI,CAAC,UAACe,CAAC;MAAA,OAAKgC,OAAO,CAAChC,CAAC,CAAC;IAAA,EAAC;EACrC,CAAC;AACF,CAAC;AAED,IAAMiC,IAAI,GAAG,SAAAA,CAAIxC,OAA2B,EAAEC,QAAmB,EAA6B;EAC7F,IAAMsC,OAAO,GAAGE,oBAAoB,CAACzC,OAAO,CAAC;EAC7C,OAAO,UAACH,KAAQ;IAAA,OAAc,CAAC0C,OAAO,CAAC1C,KAAK,CAAC;EAAA;AAC9C,CAAC;AAED,IAAM6C,aAAa,GAClB,SAAAA,CAAIC,QAAiB,EAAE1C,QAAmB;EAAA,OAC1C,UAAC2C,MAAS;IAAA,OACT,IAAI;EAAA;AAAA;AAEN,IAAMC,QAAQ,GAAGH,aAAa;AAC9B,IAAMI,KAAK,GAAGJ,aAAa;AAC3B,IAAMK,cAAc,GAAGL,aAAa;AAEpC,IAAMM,cAAc,GAAG;EACtBjD,GAAG,EAAHA,GAAG;EACHS,IAAI,EAAJA,IAAI;EACJG,IAAI,EAAJA,IAAI;EACJI,GAAG,EAAHA,GAAG;EACHC,IAAI,EAAJA,IAAI;EACJC,GAAG,EAAHA,GAAG;EACHC,IAAI,EAAJA,IAAI;EACJC,GAAG,EAAHA,GAAG;EACHC,OAAO,EAAPA,OAAO;EACPC,IAAI,EAAJA,IAAI;EACJM,KAAK,EAALA,KAAK;EACLE,KAAK,EAALA,KAAK;EACLC,MAAM,EAANA,MAAM;EACNQ,UAAU,EAAVA,UAAU;EACVE,IAAI,EAAJA,IAAI;EACJK,QAAQ,EAARA,QAAQ;EACRC,KAAK,EAALA,KAAK;EACLC,cAAc,EAAdA;CACS;AAEV,IAAME,IAAI,GAAG,SAAAA,CAAIC,WAAuB,EAA2B;EAClE,IAAMC,oBAAoB,GAAGD,WAAW,CAACE,GAAG,CAAClE,uBAAuB,CAAC;EACrE,OAAO,UAACmE,GAAM;IAAA,OAAcF,oBAAoB,CAACvD,KAAK,CAAC,UAAC0D,CAAC;MAAA,OAAKA,CAAC,CAACD,GAAG,CAAC;IAAA,EAAC;EAAA;AACtE,CAAC;AAED,IAAME,GAAG,GAAG,SAAAA,CAAIL,WAAuB,EAA2B;EACjE,IAAMC,oBAAoB,GAAGD,WAAW,CAACE,GAAG,CAAClE,uBAAuB,CAAC;EACrE,OAAO,UAACmE,GAAM;IAAA,OAAcF,oBAAoB,CAAC3D,IAAI,CAAC,UAAC8D,CAAC;MAAA,OAAKA,CAAC,CAACD,GAAG,CAAC;IAAA,EAAC;EAAA;AACrE,CAAC;AAED,IAAMG,IAAI,GAAG,SAAAA,CAAIN,WAAuB,EAA2B;EAClE,IAAMC,oBAAoB,GAAGD,WAAW,CAACE,GAAG,CAAClE,uBAAuB,CAAC;EACrE,OAAO,UAACmE,GAAM;IAAA,OAAcF,oBAAoB,CAACvD,KAAK,CAAC,UAAC0D,CAAC;MAAA,OAAK,CAACA,CAAC,CAACD,GAAG,CAAC;IAAA,EAAC;EAAA;AACvE,CAAC;AAED,IAAMI,MAAM,GAAG,SAAAA,CAAIC,aAA6C,EAA2B;EAC1F,IAAMC,EAAE,GAAGD,aAAa,YAAYE,QAAQ,GAAGF,aAAa,GAAGE,QAAQ,aAAWF,aAAe,CAAC;EAClG,OAAO,UAACL,GAAM;IAAA,OAAc,CAAC,CAACM,EAAE,CAACE,IAAI,CAACR,GAAG,CAAC;EAAA;AAC3C,CAAC;AAED,IAAMS,gBAAgB,GAAG;EACxBb,IAAI,EAAJA,IAAI;EACJM,GAAG,EAAHA,GAAG;EACHC,IAAI,EAAJA,IAAI;EACJC,MAAM,EAANA;CACS;AAEV,IAAMM,eAAe,GAAG,SAAAA,CAACC,QAAgB;EAAA,OAA8CA,QAAQ,IAAIhB,cAAc;AAAA;AAEjH,IAAMiB,iBAAiB,GAAG,SAAAA,CAACD,QAAgB;EAAA,OAAgDA,QAAQ,IAAIF,gBAAgB;AAAA;AAEvH,IAAMI,iBAAiB,GAAG,SAAAA,CAAIC,aAAiC;EAAA,OAC9DC,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACvE,KAAK,CAAC,UAAC0E,GAAG;IAAA,OAAKA,GAAG,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG;EAAA,EAAC;AAAA;AAEnE,IAAMC,8BAA8B,GACnC,SAAAA,CAAA;EAAA,OACA,UAAC3E,KAAQ;IAAA,OACRP,QAAQ,CAACO,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKA,CAAC,KAAKG,SAAS,IAAIH,CAAC,KAAK,IAAI;IAAA,EAAC;EAAA;AAAA;AAEvD,IAAMkE,wBAAwB,GAC7B,SAAAA,CAAIC,SAAY;EAAA,OAChB,UAAC7E,KAAQ;IAAA,OACRP,QAAQ,CAACO,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKA,CAAC,KAAKmE,SAAS;IAAA,EAAC;EAAA;AAAA;AAEzC,IAAMC,oBAAoB,GACzB,SAAAA,CAAI3C,KAAa;EAAA,OACjB,UAACnC,KAAQ,EAAa;IACrB,IAAIA,KAAK,KAAKa,SAAS,EAAE;MACxB,OAAO,KAAK;IACb;IAEA,OAAOpB,QAAQ,CAACO,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKyB,KAAK,CAACI,IAAI,CAACC,MAAM,CAAC9B,CAAC,CAAC,CAAC;IAAA,EAAC;EACrD,CAAC;AAAA;AAEF,IAAMqE,oBAAoB,GACzB,SAAAA,CAAIC,QAAW;EAAA,OACf,UAAChF,KAAQ,EAAa;IACrB,IAAI,CAACe,KAAK,CAACC,OAAO,CAAChB,KAAK,CAAC,EAAE;MAC1B,OAAO,KAAK;IACb;IAEA,OAAOL,IAAI,CAACK,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKlB,MAAM,CAACwF,QAAQ,EAAEtE,CAAC,CAAC;IAAA,EAAC;EAC/C,CAAC;AAAA;AAEF,IAAMuE,6BAA6B,GAAG,SAAAA,CAAIC,UAA8B,EAA6B;EACpG,IAAMC,iBAAiB,GAA8B,EAAE;EACvD,SAAAC,EAAA,MAAAC,YAAA,GAAuBd,MAAM,CAACC,IAAI,CAACU,UAAU,CAAiC,EAAAE,EAAA,GAAAC,YAAA,CAAAtD,MAAA,EAAAqD,EAAA,IAAE;IAA3E,IAAMjB,QAAQ,GAAAkB,YAAA,CAAAD,EAAA;IAClB,IAAI,CAAClB,eAAe,CAACC,QAAQ,CAAC,EAAE;MAC/B;IACD;IAEA,IAAMhE,OAAO,GAAG+E,UAAU,CAACf,QAAQ,CAAC;IACpC,IAAMmB,SAAS,GAAGnC,cAAc,CAACgB,QAAQ,CAA6E;IACtHgB,iBAAiB,CAACI,IAAI,CAACD,SAAS,CAACnF,OAAO,EAAE+E,UAAU,CAAClC,QAAQ,CAAC,CAAC;EAChE;EACA,OAAO,UAAChD,KAAQ;IAAA,OAAcmF,iBAAiB,CAACpF,KAAK,CAAC,UAAC0D,CAAC;MAAA,OAAKA,CAAC,CAACzD,KAAK,CAAC;IAAA,EAAC;EAAA;AACvE,CAAC;AAED,IAAM4C,oBAAoB,GAAG,SAAAA,CAAI0B,aAA2D,EAA6B;EACxH,IAAIA,aAAa,KAAKzD,SAAS,IAAIyD,aAAa,KAAK,IAAI,EAAE;IAC1D,OAAOK,8BAA8B,EAAE;EACxC;EAEA,IAAI,CAACjF,QAAQ,CAAC4E,aAAa,CAAC,EAAE;IAC7B,OAAOM,wBAAwB,CAACN,aAAkB,CAAC;EACpD;EAEA,IAAIA,aAAa,YAAYjC,MAAM,EAAE;IACpC,OAAOyC,oBAAoB,CAACR,aAAa,CAAC;EAC3C;EAEA,IAAIvD,KAAK,CAACC,OAAO,CAACsD,aAAa,CAAC,EAAE;IACjC,OAAOS,oBAAoB,CAACT,aAA6B,CAAC;EAC3D;EAEA,IAAID,iBAAiB,CAAIC,aAAa,CAAC,EAAE;IACxC,OAAOW,6BAA6B,CAACX,aAAa,CAAC;EACpD;EAEA,OAAO,UAACtE,KAAQ;IAAA,OAAcP,QAAQ,CAACO,KAAK,EAAE,UAACU,CAAC;MAAA,OAAKlB,MAAM,CAAC8E,aAAa,EAAE5D,CAAsB,CAAC;IAAA,EAAC;EAAA;AACpG,CAAC;AAEM,IAAMrB,uBAAuB,GAAG,SAAAA,CAAImG,WAAsD,EAA2B;EAC3H,IAAMC,eAAe,GAAGlB,MAAM,CAACmB,OAAO,CAACF,WAAW,CAAC,CAACjC,GAAG,CAAC,UAAAoC,KAAA,EAAuB;IAAA,IAAAC,KAAA,GAAA/G,cAAA,CAAA8G,KAAA;MAArBlB,GAAG,GAAAmB,KAAA;MAAEvC,WAAW,GAAAuC,KAAA;IACzE,IAAIvC,WAAW,KAAKxC,SAAS,EAAE;MAC9B,OAAO;QAAA,OAAe,IAAI;MAAA;IAC3B;IAEA,IAAIuD,iBAAiB,CAACK,GAAG,CAAC,EAAE;MAC3B,QAAQA,GAAG;QACV,KAAK,MAAM;UACV,OAAOrB,IAAI,CAACC,WAAW,CAAC;QAEzB,KAAK,KAAK;UACT,OAAOK,GAAG,CAACL,WAAW,CAAC;QAExB,KAAK,MAAM;UACV,OAAOM,IAAI,CAACN,WAAW,CAAC;QAEzB,KAAK,QAAQ;UACZ,OAAOO,MAAM,CAACP,WAAW,CAAC;MAC5B;IACD;IAEA,IAAMwC,aAAa,GAAGjG,oBAAoB,CAAC6E,GAAG,CAAC;IAC/C,IAAMqB,iBAAiB,GAAGlD,oBAAoB,CAACS,WAAW,CAAC;IAC3D,OAAO,UAACG,GAAM,EAAa;MAC1B,IAAMuC,YAAY,GAAGF,aAAa,CAACrC,GAAG,CAAC;MACvC,OAAOuC,YAAY,CAACpG,IAAI,CAACmG,iBAAiB,CAAC;IAC5C,CAAC;EACF,CAAC,CAAC;EAEF,OAAO,UAACtC,GAAM;IAAA,OAAciC,eAAe,CAAC1F,KAAK,CAAC,UAAC0D,CAAC;MAAA,OAAKA,CAAC,CAACD,GAAG,CAAC;IAAA,EAAC;EAAA;AACjE,CAAC","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"6b8ae89796c1fa3cb24d4f565f1597c81909202a"}
