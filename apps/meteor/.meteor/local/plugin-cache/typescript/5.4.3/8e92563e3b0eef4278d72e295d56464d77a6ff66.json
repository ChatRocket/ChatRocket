{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/moderation/deleteReportedMessages.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/lib/moderation/deleteReportedMessages.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/moderation/deleteReportedMessages.ts","inputSourceMap":{"version":3,"file":"server/lib/moderation/deleteReportedMessages.ts","sourceRoot":"","sources":["server/lib/moderation/deleteReportedMessages.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IUser, IMessage } from '@rocket.chat/core-typings';\nimport { Messages, Uploads, ReadReceipts } from '@rocket.chat/models';\n\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { settings } from '../../../app/settings/server';\n\n// heavily inspired from message delete taking place in the user deletion process\n// in this path we don't care about the apps engine events - it's a \"raw\" bulk action\nexport async function deleteReportedMessages(messages: IMessage[], user: IUser): Promise<void> {\n\tconst keepHistory = settings.get<boolean>('Message_KeepHistory');\n\tconst showDeletedStatus = settings.get<boolean>('Message_ShowDeletedStatus');\n\tconst files: string[] = [];\n\tconst messageIds: string[] = [];\n\tfor (const message of messages) {\n\t\tif (message.file) {\n\t\t\tfiles.push(message.file._id);\n\t\t}\n\t\tif (message.files && message.files.length > 0) {\n\t\t\tfiles.concat(message.files.map((file) => file._id));\n\t\t}\n\t\tmessageIds.push(message._id);\n\t}\n\tif (keepHistory) {\n\t\tif (showDeletedStatus) {\n\t\t\tconst cursor = Messages.find({ _id: { $in: messageIds } });\n\n\t\t\tfor await (const doc of cursor) {\n\t\t\t\tawait Messages.cloneAndSaveAsHistoryByRecord(\n\t\t\t\t\tdoc,\n\t\t\t\t\tuser as Required<Pick<IUser, '_id' | 'name'>> & { username: NonNullable<IUser['username']> },\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tawait Messages.setHiddenByIds(messageIds, true);\n\t\t}\n\n\t\tawait Uploads.updateMany({ _id: { $in: files } }, { $set: { _hidden: true } });\n\t} else {\n\t\tif (!showDeletedStatus) {\n\t\t\tawait Messages.deleteMany({ _id: { $in: messageIds } });\n\t\t}\n\t\tawait ReadReceipts.removeByMessageIds(messageIds);\n\n\t\tconst store = FileUpload.getStore('Uploads');\n\t\tawait Promise.all(files.map((file) => store.deleteById(file)));\n\t}\n\tif (showDeletedStatus) {\n\t\tawait Messages.setAsDeletedByIdsAndUser(messageIds, user as any);\n\t}\n\n\tconst transformed = messages.reduce(\n\t\t(acc, { rid, _id }) => {\n\t\t\tif (!acc[rid]) {\n\t\t\t\tacc[rid] = [];\n\t\t\t}\n\t\t\tacc[rid].push(_id);\n\t\t\treturn acc;\n\t\t},\n\t\t{} as Record<string, string[]>,\n\t);\n\n\tObject.entries(transformed).forEach(([rid, messageIds]) => {\n\t\tvoid api.broadcast('notify.deleteMessageBulk', rid, {\n\t\t\trid,\n\t\t\texcludePinned: true,\n\t\t\tignoreDiscussion: true,\n\t\t\tts: { $gt: new Date() },\n\t\t\tusers: [],\n\t\t\tids: messageIds,\n\t\t\tshowDeletedStatus,\n\t\t});\n\t});\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/lib/moderation/deleteReportedMessages.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/moderation/deleteReportedMessages.ts","inputSourceMap":{"version":3,"file":"server/lib/moderation/deleteReportedMessages.ts","sourceRoot":"","sources":["server/lib/moderation/deleteReportedMessages.ts"],"names":[],"mappings":"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","sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IUser, IMessage } from '@rocket.chat/core-typings';\nimport { Messages, Uploads, ReadReceipts } from '@rocket.chat/models';\n\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { settings } from '../../../app/settings/server';\n\n// heavily inspired from message delete taking place in the user deletion process\n// in this path we don't care about the apps engine events - it's a \"raw\" bulk action\nexport async function deleteReportedMessages(messages: IMessage[], user: IUser): Promise<void> {\n\tconst keepHistory = settings.get<boolean>('Message_KeepHistory');\n\tconst showDeletedStatus = settings.get<boolean>('Message_ShowDeletedStatus');\n\tconst files: string[] = [];\n\tconst messageIds: string[] = [];\n\tfor (const message of messages) {\n\t\tif (message.file) {\n\t\t\tfiles.push(message.file._id);\n\t\t}\n\t\tif (message.files && message.files.length > 0) {\n\t\t\tfiles.concat(message.files.map((file) => file._id));\n\t\t}\n\t\tmessageIds.push(message._id);\n\t}\n\tif (keepHistory) {\n\t\tif (showDeletedStatus) {\n\t\t\tconst cursor = Messages.find({ _id: { $in: messageIds } });\n\n\t\t\tfor await (const doc of cursor) {\n\t\t\t\tawait Messages.cloneAndSaveAsHistoryByRecord(\n\t\t\t\t\tdoc,\n\t\t\t\t\tuser as Required<Pick<IUser, '_id' | 'name'>> & { username: NonNullable<IUser['username']> },\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tawait Messages.setHiddenByIds(messageIds, true);\n\t\t}\n\n\t\tawait Uploads.updateMany({ _id: { $in: files } }, { $set: { _hidden: true } });\n\t} else {\n\t\tif (!showDeletedStatus) {\n\t\t\tawait Messages.deleteMany({ _id: { $in: messageIds } });\n\t\t}\n\t\tawait ReadReceipts.removeByMessageIds(messageIds);\n\n\t\tconst store = FileUpload.getStore('Uploads');\n\t\tawait Promise.all(files.map((file) => store.deleteById(file)));\n\t}\n\tif (showDeletedStatus) {\n\t\tawait Messages.setAsDeletedByIdsAndUser(messageIds, user as any);\n\t}\n\n\tconst transformed = messages.reduce(\n\t\t(acc, { rid, _id }) => {\n\t\t\tif (!acc[rid]) {\n\t\t\t\tacc[rid] = [];\n\t\t\t}\n\t\t\tacc[rid].push(_id);\n\t\t\treturn acc;\n\t\t},\n\t\t{} as Record<string, string[]>,\n\t);\n\n\tObject.entries(transformed).forEach(([rid, messageIds]) => {\n\t\tvoid api.broadcast('notify.deleteMessageBulk', rid, {\n\t\t\trid,\n\t\t\texcludePinned: true,\n\t\t\tignoreDiscussion: true,\n\t\t\tts: { $gt: new Date() },\n\t\t\tusers: [],\n\t\t\tids: messageIds,\n\t\t\tshowDeletedStatus,\n\t\t});\n\t});\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      deleteReportedMessages: () => deleteReportedMessages\n    });\n    let api;\n    module.link(\"@rocket.chat/core-services\", {\n      api(v) {\n        api = v;\n      }\n    }, 0);\n    let Messages, Uploads, ReadReceipts;\n    module.link(\"@rocket.chat/models\", {\n      Messages(v) {\n        Messages = v;\n      },\n      Uploads(v) {\n        Uploads = v;\n      },\n      ReadReceipts(v) {\n        ReadReceipts = v;\n      }\n    }, 1);\n    let FileUpload;\n    module.link(\"../../../app/file-upload/server\", {\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 2);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 3);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function deleteReportedMessages(messages, user) {\n      const keepHistory = settings.get('Message_KeepHistory');\n      const showDeletedStatus = settings.get('Message_ShowDeletedStatus');\n      const files = [];\n      const messageIds = [];\n      for (const message of messages) {\n        if (message.file) {\n          files.push(message.file._id);\n        }\n        if (message.files && message.files.length > 0) {\n          files.concat(message.files.map(file => file._id));\n        }\n        messageIds.push(message._id);\n      }\n      if (keepHistory) {\n        if (showDeletedStatus) {\n          const cursor = Messages.find({\n            _id: {\n              $in: messageIds\n            }\n          });\n          var _iteratorAbruptCompletion = false;\n          var _didIteratorError = false;\n          var _iteratorError;\n          try {\n            for (var _iterator = _asyncIterator(cursor), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n              const doc = _step.value;\n              {\n                await Messages.cloneAndSaveAsHistoryByRecord(doc, user);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (_iteratorAbruptCompletion && _iterator.return != null) {\n                await _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        } else {\n          await Messages.setHiddenByIds(messageIds, true);\n        }\n        await Uploads.updateMany({\n          _id: {\n            $in: files\n          }\n        }, {\n          $set: {\n            _hidden: true\n          }\n        });\n      } else {\n        if (!showDeletedStatus) {\n          await Messages.deleteMany({\n            _id: {\n              $in: messageIds\n            }\n          });\n        }\n        await ReadReceipts.removeByMessageIds(messageIds);\n        const store = FileUpload.getStore('Uploads');\n        await Promise.all(files.map(file => store.deleteById(file)));\n      }\n      if (showDeletedStatus) {\n        await Messages.setAsDeletedByIdsAndUser(messageIds, user);\n      }\n      const transformed = messages.reduce((acc, _ref) => {\n        let {\n          rid,\n          _id\n        } = _ref;\n        if (!acc[rid]) {\n          acc[rid] = [];\n        }\n        acc[rid].push(_id);\n        return acc;\n      }, {});\n      Object.entries(transformed).forEach(_ref2 => {\n        let [rid, messageIds] = _ref2;\n        void api.broadcast('notify.deleteMessageBulk', rid, {\n          rid,\n          excludePinned: true,\n          ignoreDiscussion: true,\n          ts: {\n            $gt: new Date()\n          },\n          users: [],\n          ids: messageIds,\n          showDeletedStatus\n        });\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","deleteReportedMessages","api","Messages","Uploads","ReadReceipts","FileUpload","settings","__reifyWaitForDeps__","messages","user","keepHistory","get","showDeletedStatus","files","messageIds","message","file","push","_id","length","concat","map","cursor","find","$in","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","doc","value","cloneAndSaveAsHistoryByRecord","err","return","setHiddenByIds","updateMany","$set","_hidden","deleteMany","removeByMessageIds","store","getStore","Promise","all","deleteById","setAsDeletedByIdsAndUser","transformed","reduce","acc","_ref","rid","Object","entries","forEach","_ref2","broadcast","excludePinned","ignoreDiscussion","ts","$gt","Date","users","ids","__reify_async_result__","_reifyError","self","async"],"sources":["server/lib/moderation/deleteReportedMessages.ts"],"sourcesContent":["import { api } from '@rocket.chat/core-services';\nimport type { IUser, IMessage } from '@rocket.chat/core-typings';\nimport { Messages, Uploads, ReadReceipts } from '@rocket.chat/models';\n\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { settings } from '../../../app/settings/server';\n\n// heavily inspired from message delete taking place in the user deletion process\n// in this path we don't care about the apps engine events - it's a \"raw\" bulk action\nexport async function deleteReportedMessages(messages: IMessage[], user: IUser): Promise<void> {\n\tconst keepHistory = settings.get<boolean>('Message_KeepHistory');\n\tconst showDeletedStatus = settings.get<boolean>('Message_ShowDeletedStatus');\n\tconst files: string[] = [];\n\tconst messageIds: string[] = [];\n\tfor (const message of messages) {\n\t\tif (message.file) {\n\t\t\tfiles.push(message.file._id);\n\t\t}\n\t\tif (message.files && message.files.length > 0) {\n\t\t\tfiles.concat(message.files.map((file) => file._id));\n\t\t}\n\t\tmessageIds.push(message._id);\n\t}\n\tif (keepHistory) {\n\t\tif (showDeletedStatus) {\n\t\t\tconst cursor = Messages.find({ _id: { $in: messageIds } });\n\n\t\t\tfor await (const doc of cursor) {\n\t\t\t\tawait Messages.cloneAndSaveAsHistoryByRecord(\n\t\t\t\t\tdoc,\n\t\t\t\t\tuser as Required<Pick<IUser, '_id' | 'name'>> & { username: NonNullable<IUser['username']> },\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tawait Messages.setHiddenByIds(messageIds, true);\n\t\t}\n\n\t\tawait Uploads.updateMany({ _id: { $in: files } }, { $set: { _hidden: true } });\n\t} else {\n\t\tif (!showDeletedStatus) {\n\t\t\tawait Messages.deleteMany({ _id: { $in: messageIds } });\n\t\t}\n\t\tawait ReadReceipts.removeByMessageIds(messageIds);\n\n\t\tconst store = FileUpload.getStore('Uploads');\n\t\tawait Promise.all(files.map((file) => store.deleteById(file)));\n\t}\n\tif (showDeletedStatus) {\n\t\tawait Messages.setAsDeletedByIdsAndUser(messageIds, user as any);\n\t}\n\n\tconst transformed = messages.reduce(\n\t\t(acc, { rid, _id }) => {\n\t\t\tif (!acc[rid]) {\n\t\t\t\tacc[rid] = [];\n\t\t\t}\n\t\t\tacc[rid].push(_id);\n\t\t\treturn acc;\n\t\t},\n\t\t{} as Record<string, string[]>,\n\t);\n\n\tObject.entries(transformed).forEach(([rid, messageIds]) => {\n\t\tvoid api.broadcast('notify.deleteMessageBulk', rid, {\n\t\t\trid,\n\t\t\texcludePinned: true,\n\t\t\tignoreDiscussion: true,\n\t\t\tts: { $gt: new Date() },\n\t\t\tusers: [],\n\t\t\tids: messageIds,\n\t\t\tshowDeletedStatus,\n\t\t});\n\t});\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"8e92563e3b0eef4278d72e295d56464d77a6ff66"}
