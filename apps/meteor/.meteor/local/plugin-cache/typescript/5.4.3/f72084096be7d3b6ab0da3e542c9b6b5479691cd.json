{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/2fa/overrideLoginMethod.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/2fa/overrideLoginMethod.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/2fa/overrideLoginMethod.ts","inputSourceMap":{"version":3,"file":"client/lib/2fa/overrideLoginMethod.ts","sourceRoot":"","sources":["client/lib/2fa/overrideLoginMethod.ts"],"names":[],"mappings":"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","sourcesContent":["import { isTotpInvalidError, isTotpMaxAttemptsError, isTotpRequiredError } from './utils';\n\ntype LoginError = globalThis.Error | Meteor.Error | Meteor.TypedError;\n\nexport type LoginCallback = (error: LoginError | undefined, result?: unknown) => void;\n\nexport const overrideLoginMethod = <TArgs extends any[]>(\n\tloginMethod: (...args: [...args: TArgs, cb: LoginCallback]) => void,\n\tloginArgs: TArgs,\n\tcallback: LoginCallback | undefined,\n\tloginMethodTOTP: (...args: [...args: TArgs, code: string, cb: LoginCallback]) => void,\n) => {\n\tloginMethod(...loginArgs, async (error: LoginError | undefined, result?: unknown) => {\n\t\tif (!isTotpRequiredError(error)) {\n\t\t\tcallback?.(error);\n\t\t\treturn;\n\t\t}\n\n\t\tconst { process2faReturn } = await import('./process2faReturn');\n\n\t\tawait process2faReturn({\n\t\t\terror,\n\t\t\tresult,\n\t\t\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n\t\t\toriginalCallback: callback,\n\t\t\tonCode: (code: string) => {\n\t\t\t\tloginMethodTOTP(...loginArgs, code, (error: LoginError | undefined, result?: unknown) => {\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tcallback?.(undefined, result);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isTotpInvalidError(error)) {\n\t\t\t\t\t\tcallback?.(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\n\t\t\t\t\t\tif (isTotpMaxAttemptsError(error)) {\n\t\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tmessage: t('totp-max-attempts'),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t});\n};\n\nexport const handleLogin = <TLoginFunction extends (...args: any[]) => Promise<any>>(\n\tlogin: TLoginFunction,\n\tloginWithTOTP: (...args: [...args: Parameters<TLoginFunction>, code: string]) => ReturnType<TLoginFunction>,\n) => {\n\treturn (...args: [...loginArgs: Parameters<TLoginFunction>, callback?: LoginCallback]) => {\n\t\tconst loginArgs = args.slice(0, -1) as Parameters<TLoginFunction>;\n\t\tconst callback = args.slice(-1)[0] as LoginCallback | undefined;\n\n\t\treturn login(...loginArgs)\n\t\t\t.catch(async (error: LoginError | undefined) => {\n\t\t\t\tif (!isTotpRequiredError(error)) {\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t}\n\n\t\t\t\tconst { process2faAsyncReturn } = await import('./process2faReturn');\n\t\t\t\treturn process2faAsyncReturn({\n\t\t\t\t\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n\t\t\t\t\terror,\n\t\t\t\t\tonCode: (code: string) => loginWithTOTP(...loginArgs, code),\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then((result: unknown) => callback?.(undefined, result))\n\t\t\t.catch((error: LoginError | undefined) => {\n\t\t\t\tif (!isTotpInvalidError(error)) {\n\t\t\t\t\tcallback?.(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t});\n\t\t\t});\n\t};\n};\n\nexport const callLoginMethod = (options: Omit<Accounts.LoginMethodOptions, 'userCallback'>) =>\n\tnew Promise<void>((resolve, reject) => {\n\t\tAccounts.callLoginMethod({\n\t\t\t...options,\n\t\t\tuserCallback: (error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t});\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/2fa/overrideLoginMethod.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/2fa/overrideLoginMethod.ts","inputSourceMap":{"version":3,"file":"client/lib/2fa/overrideLoginMethod.ts","sourceRoot":"","sources":["client/lib/2fa/overrideLoginMethod.ts"],"names":[],"mappings":"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","sourcesContent":["import { isTotpInvalidError, isTotpMaxAttemptsError, isTotpRequiredError } from './utils';\n\ntype LoginError = globalThis.Error | Meteor.Error | Meteor.TypedError;\n\nexport type LoginCallback = (error: LoginError | undefined, result?: unknown) => void;\n\nexport const overrideLoginMethod = <TArgs extends any[]>(\n\tloginMethod: (...args: [...args: TArgs, cb: LoginCallback]) => void,\n\tloginArgs: TArgs,\n\tcallback: LoginCallback | undefined,\n\tloginMethodTOTP: (...args: [...args: TArgs, code: string, cb: LoginCallback]) => void,\n) => {\n\tloginMethod(...loginArgs, async (error: LoginError | undefined, result?: unknown) => {\n\t\tif (!isTotpRequiredError(error)) {\n\t\t\tcallback?.(error);\n\t\t\treturn;\n\t\t}\n\n\t\tconst { process2faReturn } = await import('./process2faReturn');\n\n\t\tawait process2faReturn({\n\t\t\terror,\n\t\t\tresult,\n\t\t\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n\t\t\toriginalCallback: callback,\n\t\t\tonCode: (code: string) => {\n\t\t\t\tloginMethodTOTP(...loginArgs, code, (error: LoginError | undefined, result?: unknown) => {\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tcallback?.(undefined, result);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isTotpInvalidError(error)) {\n\t\t\t\t\t\tcallback?.(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\n\t\t\t\t\t\tif (isTotpMaxAttemptsError(error)) {\n\t\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tmessage: t('totp-max-attempts'),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t});\n};\n\nexport const handleLogin = <TLoginFunction extends (...args: any[]) => Promise<any>>(\n\tlogin: TLoginFunction,\n\tloginWithTOTP: (...args: [...args: Parameters<TLoginFunction>, code: string]) => ReturnType<TLoginFunction>,\n) => {\n\treturn (...args: [...loginArgs: Parameters<TLoginFunction>, callback?: LoginCallback]) => {\n\t\tconst loginArgs = args.slice(0, -1) as Parameters<TLoginFunction>;\n\t\tconst callback = args.slice(-1)[0] as LoginCallback | undefined;\n\n\t\treturn login(...loginArgs)\n\t\t\t.catch(async (error: LoginError | undefined) => {\n\t\t\t\tif (!isTotpRequiredError(error)) {\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t}\n\n\t\t\t\tconst { process2faAsyncReturn } = await import('./process2faReturn');\n\t\t\t\treturn process2faAsyncReturn({\n\t\t\t\t\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n\t\t\t\t\terror,\n\t\t\t\t\tonCode: (code: string) => loginWithTOTP(...loginArgs, code),\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then((result: unknown) => callback?.(undefined, result))\n\t\t\t.catch((error: LoginError | undefined) => {\n\t\t\t\tif (!isTotpInvalidError(error)) {\n\t\t\t\t\tcallback?.(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t});\n\t\t\t});\n\t};\n};\n\nexport const callLoginMethod = (options: Omit<Accounts.LoginMethodOptions, 'userCallback'>) =>\n\tnew Promise<void>((resolve, reject) => {\n\t\tAccounts.callLoginMethod({\n\t\t\t...options,\n\t\t\tuserCallback: (error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t});\n"]}}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  overrideLoginMethod: () => overrideLoginMethod,\n  handleLogin: () => handleLogin,\n  callLoginMethod: () => callLoginMethod\n});\nlet isTotpInvalidError, isTotpMaxAttemptsError, isTotpRequiredError;\nmodule.link(\"./utils\", {\n  isTotpInvalidError(v) {\n    isTotpInvalidError = v;\n  },\n  isTotpMaxAttemptsError(v) {\n    isTotpMaxAttemptsError = v;\n  },\n  isTotpRequiredError(v) {\n    isTotpRequiredError = v;\n  }\n}, 0);\nconst overrideLoginMethod = (loginMethod, loginArgs, callback, loginMethodTOTP) => {\n  loginMethod(...loginArgs, async (error, result) => {\n    if (!isTotpRequiredError(error)) {\n      callback === null || callback === void 0 ? void 0 : callback(error);\n      return;\n    }\n    const {\n      process2faReturn\n    } = await module.dynamicImport('./process2faReturn');\n    await process2faReturn({\n      error,\n      result,\n      emailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n      originalCallback: callback,\n      onCode: code => {\n        loginMethodTOTP(...loginArgs, code, (error, result) => {\n          if (!error) {\n            callback === null || callback === void 0 ? void 0 : callback(undefined, result);\n            return;\n          }\n          if (isTotpInvalidError(error)) {\n            callback === null || callback === void 0 ? void 0 : callback(error);\n            return;\n          }\n          Promise.all([module.dynamicImport('../../../app/utils/lib/i18n'), module.dynamicImport('../toast')]).then(_ref => {\n            let [{\n              t\n            }, {\n              dispatchToastMessage\n            }] = _ref;\n            if (isTotpMaxAttemptsError(error)) {\n              dispatchToastMessage({\n                type: 'error',\n                message: t('totp-max-attempts')\n              });\n              callback === null || callback === void 0 ? void 0 : callback(undefined);\n              return;\n            }\n            dispatchToastMessage({\n              type: 'error',\n              message: t('Invalid_two_factor_code')\n            });\n            callback === null || callback === void 0 ? void 0 : callback(undefined);\n          });\n        });\n      }\n    });\n  });\n};\nconst handleLogin = (login, loginWithTOTP) => {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const loginArgs = args.slice(0, -1);\n    const callback = args.slice(-1)[0];\n    return login(...loginArgs).catch(async error => {\n      if (!isTotpRequiredError(error)) {\n        return Promise.reject(error);\n      }\n      const {\n        process2faAsyncReturn\n      } = await module.dynamicImport('./process2faReturn');\n      return process2faAsyncReturn({\n        emailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n        error,\n        onCode: code => loginWithTOTP(...loginArgs, code)\n      });\n    }).then(result => callback === null || callback === void 0 ? void 0 : callback(undefined, result)).catch(error => {\n      if (!isTotpInvalidError(error)) {\n        callback === null || callback === void 0 ? void 0 : callback(error);\n        return;\n      }\n      Promise.all([module.dynamicImport('../../../app/utils/lib/i18n'), module.dynamicImport('../toast')]).then(_ref2 => {\n        let [{\n          t\n        }, {\n          dispatchToastMessage\n        }] = _ref2;\n        dispatchToastMessage({\n          type: 'error',\n          message: t('Invalid_two_factor_code')\n        });\n        callback === null || callback === void 0 ? void 0 : callback(undefined);\n      });\n    });\n  };\n};\nconst callLoginMethod = options => new Promise((resolve, reject) => {\n  Accounts.callLoginMethod(_objectSpread(_objectSpread({}, options), {}, {\n    userCallback: error => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve();\n      }\n    }\n  }));\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","overrideLoginMethod","handleLogin","callLoginMethod","isTotpInvalidError","isTotpMaxAttemptsError","isTotpRequiredError","loginMethod","loginArgs","callback","loginMethodTOTP","error","result","process2faReturn","dynamicImport","emailOrUsername","undefined","originalCallback","onCode","code","Promise","all","then","_ref","t","dispatchToastMessage","type","message","login","loginWithTOTP","_len","arguments","length","args","Array","_key","slice","catch","reject","process2faAsyncReturn","_ref2","options","resolve","Accounts","userCallback"],"sources":["client/lib/2fa/overrideLoginMethod.ts"],"sourcesContent":["import { isTotpInvalidError, isTotpMaxAttemptsError, isTotpRequiredError } from './utils';\n\ntype LoginError = globalThis.Error | Meteor.Error | Meteor.TypedError;\n\nexport type LoginCallback = (error: LoginError | undefined, result?: unknown) => void;\n\nexport const overrideLoginMethod = <TArgs extends any[]>(\n\tloginMethod: (...args: [...args: TArgs, cb: LoginCallback]) => void,\n\tloginArgs: TArgs,\n\tcallback: LoginCallback | undefined,\n\tloginMethodTOTP: (...args: [...args: TArgs, code: string, cb: LoginCallback]) => void,\n) => {\n\tloginMethod(...loginArgs, async (error: LoginError | undefined, result?: unknown) => {\n\t\tif (!isTotpRequiredError(error)) {\n\t\t\tcallback?.(error);\n\t\t\treturn;\n\t\t}\n\n\t\tconst { process2faReturn } = await import('./process2faReturn');\n\n\t\tawait process2faReturn({\n\t\t\terror,\n\t\t\tresult,\n\t\t\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n\t\t\toriginalCallback: callback,\n\t\t\tonCode: (code: string) => {\n\t\t\t\tloginMethodTOTP(...loginArgs, code, (error: LoginError | undefined, result?: unknown) => {\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tcallback?.(undefined, result);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isTotpInvalidError(error)) {\n\t\t\t\t\t\tcallback?.(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\n\t\t\t\t\t\tif (isTotpMaxAttemptsError(error)) {\n\t\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\tmessage: t('totp-max-attempts'),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t});\n};\n\nexport const handleLogin = <TLoginFunction extends (...args: any[]) => Promise<any>>(\n\tlogin: TLoginFunction,\n\tloginWithTOTP: (...args: [...args: Parameters<TLoginFunction>, code: string]) => ReturnType<TLoginFunction>,\n) => {\n\treturn (...args: [...loginArgs: Parameters<TLoginFunction>, callback?: LoginCallback]) => {\n\t\tconst loginArgs = args.slice(0, -1) as Parameters<TLoginFunction>;\n\t\tconst callback = args.slice(-1)[0] as LoginCallback | undefined;\n\n\t\treturn login(...loginArgs)\n\t\t\t.catch(async (error: LoginError | undefined) => {\n\t\t\t\tif (!isTotpRequiredError(error)) {\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t}\n\n\t\t\t\tconst { process2faAsyncReturn } = await import('./process2faReturn');\n\t\t\t\treturn process2faAsyncReturn({\n\t\t\t\t\temailOrUsername: typeof loginArgs[0] === 'string' ? loginArgs[0] : undefined,\n\t\t\t\t\terror,\n\t\t\t\t\tonCode: (code: string) => loginWithTOTP(...loginArgs, code),\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then((result: unknown) => callback?.(undefined, result))\n\t\t\t.catch((error: LoginError | undefined) => {\n\t\t\t\tif (!isTotpInvalidError(error)) {\n\t\t\t\t\tcallback?.(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tPromise.all([import('../../../app/utils/lib/i18n'), import('../toast')]).then(([{ t }, { dispatchToastMessage }]) => {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\tcallback?.(undefined);\n\t\t\t\t});\n\t\t\t});\n\t};\n};\n\nexport const callLoginMethod = (options: Omit<Accounts.LoginMethodOptions, 'userCallback'>) =>\n\tnew Promise<void>((resolve, reject) => {\n\t\tAccounts.callLoginMethod({\n\t\t\t...options,\n\t\t\tuserCallback: (error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t});\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"f72084096be7d3b6ab0da3e542c9b6b5479691cd"}
