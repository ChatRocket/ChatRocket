{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/lib/sla.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/api/lib/sla.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/lib/sla.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/lib/sla.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/lib/sla.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,iCAAiC,EAAE,MAAM,qBAAqB,CAAC;AAExE,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAG3D,OAAO,EACN,yBAAyB,EACzB,qBAAqB,EACrB,iBAAiB,EACjB,qBAAqB,EACrB,oBAAoB,GACpB,MAAM,qBAAqB,CAAC;AAW7B,MAAM,CAAC,KAAK,UAAU,OAAO,CAAC,EAC7B,IAAI,EACJ,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GACpB;IACf,MAAM,KAAK,GAAG;QACb,GAAG,CAAC,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;KAC3H,CAAC;IAEF,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,iCAAiC,CAAC,aAAa,CAAC,KAAK,EAAE;QAC3F,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE;QACzB,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,KAAK;KACZ,CAAC,CAAC;IAEH,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;IAEvE,OAAO;QACN,GAAG;QACH,KAAK,EAAE,GAAG,CAAC,MAAM;QACjB,MAAM;QACN,KAAK;KACL,CAAC;AACH,CAAC;AAED,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,EACjC,MAAc,EACd,IAAwD,EACxD,GAAkF,EACjF,EAAE;IACH,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAqB,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,oBAAoB,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,yBAAyB,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1I,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,EAAE,MAAc,EAAE,IAAwD,EAAE,EAAE;IAC/G,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC,EAAE,iBAAiB,CAAC,MAAM,CAAC,EAAE,yBAAyB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACxH,CAAC,CAAC","sourcesContent":["import type { IOmnichannelServiceLevelAgreements, IUser } from '@rocket.chat/core-typings';\nimport { OmnichannelServiceLevelAgreements } from '@rocket.chat/models';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { FindOptions } from 'mongodb';\n\nimport {\n\taddSlaChangeHistoryToRoom,\n\tremoveInquiryQueueSla,\n\tremoveSlaFromRoom,\n\tupdateInquiryQueueSla,\n\tupdateRoomSlaWeights,\n} from '../../lib/SlaHelper';\n\ntype FindSLAParams = {\n\ttext?: string;\n\tpagination: {\n\t\toffset: number;\n\t\tcount: number;\n\t\tsort: FindOptions<IOmnichannelServiceLevelAgreements>['sort'];\n\t};\n};\n\nexport async function findSLA({\n\ttext,\n\tpagination: { offset, count, sort },\n}: FindSLAParams): Promise<PaginatedResult<{ sla: IOmnichannelServiceLevelAgreements[] }>> {\n\tconst query = {\n\t\t...(text && { $or: [{ name: new RegExp(escapeRegExp(text), 'i') }, { description: new RegExp(escapeRegExp(text), 'i') }] }),\n\t};\n\n\tconst { cursor, totalCount } = await OmnichannelServiceLevelAgreements.findPaginated(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [sla, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tsla,\n\t\tcount: sla.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport const updateRoomSLA = async (\n\troomId: string,\n\tuser: Required<Pick<IUser, '_id' | 'username' | 'name'>>,\n\tsla: Pick<IOmnichannelServiceLevelAgreements, '_id' | 'name' | 'dueTimeInMinutes'>,\n) => {\n\tawait Promise.all([updateInquiryQueueSla(roomId, sla), updateRoomSlaWeights(roomId, sla), addSlaChangeHistoryToRoom(roomId, user, sla)]);\n};\n\nexport const removeRoomSLA = async (roomId: string, user: Required<Pick<IUser, '_id' | 'username' | 'name'>>) => {\n\tawait Promise.all([removeInquiryQueueSla(roomId), removeSlaFromRoom(roomId), addSlaChangeHistoryToRoom(roomId, user)]);\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/api/lib/sla.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/api/lib/sla.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/api/lib/sla.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/api/lib/sla.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,iCAAiC,EAAE,MAAM,qBAAqB,CAAC;AAExE,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAG3D,OAAO,EACN,yBAAyB,EACzB,qBAAqB,EACrB,iBAAiB,EACjB,qBAAqB,EACrB,oBAAoB,GACpB,MAAM,qBAAqB,CAAC;AAW7B,MAAM,CAAC,KAAK,UAAU,OAAO,CAAC,EAC7B,IAAI,EACJ,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GACpB;IACf,MAAM,KAAK,GAAG;QACb,GAAG,CAAC,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;KAC3H,CAAC;IAEF,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,iCAAiC,CAAC,aAAa,CAAC,KAAK,EAAE;QAC3F,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE;QACzB,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,KAAK;KACZ,CAAC,CAAC;IAEH,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;IAEvE,OAAO;QACN,GAAG;QACH,KAAK,EAAE,GAAG,CAAC,MAAM;QACjB,MAAM;QACN,KAAK;KACL,CAAC;AACH,CAAC;AAED,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,EACjC,MAAc,EACd,IAAwD,EACxD,GAAkF,EACjF,EAAE;IACH,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAqB,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,oBAAoB,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,yBAAyB,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1I,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,KAAK,EAAE,MAAc,EAAE,IAAwD,EAAE,EAAE;IAC/G,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC,EAAE,iBAAiB,CAAC,MAAM,CAAC,EAAE,yBAAyB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACxH,CAAC,CAAC","sourcesContent":["import type { IOmnichannelServiceLevelAgreements, IUser } from '@rocket.chat/core-typings';\nimport { OmnichannelServiceLevelAgreements } from '@rocket.chat/models';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { FindOptions } from 'mongodb';\n\nimport {\n\taddSlaChangeHistoryToRoom,\n\tremoveInquiryQueueSla,\n\tremoveSlaFromRoom,\n\tupdateInquiryQueueSla,\n\tupdateRoomSlaWeights,\n} from '../../lib/SlaHelper';\n\ntype FindSLAParams = {\n\ttext?: string;\n\tpagination: {\n\t\toffset: number;\n\t\tcount: number;\n\t\tsort: FindOptions<IOmnichannelServiceLevelAgreements>['sort'];\n\t};\n};\n\nexport async function findSLA({\n\ttext,\n\tpagination: { offset, count, sort },\n}: FindSLAParams): Promise<PaginatedResult<{ sla: IOmnichannelServiceLevelAgreements[] }>> {\n\tconst query = {\n\t\t...(text && { $or: [{ name: new RegExp(escapeRegExp(text), 'i') }, { description: new RegExp(escapeRegExp(text), 'i') }] }),\n\t};\n\n\tconst { cursor, totalCount } = await OmnichannelServiceLevelAgreements.findPaginated(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [sla, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tsla,\n\t\tcount: sla.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport const updateRoomSLA = async (\n\troomId: string,\n\tuser: Required<Pick<IUser, '_id' | 'username' | 'name'>>,\n\tsla: Pick<IOmnichannelServiceLevelAgreements, '_id' | 'name' | 'dueTimeInMinutes'>,\n) => {\n\tawait Promise.all([updateInquiryQueueSla(roomId, sla), updateRoomSlaWeights(roomId, sla), addSlaChangeHistoryToRoom(roomId, user, sla)]);\n};\n\nexport const removeRoomSLA = async (roomId: string, user: Required<Pick<IUser, '_id' | 'username' | 'name'>>) => {\n\tawait Promise.all([removeInquiryQueueSla(roomId), removeSlaFromRoom(roomId), addSlaChangeHistoryToRoom(roomId, user)]);\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      findSLA: () => findSLA,\n      updateRoomSLA: () => updateRoomSLA,\n      removeRoomSLA: () => removeRoomSLA\n    });\n    let OmnichannelServiceLevelAgreements;\n    module.link(\"@rocket.chat/models\", {\n      OmnichannelServiceLevelAgreements(v) {\n        OmnichannelServiceLevelAgreements = v;\n      }\n    }, 0);\n    let escapeRegExp;\n    module.link(\"@rocket.chat/string-helpers\", {\n      escapeRegExp(v) {\n        escapeRegExp = v;\n      }\n    }, 1);\n    let addSlaChangeHistoryToRoom, removeInquiryQueueSla, removeSlaFromRoom, updateInquiryQueueSla, updateRoomSlaWeights;\n    module.link(\"../../lib/SlaHelper\", {\n      addSlaChangeHistoryToRoom(v) {\n        addSlaChangeHistoryToRoom = v;\n      },\n      removeInquiryQueueSla(v) {\n        removeInquiryQueueSla = v;\n      },\n      removeSlaFromRoom(v) {\n        removeSlaFromRoom = v;\n      },\n      updateInquiryQueueSla(v) {\n        updateInquiryQueueSla = v;\n      },\n      updateRoomSlaWeights(v) {\n        updateRoomSlaWeights = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    async function findSLA(_ref) {\n      let {\n        text,\n        pagination: {\n          offset,\n          count,\n          sort\n        }\n      } = _ref;\n      const query = _objectSpread({}, text && {\n        $or: [{\n          name: new RegExp(escapeRegExp(text), 'i')\n        }, {\n          description: new RegExp(escapeRegExp(text), 'i')\n        }]\n      });\n      const {\n        cursor,\n        totalCount\n      } = await OmnichannelServiceLevelAgreements.findPaginated(query, {\n        sort: sort || {\n          name: 1\n        },\n        skip: offset,\n        limit: count\n      });\n      const [sla, total] = await Promise.all([cursor.toArray(), totalCount]);\n      return {\n        sla,\n        count: sla.length,\n        offset,\n        total\n      };\n    }\n    const updateRoomSLA = async (roomId, user, sla) => {\n      await Promise.all([updateInquiryQueueSla(roomId, sla), updateRoomSlaWeights(roomId, sla), addSlaChangeHistoryToRoom(roomId, user, sla)]);\n    };\n    const removeRoomSLA = async (roomId, user) => {\n      await Promise.all([removeInquiryQueueSla(roomId), removeSlaFromRoom(roomId), addSlaChangeHistoryToRoom(roomId, user)]);\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","findSLA","updateRoomSLA","removeRoomSLA","OmnichannelServiceLevelAgreements","escapeRegExp","addSlaChangeHistoryToRoom","removeInquiryQueueSla","removeSlaFromRoom","updateInquiryQueueSla","updateRoomSlaWeights","__reifyWaitForDeps__","_ref","text","pagination","offset","count","sort","query","$or","name","RegExp","description","cursor","totalCount","findPaginated","skip","limit","sla","total","Promise","all","toArray","length","roomId","user","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/api/lib/sla.ts"],"sourcesContent":["import type { IOmnichannelServiceLevelAgreements, IUser } from '@rocket.chat/core-typings';\nimport { OmnichannelServiceLevelAgreements } from '@rocket.chat/models';\nimport type { PaginatedResult } from '@rocket.chat/rest-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { FindOptions } from 'mongodb';\n\nimport {\n\taddSlaChangeHistoryToRoom,\n\tremoveInquiryQueueSla,\n\tremoveSlaFromRoom,\n\tupdateInquiryQueueSla,\n\tupdateRoomSlaWeights,\n} from '../../lib/SlaHelper';\n\ntype FindSLAParams = {\n\ttext?: string;\n\tpagination: {\n\t\toffset: number;\n\t\tcount: number;\n\t\tsort: FindOptions<IOmnichannelServiceLevelAgreements>['sort'];\n\t};\n};\n\nexport async function findSLA({\n\ttext,\n\tpagination: { offset, count, sort },\n}: FindSLAParams): Promise<PaginatedResult<{ sla: IOmnichannelServiceLevelAgreements[] }>> {\n\tconst query = {\n\t\t...(text && { $or: [{ name: new RegExp(escapeRegExp(text), 'i') }, { description: new RegExp(escapeRegExp(text), 'i') }] }),\n\t};\n\n\tconst { cursor, totalCount } = await OmnichannelServiceLevelAgreements.findPaginated(query, {\n\t\tsort: sort || { name: 1 },\n\t\tskip: offset,\n\t\tlimit: count,\n\t});\n\n\tconst [sla, total] = await Promise.all([cursor.toArray(), totalCount]);\n\n\treturn {\n\t\tsla,\n\t\tcount: sla.length,\n\t\toffset,\n\t\ttotal,\n\t};\n}\n\nexport const updateRoomSLA = async (\n\troomId: string,\n\tuser: Required<Pick<IUser, '_id' | 'username' | 'name'>>,\n\tsla: Pick<IOmnichannelServiceLevelAgreements, '_id' | 'name' | 'dueTimeInMinutes'>,\n) => {\n\tawait Promise.all([updateInquiryQueueSla(roomId, sla), updateRoomSlaWeights(roomId, sla), addSlaChangeHistoryToRoom(roomId, user, sla)]);\n};\n\nexport const removeRoomSLA = async (roomId: string, user: Required<Pick<IUser, '_id' | 'username' | 'name'>>) => {\n\tawait Promise.all([removeInquiryQueueSla(roomId), removeSlaFromRoom(roomId), addSlaChangeHistoryToRoom(roomId, user)]);\n};\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"d7a9d887a80c84356d098d3e3b629b201d26acd2"}
