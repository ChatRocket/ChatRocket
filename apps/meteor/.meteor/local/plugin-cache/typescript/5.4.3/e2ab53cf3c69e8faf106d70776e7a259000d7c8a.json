{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Roles.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/models/raw/Roles.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Roles.ts","inputSourceMap":{"version":3,"file":"server/models/raw/Roles.ts","sourceRoot":"","sources":["server/models/raw/Roles.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IRole, IRoom, IUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IRolesModel } from '@rocket.chat/model-typings';\nimport { Subscriptions, Users } from '@rocket.chat/models';\nimport type { Collection, FindCursor, Db, Filter, FindOptions, Document, CountDocumentsOptions } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { notifyOnSubscriptionChangedByRoomIdAndUserId } from '../../../app/lib/server/lib/notifyListener';\n\nexport class RolesRaw extends BaseRaw<IRole> implements IRolesModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IRole>>) {\n\t\tsuper(db, 'roles', trash);\n\t}\n\n\tfindByUpdatedDate(updatedAfterDate: Date, options?: FindOptions<IRole>): FindCursor<IRole> {\n\t\tconst query = {\n\t\t\t_updatedAt: { $gte: new Date(updatedAfterDate) },\n\t\t};\n\n\t\treturn options ? this.find(query, options) : this.find(query);\n\t}\n\n\tasync addUserRoles(userId: IUser['_id'], roles: IRole['_id'][], scope?: IRoom['_id']): Promise<boolean> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.addUserRoles method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tif (!Array.isArray(roles)) {\n\t\t\troles = [roles];\n\t\t\tprocess.env.NODE_ENV === 'development' && console.warn('[WARN] RolesRaw.addUserRoles: roles should be an array');\n\t\t}\n\n\t\tfor await (const roleId of roles) {\n\t\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\t\tif (!role) {\n\t\t\t\tprocess.env.NODE_ENV === 'development' && console.warn(`[WARN] RolesRaw.addUserRoles: role: ${roleId} not found`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (role.scope === 'Subscriptions' && scope) {\n\t\t\t\t// TODO remove dependency from other models - this logic should be inside a function/service\n\t\t\t\tconst addRolesResponse = await Subscriptions.addRolesByUserId(userId, [role._id], scope);\n\t\t\t\tif (addRolesResponse.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(scope, userId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tawait Users.addRolesByUserId(userId, [role._id]);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync isUserInRoles(userId: IUser['_id'], roles: IRole['_id'][], scope?: IRoom['_id']): Promise<boolean> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.isUserInRoles method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tfor await (const roleId of roles) {\n\t\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\t\tif (!role) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (role.scope) {\n\t\t\t\tcase 'Subscriptions':\n\t\t\t\t\tif (await Subscriptions.isUserInRole(userId, roleId, scope)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Users':\n\t\t\t\tdefault:\n\t\t\t\t\tif (await Users.isUserInRole(userId, roleId)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync removeUserRoles(userId: IUser['_id'], roles: IRole['_id'][], scope?: IRoom['_id']): Promise<boolean> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.removeUserRoles method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tfor await (const roleId of roles) {\n\t\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\t\tif (!role) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (role.scope === 'Subscriptions' && scope) {\n\t\t\t\tconst removeRolesResponse = await Subscriptions.removeRolesByUserId(userId, [roleId], scope);\n\t\t\t\tif (removeRolesResponse.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(scope, userId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tawait Users.removeRolesByUserId(userId, [roleId]);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync findOneByIdOrName(_idOrName: IRole['_id'] | IRole['name'], options?: undefined): Promise<IRole | null>;\n\n\tasync findOneByIdOrName(_idOrName: IRole['_id'] | IRole['name'], options: FindOptions<IRole>): Promise<IRole | null>;\n\n\tasync findOneByIdOrName<P extends Document>(\n\t\t_idOrName: IRole['_id'] | IRole['name'],\n\t\toptions: FindOptions<P extends IRole ? IRole : P>,\n\t): Promise<P | null>;\n\n\tfindOneByIdOrName<P>(_idOrName: IRole['_id'] | IRole['name'], options?: any): Promise<IRole | P | null> {\n\t\tconst query: Filter<IRole> = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tasync findOneByName<P = IRole>(name: IRole['name'], options?: any): Promise<IRole | P | null> {\n\t\tconst query: Filter<IRole> = {\n\t\t\tname,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindInIds<P>(ids: IRole['_id'][], options?: FindOptions<IRole>): P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole> {\n\t\tconst query: Filter<IRole> = {\n\t\t\t_id: {\n\t\t\t\t$in: ids,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options || {}) as P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole>;\n\t}\n\n\tfindInIdsOrNames<P>(\n\t\t_idsOrNames: IRole['_id'][] | IRole['name'][],\n\t\toptions?: FindOptions<IRole>,\n\t): P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole> {\n\t\tconst query: Filter<IRole> = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: {\n\t\t\t\t\t\t$in: _idsOrNames,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: {\n\t\t\t\t\t\t$in: _idsOrNames,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.find(query, options || {}) as P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole>;\n\t}\n\n\tfindAllExceptIds<P>(ids: IRole['_id'][], options?: FindOptions<IRole>): P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole> {\n\t\tconst query: Filter<IRole> = {\n\t\t\t_id: {\n\t\t\t\t$nin: ids,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options || {}) as P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole>;\n\t}\n\n\tfindByScope(scope: IRole['scope'], options?: FindOptions<IRole>): FindCursor<IRole> {\n\t\tconst query = {\n\t\t\tscope,\n\t\t};\n\n\t\treturn this.find(query, options || {});\n\t}\n\n\tcountByScope(scope: IRole['scope'], options?: CountDocumentsOptions): Promise<number> {\n\t\tconst query = {\n\t\t\tscope,\n\t\t};\n\n\t\treturn this.countDocuments(query, options);\n\t}\n\n\tfindCustomRoles(options?: FindOptions<IRole>): FindCursor<IRole> {\n\t\tconst query: Filter<IRole> = {\n\t\t\tprotected: false,\n\t\t};\n\n\t\treturn this.find(query, options || {});\n\t}\n\n\tcountCustomRoles(options?: CountDocumentsOptions): Promise<number> {\n\t\tconst query: Filter<IRole> = {\n\t\t\tprotected: false,\n\t\t};\n\n\t\treturn this.countDocuments(query, options || {});\n\t}\n\n\tasync updateById(\n\t\t_id: IRole['_id'],\n\t\tname: IRole['name'],\n\t\tscope: IRole['scope'],\n\t\tdescription: IRole['description'] = '',\n\t\tmandatory2fa: IRole['mandatory2fa'] = false,\n\t): Promise<IRole> {\n\t\tconst response = await this.findOneAndUpdate(\n\t\t\t{ _id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tname,\n\t\t\t\t\tscope,\n\t\t\t\t\tdescription,\n\t\t\t\t\tmandatory2fa,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true, returnDocument: 'after' },\n\t\t);\n\n\t\tif (!response.value) {\n\t\t\tthrow new Error('Role not found');\n\t\t}\n\n\t\treturn response.value;\n\t}\n\n\tfindUsersInRole(roleId: IRole['_id'], scope?: IRoom['_id']): Promise<FindCursor<IUser>>;\n\n\tfindUsersInRole(roleId: IRole['_id'], scope: IRoom['_id'] | undefined, options: FindOptions<IUser>): Promise<FindCursor<IUser>>;\n\n\tfindUsersInRole<P extends Document>(\n\t\troleId: IRole['_id'],\n\t\tscope: IRoom['_id'] | undefined,\n\t\toptions: FindOptions<P extends IUser ? IUser : P>,\n\t): Promise<FindCursor<P extends IUser ? IUser : P>>;\n\n\t/** @deprecated function getUsersInRole should be used instead */\n\tasync findUsersInRole<P>(\n\t\troleId: IRole['_id'],\n\t\tscope: IRoom['_id'] | undefined,\n\t\toptions?: any | undefined,\n\t): Promise<FindCursor<IUser | P>> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.findUsersInRole method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\tif (!role) {\n\t\t\tthrow new Error('RolesRaw.findUsersInRole: role not found');\n\t\t}\n\n\t\tswitch (role.scope) {\n\t\t\tcase 'Subscriptions':\n\t\t\t\treturn Subscriptions.findUsersInRoles([role._id], scope, options);\n\t\t\tcase 'Users':\n\t\t\tdefault:\n\t\t\t\treturn Users.findUsersInRoles([role._id], null, options);\n\t\t}\n\t}\n\n\tasync countUsersInRole(roleId: IRole['_id'], scope?: IRoom['_id']): Promise<number> {\n\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\tif (!role) {\n\t\t\tthrow new Error('RolesRaw.countUsersInRole: role not found');\n\t\t}\n\n\t\tswitch (role.scope) {\n\t\t\tcase 'Subscriptions':\n\t\t\t\treturn Subscriptions.countUsersInRoles([role._id], scope);\n\t\t\tcase 'Users':\n\t\t\tdefault:\n\t\t\t\treturn Users.countUsersInRoles([role._id]);\n\t\t}\n\t}\n\n\tasync createWithRandomId(\n\t\tname: IRole['name'],\n\t\tscope: IRole['scope'] = 'Users',\n\t\tdescription = '',\n\t\tprotectedRole = true,\n\t\tmandatory2fa = false,\n\t): Promise<IRole> {\n\t\tconst role = {\n\t\t\tname,\n\t\t\tscope,\n\t\t\tdescription,\n\t\t\tprotected: protectedRole,\n\t\t\tmandatory2fa,\n\t\t};\n\n\t\tconst res = await this.insertOne(role);\n\n\t\treturn {\n\t\t\t_id: res.insertedId,\n\t\t\t...role,\n\t\t};\n\t}\n\n\tasync canAddUserToRole(uid: IUser['_id'], roleId: IRole['_id'], scope?: IRoom['_id']): Promise<boolean> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.canAddUserToRole method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tconst role = await this.findOne({ _id: roleId }, { projection: { scope: 1 } });\n\t\tif (!role) {\n\t\t\treturn false;\n\t\t}\n\n\t\tswitch (role.scope) {\n\t\t\tcase 'Subscriptions':\n\t\t\t\treturn Subscriptions.isUserInRoleScope(uid, scope);\n\t\t\tcase 'Users':\n\t\t\tdefault:\n\t\t\t\treturn Users.isUserInRoleScope(uid);\n\t\t}\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/models/raw/Roles.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/models/raw/Roles.ts","inputSourceMap":{"version":3,"file":"server/models/raw/Roles.ts","sourceRoot":"","sources":["server/models/raw/Roles.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAG3D,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AACpC,OAAO,EAAE,4CAA4C,EAAE,MAAM,4CAA4C,CAAC;AAE1G,MAAM,OAAO,QAAS,SAAQ,OAAc;IAC3C,YAAY,EAAM,EAAE,KAAkD;QACrE,KAAK,CAAC,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,iBAAiB,CAAC,gBAAsB,EAAE,OAA4B;QACrE,MAAM,KAAK,GAAG;YACb,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAE;SAChD,CAAC;QAEF,OAAO,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,MAAoB,EAAE,KAAqB,EAAE,KAAoB;QACnF,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,IAAI,CAAC,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,eAAe,CAAC,EAAE,CAAC;YAChG,MAAM,IAAI,KAAK,CAAC,2EAA2E,CAAC,CAAC;QAC9F,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;YAC3B,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,IAAI,OAAO,CAAC,IAAI,CAAC,wDAAwD,CAAC,CAAC;QAClH,CAAC;QAED,IAAI,KAAK,EAAE,MAAM,MAAM,IAAI,KAAK,EAAE,CAAC;YAClC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAA+B,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAExG,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,IAAI,OAAO,CAAC,IAAI,CAAC,uCAAuC,MAAM,YAAY,CAAC,CAAC;gBAClH,SAAS;YACV,CAAC;YAED,IAAI,IAAI,CAAC,KAAK,KAAK,eAAe,IAAI,KAAK,EAAE,CAAC;gBAC7C,4FAA4F;gBAC5F,MAAM,gBAAgB,GAAG,MAAM,aAAa,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;gBACzF,IAAI,gBAAgB,CAAC,aAAa,EAAE,CAAC;oBACpC,KAAK,4CAA4C,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBAClE,CAAC;YACF,CAAC;iBAAM,CAAC;gBACP,MAAM,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAClD,CAAC;QACF,CAAC;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,MAAoB,EAAE,KAAqB,EAAE,KAAoB;QACpF,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,IAAI,CAAC,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,eAAe,CAAC,EAAE,CAAC;YAChG,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAC;QAC/F,CAAC;QAED,IAAI,KAAK,EAAE,MAAM,MAAM,IAAI,KAAK,EAAE,CAAC;YAClC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAA+B,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAExG,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,SAAS;YACV,CAAC;YAED,QAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;gBACpB,KAAK,eAAe;oBACnB,IAAI,MAAM,aAAa,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC;wBAC7D,OAAO,IAAI,CAAC;oBACb,CAAC;oBACD,MAAM;gBACP,KAAK,OAAO,CAAC;gBACb;oBACC,IAAI,MAAM,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC;wBAC9C,OAAO,IAAI,CAAC;oBACb,CAAC;YACH,CAAC;QACF,CAAC;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,MAAoB,EAAE,KAAqB,EAAE,KAAoB;QACtF,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,IAAI,CAAC,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,eAAe,CAAC,EAAE,CAAC;YAChG,MAAM,IAAI,KAAK,CAAC,8EAA8E,CAAC,CAAC;QACjG,CAAC;QAED,IAAI,KAAK,EAAE,MAAM,MAAM,IAAI,KAAK,EAAE,CAAC;YAClC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAA+B,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAExG,IAAI,CAAC,IAAI,EAAE,CAAC;gBACX,SAAS;YACV,CAAC;YAED,IAAI,IAAI,CAAC,KAAK,KAAK,eAAe,IAAI,KAAK,EAAE,CAAC;gBAC7C,MAAM,mBAAmB,GAAG,MAAM,aAAa,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;gBAC7F,IAAI,mBAAmB,CAAC,aAAa,EAAE,CAAC;oBACvC,KAAK,4CAA4C,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBAClE,CAAC;YACF,CAAC;iBAAM,CAAC;gBACP,MAAM,KAAK,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACnD,CAAC;QACF,CAAC;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAWD,iBAAiB,CAAI,SAAuC,EAAE,OAAa;QAC1E,MAAM,KAAK,GAAkB;YAC5B,GAAG,EAAE;gBACJ;oBACC,GAAG,EAAE,SAAS;iBACd;gBACD;oBACC,IAAI,EAAE,SAAS;iBACf;aACD;SACD,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,KAAK,CAAC,aAAa,CAAY,IAAmB,EAAE,OAAa;QAChE,MAAM,KAAK,GAAkB;YAC5B,IAAI;SACJ,CAAC;QAEF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,SAAS,CAAI,GAAmB,EAAE,OAA4B;QAC7D,MAAM,KAAK,GAAkB;YAC5B,GAAG,EAAE;gBACJ,GAAG,EAAE,GAAG;aACR;SACD,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,CAAqE,CAAC;IAC5G,CAAC;IAED,gBAAgB,CACf,WAA6C,EAC7C,OAA4B;QAE5B,MAAM,KAAK,GAAkB;YAC5B,GAAG,EAAE;gBACJ;oBACC,GAAG,EAAE;wBACJ,GAAG,EAAE,WAAW;qBAChB;iBACD;gBACD;oBACC,IAAI,EAAE;wBACL,GAAG,EAAE,WAAW;qBAChB;iBACD;aACD;SACD,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,CAAqE,CAAC;IAC5G,CAAC;IAED,gBAAgB,CAAI,GAAmB,EAAE,OAA4B;QACpE,MAAM,KAAK,GAAkB;YAC5B,GAAG,EAAE;gBACJ,IAAI,EAAE,GAAG;aACT;SACD,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,CAAqE,CAAC;IAC5G,CAAC;IAED,WAAW,CAAC,KAAqB,EAAE,OAA4B;QAC9D,MAAM,KAAK,GAAG;YACb,KAAK;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC;IACxC,CAAC;IAED,YAAY,CAAC,KAAqB,EAAE,OAA+B;QAClE,MAAM,KAAK,GAAG;YACb,KAAK;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED,eAAe,CAAC,OAA4B;QAC3C,MAAM,KAAK,GAAkB;YAC5B,SAAS,EAAE,KAAK;SAChB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC;IACxC,CAAC;IAED,gBAAgB,CAAC,OAA+B;QAC/C,MAAM,KAAK,GAAkB;YAC5B,SAAS,EAAE,KAAK;SAChB,CAAC;QAEF,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,KAAK,CAAC,UAAU,CACf,GAAiB,EACjB,IAAmB,EACnB,KAAqB,EACrB,cAAoC,EAAE,EACtC,eAAsC,KAAK;QAE3C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAC3C,EAAE,GAAG,EAAE,EACP;YACC,IAAI,EAAE;gBACL,IAAI;gBACJ,KAAK;gBACL,WAAW;gBACX,YAAY;aACZ;SACD,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,CACzC,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACnC,CAAC;QAED,OAAO,QAAQ,CAAC,KAAK,CAAC;IACvB,CAAC;IAYD,iEAAiE;IACjE,KAAK,CAAC,eAAe,CACpB,MAAoB,EACpB,KAA+B,EAC/B,OAAyB;QAEzB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,IAAI,CAAC,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,eAAe,CAAC,EAAE,CAAC;YAChG,MAAM,IAAI,KAAK,CAAC,8EAA8E,CAAC,CAAC;QACjG,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAA+B,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAExG,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;QAC7D,CAAC;QAED,QAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;YACpB,KAAK,eAAe;gBACnB,OAAO,aAAa,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YACnE,KAAK,OAAO,CAAC;YACb;gBACC,OAAO,KAAK,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC3D,CAAC;IACF,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,MAAoB,EAAE,KAAoB;QAChE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAA+B,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAExG,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;QAC9D,CAAC;QAED,QAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;YACpB,KAAK,eAAe;gBACnB,OAAO,aAAa,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;YAC3D,KAAK,OAAO,CAAC;YACb;gBACC,OAAO,KAAK,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7C,CAAC;IACF,CAAC;IAED,KAAK,CAAC,kBAAkB,CACvB,IAAmB,EACnB,QAAwB,OAAO,EAC/B,WAAW,GAAG,EAAE,EAChB,aAAa,GAAG,IAAI,EACpB,YAAY,GAAG,KAAK;QAEpB,MAAM,IAAI,GAAG;YACZ,IAAI;YACJ,KAAK;YACL,WAAW;YACX,SAAS,EAAE,aAAa;YACxB,YAAY;SACZ,CAAC;QAEF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAEvC,OAAO;YACN,GAAG,EAAE,GAAG,CAAC,UAAU;YACnB,GAAG,IAAI;SACP,CAAC;IACH,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,GAAiB,EAAE,MAAoB,EAAE,KAAoB;QACnF,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa,IAAI,CAAC,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,eAAe,CAAC,EAAE,CAAC;YAChG,MAAM,IAAI,KAAK,CAAC,+EAA+E,CAAC,CAAC;QAClG,CAAC;QAED,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC/E,IAAI,CAAC,IAAI,EAAE,CAAC;YACX,OAAO,KAAK,CAAC;QACd,CAAC;QAED,QAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;YACpB,KAAK,eAAe;gBACnB,OAAO,aAAa,CAAC,iBAAiB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YACpD,KAAK,OAAO,CAAC;YACb;gBACC,OAAO,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QACtC,CAAC;IACF,CAAC;CACD","sourcesContent":["import type { IRole, IRoom, IUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IRolesModel } from '@rocket.chat/model-typings';\nimport { Subscriptions, Users } from '@rocket.chat/models';\nimport type { Collection, FindCursor, Db, Filter, FindOptions, Document, CountDocumentsOptions } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { notifyOnSubscriptionChangedByRoomIdAndUserId } from '../../../app/lib/server/lib/notifyListener';\n\nexport class RolesRaw extends BaseRaw<IRole> implements IRolesModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IRole>>) {\n\t\tsuper(db, 'roles', trash);\n\t}\n\n\tfindByUpdatedDate(updatedAfterDate: Date, options?: FindOptions<IRole>): FindCursor<IRole> {\n\t\tconst query = {\n\t\t\t_updatedAt: { $gte: new Date(updatedAfterDate) },\n\t\t};\n\n\t\treturn options ? this.find(query, options) : this.find(query);\n\t}\n\n\tasync addUserRoles(userId: IUser['_id'], roles: IRole['_id'][], scope?: IRoom['_id']): Promise<boolean> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.addUserRoles method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tif (!Array.isArray(roles)) {\n\t\t\troles = [roles];\n\t\t\tprocess.env.NODE_ENV === 'development' && console.warn('[WARN] RolesRaw.addUserRoles: roles should be an array');\n\t\t}\n\n\t\tfor await (const roleId of roles) {\n\t\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\t\tif (!role) {\n\t\t\t\tprocess.env.NODE_ENV === 'development' && console.warn(`[WARN] RolesRaw.addUserRoles: role: ${roleId} not found`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (role.scope === 'Subscriptions' && scope) {\n\t\t\t\t// TODO remove dependency from other models - this logic should be inside a function/service\n\t\t\t\tconst addRolesResponse = await Subscriptions.addRolesByUserId(userId, [role._id], scope);\n\t\t\t\tif (addRolesResponse.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(scope, userId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tawait Users.addRolesByUserId(userId, [role._id]);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync isUserInRoles(userId: IUser['_id'], roles: IRole['_id'][], scope?: IRoom['_id']): Promise<boolean> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.isUserInRoles method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tfor await (const roleId of roles) {\n\t\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\t\tif (!role) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (role.scope) {\n\t\t\t\tcase 'Subscriptions':\n\t\t\t\t\tif (await Subscriptions.isUserInRole(userId, roleId, scope)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Users':\n\t\t\t\tdefault:\n\t\t\t\t\tif (await Users.isUserInRole(userId, roleId)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync removeUserRoles(userId: IUser['_id'], roles: IRole['_id'][], scope?: IRoom['_id']): Promise<boolean> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.removeUserRoles method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tfor await (const roleId of roles) {\n\t\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\t\tif (!role) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (role.scope === 'Subscriptions' && scope) {\n\t\t\t\tconst removeRolesResponse = await Subscriptions.removeRolesByUserId(userId, [roleId], scope);\n\t\t\t\tif (removeRolesResponse.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(scope, userId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tawait Users.removeRolesByUserId(userId, [roleId]);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync findOneByIdOrName(_idOrName: IRole['_id'] | IRole['name'], options?: undefined): Promise<IRole | null>;\n\n\tasync findOneByIdOrName(_idOrName: IRole['_id'] | IRole['name'], options: FindOptions<IRole>): Promise<IRole | null>;\n\n\tasync findOneByIdOrName<P extends Document>(\n\t\t_idOrName: IRole['_id'] | IRole['name'],\n\t\toptions: FindOptions<P extends IRole ? IRole : P>,\n\t): Promise<P | null>;\n\n\tfindOneByIdOrName<P>(_idOrName: IRole['_id'] | IRole['name'], options?: any): Promise<IRole | P | null> {\n\t\tconst query: Filter<IRole> = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tasync findOneByName<P = IRole>(name: IRole['name'], options?: any): Promise<IRole | P | null> {\n\t\tconst query: Filter<IRole> = {\n\t\t\tname,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindInIds<P>(ids: IRole['_id'][], options?: FindOptions<IRole>): P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole> {\n\t\tconst query: Filter<IRole> = {\n\t\t\t_id: {\n\t\t\t\t$in: ids,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options || {}) as P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole>;\n\t}\n\n\tfindInIdsOrNames<P>(\n\t\t_idsOrNames: IRole['_id'][] | IRole['name'][],\n\t\toptions?: FindOptions<IRole>,\n\t): P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole> {\n\t\tconst query: Filter<IRole> = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: {\n\t\t\t\t\t\t$in: _idsOrNames,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: {\n\t\t\t\t\t\t$in: _idsOrNames,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.find(query, options || {}) as P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole>;\n\t}\n\n\tfindAllExceptIds<P>(ids: IRole['_id'][], options?: FindOptions<IRole>): P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole> {\n\t\tconst query: Filter<IRole> = {\n\t\t\t_id: {\n\t\t\t\t$nin: ids,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options || {}) as P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole>;\n\t}\n\n\tfindByScope(scope: IRole['scope'], options?: FindOptions<IRole>): FindCursor<IRole> {\n\t\tconst query = {\n\t\t\tscope,\n\t\t};\n\n\t\treturn this.find(query, options || {});\n\t}\n\n\tcountByScope(scope: IRole['scope'], options?: CountDocumentsOptions): Promise<number> {\n\t\tconst query = {\n\t\t\tscope,\n\t\t};\n\n\t\treturn this.countDocuments(query, options);\n\t}\n\n\tfindCustomRoles(options?: FindOptions<IRole>): FindCursor<IRole> {\n\t\tconst query: Filter<IRole> = {\n\t\t\tprotected: false,\n\t\t};\n\n\t\treturn this.find(query, options || {});\n\t}\n\n\tcountCustomRoles(options?: CountDocumentsOptions): Promise<number> {\n\t\tconst query: Filter<IRole> = {\n\t\t\tprotected: false,\n\t\t};\n\n\t\treturn this.countDocuments(query, options || {});\n\t}\n\n\tasync updateById(\n\t\t_id: IRole['_id'],\n\t\tname: IRole['name'],\n\t\tscope: IRole['scope'],\n\t\tdescription: IRole['description'] = '',\n\t\tmandatory2fa: IRole['mandatory2fa'] = false,\n\t): Promise<IRole> {\n\t\tconst response = await this.findOneAndUpdate(\n\t\t\t{ _id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tname,\n\t\t\t\t\tscope,\n\t\t\t\t\tdescription,\n\t\t\t\t\tmandatory2fa,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true, returnDocument: 'after' },\n\t\t);\n\n\t\tif (!response.value) {\n\t\t\tthrow new Error('Role not found');\n\t\t}\n\n\t\treturn response.value;\n\t}\n\n\tfindUsersInRole(roleId: IRole['_id'], scope?: IRoom['_id']): Promise<FindCursor<IUser>>;\n\n\tfindUsersInRole(roleId: IRole['_id'], scope: IRoom['_id'] | undefined, options: FindOptions<IUser>): Promise<FindCursor<IUser>>;\n\n\tfindUsersInRole<P extends Document>(\n\t\troleId: IRole['_id'],\n\t\tscope: IRoom['_id'] | undefined,\n\t\toptions: FindOptions<P extends IUser ? IUser : P>,\n\t): Promise<FindCursor<P extends IUser ? IUser : P>>;\n\n\t/** @deprecated function getUsersInRole should be used instead */\n\tasync findUsersInRole<P>(\n\t\troleId: IRole['_id'],\n\t\tscope: IRoom['_id'] | undefined,\n\t\toptions?: any | undefined,\n\t): Promise<FindCursor<IUser | P>> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.findUsersInRole method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\tif (!role) {\n\t\t\tthrow new Error('RolesRaw.findUsersInRole: role not found');\n\t\t}\n\n\t\tswitch (role.scope) {\n\t\t\tcase 'Subscriptions':\n\t\t\t\treturn Subscriptions.findUsersInRoles([role._id], scope, options);\n\t\t\tcase 'Users':\n\t\t\tdefault:\n\t\t\t\treturn Users.findUsersInRoles([role._id], null, options);\n\t\t}\n\t}\n\n\tasync countUsersInRole(roleId: IRole['_id'], scope?: IRoom['_id']): Promise<number> {\n\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\tif (!role) {\n\t\t\tthrow new Error('RolesRaw.countUsersInRole: role not found');\n\t\t}\n\n\t\tswitch (role.scope) {\n\t\t\tcase 'Subscriptions':\n\t\t\t\treturn Subscriptions.countUsersInRoles([role._id], scope);\n\t\t\tcase 'Users':\n\t\t\tdefault:\n\t\t\t\treturn Users.countUsersInRoles([role._id]);\n\t\t}\n\t}\n\n\tasync createWithRandomId(\n\t\tname: IRole['name'],\n\t\tscope: IRole['scope'] = 'Users',\n\t\tdescription = '',\n\t\tprotectedRole = true,\n\t\tmandatory2fa = false,\n\t): Promise<IRole> {\n\t\tconst role = {\n\t\t\tname,\n\t\t\tscope,\n\t\t\tdescription,\n\t\t\tprotected: protectedRole,\n\t\t\tmandatory2fa,\n\t\t};\n\n\t\tconst res = await this.insertOne(role);\n\n\t\treturn {\n\t\t\t_id: res.insertedId,\n\t\t\t...role,\n\t\t};\n\t}\n\n\tasync canAddUserToRole(uid: IUser['_id'], roleId: IRole['_id'], scope?: IRoom['_id']): Promise<boolean> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.canAddUserToRole method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tconst role = await this.findOne({ _id: roleId }, { projection: { scope: 1 } });\n\t\tif (!role) {\n\t\t\treturn false;\n\t\t}\n\n\t\tswitch (role.scope) {\n\t\t\tcase 'Subscriptions':\n\t\t\t\treturn Subscriptions.isUserInRoleScope(uid, scope);\n\t\t\tcase 'Users':\n\t\t\tdefault:\n\t\t\t\treturn Users.isUserInRoleScope(uid);\n\t\t}\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 1);\n    module.export({\n      RolesRaw: () => RolesRaw\n    });\n    let Subscriptions, Users;\n    module.link(\"@rocket.chat/models\", {\n      Subscriptions(v) {\n        Subscriptions = v;\n      },\n      Users(v) {\n        Users = v;\n      }\n    }, 0);\n    let BaseRaw;\n    module.link(\"./BaseRaw\", {\n      BaseRaw(v) {\n        BaseRaw = v;\n      }\n    }, 1);\n    let notifyOnSubscriptionChangedByRoomIdAndUserId;\n    module.link(\"../../../app/lib/server/lib/notifyListener\", {\n      notifyOnSubscriptionChangedByRoomIdAndUserId(v) {\n        notifyOnSubscriptionChangedByRoomIdAndUserId = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    class RolesRaw extends BaseRaw {\n      constructor(db, trash) {\n        super(db, 'roles', trash);\n      }\n      findByUpdatedDate(updatedAfterDate, options) {\n        const query = {\n          _updatedAt: {\n            $gte: new Date(updatedAfterDate)\n          }\n        };\n        return options ? this.find(query, options) : this.find(query);\n      }\n      async addUserRoles(userId, roles, scope) {\n        if (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n          throw new Error('Roles.addUserRoles method received a role scope instead of a scope value.');\n        }\n        if (!Array.isArray(roles)) {\n          roles = [roles];\n          process.env.NODE_ENV === 'development' && console.warn('[WARN] RolesRaw.addUserRoles: roles should be an array');\n        }\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(roles), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const roleId = _step.value;\n            {\n              const role = await this.findOneById(roleId, {\n                projection: {\n                  scope: 1\n                }\n              });\n              if (!role) {\n                process.env.NODE_ENV === 'development' && console.warn(\"[WARN] RolesRaw.addUserRoles: role: \".concat(roleId, \" not found\"));\n                continue;\n              }\n              if (role.scope === 'Subscriptions' && scope) {\n                // TODO remove dependency from other models - this logic should be inside a function/service\n                const addRolesResponse = await Subscriptions.addRolesByUserId(userId, [role._id], scope);\n                if (addRolesResponse.modifiedCount) {\n                  void notifyOnSubscriptionChangedByRoomIdAndUserId(scope, userId);\n                }\n              } else {\n                await Users.addRolesByUserId(userId, [role._id]);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        return true;\n      }\n      async isUserInRoles(userId, roles, scope) {\n        if (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n          throw new Error('Roles.isUserInRoles method received a role scope instead of a scope value.');\n        }\n        var _iteratorAbruptCompletion2 = false;\n        var _didIteratorError2 = false;\n        var _iteratorError2;\n        try {\n          for (var _iterator2 = _asyncIterator(roles), _step2; _iteratorAbruptCompletion2 = !(_step2 = await _iterator2.next()).done; _iteratorAbruptCompletion2 = false) {\n            const roleId = _step2.value;\n            {\n              const role = await this.findOneById(roleId, {\n                projection: {\n                  scope: 1\n                }\n              });\n              if (!role) {\n                continue;\n              }\n              switch (role.scope) {\n                case 'Subscriptions':\n                  if (await Subscriptions.isUserInRole(userId, roleId, scope)) {\n                    return true;\n                  }\n                  break;\n                case 'Users':\n                default:\n                  if (await Users.isUserInRole(userId, roleId)) {\n                    return true;\n                  }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n              await _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n        return false;\n      }\n      async removeUserRoles(userId, roles, scope) {\n        if (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n          throw new Error('Roles.removeUserRoles method received a role scope instead of a scope value.');\n        }\n        var _iteratorAbruptCompletion3 = false;\n        var _didIteratorError3 = false;\n        var _iteratorError3;\n        try {\n          for (var _iterator3 = _asyncIterator(roles), _step3; _iteratorAbruptCompletion3 = !(_step3 = await _iterator3.next()).done; _iteratorAbruptCompletion3 = false) {\n            const roleId = _step3.value;\n            {\n              const role = await this.findOneById(roleId, {\n                projection: {\n                  scope: 1\n                }\n              });\n              if (!role) {\n                continue;\n              }\n              if (role.scope === 'Subscriptions' && scope) {\n                const removeRolesResponse = await Subscriptions.removeRolesByUserId(userId, [roleId], scope);\n                if (removeRolesResponse.modifiedCount) {\n                  void notifyOnSubscriptionChangedByRoomIdAndUserId(scope, userId);\n                }\n              } else {\n                await Users.removeRolesByUserId(userId, [roleId]);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion3 && _iterator3.return != null) {\n              await _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n        return true;\n      }\n      findOneByIdOrName(_idOrName, options) {\n        const query = {\n          $or: [{\n            _id: _idOrName\n          }, {\n            name: _idOrName\n          }]\n        };\n        return this.findOne(query, options);\n      }\n      async findOneByName(name, options) {\n        const query = {\n          name\n        };\n        return this.findOne(query, options);\n      }\n      findInIds(ids, options) {\n        const query = {\n          _id: {\n            $in: ids\n          }\n        };\n        return this.find(query, options || {});\n      }\n      findInIdsOrNames(_idsOrNames, options) {\n        const query = {\n          $or: [{\n            _id: {\n              $in: _idsOrNames\n            }\n          }, {\n            name: {\n              $in: _idsOrNames\n            }\n          }]\n        };\n        return this.find(query, options || {});\n      }\n      findAllExceptIds(ids, options) {\n        const query = {\n          _id: {\n            $nin: ids\n          }\n        };\n        return this.find(query, options || {});\n      }\n      findByScope(scope, options) {\n        const query = {\n          scope\n        };\n        return this.find(query, options || {});\n      }\n      countByScope(scope, options) {\n        const query = {\n          scope\n        };\n        return this.countDocuments(query, options);\n      }\n      findCustomRoles(options) {\n        const query = {\n          protected: false\n        };\n        return this.find(query, options || {});\n      }\n      countCustomRoles(options) {\n        const query = {\n          protected: false\n        };\n        return this.countDocuments(query, options || {});\n      }\n      async updateById(_id, name, scope) {\n        let description = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n        let mandatory2fa = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        const response = await this.findOneAndUpdate({\n          _id\n        }, {\n          $set: {\n            name,\n            scope,\n            description,\n            mandatory2fa\n          }\n        }, {\n          upsert: true,\n          returnDocument: 'after'\n        });\n        if (!response.value) {\n          throw new Error('Role not found');\n        }\n        return response.value;\n      }\n      /** @deprecated function getUsersInRole should be used instead */\n      async findUsersInRole(roleId, scope, options) {\n        if (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n          throw new Error('Roles.findUsersInRole method received a role scope instead of a scope value.');\n        }\n        const role = await this.findOneById(roleId, {\n          projection: {\n            scope: 1\n          }\n        });\n        if (!role) {\n          throw new Error('RolesRaw.findUsersInRole: role not found');\n        }\n        switch (role.scope) {\n          case 'Subscriptions':\n            return Subscriptions.findUsersInRoles([role._id], scope, options);\n          case 'Users':\n          default:\n            return Users.findUsersInRoles([role._id], null, options);\n        }\n      }\n      async countUsersInRole(roleId, scope) {\n        const role = await this.findOneById(roleId, {\n          projection: {\n            scope: 1\n          }\n        });\n        if (!role) {\n          throw new Error('RolesRaw.countUsersInRole: role not found');\n        }\n        switch (role.scope) {\n          case 'Subscriptions':\n            return Subscriptions.countUsersInRoles([role._id], scope);\n          case 'Users':\n          default:\n            return Users.countUsersInRoles([role._id]);\n        }\n      }\n      async createWithRandomId(name) {\n        let scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Users';\n        let description = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n        let protectedRole = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n        let mandatory2fa = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        const role = {\n          name,\n          scope,\n          description,\n          protected: protectedRole,\n          mandatory2fa\n        };\n        const res = await this.insertOne(role);\n        return _objectSpread({\n          _id: res.insertedId\n        }, role);\n      }\n      async canAddUserToRole(uid, roleId, scope) {\n        if (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n          throw new Error('Roles.canAddUserToRole method received a role scope instead of a scope value.');\n        }\n        const role = await this.findOne({\n          _id: roleId\n        }, {\n          projection: {\n            scope: 1\n          }\n        });\n        if (!role) {\n          return false;\n        }\n        switch (role.scope) {\n          case 'Subscriptions':\n            return Subscriptions.isUserInRoleScope(uid, scope);\n          case 'Users':\n          default:\n            return Users.isUserInRoleScope(uid);\n        }\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","_asyncIterator","export","RolesRaw","Subscriptions","Users","BaseRaw","notifyOnSubscriptionChangedByRoomIdAndUserId","__reifyWaitForDeps__","constructor","db","trash","findByUpdatedDate","updatedAfterDate","options","query","_updatedAt","$gte","Date","find","addUserRoles","userId","roles","scope","process","env","NODE_ENV","Error","Array","isArray","console","warn","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","roleId","value","role","findOneById","projection","concat","addRolesResponse","addRolesByUserId","_id","modifiedCount","err","return","isUserInRoles","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","isUserInRole","removeUserRoles","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","removeRolesResponse","removeRolesByUserId","findOneByIdOrName","_idOrName","$or","name","findOne","findOneByName","findInIds","ids","$in","findInIdsOrNames","_idsOrNames","findAllExceptIds","$nin","findByScope","countByScope","countDocuments","findCustomRoles","protected","countCustomRoles","updateById","description","arguments","length","undefined","mandatory2fa","response","findOneAndUpdate","$set","upsert","returnDocument","findUsersInRole","findUsersInRoles","countUsersInRole","countUsersInRoles","createWithRandomId","protectedRole","res","insertOne","insertedId","canAddUserToRole","uid","isUserInRoleScope","__reify_async_result__","_reifyError","self","async"],"sources":["server/models/raw/Roles.ts"],"sourcesContent":["import type { IRole, IRoom, IUser, RocketChatRecordDeleted } from '@rocket.chat/core-typings';\nimport type { IRolesModel } from '@rocket.chat/model-typings';\nimport { Subscriptions, Users } from '@rocket.chat/models';\nimport type { Collection, FindCursor, Db, Filter, FindOptions, Document, CountDocumentsOptions } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { notifyOnSubscriptionChangedByRoomIdAndUserId } from '../../../app/lib/server/lib/notifyListener';\n\nexport class RolesRaw extends BaseRaw<IRole> implements IRolesModel {\n\tconstructor(db: Db, trash?: Collection<RocketChatRecordDeleted<IRole>>) {\n\t\tsuper(db, 'roles', trash);\n\t}\n\n\tfindByUpdatedDate(updatedAfterDate: Date, options?: FindOptions<IRole>): FindCursor<IRole> {\n\t\tconst query = {\n\t\t\t_updatedAt: { $gte: new Date(updatedAfterDate) },\n\t\t};\n\n\t\treturn options ? this.find(query, options) : this.find(query);\n\t}\n\n\tasync addUserRoles(userId: IUser['_id'], roles: IRole['_id'][], scope?: IRoom['_id']): Promise<boolean> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.addUserRoles method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tif (!Array.isArray(roles)) {\n\t\t\troles = [roles];\n\t\t\tprocess.env.NODE_ENV === 'development' && console.warn('[WARN] RolesRaw.addUserRoles: roles should be an array');\n\t\t}\n\n\t\tfor await (const roleId of roles) {\n\t\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\t\tif (!role) {\n\t\t\t\tprocess.env.NODE_ENV === 'development' && console.warn(`[WARN] RolesRaw.addUserRoles: role: ${roleId} not found`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (role.scope === 'Subscriptions' && scope) {\n\t\t\t\t// TODO remove dependency from other models - this logic should be inside a function/service\n\t\t\t\tconst addRolesResponse = await Subscriptions.addRolesByUserId(userId, [role._id], scope);\n\t\t\t\tif (addRolesResponse.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(scope, userId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tawait Users.addRolesByUserId(userId, [role._id]);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync isUserInRoles(userId: IUser['_id'], roles: IRole['_id'][], scope?: IRoom['_id']): Promise<boolean> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.isUserInRoles method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tfor await (const roleId of roles) {\n\t\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\t\tif (!role) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (role.scope) {\n\t\t\t\tcase 'Subscriptions':\n\t\t\t\t\tif (await Subscriptions.isUserInRole(userId, roleId, scope)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Users':\n\t\t\t\tdefault:\n\t\t\t\t\tif (await Users.isUserInRole(userId, roleId)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync removeUserRoles(userId: IUser['_id'], roles: IRole['_id'][], scope?: IRoom['_id']): Promise<boolean> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.removeUserRoles method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tfor await (const roleId of roles) {\n\t\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\t\tif (!role) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (role.scope === 'Subscriptions' && scope) {\n\t\t\t\tconst removeRolesResponse = await Subscriptions.removeRolesByUserId(userId, [roleId], scope);\n\t\t\t\tif (removeRolesResponse.modifiedCount) {\n\t\t\t\t\tvoid notifyOnSubscriptionChangedByRoomIdAndUserId(scope, userId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tawait Users.removeRolesByUserId(userId, [roleId]);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync findOneByIdOrName(_idOrName: IRole['_id'] | IRole['name'], options?: undefined): Promise<IRole | null>;\n\n\tasync findOneByIdOrName(_idOrName: IRole['_id'] | IRole['name'], options: FindOptions<IRole>): Promise<IRole | null>;\n\n\tasync findOneByIdOrName<P extends Document>(\n\t\t_idOrName: IRole['_id'] | IRole['name'],\n\t\toptions: FindOptions<P extends IRole ? IRole : P>,\n\t): Promise<P | null>;\n\n\tfindOneByIdOrName<P>(_idOrName: IRole['_id'] | IRole['name'], options?: any): Promise<IRole | P | null> {\n\t\tconst query: Filter<IRole> = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: _idOrName,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: _idOrName,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tasync findOneByName<P = IRole>(name: IRole['name'], options?: any): Promise<IRole | P | null> {\n\t\tconst query: Filter<IRole> = {\n\t\t\tname,\n\t\t};\n\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindInIds<P>(ids: IRole['_id'][], options?: FindOptions<IRole>): P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole> {\n\t\tconst query: Filter<IRole> = {\n\t\t\t_id: {\n\t\t\t\t$in: ids,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options || {}) as P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole>;\n\t}\n\n\tfindInIdsOrNames<P>(\n\t\t_idsOrNames: IRole['_id'][] | IRole['name'][],\n\t\toptions?: FindOptions<IRole>,\n\t): P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole> {\n\t\tconst query: Filter<IRole> = {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\t_id: {\n\t\t\t\t\t\t$in: _idsOrNames,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: {\n\t\t\t\t\t\t$in: _idsOrNames,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\n\t\treturn this.find(query, options || {}) as P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole>;\n\t}\n\n\tfindAllExceptIds<P>(ids: IRole['_id'][], options?: FindOptions<IRole>): P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole> {\n\t\tconst query: Filter<IRole> = {\n\t\t\t_id: {\n\t\t\t\t$nin: ids,\n\t\t\t},\n\t\t};\n\n\t\treturn this.find(query, options || {}) as P extends Pick<IRole, '_id'> ? FindCursor<P> : FindCursor<IRole>;\n\t}\n\n\tfindByScope(scope: IRole['scope'], options?: FindOptions<IRole>): FindCursor<IRole> {\n\t\tconst query = {\n\t\t\tscope,\n\t\t};\n\n\t\treturn this.find(query, options || {});\n\t}\n\n\tcountByScope(scope: IRole['scope'], options?: CountDocumentsOptions): Promise<number> {\n\t\tconst query = {\n\t\t\tscope,\n\t\t};\n\n\t\treturn this.countDocuments(query, options);\n\t}\n\n\tfindCustomRoles(options?: FindOptions<IRole>): FindCursor<IRole> {\n\t\tconst query: Filter<IRole> = {\n\t\t\tprotected: false,\n\t\t};\n\n\t\treturn this.find(query, options || {});\n\t}\n\n\tcountCustomRoles(options?: CountDocumentsOptions): Promise<number> {\n\t\tconst query: Filter<IRole> = {\n\t\t\tprotected: false,\n\t\t};\n\n\t\treturn this.countDocuments(query, options || {});\n\t}\n\n\tasync updateById(\n\t\t_id: IRole['_id'],\n\t\tname: IRole['name'],\n\t\tscope: IRole['scope'],\n\t\tdescription: IRole['description'] = '',\n\t\tmandatory2fa: IRole['mandatory2fa'] = false,\n\t): Promise<IRole> {\n\t\tconst response = await this.findOneAndUpdate(\n\t\t\t{ _id },\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tname,\n\t\t\t\t\tscope,\n\t\t\t\t\tdescription,\n\t\t\t\t\tmandatory2fa,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ upsert: true, returnDocument: 'after' },\n\t\t);\n\n\t\tif (!response.value) {\n\t\t\tthrow new Error('Role not found');\n\t\t}\n\n\t\treturn response.value;\n\t}\n\n\tfindUsersInRole(roleId: IRole['_id'], scope?: IRoom['_id']): Promise<FindCursor<IUser>>;\n\n\tfindUsersInRole(roleId: IRole['_id'], scope: IRoom['_id'] | undefined, options: FindOptions<IUser>): Promise<FindCursor<IUser>>;\n\n\tfindUsersInRole<P extends Document>(\n\t\troleId: IRole['_id'],\n\t\tscope: IRoom['_id'] | undefined,\n\t\toptions: FindOptions<P extends IUser ? IUser : P>,\n\t): Promise<FindCursor<P extends IUser ? IUser : P>>;\n\n\t/** @deprecated function getUsersInRole should be used instead */\n\tasync findUsersInRole<P>(\n\t\troleId: IRole['_id'],\n\t\tscope: IRoom['_id'] | undefined,\n\t\toptions?: any | undefined,\n\t): Promise<FindCursor<IUser | P>> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.findUsersInRole method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\tif (!role) {\n\t\t\tthrow new Error('RolesRaw.findUsersInRole: role not found');\n\t\t}\n\n\t\tswitch (role.scope) {\n\t\t\tcase 'Subscriptions':\n\t\t\t\treturn Subscriptions.findUsersInRoles([role._id], scope, options);\n\t\t\tcase 'Users':\n\t\t\tdefault:\n\t\t\t\treturn Users.findUsersInRoles([role._id], null, options);\n\t\t}\n\t}\n\n\tasync countUsersInRole(roleId: IRole['_id'], scope?: IRoom['_id']): Promise<number> {\n\t\tconst role = await this.findOneById<Pick<IRole, '_id' | 'scope'>>(roleId, { projection: { scope: 1 } });\n\n\t\tif (!role) {\n\t\t\tthrow new Error('RolesRaw.countUsersInRole: role not found');\n\t\t}\n\n\t\tswitch (role.scope) {\n\t\t\tcase 'Subscriptions':\n\t\t\t\treturn Subscriptions.countUsersInRoles([role._id], scope);\n\t\t\tcase 'Users':\n\t\t\tdefault:\n\t\t\t\treturn Users.countUsersInRoles([role._id]);\n\t\t}\n\t}\n\n\tasync createWithRandomId(\n\t\tname: IRole['name'],\n\t\tscope: IRole['scope'] = 'Users',\n\t\tdescription = '',\n\t\tprotectedRole = true,\n\t\tmandatory2fa = false,\n\t): Promise<IRole> {\n\t\tconst role = {\n\t\t\tname,\n\t\t\tscope,\n\t\t\tdescription,\n\t\t\tprotected: protectedRole,\n\t\t\tmandatory2fa,\n\t\t};\n\n\t\tconst res = await this.insertOne(role);\n\n\t\treturn {\n\t\t\t_id: res.insertedId,\n\t\t\t...role,\n\t\t};\n\t}\n\n\tasync canAddUserToRole(uid: IUser['_id'], roleId: IRole['_id'], scope?: IRoom['_id']): Promise<boolean> {\n\t\tif (process.env.NODE_ENV === 'development' && (scope === 'Users' || scope === 'Subscriptions')) {\n\t\t\tthrow new Error('Roles.canAddUserToRole method received a role scope instead of a scope value.');\n\t\t}\n\n\t\tconst role = await this.findOne({ _id: roleId }, { projection: { scope: 1 } });\n\t\tif (!role) {\n\t\t\treturn false;\n\t\t}\n\n\t\tswitch (role.scope) {\n\t\t\tcase 'Subscriptions':\n\t\t\t\treturn Subscriptions.isUserInRoleScope(uid, scope);\n\t\t\tcase 'Users':\n\t\t\tdefault:\n\t\t\t\treturn Users.isUserInRoleScope(uid);\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"e2ab53cf3c69e8faf106d70776e7a259000d7c8a"}
