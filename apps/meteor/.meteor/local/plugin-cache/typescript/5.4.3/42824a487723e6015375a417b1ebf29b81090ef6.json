{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/features/EmailInbox/EmailInbox_Incoming.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/features/EmailInbox/EmailInbox_Incoming.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/features/EmailInbox/EmailInbox_Incoming.ts","inputSourceMap":{"version":3,"file":"server/features/EmailInbox/EmailInbox_Incoming.ts","sourceRoot":"","sources":["server/features/EmailInbox/EmailInbox_Incoming.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n\tILivechatVisitor,\n\tIOmnichannelRoom,\n\tVideoAttachmentProps,\n\tImageAttachmentProps,\n\tAudioAttachmentProps,\n} from '@rocket.chat/core-typings';\nimport { OmnichannelSourceType } from '@rocket.chat/core-typings';\nimport { LivechatVisitors, LivechatRooms, Messages } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport type { ParsedMail, Attachment } from 'mailparser';\nimport stripHtml from 'string-strip-html';\n\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { notifyOnMessageChange } from '../../../app/lib/server/lib/notifyListener';\nimport { Livechat as LivechatTyped } from '../../../app/livechat/server/lib/LivechatTyped';\nimport { QueueManager } from '../../../app/livechat/server/lib/QueueManager';\nimport { settings } from '../../../app/settings/server';\nimport { i18n } from '../../lib/i18n';\nimport { logger } from './logger';\n\ntype FileAttachment = VideoAttachmentProps & ImageAttachmentProps & AudioAttachmentProps;\n\nconst language = settings.get<string>('Language') || 'en';\nconst t = i18n.getFixedT(language);\n\nasync function getGuestByEmail(email: string, name: string, inbox: string, department = ''): Promise<ILivechatVisitor | null> {\n\tconst guest = await LivechatVisitors.findOneGuestByEmailAddressAndSource(\n\t\temail,\n\t\t{\n\t\t\t'source.type': OmnichannelSourceType.EMAIL,\n\t\t\t'source.id': inbox,\n\t\t},\n\t\t{ projection: { department: 1, token: 1, source: 1 } },\n\t);\n\n\tif (guest) {\n\t\tif (guest.department !== department) {\n\t\t\tif (!department) {\n\t\t\t\tawait LivechatVisitors.removeDepartmentById(guest._id);\n\t\t\t\tdelete guest.department;\n\t\t\t\treturn guest;\n\t\t\t}\n\t\t\tawait LivechatTyped.setDepartmentForGuest({ token: guest.token, department });\n\t\t\treturn LivechatVisitors.findOneEnabledById(guest._id, {});\n\t\t}\n\t\tif (!guest.source) {\n\t\t\tconst source = { type: OmnichannelSourceType.EMAIL, id: inbox, alias: 'email-inbox' };\n\t\t\tawait LivechatVisitors.setSourceById(guest._id, source);\n\t\t}\n\t\treturn guest;\n\t}\n\n\tconst livechatVisitor = await LivechatTyped.registerGuest({\n\t\ttoken: Random.id(),\n\t\tname: name || email,\n\t\temail,\n\t\tdepartment,\n\t\tsource: { type: OmnichannelSourceType.EMAIL, id: inbox, alias: 'email-inbox' },\n\t});\n\n\tif (!livechatVisitor) {\n\t\tthrow new Error('Error getting guest');\n\t}\n\n\treturn livechatVisitor;\n}\n\nasync function uploadAttachment(attachmentParam: Attachment, rid: string, visitorToken: string): Promise<Partial<FileAttachment>> {\n\tconst details = {\n\t\tname: attachmentParam.filename,\n\t\tsize: attachmentParam.size,\n\t\ttype: attachmentParam.contentType,\n\t\trid,\n\t\tvisitorToken,\n\t};\n\n\tconst fileStore = FileUpload.getStore('Uploads');\n\n\tconst file = await fileStore.insert(details, attachmentParam.content);\n\n\tconst url = FileUpload.getPath(`${file._id}/${encodeURI(file.name || '')}`);\n\n\tconst attachment: Partial<FileAttachment> = {\n\t\ttitle: file.name || '',\n\t\ttitle_link: url,\n\t};\n\n\tif (file.type && /^image\\/.+/.test(file.type)) {\n\t\tattachment.image_url = url;\n\t\tattachment.image_type = file.type;\n\t\tattachment.image_size = file.size;\n\t\tattachment.image_dimensions = file.identify?.size != null ? file.identify.size : undefined;\n\t}\n\n\tif (file.type && /^audio\\/.+/.test(file.type)) {\n\t\tattachment.audio_url = url;\n\t\tattachment.audio_type = file.type;\n\t\tattachment.audio_size = file.size;\n\t}\n\n\tif (file.type && /^video\\/.+/.test(file.type)) {\n\t\tattachment.video_url = url;\n\t\tattachment.video_type = file.type;\n\t\tattachment.video_size = file.size;\n\t}\n\n\treturn attachment;\n}\n\nexport async function onEmailReceived(email: ParsedMail, inbox: string, department = ''): Promise<void> {\n\tlogger.info(`New email conversation received on inbox ${inbox}. Will be assigned to department ${department}`);\n\tif (!email.from?.value?.[0]?.address) {\n\t\treturn;\n\t}\n\n\tconst references = typeof email.references === 'string' ? [email.references] : email.references;\n\tconst initialRef = [email.messageId, email.inReplyTo].filter(Boolean) as string[];\n\tconst thread = (references?.length ? references : []).flatMap((t: string) => t.split(',')).concat(initialRef);\n\tconst guest = await getGuestByEmail(email.from.value[0].address, email.from.value[0].name, inbox, department);\n\n\tif (!guest) {\n\t\tlogger.error(`No visitor found for ${email.from.value[0].address}`);\n\t\treturn;\n\t}\n\n\tlet room: IOmnichannelRoom | null = await LivechatRooms.findOneByVisitorTokenAndEmailThreadAndDepartment(\n\t\tguest.token,\n\t\tthread,\n\t\tdepartment,\n\t\t{},\n\t);\n\n\tlogger.debug({\n\t\tmsg: 'Room found for guest',\n\t\troom,\n\t\tguest,\n\t});\n\n\tif (room?.closedAt) {\n\t\troom = await QueueManager.unarchiveRoom(room);\n\t}\n\n\t// TODO: html => md with turndown\n\tconst msg = email.html\n\t\t? stripHtml(email.html, {\n\t\t\t\tdumpLinkHrefsNearby: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tputOnNewLine: false,\n\t\t\t\t\twrapHeads: '(',\n\t\t\t\t\twrapTails: ')',\n\t\t\t\t},\n\t\t\t\tskipHtmlDecoding: false,\n\t\t  }).result\n\t\t: email.text || '';\n\n\tconst rid = room?._id ?? Random.id();\n\tconst msgId = Random.id();\n\n\tLivechatTyped.sendMessage({\n\t\tguest,\n\t\tmessage: {\n\t\t\t_id: msgId,\n\t\t\tgroupable: false,\n\t\t\tmsg,\n\t\t\ttoken: guest.token,\n\t\t\tattachments: [\n\t\t\t\t{\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\t\ttext: t('Reply_via_Email'),\n\t\t\t\t\t\t\tmsg: 'msg',\n\t\t\t\t\t\t\tmsgId,\n\t\t\t\t\t\t\tmsg_in_chat_window: true,\n\t\t\t\t\t\t\tmsg_processing_type: 'respondWithQuotedMessage',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t\tblocks: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'context',\n\t\t\t\t\telements: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\t\ttext: `**${t('From')}:** ${email.from.text}\\n**${t('Subject')}:** ${email.subject}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'section',\n\t\t\t\t\ttext: {\n\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\ttext: msg,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\trid,\n\t\t\temail: {\n\t\t\t\tthread,\n\t\t\t\tmessageId: email.messageId,\n\t\t\t},\n\t\t},\n\t\troomInfo: {\n\t\t\temail: {\n\t\t\t\tinbox,\n\t\t\t\tthread,\n\t\t\t\treplyTo: email.from.value[0].address,\n\t\t\t\tsubject: email.subject,\n\t\t\t},\n\t\t\tsource: {\n\t\t\t\ttype: OmnichannelSourceType.EMAIL,\n\t\t\t\tid: inbox,\n\t\t\t\talias: 'email-inbox',\n\t\t\t},\n\t\t},\n\t\tagent: undefined,\n\t})\n\t\t.then(async () => {\n\t\t\tif (!email.attachments.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst attachments = [];\n\t\t\tfor await (const attachment of email.attachments) {\n\t\t\t\tif (attachment.type !== 'attachment') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tattachments.push(await uploadAttachment(attachment, rid, guest.token));\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.error({ msg: 'Error uploading attachment from email', err });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait Messages.updateOne(\n\t\t\t\t{ _id: msgId },\n\t\t\t\t{\n\t\t\t\t\t$addToSet: {\n\t\t\t\t\t\tattachments: {\n\t\t\t\t\t\t\t$each: attachments,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t\troom && (await LivechatRooms.updateEmailThreadByRoomId(room._id, thread));\n\t\t\tvoid notifyOnMessageChange({\n\t\t\t\tid: msgId,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tlogger.error({\n\t\t\t\tmsg: 'Error receiving email',\n\t\t\t\terr,\n\t\t\t});\n\t\t});\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/features/EmailInbox/EmailInbox_Incoming.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/features/EmailInbox/EmailInbox_Incoming.ts","inputSourceMap":{"version":3,"file":"server/features/EmailInbox/EmailInbox_Incoming.ts","sourceRoot":"","sources":["server/features/EmailInbox/EmailInbox_Incoming.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n\tILivechatVisitor,\n\tIOmnichannelRoom,\n\tVideoAttachmentProps,\n\tImageAttachmentProps,\n\tAudioAttachmentProps,\n} from '@rocket.chat/core-typings';\nimport { OmnichannelSourceType } from '@rocket.chat/core-typings';\nimport { LivechatVisitors, LivechatRooms, Messages } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport type { ParsedMail, Attachment } from 'mailparser';\nimport stripHtml from 'string-strip-html';\n\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { notifyOnMessageChange } from '../../../app/lib/server/lib/notifyListener';\nimport { Livechat as LivechatTyped } from '../../../app/livechat/server/lib/LivechatTyped';\nimport { QueueManager } from '../../../app/livechat/server/lib/QueueManager';\nimport { settings } from '../../../app/settings/server';\nimport { i18n } from '../../lib/i18n';\nimport { logger } from './logger';\n\ntype FileAttachment = VideoAttachmentProps & ImageAttachmentProps & AudioAttachmentProps;\n\nconst language = settings.get<string>('Language') || 'en';\nconst t = i18n.getFixedT(language);\n\nasync function getGuestByEmail(email: string, name: string, inbox: string, department = ''): Promise<ILivechatVisitor | null> {\n\tconst guest = await LivechatVisitors.findOneGuestByEmailAddressAndSource(\n\t\temail,\n\t\t{\n\t\t\t'source.type': OmnichannelSourceType.EMAIL,\n\t\t\t'source.id': inbox,\n\t\t},\n\t\t{ projection: { department: 1, token: 1, source: 1 } },\n\t);\n\n\tif (guest) {\n\t\tif (guest.department !== department) {\n\t\t\tif (!department) {\n\t\t\t\tawait LivechatVisitors.removeDepartmentById(guest._id);\n\t\t\t\tdelete guest.department;\n\t\t\t\treturn guest;\n\t\t\t}\n\t\t\tawait LivechatTyped.setDepartmentForGuest({ token: guest.token, department });\n\t\t\treturn LivechatVisitors.findOneEnabledById(guest._id, {});\n\t\t}\n\t\tif (!guest.source) {\n\t\t\tconst source = { type: OmnichannelSourceType.EMAIL, id: inbox, alias: 'email-inbox' };\n\t\t\tawait LivechatVisitors.setSourceById(guest._id, source);\n\t\t}\n\t\treturn guest;\n\t}\n\n\tconst livechatVisitor = await LivechatTyped.registerGuest({\n\t\ttoken: Random.id(),\n\t\tname: name || email,\n\t\temail,\n\t\tdepartment,\n\t\tsource: { type: OmnichannelSourceType.EMAIL, id: inbox, alias: 'email-inbox' },\n\t});\n\n\tif (!livechatVisitor) {\n\t\tthrow new Error('Error getting guest');\n\t}\n\n\treturn livechatVisitor;\n}\n\nasync function uploadAttachment(attachmentParam: Attachment, rid: string, visitorToken: string): Promise<Partial<FileAttachment>> {\n\tconst details = {\n\t\tname: attachmentParam.filename,\n\t\tsize: attachmentParam.size,\n\t\ttype: attachmentParam.contentType,\n\t\trid,\n\t\tvisitorToken,\n\t};\n\n\tconst fileStore = FileUpload.getStore('Uploads');\n\n\tconst file = await fileStore.insert(details, attachmentParam.content);\n\n\tconst url = FileUpload.getPath(`${file._id}/${encodeURI(file.name || '')}`);\n\n\tconst attachment: Partial<FileAttachment> = {\n\t\ttitle: file.name || '',\n\t\ttitle_link: url,\n\t};\n\n\tif (file.type && /^image\\/.+/.test(file.type)) {\n\t\tattachment.image_url = url;\n\t\tattachment.image_type = file.type;\n\t\tattachment.image_size = file.size;\n\t\tattachment.image_dimensions = file.identify?.size != null ? file.identify.size : undefined;\n\t}\n\n\tif (file.type && /^audio\\/.+/.test(file.type)) {\n\t\tattachment.audio_url = url;\n\t\tattachment.audio_type = file.type;\n\t\tattachment.audio_size = file.size;\n\t}\n\n\tif (file.type && /^video\\/.+/.test(file.type)) {\n\t\tattachment.video_url = url;\n\t\tattachment.video_type = file.type;\n\t\tattachment.video_size = file.size;\n\t}\n\n\treturn attachment;\n}\n\nexport async function onEmailReceived(email: ParsedMail, inbox: string, department = ''): Promise<void> {\n\tlogger.info(`New email conversation received on inbox ${inbox}. Will be assigned to department ${department}`);\n\tif (!email.from?.value?.[0]?.address) {\n\t\treturn;\n\t}\n\n\tconst references = typeof email.references === 'string' ? [email.references] : email.references;\n\tconst initialRef = [email.messageId, email.inReplyTo].filter(Boolean) as string[];\n\tconst thread = (references?.length ? references : []).flatMap((t: string) => t.split(',')).concat(initialRef);\n\tconst guest = await getGuestByEmail(email.from.value[0].address, email.from.value[0].name, inbox, department);\n\n\tif (!guest) {\n\t\tlogger.error(`No visitor found for ${email.from.value[0].address}`);\n\t\treturn;\n\t}\n\n\tlet room: IOmnichannelRoom | null = await LivechatRooms.findOneByVisitorTokenAndEmailThreadAndDepartment(\n\t\tguest.token,\n\t\tthread,\n\t\tdepartment,\n\t\t{},\n\t);\n\n\tlogger.debug({\n\t\tmsg: 'Room found for guest',\n\t\troom,\n\t\tguest,\n\t});\n\n\tif (room?.closedAt) {\n\t\troom = await QueueManager.unarchiveRoom(room);\n\t}\n\n\t// TODO: html => md with turndown\n\tconst msg = email.html\n\t\t? stripHtml(email.html, {\n\t\t\t\tdumpLinkHrefsNearby: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tputOnNewLine: false,\n\t\t\t\t\twrapHeads: '(',\n\t\t\t\t\twrapTails: ')',\n\t\t\t\t},\n\t\t\t\tskipHtmlDecoding: false,\n\t\t  }).result\n\t\t: email.text || '';\n\n\tconst rid = room?._id ?? Random.id();\n\tconst msgId = Random.id();\n\n\tLivechatTyped.sendMessage({\n\t\tguest,\n\t\tmessage: {\n\t\t\t_id: msgId,\n\t\t\tgroupable: false,\n\t\t\tmsg,\n\t\t\ttoken: guest.token,\n\t\t\tattachments: [\n\t\t\t\t{\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\t\ttext: t('Reply_via_Email'),\n\t\t\t\t\t\t\tmsg: 'msg',\n\t\t\t\t\t\t\tmsgId,\n\t\t\t\t\t\t\tmsg_in_chat_window: true,\n\t\t\t\t\t\t\tmsg_processing_type: 'respondWithQuotedMessage',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t\tblocks: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'context',\n\t\t\t\t\telements: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\t\ttext: `**${t('From')}:** ${email.from.text}\\n**${t('Subject')}:** ${email.subject}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'section',\n\t\t\t\t\ttext: {\n\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\ttext: msg,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\trid,\n\t\t\temail: {\n\t\t\t\tthread,\n\t\t\t\tmessageId: email.messageId,\n\t\t\t},\n\t\t},\n\t\troomInfo: {\n\t\t\temail: {\n\t\t\t\tinbox,\n\t\t\t\tthread,\n\t\t\t\treplyTo: email.from.value[0].address,\n\t\t\t\tsubject: email.subject,\n\t\t\t},\n\t\t\tsource: {\n\t\t\t\ttype: OmnichannelSourceType.EMAIL,\n\t\t\t\tid: inbox,\n\t\t\t\talias: 'email-inbox',\n\t\t\t},\n\t\t},\n\t\tagent: undefined,\n\t})\n\t\t.then(async () => {\n\t\t\tif (!email.attachments.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst attachments = [];\n\t\t\tfor await (const attachment of email.attachments) {\n\t\t\t\tif (attachment.type !== 'attachment') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tattachments.push(await uploadAttachment(attachment, rid, guest.token));\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.error({ msg: 'Error uploading attachment from email', err });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait Messages.updateOne(\n\t\t\t\t{ _id: msgId },\n\t\t\t\t{\n\t\t\t\t\t$addToSet: {\n\t\t\t\t\t\tattachments: {\n\t\t\t\t\t\t\t$each: attachments,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t\troom && (await LivechatRooms.updateEmailThreadByRoomId(room._id, thread));\n\t\t\tvoid notifyOnMessageChange({\n\t\t\t\tid: msgId,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tlogger.error({\n\t\t\t\tmsg: 'Error receiving email',\n\t\t\t\terr,\n\t\t\t});\n\t\t});\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _asyncIterator;\n    module.link(\"@babel/runtime/helpers/asyncIterator\", {\n      default(v) {\n        _asyncIterator = v;\n      }\n    }, 0);\n    module.export({\n      onEmailReceived: () => onEmailReceived\n    });\n    let OmnichannelSourceType;\n    module.link(\"@rocket.chat/core-typings\", {\n      OmnichannelSourceType(v) {\n        OmnichannelSourceType = v;\n      }\n    }, 0);\n    let LivechatVisitors, LivechatRooms, Messages;\n    module.link(\"@rocket.chat/models\", {\n      LivechatVisitors(v) {\n        LivechatVisitors = v;\n      },\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      },\n      Messages(v) {\n        Messages = v;\n      }\n    }, 1);\n    let Random;\n    module.link(\"@rocket.chat/random\", {\n      Random(v) {\n        Random = v;\n      }\n    }, 2);\n    let stripHtml;\n    module.link(\"string-strip-html\", {\n      default(v) {\n        stripHtml = v;\n      }\n    }, 3);\n    let FileUpload;\n    module.link(\"../../../app/file-upload/server\", {\n      FileUpload(v) {\n        FileUpload = v;\n      }\n    }, 4);\n    let notifyOnMessageChange;\n    module.link(\"../../../app/lib/server/lib/notifyListener\", {\n      notifyOnMessageChange(v) {\n        notifyOnMessageChange = v;\n      }\n    }, 5);\n    let LivechatTyped;\n    module.link(\"../../../app/livechat/server/lib/LivechatTyped\", {\n      Livechat(v) {\n        LivechatTyped = v;\n      }\n    }, 6);\n    let QueueManager;\n    module.link(\"../../../app/livechat/server/lib/QueueManager\", {\n      QueueManager(v) {\n        QueueManager = v;\n      }\n    }, 7);\n    let settings;\n    module.link(\"../../../app/settings/server\", {\n      settings(v) {\n        settings = v;\n      }\n    }, 8);\n    let i18n;\n    module.link(\"../../lib/i18n\", {\n      i18n(v) {\n        i18n = v;\n      }\n    }, 9);\n    let logger;\n    module.link(\"./logger\", {\n      logger(v) {\n        logger = v;\n      }\n    }, 10);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const language = settings.get('Language') || 'en';\n    const t = i18n.getFixedT(language);\n    async function getGuestByEmail(email, name, inbox) {\n      let department = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n      const guest = await LivechatVisitors.findOneGuestByEmailAddressAndSource(email, {\n        'source.type': OmnichannelSourceType.EMAIL,\n        'source.id': inbox\n      }, {\n        projection: {\n          department: 1,\n          token: 1,\n          source: 1\n        }\n      });\n      if (guest) {\n        if (guest.department !== department) {\n          if (!department) {\n            await LivechatVisitors.removeDepartmentById(guest._id);\n            delete guest.department;\n            return guest;\n          }\n          await LivechatTyped.setDepartmentForGuest({\n            token: guest.token,\n            department\n          });\n          return LivechatVisitors.findOneEnabledById(guest._id, {});\n        }\n        if (!guest.source) {\n          const source = {\n            type: OmnichannelSourceType.EMAIL,\n            id: inbox,\n            alias: 'email-inbox'\n          };\n          await LivechatVisitors.setSourceById(guest._id, source);\n        }\n        return guest;\n      }\n      const livechatVisitor = await LivechatTyped.registerGuest({\n        token: Random.id(),\n        name: name || email,\n        email,\n        department,\n        source: {\n          type: OmnichannelSourceType.EMAIL,\n          id: inbox,\n          alias: 'email-inbox'\n        }\n      });\n      if (!livechatVisitor) {\n        throw new Error('Error getting guest');\n      }\n      return livechatVisitor;\n    }\n    async function uploadAttachment(attachmentParam, rid, visitorToken) {\n      const details = {\n        name: attachmentParam.filename,\n        size: attachmentParam.size,\n        type: attachmentParam.contentType,\n        rid,\n        visitorToken\n      };\n      const fileStore = FileUpload.getStore('Uploads');\n      const file = await fileStore.insert(details, attachmentParam.content);\n      const url = FileUpload.getPath(\"\".concat(file._id, \"/\").concat(encodeURI(file.name || '')));\n      const attachment = {\n        title: file.name || '',\n        title_link: url\n      };\n      if (file.type && /^image\\/.+/.test(file.type)) {\n        var _file$identify;\n        attachment.image_url = url;\n        attachment.image_type = file.type;\n        attachment.image_size = file.size;\n        attachment.image_dimensions = ((_file$identify = file.identify) === null || _file$identify === void 0 ? void 0 : _file$identify.size) != null ? file.identify.size : undefined;\n      }\n      if (file.type && /^audio\\/.+/.test(file.type)) {\n        attachment.audio_url = url;\n        attachment.audio_type = file.type;\n        attachment.audio_size = file.size;\n      }\n      if (file.type && /^video\\/.+/.test(file.type)) {\n        attachment.video_url = url;\n        attachment.video_type = file.type;\n        attachment.video_size = file.size;\n      }\n      return attachment;\n    }\n    async function onEmailReceived(email, inbox) {\n      var _email$from, _email$from$value, _email$from$value$, _room, _room$_id, _room2;\n      let department = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      logger.info(\"New email conversation received on inbox \".concat(inbox, \". Will be assigned to department \").concat(department));\n      if (!((_email$from = email.from) !== null && _email$from !== void 0 && (_email$from$value = _email$from.value) !== null && _email$from$value !== void 0 && (_email$from$value$ = _email$from$value[0]) !== null && _email$from$value$ !== void 0 && _email$from$value$.address)) {\n        return;\n      }\n      const references = typeof email.references === 'string' ? [email.references] : email.references;\n      const initialRef = [email.messageId, email.inReplyTo].filter(Boolean);\n      const thread = (references !== null && references !== void 0 && references.length ? references : []).flatMap(t => t.split(',')).concat(initialRef);\n      const guest = await getGuestByEmail(email.from.value[0].address, email.from.value[0].name, inbox, department);\n      if (!guest) {\n        logger.error(\"No visitor found for \".concat(email.from.value[0].address));\n        return;\n      }\n      let room = await LivechatRooms.findOneByVisitorTokenAndEmailThreadAndDepartment(guest.token, thread, department, {});\n      logger.debug({\n        msg: 'Room found for guest',\n        room,\n        guest\n      });\n      if ((_room = room) !== null && _room !== void 0 && _room.closedAt) {\n        room = await QueueManager.unarchiveRoom(room);\n      }\n      // TODO: html => md with turndown\n      const msg = email.html ? stripHtml(email.html, {\n        dumpLinkHrefsNearby: {\n          enabled: true,\n          putOnNewLine: false,\n          wrapHeads: '(',\n          wrapTails: ')'\n        },\n        skipHtmlDecoding: false\n      }).result : email.text || '';\n      const rid = (_room$_id = (_room2 = room) === null || _room2 === void 0 ? void 0 : _room2._id) !== null && _room$_id !== void 0 ? _room$_id : Random.id();\n      const msgId = Random.id();\n      LivechatTyped.sendMessage({\n        guest,\n        message: {\n          _id: msgId,\n          groupable: false,\n          msg,\n          token: guest.token,\n          attachments: [{\n            actions: [{\n              type: 'button',\n              text: t('Reply_via_Email'),\n              msg: 'msg',\n              msgId,\n              msg_in_chat_window: true,\n              msg_processing_type: 'respondWithQuotedMessage'\n            }]\n          }],\n          blocks: [{\n            type: 'context',\n            elements: [{\n              type: 'mrkdwn',\n              text: \"**\".concat(t('From'), \":** \").concat(email.from.text, \"\\n**\").concat(t('Subject'), \":** \").concat(email.subject)\n            }]\n          }, {\n            type: 'section',\n            text: {\n              type: 'mrkdwn',\n              text: msg\n            }\n          }],\n          rid,\n          email: {\n            thread,\n            messageId: email.messageId\n          }\n        },\n        roomInfo: {\n          email: {\n            inbox,\n            thread,\n            replyTo: email.from.value[0].address,\n            subject: email.subject\n          },\n          source: {\n            type: OmnichannelSourceType.EMAIL,\n            id: inbox,\n            alias: 'email-inbox'\n          }\n        },\n        agent: undefined\n      }).then(async () => {\n        if (!email.attachments.length) {\n          return;\n        }\n        const attachments = [];\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(email.attachments), _step; _iteratorAbruptCompletion = !(_step = await _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const attachment = _step.value;\n            {\n              if (attachment.type !== 'attachment') {\n                continue;\n              }\n              try {\n                attachments.push(await uploadAttachment(attachment, rid, guest.token));\n              } catch (err) {\n                logger.error({\n                  msg: 'Error uploading attachment from email',\n                  err\n                });\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              await _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        await Messages.updateOne({\n          _id: msgId\n        }, {\n          $addToSet: {\n            attachments: {\n              $each: attachments\n            }\n          }\n        });\n        room && (await LivechatRooms.updateEmailThreadByRoomId(room._id, thread));\n        void notifyOnMessageChange({\n          id: msgId\n        });\n      }).catch(err => {\n        logger.error({\n          msg: 'Error receiving email',\n          err\n        });\n      });\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_asyncIterator","module","link","default","v","export","onEmailReceived","OmnichannelSourceType","LivechatVisitors","LivechatRooms","Messages","Random","stripHtml","FileUpload","notifyOnMessageChange","LivechatTyped","Livechat","QueueManager","settings","i18n","logger","__reifyWaitForDeps__","language","get","t","getFixedT","getGuestByEmail","email","name","inbox","department","arguments","length","undefined","guest","findOneGuestByEmailAddressAndSource","EMAIL","projection","token","source","removeDepartmentById","_id","setDepartmentForGuest","findOneEnabledById","type","id","alias","setSourceById","livechatVisitor","registerGuest","Error","uploadAttachment","attachmentParam","rid","visitorToken","details","filename","size","contentType","fileStore","getStore","file","insert","content","url","getPath","concat","encodeURI","attachment","title","title_link","test","_file$identify","image_url","image_type","image_size","image_dimensions","identify","audio_url","audio_type","audio_size","video_url","video_type","video_size","_email$from","_email$from$value","_email$from$value$","_room","_room$_id","_room2","info","from","value","address","references","initialRef","messageId","inReplyTo","filter","Boolean","thread","flatMap","split","error","room","findOneByVisitorTokenAndEmailThreadAndDepartment","debug","msg","closedAt","unarchiveRoom","html","dumpLinkHrefsNearby","enabled","putOnNewLine","wrapHeads","wrapTails","skipHtmlDecoding","result","text","msgId","sendMessage","message","groupable","attachments","actions","msg_in_chat_window","msg_processing_type","blocks","elements","subject","roomInfo","replyTo","agent","then","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","next","done","push","err","return","updateOne","$addToSet","$each","updateEmailThreadByRoomId","catch","__reify_async_result__","_reifyError","self","async"],"sources":["server/features/EmailInbox/EmailInbox_Incoming.ts"],"sourcesContent":["import type {\n\tILivechatVisitor,\n\tIOmnichannelRoom,\n\tVideoAttachmentProps,\n\tImageAttachmentProps,\n\tAudioAttachmentProps,\n} from '@rocket.chat/core-typings';\nimport { OmnichannelSourceType } from '@rocket.chat/core-typings';\nimport { LivechatVisitors, LivechatRooms, Messages } from '@rocket.chat/models';\nimport { Random } from '@rocket.chat/random';\nimport type { ParsedMail, Attachment } from 'mailparser';\nimport stripHtml from 'string-strip-html';\n\nimport { FileUpload } from '../../../app/file-upload/server';\nimport { notifyOnMessageChange } from '../../../app/lib/server/lib/notifyListener';\nimport { Livechat as LivechatTyped } from '../../../app/livechat/server/lib/LivechatTyped';\nimport { QueueManager } from '../../../app/livechat/server/lib/QueueManager';\nimport { settings } from '../../../app/settings/server';\nimport { i18n } from '../../lib/i18n';\nimport { logger } from './logger';\n\ntype FileAttachment = VideoAttachmentProps & ImageAttachmentProps & AudioAttachmentProps;\n\nconst language = settings.get<string>('Language') || 'en';\nconst t = i18n.getFixedT(language);\n\nasync function getGuestByEmail(email: string, name: string, inbox: string, department = ''): Promise<ILivechatVisitor | null> {\n\tconst guest = await LivechatVisitors.findOneGuestByEmailAddressAndSource(\n\t\temail,\n\t\t{\n\t\t\t'source.type': OmnichannelSourceType.EMAIL,\n\t\t\t'source.id': inbox,\n\t\t},\n\t\t{ projection: { department: 1, token: 1, source: 1 } },\n\t);\n\n\tif (guest) {\n\t\tif (guest.department !== department) {\n\t\t\tif (!department) {\n\t\t\t\tawait LivechatVisitors.removeDepartmentById(guest._id);\n\t\t\t\tdelete guest.department;\n\t\t\t\treturn guest;\n\t\t\t}\n\t\t\tawait LivechatTyped.setDepartmentForGuest({ token: guest.token, department });\n\t\t\treturn LivechatVisitors.findOneEnabledById(guest._id, {});\n\t\t}\n\t\tif (!guest.source) {\n\t\t\tconst source = { type: OmnichannelSourceType.EMAIL, id: inbox, alias: 'email-inbox' };\n\t\t\tawait LivechatVisitors.setSourceById(guest._id, source);\n\t\t}\n\t\treturn guest;\n\t}\n\n\tconst livechatVisitor = await LivechatTyped.registerGuest({\n\t\ttoken: Random.id(),\n\t\tname: name || email,\n\t\temail,\n\t\tdepartment,\n\t\tsource: { type: OmnichannelSourceType.EMAIL, id: inbox, alias: 'email-inbox' },\n\t});\n\n\tif (!livechatVisitor) {\n\t\tthrow new Error('Error getting guest');\n\t}\n\n\treturn livechatVisitor;\n}\n\nasync function uploadAttachment(attachmentParam: Attachment, rid: string, visitorToken: string): Promise<Partial<FileAttachment>> {\n\tconst details = {\n\t\tname: attachmentParam.filename,\n\t\tsize: attachmentParam.size,\n\t\ttype: attachmentParam.contentType,\n\t\trid,\n\t\tvisitorToken,\n\t};\n\n\tconst fileStore = FileUpload.getStore('Uploads');\n\n\tconst file = await fileStore.insert(details, attachmentParam.content);\n\n\tconst url = FileUpload.getPath(`${file._id}/${encodeURI(file.name || '')}`);\n\n\tconst attachment: Partial<FileAttachment> = {\n\t\ttitle: file.name || '',\n\t\ttitle_link: url,\n\t};\n\n\tif (file.type && /^image\\/.+/.test(file.type)) {\n\t\tattachment.image_url = url;\n\t\tattachment.image_type = file.type;\n\t\tattachment.image_size = file.size;\n\t\tattachment.image_dimensions = file.identify?.size != null ? file.identify.size : undefined;\n\t}\n\n\tif (file.type && /^audio\\/.+/.test(file.type)) {\n\t\tattachment.audio_url = url;\n\t\tattachment.audio_type = file.type;\n\t\tattachment.audio_size = file.size;\n\t}\n\n\tif (file.type && /^video\\/.+/.test(file.type)) {\n\t\tattachment.video_url = url;\n\t\tattachment.video_type = file.type;\n\t\tattachment.video_size = file.size;\n\t}\n\n\treturn attachment;\n}\n\nexport async function onEmailReceived(email: ParsedMail, inbox: string, department = ''): Promise<void> {\n\tlogger.info(`New email conversation received on inbox ${inbox}. Will be assigned to department ${department}`);\n\tif (!email.from?.value?.[0]?.address) {\n\t\treturn;\n\t}\n\n\tconst references = typeof email.references === 'string' ? [email.references] : email.references;\n\tconst initialRef = [email.messageId, email.inReplyTo].filter(Boolean) as string[];\n\tconst thread = (references?.length ? references : []).flatMap((t: string) => t.split(',')).concat(initialRef);\n\tconst guest = await getGuestByEmail(email.from.value[0].address, email.from.value[0].name, inbox, department);\n\n\tif (!guest) {\n\t\tlogger.error(`No visitor found for ${email.from.value[0].address}`);\n\t\treturn;\n\t}\n\n\tlet room: IOmnichannelRoom | null = await LivechatRooms.findOneByVisitorTokenAndEmailThreadAndDepartment(\n\t\tguest.token,\n\t\tthread,\n\t\tdepartment,\n\t\t{},\n\t);\n\n\tlogger.debug({\n\t\tmsg: 'Room found for guest',\n\t\troom,\n\t\tguest,\n\t});\n\n\tif (room?.closedAt) {\n\t\troom = await QueueManager.unarchiveRoom(room);\n\t}\n\n\t// TODO: html => md with turndown\n\tconst msg = email.html\n\t\t? stripHtml(email.html, {\n\t\t\t\tdumpLinkHrefsNearby: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tputOnNewLine: false,\n\t\t\t\t\twrapHeads: '(',\n\t\t\t\t\twrapTails: ')',\n\t\t\t\t},\n\t\t\t\tskipHtmlDecoding: false,\n\t\t  }).result\n\t\t: email.text || '';\n\n\tconst rid = room?._id ?? Random.id();\n\tconst msgId = Random.id();\n\n\tLivechatTyped.sendMessage({\n\t\tguest,\n\t\tmessage: {\n\t\t\t_id: msgId,\n\t\t\tgroupable: false,\n\t\t\tmsg,\n\t\t\ttoken: guest.token,\n\t\t\tattachments: [\n\t\t\t\t{\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\t\ttext: t('Reply_via_Email'),\n\t\t\t\t\t\t\tmsg: 'msg',\n\t\t\t\t\t\t\tmsgId,\n\t\t\t\t\t\t\tmsg_in_chat_window: true,\n\t\t\t\t\t\t\tmsg_processing_type: 'respondWithQuotedMessage',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t\tblocks: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'context',\n\t\t\t\t\telements: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\t\ttext: `**${t('From')}:** ${email.from.text}\\n**${t('Subject')}:** ${email.subject}`,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'section',\n\t\t\t\t\ttext: {\n\t\t\t\t\t\ttype: 'mrkdwn',\n\t\t\t\t\t\ttext: msg,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\trid,\n\t\t\temail: {\n\t\t\t\tthread,\n\t\t\t\tmessageId: email.messageId,\n\t\t\t},\n\t\t},\n\t\troomInfo: {\n\t\t\temail: {\n\t\t\t\tinbox,\n\t\t\t\tthread,\n\t\t\t\treplyTo: email.from.value[0].address,\n\t\t\t\tsubject: email.subject,\n\t\t\t},\n\t\t\tsource: {\n\t\t\t\ttype: OmnichannelSourceType.EMAIL,\n\t\t\t\tid: inbox,\n\t\t\t\talias: 'email-inbox',\n\t\t\t},\n\t\t},\n\t\tagent: undefined,\n\t})\n\t\t.then(async () => {\n\t\t\tif (!email.attachments.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst attachments = [];\n\t\t\tfor await (const attachment of email.attachments) {\n\t\t\t\tif (attachment.type !== 'attachment') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tattachments.push(await uploadAttachment(attachment, rid, guest.token));\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.error({ msg: 'Error uploading attachment from email', err });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait Messages.updateOne(\n\t\t\t\t{ _id: msgId },\n\t\t\t\t{\n\t\t\t\t\t$addToSet: {\n\t\t\t\t\t\tattachments: {\n\t\t\t\t\t\t\t$each: attachments,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t\troom && (await LivechatRooms.updateEmailThreadByRoomId(room._id, thread));\n\t\t\tvoid notifyOnMessageChange({\n\t\t\t\tid: msgId,\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tlogger.error({\n\t\t\t\tmsg: 'Error receiving email',\n\t\t\t\terr,\n\t\t\t});\n\t\t});\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"42824a487723e6015375a417b1ebf29b81090ef6"}
