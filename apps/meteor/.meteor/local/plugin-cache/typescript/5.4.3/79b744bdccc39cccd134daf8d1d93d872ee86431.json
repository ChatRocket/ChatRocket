{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/lists/RecordList.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"client/lib/lists/RecordList.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/lists/RecordList.ts","inputSourceMap":{"version":3,"file":"client/lib/lists/RecordList.ts","sourceRoot":"","sources":["client/lib/lists/RecordList.ts"],"names":[],"mappings":"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","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\n\nimport { AsyncStatePhase } from '../asyncState';\n\nexport type RecordListBatchChanges<T> = {\n\titems?: T[];\n\titemCount?: number;\n};\n\nexport class RecordList<T extends { _id: string; _updatedAt?: Date }> extends Emitter {\n\t#hasChanges = false;\n\n\t#index = new Map<T['_id'], T>();\n\n\t#phase: AsyncStatePhase.LOADING | AsyncStatePhase.UPDATING | AsyncStatePhase.RESOLVED = AsyncStatePhase.LOADING;\n\n\t#items: T[] | undefined = undefined;\n\n\t#itemCount: number | undefined = undefined;\n\n\tprotected filter(_item: T): boolean {\n\t\treturn true;\n\t}\n\n\tprotected compare(a: T, b: T): number {\n\t\tconst aUpdatedAt = typeof a._updatedAt === 'string' ? new Date(a._updatedAt) : a._updatedAt;\n\t\tconst bUpdatedAt = typeof b._updatedAt === 'string' ? new Date(b._updatedAt) : b._updatedAt;\n\t\treturn (bUpdatedAt?.getTime() ?? -1) - (aUpdatedAt?.getTime() ?? -1);\n\t}\n\n\tpublic get phase(): AsyncStatePhase {\n\t\treturn this.#phase;\n\t}\n\n\tpublic get items(): T[] {\n\t\tif (!this.#items) {\n\t\t\tthis.#items = Array.from(this.#index.values()).sort(this.compare);\n\t\t}\n\n\t\treturn this.#items;\n\t}\n\n\tpublic get itemCount(): number {\n\t\treturn this.#itemCount ?? this.#index.size;\n\t}\n\n\tprivate insert(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/inserted`, item);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount++;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate update(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/updated`, item);\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate delete(_id: T['_id']): void {\n\t\tthis.#index.delete(_id);\n\t\tthis.emit(`${_id}/deleted`);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount--;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate push(item: T): void {\n\t\tconst exists = this.#index.has(item._id);\n\t\tconst valid = this.filter(item);\n\n\t\tif (exists && !valid) {\n\t\t\tthis.delete(item._id);\n\t\t\treturn;\n\t\t}\n\n\t\tif (exists && valid) {\n\t\t\tthis.update(item);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!exists && valid) {\n\t\t\tthis.insert(item);\n\t\t}\n\t}\n\n\t#pedingMutation: Promise<void> = Promise.resolve();\n\n\tprotected async mutate(mutation: () => void | Promise<void>): Promise<void> {\n\t\ttry {\n\t\t\tif (this.#phase === AsyncStatePhase.RESOLVED) {\n\t\t\t\tthis.#phase = AsyncStatePhase.UPDATING;\n\t\t\t\tthis.emit('mutating');\n\t\t\t}\n\n\t\t\tthis.#pedingMutation = this.#pedingMutation.then(mutation);\n\t\t\tawait this.#pedingMutation;\n\t\t} catch (error) {\n\t\t\tthis.emit('errored', error);\n\t\t} finally {\n\t\t\tconst hasChanged = this.#hasChanges;\n\t\t\tthis.#phase = AsyncStatePhase.RESOLVED;\n\t\t\tif (hasChanged) {\n\t\t\t\tthis.#items = undefined;\n\t\t\t\tthis.#hasChanges = false;\n\t\t\t}\n\t\t\tthis.emit('mutated', hasChanged);\n\t\t}\n\t}\n\n\tpublic batchHandle(getInfo: () => Promise<RecordListBatchChanges<T>>): Promise<void> {\n\t\treturn this.mutate(async () => {\n\t\t\tconst info = await getInfo();\n\n\t\t\tif (info.items) {\n\t\t\t\tfor (const item of info.items) {\n\t\t\t\t\tthis.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (info.itemCount) {\n\t\t\t\tthis.#itemCount = info.itemCount;\n\t\t\t\tthis.#hasChanges = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic prune(matchCriteria: (item: T) => boolean): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tfor (const item of this.#index.values()) {\n\t\t\t\tif (matchCriteria(item)) {\n\t\t\t\t\tthis.delete(item._id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic handle(item: T): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tthis.push(item);\n\t\t});\n\t}\n\n\tpublic remove(_id: T['_id']): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (!this.#index.has(_id)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.delete(_id);\n\t\t});\n\t}\n\n\tpublic clear(): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (this.#index.size === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#index.clear();\n\t\t\tthis.#items = undefined;\n\t\t\tthis.#itemCount = undefined;\n\t\t\tthis.#hasChanges = true;\n\t\t\tthis.emit('cleared');\n\t\t});\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/client/lib/lists/RecordList.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/lib/lists/RecordList.ts","inputSourceMap":{"version":3,"file":"client/lib/lists/RecordList.ts","sourceRoot":"","sources":["client/lib/lists/RecordList.ts"],"names":[],"mappings":"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","sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\n\nimport { AsyncStatePhase } from '../asyncState';\n\nexport type RecordListBatchChanges<T> = {\n\titems?: T[];\n\titemCount?: number;\n};\n\nexport class RecordList<T extends { _id: string; _updatedAt?: Date }> extends Emitter {\n\t#hasChanges = false;\n\n\t#index = new Map<T['_id'], T>();\n\n\t#phase: AsyncStatePhase.LOADING | AsyncStatePhase.UPDATING | AsyncStatePhase.RESOLVED = AsyncStatePhase.LOADING;\n\n\t#items: T[] | undefined = undefined;\n\n\t#itemCount: number | undefined = undefined;\n\n\tprotected filter(_item: T): boolean {\n\t\treturn true;\n\t}\n\n\tprotected compare(a: T, b: T): number {\n\t\tconst aUpdatedAt = typeof a._updatedAt === 'string' ? new Date(a._updatedAt) : a._updatedAt;\n\t\tconst bUpdatedAt = typeof b._updatedAt === 'string' ? new Date(b._updatedAt) : b._updatedAt;\n\t\treturn (bUpdatedAt?.getTime() ?? -1) - (aUpdatedAt?.getTime() ?? -1);\n\t}\n\n\tpublic get phase(): AsyncStatePhase {\n\t\treturn this.#phase;\n\t}\n\n\tpublic get items(): T[] {\n\t\tif (!this.#items) {\n\t\t\tthis.#items = Array.from(this.#index.values()).sort(this.compare);\n\t\t}\n\n\t\treturn this.#items;\n\t}\n\n\tpublic get itemCount(): number {\n\t\treturn this.#itemCount ?? this.#index.size;\n\t}\n\n\tprivate insert(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/inserted`, item);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount++;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate update(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/updated`, item);\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate delete(_id: T['_id']): void {\n\t\tthis.#index.delete(_id);\n\t\tthis.emit(`${_id}/deleted`);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount--;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate push(item: T): void {\n\t\tconst exists = this.#index.has(item._id);\n\t\tconst valid = this.filter(item);\n\n\t\tif (exists && !valid) {\n\t\t\tthis.delete(item._id);\n\t\t\treturn;\n\t\t}\n\n\t\tif (exists && valid) {\n\t\t\tthis.update(item);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!exists && valid) {\n\t\t\tthis.insert(item);\n\t\t}\n\t}\n\n\t#pedingMutation: Promise<void> = Promise.resolve();\n\n\tprotected async mutate(mutation: () => void | Promise<void>): Promise<void> {\n\t\ttry {\n\t\t\tif (this.#phase === AsyncStatePhase.RESOLVED) {\n\t\t\t\tthis.#phase = AsyncStatePhase.UPDATING;\n\t\t\t\tthis.emit('mutating');\n\t\t\t}\n\n\t\t\tthis.#pedingMutation = this.#pedingMutation.then(mutation);\n\t\t\tawait this.#pedingMutation;\n\t\t} catch (error) {\n\t\t\tthis.emit('errored', error);\n\t\t} finally {\n\t\t\tconst hasChanged = this.#hasChanges;\n\t\t\tthis.#phase = AsyncStatePhase.RESOLVED;\n\t\t\tif (hasChanged) {\n\t\t\t\tthis.#items = undefined;\n\t\t\t\tthis.#hasChanges = false;\n\t\t\t}\n\t\t\tthis.emit('mutated', hasChanged);\n\t\t}\n\t}\n\n\tpublic batchHandle(getInfo: () => Promise<RecordListBatchChanges<T>>): Promise<void> {\n\t\treturn this.mutate(async () => {\n\t\t\tconst info = await getInfo();\n\n\t\t\tif (info.items) {\n\t\t\t\tfor (const item of info.items) {\n\t\t\t\t\tthis.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (info.itemCount) {\n\t\t\t\tthis.#itemCount = info.itemCount;\n\t\t\t\tthis.#hasChanges = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic prune(matchCriteria: (item: T) => boolean): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tfor (const item of this.#index.values()) {\n\t\t\t\tif (matchCriteria(item)) {\n\t\t\t\t\tthis.delete(item._id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic handle(item: T): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tthis.push(item);\n\t\t});\n\t}\n\n\tpublic remove(_id: T['_id']): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (!this.#index.has(_id)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.delete(_id);\n\t\t});\n\t}\n\n\tpublic clear(): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (this.#index.size === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#index.clear();\n\t\t\tthis.#items = undefined;\n\t\t\tthis.#itemCount = undefined;\n\t\t\tthis.#hasChanges = true;\n\t\t\tthis.emit('cleared');\n\t\t});\n\t}\n}\n"]}}},"code":"let _classPrivateFieldLooseBase;\nmodule.link(\"@babel/runtime/helpers/classPrivateFieldLooseBase\", {\n  default(v) {\n    _classPrivateFieldLooseBase = v;\n  }\n}, 0);\nlet _classPrivateFieldLooseKey;\nmodule.link(\"@babel/runtime/helpers/classPrivateFieldLooseKey\", {\n  default(v) {\n    _classPrivateFieldLooseKey = v;\n  }\n}, 1);\nmodule.export({\n  RecordList: () => RecordList\n});\nlet Emitter;\nmodule.link(\"@rocket.chat/emitter\", {\n  Emitter(v) {\n    Emitter = v;\n  }\n}, 0);\nlet AsyncStatePhase;\nmodule.link(\"../asyncState\", {\n  AsyncStatePhase(v) {\n    AsyncStatePhase = v;\n  }\n}, 1);\nvar _hasChanges = /*#__PURE__*/_classPrivateFieldLooseKey(\"hasChanges\");\nvar _index = /*#__PURE__*/_classPrivateFieldLooseKey(\"index\");\nvar _phase = /*#__PURE__*/_classPrivateFieldLooseKey(\"phase\");\nvar _items = /*#__PURE__*/_classPrivateFieldLooseKey(\"items\");\nvar _itemCount = /*#__PURE__*/_classPrivateFieldLooseKey(\"itemCount\");\nvar _pedingMutation = /*#__PURE__*/_classPrivateFieldLooseKey(\"pedingMutation\");\nclass RecordList extends Emitter {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, _hasChanges, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _index, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _phase, {\n      writable: true,\n      value: AsyncStatePhase.LOADING\n    });\n    Object.defineProperty(this, _items, {\n      writable: true,\n      value: undefined\n    });\n    Object.defineProperty(this, _itemCount, {\n      writable: true,\n      value: undefined\n    });\n    Object.defineProperty(this, _pedingMutation, {\n      writable: true,\n      value: Promise.resolve()\n    });\n  }\n  filter(_item) {\n    return true;\n  }\n  compare(a, b) {\n    var _bUpdatedAt$getTime, _aUpdatedAt$getTime;\n    const aUpdatedAt = typeof a._updatedAt === 'string' ? new Date(a._updatedAt) : a._updatedAt;\n    const bUpdatedAt = typeof b._updatedAt === 'string' ? new Date(b._updatedAt) : b._updatedAt;\n    return ((_bUpdatedAt$getTime = bUpdatedAt === null || bUpdatedAt === void 0 ? void 0 : bUpdatedAt.getTime()) !== null && _bUpdatedAt$getTime !== void 0 ? _bUpdatedAt$getTime : -1) - ((_aUpdatedAt$getTime = aUpdatedAt === null || aUpdatedAt === void 0 ? void 0 : aUpdatedAt.getTime()) !== null && _aUpdatedAt$getTime !== void 0 ? _aUpdatedAt$getTime : -1);\n  }\n  get phase() {\n    return _classPrivateFieldLooseBase(this, _phase)[_phase];\n  }\n  get items() {\n    if (!_classPrivateFieldLooseBase(this, _items)[_items]) {\n      _classPrivateFieldLooseBase(this, _items)[_items] = Array.from(_classPrivateFieldLooseBase(this, _index)[_index].values()).sort(this.compare);\n    }\n    return _classPrivateFieldLooseBase(this, _items)[_items];\n  }\n  get itemCount() {\n    var _classPrivateFieldLoo;\n    return (_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _itemCount)[_itemCount]) !== null && _classPrivateFieldLoo !== void 0 ? _classPrivateFieldLoo : _classPrivateFieldLooseBase(this, _index)[_index].size;\n  }\n  insert(item) {\n    _classPrivateFieldLooseBase(this, _index)[_index].set(item._id, item);\n    this.emit(\"\".concat(item._id, \"/inserted\"), item);\n    if (typeof _classPrivateFieldLooseBase(this, _itemCount)[_itemCount] === 'number') {\n      _classPrivateFieldLooseBase(this, _itemCount)[_itemCount]++;\n    }\n    _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = true;\n  }\n  update(item) {\n    _classPrivateFieldLooseBase(this, _index)[_index].set(item._id, item);\n    this.emit(\"\".concat(item._id, \"/updated\"), item);\n    _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = true;\n  }\n  delete(_id) {\n    _classPrivateFieldLooseBase(this, _index)[_index].delete(_id);\n    this.emit(\"\".concat(_id, \"/deleted\"));\n    if (typeof _classPrivateFieldLooseBase(this, _itemCount)[_itemCount] === 'number') {\n      _classPrivateFieldLooseBase(this, _itemCount)[_itemCount]--;\n    }\n    _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = true;\n  }\n  push(item) {\n    const exists = _classPrivateFieldLooseBase(this, _index)[_index].has(item._id);\n    const valid = this.filter(item);\n    if (exists && !valid) {\n      this.delete(item._id);\n      return;\n    }\n    if (exists && valid) {\n      this.update(item);\n      return;\n    }\n    if (!exists && valid) {\n      this.insert(item);\n    }\n  }\n  async mutate(mutation) {\n    try {\n      if (_classPrivateFieldLooseBase(this, _phase)[_phase] === AsyncStatePhase.RESOLVED) {\n        _classPrivateFieldLooseBase(this, _phase)[_phase] = AsyncStatePhase.UPDATING;\n        this.emit('mutating');\n      }\n      _classPrivateFieldLooseBase(this, _pedingMutation)[_pedingMutation] = _classPrivateFieldLooseBase(this, _pedingMutation)[_pedingMutation].then(mutation);\n      await _classPrivateFieldLooseBase(this, _pedingMutation)[_pedingMutation];\n    } catch (error) {\n      this.emit('errored', error);\n    } finally {\n      const hasChanged = _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges];\n      _classPrivateFieldLooseBase(this, _phase)[_phase] = AsyncStatePhase.RESOLVED;\n      if (hasChanged) {\n        _classPrivateFieldLooseBase(this, _items)[_items] = undefined;\n        _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = false;\n      }\n      this.emit('mutated', hasChanged);\n    }\n  }\n  batchHandle(getInfo) {\n    return this.mutate(async () => {\n      const info = await getInfo();\n      if (info.items) {\n        for (const item of info.items) {\n          this.push(item);\n        }\n      }\n      if (info.itemCount) {\n        _classPrivateFieldLooseBase(this, _itemCount)[_itemCount] = info.itemCount;\n        _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = true;\n      }\n    });\n  }\n  prune(matchCriteria) {\n    return this.mutate(() => {\n      for (const item of _classPrivateFieldLooseBase(this, _index)[_index].values()) {\n        if (matchCriteria(item)) {\n          this.delete(item._id);\n        }\n      }\n    });\n  }\n  handle(item) {\n    return this.mutate(() => {\n      this.push(item);\n    });\n  }\n  remove(_id) {\n    return this.mutate(() => {\n      if (!_classPrivateFieldLooseBase(this, _index)[_index].has(_id)) {\n        return;\n      }\n      this.delete(_id);\n    });\n  }\n  clear() {\n    return this.mutate(() => {\n      if (_classPrivateFieldLooseBase(this, _index)[_index].size === 0) {\n        return;\n      }\n      _classPrivateFieldLooseBase(this, _index)[_index].clear();\n      _classPrivateFieldLooseBase(this, _items)[_items] = undefined;\n      _classPrivateFieldLooseBase(this, _itemCount)[_itemCount] = undefined;\n      _classPrivateFieldLooseBase(this, _hasChanges)[_hasChanges] = true;\n      this.emit('cleared');\n    });\n  }\n}","map":{"version":3,"names":["_classPrivateFieldLooseBase","module","link","default","v","_classPrivateFieldLooseKey","export","RecordList","Emitter","AsyncStatePhase","_hasChanges","_index","_phase","_items","_itemCount","_pedingMutation","constructor","arguments","Object","defineProperty","writable","value","Map","LOADING","undefined","Promise","resolve","filter","_item","compare","a","b","_bUpdatedAt$getTime","_aUpdatedAt$getTime","aUpdatedAt","_updatedAt","Date","bUpdatedAt","getTime","phase","items","Array","from","values","sort","itemCount","_classPrivateFieldLoo","size","insert","item","set","_id","emit","concat","update","delete","push","exists","has","valid","mutate","mutation","RESOLVED","UPDATING","then","error","hasChanged","batchHandle","getInfo","info","prune","matchCriteria","handle","remove","clear"],"sources":["client/lib/lists/RecordList.ts"],"sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\n\nimport { AsyncStatePhase } from '../asyncState';\n\nexport type RecordListBatchChanges<T> = {\n\titems?: T[];\n\titemCount?: number;\n};\n\nexport class RecordList<T extends { _id: string; _updatedAt?: Date }> extends Emitter {\n\t#hasChanges = false;\n\n\t#index = new Map<T['_id'], T>();\n\n\t#phase: AsyncStatePhase.LOADING | AsyncStatePhase.UPDATING | AsyncStatePhase.RESOLVED = AsyncStatePhase.LOADING;\n\n\t#items: T[] | undefined = undefined;\n\n\t#itemCount: number | undefined = undefined;\n\n\tprotected filter(_item: T): boolean {\n\t\treturn true;\n\t}\n\n\tprotected compare(a: T, b: T): number {\n\t\tconst aUpdatedAt = typeof a._updatedAt === 'string' ? new Date(a._updatedAt) : a._updatedAt;\n\t\tconst bUpdatedAt = typeof b._updatedAt === 'string' ? new Date(b._updatedAt) : b._updatedAt;\n\t\treturn (bUpdatedAt?.getTime() ?? -1) - (aUpdatedAt?.getTime() ?? -1);\n\t}\n\n\tpublic get phase(): AsyncStatePhase {\n\t\treturn this.#phase;\n\t}\n\n\tpublic get items(): T[] {\n\t\tif (!this.#items) {\n\t\t\tthis.#items = Array.from(this.#index.values()).sort(this.compare);\n\t\t}\n\n\t\treturn this.#items;\n\t}\n\n\tpublic get itemCount(): number {\n\t\treturn this.#itemCount ?? this.#index.size;\n\t}\n\n\tprivate insert(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/inserted`, item);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount++;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate update(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/updated`, item);\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate delete(_id: T['_id']): void {\n\t\tthis.#index.delete(_id);\n\t\tthis.emit(`${_id}/deleted`);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount--;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate push(item: T): void {\n\t\tconst exists = this.#index.has(item._id);\n\t\tconst valid = this.filter(item);\n\n\t\tif (exists && !valid) {\n\t\t\tthis.delete(item._id);\n\t\t\treturn;\n\t\t}\n\n\t\tif (exists && valid) {\n\t\t\tthis.update(item);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!exists && valid) {\n\t\t\tthis.insert(item);\n\t\t}\n\t}\n\n\t#pedingMutation: Promise<void> = Promise.resolve();\n\n\tprotected async mutate(mutation: () => void | Promise<void>): Promise<void> {\n\t\ttry {\n\t\t\tif (this.#phase === AsyncStatePhase.RESOLVED) {\n\t\t\t\tthis.#phase = AsyncStatePhase.UPDATING;\n\t\t\t\tthis.emit('mutating');\n\t\t\t}\n\n\t\t\tthis.#pedingMutation = this.#pedingMutation.then(mutation);\n\t\t\tawait this.#pedingMutation;\n\t\t} catch (error) {\n\t\t\tthis.emit('errored', error);\n\t\t} finally {\n\t\t\tconst hasChanged = this.#hasChanges;\n\t\t\tthis.#phase = AsyncStatePhase.RESOLVED;\n\t\t\tif (hasChanged) {\n\t\t\t\tthis.#items = undefined;\n\t\t\t\tthis.#hasChanges = false;\n\t\t\t}\n\t\t\tthis.emit('mutated', hasChanged);\n\t\t}\n\t}\n\n\tpublic batchHandle(getInfo: () => Promise<RecordListBatchChanges<T>>): Promise<void> {\n\t\treturn this.mutate(async () => {\n\t\t\tconst info = await getInfo();\n\n\t\t\tif (info.items) {\n\t\t\t\tfor (const item of info.items) {\n\t\t\t\t\tthis.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (info.itemCount) {\n\t\t\t\tthis.#itemCount = info.itemCount;\n\t\t\t\tthis.#hasChanges = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic prune(matchCriteria: (item: T) => boolean): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tfor (const item of this.#index.values()) {\n\t\t\t\tif (matchCriteria(item)) {\n\t\t\t\t\tthis.delete(item._id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic handle(item: T): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tthis.push(item);\n\t\t});\n\t}\n\n\tpublic remove(_id: T['_id']): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (!this.#index.has(_id)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.delete(_id);\n\t\t});\n\t}\n\n\tpublic clear(): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (this.#index.size === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#index.clear();\n\t\t\tthis.#items = undefined;\n\t\t\tthis.#itemCount = undefined;\n\t\t\tthis.#hasChanges = true;\n\t\t\tthis.emit('cleared');\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"79b744bdccc39cccd134daf8d1d93d872ee86431"}
