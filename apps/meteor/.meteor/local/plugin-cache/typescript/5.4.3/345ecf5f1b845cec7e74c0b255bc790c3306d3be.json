{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/service.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"server/services/federation/service.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/service.ts","inputSourceMap":{"version":3,"file":"server/services/federation/service.ts","sourceRoot":"","sources":["server/services/federation/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { IncomingMessage } from 'node:http';\nimport { URL } from 'node:url';\n\nimport { ServiceClassInternal } from '@rocket.chat/core-services';\nimport type { IFederationService, FederationConfigurationStatus } from '@rocket.chat/core-services';\nimport { isRoomFederated, type IRoom } from '@rocket.chat/core-typings';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\n\nimport type { FederationRoomServiceSender } from './application/room/sender/RoomServiceSender';\nimport type { FederationUserServiceSender } from './application/user/sender/UserServiceSender';\nimport type { IFederationBridge } from './domain/IFederationBridge';\nimport { FederationFactory } from './infrastructure/Factory';\nimport type { InMemoryQueue } from './infrastructure/queue/InMemoryQueue';\nimport type { RocketChatFileAdapter } from './infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatMessageAdapter } from './infrastructure/rocket-chat/adapters/Message';\nimport type { RocketChatNotificationAdapter } from './infrastructure/rocket-chat/adapters/Notification';\nimport type { RocketChatRoomAdapter } from './infrastructure/rocket-chat/adapters/Room';\nimport type { RocketChatSettingsAdapter } from './infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from './infrastructure/rocket-chat/adapters/User';\nimport { federationServiceLogger } from './infrastructure/rocket-chat/adapters/logger';\nimport { FederationRoomSenderConverter } from './infrastructure/rocket-chat/converters/RoomSender';\nimport { FederationHooks } from './infrastructure/rocket-chat/hooks';\nimport './infrastructure/rocket-chat/well-known';\nimport { throwIfFederationNotEnabledOrNotReady } from './utils';\n\nfunction extractError(e: unknown) {\n\tif (e instanceof Error || (typeof e === 'object' && e && 'toString' in e)) {\n\t\tif ('name' in e && e.name === 'AbortError') {\n\t\t\treturn 'Operation timed out';\n\t\t}\n\n\t\treturn e.toString();\n\t}\n\n\tfederationServiceLogger.error(e);\n\n\treturn 'Unknown error';\n}\n\n// for airgapped deployments, use environment variable to override a local instance of federationtester\nconst federationTesterHost = process.env.FEDERATION_TESTER_HOST?.trim()?.replace(/\\/$/, '') || 'https://federationtester.matrix.org';\n\nexport abstract class AbstractFederationService extends ServiceClassInternal {\n\tprivate cancelSettingsObserver: () => void;\n\n\tprivate internalQueueInstance: InMemoryQueue;\n\n\tprivate internalSettingsAdapter: RocketChatSettingsAdapter;\n\n\tprivate internalRoomServiceSender: FederationRoomServiceSender;\n\n\tprivate internalUserServiceSender: FederationUserServiceSender;\n\n\tprivate internalRoomAdapter: RocketChatRoomAdapter;\n\n\tprivate internalUserAdapter: RocketChatUserAdapter;\n\n\tprivate internalFileAdapter: RocketChatFileAdapter;\n\n\tprivate internalMessageAdapter: RocketChatMessageAdapter;\n\n\tprivate internalNotificationAdapter: RocketChatNotificationAdapter;\n\n\tprivate isRunning = false;\n\n\tprotected PROCESSING_CONCURRENCY = 1;\n\n\tprotected bridge: IFederationBridge;\n\n\tprotected abstract setupInternalEphemeralListeners(): Promise<void>;\n\n\tprotected abstract setupInternalValidators(): Promise<void>;\n\n\tprotected abstract setupInternalActionListeners(): Promise<void>;\n\n\tprotected abstract onEnableFederation(): Promise<void>;\n\n\tprotected abstract onDisableFederation(): Promise<void>;\n\n\tconstructor(\n\t\tfederationBridge: IFederationBridge,\n\t\tinternalQueueInstance: InMemoryQueue,\n\t\tinternalSettingsAdapter: RocketChatSettingsAdapter,\n\t) {\n\t\tsuper();\n\t\tthis.internalQueueInstance = internalQueueInstance;\n\t\tthis.internalSettingsAdapter = internalSettingsAdapter;\n\t\tthis.bridge = federationBridge;\n\t\tthis.internalFileAdapter = FederationFactory.buildInternalFileAdapter();\n\t\tthis.internalRoomAdapter = FederationFactory.buildInternalRoomAdapter();\n\t\tthis.internalUserAdapter = FederationFactory.buildInternalUserAdapter();\n\t\tthis.internalMessageAdapter = FederationFactory.buildInternalMessageAdapter();\n\t\tthis.internalNotificationAdapter = FederationFactory.buildInternalNotificationAdapter();\n\t\tthis.internalRoomServiceSender = FederationFactory.buildRoomServiceSender(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalMessageAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.internalNotificationAdapter,\n\t\t\tthis.bridge,\n\t\t);\n\t\tthis.internalUserServiceSender = FederationFactory.buildUserServiceSender(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.bridge,\n\t\t);\n\t\tthis.setEventListeners();\n\t}\n\n\tprivate setEventListeners(): void {\n\t\tthis.onEvent('user.avatarUpdate', async ({ username }): Promise<void> => {\n\t\t\tif (!this.isFederationEnabled()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!username) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait this.internalUserServiceSender.afterUserAvatarChanged(username);\n\t\t});\n\t\tthis.onEvent('user.typing', async ({ isTyping, roomId, user: { username } }): Promise<void> => {\n\t\t\tif (!roomId || !username) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.internalUserServiceSender.onUserTyping(username, roomId, isTyping);\n\t\t});\n\t\tthis.onEvent('user.realNameChanged', async ({ _id, name }): Promise<void> => {\n\t\t\tif (!this.isFederationEnabled()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!name || !_id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait this.internalUserServiceSender.afterUserRealNameChanged(_id, name);\n\t\t});\n\t\tthis.onEvent(\n\t\t\t'federation.userRoleChanged',\n\t\t\tasync (data: Record<string, any>): Promise<void> => FederationHooks.afterRoomRoleChanged(this.internalRoomServiceSender, data),\n\t\t);\n\t}\n\n\tprivate async onFederationEnabledSettingChange(isFederationEnabled: boolean): Promise<void> {\n\t\tif (!this.isRunning) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isFederationEnabled) {\n\t\t\tawait this.onDisableFederation();\n\t\t\tawait this.onEnableFederation();\n\t\t\tawait this.verifyConfiguration();\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.onDisableFederation();\n\t}\n\n\tpublic async initialize() {\n\t\tthis.internalSettingsAdapter = FederationFactory.buildInternalSettingsAdapter();\n\t\tawait this.internalSettingsAdapter.initialize();\n\t\tthis.cancelSettingsObserver = this.internalSettingsAdapter.onFederationEnabledStatusChanged(\n\t\t\tthis.onFederationEnabledSettingChange.bind(this),\n\t\t);\n\t}\n\n\tprivate async noop(): Promise<void> {\n\t\t// noop\n\t}\n\n\tprivate async setupEventHandlersForExternalEvents(): Promise<void> {\n\t\tconst federationRoomServiceReceiver = FederationFactory.buildRoomServiceReceiver(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalMessageAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.internalNotificationAdapter,\n\t\t\tthis.internalQueueInstance,\n\t\t\tthis.bridge,\n\t\t);\n\t\tconst federationMessageServiceReceiver = FederationFactory.buildMessageServiceReceiver(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalMessageAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.bridge,\n\t\t);\n\t\tconst federationUserServiceReceiver = FederationFactory.buildUserServiceReceiver(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalNotificationAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.bridge,\n\t\t);\n\t\tconst federationEventsHandler = FederationFactory.buildFederationEventHandler(\n\t\t\tfederationRoomServiceReceiver,\n\t\t\tfederationMessageServiceReceiver,\n\t\t\tfederationUserServiceReceiver,\n\t\t\tthis.internalSettingsAdapter,\n\t\t);\n\t\tthis.internalQueueInstance.setHandler(federationEventsHandler.handleEvent.bind(federationEventsHandler), this.PROCESSING_CONCURRENCY);\n\t}\n\n\tprivate canOtherHomeserversFederate(): Promise<boolean> {\n\t\tconst url = new URL(`https://${this.internalSettingsAdapter.getHomeServerDomain()}`);\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t\tfetch(`${federationTesterHost}/api/federation-ok?server_name=${url.host}`)\n\t\t\t\t.then((response) => response.text())\n\t\t\t\t.then((text) => resolve(text === 'GOOD'))\n\t\t\t\t.catch(reject),\n\t\t);\n\t}\n\n\tprotected getInternalSettingsAdapter(): RocketChatSettingsAdapter {\n\t\treturn this.internalSettingsAdapter;\n\t}\n\n\tprotected getInternalRoomServiceSender(): FederationRoomServiceSender {\n\t\treturn this.internalRoomServiceSender;\n\t}\n\n\tprotected getInternalUserServiceSender(): FederationUserServiceSender {\n\t\treturn this.internalUserServiceSender;\n\t}\n\n\tprotected getInternalRoomAdapter(): RocketChatRoomAdapter {\n\t\treturn this.internalRoomAdapter;\n\t}\n\n\tprotected getInternalUserAdapter(): RocketChatUserAdapter {\n\t\treturn this.internalUserAdapter;\n\t}\n\n\tprotected getInternalMessageAdapter(): RocketChatMessageAdapter {\n\t\treturn this.internalMessageAdapter;\n\t}\n\n\tprotected getInternalNotificationAdapter(): RocketChatNotificationAdapter {\n\t\treturn this.internalNotificationAdapter;\n\t}\n\n\tprotected getInternalFileAdapter(): RocketChatFileAdapter {\n\t\treturn this.internalFileAdapter;\n\t}\n\n\tprotected isFederationEnabled(): boolean {\n\t\treturn this.internalSettingsAdapter.isFederationEnabled();\n\t}\n\n\tprotected async setupFederation(): Promise<void> {\n\t\tif (this.isFederationEnabled()) {\n\t\t\tawait this.setupEventHandlersForExternalEvents();\n\t\t\tawait this.setupInternalValidators();\n\t\t\tawait this.setupInternalActionListeners();\n\t\t\tawait this.setupInternalEphemeralListeners();\n\t\t}\n\t\tthis.isRunning = true;\n\t}\n\n\tprotected async cleanUpSettingObserver(): Promise<void> {\n\t\tthis.cancelSettingsObserver();\n\t\tthis.isRunning = false;\n\t}\n\n\tprotected async cleanUpHandlers(): Promise<void> {\n\t\tthis.internalQueueInstance.setHandler(this.noop.bind(this), this.PROCESSING_CONCURRENCY);\n\t}\n\n\tprotected async verifyMatrixIds(matrixIds: string[]): Promise<Map<string, string>> {\n\t\treturn this.bridge.verifyInviteeIds(matrixIds);\n\t}\n\n\tpublic async configurationStatus(): Promise<FederationConfigurationStatus> {\n\t\tconst status: FederationConfigurationStatus = {\n\t\t\tappservice: {\n\t\t\t\troundTrip: { durationMs: -1 },\n\t\t\t\tok: false,\n\t\t\t},\n\t\t\texternalReachability: {\n\t\t\t\tok: false,\n\t\t\t},\n\t\t};\n\n\t\ttry {\n\t\t\tconst pingResponse = await this.bridge.ping();\n\t\t\tstatus.appservice.roundTrip.durationMs = pingResponse.durationMs;\n\t\t\tstatus.appservice.ok = true;\n\t\t} catch (error) {\n\t\t\tif (error instanceof IncomingMessage) {\n\t\t\t\tif (error.statusCode === 404) {\n\t\t\t\t\tstatus.appservice.error = 'homeserver version must be >=1.84.x';\n\t\t\t\t} else {\n\t\t\t\t\tstatus.appservice.error = `received unknown status from homeserver, message: ${error.statusMessage}`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstatus.appservice.error = extractError(error);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tstatus.externalReachability.ok = await this.canOtherHomeserversFederate();\n\t\t} catch (error) {\n\t\t\tstatus.externalReachability.error = extractError(error);\n\t\t}\n\n\t\treturn status;\n\t}\n\n\tpublic async markConfigurationValid(): Promise<void> {\n\t\treturn this.internalSettingsAdapter.setConfigurationStatus('Valid');\n\t}\n\n\tpublic async markConfigurationInvalid(): Promise<void> {\n\t\treturn this.internalSettingsAdapter.setConfigurationStatus('Invalid');\n\t}\n\n\tpublic async verifyConfiguration(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.bridge?.ping(); // throws error if fails\n\n\t\t\tif (!(await this.canOtherHomeserversFederate())) {\n\t\t\t\tthrow new Error('External reachability could not be verified');\n\t\t\t}\n\n\t\t\tvoid this.markConfigurationValid();\n\t\t} catch (error) {\n\t\t\tfederationServiceLogger.error(error);\n\n\t\t\tvoid this.markConfigurationInvalid();\n\t\t}\n\t}\n\n\tpublic async beforeCreateRoom(room: Partial<IRoom>): Promise<void> {\n\t\tif (!isRoomFederated(room)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthrowIfFederationNotEnabledOrNotReady();\n\t}\n\n\tprotected async deactivateRemoteUser(remoteUserId: string): Promise<void> {\n\t\treturn this.bridge.deactivateUser(remoteUserId);\n\t}\n}\n\nabstract class AbstractBaseFederationService extends AbstractFederationService {\n\tconstructor() {\n\t\tconst internalQueueInstance = FederationFactory.buildFederationQueue();\n\t\tconst internalSettingsAdapter = FederationFactory.buildInternalSettingsAdapter();\n\t\tconst bridge = FederationFactory.buildFederationBridge(internalSettingsAdapter, internalQueueInstance);\n\n\t\tsuper(bridge, internalQueueInstance, internalSettingsAdapter);\n\t}\n\n\tprotected async setupInternalEphemeralListeners(): Promise<void> {\n\t\tawait this.getInternalNotificationAdapter().subscribeToUserTypingEventsOnFederatedRooms(\n\t\t\tthis.getInternalNotificationAdapter().broadcastUserTypingOnRoom.bind(this.getInternalNotificationAdapter()),\n\t\t);\n\t}\n\n\tprotected async setupInternalValidators(): Promise<void> {\n\t\tconst federationRoomInternalValidator = FederationFactory.buildRoomInternalValidator(\n\t\t\tthis.getInternalRoomAdapter(),\n\t\t\tthis.getInternalUserAdapter(),\n\t\t\tthis.getInternalFileAdapter(),\n\t\t\tthis.getInternalSettingsAdapter(),\n\t\t\tthis.bridge,\n\t\t);\n\t\tFederationFactory.setupValidators(federationRoomInternalValidator);\n\t}\n\n\tprotected async setupInternalActionListeners(): Promise<void> {\n\t\tconst federationMessageServiceSender = FederationFactory.buildMessageServiceSender(\n\t\t\tthis.getInternalRoomAdapter(),\n\t\t\tthis.getInternalUserAdapter(),\n\t\t\tthis.getInternalSettingsAdapter(),\n\t\t\tthis.getInternalMessageAdapter(),\n\t\t\tthis.bridge,\n\t\t);\n\t\tFederationFactory.setupListenersForLocalActions(this.getInternalRoomServiceSender(), federationMessageServiceSender);\n\t}\n\n\tprotected async onEnableFederation(): Promise<void> {\n\t\tawait super.setupFederation();\n\t\tawait this.startFederation();\n\t}\n\n\tprotected async onDisableFederation(): Promise<void> {\n\t\tawait this.stopFederation();\n\t}\n\n\tprivate async startFederation(): Promise<void> {\n\t\tif (!this.isFederationEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.bridge.start();\n\t\tthis.bridge.logFederationStartupInfo('Running Federation V2');\n\t\tawait import('./infrastructure/rocket-chat/slash-commands');\n\t}\n\n\tprivate async stopFederation(): Promise<void> {\n\t\tFederationFactory.removeAllListeners();\n\t\tawait this.bridge.stop();\n\t\tawait super.cleanUpHandlers();\n\t}\n\n\tpublic async stopped(): Promise<void> {\n\t\tawait this.stopFederation();\n\t\tawait super.cleanUpSettingObserver();\n\t}\n\n\tpublic async created(): Promise<void> {\n\t\tawait super.setupFederation();\n\t\tawait this.startFederation();\n\t}\n}\n\nexport class FederationService extends AbstractBaseFederationService implements IFederationService {\n\tprotected name = 'federation';\n\n\tpublic async createDirectMessageRoomAndInviteUser(\n\t\tinternalInviterId: string,\n\t\tinternalRoomId: string,\n\t\texternalInviteeId: string,\n\t): Promise<void> {\n\t\treturn this.getInternalRoomServiceSender().createDirectMessageRoomAndInviteUser(\n\t\t\tFederationRoomSenderConverter.toCreateDirectMessageRoomDto(internalInviterId, internalRoomId, externalInviteeId),\n\t\t);\n\t}\n\n\tpublic async verifyMatrixIds(matrixIds: string[]): Promise<Map<string, string>> {\n\t\treturn super.verifyMatrixIds(matrixIds);\n\t}\n\n\tstatic async createFederationService(): Promise<FederationService> {\n\t\tconst federationService = new FederationService();\n\t\tawait federationService.initialize();\n\t\treturn federationService;\n\t}\n\n\tpublic async stopped(): Promise<void> {\n\t\treturn super.stopped();\n\t}\n\n\tpublic async created(): Promise<void> {\n\t\treturn super.created();\n\t}\n\n\tpublic async verifyConfiguration(): Promise<void> {\n\t\treturn super.verifyConfiguration();\n\t}\n\n\tpublic async markConfigurationValid(): Promise<void> {\n\t\treturn super.markConfigurationValid();\n\t}\n\n\tpublic async markConfigurationInvalid(): Promise<void> {\n\t\treturn super.markConfigurationInvalid();\n\t}\n\n\tpublic async configurationStatus(): Promise<FederationConfigurationStatus> {\n\t\treturn super.configurationStatus();\n\t}\n\n\tpublic async beforeCreateRoom(room: Partial<IRoom>): Promise<void> {\n\t\treturn super.beforeCreateRoom(room);\n\t}\n\n\tpublic async deactivateRemoteUser(userId: string): Promise<void> {\n\t\treturn super.deactivateRemoteUser(userId);\n\t}\n}\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/server/services/federation/service.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/federation/service.ts","inputSourceMap":{"version":3,"file":"server/services/federation/service.ts","sourceRoot":"","sources":["server/services/federation/service.ts"],"names":[],"mappings":"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","sourcesContent":["import { IncomingMessage } from 'node:http';\nimport { URL } from 'node:url';\n\nimport { ServiceClassInternal } from '@rocket.chat/core-services';\nimport type { IFederationService, FederationConfigurationStatus } from '@rocket.chat/core-services';\nimport { isRoomFederated, type IRoom } from '@rocket.chat/core-typings';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\n\nimport type { FederationRoomServiceSender } from './application/room/sender/RoomServiceSender';\nimport type { FederationUserServiceSender } from './application/user/sender/UserServiceSender';\nimport type { IFederationBridge } from './domain/IFederationBridge';\nimport { FederationFactory } from './infrastructure/Factory';\nimport type { InMemoryQueue } from './infrastructure/queue/InMemoryQueue';\nimport type { RocketChatFileAdapter } from './infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatMessageAdapter } from './infrastructure/rocket-chat/adapters/Message';\nimport type { RocketChatNotificationAdapter } from './infrastructure/rocket-chat/adapters/Notification';\nimport type { RocketChatRoomAdapter } from './infrastructure/rocket-chat/adapters/Room';\nimport type { RocketChatSettingsAdapter } from './infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from './infrastructure/rocket-chat/adapters/User';\nimport { federationServiceLogger } from './infrastructure/rocket-chat/adapters/logger';\nimport { FederationRoomSenderConverter } from './infrastructure/rocket-chat/converters/RoomSender';\nimport { FederationHooks } from './infrastructure/rocket-chat/hooks';\nimport './infrastructure/rocket-chat/well-known';\nimport { throwIfFederationNotEnabledOrNotReady } from './utils';\n\nfunction extractError(e: unknown) {\n\tif (e instanceof Error || (typeof e === 'object' && e && 'toString' in e)) {\n\t\tif ('name' in e && e.name === 'AbortError') {\n\t\t\treturn 'Operation timed out';\n\t\t}\n\n\t\treturn e.toString();\n\t}\n\n\tfederationServiceLogger.error(e);\n\n\treturn 'Unknown error';\n}\n\n// for airgapped deployments, use environment variable to override a local instance of federationtester\nconst federationTesterHost = process.env.FEDERATION_TESTER_HOST?.trim()?.replace(/\\/$/, '') || 'https://federationtester.matrix.org';\n\nexport abstract class AbstractFederationService extends ServiceClassInternal {\n\tprivate cancelSettingsObserver: () => void;\n\n\tprivate internalQueueInstance: InMemoryQueue;\n\n\tprivate internalSettingsAdapter: RocketChatSettingsAdapter;\n\n\tprivate internalRoomServiceSender: FederationRoomServiceSender;\n\n\tprivate internalUserServiceSender: FederationUserServiceSender;\n\n\tprivate internalRoomAdapter: RocketChatRoomAdapter;\n\n\tprivate internalUserAdapter: RocketChatUserAdapter;\n\n\tprivate internalFileAdapter: RocketChatFileAdapter;\n\n\tprivate internalMessageAdapter: RocketChatMessageAdapter;\n\n\tprivate internalNotificationAdapter: RocketChatNotificationAdapter;\n\n\tprivate isRunning = false;\n\n\tprotected PROCESSING_CONCURRENCY = 1;\n\n\tprotected bridge: IFederationBridge;\n\n\tprotected abstract setupInternalEphemeralListeners(): Promise<void>;\n\n\tprotected abstract setupInternalValidators(): Promise<void>;\n\n\tprotected abstract setupInternalActionListeners(): Promise<void>;\n\n\tprotected abstract onEnableFederation(): Promise<void>;\n\n\tprotected abstract onDisableFederation(): Promise<void>;\n\n\tconstructor(\n\t\tfederationBridge: IFederationBridge,\n\t\tinternalQueueInstance: InMemoryQueue,\n\t\tinternalSettingsAdapter: RocketChatSettingsAdapter,\n\t) {\n\t\tsuper();\n\t\tthis.internalQueueInstance = internalQueueInstance;\n\t\tthis.internalSettingsAdapter = internalSettingsAdapter;\n\t\tthis.bridge = federationBridge;\n\t\tthis.internalFileAdapter = FederationFactory.buildInternalFileAdapter();\n\t\tthis.internalRoomAdapter = FederationFactory.buildInternalRoomAdapter();\n\t\tthis.internalUserAdapter = FederationFactory.buildInternalUserAdapter();\n\t\tthis.internalMessageAdapter = FederationFactory.buildInternalMessageAdapter();\n\t\tthis.internalNotificationAdapter = FederationFactory.buildInternalNotificationAdapter();\n\t\tthis.internalRoomServiceSender = FederationFactory.buildRoomServiceSender(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalMessageAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.internalNotificationAdapter,\n\t\t\tthis.bridge,\n\t\t);\n\t\tthis.internalUserServiceSender = FederationFactory.buildUserServiceSender(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.bridge,\n\t\t);\n\t\tthis.setEventListeners();\n\t}\n\n\tprivate setEventListeners(): void {\n\t\tthis.onEvent('user.avatarUpdate', async ({ username }): Promise<void> => {\n\t\t\tif (!this.isFederationEnabled()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!username) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait this.internalUserServiceSender.afterUserAvatarChanged(username);\n\t\t});\n\t\tthis.onEvent('user.typing', async ({ isTyping, roomId, user: { username } }): Promise<void> => {\n\t\t\tif (!roomId || !username) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.internalUserServiceSender.onUserTyping(username, roomId, isTyping);\n\t\t});\n\t\tthis.onEvent('user.realNameChanged', async ({ _id, name }): Promise<void> => {\n\t\t\tif (!this.isFederationEnabled()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!name || !_id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait this.internalUserServiceSender.afterUserRealNameChanged(_id, name);\n\t\t});\n\t\tthis.onEvent(\n\t\t\t'federation.userRoleChanged',\n\t\t\tasync (data: Record<string, any>): Promise<void> => FederationHooks.afterRoomRoleChanged(this.internalRoomServiceSender, data),\n\t\t);\n\t}\n\n\tprivate async onFederationEnabledSettingChange(isFederationEnabled: boolean): Promise<void> {\n\t\tif (!this.isRunning) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isFederationEnabled) {\n\t\t\tawait this.onDisableFederation();\n\t\t\tawait this.onEnableFederation();\n\t\t\tawait this.verifyConfiguration();\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.onDisableFederation();\n\t}\n\n\tpublic async initialize() {\n\t\tthis.internalSettingsAdapter = FederationFactory.buildInternalSettingsAdapter();\n\t\tawait this.internalSettingsAdapter.initialize();\n\t\tthis.cancelSettingsObserver = this.internalSettingsAdapter.onFederationEnabledStatusChanged(\n\t\t\tthis.onFederationEnabledSettingChange.bind(this),\n\t\t);\n\t}\n\n\tprivate async noop(): Promise<void> {\n\t\t// noop\n\t}\n\n\tprivate async setupEventHandlersForExternalEvents(): Promise<void> {\n\t\tconst federationRoomServiceReceiver = FederationFactory.buildRoomServiceReceiver(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalMessageAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.internalNotificationAdapter,\n\t\t\tthis.internalQueueInstance,\n\t\t\tthis.bridge,\n\t\t);\n\t\tconst federationMessageServiceReceiver = FederationFactory.buildMessageServiceReceiver(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalMessageAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.bridge,\n\t\t);\n\t\tconst federationUserServiceReceiver = FederationFactory.buildUserServiceReceiver(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalNotificationAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.bridge,\n\t\t);\n\t\tconst federationEventsHandler = FederationFactory.buildFederationEventHandler(\n\t\t\tfederationRoomServiceReceiver,\n\t\t\tfederationMessageServiceReceiver,\n\t\t\tfederationUserServiceReceiver,\n\t\t\tthis.internalSettingsAdapter,\n\t\t);\n\t\tthis.internalQueueInstance.setHandler(federationEventsHandler.handleEvent.bind(federationEventsHandler), this.PROCESSING_CONCURRENCY);\n\t}\n\n\tprivate canOtherHomeserversFederate(): Promise<boolean> {\n\t\tconst url = new URL(`https://${this.internalSettingsAdapter.getHomeServerDomain()}`);\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t\tfetch(`${federationTesterHost}/api/federation-ok?server_name=${url.host}`)\n\t\t\t\t.then((response) => response.text())\n\t\t\t\t.then((text) => resolve(text === 'GOOD'))\n\t\t\t\t.catch(reject),\n\t\t);\n\t}\n\n\tprotected getInternalSettingsAdapter(): RocketChatSettingsAdapter {\n\t\treturn this.internalSettingsAdapter;\n\t}\n\n\tprotected getInternalRoomServiceSender(): FederationRoomServiceSender {\n\t\treturn this.internalRoomServiceSender;\n\t}\n\n\tprotected getInternalUserServiceSender(): FederationUserServiceSender {\n\t\treturn this.internalUserServiceSender;\n\t}\n\n\tprotected getInternalRoomAdapter(): RocketChatRoomAdapter {\n\t\treturn this.internalRoomAdapter;\n\t}\n\n\tprotected getInternalUserAdapter(): RocketChatUserAdapter {\n\t\treturn this.internalUserAdapter;\n\t}\n\n\tprotected getInternalMessageAdapter(): RocketChatMessageAdapter {\n\t\treturn this.internalMessageAdapter;\n\t}\n\n\tprotected getInternalNotificationAdapter(): RocketChatNotificationAdapter {\n\t\treturn this.internalNotificationAdapter;\n\t}\n\n\tprotected getInternalFileAdapter(): RocketChatFileAdapter {\n\t\treturn this.internalFileAdapter;\n\t}\n\n\tprotected isFederationEnabled(): boolean {\n\t\treturn this.internalSettingsAdapter.isFederationEnabled();\n\t}\n\n\tprotected async setupFederation(): Promise<void> {\n\t\tif (this.isFederationEnabled()) {\n\t\t\tawait this.setupEventHandlersForExternalEvents();\n\t\t\tawait this.setupInternalValidators();\n\t\t\tawait this.setupInternalActionListeners();\n\t\t\tawait this.setupInternalEphemeralListeners();\n\t\t}\n\t\tthis.isRunning = true;\n\t}\n\n\tprotected async cleanUpSettingObserver(): Promise<void> {\n\t\tthis.cancelSettingsObserver();\n\t\tthis.isRunning = false;\n\t}\n\n\tprotected async cleanUpHandlers(): Promise<void> {\n\t\tthis.internalQueueInstance.setHandler(this.noop.bind(this), this.PROCESSING_CONCURRENCY);\n\t}\n\n\tprotected async verifyMatrixIds(matrixIds: string[]): Promise<Map<string, string>> {\n\t\treturn this.bridge.verifyInviteeIds(matrixIds);\n\t}\n\n\tpublic async configurationStatus(): Promise<FederationConfigurationStatus> {\n\t\tconst status: FederationConfigurationStatus = {\n\t\t\tappservice: {\n\t\t\t\troundTrip: { durationMs: -1 },\n\t\t\t\tok: false,\n\t\t\t},\n\t\t\texternalReachability: {\n\t\t\t\tok: false,\n\t\t\t},\n\t\t};\n\n\t\ttry {\n\t\t\tconst pingResponse = await this.bridge.ping();\n\t\t\tstatus.appservice.roundTrip.durationMs = pingResponse.durationMs;\n\t\t\tstatus.appservice.ok = true;\n\t\t} catch (error) {\n\t\t\tif (error instanceof IncomingMessage) {\n\t\t\t\tif (error.statusCode === 404) {\n\t\t\t\t\tstatus.appservice.error = 'homeserver version must be >=1.84.x';\n\t\t\t\t} else {\n\t\t\t\t\tstatus.appservice.error = `received unknown status from homeserver, message: ${error.statusMessage}`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstatus.appservice.error = extractError(error);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tstatus.externalReachability.ok = await this.canOtherHomeserversFederate();\n\t\t} catch (error) {\n\t\t\tstatus.externalReachability.error = extractError(error);\n\t\t}\n\n\t\treturn status;\n\t}\n\n\tpublic async markConfigurationValid(): Promise<void> {\n\t\treturn this.internalSettingsAdapter.setConfigurationStatus('Valid');\n\t}\n\n\tpublic async markConfigurationInvalid(): Promise<void> {\n\t\treturn this.internalSettingsAdapter.setConfigurationStatus('Invalid');\n\t}\n\n\tpublic async verifyConfiguration(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.bridge?.ping(); // throws error if fails\n\n\t\t\tif (!(await this.canOtherHomeserversFederate())) {\n\t\t\t\tthrow new Error('External reachability could not be verified');\n\t\t\t}\n\n\t\t\tvoid this.markConfigurationValid();\n\t\t} catch (error) {\n\t\t\tfederationServiceLogger.error(error);\n\n\t\t\tvoid this.markConfigurationInvalid();\n\t\t}\n\t}\n\n\tpublic async beforeCreateRoom(room: Partial<IRoom>): Promise<void> {\n\t\tif (!isRoomFederated(room)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthrowIfFederationNotEnabledOrNotReady();\n\t}\n\n\tprotected async deactivateRemoteUser(remoteUserId: string): Promise<void> {\n\t\treturn this.bridge.deactivateUser(remoteUserId);\n\t}\n}\n\nabstract class AbstractBaseFederationService extends AbstractFederationService {\n\tconstructor() {\n\t\tconst internalQueueInstance = FederationFactory.buildFederationQueue();\n\t\tconst internalSettingsAdapter = FederationFactory.buildInternalSettingsAdapter();\n\t\tconst bridge = FederationFactory.buildFederationBridge(internalSettingsAdapter, internalQueueInstance);\n\n\t\tsuper(bridge, internalQueueInstance, internalSettingsAdapter);\n\t}\n\n\tprotected async setupInternalEphemeralListeners(): Promise<void> {\n\t\tawait this.getInternalNotificationAdapter().subscribeToUserTypingEventsOnFederatedRooms(\n\t\t\tthis.getInternalNotificationAdapter().broadcastUserTypingOnRoom.bind(this.getInternalNotificationAdapter()),\n\t\t);\n\t}\n\n\tprotected async setupInternalValidators(): Promise<void> {\n\t\tconst federationRoomInternalValidator = FederationFactory.buildRoomInternalValidator(\n\t\t\tthis.getInternalRoomAdapter(),\n\t\t\tthis.getInternalUserAdapter(),\n\t\t\tthis.getInternalFileAdapter(),\n\t\t\tthis.getInternalSettingsAdapter(),\n\t\t\tthis.bridge,\n\t\t);\n\t\tFederationFactory.setupValidators(federationRoomInternalValidator);\n\t}\n\n\tprotected async setupInternalActionListeners(): Promise<void> {\n\t\tconst federationMessageServiceSender = FederationFactory.buildMessageServiceSender(\n\t\t\tthis.getInternalRoomAdapter(),\n\t\t\tthis.getInternalUserAdapter(),\n\t\t\tthis.getInternalSettingsAdapter(),\n\t\t\tthis.getInternalMessageAdapter(),\n\t\t\tthis.bridge,\n\t\t);\n\t\tFederationFactory.setupListenersForLocalActions(this.getInternalRoomServiceSender(), federationMessageServiceSender);\n\t}\n\n\tprotected async onEnableFederation(): Promise<void> {\n\t\tawait super.setupFederation();\n\t\tawait this.startFederation();\n\t}\n\n\tprotected async onDisableFederation(): Promise<void> {\n\t\tawait this.stopFederation();\n\t}\n\n\tprivate async startFederation(): Promise<void> {\n\t\tif (!this.isFederationEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.bridge.start();\n\t\tthis.bridge.logFederationStartupInfo('Running Federation V2');\n\t\tawait import('./infrastructure/rocket-chat/slash-commands');\n\t}\n\n\tprivate async stopFederation(): Promise<void> {\n\t\tFederationFactory.removeAllListeners();\n\t\tawait this.bridge.stop();\n\t\tawait super.cleanUpHandlers();\n\t}\n\n\tpublic async stopped(): Promise<void> {\n\t\tawait this.stopFederation();\n\t\tawait super.cleanUpSettingObserver();\n\t}\n\n\tpublic async created(): Promise<void> {\n\t\tawait super.setupFederation();\n\t\tawait this.startFederation();\n\t}\n}\n\nexport class FederationService extends AbstractBaseFederationService implements IFederationService {\n\tprotected name = 'federation';\n\n\tpublic async createDirectMessageRoomAndInviteUser(\n\t\tinternalInviterId: string,\n\t\tinternalRoomId: string,\n\t\texternalInviteeId: string,\n\t): Promise<void> {\n\t\treturn this.getInternalRoomServiceSender().createDirectMessageRoomAndInviteUser(\n\t\t\tFederationRoomSenderConverter.toCreateDirectMessageRoomDto(internalInviterId, internalRoomId, externalInviteeId),\n\t\t);\n\t}\n\n\tpublic async verifyMatrixIds(matrixIds: string[]): Promise<Map<string, string>> {\n\t\treturn super.verifyMatrixIds(matrixIds);\n\t}\n\n\tstatic async createFederationService(): Promise<FederationService> {\n\t\tconst federationService = new FederationService();\n\t\tawait federationService.initialize();\n\t\treturn federationService;\n\t}\n\n\tpublic async stopped(): Promise<void> {\n\t\treturn super.stopped();\n\t}\n\n\tpublic async created(): Promise<void> {\n\t\treturn super.created();\n\t}\n\n\tpublic async verifyConfiguration(): Promise<void> {\n\t\treturn super.verifyConfiguration();\n\t}\n\n\tpublic async markConfigurationValid(): Promise<void> {\n\t\treturn super.markConfigurationValid();\n\t}\n\n\tpublic async markConfigurationInvalid(): Promise<void> {\n\t\treturn super.markConfigurationInvalid();\n\t}\n\n\tpublic async configurationStatus(): Promise<FederationConfigurationStatus> {\n\t\treturn super.configurationStatus();\n\t}\n\n\tpublic async beforeCreateRoom(room: Partial<IRoom>): Promise<void> {\n\t\treturn super.beforeCreateRoom(room);\n\t}\n\n\tpublic async deactivateRemoteUser(userId: string): Promise<void> {\n\t\treturn super.deactivateRemoteUser(userId);\n\t}\n}\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    var _process$env$FEDERATI, _process$env$FEDERATI2;\n    module.export({\n      AbstractFederationService: () => AbstractFederationService,\n      FederationService: () => FederationService\n    });\n    let IncomingMessage;\n    module.link(\"node:http\", {\n      IncomingMessage(v) {\n        IncomingMessage = v;\n      }\n    }, 0);\n    let URL;\n    module.link(\"node:url\", {\n      URL(v) {\n        URL = v;\n      }\n    }, 1);\n    let ServiceClassInternal;\n    module.link(\"@rocket.chat/core-services\", {\n      ServiceClassInternal(v) {\n        ServiceClassInternal = v;\n      }\n    }, 2);\n    let isRoomFederated;\n    module.link(\"@rocket.chat/core-typings\", {\n      isRoomFederated(v) {\n        isRoomFederated = v;\n      }\n    }, 3);\n    let fetch;\n    module.link(\"@rocket.chat/server-fetch\", {\n      serverFetch(v) {\n        fetch = v;\n      }\n    }, 4);\n    let FederationFactory;\n    module.link(\"./infrastructure/Factory\", {\n      FederationFactory(v) {\n        FederationFactory = v;\n      }\n    }, 5);\n    let federationServiceLogger;\n    module.link(\"./infrastructure/rocket-chat/adapters/logger\", {\n      federationServiceLogger(v) {\n        federationServiceLogger = v;\n      }\n    }, 6);\n    let FederationRoomSenderConverter;\n    module.link(\"./infrastructure/rocket-chat/converters/RoomSender\", {\n      FederationRoomSenderConverter(v) {\n        FederationRoomSenderConverter = v;\n      }\n    }, 7);\n    let FederationHooks;\n    module.link(\"./infrastructure/rocket-chat/hooks\", {\n      FederationHooks(v) {\n        FederationHooks = v;\n      }\n    }, 8);\n    module.link(\"./infrastructure/rocket-chat/well-known\");\n    let throwIfFederationNotEnabledOrNotReady;\n    module.link(\"./utils\", {\n      throwIfFederationNotEnabledOrNotReady(v) {\n        throwIfFederationNotEnabledOrNotReady = v;\n      }\n    }, 9);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    function extractError(e) {\n      if (e instanceof Error || typeof e === 'object' && e && 'toString' in e) {\n        if ('name' in e && e.name === 'AbortError') {\n          return 'Operation timed out';\n        }\n        return e.toString();\n      }\n      federationServiceLogger.error(e);\n      return 'Unknown error';\n    }\n    // for airgapped deployments, use environment variable to override a local instance of federationtester\n    const federationTesterHost = ((_process$env$FEDERATI = process.env.FEDERATION_TESTER_HOST) === null || _process$env$FEDERATI === void 0 ? void 0 : (_process$env$FEDERATI2 = _process$env$FEDERATI.trim()) === null || _process$env$FEDERATI2 === void 0 ? void 0 : _process$env$FEDERATI2.replace(/\\/$/, '')) || 'https://federationtester.matrix.org';\n    class AbstractFederationService extends ServiceClassInternal {\n      constructor(federationBridge, internalQueueInstance, internalSettingsAdapter) {\n        super();\n        this.cancelSettingsObserver = void 0;\n        this.internalQueueInstance = void 0;\n        this.internalSettingsAdapter = void 0;\n        this.internalRoomServiceSender = void 0;\n        this.internalUserServiceSender = void 0;\n        this.internalRoomAdapter = void 0;\n        this.internalUserAdapter = void 0;\n        this.internalFileAdapter = void 0;\n        this.internalMessageAdapter = void 0;\n        this.internalNotificationAdapter = void 0;\n        this.isRunning = false;\n        this.PROCESSING_CONCURRENCY = 1;\n        this.bridge = void 0;\n        this.internalQueueInstance = internalQueueInstance;\n        this.internalSettingsAdapter = internalSettingsAdapter;\n        this.bridge = federationBridge;\n        this.internalFileAdapter = FederationFactory.buildInternalFileAdapter();\n        this.internalRoomAdapter = FederationFactory.buildInternalRoomAdapter();\n        this.internalUserAdapter = FederationFactory.buildInternalUserAdapter();\n        this.internalMessageAdapter = FederationFactory.buildInternalMessageAdapter();\n        this.internalNotificationAdapter = FederationFactory.buildInternalNotificationAdapter();\n        this.internalRoomServiceSender = FederationFactory.buildRoomServiceSender(this.internalRoomAdapter, this.internalUserAdapter, this.internalFileAdapter, this.internalMessageAdapter, this.internalSettingsAdapter, this.internalNotificationAdapter, this.bridge);\n        this.internalUserServiceSender = FederationFactory.buildUserServiceSender(this.internalRoomAdapter, this.internalUserAdapter, this.internalFileAdapter, this.internalSettingsAdapter, this.bridge);\n        this.setEventListeners();\n      }\n      setEventListeners() {\n        this.onEvent('user.avatarUpdate', async _ref => {\n          let {\n            username\n          } = _ref;\n          if (!this.isFederationEnabled()) {\n            return;\n          }\n          if (!username) {\n            return;\n          }\n          await this.internalUserServiceSender.afterUserAvatarChanged(username);\n        });\n        this.onEvent('user.typing', async _ref2 => {\n          let {\n            isTyping,\n            roomId,\n            user: {\n              username\n            }\n          } = _ref2;\n          if (!roomId || !username) {\n            return;\n          }\n          await this.internalUserServiceSender.onUserTyping(username, roomId, isTyping);\n        });\n        this.onEvent('user.realNameChanged', async _ref3 => {\n          let {\n            _id,\n            name\n          } = _ref3;\n          if (!this.isFederationEnabled()) {\n            return;\n          }\n          if (!name || !_id) {\n            return;\n          }\n          await this.internalUserServiceSender.afterUserRealNameChanged(_id, name);\n        });\n        this.onEvent('federation.userRoleChanged', async data => FederationHooks.afterRoomRoleChanged(this.internalRoomServiceSender, data));\n      }\n      async onFederationEnabledSettingChange(isFederationEnabled) {\n        if (!this.isRunning) {\n          return;\n        }\n        if (isFederationEnabled) {\n          await this.onDisableFederation();\n          await this.onEnableFederation();\n          await this.verifyConfiguration();\n          return;\n        }\n        return this.onDisableFederation();\n      }\n      async initialize() {\n        this.internalSettingsAdapter = FederationFactory.buildInternalSettingsAdapter();\n        await this.internalSettingsAdapter.initialize();\n        this.cancelSettingsObserver = this.internalSettingsAdapter.onFederationEnabledStatusChanged(this.onFederationEnabledSettingChange.bind(this));\n      }\n      async noop() {\n        // noop\n      }\n      async setupEventHandlersForExternalEvents() {\n        const federationRoomServiceReceiver = FederationFactory.buildRoomServiceReceiver(this.internalRoomAdapter, this.internalUserAdapter, this.internalMessageAdapter, this.internalFileAdapter, this.internalSettingsAdapter, this.internalNotificationAdapter, this.internalQueueInstance, this.bridge);\n        const federationMessageServiceReceiver = FederationFactory.buildMessageServiceReceiver(this.internalRoomAdapter, this.internalUserAdapter, this.internalMessageAdapter, this.internalFileAdapter, this.internalSettingsAdapter, this.bridge);\n        const federationUserServiceReceiver = FederationFactory.buildUserServiceReceiver(this.internalRoomAdapter, this.internalUserAdapter, this.internalFileAdapter, this.internalNotificationAdapter, this.internalSettingsAdapter, this.bridge);\n        const federationEventsHandler = FederationFactory.buildFederationEventHandler(federationRoomServiceReceiver, federationMessageServiceReceiver, federationUserServiceReceiver, this.internalSettingsAdapter);\n        this.internalQueueInstance.setHandler(federationEventsHandler.handleEvent.bind(federationEventsHandler), this.PROCESSING_CONCURRENCY);\n      }\n      canOtherHomeserversFederate() {\n        const url = new URL(\"https://\".concat(this.internalSettingsAdapter.getHomeServerDomain()));\n        return new Promise((resolve, reject) => fetch(\"\".concat(federationTesterHost, \"/api/federation-ok?server_name=\").concat(url.host)).then(response => response.text()).then(text => resolve(text === 'GOOD')).catch(reject));\n      }\n      getInternalSettingsAdapter() {\n        return this.internalSettingsAdapter;\n      }\n      getInternalRoomServiceSender() {\n        return this.internalRoomServiceSender;\n      }\n      getInternalUserServiceSender() {\n        return this.internalUserServiceSender;\n      }\n      getInternalRoomAdapter() {\n        return this.internalRoomAdapter;\n      }\n      getInternalUserAdapter() {\n        return this.internalUserAdapter;\n      }\n      getInternalMessageAdapter() {\n        return this.internalMessageAdapter;\n      }\n      getInternalNotificationAdapter() {\n        return this.internalNotificationAdapter;\n      }\n      getInternalFileAdapter() {\n        return this.internalFileAdapter;\n      }\n      isFederationEnabled() {\n        return this.internalSettingsAdapter.isFederationEnabled();\n      }\n      async setupFederation() {\n        if (this.isFederationEnabled()) {\n          await this.setupEventHandlersForExternalEvents();\n          await this.setupInternalValidators();\n          await this.setupInternalActionListeners();\n          await this.setupInternalEphemeralListeners();\n        }\n        this.isRunning = true;\n      }\n      async cleanUpSettingObserver() {\n        this.cancelSettingsObserver();\n        this.isRunning = false;\n      }\n      async cleanUpHandlers() {\n        this.internalQueueInstance.setHandler(this.noop.bind(this), this.PROCESSING_CONCURRENCY);\n      }\n      async verifyMatrixIds(matrixIds) {\n        return this.bridge.verifyInviteeIds(matrixIds);\n      }\n      async configurationStatus() {\n        const status = {\n          appservice: {\n            roundTrip: {\n              durationMs: -1\n            },\n            ok: false\n          },\n          externalReachability: {\n            ok: false\n          }\n        };\n        try {\n          const pingResponse = await this.bridge.ping();\n          status.appservice.roundTrip.durationMs = pingResponse.durationMs;\n          status.appservice.ok = true;\n        } catch (error) {\n          if (error instanceof IncomingMessage) {\n            if (error.statusCode === 404) {\n              status.appservice.error = 'homeserver version must be >=1.84.x';\n            } else {\n              status.appservice.error = \"received unknown status from homeserver, message: \".concat(error.statusMessage);\n            }\n          } else {\n            status.appservice.error = extractError(error);\n          }\n        }\n        try {\n          status.externalReachability.ok = await this.canOtherHomeserversFederate();\n        } catch (error) {\n          status.externalReachability.error = extractError(error);\n        }\n        return status;\n      }\n      async markConfigurationValid() {\n        return this.internalSettingsAdapter.setConfigurationStatus('Valid');\n      }\n      async markConfigurationInvalid() {\n        return this.internalSettingsAdapter.setConfigurationStatus('Invalid');\n      }\n      async verifyConfiguration() {\n        try {\n          var _this$bridge;\n          await ((_this$bridge = this.bridge) === null || _this$bridge === void 0 ? void 0 : _this$bridge.ping()); // throws error if fails\n          if (!(await this.canOtherHomeserversFederate())) {\n            throw new Error('External reachability could not be verified');\n          }\n          void this.markConfigurationValid();\n        } catch (error) {\n          federationServiceLogger.error(error);\n          void this.markConfigurationInvalid();\n        }\n      }\n      async beforeCreateRoom(room) {\n        if (!isRoomFederated(room)) {\n          return;\n        }\n        throwIfFederationNotEnabledOrNotReady();\n      }\n      async deactivateRemoteUser(remoteUserId) {\n        return this.bridge.deactivateUser(remoteUserId);\n      }\n    }\n    class AbstractBaseFederationService extends AbstractFederationService {\n      constructor() {\n        const internalQueueInstance = FederationFactory.buildFederationQueue();\n        const internalSettingsAdapter = FederationFactory.buildInternalSettingsAdapter();\n        const bridge = FederationFactory.buildFederationBridge(internalSettingsAdapter, internalQueueInstance);\n        super(bridge, internalQueueInstance, internalSettingsAdapter);\n      }\n      async setupInternalEphemeralListeners() {\n        await this.getInternalNotificationAdapter().subscribeToUserTypingEventsOnFederatedRooms(this.getInternalNotificationAdapter().broadcastUserTypingOnRoom.bind(this.getInternalNotificationAdapter()));\n      }\n      async setupInternalValidators() {\n        const federationRoomInternalValidator = FederationFactory.buildRoomInternalValidator(this.getInternalRoomAdapter(), this.getInternalUserAdapter(), this.getInternalFileAdapter(), this.getInternalSettingsAdapter(), this.bridge);\n        FederationFactory.setupValidators(federationRoomInternalValidator);\n      }\n      async setupInternalActionListeners() {\n        const federationMessageServiceSender = FederationFactory.buildMessageServiceSender(this.getInternalRoomAdapter(), this.getInternalUserAdapter(), this.getInternalSettingsAdapter(), this.getInternalMessageAdapter(), this.bridge);\n        FederationFactory.setupListenersForLocalActions(this.getInternalRoomServiceSender(), federationMessageServiceSender);\n      }\n      async onEnableFederation() {\n        await super.setupFederation();\n        await this.startFederation();\n      }\n      async onDisableFederation() {\n        await this.stopFederation();\n      }\n      async startFederation() {\n        if (!this.isFederationEnabled()) {\n          return;\n        }\n        await this.bridge.start();\n        this.bridge.logFederationStartupInfo('Running Federation V2');\n        await module.dynamicImport('./infrastructure/rocket-chat/slash-commands');\n      }\n      async stopFederation() {\n        FederationFactory.removeAllListeners();\n        await this.bridge.stop();\n        await super.cleanUpHandlers();\n      }\n      async stopped() {\n        await this.stopFederation();\n        await super.cleanUpSettingObserver();\n      }\n      async created() {\n        await super.setupFederation();\n        await this.startFederation();\n      }\n    }\n    class FederationService extends AbstractBaseFederationService {\n      constructor() {\n        super(...arguments);\n        this.name = 'federation';\n      }\n      async createDirectMessageRoomAndInviteUser(internalInviterId, internalRoomId, externalInviteeId) {\n        return this.getInternalRoomServiceSender().createDirectMessageRoomAndInviteUser(FederationRoomSenderConverter.toCreateDirectMessageRoomDto(internalInviterId, internalRoomId, externalInviteeId));\n      }\n      async verifyMatrixIds(matrixIds) {\n        return super.verifyMatrixIds(matrixIds);\n      }\n      static async createFederationService() {\n        const federationService = new FederationService();\n        await federationService.initialize();\n        return federationService;\n      }\n      async stopped() {\n        return super.stopped();\n      }\n      async created() {\n        return super.created();\n      }\n      async verifyConfiguration() {\n        return super.verifyConfiguration();\n      }\n      async markConfigurationValid() {\n        return super.markConfigurationValid();\n      }\n      async markConfigurationInvalid() {\n        return super.markConfigurationInvalid();\n      }\n      async configurationStatus() {\n        return super.configurationStatus();\n      }\n      async beforeCreateRoom(room) {\n        return super.beforeCreateRoom(room);\n      }\n      async deactivateRemoteUser(userId) {\n        return super.deactivateRemoteUser(userId);\n      }\n    }\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["module","export","AbstractFederationService","FederationService","IncomingMessage","link","v","URL","ServiceClassInternal","isRoomFederated","fetch","serverFetch","FederationFactory","federationServiceLogger","FederationRoomSenderConverter","FederationHooks","throwIfFederationNotEnabledOrNotReady","__reifyWaitForDeps__","extractError","e","Error","name","toString","error","federationTesterHost","_process$env$FEDERATI","process","env","FEDERATION_TESTER_HOST","_process$env$FEDERATI2","trim","replace","constructor","federationBridge","internalQueueInstance","internalSettingsAdapter","cancelSettingsObserver","internalRoomServiceSender","internalUserServiceSender","internalRoomAdapter","internalUserAdapter","internalFileAdapter","internalMessageAdapter","internalNotificationAdapter","isRunning","PROCESSING_CONCURRENCY","bridge","buildInternalFileAdapter","buildInternalRoomAdapter","buildInternalUserAdapter","buildInternalMessageAdapter","buildInternalNotificationAdapter","buildRoomServiceSender","buildUserServiceSender","setEventListeners","onEvent","_ref","username","isFederationEnabled","afterUserAvatarChanged","_ref2","isTyping","roomId","user","onUserTyping","_ref3","_id","afterUserRealNameChanged","data","afterRoomRoleChanged","onFederationEnabledSettingChange","onDisableFederation","onEnableFederation","verifyConfiguration","initialize","buildInternalSettingsAdapter","onFederationEnabledStatusChanged","bind","noop","setupEventHandlersForExternalEvents","federationRoomServiceReceiver","buildRoomServiceReceiver","federationMessageServiceReceiver","buildMessageServiceReceiver","federationUserServiceReceiver","buildUserServiceReceiver","federationEventsHandler","buildFederationEventHandler","setHandler","handleEvent","canOtherHomeserversFederate","url","concat","getHomeServerDomain","Promise","resolve","reject","host","then","response","text","catch","getInternalSettingsAdapter","getInternalRoomServiceSender","getInternalUserServiceSender","getInternalRoomAdapter","getInternalUserAdapter","getInternalMessageAdapter","getInternalNotificationAdapter","getInternalFileAdapter","setupFederation","setupInternalValidators","setupInternalActionListeners","setupInternalEphemeralListeners","cleanUpSettingObserver","cleanUpHandlers","verifyMatrixIds","matrixIds","verifyInviteeIds","configurationStatus","status","appservice","roundTrip","durationMs","ok","externalReachability","pingResponse","ping","statusCode","statusMessage","markConfigurationValid","setConfigurationStatus","markConfigurationInvalid","_this$bridge","beforeCreateRoom","room","deactivateRemoteUser","remoteUserId","deactivateUser","AbstractBaseFederationService","buildFederationQueue","buildFederationBridge","subscribeToUserTypingEventsOnFederatedRooms","broadcastUserTypingOnRoom","federationRoomInternalValidator","buildRoomInternalValidator","setupValidators","federationMessageServiceSender","buildMessageServiceSender","setupListenersForLocalActions","startFederation","stopFederation","start","logFederationStartupInfo","dynamicImport","removeAllListeners","stop","stopped","created","arguments","createDirectMessageRoomAndInviteUser","internalInviterId","internalRoomId","externalInviteeId","toCreateDirectMessageRoomDto","createFederationService","federationService","userId","__reify_async_result__","_reifyError","self","async"],"sources":["server/services/federation/service.ts"],"sourcesContent":["import { IncomingMessage } from 'node:http';\nimport { URL } from 'node:url';\n\nimport { ServiceClassInternal } from '@rocket.chat/core-services';\nimport type { IFederationService, FederationConfigurationStatus } from '@rocket.chat/core-services';\nimport { isRoomFederated, type IRoom } from '@rocket.chat/core-typings';\nimport { serverFetch as fetch } from '@rocket.chat/server-fetch';\n\nimport type { FederationRoomServiceSender } from './application/room/sender/RoomServiceSender';\nimport type { FederationUserServiceSender } from './application/user/sender/UserServiceSender';\nimport type { IFederationBridge } from './domain/IFederationBridge';\nimport { FederationFactory } from './infrastructure/Factory';\nimport type { InMemoryQueue } from './infrastructure/queue/InMemoryQueue';\nimport type { RocketChatFileAdapter } from './infrastructure/rocket-chat/adapters/File';\nimport type { RocketChatMessageAdapter } from './infrastructure/rocket-chat/adapters/Message';\nimport type { RocketChatNotificationAdapter } from './infrastructure/rocket-chat/adapters/Notification';\nimport type { RocketChatRoomAdapter } from './infrastructure/rocket-chat/adapters/Room';\nimport type { RocketChatSettingsAdapter } from './infrastructure/rocket-chat/adapters/Settings';\nimport type { RocketChatUserAdapter } from './infrastructure/rocket-chat/adapters/User';\nimport { federationServiceLogger } from './infrastructure/rocket-chat/adapters/logger';\nimport { FederationRoomSenderConverter } from './infrastructure/rocket-chat/converters/RoomSender';\nimport { FederationHooks } from './infrastructure/rocket-chat/hooks';\nimport './infrastructure/rocket-chat/well-known';\nimport { throwIfFederationNotEnabledOrNotReady } from './utils';\n\nfunction extractError(e: unknown) {\n\tif (e instanceof Error || (typeof e === 'object' && e && 'toString' in e)) {\n\t\tif ('name' in e && e.name === 'AbortError') {\n\t\t\treturn 'Operation timed out';\n\t\t}\n\n\t\treturn e.toString();\n\t}\n\n\tfederationServiceLogger.error(e);\n\n\treturn 'Unknown error';\n}\n\n// for airgapped deployments, use environment variable to override a local instance of federationtester\nconst federationTesterHost = process.env.FEDERATION_TESTER_HOST?.trim()?.replace(/\\/$/, '') || 'https://federationtester.matrix.org';\n\nexport abstract class AbstractFederationService extends ServiceClassInternal {\n\tprivate cancelSettingsObserver: () => void;\n\n\tprivate internalQueueInstance: InMemoryQueue;\n\n\tprivate internalSettingsAdapter: RocketChatSettingsAdapter;\n\n\tprivate internalRoomServiceSender: FederationRoomServiceSender;\n\n\tprivate internalUserServiceSender: FederationUserServiceSender;\n\n\tprivate internalRoomAdapter: RocketChatRoomAdapter;\n\n\tprivate internalUserAdapter: RocketChatUserAdapter;\n\n\tprivate internalFileAdapter: RocketChatFileAdapter;\n\n\tprivate internalMessageAdapter: RocketChatMessageAdapter;\n\n\tprivate internalNotificationAdapter: RocketChatNotificationAdapter;\n\n\tprivate isRunning = false;\n\n\tprotected PROCESSING_CONCURRENCY = 1;\n\n\tprotected bridge: IFederationBridge;\n\n\tprotected abstract setupInternalEphemeralListeners(): Promise<void>;\n\n\tprotected abstract setupInternalValidators(): Promise<void>;\n\n\tprotected abstract setupInternalActionListeners(): Promise<void>;\n\n\tprotected abstract onEnableFederation(): Promise<void>;\n\n\tprotected abstract onDisableFederation(): Promise<void>;\n\n\tconstructor(\n\t\tfederationBridge: IFederationBridge,\n\t\tinternalQueueInstance: InMemoryQueue,\n\t\tinternalSettingsAdapter: RocketChatSettingsAdapter,\n\t) {\n\t\tsuper();\n\t\tthis.internalQueueInstance = internalQueueInstance;\n\t\tthis.internalSettingsAdapter = internalSettingsAdapter;\n\t\tthis.bridge = federationBridge;\n\t\tthis.internalFileAdapter = FederationFactory.buildInternalFileAdapter();\n\t\tthis.internalRoomAdapter = FederationFactory.buildInternalRoomAdapter();\n\t\tthis.internalUserAdapter = FederationFactory.buildInternalUserAdapter();\n\t\tthis.internalMessageAdapter = FederationFactory.buildInternalMessageAdapter();\n\t\tthis.internalNotificationAdapter = FederationFactory.buildInternalNotificationAdapter();\n\t\tthis.internalRoomServiceSender = FederationFactory.buildRoomServiceSender(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalMessageAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.internalNotificationAdapter,\n\t\t\tthis.bridge,\n\t\t);\n\t\tthis.internalUserServiceSender = FederationFactory.buildUserServiceSender(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.bridge,\n\t\t);\n\t\tthis.setEventListeners();\n\t}\n\n\tprivate setEventListeners(): void {\n\t\tthis.onEvent('user.avatarUpdate', async ({ username }): Promise<void> => {\n\t\t\tif (!this.isFederationEnabled()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!username) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait this.internalUserServiceSender.afterUserAvatarChanged(username);\n\t\t});\n\t\tthis.onEvent('user.typing', async ({ isTyping, roomId, user: { username } }): Promise<void> => {\n\t\t\tif (!roomId || !username) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.internalUserServiceSender.onUserTyping(username, roomId, isTyping);\n\t\t});\n\t\tthis.onEvent('user.realNameChanged', async ({ _id, name }): Promise<void> => {\n\t\t\tif (!this.isFederationEnabled()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!name || !_id) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait this.internalUserServiceSender.afterUserRealNameChanged(_id, name);\n\t\t});\n\t\tthis.onEvent(\n\t\t\t'federation.userRoleChanged',\n\t\t\tasync (data: Record<string, any>): Promise<void> => FederationHooks.afterRoomRoleChanged(this.internalRoomServiceSender, data),\n\t\t);\n\t}\n\n\tprivate async onFederationEnabledSettingChange(isFederationEnabled: boolean): Promise<void> {\n\t\tif (!this.isRunning) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isFederationEnabled) {\n\t\t\tawait this.onDisableFederation();\n\t\t\tawait this.onEnableFederation();\n\t\t\tawait this.verifyConfiguration();\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.onDisableFederation();\n\t}\n\n\tpublic async initialize() {\n\t\tthis.internalSettingsAdapter = FederationFactory.buildInternalSettingsAdapter();\n\t\tawait this.internalSettingsAdapter.initialize();\n\t\tthis.cancelSettingsObserver = this.internalSettingsAdapter.onFederationEnabledStatusChanged(\n\t\t\tthis.onFederationEnabledSettingChange.bind(this),\n\t\t);\n\t}\n\n\tprivate async noop(): Promise<void> {\n\t\t// noop\n\t}\n\n\tprivate async setupEventHandlersForExternalEvents(): Promise<void> {\n\t\tconst federationRoomServiceReceiver = FederationFactory.buildRoomServiceReceiver(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalMessageAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.internalNotificationAdapter,\n\t\t\tthis.internalQueueInstance,\n\t\t\tthis.bridge,\n\t\t);\n\t\tconst federationMessageServiceReceiver = FederationFactory.buildMessageServiceReceiver(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalMessageAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.bridge,\n\t\t);\n\t\tconst federationUserServiceReceiver = FederationFactory.buildUserServiceReceiver(\n\t\t\tthis.internalRoomAdapter,\n\t\t\tthis.internalUserAdapter,\n\t\t\tthis.internalFileAdapter,\n\t\t\tthis.internalNotificationAdapter,\n\t\t\tthis.internalSettingsAdapter,\n\t\t\tthis.bridge,\n\t\t);\n\t\tconst federationEventsHandler = FederationFactory.buildFederationEventHandler(\n\t\t\tfederationRoomServiceReceiver,\n\t\t\tfederationMessageServiceReceiver,\n\t\t\tfederationUserServiceReceiver,\n\t\t\tthis.internalSettingsAdapter,\n\t\t);\n\t\tthis.internalQueueInstance.setHandler(federationEventsHandler.handleEvent.bind(federationEventsHandler), this.PROCESSING_CONCURRENCY);\n\t}\n\n\tprivate canOtherHomeserversFederate(): Promise<boolean> {\n\t\tconst url = new URL(`https://${this.internalSettingsAdapter.getHomeServerDomain()}`);\n\n\t\treturn new Promise((resolve, reject) =>\n\t\t\tfetch(`${federationTesterHost}/api/federation-ok?server_name=${url.host}`)\n\t\t\t\t.then((response) => response.text())\n\t\t\t\t.then((text) => resolve(text === 'GOOD'))\n\t\t\t\t.catch(reject),\n\t\t);\n\t}\n\n\tprotected getInternalSettingsAdapter(): RocketChatSettingsAdapter {\n\t\treturn this.internalSettingsAdapter;\n\t}\n\n\tprotected getInternalRoomServiceSender(): FederationRoomServiceSender {\n\t\treturn this.internalRoomServiceSender;\n\t}\n\n\tprotected getInternalUserServiceSender(): FederationUserServiceSender {\n\t\treturn this.internalUserServiceSender;\n\t}\n\n\tprotected getInternalRoomAdapter(): RocketChatRoomAdapter {\n\t\treturn this.internalRoomAdapter;\n\t}\n\n\tprotected getInternalUserAdapter(): RocketChatUserAdapter {\n\t\treturn this.internalUserAdapter;\n\t}\n\n\tprotected getInternalMessageAdapter(): RocketChatMessageAdapter {\n\t\treturn this.internalMessageAdapter;\n\t}\n\n\tprotected getInternalNotificationAdapter(): RocketChatNotificationAdapter {\n\t\treturn this.internalNotificationAdapter;\n\t}\n\n\tprotected getInternalFileAdapter(): RocketChatFileAdapter {\n\t\treturn this.internalFileAdapter;\n\t}\n\n\tprotected isFederationEnabled(): boolean {\n\t\treturn this.internalSettingsAdapter.isFederationEnabled();\n\t}\n\n\tprotected async setupFederation(): Promise<void> {\n\t\tif (this.isFederationEnabled()) {\n\t\t\tawait this.setupEventHandlersForExternalEvents();\n\t\t\tawait this.setupInternalValidators();\n\t\t\tawait this.setupInternalActionListeners();\n\t\t\tawait this.setupInternalEphemeralListeners();\n\t\t}\n\t\tthis.isRunning = true;\n\t}\n\n\tprotected async cleanUpSettingObserver(): Promise<void> {\n\t\tthis.cancelSettingsObserver();\n\t\tthis.isRunning = false;\n\t}\n\n\tprotected async cleanUpHandlers(): Promise<void> {\n\t\tthis.internalQueueInstance.setHandler(this.noop.bind(this), this.PROCESSING_CONCURRENCY);\n\t}\n\n\tprotected async verifyMatrixIds(matrixIds: string[]): Promise<Map<string, string>> {\n\t\treturn this.bridge.verifyInviteeIds(matrixIds);\n\t}\n\n\tpublic async configurationStatus(): Promise<FederationConfigurationStatus> {\n\t\tconst status: FederationConfigurationStatus = {\n\t\t\tappservice: {\n\t\t\t\troundTrip: { durationMs: -1 },\n\t\t\t\tok: false,\n\t\t\t},\n\t\t\texternalReachability: {\n\t\t\t\tok: false,\n\t\t\t},\n\t\t};\n\n\t\ttry {\n\t\t\tconst pingResponse = await this.bridge.ping();\n\t\t\tstatus.appservice.roundTrip.durationMs = pingResponse.durationMs;\n\t\t\tstatus.appservice.ok = true;\n\t\t} catch (error) {\n\t\t\tif (error instanceof IncomingMessage) {\n\t\t\t\tif (error.statusCode === 404) {\n\t\t\t\t\tstatus.appservice.error = 'homeserver version must be >=1.84.x';\n\t\t\t\t} else {\n\t\t\t\t\tstatus.appservice.error = `received unknown status from homeserver, message: ${error.statusMessage}`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstatus.appservice.error = extractError(error);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tstatus.externalReachability.ok = await this.canOtherHomeserversFederate();\n\t\t} catch (error) {\n\t\t\tstatus.externalReachability.error = extractError(error);\n\t\t}\n\n\t\treturn status;\n\t}\n\n\tpublic async markConfigurationValid(): Promise<void> {\n\t\treturn this.internalSettingsAdapter.setConfigurationStatus('Valid');\n\t}\n\n\tpublic async markConfigurationInvalid(): Promise<void> {\n\t\treturn this.internalSettingsAdapter.setConfigurationStatus('Invalid');\n\t}\n\n\tpublic async verifyConfiguration(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.bridge?.ping(); // throws error if fails\n\n\t\t\tif (!(await this.canOtherHomeserversFederate())) {\n\t\t\t\tthrow new Error('External reachability could not be verified');\n\t\t\t}\n\n\t\t\tvoid this.markConfigurationValid();\n\t\t} catch (error) {\n\t\t\tfederationServiceLogger.error(error);\n\n\t\t\tvoid this.markConfigurationInvalid();\n\t\t}\n\t}\n\n\tpublic async beforeCreateRoom(room: Partial<IRoom>): Promise<void> {\n\t\tif (!isRoomFederated(room)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthrowIfFederationNotEnabledOrNotReady();\n\t}\n\n\tprotected async deactivateRemoteUser(remoteUserId: string): Promise<void> {\n\t\treturn this.bridge.deactivateUser(remoteUserId);\n\t}\n}\n\nabstract class AbstractBaseFederationService extends AbstractFederationService {\n\tconstructor() {\n\t\tconst internalQueueInstance = FederationFactory.buildFederationQueue();\n\t\tconst internalSettingsAdapter = FederationFactory.buildInternalSettingsAdapter();\n\t\tconst bridge = FederationFactory.buildFederationBridge(internalSettingsAdapter, internalQueueInstance);\n\n\t\tsuper(bridge, internalQueueInstance, internalSettingsAdapter);\n\t}\n\n\tprotected async setupInternalEphemeralListeners(): Promise<void> {\n\t\tawait this.getInternalNotificationAdapter().subscribeToUserTypingEventsOnFederatedRooms(\n\t\t\tthis.getInternalNotificationAdapter().broadcastUserTypingOnRoom.bind(this.getInternalNotificationAdapter()),\n\t\t);\n\t}\n\n\tprotected async setupInternalValidators(): Promise<void> {\n\t\tconst federationRoomInternalValidator = FederationFactory.buildRoomInternalValidator(\n\t\t\tthis.getInternalRoomAdapter(),\n\t\t\tthis.getInternalUserAdapter(),\n\t\t\tthis.getInternalFileAdapter(),\n\t\t\tthis.getInternalSettingsAdapter(),\n\t\t\tthis.bridge,\n\t\t);\n\t\tFederationFactory.setupValidators(federationRoomInternalValidator);\n\t}\n\n\tprotected async setupInternalActionListeners(): Promise<void> {\n\t\tconst federationMessageServiceSender = FederationFactory.buildMessageServiceSender(\n\t\t\tthis.getInternalRoomAdapter(),\n\t\t\tthis.getInternalUserAdapter(),\n\t\t\tthis.getInternalSettingsAdapter(),\n\t\t\tthis.getInternalMessageAdapter(),\n\t\t\tthis.bridge,\n\t\t);\n\t\tFederationFactory.setupListenersForLocalActions(this.getInternalRoomServiceSender(), federationMessageServiceSender);\n\t}\n\n\tprotected async onEnableFederation(): Promise<void> {\n\t\tawait super.setupFederation();\n\t\tawait this.startFederation();\n\t}\n\n\tprotected async onDisableFederation(): Promise<void> {\n\t\tawait this.stopFederation();\n\t}\n\n\tprivate async startFederation(): Promise<void> {\n\t\tif (!this.isFederationEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tawait this.bridge.start();\n\t\tthis.bridge.logFederationStartupInfo('Running Federation V2');\n\t\tawait import('./infrastructure/rocket-chat/slash-commands');\n\t}\n\n\tprivate async stopFederation(): Promise<void> {\n\t\tFederationFactory.removeAllListeners();\n\t\tawait this.bridge.stop();\n\t\tawait super.cleanUpHandlers();\n\t}\n\n\tpublic async stopped(): Promise<void> {\n\t\tawait this.stopFederation();\n\t\tawait super.cleanUpSettingObserver();\n\t}\n\n\tpublic async created(): Promise<void> {\n\t\tawait super.setupFederation();\n\t\tawait this.startFederation();\n\t}\n}\n\nexport class FederationService extends AbstractBaseFederationService implements IFederationService {\n\tprotected name = 'federation';\n\n\tpublic async createDirectMessageRoomAndInviteUser(\n\t\tinternalInviterId: string,\n\t\tinternalRoomId: string,\n\t\texternalInviteeId: string,\n\t): Promise<void> {\n\t\treturn this.getInternalRoomServiceSender().createDirectMessageRoomAndInviteUser(\n\t\t\tFederationRoomSenderConverter.toCreateDirectMessageRoomDto(internalInviterId, internalRoomId, externalInviteeId),\n\t\t);\n\t}\n\n\tpublic async verifyMatrixIds(matrixIds: string[]): Promise<Map<string, string>> {\n\t\treturn super.verifyMatrixIds(matrixIds);\n\t}\n\n\tstatic async createFederationService(): Promise<FederationService> {\n\t\tconst federationService = new FederationService();\n\t\tawait federationService.initialize();\n\t\treturn federationService;\n\t}\n\n\tpublic async stopped(): Promise<void> {\n\t\treturn super.stopped();\n\t}\n\n\tpublic async created(): Promise<void> {\n\t\treturn super.created();\n\t}\n\n\tpublic async verifyConfiguration(): Promise<void> {\n\t\treturn super.verifyConfiguration();\n\t}\n\n\tpublic async markConfigurationValid(): Promise<void> {\n\t\treturn super.markConfigurationValid();\n\t}\n\n\tpublic async markConfigurationInvalid(): Promise<void> {\n\t\treturn super.markConfigurationInvalid();\n\t}\n\n\tpublic async configurationStatus(): Promise<FederationConfigurationStatus> {\n\t\treturn super.configurationStatus();\n\t}\n\n\tpublic async beforeCreateRoom(room: Partial<IRoom>): Promise<void> {\n\t\treturn super.beforeCreateRoom(room);\n\t}\n\n\tpublic async deactivateRemoteUser(userId: string): Promise<void> {\n\t\treturn super.deactivateRemoteUser(userId);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"345ecf5f1b845cec7e74c0b255bc790c3306d3be"}
