{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/lib/SlaHelper.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","topLevelAwait","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.arm64"},"sourceFileName":"ee/app/livechat-enterprise/server/lib/SlaHelper.ts","filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/lib/SlaHelper.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/lib/SlaHelper.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/lib/SlaHelper.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAErE,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AAEzD,MAAM,CAAC,MAAM,kBAAkB,GAAG,KAAK,EAAE,KAAa,EAAE,EAAE;IACzD,MAAM,UAAU,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,gCAAgC,EAAE,EAAE,CAAC,CAAC;IAC7E,MAAM,SAAS,GAAG,MAAM,aAAa,CAAC,eAAe,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;IAC/G,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;QACtB,MAAM,WAAW,GAAa,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;QAC9D,MAAM,eAAe,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IACjD,CAAC;IAED,MAAM,aAAa,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;AACvD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,EAAE,MAAc,EAAE,GAAyE,EAAE,EAAE;IACxI,MAAM,OAAO,GAAG,MAAM,eAAe,CAAC,eAAe,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACjG,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,OAAO;IACR,CAAC;IAED,MAAM,EAAE,gBAAgB,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;IAE7C,MAAM,yBAAyB,GAAG,gBAAgB,CAAC;IAEnD,MAAM,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE;QAChD,KAAK;QACL,yBAAyB;KACzB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,KAAK,EAAE,MAAc,EAAE,GAAyE,EAAE,EAAE;IACvI,MAAM,aAAa,CAAC,iBAAiB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACpD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,EAAE,MAAc,EAAE,EAAE;IAC7D,MAAM,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,EAAE,MAAc,EAAE,EAAE;IACzD,MAAM,aAAa,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACnD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,yBAAyB,GAAG,KAAK,EAC7C,MAAc,EACd,IAA8C,EAC9C,GAAsD,EACrD,EAAE;IACH,MAAM,OAAO,CAAC,iBAAiB,CAAC,gCAAgC,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE;QACnF,OAAO,EAAE;YACR,SAAS,EAAE;gBACV,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACvB;YACD,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,CAAC;SACnB;KACD,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport type { IOmnichannelServiceLevelAgreements, IUser } from '@rocket.chat/core-typings';\nimport { LivechatInquiry, LivechatRooms } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../../lib/callbacks';\n\nexport const removeSLAFromRooms = async (slaId: string) => {\n\tconst extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n\tconst openRooms = await LivechatRooms.findOpenBySlaId(slaId, { projection: { _id: 1 } }, extraQuery).toArray();\n\tif (openRooms.length) {\n\t\tconst openRoomIds: string[] = openRooms.map(({ _id }) => _id);\n\t\tawait LivechatInquiry.bulkUnsetSla(openRoomIds);\n\t}\n\n\tawait LivechatRooms.bulkRemoveSlaFromRoomsById(slaId);\n};\n\nexport const updateInquiryQueueSla = async (roomId: string, sla: Pick<IOmnichannelServiceLevelAgreements, 'dueTimeInMinutes' | '_id'>) => {\n\tconst inquiry = await LivechatInquiry.findOneByRoomId(roomId, { projection: { rid: 1, ts: 1 } });\n\tif (!inquiry) {\n\t\treturn;\n\t}\n\n\tconst { dueTimeInMinutes, _id: slaId } = sla;\n\n\tconst estimatedWaitingTimeQueue = dueTimeInMinutes;\n\n\tawait LivechatInquiry.setSlaForRoom(inquiry.rid, {\n\t\tslaId,\n\t\testimatedWaitingTimeQueue,\n\t});\n};\n\nexport const updateRoomSlaWeights = async (roomId: string, sla: Pick<IOmnichannelServiceLevelAgreements, 'dueTimeInMinutes' | '_id'>) => {\n\tawait LivechatRooms.setSlaForRoomById(roomId, sla);\n};\n\nexport const removeInquiryQueueSla = async (roomId: string) => {\n\tawait LivechatInquiry.unsetSlaForRoom(roomId);\n};\n\nexport const removeSlaFromRoom = async (roomId: string) => {\n\tawait LivechatRooms.removeSlaFromRoomById(roomId);\n};\n\nexport const addSlaChangeHistoryToRoom = async (\n\troomId: string,\n\tuser: Pick<IUser, '_id' | 'name' | 'username'>,\n\tsla?: Pick<IOmnichannelServiceLevelAgreements, 'name'>,\n) => {\n\tawait Message.saveSystemMessage('omnichannel_sla_change_history', roomId, '', user, {\n\t\tslaData: {\n\t\t\tdefinedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tusername: user.username,\n\t\t\t},\n\t\t\t...(sla && { sla }),\n\t\t},\n\t});\n};\n"]},"targets":{"android":"125.0.0","chrome":"125.0.0","edge":"125.0.0","firefox":"115.0.0","ie":"10.0.0","ios":"17.4.0","opera":"110.0.0","opera_mobile":"80.0.0","safari":"17.4.0","samsung":"24.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","root":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true,"topLevelAwait":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"LogicalExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"CatchClause":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"AssignmentExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/Users/guilhermegazzo/dev/Rocket.Chat/apps/meteor/ee/app/livechat-enterprise/server/lib/SlaHelper.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/livechat-enterprise/server/lib/SlaHelper.ts","inputSourceMap":{"version":3,"file":"ee/app/livechat-enterprise/server/lib/SlaHelper.ts","sourceRoot":"","sources":["ee/app/livechat-enterprise/server/lib/SlaHelper.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAErE,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AAEzD,MAAM,CAAC,MAAM,kBAAkB,GAAG,KAAK,EAAE,KAAa,EAAE,EAAE;IACzD,MAAM,UAAU,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,gCAAgC,EAAE,EAAE,CAAC,CAAC;IAC7E,MAAM,SAAS,GAAG,MAAM,aAAa,CAAC,eAAe,CAAC,KAAK,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;IAC/G,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;QACtB,MAAM,WAAW,GAAa,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;QAC9D,MAAM,eAAe,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IACjD,CAAC;IAED,MAAM,aAAa,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;AACvD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,EAAE,MAAc,EAAE,GAAyE,EAAE,EAAE;IACxI,MAAM,OAAO,GAAG,MAAM,eAAe,CAAC,eAAe,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACjG,IAAI,CAAC,OAAO,EAAE,CAAC;QACd,OAAO;IACR,CAAC;IAED,MAAM,EAAE,gBAAgB,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC;IAE7C,MAAM,yBAAyB,GAAG,gBAAgB,CAAC;IAEnD,MAAM,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE;QAChD,KAAK;QACL,yBAAyB;KACzB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,KAAK,EAAE,MAAc,EAAE,GAAyE,EAAE,EAAE;IACvI,MAAM,aAAa,CAAC,iBAAiB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACpD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,EAAE,MAAc,EAAE,EAAE;IAC7D,MAAM,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,EAAE,MAAc,EAAE,EAAE;IACzD,MAAM,aAAa,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACnD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,yBAAyB,GAAG,KAAK,EAC7C,MAAc,EACd,IAA8C,EAC9C,GAAsD,EACrD,EAAE;IACH,MAAM,OAAO,CAAC,iBAAiB,CAAC,gCAAgC,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE;QACnF,OAAO,EAAE;YACR,SAAS,EAAE;gBACV,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACvB;YACD,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,CAAC;SACnB;KACD,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport type { IOmnichannelServiceLevelAgreements, IUser } from '@rocket.chat/core-typings';\nimport { LivechatInquiry, LivechatRooms } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../../lib/callbacks';\n\nexport const removeSLAFromRooms = async (slaId: string) => {\n\tconst extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n\tconst openRooms = await LivechatRooms.findOpenBySlaId(slaId, { projection: { _id: 1 } }, extraQuery).toArray();\n\tif (openRooms.length) {\n\t\tconst openRoomIds: string[] = openRooms.map(({ _id }) => _id);\n\t\tawait LivechatInquiry.bulkUnsetSla(openRoomIds);\n\t}\n\n\tawait LivechatRooms.bulkRemoveSlaFromRoomsById(slaId);\n};\n\nexport const updateInquiryQueueSla = async (roomId: string, sla: Pick<IOmnichannelServiceLevelAgreements, 'dueTimeInMinutes' | '_id'>) => {\n\tconst inquiry = await LivechatInquiry.findOneByRoomId(roomId, { projection: { rid: 1, ts: 1 } });\n\tif (!inquiry) {\n\t\treturn;\n\t}\n\n\tconst { dueTimeInMinutes, _id: slaId } = sla;\n\n\tconst estimatedWaitingTimeQueue = dueTimeInMinutes;\n\n\tawait LivechatInquiry.setSlaForRoom(inquiry.rid, {\n\t\tslaId,\n\t\testimatedWaitingTimeQueue,\n\t});\n};\n\nexport const updateRoomSlaWeights = async (roomId: string, sla: Pick<IOmnichannelServiceLevelAgreements, 'dueTimeInMinutes' | '_id'>) => {\n\tawait LivechatRooms.setSlaForRoomById(roomId, sla);\n};\n\nexport const removeInquiryQueueSla = async (roomId: string) => {\n\tawait LivechatInquiry.unsetSlaForRoom(roomId);\n};\n\nexport const removeSlaFromRoom = async (roomId: string) => {\n\tawait LivechatRooms.removeSlaFromRoomById(roomId);\n};\n\nexport const addSlaChangeHistoryToRoom = async (\n\troomId: string,\n\tuser: Pick<IUser, '_id' | 'name' | 'username'>,\n\tsla?: Pick<IOmnichannelServiceLevelAgreements, 'name'>,\n) => {\n\tawait Message.saveSystemMessage('omnichannel_sla_change_history', roomId, '', user, {\n\t\tslaData: {\n\t\t\tdefinedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tusername: user.username,\n\t\t\t},\n\t\t\t...(sla && { sla }),\n\t\t},\n\t});\n};\n"]}}},"code":"!module.wrapAsync(async function (module, __reifyWaitForDeps__, __reify_async_result__) {\n  \"use strict\";\n  try {\n    let _objectSpread;\n    module.link(\"@babel/runtime/helpers/objectSpread2\", {\n      default(v) {\n        _objectSpread = v;\n      }\n    }, 0);\n    module.export({\n      removeSLAFromRooms: () => removeSLAFromRooms,\n      updateInquiryQueueSla: () => updateInquiryQueueSla,\n      updateRoomSlaWeights: () => updateRoomSlaWeights,\n      removeInquiryQueueSla: () => removeInquiryQueueSla,\n      removeSlaFromRoom: () => removeSlaFromRoom,\n      addSlaChangeHistoryToRoom: () => addSlaChangeHistoryToRoom\n    });\n    let Message;\n    module.link(\"@rocket.chat/core-services\", {\n      Message(v) {\n        Message = v;\n      }\n    }, 0);\n    let LivechatInquiry, LivechatRooms;\n    module.link(\"@rocket.chat/models\", {\n      LivechatInquiry(v) {\n        LivechatInquiry = v;\n      },\n      LivechatRooms(v) {\n        LivechatRooms = v;\n      }\n    }, 1);\n    let callbacks;\n    module.link(\"../../../../../lib/callbacks\", {\n      callbacks(v) {\n        callbacks = v;\n      }\n    }, 2);\n    if (__reifyWaitForDeps__()) (await __reifyWaitForDeps__())();\n    const removeSLAFromRooms = async slaId => {\n      const extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n      const openRooms = await LivechatRooms.findOpenBySlaId(slaId, {\n        projection: {\n          _id: 1\n        }\n      }, extraQuery).toArray();\n      if (openRooms.length) {\n        const openRoomIds = openRooms.map(_ref => {\n          let {\n            _id\n          } = _ref;\n          return _id;\n        });\n        await LivechatInquiry.bulkUnsetSla(openRoomIds);\n      }\n      await LivechatRooms.bulkRemoveSlaFromRoomsById(slaId);\n    };\n    const updateInquiryQueueSla = async (roomId, sla) => {\n      const inquiry = await LivechatInquiry.findOneByRoomId(roomId, {\n        projection: {\n          rid: 1,\n          ts: 1\n        }\n      });\n      if (!inquiry) {\n        return;\n      }\n      const {\n        dueTimeInMinutes,\n        _id: slaId\n      } = sla;\n      const estimatedWaitingTimeQueue = dueTimeInMinutes;\n      await LivechatInquiry.setSlaForRoom(inquiry.rid, {\n        slaId,\n        estimatedWaitingTimeQueue\n      });\n    };\n    const updateRoomSlaWeights = async (roomId, sla) => {\n      await LivechatRooms.setSlaForRoomById(roomId, sla);\n    };\n    const removeInquiryQueueSla = async roomId => {\n      await LivechatInquiry.unsetSlaForRoom(roomId);\n    };\n    const removeSlaFromRoom = async roomId => {\n      await LivechatRooms.removeSlaFromRoomById(roomId);\n    };\n    const addSlaChangeHistoryToRoom = async (roomId, user, sla) => {\n      await Message.saveSystemMessage('omnichannel_sla_change_history', roomId, '', user, {\n        slaData: _objectSpread({\n          definedBy: {\n            _id: user._id,\n            username: user.username\n          }\n        }, sla && {\n          sla\n        })\n      });\n    };\n    __reify_async_result__();\n  } catch (_reifyError) {\n    return __reify_async_result__(_reifyError);\n  }\n  __reify_async_result__()\n}, {\n  self: this,\n  async: false\n});","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","removeSLAFromRooms","updateInquiryQueueSla","updateRoomSlaWeights","removeInquiryQueueSla","removeSlaFromRoom","addSlaChangeHistoryToRoom","Message","LivechatInquiry","LivechatRooms","callbacks","__reifyWaitForDeps__","slaId","extraQuery","run","openRooms","findOpenBySlaId","projection","_id","toArray","length","openRoomIds","map","_ref","bulkUnsetSla","bulkRemoveSlaFromRoomsById","roomId","sla","inquiry","findOneByRoomId","rid","ts","dueTimeInMinutes","estimatedWaitingTimeQueue","setSlaForRoom","setSlaForRoomById","unsetSlaForRoom","removeSlaFromRoomById","user","saveSystemMessage","slaData","definedBy","username","__reify_async_result__","_reifyError","self","async"],"sources":["ee/app/livechat-enterprise/server/lib/SlaHelper.ts"],"sourcesContent":["import { Message } from '@rocket.chat/core-services';\nimport type { IOmnichannelServiceLevelAgreements, IUser } from '@rocket.chat/core-typings';\nimport { LivechatInquiry, LivechatRooms } from '@rocket.chat/models';\n\nimport { callbacks } from '../../../../../lib/callbacks';\n\nexport const removeSLAFromRooms = async (slaId: string) => {\n\tconst extraQuery = await callbacks.run('livechat.applyRoomRestrictions', {});\n\tconst openRooms = await LivechatRooms.findOpenBySlaId(slaId, { projection: { _id: 1 } }, extraQuery).toArray();\n\tif (openRooms.length) {\n\t\tconst openRoomIds: string[] = openRooms.map(({ _id }) => _id);\n\t\tawait LivechatInquiry.bulkUnsetSla(openRoomIds);\n\t}\n\n\tawait LivechatRooms.bulkRemoveSlaFromRoomsById(slaId);\n};\n\nexport const updateInquiryQueueSla = async (roomId: string, sla: Pick<IOmnichannelServiceLevelAgreements, 'dueTimeInMinutes' | '_id'>) => {\n\tconst inquiry = await LivechatInquiry.findOneByRoomId(roomId, { projection: { rid: 1, ts: 1 } });\n\tif (!inquiry) {\n\t\treturn;\n\t}\n\n\tconst { dueTimeInMinutes, _id: slaId } = sla;\n\n\tconst estimatedWaitingTimeQueue = dueTimeInMinutes;\n\n\tawait LivechatInquiry.setSlaForRoom(inquiry.rid, {\n\t\tslaId,\n\t\testimatedWaitingTimeQueue,\n\t});\n};\n\nexport const updateRoomSlaWeights = async (roomId: string, sla: Pick<IOmnichannelServiceLevelAgreements, 'dueTimeInMinutes' | '_id'>) => {\n\tawait LivechatRooms.setSlaForRoomById(roomId, sla);\n};\n\nexport const removeInquiryQueueSla = async (roomId: string) => {\n\tawait LivechatInquiry.unsetSlaForRoom(roomId);\n};\n\nexport const removeSlaFromRoom = async (roomId: string) => {\n\tawait LivechatRooms.removeSlaFromRoomById(roomId);\n};\n\nexport const addSlaChangeHistoryToRoom = async (\n\troomId: string,\n\tuser: Pick<IUser, '_id' | 'name' | 'username'>,\n\tsla?: Pick<IOmnichannelServiceLevelAgreements, 'name'>,\n) => {\n\tawait Message.saveSystemMessage('omnichannel_sla_change_history', roomId, '', user, {\n\t\tslaData: {\n\t\t\tdefinedBy: {\n\t\t\t\t_id: user._id,\n\t\t\t\tusername: user.username,\n\t\t\t},\n\t\t\t...(sla && { sla }),\n\t\t},\n\t});\n};\n"],"mappings":";;;IAAA,IAAAA,aAAgB;IAAEC,MAAM,CAAAC,IAAA,uCAA6B;MAAAC,QAAAC,CAAA;QAAAJ,aAAA,GAAAI,CAAA;MAAA;IAAA;IAArDH,MAAA,CAAOI,MAAE;MAAAC,kBAAe,EAAAA,CAAA,KAAAA,kBAA6B;MAAAC,qBAAA,EAAAA,CAAA,KAAAA,qBAAA;MAAAC,oBAAA,EAAAA,CAAA,KAAAA,oBAAA;MAAAC,qBAAA,EAAAA,CAAA,KAAAA,qBAAA;MAAAC,iBAAA,EAAAA,CAAA,KAAAA,iBAAA;MAAAC,yBAAA,EAAAA,CAAA,KAAAA;IAAA;IAAA,IAAAC,OAAA;IAAAX,MAAA,CAAAC,IAAA;MAAAU,QAAAR,CAAA;QAAAQ,OAAA,GAAAR,CAAA;MAAA;IAAA;IAAA,IAAAS,eAAA,EAAAC,aAAA;IAAAb,MAAA,CAAAC,IAAA;MAAAW,gBAAAT,CAAA;QAAAS,eAAA,GAAAT,CAAA;MAAA;MAAAU,cAAAV,CAAA;QAAAU,aAAA,GAAAV,CAAA;MAAA;IAAA;IAAA,IAAAW,SAAA;IAAAd,MAAA,CAAAC,IAAA;MAAAa,UAAAX,CAAA;QAAAW,SAAA,GAAAX,CAAA;MAAA;IAAA;IAAA,IAAAY,oBAAA,WAAAA,oBAAA;IAM9C,MAAMV,kBAAkB,GAAG,MAAOW,KAAa,IAAI;MACzD,MAAMC,UAAU,GAAG,MAAMH,SAAS,CAACI,GAAG,CAAC,gCAAgC,EAAE,EAAE,CAAC;MAC5E,MAAMC,SAAS,GAAG,MAAMN,aAAa,CAACO,eAAe,CAACJ,KAAK,EAAE;QAAEK,UAAU,EAAE;UAAEC,GAAG,EAAE;QAAC;MAAE,CAAE,EAAEL,UAAU,CAAC,CAACM,OAAO,EAAE;MAC9G,IAAIJ,SAAS,CAACK,MAAM,EAAE;QACrB,MAAMC,WAAW,GAAaN,SAAS,CAACO,GAAG,CAACC,IAAA;UAAA,IAAC;YAAEL;UAAG,CAAE,GAAAK,IAAA;UAAA,OAAKL,GAAG;QAAA,EAAC;QAC7D,MAAMV,eAAe,CAACgB,YAAY,CAACH,WAAW,CAAC;MAChD;MAEA,MAAMZ,aAAa,CAACgB,0BAA0B,CAACb,KAAK,CAAC;IACtD,CAAC;IAEM,MAAMV,qBAAqB,GAAG,MAAAA,CAAOwB,MAAc,EAAEC,GAAyE,KAAI;MACxI,MAAMC,OAAO,GAAG,MAAMpB,eAAe,CAACqB,eAAe,CAACH,MAAM,EAAE;QAAET,UAAU,EAAE;UAAEa,GAAG,EAAE,CAAC;UAAEC,EAAE,EAAE;QAAC;MAAE,CAAE,CAAC;MAChG,IAAI,CAACH,OAAO,EAAE;QACb;MACD;MAEA,MAAM;QAAEI,gBAAgB;QAAEd,GAAG,EAAEN;MAAK,CAAE,GAAGe,GAAG;MAE5C,MAAMM,yBAAyB,GAAGD,gBAAgB;MAElD,MAAMxB,eAAe,CAAC0B,aAAa,CAACN,OAAO,CAACE,GAAG,EAAE;QAChDlB,KAAK;QACLqB;OACA,CAAC;IACH,CAAC;IAEM,MAAM9B,oBAAoB,GAAG,MAAAA,CAAOuB,MAAc,EAAEC,GAAyE,KAAI;MACvI,MAAMlB,aAAa,CAAC0B,iBAAiB,CAACT,MAAM,EAAEC,GAAG,CAAC;IACnD,CAAC;IAEM,MAAMvB,qBAAqB,GAAG,MAAOsB,MAAc,IAAI;MAC7D,MAAMlB,eAAe,CAAC4B,eAAe,CAACV,MAAM,CAAC;IAC9C,CAAC;IAEM,MAAMrB,iBAAiB,GAAG,MAAOqB,MAAc,IAAI;MACzD,MAAMjB,aAAa,CAAC4B,qBAAqB,CAACX,MAAM,CAAC;IAClD,CAAC;IAEM,MAAMpB,yBAAyB,GAAG,MAAAA,CACxCoB,MAAc,EACdY,IAA8C,EAC9CX,GAAsD,KACnD;MACH,MAAMpB,OAAO,CAACgC,iBAAiB,CAAC,gCAAgC,EAAEb,MAAM,EAAE,EAAE,EAAEY,IAAI,EAAE;QACnFE,OAAO,EAAA7C,aAAA;UACN8C,SAAS,EAAE;YACVvB,GAAG,EAAEoB,IAAI,CAACpB,GAAG;YACbwB,QAAQ,EAAEJ,IAAI,CAACI;;QACf,GACGf,GAAG,IAAI;UAAEA;QAAG,CAAE;OAEnB,CAAC;IACH,CAAC;IAACgB,sBAAA;EAAA,SAAAC,WAAA;IAAA,OAAAD,sBAAA,CAAAC,WAAA;EAAA;EAAAD,sBAAA;AAAA;EAAAE,IAAA;EAAAC,KAAA;AAAA","ignoreList":[]},"sourceType":"module","externalDependencies":{},"hash":"7ef49e0c452125499dbc7b68e5f37842f0c6a2cb"}
